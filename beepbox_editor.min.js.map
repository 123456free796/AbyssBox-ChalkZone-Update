{"version":3,"names":["TypePresets","getSampleLoadingStatusName","status","sampleLoadingState","constructor","this","statusTable","urlTable","totalSamples","samplesLoaded","SampleLoadedEvent","Event","super","SampleLoadEvents","EventTarget","sampleLoadEvents","startLoadingSample","url","chipWaveIndex","presetSettings","rawLoopOptions","customSampleRate","sampleLoaderAudioContext","AudioContext","sampleRate","closedSampleLoaderAudioContext","chipWave","Config","chipWaves","rawChipWave","rawChipWaves","rawRawChipWave","rawRawChipWaves","fetch","then","response","ok","arrayBuffer","Promise","reject","Error","decodeAudioData","audioBuffer","samples","centerWave","Array","from","getChannelData","integratedSamples","performIntegral","length","dispatchEvent","close","catch","error","alert","getLocalStorageItem","key","defaultValue","value","localStorage","getItem","loadScript","resolve","willReloadForCustomSamples","script","document","createElement","src","head","appendChild","addEventListener","event","loadBuiltInSamples","set","defaultIntegratedSamples","defaultSamples","name","expression","isSampled","isPercussion","extraSampleDetune","startIndex","index","integratedChipWave","dictionary","chipWaveSamples","kicksample","snaresample","pianosample","WOWsample","overdrivesample","trumpetsample","saxophonesample","orchhitsample","detatchedviolinsample","synthsample","sonic3snaresample","comeonsample","choirsample","overdrivensample","flutesample","legatoviolinsample","tremoloviolinsample","amenbreaksample","pizzicatoviolinsample","timallengruntsample","tubasample","loopingcymbalsample","kickdrumsample","snaredrumsample","closedhihatsample","foothihatsample","openhihatsample","crashsample","pianoC4sample","liverpadsample","marimbasample","susdotwavsample","wackyboxttssample","peppersteak1","peppersteak2","vinyl","slapbass","hdeboverdrive","sunsoftbass","masculinechoir","femininechoir","southtololoche","harp","panflute","krumhorn","timpani","crowdhey","warioland4brass","warioland4organ","warioland4daow","warioland4hourchime","warioland4tick","kirbykick","kirbysnare","kirbybongo","kirbyclick","funkkick","funksnare","funksnareleft","funksnareright","funktomhigh","funktomlow","funkhihatclosed","funkhihathalfopen","funkhihatopen","funkhihatopentip","funkhihatfoot","funkcrash","funkcrashtip","funkride","chipWaveIndexOffset","chipWaveSample","chronoperc1finalsample","synthkickfmsample","woodclicksample","acousticsnaresample","catpaintboxsample","gameboypaintboxsample","mariopaintboxsample","drumpaintboxsample","yoshipaintboxsample","starpaintboxsample","fireflowerpaintboxsample","dogpaintbox","oinkpaintbox","swanpaintboxsample","facepaintboxsample","console","log","wave","sum","i","average","push","Float32Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","cumulative","newWave","getDrumWave","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","round","ultraboxnewchipnoiserand","pow","clz32","b3","b4","b5","b6","b0","b1","b2","white","lastOut","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","min","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","PI","cos","sin","generateSquareWave","phaseWidth","sineWaveLength","centerPoint","generateSawWave","inverse","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","result","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","effectsIncludeNoteFilter","effectsIncludeDistortion","effectsIncludeBitcrusher","effectsIncludePanning","effectsIncludeChorus","effectsIncludeEcho","effectsIncludeReverb","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","octaveMin","octaveMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","raw","newArray","Object","assign","rawChipToIntegrated","firstIndexForSamplesInChipWaveList","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","filterMorphCount","filterSimpleCutRange","filterSimplePeakRange","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","type","delayTicks","vibratoTypes","periodsSeconds","period","arpSpeedScale","unisons","voices","spread","offset","sign","effectNames","effectOrder","noteSizeMax","volumeRange","volumeLogScale","panCenter","panMax","panDelaySecondsMax","chorusRange","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","max","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","algorithms6Op","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","feedbacks6Op","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pulseWidthStepPower","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","pitchOctaves","modCount","maxPitch","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","detuneMin","songDetuneMin","songDetuneMax","sineWaveMask","sineWave","generateSineWave","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","distortionRange","stringSustainRange","stringDecayRate","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","compatibleInstruments","operatorWaves","asin","generateTriWave","drive","generateTrapezoidWave","generateRoundedSineWave","pwmOperatorWaves","barEditorHeight","modulators","pianoName","maxRawVol","newNoteVol","forSong","convertRealFactor","associatedEffect","promptName","promptDesc","ceil","optionalModify","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","preset","generalMidi","midiProgram","nameToPresetValue","presetName","instrumentToPreset","instrument","_a","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","customType","settings","eqFilter","transition","fadeInSeconds","chord","unison","cutoffHz","linearGain","vibrato","isNoise","filterCutoffHz","filterResonance","filterEnvelope","algorithm","feedbackType","feedbackAmplitude","operators","frequency","target","envelope","customChipWave","feedbackEnvelope","noteFilter","reverb","harmonics","stringSustain","midiSubharmonicOctaves","interval","bitcrusherOctave","bitcrusherQuantization","distortion","pulseWidth","chorus","spectrum","pulseEnvelope","drums","pitchShiftSemitones","volume","eqFilterType","eqSimpleCut","eqSimplePeak","eqSubFilters0","clicklessTransition","fastTwoNoteArp","arpeggioSpeed","detuneCents","vibratoDepth","vibratoDelay","vibratoSpeed","vibratoType","pan","panDelay","customChipWaveIntegral","eqSubFilters1","noteFilterType","noteSimpleCut","noteSimplePeak","noteSubFilters0","echoSustain","echoDelayBeats","waveform","noteSubFilters1","aliases","isUsingAdvancedLoopControls","chipWaveLoopStart","chipWaveLoopEnd","chipWaveLoopMode","chipWavePlayBackwards","chipWaveStartOffset","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","createTextNode","isArray","Symbol","iterator","__spread","Element","_d","e_2","_e","setAttribute","join","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","resetColors","colorLookup","clear","getArbitaryChannelColor","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","getComputed","noiseChannels","Number","modChannels","pitchChannels","regex","secondaryChannel","exec","primaryChannel","secondaryNote","primaryNote","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","newChannelColors","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","floor","getComputedChannelColor","song","getChannelColor","pitchChannelCount","noiseChannelCount","has","get","setTheme","theme","themes","undefined","textContent","themeColor","querySelector","Map","forest","canyon","midnight","beachcombing","roe","moonlight","autumn","fruit","sunset","toxic","portal","fusion","nebula","energized","neapolitan","mono","zefbox","harrybox","brucebox","nerdbox","fogbox","foxbox","wackybox","microbox","paandorasbox","slushie","midbox","dogebox2","custom","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","oscilloscopeLineL","oscilloscopeLineR","modTitle","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","disabledNotePrimary","disabledNoteSecondary","scrollBarTest","body","div","clientWidth","classList","add","removeChild","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","width","height","_notches","svg","_handle","_handleHighlight","stroke","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedScrollBarPos","animatePlayhead","_notchSpace","synth","_onScroll","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","barCount","center","capture","passive","changePos","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","render","resized","lineHeight","channelScrollPos","getChannelCount","trackVisibleChannels","String","scrollTop","getChannelHeight","factor","countBits","n","isPowerOf2","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","remove","oldBuffer","size","events","activeEvents","listeners","raise","eventType","eventData","extraEventData","pop","listen","callback","unlisten","lisen","indexOf","splice","unlistenAll","FilterCoefficients","a","b","order","linearGain0thOrder","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","feedback","highPass2ndOrderButterworth","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","start","end","deltaRate","epsilon","clamp","val","validateRange","parseFloatWithDefault","parseFloat","isNaN","parseIntWithDefault","parseInt","encode32BitNumber","buffer","base64IntToCharCode","decode32BitNumber","compressed","charIndex","base64CharCodeToInt","charCodeAt","encodeUnisonSettings","v","o","e","cleanS","cleanSDivided","cleanO","cleanODivided","cleanE","cleanI","convertLegacyKeyToKeyAndOctave","rawKeyIndex","octave","BitFieldReader","source","_bits","_readIndex","read","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","other","encodeBase64","lengthBase64","makeNotePin","time","Note","pitch","fadeout","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","isModChannel","noteArray","mod","volumeCap","getVolumeCapForSetting","modFilterTypes","pointArray","useVol","tick","rhythm","pitchBend","forMod","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","instrumentCount","getMaxInstrumentsPerPatternForChannel","maxNoteCount","beatsPerBar","k","startInterval","pointObject","lowestPitch","highestPitch","Operator","copy","CustomAlgorithm","fromPreset","carriers","modulation","CustomFeedBack","inIndices","SpectrumWave","hash","isHarmonic","markCustomWaveDirty","hashMult","Synth","fittingPowerOfTwo","point","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","value1","value2","octave1","octave2","HarmonicsWave","HarmonicsWaveState","instrumentType","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","performIntegralOld","FilterControlPoint","freq","gain","freqSetting","gainSetting","getHz","getHzFromSettingValue","getSettingValueFromHz","hz","getRoundedSettingValueFromHz","getLinearGain","peakMult","power","neutral","interpolatedPower","getRoundedSettingValueFromLinearGain","toCoefficients","freqMult","getVolumeCompensationMult","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","FilterSettings","controlPoints","controlPointCount","addPoint","controlPoint","filterArray","filterObject","filtersCanMorph","filterA","filterB","lerpFilters","pos","lerpedFilter","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","finalRadians","legacyFilter","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","convertLegacySettingsForSynth","allowFirstOrder","EnvelopeSettings","envelopeObject","Instrument","chipNoise","eqFilterSimpleCut","eqFilterSimplePeak","noteFilterSimpleCut","noteFilterSimplePeak","eqSubFilters","noteSubFilters","fadeIn","fadeOut","envelopeCount","pitchShift","detune","unisonVoices","unisonSpread","unisonOffset","unisonExpression","unisonSign","legacyTieOver","decimalOffset","bitcrusherFreq","echoDelay","algorithm6Op","feedbackType6Op","customAlgorithm","customFeedbackType","LFOtime","nextLFOtime","arpTime","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modInstruments","invalidModulators","spectrumWave","wavePrev","setTypeAndReset","legacySettings","forceSimpleFilter","filterCutoff","legacyFilterEnv","legacyPulseEnv","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","getChord","detuneToCents","fadeInSettingToSeconds","fadeOutSettingToTicks","getDrumsetEnvelope","operatorArray","operator","customFeedback","Float64Array","useSlowerRhythm","legacyGlobalReverb","legacyEffectsNames","transitionProperty","binary","seamless","sudden","hard","smooth","soft","slide","secondsToFadeInSetting","ticksToFadeOutSetting","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","centsToDetune","vibratoProperty","legacyVibratoNames","findIndex","legacyEnvelopeNames","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","modboxWaveNames","sax","guitar","viola","brass","lyre","piccolo","squaretooth","flatline","sandboxWaveNames","euphonium","recorder","contrabass","zefboxWaveNames","squaretal","sawtal","pulse","miscWaveNames","test1","intense","paandorasboxWaveNames","kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","sonic3snare","choir","overdriveguitar","flute","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","marimba","susdotwav","wackyboxtts","rawName","table","potentialChipWaveIndex","feedback6Op","operatorObject","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","frequencyFromPitch","makeEmpty","supportsEnvelopeTarget","envelopeSettings","automationTarget","useControlPointCount","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","Song","string","scaleCustom","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","getNewNoteVolume","isMod","modChannel","modInstrument","vol","tempoIndex","tempo","getVolumeCap","modulator","cap","modSetting","filterType","fromBase64String","initToDefault","modChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","getChannelIsMod","andResetChannels","scale","loopStart","loopLength","patternsPerChannel","title","pattern","bar","toBase64String","bits","_variant","_latestUltraBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","usingSubFilterBitfield","harmonicsBits","encodedLoopMode","encodedReleaseMode","spectrumBits","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","neededModInstrumentIndexBits","instrumentIndex","modFilter","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","fromCharCode","apply","shapeIndex","unshift","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","customSamplesStr","customSamples","slice","_envelopeFromLegacyIndex","legacyIndex","_clearSamples","JSON","parse","substring","variantTest","fromBeepBox","fromJummBox","fromGoldBox","fromUltraBox","_latestBeepboxVersion","_oldestBeepboxVersion","_latestJummBoxVersion","_oldestJummBoxVersion","_latestGoldBoxVersion","_oldestGoldBoxVersion","_oldestUltraBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","willLoadLegacySamplesForOldSongs","compressed_array","replaceAll","shift","_restoreChipWaveListToDefault","willLoadLegacySamples","willLoadNintariboxSamples","willLoadMarioPaintboxSamples","customSampleUrls","customSamplePresets","toLowerCase","parseOldSyntax","_parseAndConfigureCustomSample","customSamplePresetsMap","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","useSlowerArpSpeed","songNameLength","decodeURIComponent","channelCount","instrumentsPerChannel","instrumentsFlagBits","newRhythm","legacyWaves","chipWaveReal","chipWaveCounter","chipWaveForCompat","URL","typeCheck","originalControlPointCount","originalSubfilterControlPointCount","sampleLoopInfoEncodedLength","sampleLoopInfoEncoded","sampleLoopInfo","atob","entry","info","Boolean","pregoldToEnvelope","aa","legacyEffects","legacyEnvelopes","originalValue","unisonSpreadNegative","unisonOffsetNegative","unisonExpressionNegative","unisonSignNegative","nextValue","restoreLimiterDefaults","channelNameLength","carrierCountTemp","tempModArray","freqToGold3","freqToUltraBox","pre3To3g","old","jummToG","byteCount","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","songReverbChannel","songReverbInstrument","songReverbIndex","jumfive","forNoteFilter","detuneScaleNotes","newPattern","newNotes","noteCount","useOldShape","shape","pinCount","initialSize","bendCount","pinObj","intervalIter","isBackwards","restLength","patternIndex","lowestPart","chn","window","location","setTimeout","reload","_isProperUrl","customSampleUrlIndex","urlSliced","isCustomPercussive","customRootKey","presetIsUsingAdvancedLoopControls","presetChipWaveLoopStart","presetChipWaveLoopEnd","presetChipWaveStartOffset","presetChipWaveLoopMode","presetChipWavePlayBackwards","parsedSampleOptions","optionsStartIndex","optionsEndIndex","rawOptions","rawOption","optionCode","charAt","optionData","parsedUrl","sliceForSampleRate","sliceForRootKey","urlWithNamedOptions","namedOptions","pathname","isCustomSampled","rootKey","customSamplePresetSettings","customSamplePreset","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","format","_format","customScale","keyOctave","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","shouldLoadLegacySamples","instrumentObjects","waveName","names","oldNames","veryOldNames","includes","oldScaleNames","enigma","scaleName","letter","toUpperCase","symbol","C","D","E","F","G","A","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","newModChannels","getPattern","getBeatsPerMinute","maxValue","PickedString","delayLine","allPassG","allPassGDelta","shelfA1","shelfA1Delta","shelfB0","shelfB0Delta","shelfB1","shelfB1Delta","delayIndex","allPassSample","allPassPrevInput","shelfSample","shelfPrevInput","fractionalDelaySample","prevDelayLength","delayResetOffset","update","instrumentState","tone","stringIndex","roundedSamplesPerTick","stringDecayStart","stringDecayEnd","allPassCenter","samplesPerSecond","shelfRadians","decayCurveStart","decayCurveEnd","phaseDeltaStart","phaseDeltas","phaseDeltaScale","phaseDeltaScales","phaseDeltaEnd","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","decayRateStart","decayRateEnd","shelfGainStart","shelfGainEnd","expressionDecayStart","expressionDecayEnd","tempFilterStartCoefficients","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","tempFilterEndCoefficients","allPassGEnd","allPassPhaseDelayEnd","shelfA1Start","shelfB0Start","shelfB1Start","shelfPhaseDelayStart","shelfA1End","shelfB0End","shelfB1End","shelfPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","EnvelopeComputer","noteSecondsStart","noteSecondsEnd","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsEnd","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","envelopeStarts","envelopeEnds","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","secondsPerTick","atNoteStart","forceContinueAtStart","tickTimeEnd","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","tmpNoteFilterStart","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","beats","noteSize","noteSizeToVolumeMult","attack","lin","Tone","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","lastInterval","noiseSample","stringSustainStart","stringSustainEnd","phases","directions","chipWaveCompletions","chipWavePrevWaves","chipWaveCompletionsLastWave","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","pickedStrings","noteFilters","noteFilterCount","initialNoteFilterInput1","initialNoteFilterInput2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","envelopeComputer","pickedString","InstrumentState","awake","computed","tonesAddedInThisTick","flushingDelayLines","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","activeModTones","releasedTones","liveInputTones","synthesizer","noisePitchFilterMult","volumeScale","eqFilterVolume","eqFilterVolumeDelta","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInput1","distortionFractionalInput2","distortionFractionalInput3","distortionPrevInput","distortionNextOutput","bitcrusherPrevInput","bitcrusherCurrentOutput","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFilters","eqFilterCount","initialEqFilterInput1","initialEqFilterInput2","panningDelayLine","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPos","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","safeEchoDelaySteps","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","resetAllEffects","compute","getInstrumentSynthFunction","updateWaves","usesDistortion","usesBitcrusher","usesPanning","usesChorus","usesEcho","usesReverb","useDistortionStart","useDistortionEnd","isModActive","getModValue","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","quantizationSettingStart","quantizationSettingEnd","freqStart","freqEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettingsStart","eqFilterSettingsEnd","startPoint","startSimpleFreq","startSimpleGain","endSimpleFreq","endSimpleGain","filterChanges","endPoint","eqFilterSettings","tmpEqFilterStart","tmpEqFilterEnd","mainInstrumentVolume","instrumentVolumeToVolumeMult","mixVolumeEnd","startVal","endVal","eqFilterVolumeStart","eqFilterVolumeEnd","delayInputMultStart","delayInputMultEnd","usePanStart","usePanEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","usePanDelayStart","usePanDelayEnd","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","useChorusStart","useChorusEnd","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","maxEchoMult","averageEchoDelaySeconds","useEchoSustainStart","useEchoSustainEnd","echoMultStart","echoMultEnd","useEchoDelayStart","useEchoDelayEnd","ignoreTicks","tmpEchoDelayOffsetStart","tmpEchoDelayOffsetEnd","maxReverbMult","useReverbStart","useReverbEnd","reverbStart","reverbEnd","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","averageMult","averageReverbDelaySeconds","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","ChannelState","singleSeamlessInstrument","syncSongState","channelState","warmUpSynthesizer","getSamplesPerTick","tmpNoteFilterEnd","dummyArray","isPlayingSong","synthesize","computeLatestModValues","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","beat","currentBar","instrumentIdx","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","setModValue","usedInstruments","tgtPattern","eqFilterParam","noteFilterParam","modulatorAdjust","tgtInstrument","determineInvalidModulators","tgtInstrumentList","str","operatorAmplitudeCurve","playing","recording","isRecording","playheadInternal","remainder","tickSampleCountdown","isAtStartOfTick","prevBar","getSamplesPerBar","getTicksIntoBar","getCurrentPart","getTotalSamples","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","ended","foundMod","find","sort","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getTotalBars","useLoopCount","loopRepeatCount","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","liveInputInstruments","oscRefreshEventTimer","oscEnabled","enableMetronome","countInMetronome","renderingSong","wantToSkip","nextBar","isAtEndOfTick","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","limit","tempMonoInstrumentSampleBuffer","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","outputDataR","performance","now","deactivateAudio","computeDelayBufferSizes","setSong","panningDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","maintainLiveInput","play","pause","startRecording","resetEffects","freeAllTones","volumeStart","volumeEnd","setting","nextVal","isAnyModActive","unsetMod","isFilterModActive","channelIdx","snapToStart","snapToBar","goToBar","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","skipBar","outputBufferLength","playSong","skippedBars","firstSkippedBufferIndex","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","playModTone","barVisited","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","midBeat","periods","samplesPerPeriod","tempAmplitude","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","isInteger","isFinite","freeTone","newTone","releaseTone","toneIndex","toneList","toneCount","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","prevNotes","nextNotes","fillCount","modToneCount","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","oldTone","partsPerBar","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","nextPattern","nextPatternForcesContinueAtStart","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","modSynth","computeChordExpression","chordExpression","intervalScale","secondsPerPart","sampleTime","beatsPerPart","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","chipWaveLength","firstOffset","lastOffset","getOperatorWave","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","tmpNoteFilter","noteFilterSettingsStart","noteFilterSettingsEnd","intervalDiff","chordSizeDiff","pitchShiftScalarStart","pitchShiftScalarEnd","modDetuneStart","modDetuneEnd","vibratoAmplitudeStart","vibratoAmplitudeEnd","vibratoStart","POSITIVE_INFINITY","getLFOAmplitude","ticksUntilVibratoStart","lfoEnd","vibratoDepthEnvelopeEnd","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","noteFilterSettings","drumsetFilterEnvelope","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeStart","amplitudeEnd","amplitudeCurveStart","amplitudeCurveEnd","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","decimalOffsetModStart","decimalOffsetStart","useSustainStart","useSustainEnd","startFreq","unisonEnvelopeStart","unisonEnvelopeEnd","unisonAStart","unisonAEnd","unisonBStart","unisonBEnd","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulatorNumber","feedbackIndices","Function","loopableChipSynth","chipSynth","harmonicsSynth","pulseWidthSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","fm6SynthFunctionCache","wrap","data","chipWaveLoopLength","phaseDeltaA","phaseDeltaB","directionA","directionB","chipWaveCompletionA","chipWaveCompletionB","lastWaveA","lastWaveB","chipWaveCompletionFadeLength","phaseDeltaScaleA","phaseDeltaScaleB","phaseA","phaseB","prevWaveIntegralA","prevWaveIntegralB","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","filters","filterCount","initialFilterInput1","initialFilterInput2","applyFilters","prevWaveA","prevWaveB","sampleIndex","wrapped","waveA","waveB","inputSample","completionFadeA","completionFadeB","nextWaveIntegralA","nextWaveIntegralB","pwia","pwib","phaseA_","phaseB_","output","sanitizeFilters","voiceCount","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","sampleList","voice","lines","usesEqFilter","signature","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","phaseMask","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","referenceDelta","stereoBufferIndex","dotTarget","lerpEndRatio","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","seconds","ticks","lower","upper","cents","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","Change","_noop","_didSomething","isNoop","commit","UndoableChange","reversed","_reversed","_doneForwards","undo","_doForwards","_doBackwards","redo","_isDoneForwards","ChangeGroup","append","change","ChangeSequence","changes","_changes","patternsContainSameInstruments","pattern1Instruments","pattern2Instruments","pattern2Has1Instruments","every","pattern1Has2Instruments","discardInvalidPatternInstruments","uniqueInstruments","Set","unionOfUsedNotes","removeRedundantPins","projectNoteIntoBar","oldNote","timeOffset","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","joinedWithPrevNote","newIntervalOffset","newTimeOffset","tempPin","transformedPin","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","_oldContinuesLastPattern","_newContinuesLastPattern","_finishSetup","firstInterval","firstTime","ChangeCustomWave","oldArray","getCurrentInstrument","comparisonResult","ChangeCustomAlgorythmorFeedback","carry","mode","ChangePreset","newValue","preset1","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","weight","item","selectCurvedDistribution","peak","PotentialFilterPoint","chance","minFreq","maxFreq","centerHz","centerGain","applyFilterPoints","potentialPoints","usedFreqs","potentialPoint","midFreq","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeToggleEffects","toggleFlag","useInstrument","oldValue","wasSelected","ChangePatternNumbers","startChannel","getCurrentPattern","viewedInstrument","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","selectionMin","selectionMax","ChangeCustomScale","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","oldPitchCount","ChangeAddChannel","addedChannelIndex","recalcChannelNames","ChangeRemoveChannel","minIndex","maxIndex","oldMax","ChangeModChannel","ChangeChannelBar","newBar","silently","selection","scrollToSelectedPattern","ChangeUnison","ChangeUnisonVoices","prevUnison","ChangeUnisonSpread","ChangeUnisonOffset","ChangeUnisonExpression","ChangeUnisonSign","ChangeChord","ChangeVibrato","ChangeVibratoDepth","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeClicklessTransition","ChangeAliasing","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangeDecimalOffset","ChangePitchShift","ChangeDetune","ChangeDistortion","ChangeBitcrusherFreq","ChangeBitcrusherQuantization","ChangeStringSustain","ChangeEQFilterType","ChangeNoteFilterType","ChangeEQFilterSimpleCut","ChangeEQFilterSimplePeak","ChangeNoteFilterSimpleCut","ChangeNoteFilterSimplePeak","ChangeFilterAddPoint","isNoteFilter","deletion","_envelopeTargetsAdd","_envelopeIndicesAdd","_envelopeTargetsRemove","_envelopeIndicesRemove","_instrumentNextPreset","_instrumentPrevPreset","_filterSettings","_point","ChangeFilterMovePoint","oldFreq","newFreq","oldGain","newGain","_oldFreq","_newFreq","_oldGain","_newGain","ChangeFilterSettings","oldSettings","useNoteFilter","subFilters","oldSubFilters","_oldSettings","_useNoteFilter","_subFilters","_oldSubFilters","ChangeFadeInOut","_oldFadeIn","_oldFadeOut","_newFadeIn","_newFadeOut","ChangeAlgorithm","ChangeFeedbackType","Change6OpAlgorithm","Change6OpFeedbackType","ChangeOperatorWaveform","operatorIndex","ChangeOperatorPulseWidth","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeAddChannelInstrument","ChangeRemoveChannelInstrument","removedIndex","ChangeViewInstrument","ChangeInstrumentsFlags","newLayeredInstruments","newPatternInstruments","oldLayeredInstruments","oldPatternInstruments","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","noteStart","noteEnd","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangeSetPatternInstruments","ChangeModInstrument","ChangeModSetting","text","tgtChannel","startsWith","substr","record","ChangeModFilter","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_oldPatternInstruments","_bar","_channelIndex","_oldPatternCount","_newPatternCount","_newPatternInstruments","recentPatternInstruments","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevSize","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","ChangeSong","newHash","ChangePatternSelection","resetBoxSelection","prefs","defaultScale","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeKeyOctave","ChangeEchoDelay","ChangeEchoSustain","ChangeChorus","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","notesOutsideScale","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","ChangePan","ChangePanDelay","ChangeSizeBend","bendPart","bendSize","bendInterval","uniformSize","inserted","ChangeChipWave","ChangeChipWaveUseAdvancedLoopControls","ChangeChipWaveLoopMode","ChangeChipWaveLoopStart","ChangeChipWaveLoopEnd","ChangeChipWaveStartOffset","ChangeChipWavePlayBackwards","ChangeNoiseWave","ChangeAddEnvelope","ChangeRemoveEnvelope","ChangeSetEnvelopeTarget","oldTarget","oldIndex","ChangeSetEnvelopeType","button","span","h2","input","br","select","option","BeatsPerBarPrompt","_beatsStepper","step","_conversionStrategySelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","keyCode","setItem","prompt","_validate","lastStrategy","focus","charCode","which","label","ChannelSettingsPrompt","_patternsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","_layeredInstrumentsBox","_patternInstrumentsBox","group","checked","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","stopPropagation","right","clientY","pageY","top","bottom","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","togglePlay","updatePlayButton","whenKeyPressed","innerText","FilterEditor","larger","_responsePath","_indicators","_controlPointPath","_dottedLinePath","_highlight","circle","r","selfUndoSettings","selfUndoHistoryPos","_label","coordText","_pointRadius","_larger","_touchMode","_mouseDragging","_addingPoint","_deletingPoint","_addedType","_selectedIndex","_freqStart","_gainStart","_dragChange","_subfilterIndex","_renderedSelectedIndex","_renderedPointCount","_renderedPointTypes","_renderedPointFreqs","_renderedPointGains","_updatePath","_whenCursorPressed","_updateCursor","lastChangeWas","stringify","subFilter","parsedFilter","_xToFreq","_freqToX","_yToGain","_gainToY","setProspectiveChange","nearestDistance","distance","_findNearestFreqSlot","freqDelta","gainDelta","targetFreq","ignoreIndex","roundedFreq","lowerFreq","upperFreq","tryingLower","foundConflict","currentFreq","_circlePath","cx","cy","radius","reverse","display","controlPointPath","dottedLinePath","pointX","pointY","responsePath","swapToSettings","useHistory","saveSettings","firstFilter","jumpIndex","swapToSubfilter","savedFilter","resetToInitial","swapSubfilterIndices","newIndex","tmp","currFilter","activeMods","displayMods","targetSettings","pointTypes","pointFreqs","pointGains","p","CustomFilterPrompt","filterData","startingFilterData","_filterButtons","_filterButtonContainer","_filterContainer","_editorTitle","_filterCopyButton","d","_filterPasteButton","_filterCopyPasteContainer","_filterCoordinateText","_setSubfilter","doSwap","filterEditor","_copyFilterSettings","filterCopy","_pasteFilterSettings","newIdx","shiftKey","colors","insertBefore","innerHTML","newButton","newSubButton","gcd","z","fraction","fractionLCM","an","ad","bn","bd","lcm","EuclideanRhythmPrompt","_minSteps","_maxSteps","_maxSequences","_maxChannel","_localStorageKey","_sequenceIndex","_renderedSequenceCount","_highlightedSequenceIndex","_startBar","_barAmount","_barsAvailable","_barPreviewBarIndex","_barPreviewWidth","_barPreviewHeight","_clockWidth","_clockHeight","_clockPointMinRadius","_clockPointMaxRadius","_clockPadding","_clockRadius","_sequenceButtons","_sequenceRemoveButton","_sequenceAddButton","_sequenceButtonContainer","_barPreviewBackground","_barPreviewSteps","_barPreviewLabel","_barPreviewGoToFirstButton","_barPreviewGoBackButton","_barPreviewGoForwardButton","_barPreviewGoToLastButton","_clockWire","_clockPoints","_stepsStepper","_pulsesStepper","_rotationStepper","_stepSizeNumeratorStepper","_stepSizeDenominatorStepper","_channelStepper","_pitchStepper","_barAmountStepper","_extendUntilLoopButton","_generateFadingNotesBox","_invertBox","_whenSelectSequence","_whenBarPreviewGoToFirstClicked","_whenBarPreviewGoBackClicked","_whenBarPreviewGoForwardClicked","_whenBarPreviewGoToLastClicked","_whenStepsChanges","_whenPulsesChanges","_whenRotationChanges","_whenStepSizeChanges","_whenChannelChanges","_whenPitchChanges","_whenBarAmountChanges","_whenInvertChanges","_whenGenerateFadingNotesChanges","_whenExtendUntilLoopClicked","firstBar","lastBar","existing","remaining","allNewNotesByChannel","pitchesToBeGenerated","relativeBar","partOffset","sequenceIndex","_sequences","generatedSequence","_generatedSequences","steps","stepSize","stepSizeNumerator","stepSizeDenominator","on","invert","generateFadingNotes","resultingChannel","newResultingBar","newResultingSequence","resultingSequence","firstStep","lastStep","needToAdjustPins","rawStepPartStart","rawStepPartEnd","stepPartStart","stepPartEnd","startPinSize","endPinSize","resultingBarIndex","resultingBar","oldNotes","merged","oldNoteIndex","oldPitch","timeline","noteType","eventGroups","currentEventGroup","heldNotes","mergedStartPart","mergedEndPart","notesToDrop","notesToAdd","setOfPitchesToCommit","eventGroup","mergedNote","theNewNote","theOldNote","mergeableNote","candidatePitch","pitchesToCommit","theNewNoteStartPart","theNewNoteEndPart","startSize","endSize","mergedNoteLength","mergedStartRelativeToOldStart","mergedEndRelativeToOldStart","firstVisibleOldPinIndex","lastVisibleOldPinIndex","leftAdjacentOldPinIndex","rightAdjacentOldPinIndex","oldPinIndex","visibleOldPinIndex","visibleOldPin","correctedTime","firstNewPin","lastNewPin","leftAdjacentOldPin","lineMiddleTime","newSize","rightAdjacentOldPin","lineFirstIntersectionTime","lineLastIntersectionTime","lineLength","firstRatio","lastRatio","firstNewSize","lastNewSize","heldNoteIndex","sequences","barAmount","_generateAllSequences","_generateSequence","pulses","columns","amountToMove","moved","generateEuclideanRhythm","rotation","_generateCurrentSequence","currentSequence","_refreshSequenceWidgets","_reconfigurePulsesStepper","_reconfigurePitchStepper","_render","_renderBarPreview","_renderLabel","_renderClock","beatsPerBarFraction","barAmountFraction","fractionDiv","acc","seq","fractionMul","numerator","denominator","_initialRender","color","beatWidth","beatHeight","w","padding","h","beatElement","_renderSequenceButtons","sequenceButton","oldButton","sequencePitch","pitchNameIndex","shiftDir","hasGeneratedSequence","backgroundColor","centerX","centerY","clockRadius","clockPointRadius","clockPoint","channelColors","secondaryColor","toPushAtTheEnd","partWidth","stepBackgroundElement","x0","y0","x1","y1","x2","y2","x3","y3","stepElement","indicatorOffset","arrowHeight","arrowY","arrowPath","arrow","defaultSteps","defaultPulses","boxSelectionActive","boxSelectionBar","boxSelectionWidth","boxSelectionChannel","boxSelectionHeight","savedData","rawSequences","parsedSequences","rawSequence","_b","_h","_j","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","_addBytes","numBytes","getWriteIndex","rewriteUint32","setUint32","writeUint32","writeUint24","setUint8","writeUint16","setUint16","writeUint8","writeInt8","setInt8","writeMidi7Bits","writeMidiVariableLength","startWriting","writeMidiAscii","toCompactArrayBuffer","defaultMidiPitchBend","analogousDrumMap","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","createObjectURL","revokeObjectURL","href","MouseEvent","open","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","_exportToHtml","disabled","lastExportFormat","samplesToTime","rawSeconds","changeFileName","use","deleteChars","cursorPos","setSelectionRange","_synthesize","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","introIter","sampleCount","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","track","trackStartIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","tempScale","isMinor","numSharps","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","midiChipInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","usesArpeggio","polyphony","noteStartTime","pinTime","pinSize","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinSize","nextPinInterval","midiTick","midiTickTime","linearSize","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","jsonString","fileContents","Layout","setLayout","layout","_layoutMap","small","long","tall","wide","Focus","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_yToAmp","controlPointToHeight","xPos","lastHeight","showFifth","InputBox","_getChange","_value","_oldValue","_whenInput","_whenChange","updateValue","Slider","midTick","ArrayBufferReader","getReadIndex","readUint32","getUint32","readUint24","readUint8","readUint16","getUint16","getUint8","readInt8","getInt8","peakUint8","readMidi7Bits","readMidiVariableLength","nextByte","skipBytes","hasMore","getReaderForNextBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","chunkType","chunkLength","trackReader","nextEventMidiTick","runningStatus","fileFormat","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","noteSizeEvents","tempoChanges","currentMidiTick","MAX_VALUE","anyTrackHasMore","eventStatus","eventChannel","foundTrackEndEvent","lsb","denominatorExponent","microsecondsPerMinute","songTotalBars","quantizeMidiTickToPart","channelPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiNoteSize","pitchBendEventIndex","noteSizeEventIndex","updateCurrentMidiInterval","updateCurrentMidiNoteSize","instrumentByProgram","prevEventMidiTick","pitchSum","createdNote","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keySize","prevPinIndex","prevPartPitch","prevPartSize","noteRelativePart","lastPart","partPitch","partSize","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestSize","sizeIsNearInteger","sizeCrossedInteger","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","furthestSizeDistance","addSizePin","addSizePinAtIndex","interpolatedSize","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","tempoModChannel","tempoModInstrument","tempoModPitch","prevChangeEndPart","changeIndex","changeStartMidiTick","changeStartPart","changeEndMidiTick","changeEndPart","newBPM","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","some","form","LayoutPrompt","_form","_confirm","elements","EnvelopeEditor","_rows","_targetSelects","_envelopeSelects","_deleteButtons","_renderedEnvelopeCount","_renderedEqFilterCount","_renderedNoteFilterCount","_renderedEffects","_onChange","targetSelectIndex","envelopeSelectIndex","combinedValue","selectedIndex","_onClick","_makeOption","_updateTargetOptionVisibility","menu","optionIndex","childElementCount","hidden","targetSelect","interleaved","envelopeSelect","deleteButton","row","_renderedInstrumentType","FadeInOutEditor","_fadeCurve","_controlCurve","_mouseXStart","_draggingFadeIn","_renderedFadeIn","_renderedFadeOut","_xToFadeIn","_xToFadeOut","dottedLineX","_fadeOutToX","_fadeInToX","fadeInX","fadeOutX","fadePath","LimiterCanvas","lim","_boostCurve","_boostDot","_midCurve","_limitCurve","_limitDot","_label0","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","animateVolume","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","CustomScalePrompt","_flags","_scaleFlags","_scaleRows","scaleHolder","LoopEditor","_startMode","_endMode","_bothMode","_loop","_barWidth","_cursor","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_documentChanged","watch","_findEndPoints","middle","endPoints","autoFollow","showHighlight","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_cornerFiller","_buttons","_channelCounts","_channelNameDisplay","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","insertChannel","refocusStage","_onMouseMove","_onMouseLeave","onKeyUp","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedVisibleOctaveCount","_barBottom","_barHeight","visibleOctaveCount","getVisibleOctaveCount","scrollableOctaves","canReplaceLastChange","currentOctave","getBaseVisibleOctave","forceRender","showUpHighlight","showDownHighlight","toString","MidiInputHandler","_takeMidiHandlerFocus","_handleStateChange","port","state","_registerMidiInput","_unregisterMidiInput","midiInput","_onMidiMessage","clearAllPitches","enableMidi","isDrum","addPerformedPitch","removePerformedPitch","registerMidiAccessHandler","requestMIDIAccess","midiAccess","inputs","forEach","KeyboardLayout","keyPosToPitch","keyboardLayout","forcedKey","scaleIndices","flag","_pianoAtC","_pianoAtA","keyOffset","_possiblyPlayingPitchesFromKeyboard","_onWindowBlur","handleKeyEvent","pressed","code","handleKey","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","_svgPreview","modDragValueLabel","contenteditable","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragSize","_dragVisible","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","notifyWatchers","playheadBar","modPlayhead","currentPatternIsDirty","_redrawNotePatterns","ctrlKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","setTemporaryPitches","rectangle","rhythmStepsPerBeat","_getMinDivision","_snapToMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","_cursorIsInSelection","_cursorAtStartOfSelection","_cursorAtEndOfSelection","pixelY","_pitchCount","guess","topPitch","bottomPitch","topRange","bottomRange","movePlayheadToMouse","stopEditingModLabel","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","_updateSelection","dx","dy","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","sizeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","getVisiblePitchCount","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","showChannels","pattern2","notePath","displayNumberedChords","colorPrimary","colorSecondary","oscillatorLabel","svgElement","showSize","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextSize","Piano","_renderedScale","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedKey","_renderedPitchCount","_renderedLiveInputPitches","_updateCursorPitch","_playLiveInput","_whenMouseReleased","_releaseLiveInput","_onAnimationFrame","liveInputChanged","liveInputPitchCount","pitchesAreTemporary","showLetters","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","channelVal","instrumentsLength","insText","absoluteChannelVal","relativeChannelVal","filterVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","pianoLabel","pianoKey","background","getPitchName","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","pitchHeight","child","scaleIndex","baseVisibleOctave","SongDurationPrompt","_barsStepper","_positionSelect","lastPosition","versionPrefix","keyToVersion","versionToKey","generateUid","compareSongs","versions","compareVersions","SongRecovery","_song","getAllRecoveredSongs","songs","songsByUid","itemKey","uid","saveVersion","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","RecordingSetupPrompt","_keyboardMode","_keyboardLayout","_keyboardLayoutPreview","_enableMidi","_showRecordButton","_snapRecordedNotesToRhythm","_ignorePerformedNotesNotInScale","_metronomeCountIn","_metronomeWhileRecording","pressControlForShortcuts","showRecordButton","snapRecordedNotesToRhythm","ignorePerformedNotesNotInScale","metronomeCountIn","metronomeWhileRecording","_renderKeyboardLayoutPreview","rowLengths","rowIndex","spacer","colIndex","scalePitch","border","SpectrumEditor","_spectrumIndex","_arrow","doReload","CustomPrompt","_pattern2","_pattern3","_fileInput2","_colorInput","_reset","backgroundImage","secondImage","getElementById","_whenColorsChanged","colorTheme","base64","readAsDataURL","_whenFileSelected2","ThemePrompt","_themeSelect","lastTheme","_previewTheme","h3","TipPrompt","_closeButton","modNum","pList","Box","_x","_y","_text","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","setSize","setIndex","dim","selected","TrackEditor","_barDropDown","_boxContainer","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","lastChild","selectedPattern","box","pathLeft","editorHeight","oscilascopeCanvas","canvas","_EventUpdateCanvas","directlinkL","directlinkR","ctx","getContext","fillStyle","fillRect","yl","yr","defaultShapeFunction","cnv","VisualLoopControlsHandle","canvasWidth","canvasHeight","viewportX0","viewportX1","validator","whenValueChanges","whenMouseUpHappens","shapeFunction","_handleWidth","_handleDragOffset","_context","_validator","vx0","_viewportX0","vx1","_viewportX1","clearRect","bw","bh","bx","_shapeFunction","updateViewport","_whenMouseMoves","_canvasWidth","bounds","canvasXScale","wmx","_whenValueChanges","_whenMouseIsDown","mx","bx0","_whenMouseIsUp","_whenMouseUpHappens","_whenTouchMoves","_whenTouchIsDown","_whenTouchIsUp","_canvasHeight","VisualLoopControlsPrompt","_waveformCanvasWidth","_waveformCanvasHeight","_handleCanvasHeight","_waveformData","_waveformDataLength","_initialChipWaveLoopMode","_initialChipWaveStartOffset","_initialChipWaveLoopStart","_initialChipWaveLoopEnd","_initialChipWavePlayBackwards","_chipWaveLoopMode","_chipWaveStartOffset","_chipWaveLoopStart","_chipWaveLoopEnd","_chipWavePlayBackwards","_waveformViewportX0","_waveformViewportX1","_waveformViewportY0","_waveformViewportY1","_waveformViewportWidth","_waveformViewportOffset","_waveformViewportMaxOffset","_overlayIsMouseDown","_overlaySelectionX0","_overlaySelectionX1","_startOffsetValidator","_loopStartValidator","_loopEndValidator","_startOffsetHandle","_renderOverlay","_reconfigureLoopControls","gotMouseUp","th","beginPath","moveTo","lineTo","_loopStartHandle","tw","_loopEndHandle","_chipWaveIsUnavailable","_waveformCanvas","_waveformContext","_overlayCanvas","_overlayContext","_waveformContainer","_viewportOffsetSlider","_zoomInButton","_zoomOutButton","_zoom100Button","_loopModeSelect","_startOffsetStepper","_loopStartStepper","_loopEndStepper","_playBackwardsBox","_playSongButton","_sampleIsLoadingMessage","_loopControlsContainer","_waveformSampleLookup","_waveformSamplesLookup","_whenViewportOffsetSliderChanges","_whenZoomInClicked","_whenZoomOutClicked","_whenZoom100Clicked","_whenLoopModeSelectChanges","_whenStartOffsetStepperChanges","_whenLoopStartStepperChanges","_whenLoopEndStepperChanges","_whenPlayBackwardsBoxChanges","_togglePlaySong","_whenOverlayMouseMoves","_whenOverlayMouseIsDown","_whenOverlayMouseIsUp","_whenOverlayTouchIsDown","_whenOverlayTouchMoves","_whenOverlayTouchIsUp","_updatePlaySongButton","_renderWaveform","vy0","vy1","sampleWidth","waveformColor","strokeStyle","lineWidth","firstMove","wx","pcy0","pcy1","wy0","wy1","cy0","cy1","cy0i","cy1i","ocy0","ocy1","so","ls","le","obx","obh","globalAlpha","lbx0","lbx","lbw","lbh","rawOffset","newViewportOffset","_propagateViewportUpdate","newViewportWidth","zoomAreaIsTooSmall","wosx0","wosx1","verticalBounds","maxVerticalBound","SampleLoadingStatusPrompt","_intervalDuration","_interval","_renderedWhenAllHaveStoppedChanging","_statusesContainer","_noSamplesMessage","clearInterval","hasNoCustomSamples","allHaveStoppedChanging","sampleName","loadingStatus","urlDisplay","loadingStatusColor","loadingStatusDisplay","chipWaveElement","setInterval","textarea","details","summary","ul","li","AddSamplesPrompt","_maxSamples","_entries","_entryOptionsDisplayStates","_addSampleButton","_entryContainer","_addMultipleSamplesButton","_addSamplesAreaBottom","_instructionsLink","_description","_closeInstructionsButton","_instructionsArea","_addSamplesArea","_bulkAddTextarea","_bulkAddConfirmButton","_bulkAddArea","_whenAddSampleClicked","_whenAddMultipleSamplesClicked","_whenBulkAddConfirmClicked","_whenInstructionsLinkClicked","_whenCloseInstructionsButtonClicked","urlData","_generateURLData","entryIndex","percussion","_reconfigureAddSampleButton","parsed","_parseURLs","seen","_whenOptionsAreToggled","dataset","_whenURLChanges","sampleNameElement","_getSampleName","_whenSampleRateChanges","_whenRootKeyChanges","rootKeyDisplay","noteName","_noteNameFromPitchNumber","_whenPercussionChanges","_whenChipWaveLoopStartChanges","_whenChipWaveLoopEndChanges","_whenChipWaveStartOffsetChanges","_whenChipWaveLoopModeChanges","_whenChipWavePlayBackwardsChanges","_whenCopyLinkPresetClicked","_copyTextToClipboard","_generateURLDataForEntry","_whenRemoveSampleClicked","_whenMoveSampleUpClicked","upEntryIndex","upEntry","upEntryOptionsVisibility","entryOptionsVisibility","_whenMoveSampleDownClicked","downEntryIndex","downEntry","downEntryOptionsVisibility","urls","useLegacySamples","useNintariboxSamples","useMarioPaintboxSamples","parsedEntries","urlInLowerCase","isBundledSamplePack","scrollToBottom","canMoveUp","canMoveDown","optionsVisible","urlInput","sampleRateStepper","rootKeyStepper","percussionBox","chipWaveLoopStartStepper","chipWaveLoopEndStepper","chipWaveStartOffsetStepper","chipWaveLoopModeSelect","chipWavePlayBackwardsBox","copyLinkPresetButton","removeButton","moveUpButton","moveDownButton","optionsContainer","bottomButtons","entryElement","thisIsTheLastElement","scrollIntoView","block","inline","nav","clipboard","writeText","textField","succeeded","execCommand","preventScroll","optgroup","buildOptions","items","buildPresetOptions","idSet","randomGroup","firstCategoryGroup","customSampleCategoryGroup","foundAny","moveViolin2","moveFlute2","moveGrandPiano2","parent","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","_onMouseDown","_onMouseUp","redrawCanvas","CustomAlgorythmCanvas","yindex","xindex","drawArray","fillText","newmod","check","newMods","lookUpArray","inverseModulation","inverseFeedback","fillDrawArray","noReset","oldMods","oldfeed","testPos","drawLines","off","tar","srtpos","tarpos","side","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_pauseButton","_recordButton","_stopButton","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","_editMenu","_optionsMenu","_scaleSelect","_keySelect","_octaveStepper","_tempoSlider","_tempoStepper","_chorusSlider","_chorusRow","onclick","_openPrompt","_reverbSlider","_reverbRow","_echoSustainSlider","_echoSustainRow","_echoDelaySlider","_echoDelayRow","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","_instrumentButtons","_instrumentAddButton","_instrumentRemoveButton","_instrumentsButtonBar","_instrumentsButtonRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_chipWaveSelect","_chipNoiseSelect","_useChipWaveAdvancedLoopControlsBox","_chipWaveLoopModeSelect","_chipWaveLoopStartStepper","_chipWaveLoopEndStepper","_setChipWaveLoopEndToEndButton","_chipWaveStartOffsetStepper","_chipWavePlayBackwardsBox","_chipWaveSelectRow","_chipNoiseSelectRow","_visualLoopControlsButton","_useChipWaveAdvancedLoopControlsRow","_chipWaveLoopModeSelectRow","_chipWaveLoopStartRow","_chipWaveLoopEndRow","_chipWaveStartOffsetRow","_chipWavePlayBackwardsRow","_fadeInOutEditor","_fadeInOutRow","_transitionSelect","_transitionDropdown","_transitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_eqFilterSimpleButton","_switchEQFilterType","_eqFilterAdvancedButton","_eqFilterTypeRow","_eqFilterEditor","_eqFilterZoom","_eqFilterRow","_eqFilterSimpleCutSlider","_eqFilterSimpleCutRow","_eqFilterSimplePeakSlider","_eqFilterSimplePeakRow","_noteFilterSimpleButton","_switchNoteFilterType","_noteFilterAdvancedButton","_noteFilterTypeRow","_noteFilterEditor","_noteFilterZoom","_noteFilterRow","_noteFilterSimpleCutSlider","_noteFilterSimpleCutRow","_noteFilterSimplePeakSlider","_noteFilterSimplePeakRow","_pulseWidthSlider","_pulseWidthDropdown","_pulseWidthRow","_decimalOffsetSlider","_decimalOffsetRow","_pulseWidthDropdownGroup","_pitchShiftSlider","_pitchShiftTonicMarkers","_pitchShiftFifthMarkers","_pitchShiftMarkerContainer","_pitchShiftRow","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_distortionSlider","_distortionRow","_aliasingBox","_aliasingRow","_bitcrusherQuantizationSlider","_bitcrusherQuantizationRow","_bitcrusherFreqSlider","_bitcrusherFreqRow","_stringSustainSlider","_stringSustainRow","_unisonDropdown","_unisonSelect","_unisonSelectRow","_unisonVoicesInputBox","_unisonVoicesRow","_unisonSpreadInputBox","_unisonSpreadRow","_unisonOffsetInputBox","_unisonOffsetRow","_unisonExpressionInputBox","_unisonExpressionRow","_unisonSignInputBox","_unisonSignRow","_unisonDropdownGroup","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_envelopeEditor","_drumsetGroup","_modulatorGroup","_feedback6OpTypeSelect","_feedback6OpRow1","_algorithmCanvasSwitch","_toggleAlgorithmCanvas","_customAlgorithmCanvas","_algorithm6OpSelect","_algorithm6OpSelectRow","_instrumentCopyButton","_instrumentPasteButton","_globalOscscope","_globalOscscopeContainer","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackRow2","_addEnvelopeButton","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentTypeSelectRow","_instrumentSettingsGroup","_usedPatternIndicator","_usedInstrumentIndicator","_jumpToModIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackVisibleArea","_trackAndMuteContainer","_trackArea","_menuArea","_sampleLoadingBar","_sampleLoadingBarContainer","_sampleLoadingStatusContainer","_songSettingsArea","_instrumentSettingsArea","_settingsArea","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_highlightedInstrumentIndex","_renderedInstrumentCount","_renderedIsPlaying","_renderedIsRecording","_renderedShowRecordButton","_renderedCtrlHeld","_ctrlHeld","_deactivatedInstruments","_operatorRows","_operatorAmplitudeSliders","_operatorFrequencySelects","_operatorDropdowns","_operatorWaveformSelects","_operatorWaveformHints","_operatorWaveformPulsewidthSliders","_operatorDropdownRows","_operatorDropdownGroups","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","_openOperatorDropdowns","_openPulseWidthDropdown","_openUnisonDropdown","lastOutVolumeCap","_whenSampleLoadingStatusClicked","_onFocusIn","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","showOscilloscope","showSampleLoadingStatus","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","effectFlag","_usageCheck","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","unusedSettingList","tgtInstrumentTypes","anyInstrumentAdvancedEQ","anyInstrumentSimpleEQ","anyInstrumentAdvancedNote","anyInstrumentSimpleNote","anyInstrumentArps","anyInstrumentPitchShifts","anyInstrumentDetunes","anyInstrumentVibratos","anyInstrumentNoteFilters","anyInstrumentDistorts","anyInstrumentBitcrushes","anyInstrumentPans","anyInstrumentChorus","anyInstrumentEchoes","anyInstrumentReverbs","allInstrumentNoteFilters","allInstrumentDetunes","allInstrumentVibratos","allInstrumentDistorts","allInstrumentBitcrushes","allInstrumentPans","allInstrumentChorus","allInstrumentEchoes","allInstrumentReverbs","instrumentCandidates","_whenSetModSetting","_modTargetIndicators","tmpCount","dotCount","isSimple","_modFilterBoxes","dotList","useName","chordIndex","hasAttribute","_renderInstrumentBar","show","isCarrier","operatorName","marker","_setPrompt","addedEffect","envButtonRect","instSettingsRect","settingsRect","addedEnvelope","scrollHeight","pointerEvents","opacity","_disableCtrlContextMenu","_tempoStepperCaptureNumberKeys","metaKey","_toggleRecord","needControlForShortcuts","getModifierState","canPlayNotes","cutNotes","_copyInstrument","deleteChannel","selectChannel","selectAll","duplicatePatterns","altKey","visibleOctaves","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","_pasteInstrument","pasteNotes","panningEffectIndex","_randomGenerated","_randomPreset","swapChannels","scrollToEndOfSelection","nextDigit","instrumentDigits","_whenKeyReleased","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetOctave","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetAlgorithm","_whenSet6OpFeedbackType","_whenSet6OpAlgorithm","_whenSelectInstrument","selectInstrument","_whenSetModChannel","previouslyUnset","setModChannel","setModInstrument","_whenSetModInstrument","invalidIndex","selectedOptions","setModSetting","_whenClickModTarget","_whenClickJumpToModTarget","modChannelIdx","patternIdx","modInstrumentIdx","_whenSetModFilter","setModFilter","_whenSetChipWave","_whenSetUseChipWaveAdvancedLoopControls","_whenSetChipWaveLoopMode","_whenSetChipWaveLoopStart","_whenSetChipWaveLoopEnd","_whenSetChipWaveLoopEndToEnd","_whenSetChipWaveStartOffset","_whenSetChipWavePlayBackwards","_whenSetNoiseWave","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetUnison","_whenSetChord","_addNewEnvelope","_zoomIn","_zoomOut","_fileMenuHandler","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","_customWavePresetHandler","customWaveArray","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","waveformSelect","waveformDropdown","waveformDropdownHint","waveformPulsewidthSlider","waveformDropdownRow","waveformDropdownGroup","spectrumEditor","_modNameRows","_modSetRows","_modFilterRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modFilterBox","modSetRow","modFilterRow","modTarget","thisRef","bind","_updateSampleLoadingBar","autoPlayOption","screen","availWidth","layoutOption","percent","dropdown","submenu","anyModActive","updateModSlider","editor","slider","currentVal","_getSliderForModSetting","anySliderActive","openPrompt","maxInstrumentsPerChannel","instrumentButton","instrumentUsed","patternUsed","modUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","toSimple","SongPerformance","_channelIsDrum","_channelOctave","_songKey","_pitchesAreTemporary","_recentlyAddedPitches","_songLengthWhenRecordingStarted","_playheadPart","_playheadPattern","_pitchesChanged","_lastNote","_recordingChange","_updateRecordedNotes","_lastBarHasPatterns","_getCurrentPlayheadPart","abortRecording","oldPart","oldPlayheadPart","newPart","dirty","startPart","endPart","addedAlreadyReleasedPitch","erasePatternInBar","recentPitch","recentIndex","Selection","_changeTranspose","_changeTrack","_changeInstrument","_changeReorder","toJSON","fromJSON","json","hasRedoHistory","digit","forInstrument","forRhythms","insertIndex","_eachSelectedChannel","_eachSelectedPattern","_eachSelectedBar","handledPatterns","_parseCopiedInstrumentArray","patternCopy","_patternIndexIsUnused","patternNumber","channelCopy","selectionCopy","partDuration","_remapToNoisePitches","oldPitches","notePitchIndex","_convertCopiedPitchNotesToNoiseNotes","newNotePitches","oldNotePins","newNotePins","notePinIndex","newNoteStart","newNoteEnd","newNoteContinuesLastPattern","cutHeight","cutWidth","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","channelIsNoise","isPitch","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","instrumentsCopy","pastedNotes","existingPattern","removedPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","currentChannel","soloPattern","matchesSoloPattern","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","customScaleFlags","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","stack","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","possibleSectionBoundaries","channelSectionMin","channelSectionMax","nextBoundary","newSelectionMin","newSelectionMax","maxLayers","Preferences","defaultVisibleOctaves","instrumentCopyPaste","customTheme","customTheme2","ChangeNotifier","_watchers","_dirty","watcher","unwatch","SongDocument","_recovery","_recentChange","_sequenceNumber","_lastSequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","_cleanDocument","_validateDocState","highlightedPattern","_updateHistoryState","sessionStorage","songString","_calcVolume","eventName","replaceState","pushState","currentIndex","oldestIndex","_maximumUndoHistory","_forward","forward","_back","back","newSong","barOffset","getMobileLayout","innerWidth","squashed","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","css","groups","each","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../editor/BarScrollBar.ts","../synth/FFT.ts","../synth/Deque.ts","../global/Events.ts","../synth/filtering.ts","../synth/synth.ts","../editor/Change.ts","../editor/changes.ts","../editor/BeatsPerBarPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/CustomChipPrompt.ts","../editor/FilterEditor.ts","../editor/CustomFilterPrompt.ts","../editor/EuclidgenRhythmPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/Midi.ts","../editor/ExportPrompt.ts","../editor/Layout.ts","../editor/HarmonicsEditor.ts","../editor/HTMLWrapper.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/LayoutPrompt.ts","../editor/EnvelopeEditor.ts","../editor/FadeInOutEditor.ts","../editor/LimiterPrompt.ts","../editor/CustomScalePrompt.ts","../editor/LoopEditor.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/MuteEditor.ts","../editor/OctaveScrollBar.ts","../editor/MidiInput.ts","../editor/KeyboardLayout.ts","../editor/PatternEditor.ts","../editor/Piano.ts","../editor/SongDurationPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/RecordingSetupPrompt.ts","../editor/SpectrumEditor.ts","../editor/CustomPrompt.ts","../editor/ThemePrompt.ts","../editor/TipPrompt.ts","../editor/TrackEditor.ts","../global/Oscilascope.ts","../editor/VisualLoopControlsPrompt.ts","../editor/SampleLoadingStatusPrompt.ts","../editor/AddSamplesPrompt.ts","../editor/SongEditor.ts","../editor/SongPerformance.ts","../editor/Selection.ts","../editor/Preferences.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"sourcesContent":["/*!\nCopyright (c) 2012-2022 John Nesky and contributing authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\nexport interface Dictionary<T> {\n    [K: string]: T;\n}\n\n// @TODO: Not ideal to make this writable like this.\n// export interface DictionaryArray<T> extends ReadonlyArray<T> {\nexport interface DictionaryArray<T> extends Array<T> {\n    dictionary: Dictionary<T>;\n}\n\nexport const enum FilterType {\n    lowPass,\n    highPass,\n    peak,\n    length,\n}\n\nexport const enum EnvelopeType {\n\tnoteSize,\n    none,\n\tpunch,\n\tflare,\n\ttwang,\n\tswell,\n\ttremolo,\n\ttremolo2,\n    decay,\n    wibble,\n    hard,\n    linear,\n    rise,\n}\n\nexport const enum InstrumentType {\n    chip,\n    fm,\n    noise,\n    spectrum,\n    drumset,\n    harmonics,\n    pwm,\n    pickedString,\n    customChipWave,\n    mod,\n\tfm6op,\n    length,\n}\n\nexport const TypePresets: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"chip (custom)\", \"mod\", \"FM (6-op)\"];\n\nexport const enum DropdownID {\n    Vibrato = 0,\n    Pan = 1,\n    Chord = 2,\n    Transition = 3,\n    FM = 4,\n    PulseWidth = 5,\n    Unison = 6,\n\n}\n\nexport const enum EffectType {\n    reverb,\n    chorus,\n    panning,\n    distortion,\n    bitcrusher,\n    noteFilter,\n    echo,\n    pitchShift,\n    detune,\n    vibrato,\n    transition,\n    chord,\n    // If you add more, you'll also have to extend the bitfield used in Base64 which currently uses two six-bit characters.\n    length,\n}\n\nexport const enum EnvelopeComputeIndex {\n    noteVolume,\n    noteFilterAllFreqs,\n    pulseWidth,\n    stringSustain,\n    unison,\n    operatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3, operatorFrequency4, operatorFrequency5,\n    operatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3, operatorAmplitude4, operatorAmplitude5,\n    feedbackAmplitude,\n    pitchShift,\n    detune,\n    vibratoDepth,\n    noteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\n    noteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\n    decimalOffset,\n    length,\n}\n\n/*\nexport const enum InstrumentAutomationIndex {\n    mixVolume,\n    eqFilterAllFreqs,\n    eqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\n    eqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\n    distortion,\n    bitcrusherQuantization,\n    bitcrusherFrequency,\n    panning,\n    chorus,\n    echoSustain,\n    //echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\n    reverb,\n    length,\n}\n*/\n\nexport interface BeepBoxOption {\n    readonly index: number;\n    readonly name: string;\n}\n\nexport interface Scale extends BeepBoxOption {\n    readonly flags: ReadonlyArray<boolean>;\n    readonly realName: string;\n}\n\nexport interface Key extends BeepBoxOption {\n    readonly isWhiteKey: boolean;\n    readonly basePitch: number;\n}\n\nexport interface Rhythm extends BeepBoxOption {\n    readonly stepsPerBeat: number;\n    readonly roundUpThresholds: number[] | null;\n}\n\nexport interface ChipWave extends BeepBoxOption {\n    readonly expression: number;\n    samples: Float32Array;\n    isPercussion?: boolean;\n    isCustomSampled?: boolean;\n    isSampled?: boolean;\n    extraSampleDetune?: number;\n    rootKey?: number;\n    sampleRate?: number;\n}\n\nexport interface OperatorWave extends BeepBoxOption {\n    samples: Float32Array;\n}\n\nexport interface ChipNoise extends BeepBoxOption {\n    readonly expression: number;\n    readonly basePitch: number;\n    readonly pitchFilterMult: number;\n    readonly isSoft: boolean;\n    samples: Float32Array | null;\n}\n\nexport interface Transition extends BeepBoxOption {\n    readonly isSeamless: boolean;\n    readonly continues: boolean;\n    readonly slides: boolean;\n    readonly slideTicks: number;\n    readonly includeAdjacentPatterns: boolean;\n}\n\nexport interface Vibrato extends BeepBoxOption {\n    readonly amplitude: number;\n    readonly type: number;\n    readonly delayTicks: number;\n}\n\nexport interface VibratoType extends BeepBoxOption {\n    readonly periodsSeconds: number[];\n    readonly period: number;\n}\n\nexport interface Unison extends BeepBoxOption {\n    readonly voices: number;\n    readonly spread: number;\n    readonly offset: number;\n    readonly expression: number;\n    readonly sign: number;\n}\n\nexport interface Modulator extends BeepBoxOption {\n    readonly name: string; // name that shows up in song editor UI\n    readonly pianoName: string; // short name that shows up in mod piano UI\n    readonly maxRawVol: number; // raw\n    readonly newNoteVol: number; // raw\n    readonly forSong: boolean; // true - setting is song scope\n    convertRealFactor: number; // offset that needs to be applied to get a \"real\" number display of value, for UI purposes\n    readonly associatedEffect: EffectType; // effect that should be enabled for this modulator to work properly. If unused, set to EffectType.length.\n    readonly promptName: string; // long-as-needed name that shows up in tip prompt\n    readonly promptDesc: string[]; // paragraph(s) describing how to use this mod\n    optionalModify?: string;\n\n}\n\nexport interface Chord extends BeepBoxOption {\n    readonly customInterval: boolean;\n    readonly arpeggiates: boolean;\n    readonly strumParts: number;\n    readonly singleTone: boolean;\n}\n\nexport interface Algorithm extends BeepBoxOption {\n    readonly carrierCount: number;\n    readonly associatedCarrier: ReadonlyArray<number>;\n    readonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface OperatorFrequency extends BeepBoxOption {\n    readonly mult: number;\n    readonly hzOffset: number;\n    readonly amplitudeSign: number;\n}\n\nexport interface Feedback extends BeepBoxOption {\n    readonly indices: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface Envelope extends BeepBoxOption {\n    readonly type: EnvelopeType;\n    readonly speed: number;\n}\n\nexport interface AutomationTarget extends BeepBoxOption {\n    readonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\n    readonly displayName: string;\n    //readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\n    readonly interleave: boolean; // Whether to interleave this target with the next one in the menu.\n    readonly isFilter: boolean; // Filters have a variable maxCount in practice.\n    //readonly range: number | null; // set if automation is allowed.\n    readonly maxCount: number;\n    readonly effect: EffectType | null;\n    readonly compatibleInstruments: InstrumentType[] | null;\n}\n\nexport const enum SampleLoadingStatus {\n    loading,\n    loaded,\n    error,\n}\n\nexport function getSampleLoadingStatusName(status: SampleLoadingStatus): string {\n    switch (status) {\n\tcase SampleLoadingStatus.loading: return \"loading\";\n\tcase SampleLoadingStatus.loaded: return \"loaded\";\n\tcase SampleLoadingStatus.error: return \"error\";\n    }\n}\n\nexport class SampleLoadingState {\n    public statusTable: Dictionary<SampleLoadingStatus>;\n    public urlTable: Dictionary<string>;\n    public totalSamples: number;\n    public samplesLoaded: number;\n\n    constructor() {\n\tthis.statusTable = {};\n\tthis.urlTable = {};\n\tthis.totalSamples = 0;\n\tthis.samplesLoaded = 0;\n    }\n}\n\nexport const sampleLoadingState: SampleLoadingState = new SampleLoadingState();\n\nexport class SampleLoadedEvent extends Event {\n    public readonly totalSamples: number;\n    public readonly samplesLoaded: number;\n\n    constructor(totalSamples: number, samplesLoaded: number) {\n\tsuper(\"sampleloaded\");\n\tthis.totalSamples = totalSamples;\n\tthis.samplesLoaded = samplesLoaded;\n    }\n}\n\nexport interface SampleLoadEventMap {\n    \"sampleloaded\": SampleLoadedEvent;\n}\n\nexport class SampleLoadEvents extends EventTarget {\n    constructor() {\n\tsuper();\n    }\n}\n\nexport const sampleLoadEvents: SampleLoadEvents = new SampleLoadEvents();\n\nexport function startLoadingSample(url: string, chipWaveIndex: number, presetSettings: Dictionary<any>, rawLoopOptions: any, customSampleRate: number): void {\n    // @TODO: Make parts of the code that expect everything to already be\n    // in memory work correctly.\n    // It would be easy to only instantiate `SongEditor` and company after\n    // everything is loaded, but if dynamic sample loading without a reload\n    // is deemed necessary, anything that involves chip waves has to be\n    // revisited so as to be able to work with a changing list of chip\n    // waves that may or may not be ready to be used.\n    const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\n    let closedSampleLoaderAudioContext: boolean = false;\n    const chipWave = Config.chipWaves[chipWaveIndex];\n    const rawChipWave = Config.rawChipWaves[chipWaveIndex];\n    const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\n    fetch(url).then((response) => {\n\tif (!response.ok) {\n\t    // @TODO: Be specific with the error handling.\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\n\t    return Promise.reject(new Error(\"Couldn't load sample\"));\n\t}\n\treturn response.arrayBuffer();\n    }).then((arrayBuffer) => {\n\treturn sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\n    }).then((audioBuffer) => {\n\t// @TODO: Downmix.\n\tconst samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\n\tconst integratedSamples = performIntegral(samples);\n\tchipWave.samples = integratedSamples;\n\trawChipWave.samples = samples;\n\trawRawChipWave.samples = samples;\n\tif (rawLoopOptions[\"isUsingAdvancedLoopControls\"]) {\n\t    presetSettings[\"chipWaveLoopStart\"] = rawLoopOptions[\"chipWaveLoopStart\"] != null ? rawLoopOptions[\"chipWaveLoopStart\"] : 0;\n\t    presetSettings[\"chipWaveLoopEnd\"] = rawLoopOptions[\"chipWaveLoopEnd\"] != null ? rawLoopOptions[\"chipWaveLoopEnd\"] : samples.length - 1;\n\t    presetSettings[\"chipWaveLoopMode\"] = rawLoopOptions[\"chipWaveLoopMode\"] != null ? rawLoopOptions[\"chipWaveLoopMode\"] : 0;\n\t    presetSettings[\"chipWavePlayBackwards\"] = rawLoopOptions[\"chipWavePlayBackwards\"];\n\t    presetSettings[\"chipWaveStartOffset\"] = rawLoopOptions[\"chipWaveStartOffset\"] != null ? rawLoopOptions[\"chipWaveStartOffset\"] : 0;\n\t}\n\tsampleLoadingState.samplesLoaded++;\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t    sampleLoadingState.totalSamples,\n\t    sampleLoadingState.samplesLoaded\n\t));\n\tif (!closedSampleLoaderAudioContext) {\n\t    closedSampleLoaderAudioContext = true;\n\t    sampleLoaderAudioContext.close();\n\t}\n    }).catch((error) => {\n\t//console.error(error);\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\n\talert(\"Failed to load \" + url + \":\\n\" + error);\n\tif (!closedSampleLoaderAudioContext) {\n\t    closedSampleLoaderAudioContext = true;\n\t    sampleLoaderAudioContext.close();\n\t}\n    });\n}\n\nexport function getLocalStorageItem<T>(key: string, defaultValue: T): T | string {\n    let value: T | string | null = localStorage.getItem(key);\n    if (value == null || value === \"null\" || value === \"undefined\") {\n        value = defaultValue;\n    }\n    return value;\n}\n\n// @HACK: This just assumes these exist, regardless of whether they actually do\n// or not.\ndeclare global {\n    const kicksample: number[];\n    const snaresample: number[];\n    const pianosample: number[];\n    const WOWsample: number[];\n    const overdrivesample: number[];\n    const trumpetsample: number[];\n    const saxophonesample: number[];\n    const orchhitsample: number[];\n    const detatchedviolinsample: number[];\n    const synthsample: number[];\n    const sonic3snaresample: number[];\n    const comeonsample: number[];\n    const choirsample: number[];\n    const overdrivensample: number[];\n    const flutesample: number[];\n    const legatoviolinsample: number[];\n    const tremoloviolinsample: number[];\n    const amenbreaksample: number[];\n    const pizzicatoviolinsample: number[];\n    const timallengruntsample: number[];\n    const tubasample: number[];\n    const loopingcymbalsample: number[];\n    const kickdrumsample: number[];\n    const snaredrumsample: number[];\n    const closedhihatsample: number[];\n    const foothihatsample: number[];\n    const openhihatsample: number[];\n    const crashsample: number[];\n    const pianoC4sample: number[];\n    const liverpadsample: number[];\n    const marimbasample: number[];\n    const susdotwavsample: number[];\n    const wackyboxttssample: number[];\n    const peppersteak1: number[];\n    const peppersteak2: number[];\n    const vinyl: number[];\n    const slapbass: number[];\n    const hdeboverdrive: number[];\n    const sunsoftbass: number[];\n    const masculinechoir: number[];\n    const femininechoir: number[];\n    const southtololoche: number[];\n    const harp: number[];\n    const panflute: number[];\n    const krumhorn: number[];\n    const timpani: number[];\n    const crowdhey: number[];\n    const warioland4brass: number[];\n    const warioland4organ: number[];\n    const warioland4daow: number[];\n    const warioland4hourchime: number[];\n    const warioland4tick: number[];\n    const kirbykick: number[];\n    const kirbysnare: number[];\n    const kirbybongo: number[];\n    const kirbyclick: number[];\n    const funkkick: number[];\n    const funksnare: number[];\n    const funksnareleft: number[];\n    const funksnareright: number[];\n    const funktomhigh: number[];\n    const funktomlow: number[];\n    const funkhihatclosed: number[];\n    const funkhihathalfopen: number[];\n    const funkhihatopen: number[];\n    const funkhihatopentip: number[];\n    const funkhihatfoot: number[];\n    const funkcrash: number[];\n    const funkcrashtip: number[];\n    const funkride: number[];\n    const chronoperc1finalsample: number[];\n    const synthkickfmsample: number[];\n    const woodclicksample: number[];\n    const acousticsnaresample: number[];\n    const catpaintboxsample: number[];\n    const gameboypaintboxsample: number[];\n    const mariopaintboxsample: number[];\n    const drumpaintboxsample: number[];\n    const yoshipaintboxsample: number[];\n    const starpaintboxsample: number[];\n    const fireflowerpaintboxsample: number[];\n    const dogpaintbox: number[];\n    const oinkpaintbox: number[];\n    const swanpaintboxsample: number[];\n    const facepaintboxsample: number[];\n}\n\nfunction loadScript(url: string): Promise<void> {\n    const result: Promise<void> = new Promise((resolve, reject) => {\n\tif (!Config.willReloadForCustomSamples) {\n\t    const script = document.createElement(\"script\");\n\t    script.src = url;\n\t    document.head.appendChild(script);\n\t    script.addEventListener(\"load\", (event) => {\n\t\tresolve();\n\t    });\n\t} else {\n\t    // There's not really any errors that show up if the loading for\n\t    // this script is stopped early, but it won't really do anything\n\t    // particularly useful either in that case.\n\t}\n    });\n    return result;\n}\n\nexport function loadBuiltInSamples(set: number): void {\n    const defaultIndex: number = 0;\n    const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\n    const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\n\n    if (set == 0) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\n\t    { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\n\t    { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\n\t    { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\n\t    { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n\t    { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n\t    { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\n\t    { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n\t    { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\n\t    { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\n\t    { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\n\t    { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\n\t    { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\n\t    { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -11 },\n\t    { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\n\t    { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\n\t    { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\n\t    { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\n\t    { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\n\t    { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\n\t    { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\n\t    { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\n\t    { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\n\t    { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\n\t    { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\n\t    { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\n\t    { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\n\t    { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\n\t    { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\n\t    { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\n\t    { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\n\t    { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\n\t    { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\n\t    { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\n\t    { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\n\t    { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\n\t    { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\n\t    { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\n\t    { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\n\t    { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\n\t    { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\n\t    { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\n\t    { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n\t    { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n\t    { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n\t    { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n\t    { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\n\t    { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\n\t    { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\n\t    { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\n\t    { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\n\t    { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\n\t    { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\n\t    { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\n\t}\n\n\tloadScript(\"samples.js\")\n\t.then(() => loadScript(\"samples2.js\"))\n\t.then(() => loadScript(\"samples3.js\"))\n\t.then(() => loadScript(\"drumsamples.js\"))\n\t.then(() => loadScript(\"wario_samples.js\"))\n\t.then(() => loadScript(\"kirby_samples.js\"))\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(kicksample),\n\t\tcenterWave(snaresample),\n\t\tcenterWave(pianosample),\n\t\tcenterWave(WOWsample),\n\t\tcenterWave(overdrivesample),\n\t\tcenterWave(trumpetsample),\n\t\tcenterWave(saxophonesample),\n\t\tcenterWave(orchhitsample),\n\t\tcenterWave(detatchedviolinsample),\n\t\tcenterWave(synthsample),\n\t\tcenterWave(sonic3snaresample),\n\t\tcenterWave(comeonsample),\n\t\tcenterWave(choirsample),\n\t\tcenterWave(overdrivensample),\n\t\tcenterWave(flutesample),\n\t\tcenterWave(legatoviolinsample),\n\t\tcenterWave(tremoloviolinsample),\n\t\tcenterWave(amenbreaksample),\n\t\tcenterWave(pizzicatoviolinsample),\n\t\tcenterWave(timallengruntsample),\n\t\tcenterWave(tubasample),\n\t\tcenterWave(loopingcymbalsample),\n\t\tcenterWave(kickdrumsample),\n\t\tcenterWave(snaredrumsample),\n\t\tcenterWave(closedhihatsample),\n\t\tcenterWave(foothihatsample),\n\t\tcenterWave(openhihatsample),\n\t\tcenterWave(crashsample),\n\t\tcenterWave(pianoC4sample),\n\t\tcenterWave(liverpadsample),\n\t\tcenterWave(marimbasample),\n\t\tcenterWave(susdotwavsample),\n\t\tcenterWave(wackyboxttssample),\n\t\tcenterWave(peppersteak1),\n\t\tcenterWave(peppersteak2),\n\t\tcenterWave(vinyl),\n\t\tcenterWave(slapbass),\n\t\tcenterWave(hdeboverdrive),\n\t\tcenterWave(sunsoftbass),\n\t\tcenterWave(masculinechoir),\n\t\tcenterWave(femininechoir),\n\t\tcenterWave(southtololoche),\n\t\tcenterWave(harp),\n\t\tcenterWave(panflute),\n\t\tcenterWave(krumhorn),\n\t\tcenterWave(timpani),\n\t\tcenterWave(crowdhey),\n\t\tcenterWave(warioland4brass),\n\t\tcenterWave(warioland4organ),\n\t\tcenterWave(warioland4daow),\n\t\tcenterWave(warioland4hourchime),\n\t\tcenterWave(warioland4tick),\n\t\tcenterWave(kirbykick),\n\t\tcenterWave(kirbysnare),\n\t\tcenterWave(kirbybongo),\n\t\tcenterWave(kirbyclick),\n\t\tcenterWave(funkkick),\n\t\tcenterWave(funksnare),\n\t\tcenterWave(funksnareleft),\n\t\tcenterWave(funksnareright),\n\t\tcenterWave(funktomhigh),\n\t\tcenterWave(funktomlow),\n\t\tcenterWave(funkhihatclosed),\n\t\tcenterWave(funkhihathalfopen),\n\t\tcenterWave(funkhihatopen),\n\t\tcenterWave(funkhihatopentip),\n\t\tcenterWave(funkhihatfoot),\n\t\tcenterWave(funkcrash),\n\t\tcenterWave(funkcrashtip),\n\t\tcenterWave(funkride)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n\t//EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {name: \"Legacy Sample Presets\", presets:  { name: \"Earthbound O. Guitar\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"paandorasbox overdrive\", \"unison\": \"none\", \"envelopes\": [] } }, index: EditorConfig.presetCategories.length,};\n    }\n    else if (set == 1) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\n\t}\n\n\tloadScript(\"nintaribox_samples.js\")\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(chronoperc1finalsample),\n\t\tcenterWave(synthkickfmsample),\n\t\tcenterWave(woodclicksample),\n\t\tcenterWave(acousticsnaresample)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n    }\n    else if (set == 2) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n\t    { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\n\t    { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\n\t    { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n\t    { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n\t    { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n\t    { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n\t    { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\n\t    { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\n\t    { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\n\t}\n\n\tloadScript(\"mario_paintbox_samples.js\")\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(catpaintboxsample),\n\t\tcenterWave(gameboypaintboxsample),\n\t\tcenterWave(mariopaintboxsample),\n\t\tcenterWave(drumpaintboxsample),\n\t\tcenterWave(yoshipaintboxsample),\n\t\tcenterWave(starpaintboxsample),\n\t\tcenterWave(fireflowerpaintboxsample),\n\t\tcenterWave(dogpaintbox),\n\t\tcenterWave(oinkpaintbox),\n\t\tcenterWave(swanpaintboxsample),\n\t\tcenterWave(facepaintboxsample)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n    }\n    else {\n        console.log(\"invalid set of built-in samples\");\n    }\n}\n\nexport class Config {\n    // Params for post-processing compressor\n    public static thresholdVal: number = -10;\n    public static kneeVal: number = 40;\n    public static ratioVal: number = 12;\n    public static attackVal: number = 0;\n    public static releaseVal: number = 0.25;\n\n    public static willReloadForCustomSamples: boolean = false;\n\n    public static readonly scales: DictionaryArray<Scale> = toNameMap([\n\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\n        { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\n        { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\n        { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\n        { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\n        { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\n        { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\n        { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\n        { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\n        { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\n        { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\n        { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\n        { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\n        { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\n        { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\n        { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\n        { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\n        { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\n        { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\n        { name: \"No Dabbing\", realName: \"no dabbing\", flags:[true, true, false, true, true, true, true, true, true, false, true, false] },\n\t//modbox\n\t{ name: \"Jacked Toad\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\n\t{ name: \"Dumb\", realName: \"Originally named, currently named, and will always be named 'dumb.'\", flags: [true, false, false, false, false, true, true, true, true, false, false, true] },\n        { name: \"Test Scale\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\n\t// todbox\n\t{ name: \"die\", realName: \"death\", flags: [true, false, false, false, false, false, false, false, true, false, false, false] },\n\t//wackybox\n        // { name: \"Rythmic\", realName: \"Pretty straightforward.\", flags: [true, false, false, false, false, false, false, false, false, false, false, false] },\n        //todbox\n\t{ name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\n\t]);\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\n\t\t\t\t// { name: \"C+\", isWhiteKey: false, basePitch: 24 },\n\t\t//taken from todbox, called \"B#\" for some reason lol\n\t\t// { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 },\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 },\n\t    //brucebox\n\t\t//g- isn't actually g-???\n\t\t// { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 },\n\t\t//shitbox\n\t]);\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\n\tpublic static readonly tempoMin: number = 1;\n\tpublic static readonly tempoMax: number = 500;\n\tpublic static readonly octaveMin: number = -2;\n\tpublic static readonly octaveMax: number = 2;\n    public static readonly echoDelayRange: number = 24;\n    public static readonly echoDelayStepTicks: number = 4;\n    public static readonly echoSustainRange: number = 8;\n    public static readonly echoShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\n    public static readonly echoShelfGain: number = Math.pow(2.0, -0.5);\n    public static readonly reverbShelfHz: number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\n    public static readonly reverbShelfGain: number = Math.pow(2.0, -1.5);\n\tpublic static readonly reverbRange: number = 32;\n    public static readonly reverbDelayBufferSize: number = 16384; // TODO: Compute a buffer size based on sample rate.\n    public static readonly reverbDelayBufferMask: number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\n    public static readonly beatsPerBarMin: number = 1;\n\tpublic static readonly beatsPerBarMax: number = 64;\n\tpublic static readonly barCountMin: number = 1;\n\tpublic static readonly barCountMax: number = 1024;\n    public static readonly instrumentCountMin: number = 1;\n    public static readonly layeredInstrumentCountMax: number = 10;\n\t//this still hasn't been properly tested...\n    public static readonly patternInstrumentCountMax: number = 10;\n\tpublic static readonly partsPerBeat: number = 24;\n\tpublic static readonly ticksPerPart: number = 2;\n\tpublic static readonly ticksPerArpeggio: number = 3;\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\n\t\t{ name: \"÷1 (whole notes)\", stepsPerBeat: 1, /*ticksPerArpeggio: 6, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3] },\n\t\t{ name: \"÷2 (half notes)\", stepsPerBeat: 2, /*ticksPerArpeggio: 5, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3, 9] },\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\n\t\t{ name: \"÷6 (sextuplets)\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t\t{ name: \"÷8 (eighth notes)\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t\t{ name: \"÷12 (twelfth notes)\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1]]*/ roundUpThresholds: null },\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t]);\n\n    public static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"custom chip\", \"mod\", \"FM6op\"];\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false, false];\n    public static readonly chipBaseExpression: number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\n    public static readonly fmBaseExpression: number = 0.03;\n    public static readonly noiseBaseExpression: number = 0.19;\n    public static readonly spectrumBaseExpression: number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\n    public static readonly drumsetBaseExpression: number = 0.45; // Drums tend to be loud but brief!\n    public static readonly harmonicsBaseExpression: number = 0.025;\n    public static readonly pwmBaseExpression: number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\n    public static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\n    public static readonly distortionBaseVolume: number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\n    public static readonly bitcrusherBaseVolume: number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\n\tpublic static rawChipWaves: DictionaryArray<ChipWave> = toNameMap([\n        { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\n        { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\n        { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\n        { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\n        { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n        { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n        { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n        { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n        { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\n        { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\n        { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\n        { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\n        { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\n        { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n        { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\n        { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\n        { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\n        { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\n        { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\n        { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\n        { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\n        { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,])},\n   \t//normal\n{ name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t{ name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n\t{ name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\n\t   { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\n\t    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\n\t  { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\n\t   { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\n\t    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n\t  { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\n\t   { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\n\t { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\n        { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\n      { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\n\t   { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\n\t { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },  \n\t  { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\n     { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n\t  { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\n\t  { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\n\t  { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\n\t//modbox\n\t{ name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\n        { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\n        { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\n      { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\n     { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\n        { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\n      { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 -2, 0, 4, 1, 4, 6, 7, 3]) },\n      { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n        { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\n        { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1 ,0.13 / -0.3 ,0.13 / -0.5 ,0.13 / -0.7 ,0.13 / -0.9 ,0.13 / -0.11 ,0.13 / -0.31 ,0.13 / -0.51 ,0.13 / -0.71 ,0.13 / -0.91 ,0.13 / -0.12 ,0.13 / -0.32 ,0.13 / -0.52 ,0.13 / -0.72 ,0.13 / -0.92 ,0.13 / -0.13 ,0.13 / 0.13 ,0.13 / 0.92 ,0.13 / 0.72 ,0.13 / 0.52 ,0.13 / 0.32 ,0.13 / 0.12 ,0.13 / 0.91 ,0.13 / 0.71 ,0.13 / 0.51 ,0.13 / 0.31 ,0.13 / 0.11 ,0.13 / 0.9 ,0.13 / 0.7 ,0.13 / 0.5 ,0.13 / 0.3 ,0.13]) },\n        { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n      //cut\n\t  { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n      { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\n        { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\n       { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n     //   { name: \"sandbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },     \n\t//from sandbox, are these correct????\n\t  { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\n\t  { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\n\t{ name: \"brucebox pokey 5step bass\", expression: 0.5,samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\n\t{ name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\n\t//brucebox\n\t{ name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2 , 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\n\t{ name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0 , 5.0 / 55.0 , -9.0 , 6.5 / 6.5 , -55.0, 18.5 / -26.0]) },\n//nerdbox\n\t { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\n\t{ name: \"zefbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\n//\t{ name: \"zefbox sawtooth\", expression: 0.65, samples: centerAndNormalizeWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n\t { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6 , -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\n\t{ name: \"zefbox saw narrow\", expression: 0.65,samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2 ,1]) },\n\t { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\n\t//{ name: \"zefbox double saw\", expression: 0.5, samples: centerAndNormalizeWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n\t { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\n\t{ name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\n//\t { name: \"zefbox squaretooth\", expression: 0.25, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n\t//identical to the modbox squaretooth, just louder - this was pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\n\t{ name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\n//{ name: \"zefbox double pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n{ name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\n{ name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\n{ name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\n//from zefbox, are these correct????\n\t //\"triangle\", \"square\", \"semi-square\", \"deep square\", \"squaretal\", \"sawtooth\", \"saw wide\", \"saw narrow\",  \"deep sawtooth\", \"double saw\", \"sawtal\", \"deep sawtal\", \"squaretooth\", \"pulse\", \"pulse wide\", \"pulse narrow\", \"double pulse\", \"triple pulse\", \"high pulse\", \"deep pulse\",  \"nes pulse\", \"spiky\", \"plateau\", \"sinusoid\"\n\t { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\n\t\t{ name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\n\t\t{ name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\n        //wackybox\n\t\t        { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\n        { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t\t//these WEREN'T in pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\n\t\t{ name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\n\t{ name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t{ name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2,  2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\n    //from todbox\n\t{ name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\n\t{ name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\n\t//I don't like this one.\n\t{ name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000,-0.01208,-0.02997,-0.04382,-0.06042,-0.07529,-0.09116,-0.10654,-0.12189,-0.13751,-0.15289,-0.16849,-0.18387,-0.19974,-0.21484,-0.23071,-0.24557,-0.26144,-0.27731,-0.29141,-0.30350,-0.32416,-0.34406,-0.32947,-0.31158,-0.33725,-0.37579,-0.39746,-0.40201,-0.40906,-0.44180,-0.47229,-0.47379,-0.47733,-0.45239,-0.33954,-0.22894,-0.22443,-0.32138,-0.46371,-0.57178,-0.61081,-0.59998,-0.61459,-0.62189,-0.43979,-0.19217,-0.12643,-0.17252,-0.20956,-0.20981,-0.19217,-0.22845,-0.34332,-0.50629,-0.64307,-0.72922,-0.81384,-0.87857,-0.90149,-0.88687,-0.86169,-0.87781,-0.80478,-0.52493,-0.31308,-0.33249,-0.39395,-0.39017,-0.30301,-0.19949,-0.13071,-0.02493,0.14307,0.34961,0.52542,0.63223,0.68613,0.74710,0.87305,0.98184,0.98889,0.97052,0.99066,0.99747,0.99344,0.99469,0.99393,0.99570,0.99393,0.99521,0.99469,0.99420,0.99521,0.99420,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99469,0.99493,0.99420,0.99521,0.99393,0.99493,0.99469,0.99445,0.99570,0.99445,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99445,0.99493,0.99420,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99445,0.99521,0.99469,0.99445,0.99545,0.99368,0.99393,0.99445,0.99268,0.97983,0.97229,0.95944,0.88486,0.76773,0.64481,0.53098,0.39847,0.19318,-0.03827,-0.20325,-0.39319,-0.68765,-0.88461,-0.93448,-0.96069,-0.97681,-0.98715,-0.99042,-0.99142,-0.99091,-0.99142,-0.99219,-0.99091,-0.99219,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99142,-0.99142,-0.99191,-0.99091,-0.99219,-0.99118,-0.99142,-0.99167,-0.99091,-0.99219,-0.99091,-0.99167,-0.99142,-0.99091,-0.99191,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99118,-0.99142,-0.99191,-0.99066,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99243,-0.98865,-0.98764,-0.99219,-0.98083,-0.92517,-0.92770,-0.91486,-0.59042,-0.15189,0.02945,0.05667,0.06195,0.00629,-0.18008,-0.56497,-0.88010,-0.92770,-0.92871,-0.97705,-0.99167,-0.98663,-0.99118,-0.99042,-0.99219,-0.99142,-0.99118,-0.98941,-0.99219,-1.00000,-0.97580,-0.95993,-0.99948,-0.98236,-0.84659,-0.74860,-0.70679,-0.59747,-0.48035,-0.41687,-0.36826,-0.29745,-0.18185,-0.06219,0.02164,0.07907,0.13123,0.18033,0.19620,0.15692,0.14053,0.20251,0.27530,0.30905,0.29092,0.27252,0.30402,0.32416,0.32214,0.35239,0.39670,0.43198,0.49420,0.58487,0.64154,0.65967,0.67050,0.67026,0.66522,0.65540,0.66119,0.70627,0.75842,0.78738,0.78940,0.78763,0.80402,0.85944,0.94559,0.98990,0.98160,0.98007,0.99368,0.99393,0.98538,0.97580,0.97101,0.93802,0.81812,0.64633,0.46649,0.28613,0.14685,0.08966,0.12543,0.20325,0.24557,0.18866,0.02795,-0.20175,-0.44205,-0.58713,-0.57629,-0.41385,-0.14255,0.18033,0.47882,0.68311,0.72314,0.62064,0.48309,0.43073,0.53577,0.72794,0.90250,0.97354,0.97000,0.98083,0.99191,0.99319,0.99493,0.99393,0.99521,0.99393,0.99545,0.99420,0.99493,0.99493,0.99445,0.99545,0.99420,0.99545,0.99243,0.98917,0.98386,0.97781,0.95844,0.89066,0.81561,0.78134,0.77277,0.75995,0.73022,0.67126,0.57178,0.47000,0.38361,0.29419,0.20703,0.14734,0.15866,0.25162,0.35818,0.45062,0.56750,0.69748,0.81232,0.89697,0.95062,0.97656,0.98615,0.99191,0.99219,0.99243,0.99368,0.99368,0.97028,0.95566,0.94559,0.82617,0.59973,0.38361,0.23901,0.15338,0.12921,0.11206,0.04382,-0.12946,-0.43552,-0.72644,-0.89847,-0.95465,-0.95541,-0.97229,-0.99268,-0.99319,-0.98840,-0.99142,-0.99167,-0.99091,-0.98840,-0.98965,-0.99368,-0.97455,-0.95010,-0.94684,-0.96219,-0.98514,-0.99243,-0.98889,-0.98917,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99191,-0.99066,-0.99167,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99167,-0.99091,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99091,-0.99118,-0.99243,-0.98941,-0.98462,-0.96976,-0.96320,-0.96194,-0.87305,-0.66196,-0.44809,-0.29495,-0.18085,-0.11813,-0.11334,-0.18564,-0.34885,-0.58237,-0.80450,-0.93726,-0.97806,-0.97354,-0.97531,-0.98990,-0.99368,-0.98941,-0.99219,-0.99091,-0.99142,-0.99167,-0.99091,-0.99191,-0.99118,-0.99219,-0.98236,-0.97781,-0.97656,-0.95135,-0.87204,-0.71335,-0.52139,-0.34232,-0.17783,-0.00906,0.14886,0.30450,0.48889,0.67404,0.84030,0.94128,0.97681,0.98462,0.98337,0.99142,0.99521,0.99493,0.99420,0.99445,0.99521,0.99393,0.99545,0.99445,0.99521,0.99521,0.99445,0.99570,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99521,0.99445,0.99445,0.99521,0.99445,0.99545,0.99445,0.99469,0.99493,0.99393,0.99493,0.99445,0.99393,0.98285,0.97781,0.97479,0.92844,0.82114,0.66095,0.52417,0.46826,0.46722,0.47934,0.47379,0.47076,0.48209,0.42014,0.25439,0.10074,-0.00302,-0.08966,-0.16068,-0.21436,-0.22040,-0.15137,-0.00476,0.18536,0.37631,0.52292,0.62164,0.70425,0.74835,0.72366,0.63928,0.52567,0.40805,0.35666,0.42896,0.60175,0.80200,0.92743,0.96548,0.97632,0.98337,0.99066,0.99521,0.99420,0.99368,0.99292,0.98840,0.98083,0.96774,0.93323,0.85440,0.69470,0.47202,0.20425,-0.08890,-0.36423,-0.60025,-0.77481,-0.90173,-0.96017,-0.97028,-0.98108,-0.98840,-0.99219,-0.98990,-0.99219,-0.99142,-0.99142,-0.99219,-0.99091,-0.99243,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99118,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.98917,-0.99042,-0.99445,-0.97330,-0.95590,-0.96219,-0.89670,-0.72241,-0.55112,-0.44809,-0.39319,-0.37833,-0.35641,-0.26270,-0.14230,-0.11282,-0.13525,-0.11536,-0.09671,-0.11511,-0.18060,-0.26874,-0.33374,-0.42215,-0.51358,-0.44785,-0.30450,-0.28613,-0.30527,-0.25037,-0.15390,-0.08286,-0.11157,-0.12592,-0.00327,0.13803,0.19141,0.12820,0.01788,-0.03952,-0.12592,-0.26773,-0.34634,-0.31384,-0.18060,-0.01080,0.13574,0.26120,0.36975,0.46573,0.55087,0.63626,0.73022,0.83072,0.92014,0.97177,0.98587,0.98413,0.99167,0.99445,0.99292,0.99219,0.98740,0.98007,0.96472,0.92239,0.82166,0.69067,0.57959,0.54962,0.59695,0.64255,0.64633,0.60629,0.55942,0.54910,0.58966,0.61887,0.56952,0.54181,0.59518,0.63248,0.63876,0.65463,0.73398,0.88312,0.96927,0.97101,0.97958,0.99344,0.99420,0.99268,0.99493,0.99469,0.99445,0.99521,0.99445,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99420,0.99493,0.99420,0.99393,0.99420,0.98840,0.98309,0.98309,0.96069,0.88461,0.79370,0.72064,0.65765,0.59998,0.53247,0.49268,0.48615,0.44205,0.38034,0.36447,0.38715,0.39294,0.32645,0.19595,0.07782,-0.05893,-0.27832,-0.48309,-0.62619,-0.72995,-0.79999,-0.84583,-0.82166,-0.73575,-0.67227,-0.65491,-0.64960,-0.66397,-0.70175,-0.72894,-0.74658,-0.76724,-0.79520,-0.82846,-0.86523,-0.90527,-0.94382,-0.89948,-0.69849,-0.47479,-0.31662,-0.15414,-0.00729,0.07077,0.08237,0.04431,-0.02292,-0.11761,-0.24307,-0.36926,-0.45087,-0.46170,-0.40250,-0.30679,-0.17529,0.00000,0.14331,0.24179,0.36774,0.49545,0.56522,0.57907,0.56775,0.53851,0.51132,0.48688,0.41913,0.26044,0.00955,-0.26297,-0.46396,-0.62341,-0.82214,-0.94684,-0.96774,-0.97531,-0.98413,-0.99017,-0.98990,-0.99219,-0.99066,-0.99142,-0.99167,-0.99118,-0.99219,-0.98990,-0.99118,-0.99368,-0.99142,-0.97757,-0.97403,-0.98007,-0.96170,-0.86826,-0.67783,-0.52719,-0.48788,-0.45490,-0.43146,-0.47681,-0.54105,-0.57983,-0.60904,-0.62317,-0.59949,-0.55566,-0.52063,-0.52115,-0.55112,-0.56244,-0.58337,-0.65540,-0.73373,-0.77228,-0.74759,-0.68890,-0.64609,-0.61887,-0.58060,-0.50351,-0.40729,-0.33929,-0.35110,-0.42944,-0.47028,-0.42267,-0.32718,-0.20224,-0.05640,0.04556,0.10529,0.17630,0.26169,0.33197,0.32138,0.23776,0.20956,0.23148,0.20352,0.23325,0.39267,0.52719,0.58438,0.62289,0.66345,0.70023,0.66296,0.54330,0.42618,0.33475,0.24533,0.14105,0.03851,0.01358,0.09143,0.22845,0.34961,0.41711,0.48740,0.58914,0.69519,0.78186,0.84357,0.89822,0.95389,0.98135,0.98615,0.99167,0.99243,0.99445,0.99420,0.99469,0.99493,0.99393,0.99545,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99469,0.98965,0.98715,0.98563,0.96295,0.91736,0.86624,0.82367,0.77554,0.68411,0.53549,0.38916,0.26120,0.11435,-0.04053,-0.18161,-0.23172,-0.19394,-0.15237,-0.10730,-0.02997,0.08588,0.22620,0.34305,0.44104,0.55740,0.65765,0.71259,0.69217,0.65363,0.69748,0.79572,0.89368,0.95514,0.97733,0.98413,0.98816,0.99243,0.99445,0.99243,0.97302,0.96674,0.97983,0.90378,0.71005,0.51056,0.40451,0.40982,0.41559,0.32996,0.24356,0.18866,0.11411,0.05365,0.01157,-0.03247,-0.09216,-0.16095,-0.23248,-0.31662,-0.39771,-0.48663,-0.59647,-0.71536,-0.82013,-0.85287,-0.82947,-0.84937,-0.92215,-0.97177,-0.98663,-0.98816,-0.98438,-0.99091,-0.99219,-0.99091,-0.99191,-0.99042,-0.99191,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99142]) },\n\t//from todbox beta (obviously)\n\t\n\t//{ name: \"ultrabox nes 12.5%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 0, 0, 0, 0, 0, 0]) },\n\t//{ name: \"ultrabox nes 25%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 0, 0, 0, 0, 0]) },\n//\t{ name: \"ultrabox nes 50%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 1, 1, 0, 0, 0]) },\n//\t{ name: \"ultrabox nes 25% negated\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([1, 0, 0, 1, 1, 1, 1, 1]) },\n\t//{ name: \"ultrabox nes triangle\", expression: 0.5, isSampled: true, isPercussion: false, extraSampleDetune: 63.28, samples: centerAndNormalizeWave([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]) },\n\t//{ name: \"ultrabox gameboy kirby triangle\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([2,5,7,1,0,2,2,3,2,5,5,9,3,4,8,9,5,4,8,1,3,1,3,5,9,8,9,2,1,6,9,0,7,9,6,8,1,6]) },\n\t//{ name: \"ultrabox gameboy kirby bass\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([4,5,7,2,6,8,3,3,0,8,1,4,2,1,1,4,8,6,7,3,7,8,3,8,7,7,7,5,7,4,3,9,8,7,8,7,0,7]) },\n\t\n\t\n\t{ name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785,-0.67621,-0.40268,-0.43817,-0.45468,-0.22531,-0.18329,0.24750,0.71246,0.52155,0.56082,0.48395,0.33990,0.46957,0.27744,0.42313,0.47104,0.18796,0.12930,-0.13901,-0.07431,-0.16348,-0.74857,-0.73206,-0.35181,-0.26227,-0.41882,-0.27786,-0.19806,-0.19867,0.18643,0.24808,0.08847,-0.06964,0.06912,0.20474,-0.05304,0.29416,0.31967,0.14243,0.27521,-0.23932,-0.14752,0.12360,-0.26123,-0.26111,0.06616,0.26520,0.08090,0.15240,0.16254,-0.12061,0.04562,0.00131,0.04050,0.08182,-0.21729,-0.17041,-0.16312,-0.08563,0.06390,0.05099,0.05627,0.02728,0.00726,-0.13028,-0.05673,-0.14969,-0.17645,0.35492,0.16766,-0.00897,0.24326,-0.00461,-0.04456,0.01776,-0.04950,-0.01221,0.02039,0.07684,0.13397,0.39850,0.35962,0.13754,0.42310,0.27161,-0.17609,0.03659,0.10635,-0.21909,-0.22046,-0.20258,-0.40973,-0.40280,-0.40521,-0.66284]) },\n\t//based off an old mp3 in #modded-beepbox where someone tried to shorten the overdrive guitar into the size of other chip waves \n\t//search \"normie alert\" in beepcord\n]); \n\tpublic static chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\n\tpublic static rawRawChipWaves: DictionaryArray<ChipWave> = Config.rawChipWaves;\n\n\tpublic static firstIndexForSamplesInChipWaveList: number = Config.chipWaves.length;\n  \n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\n\t\t{ name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\n\t\t{ name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\n\t\t{ name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\n\t\t{ name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t// technically these are from the pandorasbox beta but whatever\n\t\t{ name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t// ultrabox noises\n\t\t{ name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"pink\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t\t{ name: \"brownian\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t\t//{ name: \"doom random\", expression: 1.0, basePitch: 84, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t]);\n\t\n    public static readonly filterFreqStep: number = 1.0 / 4.0;\n    public static readonly filterFreqRange: number = 34;\n    public static readonly filterFreqReferenceSetting: number = 28;\n    public static readonly filterFreqReferenceHz: number = 8000.0;\n    public static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\n    public static readonly filterFreqMinHz: number = 8.0;\n    public static readonly filterGainRange: number = 15;\n    public static readonly filterGainCenter: number = 7;\n    public static readonly filterGainStep: number = 1.0 / 2.0;\n    public static readonly filterMaxPoints: number = 8;\n    public static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\n    public static readonly filterMorphCount: number = 10; // Number of filter shapes allowed for modulating between. Counts the 0/default position.\n\n    public static readonly filterSimpleCutRange: number = 11;\n    public static readonly filterSimplePeakRange: number = 8;\n\n    public static readonly fadeInRange: number = 10;\n    public static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\n    public static readonly fadeOutNeutral: number = 4;\n    public static readonly drumsetFadeOutTicks: number = 48;\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\n        { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\n        { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\n\t]);\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\n        { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\n        { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\n        { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 }, // It will fade in over the previous two ticks.\n        { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\n        { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\n\t\t\t//    { name: \"very shaky\", amplitude: 1, type: 0, delayTicks: 0 },\n\t//{ name: \"insane\", amplitude: 10, type: 1, delayTicks: 0 },\n\t    //todbox vibratos\n\t//\t{ name: \"super insane\", amplitude: 30, type: 1, delayTicks: 1 },\n\t\t//wackybox\n\t//\t { name: \"quiver\", amplitude: 0.001, type: 0, delayTicks: 0 },\n      //  { name: \"wub-wub\", amplitude: 10.0, type: 0, delayTicks: 0 },\n   //     { name: \"quiver delayed\", amplitude: 0.001, type: 0, delayTicks: 18 },\n      //  { name: \"vibrate\", amplitude: 0.08, type: 0, delayTicks: 0 },\n    //    { name: \"too much wub\", amplitude: 30.0, type: 0, delayTicks: 18 },\n\t //too much wub breaks things just a little bit at it's original amplitude\n\t\t//sandbox\n\t]);\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\n\t]);\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\n\tpublic static readonly unisons: DictionaryArray<Unison> = toNameMap([\n        { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\n        { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\n        { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\n        { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\n        { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\n        { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\n        { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\n        { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\n        { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\n        { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\n        { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\n\t\t{ name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\n\t\t{ name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\n\t\t{ name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\n\t\t{ name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\n\t\t{ name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\n\t\t{ name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\n\t    { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\n        { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\n\t\t{ name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\n\t\t\n\t //for modbox; voices = riffapp, spread = intervals, offset = offsets, expression = volume, and sign = signs\n\t]);\n    public static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\"];\n    public static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.panning, EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.chorus, EffectType.echo, EffectType.reverb];\n    public static readonly noteSizeMax: number = 6;\n\tpublic static readonly volumeRange: number = 50;\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\n\tpublic static readonly volumeLogScale: number = 0.1428;\n\tpublic static readonly panCenter: number = 50;\n\tpublic static readonly panMax: number = Config.panCenter * 2;\n\tpublic static readonly panDelaySecondsMax: number = 0.001;\n    public static readonly chorusRange: number = 8;\n    public static readonly chorusPeriodSeconds: number = 2.0;\n    public static readonly chorusDelayRange: number = 0.0034;\n    public static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\n    public static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\n    public static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\n        { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\n        { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\n        { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\n        { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\n    ]);\n    public static readonly maxChordSize: number = 9;\n    public static readonly operatorCount: number = 4;\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount+2);\n    public static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\n        { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\n        { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\n        { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\n        { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\n        { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\n        { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\n        { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\n        { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\n        { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\n        { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\n        { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\n        { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\n    ]);\n    public static readonly algorithms6Op: DictionaryArray<Algorithm> = toNameMap([\n        //placeholder makes life easier for later\n        { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n        //yoinked from SynthBox\n        //algortihm Section 1\n        { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\n        { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\n        { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\n        { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\n        //Algorithm Section 2\n        { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\n        { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\n        { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\n        { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\n        { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\n        { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n        { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\n        { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\n        //Algorithm Section 3\n        { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\n        { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\n        { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\n        { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\n        { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\n        { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\n        { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\n        { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\n        { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\n        //Algorithm Section 3\n        { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\n        { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\n        { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\n        { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\n        { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\n        { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\n        { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\n        { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\n        //Section 4 where we take our own previous ones for 4op and it gets weird\n        { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n        { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n        { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\n        { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\n    ]);\n    public static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\n\tpublic static readonly operatorAmplitudeMax: number = 15;\n    public static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\n        { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\n        { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\n        { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\n        { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\n        { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t{ name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\n\t    // dogebox (maybe another mod also adds this? I got it from dogebox)\n\t\t{ name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 }\n\t    //50 and 100 are from dogebox\n    ]);\n\n    public static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\n        { name: \"flare -1\", type: EnvelopeType.flare, speed: 128.0 },\n        { name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\n        { name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\n        { name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\n        { name: \"twang -1\", type: EnvelopeType.twang, speed: 128.0 },\n        { name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\n        { name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\n        { name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\n        { name: \"swell -1\", type: EnvelopeType.swell, speed: 128.0 },\n        { name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\n        { name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\n        { name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\n        { name: \"tremolo0\", type: EnvelopeType.tremolo, speed: 8.0 },\n        { name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\n        { name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\n        { name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\n        { name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\n        { name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\n        { name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\n        { name: \"decay -1\", type: EnvelopeType.decay, speed: 40.0 },\n        { name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\n        { name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\n        { name: \"wibble-1\", type: EnvelopeType.wibble, speed: 96.0 },\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\n        { name: \"linear-2\", type: EnvelopeType.linear, speed: 256.0 },\n        { name: \"linear-1\", type: EnvelopeType.linear, speed: 128.0 },\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 32.0 },\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 8.0 },\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 2.0 },\n        { name: \"rise -2\", type: EnvelopeType.rise, speed: 256.0 },\n        { name: \"rise -1\", type: EnvelopeType.rise, speed: 128.0 },\n        { name: \"rise 1\", type: EnvelopeType.rise, speed: 32.0 },\n        { name: \"rise 2\", type: EnvelopeType.rise, speed: 8.0 },\n        { name: \"rise 3\", type: EnvelopeType.rise, speed: 2.0 },\n\t    \t\t{ name: \"flute 1\", type: 9, speed: 16.0 },\n\t\t{ name: \"flute 2\", type: 9, speed: 8.0 },\n\t\t{ name: \"flute 3\", type: 9, speed: 4.0 },\n\t\t//modbox\n\t\t{ name: \"tripolo1\", type: 6, speed: 9.0 },\n        { name: \"tripolo2\", type: 6, speed: 6.0 },\n        { name: \"tripolo3\", type: 6, speed: 3.0 },\n        { name: \"tripolo4\", type: 7, speed: 9.0 },\n        { name: \"tripolo5\", type: 7, speed: 6.0 },\n        { name: \"tripolo6\", type: 7, speed: 3.0 },\n        { name: \"pentolo1\", type: 6, speed: 10.0 },\n        { name: \"pentolo2\", type: 6, speed: 5.0 },\n        { name: \"pentolo3\", type: 6, speed: 2.5 },\n        { name: \"pentolo4\", type: 7, speed: 10.0 },\n        { name: \"pentolo5\", type: 7, speed: 5.0 },\n        { name: \"pentolo6\", type: 7, speed: 2.5 },\t\n\t\t//sandbox\n\t    { name: \"flutter 1\", type: 6, speed: 14.0 },\n        { name: \"flutter 2\", type: 7, speed: 11.0 },\n        { name: \"water-y flutter\", type: 6, speed: 9.0 },\n\t    //todbox\n    ]);\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\n        { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\n        { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\n        { name: \"ALL\", indices: [[1,2,3,4], [1,2,3,4], [1,2,3,4], [1, 2, 3,4]] },\n    ]);\n    public static readonly feedbacks6Op: DictionaryArray<Feedback> = toNameMap([\n        //placeholder makes life easier for later\n        { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n\n        { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\n        { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\n        { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\n        { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\n        { name: \"5⟲\", indices: [[], [], [], [], [5], []] },\n        { name: \"6⟲\", indices: [[], [], [], [], [], [6]] },\n        { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\n        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\n        { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\n        { name: \"1→2\", indices: [[], [1], [], [], [], []] },\n        { name: \"1→3\", indices: [[], [], [1], [], [], []] },\n        { name: \"1→4\", indices: [[], [], [], [1], [], []] },\n        { name: \"1→5\", indices: [[], [], [], [], [1], []] },\n        { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\n        { name: \"2→3\", indices: [[], [], [2], [], [], []] },\n        { name: \"2→4\", indices: [[], [], [], [2], [], []] },\n        { name: \"3→4\", indices: [[], [], [], [3], [], []] },\n        { name: \"4→5\", indices: [[], [], [], [], [4], []] },\n        { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\n        { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\n        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n        { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\n        { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\n        { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\n        { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\n        { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\n        { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\n    ]);\n    public static readonly chipNoiseLength: number = 1 << 15; // 32768\n    public static readonly spectrumNoiseLength: number = 1 << 15; // 32768\n    public static readonly spectrumBasePitch: number = 24;\n    public static readonly spectrumControlPoints: number = 30;\n    public static readonly spectrumControlPointsPerOctave: number = 7;\n    public static readonly spectrumControlPointBits: number = 3;\n    public static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\n    public static readonly harmonicsControlPoints: number = 28;\n    public static readonly harmonicsRendered: number = 64;\n    public static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\n    public static readonly harmonicsControlPointBits: number = 3;\n    public static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\n    public static readonly harmonicsWavelength: number = 1 << 11; // 2048\n    public static readonly pulseWidthRange: number = 50;\n    public static readonly pulseWidthStepPower: number = 0.5;\n    public static readonly pitchChannelCountMin: number = 1;\n    public static readonly pitchChannelCountMax: number = 60;\n    public static readonly noiseChannelCountMin: number = 0;\n    public static readonly noiseChannelCountMax: number = 32;\n    public static readonly modChannelCountMin: number = 0;\n    public static readonly modChannelCountMax: number = 24;\n    public static readonly noiseInterval: number = 6;\n    public static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\n    public static readonly drumCount: number = 12;\n    public static readonly pitchOctaves: number = 8;\n    public static readonly modCount: number = 6;\n    public static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\n    public static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\n    public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\n    public static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\n    public static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\n    public static readonly detuneCenter: number = 200;\n    public static readonly detuneMax: number = 400;\n    public static readonly detuneMin: number = 0;\n    public static readonly songDetuneMin: number = 0;\n    public static readonly songDetuneMax: number = 500;\n    public static readonly sineWaveLength: number = 1 << 8; // 256\n    public static readonly sineWaveMask: number = Config.sineWaveLength - 1;\n    public static readonly sineWave: Float32Array = generateSineWave();\n\n    // Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\n    public static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\n    public static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\n    public static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\n    public static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\n\n    public static readonly distortionRange: number = 8;\n    public static readonly stringSustainRange: number = 15;\n    public static readonly stringDecayRate: number = 0.12;\n    public static readonly bitcrusherFreqRange: number = 14;\n    public static readonly bitcrusherOctaveStep: number = 0.5;\n    public static readonly bitcrusherQuantizationRange: number = 8;\n\n    public static readonly maxEnvelopeCount: number = 12;\n    public static readonly defaultAutomationRange: number = 13;\n    public static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\n        { name: \"none\", computeIndex: null, displayName: \"none\",             /*perNote: false,*/ interleave: false, isFilter: false, /*range: 0,                              */    maxCount: 1, effect: null, compatibleInstruments: null },\n        { name: \"noteVolume\", computeIndex: EnvelopeComputeIndex.noteVolume, displayName: \"note volume\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.volumeRange,             */    maxCount: 1, effect: null, compatibleInstruments: null },\n        { name: \"pulseWidth\", computeIndex: EnvelopeComputeIndex.pulseWidth, displayName: \"pulse width\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm] },\n        { name: \"stringSustain\", computeIndex: EnvelopeComputeIndex.stringSustain, displayName: \"sustain\",          /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.stringSustainRange,      */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pickedString] },\n        { name: \"unison\", computeIndex: EnvelopeComputeIndex.unison, displayName: \"unison\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString, InstrumentType.customChipWave] },\n        { name: \"operatorFrequency\", computeIndex: EnvelopeComputeIndex.operatorFrequency0, displayName: \"fm# freq\",         /*perNote:  true,*/ interleave: true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount+2, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"operatorAmplitude\", computeIndex: EnvelopeComputeIndex.operatorAmplitude0, displayName: \"fm# volume\",       /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: Config.operatorCount+2, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"feedbackAmplitude\", computeIndex: EnvelopeComputeIndex.feedbackAmplitude, displayName: \"fm feedback\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"pitchShift\", computeIndex: EnvelopeComputeIndex.pitchShift, displayName: \"pitch shift\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pitchShiftRange,         */    maxCount: 1, effect: EffectType.pitchShift, compatibleInstruments: null },\n        { name: \"detune\", computeIndex: EnvelopeComputeIndex.detune, displayName: \"detune\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.detuneMax + 1,           */    maxCount: 1, effect: EffectType.detune, compatibleInstruments: null },\n        { name: \"vibratoDepth\", computeIndex: EnvelopeComputeIndex.vibratoDepth, displayName: \"vibrato range\",    /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: EffectType.vibrato, compatibleInstruments: null },\n        { name: \"noteFilterAllFreqs\", computeIndex: EnvelopeComputeIndex.noteFilterAllFreqs, displayName: \"n. filter freqs\",  /*perNote:  true,*/ interleave: false, isFilter: true, /*range: null,                           */    maxCount: 1, effect: EffectType.noteFilter, compatibleInstruments: null },\n        { name: \"noteFilterFreq\", computeIndex: EnvelopeComputeIndex.noteFilterFreq0, displayName: \"n. filter # freq\", /*perNote:  true,*/ interleave: false/*true*/, isFilter: true, /*range: Config.filterFreqRange,     */        maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null },\n        { name: \"decimalOffset\", computeIndex: EnvelopeComputeIndex.decimalOffset, displayName: \"decimal offset\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm] },\n        \n        // Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for now...\n        //{name: \"noteFilterGain\",         computeIndex:       EnvelopeComputeIndex.noteFilterGain0,        displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\n        /*\n        {name: \"distortion\",             computeIndex: InstrumentAutomationIndex.distortion,             displayName: \"distortion\",       perNote: false, interleave: false, isFilter: false, range: Config.distortionRange,             maxCount: 1,    effect: EffectType.distortion,   compatibleInstruments: null},\n        {name: \"bitcrusherQuantization\", computeIndex: InstrumentAutomationIndex.bitcrusherQuantization, displayName: \"bit crush\",        perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherQuantizationRange, maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\n        {name: \"bitcrusherFrequency\",    computeIndex: InstrumentAutomationIndex.bitcrusherFrequency,    displayName: \"freq crush\",       perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherFreqRange,         maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\n        {name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\n        {name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n        {name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n        {name: \"panning\",                computeIndex: InstrumentAutomationIndex.panning,                displayName: \"panning\",          perNote: false, interleave: false, isFilter: false, range: Config.panMax + 1,                  maxCount: 1,    effect: EffectType.panning,      compatibleInstruments: null},\n        {name: \"chorus\",                 computeIndex: InstrumentAutomationIndex.chorus,                 displayName: \"chorus\",           perNote: false, interleave: false, isFilter: false, range: Config.chorusRange,                 maxCount: 1,    effect: EffectType.chorus,       compatibleInstruments: null},\n        {name: \"echoSustain\",            computeIndex: InstrumentAutomationIndex.echoSustain,            displayName: \"echo\",             perNote: false, interleave: false, isFilter: false, range: Config.echoSustainRange,            maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null},\n        {name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\n        {name: \"reverb\",                 computeIndex: InstrumentAutomationIndex.reverb,                 displayName: \"reverb\",           perNote: false, interleave: false, isFilter: false, range: Config.reverbRange,                 maxCount: 1,    effect: EffectType.reverb,       compatibleInstruments: null},\n        {name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\n        {name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\n        */\n    ]);\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\n\t\t{ name: \"sine\", samples: Config.sineWave },\n\t\t{ name: \"triangle\", samples: generateTriWave() },\n\t\t{ name: \"pulse width\", samples: generateSquareWave() },\n\t\t{ name: \"sawtooth\", samples: generateSawWave() },\n\t\t{ name: \"ramp\", samples: generateSawWave(true) },\n\t\t{ name: \"trapezoid\", samples: generateTrapezoidWave(2) },\n\t    { name: \"rounded\", samples: generateRoundedSineWave() },\n\t\t//{ name: \"white noise\", samples: generateWhiteNoiseFmWave() },\n\t\t//{ name: \"1-bit white noise\", samples: generateOneBitWhiteNoiseFmWave() },\n    ]);\n    public static readonly pwmOperatorWaves: DictionaryArray<OperatorWave> = toNameMap([\n        { name: \"1%\", samples: generateSquareWave(0.01) },\n        { name: \"5%\", samples: generateSquareWave(0.05) },\n        { name: \"12.5%\", samples: generateSquareWave(0.125) },\n        { name: \"25%\", samples: generateSquareWave(0.25) },\n        { name: \"33%\", samples: generateSquareWave(1 / 3) },\n        { name: \"50%\", samples: generateSquareWave(0.5) },\n        { name: \"66%\", samples: generateSquareWave(2 / 3) },\n        { name: \"75%\", samples: generateSquareWave(0.75) },\n        { name: \"87.5%\", samples: generateSquareWave(0.875) },\n        { name: \"95%\", samples: generateSquareWave(0.95) },\n        { name: \"99%\", samples: generateSquareWave(0.99) },\n    ]);\n\n\n    // Height of the small editor column for inserting/deleting rows, in pixels.\n    public static readonly barEditorHeight: number = 10;\n\n    // Careful about changing index ordering for this. Index is stored in URL/JSON etc.\n    public static readonly modulators: DictionaryArray<Modulator> = toNameMap([\n        { name: \"none\", pianoName: \"None\", maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"No Mod Setting\", promptDesc: [ \"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\" ] },\n        { name: \"song volume\", pianoName: \"Volume\", maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Song Volume\", promptDesc: [ \"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"tempo\", pianoName: \"Tempo\", maxRawVol: Config.tempoMax - Config.tempoMin, newNoteVol: Math.ceil((Config.tempoMax - Config.tempoMin) / 2), forSong: true, convertRealFactor: Config.tempoMin, associatedEffect: EffectType.length,\n            promptName: \"Song Tempo\", promptDesc: [ \"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\" ] },\n        { name: \"song reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange * 2, newNoteVol: Config.reverbRange, forSong: true, convertRealFactor: -Config.reverbRange, associatedEffect: EffectType.length,\n            promptName: \"Song Reverb\", promptDesc: [ \"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"next bar\", pianoName: \"Next Bar\", maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Go To Next Bar\", promptDesc: [ \"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\" ] },\n        { name: \"note volume\", pianoName: \"Note Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\n            promptName: \"Note Volume\", promptDesc: [ \"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"pan\", pianoName: \"Pan\", maxRawVol: Config.panMax, newNoteVol: Math.ceil(Config.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\n            promptName: \"Instrument Panning\", promptDesc: [ \"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\" ] },\n        { name: \"reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.reverb,\n            promptName: \"Instrument Reverb\", promptDesc: [ \"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"distortion\", pianoName: \"Distortion\", maxRawVol: Config.distortionRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.distortion,\n            promptName: \"Instrument Distortion\", promptDesc: [ \"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\" ] },\n        { name: \"fm slider 1\", pianoName: \"FM 1\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 1\", promptDesc: [ \"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm slider 2\", pianoName: \"FM 2\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 2\", promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"fm slider 3\", pianoName: \"FM 3\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 3\", promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"fm slider 4\", pianoName: \"FM 4\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 4\", promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm feedback\", pianoName: \"FM Feedback\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Feedback\", promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"pulse width\", pianoName: \"Pulse Width\", maxRawVol: Config.pulseWidthRange, newNoteVol: Config.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Pulse Width\", promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\n        { name: \"detune\", pianoName: \"Detune\", maxRawVol: Config.detuneMax - Config.detuneMin, newNoteVol: Config.detuneCenter, forSong: false, convertRealFactor: -Config.detuneCenter, associatedEffect: EffectType.detune,\n            promptName: \"Instrument Detune\", promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\n        { name: \"vibrato depth\", pianoName: \"Vibrato Depth\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Depth\", promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\n        { name: \"song detune\", pianoName: \"Detune\", maxRawVol: Config.songDetuneMax - Config.songDetuneMin, newNoteVol: Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: EffectType.length,\n            promptName: \"Song Detune\", promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\n        { name: \"vibrato speed\", pianoName: \"Vibrato Speed\", maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Speed\", promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"vibrato delay\", pianoName: \"Vibrato Delay\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Delay\", promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\n        { name: \"arp speed\", pianoName: \"Arp Speed\", maxRawVol: 50, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\n            promptName: \"Arpeggio Speed\", promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"pan delay\", pianoName: \"Pan Delay\", maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\n            promptName: \"Panning Delay\", promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"reset arp\", pianoName: \"Reset Arp\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\n            promptName: \"Reset Arpeggio\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\n        { name: \"eq filter\", pianoName: \"EQFlt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filter\", pianoName: \"N.Flt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"bit crush\", pianoName: \"Bitcrush\", maxRawVol: Config.bitcrusherQuantizationRange-1, newNoteVol: Math.round(Config.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\n            promptName: \"Instrument Bit Crush\", promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"freq crush\", pianoName: \"Freq Crush\", maxRawVol: Config.bitcrusherFreqRange-1, newNoteVol: Math.round(Config.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\n            promptName: \"Instrument Frequency Crush\", promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"echo\", pianoName: \"Echo\", maxRawVol: Config.echoSustainRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.echo,\n            promptName: \"Instrument Echo Sustain\", promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"echo delay\", pianoName: \"Echo Delay\", maxRawVol: Config.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Instrument Echo Delay\", promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\" ]\n        }, // Disabled via associatedEffect and manually in list build in SongEditor, enable and set back to echo after fixing bugginess!\n        { name: \"chorus\", pianoName: \"Chorus\", maxRawVol: Config.chorusRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chorus,\n            promptName: \"Instrument Chorus\", promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"eq filt cut\", pianoName: \"EQFlt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"eq filt peak\", pianoName: \"EQFlt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filt cut\", pianoName: \"N.Flt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filt peak\", pianoName: \"N.Flt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"pitch shift\", pianoName: \"Pitch Shift\", maxRawVol: Config.pitchShiftRange - 1, newNoteVol: Config.pitchShiftCenter, forSong: false, convertRealFactor: -Config.pitchShiftCenter, associatedEffect: EffectType.pitchShift,\n            promptName: \"Pitch Shift\", promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\n        { name: \"sustain\", pianoName: \"Sustain\", maxRawVol: Config.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Picked String Sustain\", promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"mix volume\", pianoName: \"Mix Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\n            promptName: \"Mix Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n        { name: \"fm slider 5\", pianoName: \"FM 5\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 5\", promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm slider 6\", pianoName: \"FM 6\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 6\", promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"decimal offset\", pianoName: \"Decimal Offset\", maxRawVol: 99, newNoteVol: 0, forSong: false, convertRealFactor: 0, optionalModify: \"invert-0to99\", associatedEffect: EffectType.length,\n            promptName: \"Decimal Offset\", promptDesc: [\"This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.\", \"[$LO - $HI] [%Duty]\"] },\n        \n        ]);\n}\n\nfunction centerWave(wave: Array<number>): Float32Array {\n    let sum: number = 0.0;\n    for (let i: number = 0; i < wave.length; i++) sum += wave[i];\n    const average: number = sum / wave.length;\n    for (let i: number = 0; i < wave.length; i++) wave[i] -= average;\n    performIntegral(wave);\n    // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n    wave.push(0);\n    return new Float32Array(wave);\n}\nfunction centerAndNormalizeWave(wave: Array<number>): Float32Array {\n    let magn: number = 0.0;\n\n    centerWave(wave);\n\n    // Going to length-1 because an extra 0 sample is added on the end as part of centerWave, which shouldn't impact magnitude calculation.\n    for (let i: number = 0; i < wave.length - 1; i++) {\n        magn += Math.abs(wave[i]);\n    }\n    const magnAvg: number = magn / (wave.length - 1);\n\n    for (let i: number = 0; i < wave.length - 1; i++) {\n        wave[i] = wave[i] / magnAvg;\n    }\n\n    return new Float32Array(wave);\n\n}\nexport function performIntegral(wave: { length: number, [index: number]: number }): Float32Array {\n    // Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\n    let cumulative: number = 0.0;\n    let newWave: Float32Array = new Float32Array(wave.length);\n    for (let i: number = 0; i < wave.length; i++) {\n        newWave[i] = cumulative;\n        cumulative += wave[i];\n    }\n\n    return newWave;\n}\nexport function performIntegralOld(wave: { length: number, [index: number]: number }): void {\n\t// Old ver used in harmonics/picked string instruments, manipulates wave in place.\n\tlet cumulative: number = 0.0;\n\tfor (let i: number = 0; i < wave.length; i++) {\n\t\tconst temp = wave[i];\n\t\twave[i] = cumulative;\n\t\tcumulative += temp;\n\t}\n}\n\nexport function getPulseWidthRatio(pulseWidth: number): number {\n    // BeepBox formula for reference\n    //return Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\n\n    return pulseWidth / (Config.pulseWidthRange * 2);\n}\n\n\n// The function arguments will be defined in FFT.ts, but I want\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\n    let wave: Float32Array | null = Config.chipNoises[index].samples;\n    if (wave == null) {\n        wave = new Float32Array(Config.chipNoiseLength + 1);\n        Config.chipNoises[index].samples = wave;\n\n\t\tif (index == 0) {\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 1 << 14;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 1) {\n\t\t\t// White noise is just random values for each sample.\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\n\t\t\t}\n\t\t} else if (index == 2) {\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 2 << 14;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 3) {\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 4) {\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n\t\t} else if (index == 5) {\n\t\t\t// \"Shine\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 6) {\n\t\t\t// \"Deep\" drums from modbox!\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n\t\t} else if (index == 7) {\n\t\t\t// \"Cutter\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 15 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 8) {\n\t\t\t// \"Metallic\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < 32768; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer -= 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n            }\n        } else if (index == 9) {\n            // a noise more like old static than white noise\n            let drumBuffer: number = 1;\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\n                let newBuffer: number = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 8 ^ 2 << 16;\n                }\n                drumBuffer = newBuffer;\n            }\n\t\t}\n\t\t\t\t\telse if (index == 10) {\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n                    wave[i] = Math.round(Math.random());\n                }\n            }\n\t\t\t else if (index == 11) {\n                var drumBuffer = 1;\n                for (var i = 0; i < 32768; i++) {\n                    wave[i] = Math.round((drumBuffer & 1));\n                    var newBuffer = drumBuffer >> 1;\n                    if (((drumBuffer + newBuffer) & 1) == 1) {\n                        newBuffer -= 10 << 2;\n                    }\n                    drumBuffer = newBuffer;\n                }\n            }\n\t\t\telse if (index == 12) {\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n                   var ultraboxnewchipnoiserand = Math.random();\n\t\t\t\t   wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\n                }\n            }\n\t\t\telse if (index == 13) {\n\t\t\t\tvar b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\t\n\t\t\t\tfor (let i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\twave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\twave[i] *= 0.44;\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t\t// from https://github.com/zacharydenton/noise.js, MIT license soooo\n                }\n            }\n\t\t\telse if (index == 14) {\n\t\t\t\tvar lastOut = 0.0;\n\t\t\t\t\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\twave[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = wave[i];\n\t\t\t\t\twave[i] *= 14;\n\t\t\t\t\t// this is also from noise.js\n                }\n            }\n\t\t//\telse if (index == 15) {\n\t\t//\t\tconst doomRandArray = [0, 8, 109, 220, 222, 241, 149, 107, 75, 248, 254, 140, 16, 66 , 74, 21, 211, 47, 80, 242, 154, 27, 205, 128, 161, 89, 77, 36 , 95, 110, 85, 48, 212, 140, 211, 249, 22, 79, 200, 50, 28, 188 , 52, 140, 202, 120, 68, 145, 62, 70, 184, 190, 91, 197, 152, 224 , 149, 104, 25, 178, 252, 182, 202, 182, 141, 197, 4, 81, 181, 242 , 145, 42, 39, 227, 156, 198, 225, 193, 219, 93, 122, 175, 249, 0 , 175, 143, 70, 239, 46, 246, 163, 53, 163, 109, 168, 135, 2, 235 , 25, 92, 20, 145, 138, 77, 69, 166, 78, 176, 173, 212, 166, 113 , 94, 161, 41, 50, 239, 49, 111, 164, 70, 60, 2, 37, 171, 75 , 136, 156, 11, 56, 42, 146, 138, 229, 73, 146, 77, 61, 98, 196 , 135, 106, 63, 197, 195, 86, 96, 203, 113, 101, 170, 247, 181, 113 , 80, 250, 108, 7, 255, 237, 129, 226, 79, 107, 112, 166, 103, 241 , 24, 223, 239, 120, 198, 58, 60, 82, 128, 3, 184, 66, 143, 224 , 145, 224, 81, 206, 163, 45, 63, 90, 168, 114, 59, 33, 159, 95 , 28, 139, 123, 98, 125, 196, 15, 70, 194, 253, 54, 14, 109, 226 , 71, 17, 161, 93, 186, 87, 244, 138, 20, 52, 123, 251, 26, 36 , 17, 46, 52, 231, 232, 76, 31, 221, 84, 37, 216, 165, 212, 106 , 197, 242, 98, 43, 39, 175, 254, 145, 190, 84, 118, 222, 187, 136 , 120, 163, 236, 249];\n\t\t//\t\tconst randomSeed = Math.floor(Math.random() * 256);\n\t\t//\t\tvar amountOfLoops = 0;\n\t\t//\t\tvar newWaveValue = 0;\n       //         for (let i = 0; i < Config.chipNoiseLength; i++) {\n\t\t//\t\t\tif (i / 256 > amountOfLoops) {amountOfLoops++;}\n\t\t//\t\t\tnewWaveValue = doomRandArray.at(i - amountOfLoops * 256 + randomSeed);\n\t\t//\t\t\tif (newWaveValue > 256) {newWaveValue += - 256;}\n\t\t//\t\t\twave[i] = newWaveValue * 0.0025;\n\t\t\t\t\t//this sucks\n\t\t\t\t\t//also the randomized starting point code I spent 5 minutes on does nothing (auditorily)\n        //        }\n            //}\n\t\t\n\t\telse {\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\n\t\t}\n\n        wave[Config.chipNoiseLength] = wave[0];\n    }\n\n    return wave;\n}\n\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\n    const referenceOctave: number = 11;\n    const referenceIndex: number = 1 << referenceOctave;\n    const lowIndex: number = Math.pow(2, lowOctave) | 0;\n    const highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\n    const retroWave: Float32Array = getDrumWave(0, null, null);\n    let combinedAmplitude: number = 0.0;\n    for (let i: number = lowIndex; i < highIndex; i++) {\n\n        let lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\n        let amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\n\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\n\n        combinedAmplitude += amplitude;\n\n        // Add two different sources of psuedo-randomness to the noise\n        // (individually they aren't random enough) but in a deterministic\n        // way so that live spectrum editing doesn't result in audible pops.\n        // Multiply all the sine wave amplitudes by 1 or -1 based on the\n        // LFSR retro wave (effectively random), and also rotate the phase\n        // of each sine wave based on the golden angle to disrupt the symmetry.\n        amplitude *= retroWave[i];\n        const radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\n\n        wave[i] = Math.cos(radians) * amplitude;\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\n    }\n\n    return combinedAmplitude;\n}\n\nfunction generateSineWave(): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\n    }\n    return wave;\n}\n\nfunction generateTriWave(): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) / (Math.PI / 2);\n    }\n    return wave;\n}\n\nfunction generateTrapezoidWave(drive: number = 2): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) * drive));\n    }\n    return wave;\n}\n\nfunction generateSquareWave(phaseWidth: number = 0): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    const centerPoint: number = Config.sineWaveLength / 4;\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * Config.sineWaveLength / 2)\n            || ((Math.abs(i - Config.sineWaveLength - centerPoint) < phaseWidth * Config.sineWaveLength / 2))) * 2 - 1;\n    }\n    return wave;\n}\n\nfunction generateSawWave(inverse: boolean = false): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = ((i + (Config.sineWaveLength / 4.0)) * 2.0 / Config.sineWaveLength) % 2 - 1;\n        wave[i] = inverse ? -wave[i] : wave[i];\n    }\n    return wave;\n}\n\n\t// function generateWhiteNoiseFmWave() {\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            // wave[i] = Math.random() * 2.0 - 1.0;\n        // }\n        // return wave;\n    // }\n\t// function generateOneBitWhiteNoiseFmWave() {\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            // wave[i] = Math.round(Math.random());\n        // }\n        // return wave;\n    // }\n\tfunction generateRoundedSineWave() {\n        const wave = new Float32Array(Config.sineWaveLength + 1);\n        for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength));\n        }\n        return wave;\n\t}\n\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\n    let arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\n    if (arpeggioPattern != null) {\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\n            arpeggioPattern = [0, 0, 1, 1];\n        }\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\n    } else {\n        return arpeggio % pitchCount;\n    }\n}\n\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\n    const dictionary: Dictionary<T> = {};\n    for (let i: number = 0; i < array.length; i++) {\n        const value: any = array[i];\n        value.index = i;\n        dictionary[value.name] = <T>value;\n    }\n    const result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\n    result.dictionary = dictionary;\n    return result;\n}\n\nexport function effectsIncludeTransition(effects: number): boolean {\n    return (effects & (1 << EffectType.transition)) != 0;\n}\nexport function effectsIncludeChord(effects: number): boolean {\n    return (effects & (1 << EffectType.chord)) != 0;\n}\nexport function effectsIncludePitchShift(effects: number): boolean {\n    return (effects & (1 << EffectType.pitchShift)) != 0;\n}\nexport function effectsIncludeDetune(effects: number): boolean {\n    return (effects & (1 << EffectType.detune)) != 0;\n}\nexport function effectsIncludeVibrato(effects: number): boolean {\n    return (effects & (1 << EffectType.vibrato)) != 0;\n}\nexport function effectsIncludeNoteFilter(effects: number): boolean {\n    return (effects & (1 << EffectType.noteFilter)) != 0;\n}\nexport function effectsIncludeDistortion(effects: number): boolean {\n    return (effects & (1 << EffectType.distortion)) != 0;\n}\nexport function effectsIncludeBitcrusher(effects: number): boolean {\n    return (effects & (1 << EffectType.bitcrusher)) != 0;\n}\nexport function effectsIncludePanning(effects: number): boolean {\n    return (effects & (1 << EffectType.panning)) != 0;\n}\nexport function effectsIncludeChorus(effects: number): boolean {\n    return (effects & (1 << EffectType.chorus)) != 0;\n}\nexport function effectsIncludeEcho(effects: number): boolean {\n    return (effects & (1 << EffectType.echo)) != 0;\n}\nexport function effectsIncludeReverb(effects: number): boolean {\n    return (effects & (1 << EffectType.reverb)) != 0;\n}\nexport function rawChipToIntegrated(raw: DictionaryArray<ChipWave>): DictionaryArray<ChipWave> {\n    const newArray: Array<ChipWave> = new Array<ChipWave>(raw.length);\n    const dictionary: Dictionary<ChipWave> = {};\n    for (let i: number = 0; i < newArray.length; i++) {\n        newArray[i] = Object.assign([], raw[i]);\n        const value: any = newArray[i];\n        value.index = i;\n        dictionary[value.name] = <ChipWave>value;\n    }\n    for (let key in dictionary) {\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\n    }\n    const result: DictionaryArray<ChipWave> = <DictionaryArray<ChipWave>><any>newArray;\n    result.dictionary = dictionary;\n    return result;\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap, TypePresets } from \"../synth/SynthConfig\";\n\nexport interface PresetCategory extends BeepBoxOption {\n    readonly presets: DictionaryArray<Preset>;\n}\n\nexport interface Preset extends BeepBoxOption {\n    readonly isNoise?: boolean;\n    readonly isMod?: boolean;\n    readonly generalMidi?: boolean;\n    readonly midiProgram?: number;\n    readonly midiSubharmonicOctaves?: number;\n    readonly customType?: InstrumentType;\n    readonly settings?: any;\n}\n\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\n\nexport function prettyNumber(value: number): string {\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\n}\n\nexport class EditorConfig {\n    public static readonly version: string = \"0.8.0\"; // Using patch versions in display right now, maybe TODAY.\n    public static readonly versionDisplayName: string = \"AbyssBox \" + EditorConfig.version;\n\n    public static readonly releaseNotesURL: string = \"./patch_notes.html\";\n\n    public static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n    public static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\n    public static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\n\n    public static customSamples: string[] | null;\n\t//is this how you do it????\n\t\n    public static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\n        {\n            name: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: TypePresets[InstrumentType.chip], customType: InstrumentType.chip },\n                { name: TypePresets[InstrumentType.fm], customType: InstrumentType.fm },\n                { name: TypePresets[InstrumentType.noise], customType: InstrumentType.noise },\n                { name: TypePresets[InstrumentType.spectrum], customType: InstrumentType.spectrum },\n                { name: TypePresets[InstrumentType.drumset], customType: InstrumentType.drumset },\n                { name: TypePresets[InstrumentType.harmonics], customType: InstrumentType.harmonics },\n                { name: TypePresets[InstrumentType.pwm], customType: InstrumentType.pwm },\n                { name: TypePresets[InstrumentType.pickedString], customType: InstrumentType.pickedString },\n                { name: TypePresets[InstrumentType.customChipWave], customType: InstrumentType.customChipWave },\n                { name: TypePresets[InstrumentType.fm6op], customType: InstrumentType.fm6op },\n            ])\n        },\n        {\n            name: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\n                { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\n                { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\n                { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\n                { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n                { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n                { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n                { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\n                { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\n                { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\n                { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\n                { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\n                { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\n                { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\n                { name: \"FM sine\", midiProgram: 55, settings: { \"type\": \"FM\", \"transition\": \"seemless\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n\n            ])\n        },\n        {\n            name: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n                { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\n                { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n                { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n                { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\n                { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\n                { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\n                { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n\n            ])\n        },\n        {\n            name: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\n                { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\n                { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\n                { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\n                { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n                { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\n                { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\n                { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\n                { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\n                { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\n            ])\n        },\n        {\n            name: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\n                { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\n                { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\n            ])\n        },\n        {\n            name: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\n                { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\n                { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\n                { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\n                { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\n                { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\n                { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\n            ])\n        },\n        {\n            name: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\n                { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\n                { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\n                { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\n                { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\n            ])\n        },\n        {\n            name: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n                { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n                { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\n                { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\n                { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\n                { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\n                { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\n            ])\n        },\n        {\n            name: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\n                { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n                { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\n                { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\n                { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\n                { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\n            ])\n        },\n        {\n            name: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n                { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\n                { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n                { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n                { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n                { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\n                { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\n                { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n                { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\n                { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\n                { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\n            ])\n        },\n        {\n            name: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\n                { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n                { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\n                { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\n                { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\n            ])\n        },\n        {\n            name: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n                { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\n                { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\n                { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\n                { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\n                { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\n            ])\n        },\n        {\n            name: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n                { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\n                { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n                { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n                { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\n                { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n                { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            ])\n        },\n        {\n            name: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\n                { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\n                { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\n                { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\n                { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\n                { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\n                { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\n                { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\n                { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n            ])\n        },\n        {\n            name: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\n                { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\n                { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n                { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\n                { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n                { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n                { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\n                { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\n                { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n            ])\n        },\n        {\n            name: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\n                { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\n                { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n                { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\n                { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n                { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\n                { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\n                { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n                { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n                { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\n                { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\n                { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n            ])\n        },\n        {\n            name: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n                { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\n                { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n                { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\n                { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\n                { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\n                { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\n                { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\n                { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\n                { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\n                { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\n                { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\n                { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\n                { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\n                { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\n                { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            ])\n        },\n         { name: \"Modbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n\t\t\t{ name: \"modbox theepsynth\", settings: { \"type\": \"FM\", \"effects\": \"none\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n               ]) },\n\t\t\t   { name: \"Sandbox Presets\", presets: toNameMap([\n                { name: \"sandbox netsky hollow\", generalMidi: false, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45] } },\n                { name: \"sandbox abnormality\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"spiky\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\n                { name: \"sandbox playstation\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"glitch\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\n                { name: \"sandbox harmony pulse\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"punch\", \"wave\": \"double pulse\", \"interval\": \"union\", \"vibrato\": \"none\" } },\n                { name: \"sandbox pink ping\", generalMidi: false, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 3000, \"filterResonance\": 0, \"filterEnvelope\": \"tripolo6\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"sandbox tv static\", generalMidi: false, isNoise: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 40, \"filterEnvelope\": \"steady\", \"wave\": \"static\" } },\n                { name: \"sandbox clean pulse\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] } },\n\t\t\t\t{ name: \"sandbox snp chorus\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"chorus & reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 1, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }] } },\n\t\t\t\t{ name: \"sandbox snp echo\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"chorus\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 9, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 5, \"envelope\": \"twang 2\" }] } },\n                { name: \"sandbox tori synth lead\", generalMidi: false, settings: { \"type\": \"harmonics\", \"effects\": \"chorus\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 71, 71, 43, 43, 43, 29, 29, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 29, 14, 0, 0, 0, 86] } },\n                { name: \"sandbox glorious piano 1\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [24, 24, -16, -15, -15, -14, -13, -13, -12, -11, -11, -10, -9, -8, -8, -7, -6, -5, -5, -4, -3, -2, -2, 23, 22, 22, 21, 20, 20, 19, 19, 18, 18, 17, 16, 15, 15, 14, 13, 12, 12, 11, 0, -1, -1, -2, -3, -3, -4, -5, -5, -6, -20, -19, -17, -17, -14, -11, -8, -5, -2, -23, -24, -24] } },\n                { name: \"sandbox glorious piano 2\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"interval\": \"shimmer\", \"vibrato\": \"light\", \"customChipWave\": [24, 24, -16, -15, -15, -14, -13, -13, -12, 12, 9, 5, 2, -3, -7, -10, -6, -5, -5, -4, -3, -2, -2, 23, 22, 22, 21, 20, 20, 19, 19, 18, 18, 17, 16, 15, 15, 0, 4, 8, 15, 21, 0, -1, -1, -2, -3, -3, -4, -5, -5, -6, -20, -19, -17, -17, -2, -2, -8, 2, -2, -5, -24, -24] } },\n                { name: \"sandbox muffled katrumpet\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"light\", \"customChipWave\": [24, 23, 22, 22, 22, 22, 22, 21, 21, 19, 19, 15, 11, 7, 5, -2, -5, -11, -13, -14, -16, -17, -17, -17, -17, -17, -17, -17, -17, -13, -10, -1, 4, 6, 8, 10, 11, 14, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 11, 8, 4, 2, -4, -7, -11, -12, -13, -14, -15, -15, -15] } },\n                { name: \"sandbox ehruthing\", generalMidi: false, settings: { \"type\": \"custom chip\", \"hard fade\": \"seamless\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [24, 24, 23, 22, 21, 21, 20, 19, 18, 18, 17, 16, 15, -22, -20, -18, -16, -14, -13, -11, -10, -7, -6, -4, -3, -2, 0, 2, 4, 17, 16, 15, 13, 12, 11, 9, 8, 6, 5, 4, 3, 2, 1, -1, -1, -2, -3, -4, -6, -6, -7, -8, -8, -9, -10, -10, -11, -13, -15, -16, -17, -3, -4, -5] } },\n\t\t\t\t{ name: \"sandbox wurtz organ\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"seamless\", \"effects\": \"chorus\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"tremolo6\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"tripolo3\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"pentolo3\" }, { \"frequency\": \"8×\", \"amplitude\": 2, \"envelope\": \"pentolo6\" }] } },\n            //some of these dont load, I need to fix them\n\t\t\t]) },\n     { name: \"Blackbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n               \t{ name: \"blackbox deep key\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 32, \"filterEnvelope\": \"twang 1\", \"interval\": \"shimmer\", \"vibrato\": \"light\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 30] } },\n\t\t\t\t{ name: \"blackbox ring ding\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1500, \"filterResonance\": 16, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"12×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"22×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }] } },\n\t\t\t\t//blackbox adds LITERALLY TWO presets. that's it.\n\t\t\t  ]) },\n\t\t\t  { name: \"Todbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n        { name: \"todbox accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"todbox accordian\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\n\t\t\t{ name: \"todbox wind\", generalMidi: false, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 200, \"filterResonance\": 2950, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1→3 2→4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 0, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 0, \"envelope\": \"flare 2\" }] } },\n\t\t\t ]) },\n\t\t\t { name: \"Old Beepbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"old grand piano\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\n\t\t\t\t{ name: \"old bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\n              { name: \"old honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\n              //  { name: \"old electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\n              //  { name: \"old electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\n                { name: \"old harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\n                { name: \"old dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\n\t\t\t                { name: \"old music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\n                { name: \"old music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\n\t\t\t { name: \"old tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\n\t\t\t { name: \"old steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\n\t\t\t     { name: \"old cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\n\t\t\t                { name: \"old choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\n                { name: \"old choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"old choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\n                { name: \"old solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\n                { name: \"old solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"old solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\n\t\t\t { name: \"old pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\n\t\t\t  { name: \"old timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\n\t\t\t\t\t\t\t\t//meant for old beepbox presets that changed in the latest beepbox version to be more 'realistic'\n\t\t\t\t\t\t\t\t//probably need to add more\n\t\t\t\t\t\t\t\t//timpani and pan flute act strangely...?\n\t\t\t]) },\n\t\t\t{ name: \"UltraBox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n              \t\t\t{ name: \"vrc6 sawtooth\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 } ], \"effects\": [ \"panning\", \"transition type\", \"chord type\", \"detune\", \"vibrato\" ], \"transition\": \"normal\", \"clicklessTransition\": true, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"detuneCents\": 0, \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"none\", \"customChipWave\": { \"0\": -1, \"1\": -1, \"2\": -1, \"3\": -1, \"4\": -1, \"5\": -1, \"6\": -1, \"7\": -1, \"8\": -1, \"9\": -5, \"10\": -5, \"11\": -5, \"12\": -4, \"13\": -4, \"14\": -4, \"15\": -3, \"16\": -3, \"17\": -3, \"18\": -7, \"19\": -7, \"20\": -6, \"21\": -6, \"22\": -5, \"23\": -5, \"24\": -4, \"25\": -4, \"26\": -4, \"27\": -7, \"28\": -7, \"29\": -6, \"30\": -6, \"31\": -5, \"32\": -5, \"33\": -4, \"34\": -4, \"35\": -4, \"36\": -8, \"37\": -8, \"38\": -7, \"39\": -7, \"40\": -6, \"41\": -6, \"42\": -5, \"43\": -5, \"44\": -4, \"45\": -4, \"46\": 21, \"47\": 20, \"48\": 18, \"49\": 17, \"50\": 16, \"51\": 14, \"52\": 13, \"53\": 12, \"54\": 11, \"55\": 7, \"56\": 6, \"57\": 6, \"58\": 5, \"59\": 5, \"60\": 5, \"61\": 4, \"62\": 4, \"63\": 4 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n               { name: \"nes white\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit white\", \"envelopes\": [] } }, \n\t\t\t\t { name: \"nes ping\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit metallic\", \"envelopes\": [] } }, \n\t\t\t\t{ name: \"distorted pulse vocal\", generalMidi: false, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"vibrato\", \"note filter\", \"bitcrusher\", \"echo\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"noteSubFilters0\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 14, \"echoDelayBeats\": 0.167, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"1/8 pulse\", \"unison\": \"none\", \"envelopes\": [] } },\n              { name: \"dubsteb bwah\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"chord type\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 } ] } },\n { name: \"FM cool bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"note filter\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 } ] } },\n                { name: \"FM funky bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.1768 } ], \"eqFilterType\": true, \"eqSimpleCut\": 5, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" } ] } },\n                { name: \"mrow\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [], \"effects\": [ \"panning\", \"chord type\", \"reverb\" ], \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"reverb\": 35, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [ { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" } ] } },\n                { name: \"talking bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"chord type\" ], \"chord\": \"custom interval\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"2×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"note size\" } ] } },\n                { name: \"synth marimba\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 176.78, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.5 } ], \"effects\": [ \"note filter\", \"echo\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 } ], \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"harmonics\": [ 86, 100, 29, 29, 0, 0, 0, 100, 0, 0, 0, 86, 29, 0, 14, 100, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 86 ], \"unison\": \"fifth\", \"stringSustain\": 7, \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" } ] } }, \n\t\t\t{ name: \"italian accordian\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6000, \"linearGain\": 0.5 } ], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 1, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"chorus\", \"reverb\" ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 45, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"honky tonk\", \"customChipWave\": { \"0\": -24, \"1\": -24, \"2\": -24, \"3\": -24, \"4\": -24, \"5\": -24, \"6\": -24, \"7\": -24, \"8\": -24, \"9\": -24, \"10\": -24, \"11\": -24, \"12\": -24, \"13\": -24, \"14\": -24, \"15\": -24, \"16\": 24, \"17\": 24, \"18\": 24, \"19\": 24, \"20\": 24, \"21\": 24, \"22\": 24, \"23\": 24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": -24, \"32\": -24, \"33\": -24, \"34\": -24, \"35\": -24, \"36\": -24, \"37\": -24, \"38\": -24, \"39\": -24, \"40\": 24, \"41\": 24, \"42\": 24, \"43\": 24, \"44\": 24, \"45\": 24, \"46\": 24, \"47\": 24, \"48\": -24, \"49\": -24, \"50\": -24, \"51\": -24, \"52\": -24, \"53\": -24, \"54\": -24, \"55\": -24, \"56\": -24, \"57\": -24, \"58\": -24, \"59\": -24, \"60\": -24, \"61\": -24, \"62\": -24, \"63\": -24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n              { name: \"custom chip supersaw\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"vibrato\", \"chorus\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"dissonant\", \"customChipWave\": { \"0\": 22, \"1\": 22, \"2\": 16, \"3\": 6, \"4\": 0, \"5\": -3, \"6\": -8, \"7\": -10, \"8\": -13, \"9\": -16, \"10\": -19, \"11\": -19, \"12\": -20, \"13\": -22, \"14\": -22, \"15\": -24, \"16\": -24, \"17\": -24, \"18\": -24, \"19\": -24, \"20\": -24, \"21\": -24, \"22\": -24, \"23\": -24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": 24, \"32\": 24, \"33\": 16, \"34\": 9, \"35\": 6, \"36\": 4, \"37\": 2, \"38\": 0, \"39\": -1, \"40\": -3, \"41\": -4, \"42\": -4, \"43\": -6, \"44\": -6, \"45\": -6, \"46\": -6, \"47\": -5, \"48\": -5, \"49\": -4, \"50\": -2, \"51\": -2, \"52\": 1, \"53\": 4, \"54\": 6, \"55\": 8, \"56\": 10, \"57\": 12, \"58\": 14, \"59\": 16, \"60\": 18, \"61\": 19, \"62\": 22, \"63\": 24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n               { name: \"fm supersaw\", generalMidi: false, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"note filter\", \"chorus\", \"reverb\" ], \"transition\": \"continue\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4 5 6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 10, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 7, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 6, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 } ], \"envelopes\": [] } },\n\t\t\t //THANKS ANSWEARING MACHINE\n\t\t\t { name: \"obama why\", generalMidi: false, settings:{ \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"note filter\", \"panning\", \"reverb\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 } ], \"pan\": 0, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"harmonics\": [ 100, 86, 29, 29, 14, 14, 0, 14, 14, 43, 71, 100, 100, 86, 71, 71, 57, 57, 43, 43, 43, 43, 43, 0, 0, 0, 0, 0 ], \"unison\": \"octave\", \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" } ] } },\n\t\t\t //thanks to nobo ig? (this is from a beepcord inside joke)\n\t\t\t\n\t\t\t\n\t\t\t\t //custom presets from this mod\t\t \n\t\t\t]) },\n            {   name: \"Le choptop84's presets\", presets: <DictionaryArray<Preset>>toNameMap([ // weeb shit - me\n               { name: \"Demonic Bell\", generalMidi: false, settings:  {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.0884}],\"effects\":[\"detune\",\"distortion\",\"bitcrusher\",\"echo\",\"reverb\"],\"detuneCents\":-52,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":29,\"panDelay\":10,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":68,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"harmonics\":[43,71,71,100,86,100,43,86,71,57,86,29,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],\"unison\":\"shimmer\",\"stringSustain\":64,\"envelopes\":[]} },\n               { name: \"Spacey Triangle\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":4}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":4}],\"effects\":[\"transition type\",\"vibrato\",\"distortion\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"shaky\",\"vibratoDepth\":0.1,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":1,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":86,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"wave\":\"triangle\",\"unison\":\"dirty\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[]} },\n\n            ])},\n\n    ]);\n\n    public static valueToPreset(presetValue: number): Preset | null {\n        const categoryIndex: number = presetValue >> 6;\n        const presetIndex: number = presetValue & 0x3F;\n        return EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\n    }\n\n    public static midiProgramToPresetValue(program: number): number | null {\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset: Preset = category.presets[presetIndex];\n                if (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n\n    public static nameToPresetValue(presetName: string): number | null {\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset: Preset = category.presets[presetIndex];\n                if (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n\n    public static instrumentToPreset(instrument: InstrumentType): Preset | null {\n        return EditorConfig.presetCategories[0].presets.dictionary?.[TypePresets?.[instrument]];\n    }\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\nimport { Song } from \"../synth/synth\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\nexport interface ChannelColors extends BeepBoxOption {\n    readonly secondaryChannel: string;\n    readonly primaryChannel: string;\n    readonly secondaryNote: string;\n    readonly primaryNote: string;\n}\n\nexport class ColorConfig {\n    public static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\n\n    public static readonly themes: { [name: string]: string } = {\n      \"AbyssBox Classic\": `\n\t\t\t:root {\t\t\n\t\t\t--page-margin: #1e0915; \t\t\n\t\t\t--editor-background: #1e0915; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\n\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t--ui-widget-focus: #762b4c; \t\t\n\t\t\t--pitch-background: #381d24; \t\t\n\t\t\t--tonic: #873a51; \t\t\n\t\t\t--fifth-note: #75001e; \t\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f; \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\n\t\t\t--track-editor-bg-noise: #571131; \t\t\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\t\t\t\t}\n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType\";\n\t\t   src:\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'AbyssType';\n\t\t\t}\n\n\t\t   var(--track-font): 'AbyssType';\n\n\t\t\t`,\n  \"AbyssBox Competative\": `\n\t\t\t:root { \t\t\n\t\t\t--page-margin: #000000; \t\t\n\t\t\t--editor-background: #000000; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: white; \t\t\n\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t--inverted-text: black;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\n\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t--ui-widget-focus: #000000; \t\t\n\t\t\t--pitch-background: #240f15; \t\t\n\t\t\t--tonic: #a34b65; \t\t\n\t\t\t--fifth-note: #75001e; \t\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f; \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\n\t\t\t--track-editor-bg-noise: #571131; \t\t\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \n\t\t\t--track-font: \"AbyssType\";\t\n\t\t\t\t}\n\t\t/* sets cursor */ \n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\n\t\t}\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType\";\n\t\t   src:\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'AbyssType_small';\n\t\t\t}\n\t\t   var(--track-font): 'AbyssType';\n\n\t\t\t`,\n  \"AbyssBox Light\": `\n\t\t\t:root { \t\t\n\t\t\t--page-margin: #e8bcc9; \t\t\n\t\t\t--editor-background: #e8bcc9; \t\t\n\t\t\t--hover-preview: white; \t\t\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t--primary-text: #c763a0; \t\t\n\t\t\t--secondary-text: #c763a0; \t\t\n\t\t\t--inverted-text:  #e8bcc9;\t \t\t\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\n\t\t\t--loop-accent: #8c346a; \t\t\n\t\t\t--link-accent: #8c346a; \t\t\n\t\t\t--ui-widget-background: #f5e9f0;\t\t\n\t\t\t--ui-widget-focus: #8c346a; \t\t\n\t\t\t--pitch-background: #eddadf; \t\t\n\t\t\t--tonic: #f2e6e9; \t\t\n\t\t\t--fifth-note: #75001e; \t\t\n\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t--black-piano-key: #402f2f; \t\t\n\t\t\t--use-color-formula: true; \t\t\n\t\t\t--track-editor-bg-pitch: #decad8; \t\t\n\t\t\t--track-editor-bg-pitch-dim: #bfb0bb; \t\t\n\t\t\t--track-editor-bg-noise: #d6a3ca; \t\t\n\t\t\t--track-editor-bg-noise-dim: #b389a9; \t\t\n\t\t\t--track-editor-bg-mod: #b0649e; \t\t\n\t\t\t--track-editor-bg-mod-dim: #915683; \t\t\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t--mod-label-primary-text: gray; \n\t\t\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t--pitch-secondary-channel-hue-scale 0; \t\t\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-channel-lum: 20; \t\t\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t--pitch-primary-channel-lum: 47.5; \t\t\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t--pitch-secondary-note-lum: 15; \t\t\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\n\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t--pitch-primary-note-sat: 45; \t\t\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t--pitch-primary-note-lum: 45.6; \t\t\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\n\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t--noise-primary-note-sat: 75; \t\t\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\n\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\n\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t--mod-primary-note-lum-scale: 0; \t\n\t\t\t--track-font: \"AbyssType\";\n\t\t\t\t}\n\t\t/* sets cursor */ \n\t\t* {\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\n\t\t}\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType\";\n\t\t   src:\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'AbyssType_small';\n\t\t\t}\n\t\t   var(--track-font): 'AbyssType';\n\n\t\t\t`,\n      \"dark classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n        \"dark competition\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: #ddd;\n\t\t\t\t\t--playhead: #ddd;\n\t\t\t\t\t--primary-text: #ddd;\n\t\t\t\t\t--secondary-text: #8e695b;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\n\t\t\t\t\t--loop-accent: #bf15ba;\n\t\t\t\t\t--link-accent: #f888ff;\n\t\t\t\t\t--ui-widget-background: #443a3a;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #353333;\n\t\t\t\t\t--tonic: #884a44;\n\t\t\t\t\t--fifth-note: #415498;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t}\n\t\t`,\n        \"light classic\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t--page-margin: #685d88;\n\t\t\t\t--editor-background: white;\n\t\t\t\t--hover-preview: black;\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t--primary-text: black;\n\t\t\t\t--secondary-text: #777;\n\t\t\t\t--inverted-text: white;\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t--loop-accent: #98f;\n\t\t\t\t--link-accent: #74f;\n\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\n\t\t\t\t\t--multiplicative-mod-slider: #789;\n\t\t\t\t\t--overwriting-mod-slider: #987;\n\t\t\t\t\t--indicator-primary: #98f;\n\t\t\t\t\t--indicator-secondary: #cde;\n\t\t\t\t\t--select2-opt-group: #cecece;\n\t\t\t\t\t--input-box-outline: #ddd;\n\t\t\t\t\t--mute-button-normal: #c0b47f;\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\n\t\t\t\t--pitch7-primary-note:      #6C8000;\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\n\t\t\t\t--pitch8-primary-note:      #A6001D;\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\n\t\t\t\t--pitch9-primary-channel:   #00B481;\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\n\t\t\t\t--pitch9-primary-note:      #00835E;\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\n\t\t\t\t--pitch10-primary-note:     #8400E3;\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\n\t\t\t\t--noise4-primary-channel:   #8553AE;\n\t\t\t\t--noise4-secondary-note:    #B290CC;\n\t\t\t\t--noise4-primary-note:      #684F7D;\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\n\t\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t\t--noise5-secondary-note:    #ABC183;\n\t\t\t\t--noise5-primary-note:      #68784C;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #a86810;\n\t\t\t\t\t--mod-label-primary:        #dddddd;\n\t\t\t\t\t--mod-label-secondary-text: #777;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #666;\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\n\t\t\t}\n\t\t\t\n\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t`,\n        \"jummbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\n\t\t\t\t}\n\t\t\t`,\n        \"forest\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #010c03;\n\t\t\t\t\t--editor-background: #010c03;\n\t\t\t\t\t--hover-preview: #efe;\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\n\t\t\t\t\t--primary-text: #efe;\n\t\t\t\t\t--secondary-text: #70A070;\n\t\t\t\t\t--inverted-text: #280228;\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\n\t\t\t\t\t--box-selection-fill: #267aa3;\n\t\t\t\t\t--loop-accent: #ffe845;\n\t\t\t\t\t--link-accent: #9f8;\n\t\t\t\t\t--ui-widget-background: #203829;\n\t\t\t\t\t--ui-widget-focus: #487860;\n\t\t\t\t\t--pitch-background: #203829;\n\t\t\t\t\t--tonic: #2b8d20;\n\t\t\t\t\t--fifth-note: #385840;\n\t\t\t\t\t--white-piano-key: #bda;\n\t\t\t\t\t--black-piano-key: #573;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\n\t\t\t\t\t--track-editor-bg-noise: #304050;\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\n\t\t\t\t\t--track-editor-bg-mod: #506030;\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\n\t\t\t\t\t--indicator-primary: #dcd866;\n\t\t\t\t\t--indicator-secondary: #203829;\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\n\t\t\t\t\t--input-box-outline: #242;\n\t\t\t\t\t--mute-button-normal: #49e980;\n\t\t\t\t\t--mute-button-mod: #c2e502;\n\t\t\t\t\t--mod-label-primary: #133613;\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\n\t\t\t\t\t--mod-label-primary-text: #efe;\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-note-hue: 120;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 80;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-channel-sat: 48;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 65;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 33;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 200;\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 64;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 40;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-channel-sat: 60;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 40;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-note-sat: 62;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 55;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 40;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-note-sat: 66;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\n\t\t\t\t\t--disabled-note-secondary:  #395440;\n\t\t\t\t}\n\t\t\t`,\n        \"canyon\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0a0000;\n\t\t\t\t\t--editor-background: #0a0000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\n\t\t\t\t\t--primary-text: #f5d6bf;\n\t\t\t\t\t--secondary-text: #934050;\n\t\t\t\t\t--inverted-text: #290505;\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\n\t\t\t\t\t--box-selection-fill: #94044870;\n\t\t\t\t\t--loop-accent: #ff1e1e;\n\t\t\t\t\t--link-accent: #da7b76;\n\t\t\t\t\t--ui-widget-background: #533137;\n\t\t\t\t\t--ui-widget-focus: #743e4b;\n\t\t\t\t\t--pitch-background: #4f3939;\n\t\t\t\t\t--tonic: #9e4145;\n\t\t\t\t\t--fifth-note: #5b3e6b;\n\t\t\t\t\t--white-piano-key: #d89898;\n\t\t\t\t\t--black-piano-key: #572b29;\n                    --white-piano-key-text: #131200;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\n\t\t\t\t\t--track-editor-bg-mod: #552045;\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\n\t\t\t\t\t--indicator-primary: #f2f764;\n\t\t\t\t\t--indicator-secondary: #4f3939;\n\t\t\t\t\t--select2-opt-group: #673030;\n\t\t\t\t\t--input-box-outline: #443131;\n\t\t\t\t\t--mute-button-normal: #d81833;\n\t\t\t\t\t--mute-button-mod: #9e2691;\n\t\t\t\t\t--mod-label-primary: #5f2b39;\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 60;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 60;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 60;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 222;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 222;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 54;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 222;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 75;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #515164;\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\n\t\t\t\t}\n\t\t\t`,\n        \"midnight\": `\n\t\t:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #757575;\n\t\t\t--playhead: #fff;\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #acacac;\n\t\t\t--inverted-text: #290505;\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\n\t\t\t--box-selection-fill: #79797970;\n\t\t\t--loop-accent: #646464;\n\t\t\t--link-accent: #707070;\n\t\t\t--ui-widget-background: #353535;\n\t\t\t--ui-widget-focus: #464646;\n\t\t\t--pitch-background: #222121;\n\t\t\t--tonic: #555955;\n\t\t\t--fifth-note: #1a1818;\n\t\t\t--white-piano-key: #a89e9e;\n\t\t\t--black-piano-key: #2d2424;\n            --white-piano-key-text: #131200;\n            --black-piano-key-text: #ffffff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #373737;\n\t\t\t--track-editor-bg-pitch-dim: #131313;\n\t\t\t--track-editor-bg-noise: #484848;\n\t\t\t--track-editor-bg-noise-dim: #131313;\n\t\t\t--track-editor-bg-mod: #373737;\n\t\t\t--track-editor-bg-mod-dim: #131313;\n\t\t\t--multiplicative-mod-slider: #555;\n\t\t\t--overwriting-mod-slider: #464545;\n\t\t\t--indicator-primary: #e0e0e0;\n\t\t\t--indicator-secondary: #404040;\n\t\t\t--select2-opt-group: #3c3b3b;\n\t\t\t--input-box-outline: #757575;\n\t\t\t--mute-button-normal: #8e8d8d;\n\t\t\t--mute-button-mod: #ddd;\n\t\t\t--mod-label-primary: #262526;\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\n\t\t\t--mod-label-primary-text: #b9b9b9;\n\t\t\t--pitch-secondary-channel-hue: 240;\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\n\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 25;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 240;\n\t\t\t--pitch-primary-channel-hue-scale: 228;\n\t\t\t--pitch-primary-channel-sat: 80;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 60.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 240;\n\t\t\t--pitch-secondary-note-hue-scale: 228;\n\t\t\t--pitch-secondary-note-sat: 73.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 32;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 240;\n\t\t\t--pitch-primary-note-hue-scale: 228;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 80.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 160;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 160;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 160;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 62;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 30;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 62;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 62;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 34;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 62;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 75;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #66a;\n\t\t\t--disabled-note-secondary:  #447;\n\t\t}\n\t`,\n        \"jummbox light\": `\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #cab1d3;\n\t\t\t\t\t--editor-background: #f4f4f4;\n\t\t\t\t\t--hover-preview: #2d26a2;\n\t\t\t\t\t--playhead: rgb(20 25 153 / 90%);\n\t\t\t\t\t--primary-text: #b686c3;\n\t\t\t\t\t--secondary-text: #970f38;\n\t\t\t\t\t--inverted-text: #fefdff;\n\t\t\t\t\t--text-selection: rgb(56 21 8 / 99%);\n\t\t\t\t\t--box-selection-fill: rgb(20 203 160 / 61%);\n\t\t\t\t\t--loop-accent: #09dc0e;\n\t\t\t\t\t--link-accent: #3ee669;\n\t\t\t\t\t--ui-widget-background: #0e0a42;\n\t\t\t\t\t--ui-widget-focus: #380c42;\n\t\t\t\t\t--pitch-background: #8daf96;\n\t\t\t\t\t--tonic: #a16fb1;\n\t\t\t\t\t--fifth-note: #d08c8c;\n\t\t\t\t\t--white-piano-key: #fbffee;\n\t\t\t\t\t--black-piano-key: #c9d8e5;\n\t\t\t\t\t--white-piano-key-text: #101160;\n\t\t\t\t\t--black-piano-key-text: #231b03;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #34456a;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #88afad;\n\t\t\t\t\t--track-editor-bg-noise: #564566;\n\t\t\t\t\t--track-editor-bg-noise-dim: #aaa;\n\t\t\t\t\t--track-editor-bg-mod: #7f779d;\n\t\t\t\t\t--track-editor-bg-mod-dim: #aaa;\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\n\t\t\t\t\t--indicator-primary: #ae38ff;\n\t\t\t\t\t--indicator-secondary: #5c8dbb;\n\t\t\t\t\t--select2-opt-group: #581b50;\n\t\t\t\t\t--input-box-outline: #6f7074;\n\t\t\t\t\t--mute-button-normal: #db1e00;\n\t\t\t\t\t--mute-button-mod: #883bf9;\n\t\t\t\t\t--mod-label-primary: #525297;\n\t\t\t\t\t--mod-label-secondary-text: rgb(197 147 245);\n\t\t\t\t\t--mod-label-primary-text: #a3aae9;\n                    --pitch-secondary-channel-hue: 26;\n                    --pitch-secondary-channel-hue-scale: 214.5;\n                    --pitch-secondary-channel-sat: 74.3;\n                    --pitch-secondary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 55;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 26;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 74;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 65.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 26;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 74.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 26;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-note-sat: 85;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 64.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-primary-channel-hue: 220;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 53;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-secondary-note-hue: 220;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 85;\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\n\t\t\t\t\t--noise-primary-note-hue: 220;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 54;\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 90;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 89;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 65;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 90;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 79;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 95;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 90;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 79;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 55;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #868;\n\t\t\t\t\t--disabled-note-secondary:  #767;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .piano-button::before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t`,\n        \"amoled dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000;\n\t\t\t\t\t--editor-background: #020406;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #8e88ce;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #ad38f9;\n\t\t\t\t\t--link-accent: #bd25ff;\n\t\t\t\t\t--ui-widget-background: #080d1f;\n\t\t\t\t\t--ui-widget-focus: #060f2d;\n\t\t\t\t\t--pitch-background: #02060b;\n\t\t\t\t\t--tonic: #00113a;\n\t\t\t\t\t--fifth-note: #1b0019;\n\t\t\t\t\t--white-piano-key: #02040c;\n\t\t\t\t\t--black-piano-key: #02040c;\n                    --white-piano-key-text: #fff;\n                    --black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #050829;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #010213;\n\t\t\t\t\t--track-editor-bg-noise: #051529;\n\t\t\t\t\t--track-editor-bg-noise-dim: #010b13;\n\t\t\t\t\t--track-editor-bg-mod: #150529;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a0113;\n\t\t\t\t\t--multiplicative-mod-slider: #2b409c;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #7f3bec;\n\t\t\t\t\t--indicator-secondary: #213888;\n\t\t\t\t\t--select2-opt-group: #1d123c;\n\t\t\t\t\t--input-box-outline: #1b1e48;\n\t\t\t\t\t--mute-button-normal: #d234b0;\n\t\t\t\t\t--mute-button-mod: #263d98;\n\t\t\t\t\t--mod-label-primary: #090910;\n\t\t\t\t\t--mod-label-secondary-text: rgb(73, 69, 214);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 183;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 183;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 183;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 183;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 30;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 30;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 30;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 30;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 0;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 0;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 0;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 0;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary: #91879f;\n\t\t\t\t\t--disabled-note-secondary: #6a677a;\n\t\t\t\t}\n\n\t\t\t`,\n        \"beachcombing\": `\n\t\t\t:root {\n\t\t\t  --page-margin: #010121;\n  --editor-background: #020222;\n  --hover-preview: #f3ffff;\n  --playhead: #fff;\n  --primary-text: #c1f1ff;\n  --secondary-text: #546775;\n  --inverted-text: black;\n  --text-selection: rgba(119,68,255,0.99);\n  --box-selection-fill: #3e0028;\n  --loop-accent: #5e68fffc;\n  --link-accent: #ff3ad5fc;\n  --ui-widget-background: #1f2b52;\n  --ui-widget-focus: #384e91;\n  --pitch-background: #2c3155;\n  --tonic: #935175;\n  --fifth-note: #1f569f;\n  --white-piano-key: #f3f2ff;\n  --black-piano-key: #4b4471;\n  --white-piano-key-text: #4b4471;\n  --black-piano-key-text: #fff;\n  --use-color-formula: false;\n  --track-editor-bg-pitch: #34406c;\n  --track-editor-bg-pitch-dim: #121931;\n  --track-editor-bg-noise: #562e3b;\n  --track-editor-bg-noise-dim: #161313;\n  --track-editor-bg-mod: #372e66;\n  --track-editor-bg-mod-dim: #2a1640;\n  --multiplicative-mod-slider: #606c9f;\n  --overwriting-mod-slider: #6850b5;\n  --indicator-primary: #ff8bd1;\n  --indicator-secondary: #393e4f;\n  --select2-opt-group: #5d576f;\n  --input-box-outline: #222;\n  --mute-button-normal: #7ce1ff;\n  --mute-button-mod: #db519d;\n  --pitch1-secondary-channel: #329b70;\n  --pitch1-primary-channel: #53ffb8;\n  --pitch1-secondary-note: #4cb98c;\n  --pitch1-primary-note: #98ffd4;\n  --pitch2-secondary-channel: #b08e4d;\n  --pitch2-primary-channel: #ffe185;\n  --pitch2-secondary-note: #91782e;\n  --pitch2-primary-note: #ffd968;\n  --pitch3-secondary-channel: #018e8e;\n  --pitch3-primary-channel: #3de4ff;\n  --pitch3-secondary-note: #24b7b7;\n  --pitch3-primary-note: #a7ffff;\n  --pitch4-secondary-channel: #792354;\n  --pitch4-primary-channel: #ff68bd;\n  --pitch4-secondary-note: #a73c78;\n  --pitch4-primary-note: #ff98d2;\n  --pitch5-secondary-channel: #185aab;\n  --pitch5-primary-channel: #6493ff;\n  --pitch5-secondary-note: #3e99d9;\n  --pitch5-primary-note: #b3e3ff;\n  --pitch6-secondary-channel: #953C47;\n  --pitch6-primary-channel: #FF7888;\n  --pitch6-secondary-note: #DF4F60;\n  --pitch6-primary-note: #FFB2BB;\n  --pitch7-secondary-channel: #4f007d;\n  --pitch7-primary-channel: #a54cd9;\n  --pitch7-secondary-note: #732b9d;\n  --pitch7-primary-note: #d386ff;\n  --pitch8-secondary-channel: #323c99;\n  --pitch8-primary-channel: #1b61ff;\n  --pitch8-secondary-note: #1848b3;\n  --pitch8-primary-note: #6f9bff;\n  --pitch9-secondary-channel: #1F605A;\n  --pitch9-primary-channel: #69FFEA;\n  --pitch9-secondary-note: #178076;\n  --pitch9-primary-note: #83FFD9;\n  --pitch10-secondary-channel: #6D438C;\n  --pitch10-primary-channel: #CE8BFF;\n  --pitch10-secondary-note: #8040B0;\n  --pitch10-primary-note: #DFACFF;\n  --noise1-secondary-channel: #635070;\n  --noise1-primary-channel: #9071db;\n  --noise1-secondary-note: #915dc1;\n  --noise1-primary-note: #c5a5ff;\n  --noise2-secondary-channel: #993367;\n  --noise2-primary-channel: #dd777c;\n  --noise2-secondary-note: #cc6695;\n  --noise2-primary-note: #f0bbd1;\n  --noise3-secondary-channel: #4a8c8f;\n  --noise3-primary-channel: #77c5dd;\n  --noise3-secondary-note: #6fb4cf;\n  --noise3-primary-note: #bbf2ff;\n  --noise4-secondary-channel: #8e3e7d;\n  --noise4-primary-channel: #c682d2;\n  --noise4-secondary-note: #b871c1;\n  --noise4-primary-note: #ffb8f0;\n  --noise5-secondary-channel: #785e37;\n  --noise5-primary-channel: #bb9d77;\n  --noise5-secondary-note: #aa8c66;\n  --noise5-primary-note: #e2d1b2;\n  --mod1-secondary-channel: #4e8397;\n  --mod1-primary-channel: #92e6f3;\n  --mod1-secondary-note: #76b9d9;\n  --mod1-primary-note: #cde3ff;\n  --mod2-secondary-channel: #ad5774;\n  --mod2-primary-channel: #eba4ae;\n  --mod2-secondary-note: #c9719b;\n  --mod2-primary-note: #fdcee7;\n  --mod3-secondary-channel: #6f579f;\n  --mod3-primary-channel: #b192f7;\n  --mod3-secondary-note: #7c3fc8;\n  --mod3-primary-note: #f8ddff;\n  --mod4-secondary-channel: #a88a36;\n  --mod4-primary-channel: #bec825;\n  --mod4-secondary-note: #aecb57;\n  --mod4-primary-note: #dee9bd;\n  --mod-label-primary: #2c2c56;\n  --mod-label-secondary-text: rgb(71,69,147);\n  --mod-label-primary-text: white;\n  --disabled-note-primary: #91879f;\n  --disabled-note-secondary: #6a677a;\n\n\n\t\t\t}\n\t\t`,\n        \"roe\": `\n\t\t\t:root {\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #b8cee0;\n\t\t\t--secondary-text: #cb3434;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\n\t\t\t--loop-accent: #7744FF;\n\t\t\t--link-accent: #FF2A2A;\n\t\t\t--ui-widget-background: #1a2642;\n\t\t\t--ui-widget-focus: #2c3f6d;\n\t\t\t--pitch-background: #15111a;\n\t\t\t--tonic: #1b3041;\n\t\t\t--fifth-note: #381818;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #302938;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #800000;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #299eff;\n\t\t\t--mute-button-mod: #165a93;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #4281FF;\n\t\t\t--noise1-primary-channel: #96b9ff;\n\t\t\t--noise1-secondary-note: #4281FF;\n\t\t\t--noise1-primary-note: #96b9ff;\n\t\t\t--noise2-secondary-channel: #7347FF;\n\t\t\t--noise2-primary-channel: #c3b0ff;\n\t\t\t--noise2-secondary-note: #7347FF;\n\t\t\t--noise2-primary-note: #c3b0ff;\n\t\t\t--noise3-secondary-channel: #9F3CBF;\n\t\t\t--noise3-primary-channel: #e29cf9;\n\t\t\t--noise3-secondary-note: #9F3CBF;\n\t\t\t--noise3-primary-note: #e29cf9;\n\t\t\t--noise4-secondary-channel: #D3326F;\n\t\t\t--noise4-primary-channel: #fb9bbf;\n\t\t\t--noise4-secondary-note: #D3326F;\n\t\t\t--noise4-primary-note: #fb9bbf;\n\t\t\t--noise5-secondary-channel: #FF2A2A;\n\t\t\t--noise5-primary-channel: #ffa2a2;\n\t\t\t--noise5-secondary-note: #FF2A2A;\n\t\t\t--noise5-primary-note: #ffa2a2;\n\t\t\t--mod1-secondary-channel: #47587a;\n\t\t\t--mod1-primary-channel: #96b9ff;\n\t\t\t--mod1-secondary-note: #47587a;\n\t\t\t--mod1-primary-note: #96b9ff;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #c3b0ff;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #c3b0ff;\n\t\t\t--mod3-secondary-channel: #6f4c7b;\n\t\t\t--mod3-primary-channel: #e29cf9;\n\t\t\t--mod3-secondary-note: #6f4c7b;\n\t\t\t--mod3-primary-note: #e29cf9;\n\t\t\t--mod4-secondary-channel: #9e6279;\n\t\t\t--mod4-primary-channel: #fb9bbf;\n\t\t\t--mod4-secondary-note: #9e6279;\n\t\t\t--mod4-primary-note: #fb9bbf;\n\t\t\t--mod-label-primary: #15111a;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t\t}`,\n        \"moonlight\": `\n\t\t\t:root {\n\t\t\t--page-margin: #020514;\n\t\t\t--editor-background: #020514;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #D4DCE9;\n\t\t\t--secondary-text: #3E87DA;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #03599bd9;\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\n\t\t\t--loop-accent: #639BD6;\n\t\t\t--link-accent: #A8C6E8;\n\t\t\t--ui-widget-background: #1e2940;\n\t\t\t--ui-widget-focus: #324b81;\n\t\t\t--pitch-background: #223849;\n\t\t\t--tonic: #33536c;\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\n\t\t\t--white-piano-key: #c1bfe9;\n\t\t\t--black-piano-key: #454354;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #25568d80;\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\n\t\t\t--track-editor-bg-noise: #25568d80;\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\n\t\t\t--track-editor-bg-mod: #25568d80;\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\n\t\t\t--multiplicative-mod-slider: #0476cd;\n\t\t\t--overwriting-mod-slider: #035899;\n\t\t\t--indicator-primary: #57a1f4;\n\t\t\t--indicator-secondary: #2e5684;\n\t\t\t--select2-opt-group: #24355c;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #6ebffc;\n\t\t\t--mute-button-mod: #0a92fa;\n\t\t\t--pitch1-secondary-channel: #47425c;\n\t\t\t--pitch1-primary-channel: #918bac;\n\t\t\t--pitch1-secondary-note: #6b6489;\n\t\t\t--pitch1-primary-note: #a8a3bf;\n\t\t\t--pitch2-secondary-channel: #626493;\n\t\t\t--pitch2-primary-channel: #bdbed3;\n\t\t\t--pitch2-secondary-note: #626493;\n\t\t\t--pitch2-primary-note: #bdbed3;\n\t\t\t--pitch3-secondary-channel: #6e89b4;\n\t\t\t--pitch3-primary-channel: #d4dce9;\n\t\t\t--pitch3-secondary-note: #6e89b4;\n\t\t\t--pitch3-primary-note: #d4dce9;\n\t\t\t--pitch4-secondary-channel: #4c77a9;\n\t\t\t--pitch4-primary-channel: #a8c6e8;\n\t\t\t--pitch4-secondary-note: #4c77a9;\n\t\t\t--pitch4-primary-note: #a8c6e8;\n\t\t\t--pitch5-secondary-channel: #314e6d;\n\t\t\t--pitch5-primary-channel: #639bd6;\n\t\t\t--pitch5-secondary-note: #46698f;\n\t\t\t--pitch5-primary-note: #639bd6;\n\t\t\t--pitch6-secondary-channel: #143d6b;\n\t\t\t--pitch6-primary-channel: #3e87da;\n\t\t\t--pitch6-secondary-note: #143d6b;\n\t\t\t--pitch6-primary-note: #3e87da;\n\t\t\t--pitch7-secondary-channel: #314e6d;\n\t\t\t--pitch7-primary-channel: #639bd6;\n\t\t\t--pitch7-secondary-note: #314e6d;\n\t\t\t--pitch7-primary-note: #639bd6;\n\t\t\t--pitch8-secondary-channel: #4c77a9;\n\t\t\t--pitch8-primary-channel: #a8c6e8;\n\t\t\t--pitch8-secondary-note: #4c77a9;\n\t\t\t--pitch8-primary-note: #a8c6e8;\n\t\t\t--pitch9-secondary-channel: #6e89b4;\n\t\t\t--pitch9-primary-channel: #d4dce9;\n\t\t\t--pitch9-secondary-note: #6e89b4;\n\t\t\t--pitch9-primary-note: #d4dce9;\n\t\t\t--pitch10-secondary-channel: #626493;\n\t\t\t--pitch10-primary-channel: #bdbed3;\n\t\t\t--pitch10-secondary-note: #626493;\n\t\t\t--pitch10-primary-note: #bdbed3;\n\t\t\t--noise1-secondary-channel: #4b4a55;\n\t\t\t--noise1-primary-channel: #9795a3;\n\t\t\t--noise1-secondary-note: #4b4a55;\n\t\t\t--noise1-primary-note: #9795a3;\n\t\t\t--noise2-secondary-channel: #858e9d;\n\t\t\t--noise2-primary-channel: #d7dce5;\n\t\t\t--noise2-secondary-note: #858e9d;\n\t\t\t--noise2-primary-note: #d7dce5;\n\t\t\t--noise3-secondary-channel: #394e65;\n\t\t\t--noise3-primary-channel: #809bb7;\n\t\t\t--noise3-secondary-note: #394e65;\n\t\t\t--noise3-primary-note: #809bb7;\n\t\t\t--noise4-secondary-channel: #37577b;\n\t\t\t--noise4-primary-channel: #6189b8;\n\t\t\t--noise4-secondary-note: #37577b;\n\t\t\t--noise4-primary-note: #6189b8;\n\t\t\t--noise5-secondary-channel: #223849;\n\t\t\t--noise5-primary-channel: #5588af;\n\t\t\t--noise5-secondary-note: #223849;\n\t\t\t--noise5-primary-note: #5588af;\n\t\t\t--mod1-secondary-channel: #3e336c;\n\t\t\t--mod1-primary-channel: #6d60a4;\n\t\t\t--mod1-secondary-note: #3e336c;\n\t\t\t--mod1-primary-note: #6d60a4;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #bdbed3;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #bdbed3;\n\t\t\t--mod3-secondary-channel: #6b91bd;\n\t\t\t--mod3-primary-channel: #4b8fdd;\n\t\t\t--mod3-secondary-note: #597ca7;\n\t\t\t--mod3-primary-note: #7eade3;\n\t\t\t--mod4-secondary-channel: #14559f;\n\t\t\t--mod4-primary-channel: #3386e6;\n\t\t\t--mod4-secondary-note: #14559f;\n\t\t\t--mod4-primary-note: #3386e6;\n\t\t\t--mod-label-primary: #1e2940;\n\t\t\t--mod-label-secondary-text: #748ebe;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #828282;\n\t\t\t--disabled-note-secondary: #4f4f4f;\n\t\t\t}`,\n        \"autumn\": `\n\t\t:root {\n\t\t\t--page-margin: #060304;\n\t\t\t--editor-background: #060304;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(115 80 76);\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\n\t\t\t--loop-accent: #834A69;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #2a2523;\n\t\t\t--ui-widget-focus: #4e4c44;\n\t\t\t--pitch-background: #121212;\n\t\t\t--tonic: #4f4f4f;\n\t\t\t--fifth-note: #222;\n\t\t\t--white-piano-key: #b59b9b;\n\t\t\t--black-piano-key: #231e1e;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #352f38;\n\t\t\t--track-editor-bg-pitch-dim: #232025;\n\t\t\t--track-editor-bg-noise: #3c3029;\n\t\t\t--track-editor-bg-noise-dim: #251d19;\n\t\t\t--track-editor-bg-mod: #202623;\n\t\t\t--track-editor-bg-mod-dim: #131715;\n\t\t\t--multiplicative-mod-slider: #D9D16E;\n\t\t\t--overwriting-mod-slider: #2D826F;\n\t\t\t--indicator-primary: #D9D16E;\n\t\t\t--indicator-secondary: #444226;\n\t\t\t--select2-opt-group: #20191c;\n\t\t\t--input-box-outline: #20191c;\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\n\t\t\t--pitch1-secondary-channel: #704a34;\n\t\t\t--pitch1-primary-channel: #D9895A;\n\t\t\t--pitch1-secondary-note: #704a34;\n\t\t\t--pitch1-primary-note: #D9895A;\n\t\t\t--pitch2-secondary-channel: #5f3538;\n\t\t\t--pitch2-primary-channel: #AE4951;\n\t\t\t--pitch2-secondary-note: #5f3538;\n\t\t\t--pitch2-primary-note: #AE4951;\n\t\t\t--pitch3-secondary-channel: #5c4336;\n\t\t\t--pitch3-primary-channel: #CA9A81;\n\t\t\t--pitch3-secondary-note: #5c4336;\n\t\t\t--pitch3-primary-note: #CA9A81;\n\t\t\t--pitch4-secondary-channel: #1d3143;\n\t\t\t--pitch4-primary-channel: #386995;\n\t\t\t--pitch4-secondary-note: #1d3143;\n\t\t\t--pitch4-primary-note: #386995;\n\t\t\t--pitch5-secondary-channel: #9c8a58;\n\t\t\t--pitch5-primary-channel: #D9D16E;\n\t\t\t--pitch5-secondary-note: #7c783f;\n\t\t\t--pitch5-primary-note: #D9D16E;\n\t\t\t--pitch6-secondary-channel: #886562;\n\t\t\t--pitch6-primary-channel: #D3A9A5;\n\t\t\t--pitch6-secondary-note: #886562;\n\t\t\t--pitch6-primary-note: #D3A9A5;\n\t\t\t--pitch7-secondary-channel: #1c3f37;\n\t\t\t--pitch7-primary-channel: #2D826F;\n\t\t\t--pitch7-secondary-note: #1c3f37;\n\t\t\t--pitch7-primary-note: #2D826F;\n\t\t\t--pitch8-secondary-channel: #442e2d;\n\t\t\t--pitch8-primary-channel: #815150;\n\t\t\t--pitch8-secondary-note: #442e2d;\n\t\t\t--pitch8-primary-note: #815150;\n\t\t\t--pitch9-secondary-channel: #8e6f60;\n\t\t\t--pitch9-primary-channel: #E5B8A1;\n\t\t\t--pitch9-secondary-note: #8e6f60;\n\t\t\t--pitch9-primary-note: #E5B8A1;\n\t\t\t--pitch10-secondary-channel: #4f3142;\n\t\t\t--pitch10-primary-channel: #834A69;\n\t\t\t--pitch10-secondary-note: #4f3142;\n\t\t\t--pitch10-primary-note: #834A69;\n\t\t\t--noise1-secondary-channel: #6b5346;\n\t\t\t--noise1-primary-channel: #b99c89;\n\t\t\t--noise1-secondary-note: #6b5346;\n\t\t\t--noise1-primary-note: #F0D0BB;\n\t\t\t--noise2-secondary-channel: #4a3839;\n\t\t\t--noise2-primary-channel: #9c6b6e;\n\t\t\t--noise2-secondary-note: #4a3839;\n\t\t\t--noise2-primary-note: #c18b8f;\n\t\t\t--noise3-secondary-channel: #2d3c4a;\n\t\t\t--noise3-primary-channel: #536e86;\n\t\t\t--noise3-secondary-note: #2d3c4a;\n\t\t\t--noise3-primary-note: #8fa8c0;\n\t\t\t--noise4-secondary-channel: #273f3a;\n\t\t\t--noise4-primary-channel: #4e8377;\n\t\t\t--noise4-secondary-note: #273f3a;\n\t\t\t--noise4-primary-note: #87baae;\n\t\t\t--noise5-secondary-channel: #372730;\n\t\t\t--noise5-primary-channel: #7f5e70;\n\t\t\t--noise5-secondary-note: #372730;\n\t\t\t--noise5-primary-note: #cc96b3;\n\t\t\t--mod1-secondary-channel: #783f1f;\n\t\t\t--mod1-primary-channel: #dc6d2c;\n\t\t\t--mod1-secondary-note: #783f1f;\n\t\t\t--mod1-primary-note: #dc6d2c;\n\t\t\t--mod2-secondary-channel: #0b3153;\n\t\t\t--mod2-primary-channel: #1464ac;\n\t\t\t--mod2-secondary-note: #0b3153;\n\t\t\t--mod2-primary-note: #1464ac;\n\t\t\t--mod3-secondary-channel: #075040;\n\t\t\t--mod3-primary-channel: #08a17f;\n\t\t\t--mod3-secondary-note: #075040;\n\t\t\t--mod3-primary-note: #08a17f;\n\t\t\t--mod4-secondary-channel: #631640;\n\t\t\t--mod4-primary-channel: #b4186d;\n\t\t\t--mod4-secondary-note: #631640;\n\t\t\t--mod4-primary-note: #b4186d;\n\t\t\t--mod-label-primary: #000;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n        \"fruit\": `\n\t\t:root {\n\t\t\t--page-margin: #040507;\n\t\t\t--editor-background: #040507;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(115 103 76);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #22222c;\n\t\t\t--ui-widget-focus: #39394c;\n\t\t\t--pitch-background: #101010;\n\t\t\t--tonic: #2c2d34;\n\t\t\t--fifth-note: #191a20;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #2b2d40;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #3c3644;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #322a2a;\n\t\t\t--track-editor-bg-mod-dim: #191515;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #EAAC9D;\n\t\t\t--indicator-secondary: #5e413a;\n\t\t\t--select2-opt-group: #191920;\n\t\t\t--input-box-outline: #191920;\n\t\t\t--mute-button-normal: #798FA7;\n\t\t\t--mute-button-mod: #354457;\n\t\t\t--pitch1-secondary-channel: #91655a;\n\t\t\t--pitch1-primary-channel: #EAAC9D;\n\t\t\t--pitch1-secondary-note: #91655a;\n\t\t\t--pitch1-primary-note: #EAAC9D;\n\t\t\t--pitch2-secondary-channel: #8f6513;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #8f6513;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #212f46;\n\t\t\t--pitch3-primary-channel: #34558B;\n\t\t\t--pitch3-secondary-note: #212f46;\n\t\t\t--pitch3-primary-note: #34558B;\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #2e6b5b;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #555D46;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #555D46;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #A2553B;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #A2553B;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #7b4021;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #7b4021;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #847753;\n\t\t\t--pitch8-primary-channel: #EFDAA3;\n\t\t\t--pitch8-secondary-note: #847753;\n\t\t\t--pitch8-primary-note: #EFDAA3;\n\t\t\t--pitch9-secondary-channel: #2c3642;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #2c3642;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #0d4453;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #0d4453;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #3B3D4A;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #3B3D4A;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #625f5e;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #625f5e;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n        \"sunset\": `\n\t\t:root {\n\t\t\t--page-margin: #040300;\n\t\t\t--editor-background: #040300;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(94 0 157);\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #241b24;\n\t\t\t--ui-widget-focus: #3a2e39;\n\t\t\t--pitch-background: #141414;\n\t\t\t--tonic: #2C212B;\n\t\t\t--fifth-note: #2E2A15;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #2d2e42;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #393340;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #232a2c;\n\t\t\t--track-editor-bg-mod-dim: #151819;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #F28891;\n\t\t\t--indicator-secondary: #601d23;\n\t\t\t--select2-opt-group: #151015;\n\t\t\t--input-box-outline: #151015;\n\t\t\t--mute-button-normal: #E4739D;\n\t\t\t--mute-button-mod: #9650A6;\n\t\t\t--pitch1-secondary-channel: #7F7721;\n\t\t\t--pitch1-primary-channel: #F3E79A;\n\t\t\t--pitch1-secondary-note: #7F7721;\n\t\t\t--pitch1-primary-note: #F3E79A;\n\t\t\t--pitch2-secondary-channel: #785E20;\n\t\t\t--pitch2-primary-channel: #F7D086;\n\t\t\t--pitch2-secondary-note: #785E20;\n\t\t\t--pitch2-primary-note: #F7D086;\n\t\t\t--pitch3-secondary-channel: #6E4219;\n\t\t\t--pitch3-primary-channel: #F9B881;\n\t\t\t--pitch3-secondary-note: #6E4219;\n\t\t\t--pitch3-primary-note: #F9B881;\n\t\t\t--pitch4-secondary-channel: #79351F;\n\t\t\t--pitch4-primary-channel: #F7A086;\n\t\t\t--pitch4-secondary-note: #79351F;\n\t\t\t--pitch4-primary-note: #F7A086;\n\t\t\t--pitch5-secondary-channel: #81272F;\n\t\t\t--pitch5-primary-channel: #F28891;\n\t\t\t--pitch5-secondary-note: #81272F;\n\t\t\t--pitch5-primary-note: #F28891;\n\t\t\t--pitch6-secondary-channel: #8F224D;\n\t\t\t--pitch6-primary-channel: #E4739D;\n\t\t\t--pitch6-secondary-note: #8F224D;\n\t\t\t--pitch6-primary-note: #E4739D;\n\t\t\t--pitch7-secondary-channel: #611548;\n\t\t\t--pitch7-primary-channel: #CF63A6;\n\t\t\t--pitch7-secondary-note: #611548;\n\t\t\t--pitch7-primary-note: #CF63A6;\n\t\t\t--pitch8-secondary-channel: #561253;\n\t\t\t--pitch8-primary-channel: #B557A9;\n\t\t\t--pitch8-secondary-note: #4D104A;\n\t\t\t--pitch8-primary-note: #B557A9;\n\t\t\t--pitch9-secondary-channel: #4c1260;\n\t\t\t--pitch9-primary-channel: #9650A6;\n\t\t\t--pitch9-secondary-note: #3C0F4C;\n\t\t\t--pitch9-primary-note: #9650A6;\n\t\t\t--pitch10-secondary-channel: #3e1d78;\n\t\t\t--pitch10-primary-channel: #704D9E;\n\t\t\t--pitch10-secondary-note: #27124C;\n\t\t\t--pitch10-primary-note: #704D9E;\n\t\t\t--noise1-secondary-channel: #A7A578;\n\t\t\t--noise1-primary-channel: #EFE9AC;\n\t\t\t--noise1-secondary-note: #A7A578;\n\t\t\t--noise1-primary-note: #EFE9AC;\n\t\t\t--noise2-secondary-channel: #947A5F;\n\t\t\t--noise2-primary-channel: #FBCEA8;\n\t\t\t--noise2-secondary-note: #947A5F;\n\t\t\t--noise2-primary-note: #FBCEA8;\n\t\t\t--noise3-secondary-channel: #A3635D;\n\t\t\t--noise3-primary-channel: #F4A5AB;\n\t\t\t--noise3-secondary-note: #A3635D;\n\t\t\t--noise3-primary-note: #F4A5AB;\n\t\t\t--noise4-secondary-channel: #724D60;\n\t\t\t--noise4-primary-channel: #CD90B6;\n\t\t\t--noise4-secondary-note: #724D60;\n\t\t\t--noise4-primary-note: #CD90B6;\n\t\t\t--noise5-secondary-channel: #503F5C;\n\t\t\t--noise5-primary-channel: #7C6A9E;\n\t\t\t--noise5-secondary-note: #503F5C;\n\t\t\t--noise5-primary-note: #7C6A9E;\n\t\t\t--mod1-secondary-channel: #371883;\n\t\t\t--mod1-primary-channel: #6416C6;\n\t\t\t--mod1-secondary-note: #1F0A52;\n\t\t\t--mod1-primary-note: #6416C6;\n\t\t\t--mod2-secondary-channel: #690645;\n\t\t\t--mod2-primary-channel: #E52FA2;\n\t\t\t--mod2-secondary-note: #690645;\n\t\t\t--mod2-primary-note: #E52FA2;\n\t\t\t--mod3-secondary-channel: #943618;\n\t\t\t--mod3-primary-channel: #eb5b2c;\n\t\t\t--mod3-secondary-note: #943618;\n\t\t\t--mod3-primary-note: #eb5b2c;\n\t\t\t--mod4-secondary-channel: #928409;\n\t\t\t--mod4-primary-channel: #ecd50e;\n\t\t\t--mod4-secondary-note: #928409;\n\t\t\t--mod4-primary-note: #ecd50e;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n        \"toxic\": `\n\t\t:root {\n\t\t\t--page-margin: #010003;\n\t\t\t--editor-background: #010003;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(147 195 0);\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\n\t\t\t--loop-accent: #BCDE2C;\n\t\t\t--link-accent: #edff9f;\n\t\t\t--ui-widget-background: #261e2e;\n\t\t\t--ui-widget-focus: #322042;\n\t\t\t--pitch-background: #141c15;\n\t\t\t--tonic: #282c21;\n\t\t\t--fifth-note: #18221a;\n\t\t\t--white-piano-key: #e3e3e3;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #38293e;\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\n\t\t\t--track-editor-bg-noise: #2c304c;\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\n\t\t\t--track-editor-bg-mod: #311b32;\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #aae9ff;\n\t\t\t--indicator-secondary: #253e46;\n\t\t\t--select2-opt-group: #110d15;\n\t\t\t--input-box-outline: #110d15;\n\t\t\t--mute-button-normal: #8f5ad1;\n\t\t\t--mute-button-mod: #482574;\n\t\t\t--pitch1-secondary-channel: #6b7f19;\n\t\t\t--pitch1-primary-channel: #BCDE2C;\n\t\t\t--pitch1-secondary-note: #6b7f19;\n\t\t\t--pitch1-primary-note: #BCDE2C;\n\t\t\t--pitch2-secondary-channel: #497a31;\n\t\t\t--pitch2-primary-channel: #7BD152;\n\t\t\t--pitch2-secondary-note: #497a31;\n\t\t\t--pitch2-primary-note: #7BD152;\n\t\t\t--pitch3-secondary-channel: #286b40;\n\t\t\t--pitch3-primary-channel: #45BE71;\n\t\t\t--pitch3-secondary-note: #286b40;\n\t\t\t--pitch3-primary-note: #45BE71;\n\t\t\t--pitch4-secondary-channel: #125140;\n\t\t\t--pitch4-primary-channel: #25A884;\n\t\t\t--pitch4-secondary-note: #125140;\n\t\t\t--pitch4-primary-note: #25A884;\n\t\t\t--pitch5-secondary-channel: #114c49;\n\t\t\t--pitch5-primary-channel: #21908C;\n\t\t\t--pitch5-secondary-note: #114c49;\n\t\t\t--pitch5-primary-note: #21908C;\n\t\t\t--pitch6-secondary-channel: #143843;\n\t\t\t--pitch6-primary-channel: #2B788E;\n\t\t\t--pitch6-secondary-note: #143843;\n\t\t\t--pitch6-primary-note: #2B788E;\n\t\t\t--pitch7-secondary-channel: #1d354e;\n\t\t\t--pitch7-primary-channel: #355F8D;\n\t\t\t--pitch7-secondary-note: #1a2f46;\n\t\t\t--pitch7-primary-note: #355F8D;\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\n\t\t\t--pitch8-primary-channel: #414486;\n\t\t\t--pitch8-secondary-note: #1e1f3d;\n\t\t\t--pitch8-primary-note: #414486;\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\n\t\t\t--pitch9-primary-channel: #5e3b89;\n\t\t\t--pitch9-secondary-note: #25133b;\n\t\t\t--pitch9-primary-note: #5e3b89;\n\t\t\t--pitch10-secondary-channel: #510264;\n\t\t\t--pitch10-primary-channel: #720d8a;\n\t\t\t--pitch10-secondary-note: #440154;\n\t\t\t--pitch10-primary-note: #720d8a;\n\t\t\t--noise1-secondary-channel: #BCDE2C;\n\t\t\t--noise1-primary-channel: #edff9f;\n\t\t\t--noise1-secondary-note: #BCDE2C;\n\t\t\t--noise1-primary-note: #edff9f;\n\t\t\t--noise2-secondary-channel: #45BE71;\n\t\t\t--noise2-primary-channel: #89ffb4;\n\t\t\t--noise2-secondary-note: #45BE71;\n\t\t\t--noise2-primary-note: #89ffb4;\n\t\t\t--noise3-secondary-channel: #21908C;\n\t\t\t--noise3-primary-channel: #72fffa;\n\t\t\t--noise3-secondary-note: #21908C;\n\t\t\t--noise3-primary-note: #72fffa;\n\t\t\t--noise4-secondary-channel: #355F8D;\n\t\t\t--noise4-primary-channel: #7cb6f5;\n\t\t\t--noise4-secondary-note: #355F8D;\n\t\t\t--noise4-primary-note: #7cb6f5;\n\t\t\t--noise5-secondary-channel: #482574;\n\t\t\t--noise5-primary-channel: #8f5ad1;\n\t\t\t--noise5-secondary-note: #48257A;\n\t\t\t--noise5-primary-note: #8f5ad1;\n\t\t\t--mod1-secondary-channel: #815a16;\n\t\t\t--mod1-primary-channel: #F5AB29;\n\t\t\t--mod1-secondary-note: #815a16;\n\t\t\t--mod1-primary-note: #F5AB29;\n\t\t\t--mod2-secondary-channel: #4d341a;\n\t\t\t--mod2-primary-channel: #C98540;\n\t\t\t--mod2-secondary-note: #4d341a;\n\t\t\t--mod2-primary-note: #C98540;\n\t\t\t--mod3-secondary-channel: #643734;\n\t\t\t--mod3-primary-channel: #A75D58;\n\t\t\t--mod3-secondary-note: #643734;\n\t\t\t--mod3-primary-note: #A75D58;\n\t\t\t--mod4-secondary-channel: #461430;\n\t\t\t--mod4-primary-channel: #812359;\n\t\t\t--mod4-secondary-note: #3f112b;\n\t\t\t--mod4-primary-note: #812359;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n        \"violet verdant\": `\n\t\t:root {\n\t\t\t--page-margin: #0e031a;\n\t\t\t--editor-background: #0e031a;\n\t\t\t--hover-preview: #e5ffea;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #f0e0ff;\n\t\t\t--secondary-text: #706087;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #225835;\n\t\t\t--loop-accent: #8f00fb;\n\t\t\t--link-accent: #82dd5d;\n\t\t\t--ui-widget-background: #303c66;\n\t\t\t--ui-widget-focus: #62559b;\n\t\t\t--pitch-background: #293b52;\n\t\t\t--tonic: #5b46ad;\n\t\t\t--fifth-note: #42604d;\n\t\t\t--white-piano-key: #f6e8ff;\n\t\t\t--black-piano-key: #5a4972;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #392a46;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #403150;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #253c25;\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #403150;\n\t\t\t--mute-button-normal: #82dd5d;\n\t\t\t--mute-button-mod: #945de5;\n\t\t\t--mod-label-primary: #312840;\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\n\t\t\t--mod-label-primary-text: #82dd5d;\n\t\t\t--pitch-secondary-channel-hue: 64;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 63.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 64;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 32;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 87.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 64;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 192;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 45;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 32;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 192;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 43.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 45;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 192;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 132;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 132;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 100;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 132;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #91879f;\n\t\t\t--disabled-note-secondary: #6a677a;\n\t\t}`,\n        \"portal\": `\n\t\t:root {\n\t\t\t--page-margin: #04081a;\n\t\t\t--editor-background: #04081a;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgb(0 72 181);\n\t\t\t--loop-accent: #44d4ff;\n\t\t\t--link-accent: #ffa500;\n\t\t\t--ui-widget-background: #212c4a;\n\t\t\t--ui-widget-focus: #121f42;\n\t\t\t--pitch-background: #1b263e;\n\t\t\t--tonic: #995d00;\n\t\t\t--fifth-note: #0898a1;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #516d7a;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #213352;\n\t\t\t--track-editor-bg-pitch-dim: #152032;\n\t\t\t--track-editor-bg-noise: #403524;\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #5490ff;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #3372ff;\n\t\t\t--mute-button-mod: #dd872f;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel: #77f7ff;\n\t\t\t--pitch1-secondary-note: #00BDC7;\n\t\t\t--pitch1-primary-note: #92F9FF;\n\t\t\t--pitch2-secondary-channel: #0083a1;\n\t\t\t--pitch2-primary-channel: #35d9ff;\n\t\t\t--pitch2-secondary-note: #0083a1;\n\t\t\t--pitch2-primary-note: #a4eeff;\n\t\t\t--pitch3-secondary-channel: #0074c7;\n\t\t\t--pitch3-primary-channel: #3caeff;\n\t\t\t--pitch3-secondary-note: #00477a;\n\t\t\t--pitch3-primary-note: #aadcff;\n\t\t\t--pitch4-secondary-channel: #0039a1;\n\t\t\t--pitch4-primary-channel: #2673ff;\n\t\t\t--pitch4-secondary-note: #001f56;\n\t\t\t--pitch4-primary-note: #9bbeff;\n\t\t\t--pitch5-secondary-channel: #31148b;\n\t\t\t--pitch5-primary-channel: #7042ff;\n\t\t\t--pitch5-secondary-note: #190656;\n\t\t\t--pitch5-primary-note: #b79fff;\n\t\t\t--pitch6-secondary-channel: #979934;\n\t\t\t--pitch6-primary-channel: #fbff2f;\n\t\t\t--pitch6-secondary-note: #5d5e0a;\n\t\t\t--pitch6-primary-note: #fdff9a;\n\t\t\t--pitch7-secondary-channel: #b78f00;\n\t\t\t--pitch7-primary-channel: #ffd747;\n\t\t\t--pitch7-secondary-note: #5e3d00;\n\t\t\t--pitch7-primary-note: #ffe381;\n\t\t\t--pitch8-secondary-channel: #9d6500;\n\t\t\t--pitch8-primary-channel: #ffa400;\n\t\t\t--pitch8-secondary-note: #583900;\n\t\t\t--pitch8-primary-note: #ffd07c;\n\t\t\t--pitch9-secondary-channel: #744203;\n\t\t\t--pitch9-primary-channel: #ff8e00;\n\t\t\t--pitch9-secondary-note: #502d00;\n\t\t\t--pitch9-primary-note: #ffcb89;\n\t\t\t--pitch10-secondary-channel: #a32d00;\n\t\t\t--pitch10-primary-channel: #ff885b;\n\t\t\t--pitch10-secondary-note: #521700;\n\t\t\t--pitch10-primary-note: #ffb397;\n\t\t\t--noise1-secondary-channel: #6e2210;\n\t\t\t--noise1-primary-channel: #ff4600;\n\t\t\t--noise1-secondary-note: #4c1a08;\n\t\t\t--noise1-primary-note: #ffc9b4;\n\t\t\t--noise2-secondary-channel: #6a3110;\n\t\t\t--noise2-primary-channel: #ff782a;\n\t\t\t--noise2-secondary-note: #4c1f05;\n\t\t\t--noise2-primary-note: #ffb488;\n\t\t\t--noise3-secondary-channel: #72460e;\n\t\t\t--noise3-primary-channel: #d9871f;\n\t\t\t--noise3-secondary-note: #442905;\n\t\t\t--noise3-primary-note: #ffdcae;\n\t\t\t--noise4-secondary-channel: #837a0f;\n\t\t\t--noise4-primary-channel: #f7ea55;\n\t\t\t--noise4-secondary-note: #605906;\n\t\t\t--noise4-primary-note: #fff9ab;\n\t\t\t--noise5-secondary-channel: #8c8f00;\n\t\t\t--noise5-primary-channel: #fdff90;\n\t\t\t--noise5-secondary-note: #606200;\n\t\t\t--noise5-primary-note: #feffbc;\n\t\t\t--mod1-secondary-channel: #561b97;\n\t\t\t--mod1-primary-channel: #aa66f5;\n\t\t\t--mod1-secondary-note: #30075c;\n\t\t\t--mod1-primary-note: #cd9fff;\n\t\t\t--mod2-secondary-channel: #5116df;\n\t\t\t--mod2-primary-channel: #6b2dff;\n\t\t\t--mod2-secondary-note: #36138b;\n\t\t\t--mod2-primary-note: #bea3ff;\n\t\t\t--mod3-secondary-channel: #2535a1;\n\t\t\t--mod3-primary-channel: #3f57ff;\n\t\t\t--mod3-secondary-note: #0e185c;\n\t\t\t--mod3-primary-note: #8494ff;\n\t\t\t--mod4-secondary-channel: #1b5883;\n\t\t\t--mod4-primary-channel: #5eb7f5;\n\t\t\t--mod4-secondary-note: #072f4a;\n\t\t\t--mod4-primary-note: #63beff;\n\t\t\t--mod-label-primary: #24293a;\n\t\t\t--mod-label-secondary-text: #454d4e;\n\t\t\t--mod-label-primary-text: #7bd4ff;\n\t\t\t--disabled-note-primary: #072f4a;\n\t\t\t--disabled-note-secondary: #6585a7;\n\t\t}`,\n        \"fusion\": `:root {\n\t\t\t--page-margin: #0c0306;\n\t\t\t--editor-background: #0c0306;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #26d9cd;\n\t\t\t--secondary-text: #ff6666;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ffffff;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #ff6666;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\n\t\t\t--tonic: #66a3ff40;\n\t\t\t--fifth-note: #ff666640;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #404040bf;\n\t\t\t--track-editor-bg-pitch-dim: #151515;\n\t\t\t--track-editor-bg-noise: #404040bf;\n\t\t\t--track-editor-bg-noise-dim: #151515;\n\t\t\t--track-editor-bg-mod: #404040bf;\n\t\t\t--track-editor-bg-mod-dim: #151515;\n\t\t\t--multiplicative-mod-slider: #ef7692;\n\t\t\t--overwriting-mod-slider: #f43e69;\n\t\t\t--indicator-primary: #26d9cd;\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #26d9cd;\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\n\t\t\t--pitch1-secondary-channel: #bf4040;\n\t\t\t--pitch1-primary-channel: #ff6666;\n\t\t\t--pitch1-secondary-note: #bf4040;\n\t\t\t--pitch1-primary-note: #ff6666;\n\t\t\t--pitch2-secondary-channel: #bf5b40;\n\t\t\t--pitch2-primary-channel: #ff8766;\n\t\t\t--pitch2-secondary-note: #bf5b40;\n\t\t\t--pitch2-primary-note: #ff8766;\n\t\t\t--pitch3-secondary-channel: #bf7940;\n\t\t\t--pitch3-primary-channel: #ffab66;\n\t\t\t--pitch3-secondary-note: #bf7940;\n\t\t\t--pitch3-primary-note: #ffab66;\n\t\t\t--pitch4-secondary-channel: #bf9b40;\n\t\t\t--pitch4-primary-channel: #ffd466;\n\t\t\t--pitch4-secondary-note: #bf9b40;\n\t\t\t--pitch4-primary-note: #ffd466;\n\t\t\t--pitch5-secondary-channel: #bdbf40;\n\t\t\t--pitch5-primary-channel: #fcff66;\n\t\t\t--pitch5-secondary-note: #bdbf40;\n\t\t\t--pitch5-primary-note: #fcff66;\n\t\t\t--pitch6-secondary-channel: #9dbf40;\n\t\t\t--pitch6-primary-channel: #d6ff66;\n\t\t\t--pitch6-secondary-note: #9dbf40;\n\t\t\t--pitch6-primary-note: #d6ff66;\n\t\t\t--pitch7-secondary-channel: #9dbf40;\n\t\t\t--pitch7-primary-channel: #fcff66;\n\t\t\t--pitch7-secondary-note: #9dbf40;\n\t\t\t--pitch7-primary-note: #fcff66;\n\t\t\t--pitch8-secondary-channel: #bf9b40;\n\t\t\t--pitch8-primary-channel: #ffd466;\n\t\t\t--pitch8-secondary-note: #bf9b40;\n\t\t\t--pitch8-primary-note: #ffd466;\n\t\t\t--pitch9-secondary-channel: #bf5b40;\n\t\t\t--pitch9-primary-channel: #ffab66;\n\t\t\t--pitch9-secondary-note: #bf5b40;\n\t\t\t--pitch9-primary-note: #ffab66;\n\t\t\t--pitch10-secondary-channel: #d15a1f;\n\t\t\t--pitch10-primary-channel: #ff8766;\n\t\t\t--pitch10-secondary-note: #d15a1f;\n\t\t\t--pitch10-primary-note: #ff8766;\n\t\t\t--noise1-secondary-channel: #4073bf;\n\t\t\t--noise1-primary-channel: #66a3ff;\n\t\t\t--noise1-secondary-note: #4073bf;\n\t\t\t--noise1-primary-note: #66a3ff;\n\t\t\t--noise2-secondary-channel: #405dbf;\n\t\t\t--noise2-primary-channel: #668aff;\n\t\t\t--noise2-secondary-note: #405dbf;\n\t\t\t--noise2-primary-note: #668aff;\n\t\t\t--noise3-secondary-channel: #4f40bf;\n\t\t\t--noise3-primary-channel: #7866ff;\n\t\t\t--noise3-secondary-note: #4f40bf;\n\t\t\t--noise3-primary-note: #7866ff;\n\t\t\t--noise4-secondary-channel: #8840bf;\n\t\t\t--noise4-primary-channel: #bd66ff;\n\t\t\t--noise4-secondary-note: #8840bf;\n\t\t\t--noise4-primary-note: #bd66ff;\n\t\t\t--noise5-secondary-channel: #bf40b5;\n\t\t\t--noise5-primary-channel: #ff66f2;\n\t\t\t--noise5-secondary-note: #bf40b5;\n\t\t\t--noise5-primary-note: #ff66f2;\n\t\t\t--mod1-secondary-channel: #cc6666;\n\t\t\t--mod1-primary-channel: #ff9999;\n\t\t\t--mod1-secondary-note: #cc6666;\n\t\t\t--mod1-primary-note: #ff9999;\n\t\t\t--mod2-secondary-channel: #cc7766;\n\t\t\t--mod2-primary-channel: #ffaa99;\n\t\t\t--mod2-secondary-note: #bf5540;\n\t\t\t--mod2-primary-note: #ffaa99;\n\t\t\t--mod3-secondary-channel: #cc8866;\n\t\t\t--mod3-primary-channel: #ffbb99;\n\t\t\t--mod3-secondary-note: #cc8866;\n\t\t\t--mod3-primary-note: #ffbb99;\n\t\t\t--mod4-secondary-channel: #cc9966;\n\t\t\t--mod4-primary-channel: #ffcc99;\n\t\t\t--mod4-secondary-note: #cc9966;\n\t\t\t--mod4-primary-note: #ffcc99;\n\t\t\t--mod-label-primary: #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #696969;\n\t\t\t--disabled-note-secondary: #232323;\n\t\t}`,\n        \"inverse\": `:root {\n\t\t\t--page-margin: #c4c8e3;\n\t\t\t--editor-background: #c4c8e3;\n\t\t\t--hover-preview: #000000;\n\t\t\t--playhead: #243953;\n\t\t\t--primary-text: black;\n\t\t\t--secondary-text: #855b95;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(132 125 255);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #4e00c8;\n\t\t\t--ui-widget-background: #e7e7ff;\n\t\t\t--ui-widget-focus: #d0d3e9;\n\t\t\t--pitch-background: #ffffff;\n\t\t\t--tonic: #bbbbbb;\n\t\t\t--fifth-note: #dcdcdc;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #615f66;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #e9ebff;\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\n\t\t\t--track-editor-bg-noise: #fdf2fe;\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\n\t\t\t--track-editor-bg-mod: #dbdefe;\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\n\t\t\t--multiplicative-mod-slider: #6900b3;\n\t\t\t--overwriting-mod-slider: #004b9d;\n\t\t\t--indicator-primary: #ff633d;\n\t\t\t--indicator-secondary: #933822;\n\t\t\t--select2-opt-group: #e7e7ff;\n\t\t\t--input-box-outline: #e7e7ff;\n\t\t\t--mute-button-normal: #0072ef;\n\t\t\t--mute-button-mod: #002e67;\n\t\t\t--pitch1-secondary-channel: #b77d6e;\n\t\t\t--pitch1-primary-channel: #ff9d85;\n\t\t\t--pitch1-secondary-note: #b77d6e;\n\t\t\t--pitch1-primary-note: #ff9d85;\n\t\t\t--pitch2-secondary-channel: #be8821;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #be8821;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #3a62a4;\n\t\t\t--pitch3-primary-channel: #528ae6;\n\t\t\t--pitch3-secondary-note: #3a62a4;\n\t\t\t--pitch3-primary-note: #528ae6;\n\t\t\t--pitch4-secondary-channel: #3e8d78;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #3e8d78;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #84906d;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #84906d;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #bd6345;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #bd6345;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #aa592f;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #aa592f;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #b2a171;\n\t\t\t--pitch8-primary-channel: #ffd76d;\n\t\t\t--pitch8-secondary-note: #b2a171;\n\t\t\t--pitch8-primary-note: #ffd76d;\n\t\t\t--pitch9-secondary-channel: #4f6177;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #4f6177;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #165162;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #165162;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #4a4c5b;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #4a4c5b;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #817c7b;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #817c7b;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #e9e9e9;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #959595;\n\t\t\t--disabled-note-secondary: #6e6e6e;\n\t\t\t}`,\n        \"nebula\": `\n\t\t:root {\n\t\t\t--page-margin: #040410;\n\t\t\t--editor-background: #150e1f;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #8C849A;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(141,79,201,0.99);\n\t\t\t--box-selection-fill: #311E44;\n\t\t\t--loop-accent: #CC688C;\n\t\t\t--link-accent: #817DC9;\n\t\t\t--ui-widget-background: #44394F;\n\t\t\t--ui-widget-focus: #7A6386;\n\t\t\t--pitch-background: #393e4f40;\n\t\t\t--tonic: #7D5C9EC0;\n\t\t\t--fifth-note: #ab77bd50;\n\t\t\t--white-piano-key: #EEEEEE;\n\t\t\t--black-piano-key: #5F5566;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #46374C;\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\n\t\t\t--track-editor-bg-noise: #3D353B;\n\t\t\t--track-editor-bg-noise-dim: #16131550;\n\t\t\t--track-editor-bg-mod: #623F4C;\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\n\t\t\t--overwriting-mod-slider: #A664B5;\n\t\t\t--indicator-primary: #CC6B8E;\n\t\t\t--indicator-secondary: #44394F;\n\t\t\t--select2-opt-group: #6A576F;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #BF91DC;\n\t\t\t--mute-button-mod: #DC8C9A;\n\t\t\t--mod-label-primary: #3A2840;\n\t\t\t--mod-label-secondary-text: #62485E;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--pitch-secondary-channel-hue: -96;\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\n\t\t\t--pitch-secondary-channel-sat: 50.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: -96;\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\n\t\t\t--pitch-primary-channel-sat: 70;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: -96;\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\n\t\t\t--pitch-secondary-note-sat: 70.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: -96;\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 16;\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 16;\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 12;\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 12;\n\t\t\t--noise-primary-note-hue-scale: -1.33;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 12;\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\n\t\t\t--mod-secondary-channel-sat: 50;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 12;\n\t\t\t--mod-primary-channel-hue-scale: -.75;\n\t\t\t--mod-primary-channel-sat: 70;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 12;\n\t\t\t--mod-secondary-note-hue-scale: -.75;\n\t\t\t--mod-secondary-note-sat: 75;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 12;\n\t\t\t--mod-primary-note-hue-scale: -.75;\n\t\t\t--mod-primary-note-sat: 85;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #aaa;\n\t\t\t--disabled-note-secondary: #666;\n\t\t}`,\n        \"roe light\": `\n\t\t:root {\n\t\t\t--page-margin: #fff5f5;\n\t\t\t--editor-background: #fff5f5;\n\t\t\t--hover-preview: #0e8bf1;\n\t\t\t--playhead: 000;\n\t\t\t--primary-text: #0e8bf1;\n\t\t\t--secondary-text: #f10e0e;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ff4444fc;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #9a75ff;\n\t\t\t--link-accent: #ff7070;\n\t\t\t--ui-widget-background: #bdc9e5;\n\t\t\t--ui-widget-focus: #a3b7e5;\n\t\t\t--pitch-background: #d0c7db;\n\t\t\t--tonic: #bed3e4;\n\t\t\t--fifth-note: #e7c6c6;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\n\t\t\t--track-editor-bg-noise: #e0ddee;\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\n\t\t\t--track-editor-bg-mod: #d8e6f3;\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\n\t\t\t--multiplicative-mod-slider: #8097cb;\n\t\t\t--overwriting-mod-slider: #8097cb;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #92a6d3;\n\t\t\t--select2-opt-group: #b6c4e2;\n\t\t\t--input-box-outline: #bdc9e5;\n\t\t\t--mute-button-normal: #66baff;\n\t\t\t--mute-button-mod: #1a98ff;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #336bdb;\n\t\t\t--noise1-primary-channel: #4281FF;\n\t\t\t--noise1-secondary-note: #336bdb;\n\t\t\t--noise1-primary-note: #4281FF;\n\t\t\t--noise2-secondary-channel: #5e38dc;\n\t\t\t--noise2-primary-channel: #7347FF;\n\t\t\t--noise2-secondary-note: #5e38dc;\n\t\t\t--noise2-primary-note: #7347FF;\n\t\t\t--noise3-secondary-channel: #7d3097;\n\t\t\t--noise3-primary-channel: #9F3CBF;\n\t\t\t--noise3-secondary-note: #7d3097;\n\t\t\t--noise3-primary-note: #9F3CBF;\n\t\t\t--noise4-secondary-channel: #ad2559;\n\t\t\t--noise4-primary-channel: #D3326F;\n\t\t\t--noise4-secondary-note: #ad2559;\n\t\t\t--noise4-primary-note: #D3326F;\n\t\t\t--noise5-secondary-channel: #d02525;\n\t\t\t--noise5-primary-channel: #FF2A2A;\n\t\t\t--noise5-secondary-note: #d02525;\n\t\t\t--noise5-primary-note: #FF2A2A;\n\t\t\t--mod1-secondary-channel: #35415a;\n\t\t\t--mod1-primary-channel: #47587a;\n\t\t\t--mod1-secondary-note: #35415a;\n\t\t\t--mod1-primary-note: #47587a;\n\t\t\t--mod2-secondary-channel: #5a5374;\n\t\t\t--mod2-primary-channel: #716791;\n\t\t\t--mod2-secondary-note: #5a5374;\n\t\t\t--mod2-primary-note: #716791;\n\t\t\t--mod3-secondary-channel: #53385c;\n\t\t\t--mod3-primary-channel: #6f4c7b;\n\t\t\t--mod3-secondary-note: #53385c;\n\t\t\t--mod3-primary-note: #6f4c7b;\n\t\t\t--mod4-secondary-channel: #7e4e60;\n\t\t\t--mod4-primary-channel: #9e6279;\n\t\t\t--mod4-secondary-note: #7e4e60;\n\t\t\t--mod4-primary-note: #9e6279;\n\t\t\t--mod-label-primary: #d0c7db;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #616161;\n\t\t\t--disabled-note-secondary: #474747;\n\t\t}`,\n        \"energized\": `\n\t\t:root {\n\t\t\t--page-margin: #000a08;\n\t\t\t--editor-background: #000a08;\n\t\t\t--hover-preview: #ffffcc;\n\t\t\t--playhead: #ccfff5;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #d9d98c;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #ffff6659;\n\t\t\t--box-selection-fill: #ffffff33;\n\t\t\t--loop-accent: #ffff00;\n\t\t\t--link-accent: #00ffcc;\n\t\t\t--ui-widget-background: #141f1d;\n\t\t\t--ui-widget-focus: #24423d;\n\t\t\t--pitch-background: #001410;\n\t\t\t--tonic: #00241d;\n\t\t\t--fifth-note: #ffff6633;\n\t\t\t--white-piano-key: #66998f;\n\t\t\t--black-piano-key: #141f1d;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #66998f40;\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\n\t\t\t--track-editor-bg-noise: #66998f40;\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\n\t\t\t--track-editor-bg-mod: #99996640;\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\n\t\t\t--multiplicative-mod-slider: #ffff00;\n\t\t\t--overwriting-mod-slider: #00ffcc;\n\t\t\t--indicator-primary: #ffff00;\n\t\t\t--indicator-secondary: #141f1d;\n\t\t\t--select2-opt-group: #1b312e;\n\t\t\t--input-box-outline: #141f1d;\n\t\t\t--mute-button-normal: #00ffcc;\n\t\t\t--mute-button-mod: #00997a;\n\t\t\t--pitch1-secondary-channel: #bfbf40;\n\t\t\t--pitch1-primary-channel: #ffff64;\n\t\t\t--pitch1-secondary-note: #bfbf40;\n\t\t\t--pitch1-primary-note: #ffff64;\n\t\t\t--pitch2-secondary-channel: #a2bf40;\n\t\t\t--pitch2-primary-channel: #e0ff7d;\n\t\t\t--pitch2-secondary-note: #a2bf40;\n\t\t\t--pitch2-primary-note: #e0ff7d;\n\t\t\t--pitch3-secondary-channel: #75bf40;\n\t\t\t--pitch3-primary-channel: #c1ff96;\n\t\t\t--pitch3-secondary-note: #75bf40;\n\t\t\t--pitch3-primary-note: #c1ff96;\n\t\t\t--pitch4-secondary-channel: #40bf51;\n\t\t\t--pitch4-primary-channel: #a2ffaf;\n\t\t\t--pitch4-secondary-note: #40bf51;\n\t\t\t--pitch4-primary-note: #a2ffaf;\n\t\t\t--pitch5-secondary-channel: #40bf86;\n\t\t\t--pitch5-primary-channel: #83ffc8;\n\t\t\t--pitch5-secondary-note: #40bf86;\n\t\t\t--pitch5-primary-note: #83ffc8;\n\t\t\t--pitch6-secondary-channel: #40bfa6;\n\t\t\t--pitch6-primary-channel: #64ffe1;\n\t\t\t--pitch6-secondary-note: #40bfa6;\n\t\t\t--pitch6-primary-note: #64ffe1;\n\t\t\t--pitch7-secondary-channel: #40bf86;\n\t\t\t--pitch7-primary-channel: #83ffc8;\n\t\t\t--pitch7-secondary-note: #40bf86;\n\t\t\t--pitch7-primary-note: #83ffc8;\n\t\t\t--pitch8-secondary-channel: #40bf51;\n\t\t\t--pitch8-primary-channel: #a2ffaf;\n\t\t\t--pitch8-secondary-note: #40bf51;\n\t\t\t--pitch8-primary-note: #a2ffaf;\n\t\t\t--pitch9-secondary-channel: #75bf40;\n\t\t\t--pitch9-primary-channel: #c1ff96;\n\t\t\t--pitch9-secondary-note: #75bf40;\n\t\t\t--pitch9-primary-note: #c1ff96;\n\t\t\t--pitch10-secondary-channel: #a2bf40;\n\t\t\t--pitch10-primary-channel: #e0ff7d;\n\t\t\t--pitch10-secondary-note: #a2bf40;\n\t\t\t--pitch10-primary-note: #e0ff7d;\n\t\t\t--noise1-secondary-channel: #a6a659;\n\t\t\t--noise1-primary-channel: #ffffcc;\n\t\t\t--noise1-secondary-note: #a6a659;\n\t\t\t--noise1-primary-note: #ffffcc;\n\t\t\t--noise2-secondary-channel: #94a659;\n\t\t\t--noise2-primary-channel: #f3ffcc;\n\t\t\t--noise2-secondary-note: #94a659;\n\t\t\t--noise2-primary-note: #f3ffcc;\n\t\t\t--noise3-secondary-channel: #79a659;\n\t\t\t--noise3-primary-channel: #e1ffcc;\n\t\t\t--noise3-secondary-note: #79a659;\n\t\t\t--noise3-primary-note: #e1ffcc;\n\t\t\t--noise4-secondary-channel: #94a659;\n\t\t\t--noise4-primary-channel: #f3ffcc;\n\t\t\t--noise4-secondary-note: #94a659;\n\t\t\t--noise4-primary-note: #f3ffcc;\n\t\t\t--noise5-secondary-channel: #a6a659;\n\t\t\t--noise5-primary-channel: #ffffcc;\n\t\t\t--noise5-secondary-note: #a6a659;\n\t\t\t--noise5-primary-note: #ffffcc;\n\t\t\t--mod1-secondary-channel: #a3a329;\n\t\t\t--mod1-primary-channel: #ffff00;\n\t\t\t--mod1-secondary-note: #a3a329;\n\t\t\t--mod1-primary-note: #ffff00;\n\t\t\t--mod2-secondary-channel: #a38529;\n\t\t\t--mod2-primary-channel: #ffbf00;\n\t\t\t--mod2-secondary-note: #a38529;\n\t\t\t--mod2-primary-note: #ffbf00;\n\t\t\t--mod3-secondary-channel: #a36629;\n\t\t\t--mod3-primary-channel: #ff7f00;\n\t\t\t--mod3-secondary-note: #a36629;\n\t\t\t--mod3-primary-note: #ff7f00;\n\t\t\t--mod4-secondary-channel: #a38529;\n\t\t\t--mod4-primary-channel: #ffbf00;\n\t\t\t--mod4-secondary-note: #a38529;\n\t\t\t--mod4-primary-note: #ffbf00;\n\t\t\t--mod-label-primary: #141f1d;\n\t\t\t--mod-label-secondary-text: #d9d98c;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #808080;\n\t\t\t--disabled-note-secondary: #666666;\n\t\t}`,\n        \"neapolitan\": `:root {\n\t\t\t--page-margin: #120807;\n\t\t\t--editor-background: #120807;\n\t\t\t--hover-preview: #e79a82;\n\t\t\t--playhead: #e79a82;\n\t\t\t--primary-text: #decdbf;\n\t\t\t--secondary-text: #fa99bb;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #990036;\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #f6377a;\n\t\t\t--link-accent: #f6377a;\n\t\t\t--ui-widget-background: #24160f;\n\t\t\t--ui-widget-focus: #362217;\n\t\t\t--pitch-background: #1e1106;\n\t\t\t--tonic: #382414;\n\t\t\t--fifth-note: #41240c;\n\t\t\t--white-piano-key: #e1c5b7;\n\t\t\t--black-piano-key: #482c1e;\n\t\t\t--white-piano-key-text: black;\n\t\t\t--black-piano-key-text: white;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #4d2a19;\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\n\t\t\t--track-editor-bg-noise: #4d2a19;\n\t\t\t--track-editor-bg-noise-dim: #27150c;\n\t\t\t--track-editor-bg-mod: #4d2a19;\n\t\t\t--track-editor-bg-mod-dim: #27150c;\n\t\t\t--multiplicative-mod-slider: #decdbf;\n\t\t\t--overwriting-mod-slider: #decdbf;\n\t\t\t--indicator-primary: #decdbf;\n\t\t\t--indicator-secondary: #362217;\n\t\t\t--select2-opt-group: #24160f;\n\t\t\t--input-box-outline: #24160f;\n\t\t\t--mute-button-normal: #ff66a1;\n\t\t\t--mute-button-mod: #e61968;\n\t\t\t--pitch1-secondary-channel: #680029;\n\t\t\t--pitch1-primary-channel: #cc0052;\n\t\t\t--pitch1-secondary-note: #660029;\n\t\t\t--pitch1-primary-note: #cc0052;\n\t\t\t--pitch2-secondary-channel: #7e1b43;\n\t\t\t--pitch2-primary-channel: #d32e71;\n\t\t\t--pitch2-secondary-note: #7e1b43;\n\t\t\t--pitch2-primary-note: #d32e71;\n\t\t\t--pitch3-secondary-channel: #aa275e;\n\t\t\t--pitch3-primary-channel: #da5d91;\n\t\t\t--pitch3-secondary-note: #aa275e;\n\t\t\t--pitch3-primary-note: #da5d91;\n\t\t\t--pitch4-secondary-channel: #cc3878;\n\t\t\t--pitch4-primary-channel: #e18bb0;\n\t\t\t--pitch4-secondary-note: #cc3878;\n\t\t\t--pitch4-primary-note: #e18bb0;\n\t\t\t--pitch5-secondary-channel: #d06c9b;\n\t\t\t--pitch5-primary-channel: #e9bad0;\n\t\t\t--pitch5-secondary-note: #d06c9b;\n\t\t\t--pitch5-primary-note: #e9bad0;\n\t\t\t--pitch6-secondary-channel: #c9acc5;\n\t\t\t--pitch6-primary-channel: #f0e8ef;\n\t\t\t--pitch6-secondary-note: #c9acc5;\n\t\t\t--pitch6-primary-note: #f0e8ef;\n\t\t\t--pitch7-secondary-channel: #d06c9b;\n\t\t\t--pitch7-primary-channel: #e9bad0;\n\t\t\t--pitch7-secondary-note: #d06c9b;\n\t\t\t--pitch7-primary-note: #e9bad0;\n\t\t\t--pitch8-secondary-channel: #cc3878;\n\t\t\t--pitch8-primary-channel: #e18bb0;\n\t\t\t--pitch8-secondary-note: #cc3878;\n\t\t\t--pitch8-primary-note: #e18bb0;\n\t\t\t--pitch9-secondary-channel: #aa275e;\n\t\t\t--pitch9-primary-channel: #da5d91;\n\t\t\t--pitch9-secondary-note: #aa275e;\n\t\t\t--pitch9-primary-note: #da5d91;\n\t\t\t--pitch10-secondary-channel: #7e1b43;\n\t\t\t--pitch10-primary-channel: #d32e71;\n\t\t\t--pitch10-secondary-note: #7e1b43;\n\t\t\t--pitch10-primary-note: #d32e71;\n\t\t\t--noise1-secondary-channel: #683a37;\n\t\t\t--noise1-primary-channel: #A85F5A;\n\t\t\t--noise1-secondary-note: #683a37;\n\t\t\t--noise1-primary-note: #A85F5A;\n\t\t\t--noise2-secondary-channel: #7c4a41;\n\t\t\t--noise2-primary-channel: #B47A70;\n\t\t\t--noise2-secondary-note: #7c4a41;\n\t\t\t--noise2-primary-note: #B47A70;\n\t\t\t--noise3-secondary-channel: #935f4d;\n\t\t\t--noise3-primary-channel: #c09587;\n\t\t\t--noise3-secondary-note: #935f4d;\n\t\t\t--noise3-primary-note: #C09587;\n\t\t\t--noise4-secondary-channel: #aa795a;\n\t\t\t--noise4-primary-channel: #cdb09d;\n\t\t\t--noise4-secondary-note: #aa795a;\n\t\t\t--noise4-primary-note: #CDAF9D;\n\t\t\t--noise5-secondary-channel: #bb987c;\n\t\t\t--noise5-primary-channel: #decdbf;\n\t\t\t--noise5-secondary-note: #bb987c;\n\t\t\t--noise5-primary-note: #decdbf;\n\t\t\t--mod1-secondary-channel: #6ca784;\n\t\t\t--mod1-primary-channel: #accdb9;\n\t\t\t--mod1-secondary-note: #6ca784;\n\t\t\t--mod1-primary-note: #accdb9;\n\t\t\t--mod2-secondary-channel: #7daa9f;\n\t\t\t--mod2-primary-channel: #bbd3cd;\n\t\t\t--mod2-secondary-note: #7daa9f;\n\t\t\t--mod2-primary-note: #bbd3cd;\n\t\t\t--mod3-secondary-channel: #70a3a9;\n\t\t\t--mod3-primary-channel: #afcccf;\n\t\t\t--mod3-secondary-note: #70a3a9;\n\t\t\t--mod3-primary-note: #afcccf;\n\t\t\t--mod4-secondary-channel: #5698b8;\n\t\t\t--mod4-primary-channel: #9ec3d6;\n\t\t\t--mod4-secondary-note: #5698b8;\n\t\t\t--mod4-primary-note: #9ec3d6;\n\t\t\t--mod-label-primary: #24160f;\n\t\t\t--mod-label-secondary-text: #E5AFC2;\n\t\t\t--mod-label-primary-text: #decdbf;\n\t\t\t--disabled-note-primary: #bababa;\n\t\t\t--disabled-note-secondary: #878787;\n\t\t}`,\n        \"mono\": `:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #808080;\n\t\t\t--playhead: #808080;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #cccccc;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #696969;\n\t\t\t--box-selection-fill: #cccccc40;\n\t\t\t--loop-accent: #808080;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: #1a1a1a;\n\t\t\t--tonic: #262626;\n\t\t\t--fifth-note: #0d0d0d;\n\t\t\t--white-piano-key: #808080;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #262626;\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\n\t\t\t--track-editor-bg-noise: #262626;\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\n\t\t\t--track-editor-bg-mod: #262626;\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\n\t\t\t--multiplicative-mod-slider: #808080;\n\t\t\t--overwriting-mod-slider: #808080;\n\t\t\t--indicator-primary: #808080;\n\t\t\t--indicator-secondary: #333333;\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #808080;\n\t\t\t--mute-button-mod: #808080;\n\t\t\t--mod-label-primary: #232323;\n\t\t\t--mod-label-secondary-text: #696969;\n\t\t\t--mod-label-primary-text: #cdcdcd;\n\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t--pitch-secondary-channel-hue-scale: 25;\n\t\t\t--pitch-secondary-channel-sat: 10;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 70;\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\n\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t--pitch-primary-channel-hue-scale: 25;\n\t\t\t--pitch-primary-channel-sat: 50;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 95;\n\t\t\t--pitch-primary-channel-lum-scale: 0;\n\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t--pitch-secondary-note-hue-scale: 25;\n\t\t\t--pitch-secondary-note-sat: 10;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t--pitch-secondary-note-lum-scale: 0;\n\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t--pitch-primary-note-hue-scale: 25;\n\t\t\t--pitch-primary-note-sat: 50;\n\t\t\t--pitch-primary-note-sat-scale: 0.1;\n\t\t\t--pitch-primary-note-lum: 95;\n\t\t\t--pitch-primary-note-lum-scale: 0;\n\t\t\t--noise-secondary-channel-hue: 125;\n\t\t\t--noise-secondary-channel-hue-scale: 50;\n\t\t\t--noise-secondary-channel-sat: 10;\n\t\t\t--noise-secondary-channel-sat-scale: 0.1;\n\t\t\t--noise-secondary-channel-lum: 70;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 125;\n\t\t\t--noise-primary-channel-hue-scale: 50;\n\t\t\t--noise-primary-channel-sat: 50;\n\t\t\t--noise-primary-channel-sat-scale: 0.1;\n\t\t\t--noise-primary-channel-lum: 95;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 125;\n\t\t\t--noise-secondary-note-hue-scale: 50;\n\t\t\t--noise-secondary-note-sat: 10;\n\t\t\t--noise-secondary-note-sat-scale: 0.1;\n\t\t\t--noise-secondary-note-lum: 70;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 125;\n\t\t\t--noise-primary-note-hue-scale: 50;\n\t\t\t--noise-primary-note-sat: 50;\n\t\t\t--noise-primary-note-sat-scale: 0.1;\n\t\t\t--noise-primary-note-lum: 95;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 255;\n\t\t\t--mod-secondary-channel-hue-scale: 75;\n\t\t\t--mod-secondary-channel-sat: 10;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 70;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 255;\n\t\t\t--mod-primary-channel-hue-scale: 75;\n\t\t\t--mod-primary-channel-sat: 50;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 95;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 255;\n\t\t\t--mod-secondary-note-hue-scale: 75;\n\t\t\t--mod-secondary-note-sat: 10;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 70;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 255;\n\t\t\t--mod-primary-note-hue-scale: 75;\n\t\t\t--mod-primary-note-sat: 50;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 95;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t}`,\n\t\t\"modbox classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"zefbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #C3593D;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #06c400;\n\t\t\t\t--pitch1-primary-channel:   #08ff00;\n\t\t\t\t--pitch1-secondary-note:    #06c400;\n\t\t\t\t--pitch1-primary-note:      #06e000;\n\t\t\t\t--pitch2-secondary-channel: #00bf97;\n\t\t\t\t--pitch2-primary-channel:   #00ffcb;\n\t\t\t\t--pitch2-secondary-note:    #00bf97;\n\t\t\t\t--pitch2-primary-note:      #00edbc;\n\t\t\t\t--pitch3-secondary-channel: #b5b000;\n\t\t\t\t--pitch3-primary-channel:   #fffa00;\n\t\t\t\t--pitch3-secondary-note:    #b5b000;\n\t\t\t\t--pitch3-primary-note:      #e0db00;\n\t\t\t\t--pitch4-secondary-channel: #c90000;\n\t\t\t\t--pitch4-primary-channel:   #e20000;\n\t\t\t\t--pitch4-secondary-note:    #c90000;\n\t\t\t\t--pitch4-primary-note:      #e20000;\n\t\t\t\t--pitch5-secondary-channel: #d17d12;\n\t\t\t\t--pitch5-primary-channel:   #ff9e21;\n\t\t\t\t--pitch5-secondary-note:    #d17d12;\n\t\t\t\t--pitch5-primary-note:      #ef9017;\n\t\t\t\t--pitch6-secondary-channel: #d35bc8;\n\t\t\t\t--pitch6-primary-channel:   #ffa5f7;\n\t\t\t\t--pitch6-secondary-note:    #d35bc8;\n\t\t\t\t--pitch6-primary-note:      #fc64ee;\n\t\t\t\t--pitch7-secondary-channel: #D00000;\n\t\t\t\t--pitch7-primary-channel:   #FF4444;\n\t\t\t\t--pitch7-secondary-note:    #D00000;\n\t\t\t\t--pitch7-primary-note:      #FF4444;\n\t\t\t\t--pitch8-secondary-channel: #00C700;\n\t\t\t\t--pitch8-primary-channel:   #A0FFA0;\n\t\t\t\t--pitch8-secondary-note:    #00C700;\n\t\t\t\t--pitch8-primary-note:      #A0FFA0;\n\t\t\t\t--pitch9-secondary-channel: #A88981;\n\t\t\t\t--pitch9-primary-channel:   #F1C3B7;\n\t\t\t\t--pitch9-secondary-note:    #A88981;\n\t\t\t\t--pitch9-primary-note:      #F1C3B7;\n\t\t\t\t--pitch10-secondary-channel:#0C0A99;\n\t\t\t\t--pitch10-primary-channel:  #0000EE;\n\t\t\t\t--pitch10-secondary-note:   #0C0A99;\n\t\t\t\t--pitch10-primary-note:     #0000EE;\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\n\t\t\t\t--noise2-secondary-channel: #A18F51;\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\n\t\t\t\t--noise2-secondary-note:    #A18F51;\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768DFC;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768DFC;\n\t\t\t\t--noise4-secondary-channel: #8888D0;\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\n\t\t\t\t--noise4-secondary-note:    #8888D0;\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\n\t\t\t\t--noise5-secondary-channel: #B7148E;\n\t\t\t\t--noise5-primary-channel:   #E819B4;\n\t\t\t\t--noise5-secondary-note:    #B7148E;\n\t\t\t\t--noise5-primary-note:      #E819B4;\n       --mod1-secondary-channel: #06c400;\n\t\t\t\t--mod1-primary-channel:   #08ff00;\n\t\t\t\t--mod1-secondary-note:    #06c400;\n\t\t\t\t--mod1-primary-note:      #06e000;\n\t\t\t\t--mod2-secondary-channel: #00bf97;\n\t\t\t\t--mod2-primary-channel:   #00ffcb;\n\t\t\t\t--mod2-secondary-note:    #00bf97;\n\t\t\t\t--mod2-primary-note:      #00edbc;\n\t\t\t\t--mod3-secondary-channel: #b5b000;\n\t\t\t\t--mod3-primary-channel:   #fffa00;\n\t\t\t\t--mod3-secondary-note:    #b5b000;\n\t\t\t\t--mod3-primary-note:      #e0db00;\n\t\t\t\t--mod4-secondary-channel: #c90000;\n\t\t\t\t--mod4-primary-channel:   #e20000;\n\t\t\t\t--mod4-secondary-note:    #c90000;\n\t\t\t\t--mod4-primary-note:      #e20000;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"sandbox classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #198195;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #539999;\n\t\t\t\t--pitch1-primary-channel:   #5EB1B1;\n\t\t\t\t--pitch1-secondary-note:    #539999;\n\t\t\t\t--pitch1-primary-note:      #5EB1B1;\n\t\t\t\t--pitch2-secondary-channel: #95933C;\n\t\t\t\t--pitch2-primary-channel:   #B0AD44;\n\t\t\t\t--pitch2-secondary-note:    #95933C;\n\t\t\t\t--pitch2-primary-note:      #B0AD44;\n\t\t\t\t--pitch3-secondary-channel: #E75566;\n\t\t\t\t--pitch3-primary-channel:   #FF9AA6;\n\t\t\t\t--pitch3-secondary-note:    #E75566;\n\t\t\t\t--pitch3-primary-note:      #FF9AA6;\n\t\t\t\t--pitch4-secondary-channel: #8B4343;\n\t\t\t\t--pitch4-primary-channel:   #FF8844;\n\t\t\t\t--pitch4-secondary-note:    #8B4343;\n\t\t\t\t--pitch4-primary-note:      #FF8844;\n\t\t\t\t--pitch5-secondary-channel: #888888;\n\t\t\t\t--pitch5-primary-channel:   #BBBBBB;\n\t\t\t\t--pitch5-secondary-note:    #888888;\n\t\t\t\t--pitch5-primary-note:      #BBBBBB;\n\t\t\t\t--pitch6-secondary-channel: #BB6906;\n\t\t\t\t--pitch6-primary-channel:   #FE8D00;\n\t\t\t\t--pitch6-secondary-note:    #BB6906;\n\t\t\t\t--pitch6-primary-note:      #FE8D00;\n\t\t\t\t--pitch7-secondary-channel: #539999;\n\t\t\t\t--pitch7-primary-channel:   #5EB1B1;\n\t\t\t\t--pitch7-secondary-note:    #539999;\n\t\t\t\t--pitch7-primary-note:      #5EB1B1;\n\t\t\t\t--pitch8-secondary-channel: #95933C;\n\t\t\t\t--pitch8-primary-channel:   #B0AD44;\n\t\t\t\t--pitch8-secondary-note:    #95933C;\n\t\t\t\t--pitch8-primary-note:      #B0AD44;\n\t\t\t\t--pitch9-secondary-channel: #E75566;\n\t\t\t\t--pitch9-primary-channel:   #FF9AA6;\n\t\t\t\t--pitch9-secondary-note:    #E75566;\n\t\t\t\t--pitch9-primary-note:      #FF9AA6;\n\t\t\t\t--pitch10-secondary-channel: #8B4343;\n\t\t\t\t--pitch10-primary-channel:   #FF8844;\n\t\t\t\t--pitch10-secondary-note:    #8B4343;\n\t\t\t\t--pitch10-primary-note:      #FF8844;\t\t\t\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\n\t\t\t\t--noise2-secondary-channel: #A18F51;\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\n\t\t\t\t--noise2-secondary-note:    #A18F51;\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768DFC;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768DFC;\n\t\t\t\t--noise4-secondary-channel: #8888D0;\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\n\t\t\t\t--noise4-secondary-note:    #8888D0;\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\n\t\t\t\t--noise5-secondary-channel: #A18F51;\n\t\t\t\t--noise5-primary-channel:   #F6BB6A;\n\t\t\t\t--noise5-secondary-note:    #A18F51;\n\t\t\t\t--noise5-primary-note:      #F6BB6A;\t\t\t\n         \t--mod1-secondary-channel: #539999;\n\t\t\t\t--mod1-primary-channel:   #5EB1B1;\n\t\t\t\t--mod1-secondary-note:    #539999;\n\t\t\t\t--mod1-primary-note:      #5EB1B1;\n\t\t\t\t--mod2-secondary-channel: #95933C;\n\t\t\t\t--mod2-primary-channel:   #B0AD44;\n\t\t\t\t--mod2-secondary-note:    #95933C;\n\t\t\t\t--mod2-primary-note:      #B0AD44;\n\t\t\t\t--mod3-secondary-channel: #E75566;\n\t\t\t\t--mod3-primary-channel:   #FF9AA6;\n\t\t\t\t--mod3-secondary-note:    #E75566;\n\t\t\t\t--mod3-primary-note:      #FF9AA6;\n\t\t\t\t--mod4-secondary-channel: #8B4343;\n\t\t\t\t--mod4-primary-channel:   #FF8844;\n\t\t\t\t--mod4-secondary-note:    #8B4343;\n\t\t\t\t--mod4-primary-note:      #FF8844;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"harrybox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--noise-channel-limit: 2;\n\t\t\t\t--pitch1-secondary-channel: #00ffff;\n\t\t\t\t--pitch1-primary-channel:   #00ffff;\n\t\t\t\t--pitch1-secondary-note:    #00ffff;\n\t\t\t\t--pitch1-primary-note:      #00ffff;\n\t\t\t\t--pitch2-secondary-channel: #00d8d8;\n\t\t\t\t--pitch2-primary-channel:   #00d8d8;\n\t\t\t\t--pitch2-secondary-note:    #00d8d8;\n\t\t\t\t--pitch2-primary-note:      #00d8d8;\n\t\t\t\t--pitch3-secondary-channel: #00adad;\n\t\t\t\t--pitch3-primary-channel:   #00adad;\n\t\t\t\t--pitch3-secondary-note:    #00adad;\n\t\t\t\t--pitch3-primary-note:      #00adad;\n\t\t\t\t-pitch4-secondary-channel: #008c8c;\n\t\t\t\t--pitch4-primary-channel:   #008c8c;\n\t\t\t\t--pitch4-secondary-note:    #008c8c;\n\t\t\t\t--pitch4-primary-note:      #008c8c;\n\t\t\t\t--pitch5-secondary-channel: #005b5b;\n\t\t\t\t--pitch5-primary-channel:   #005b5b;\n\t\t\t\t--pitch5-secondary-note:    #005b5b;\n\t\t\t\t--pitch5-primary-note:      #005b5b;\n\t\t\t\t--pitch6-secondary-channel: #003333;\n\t\t\t\t--pitch6-primary-channel:   #003333;\n\t\t\t\t--pitch6-secondary-note:    #003333;\n\t\t\t\t--pitch6-primary-note:      #003333;\n\t\t\t\t--pitch7-secondary-channel: #00ffff;\n\t\t\t\t--pitch7-primary-channel:   #00ffff;\n\t\t\t\t--pitch7-secondary-note:    #00ffff;\n\t\t\t\t--pitch7-primary-note:      #00ffff;\n\t\t\t\t--pitch8-secondary-channel: #00ffff;\n\t\t\t\t--pitch8-primary-channel:   #00ffff;\n\t\t\t\t--pitch8-secondary-note:    #00ffff;\n\t\t\t\t--pitch8-primary-note:      #00ffff;\n\t\t\t\t--pitch9-secondary-channel: #00ffff;\n\t\t\t\t--pitch9-primary-channel:   #00ffff;\n\t\t\t\t--pitch9-secondary-note:    #00ffff;\n\t\t\t\t--pitch9-primary-note:      #00ffff;\n\t\t\t\t--pitch10-secondary-channel:#00ffff;\n\t\t\t\t--pitch10-primary-channel:  #00ffff;\n\t\t\t\t--pitch10-secondary-note:   #00ffff;\n\t\t\t\t--pitch10-primary-note:     #00ffff;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #991010;\n\t\t\t\t--noise3-primary-channel:   #ff1616;\n\t\t\t\t--noise3-secondary-note:    #991010;\n\t\t\t\t--noise3-primary-note:      #ff1616;\n\t\t\t\t--noise4-secondary-channel: #aaaaaa;\n\t\t\t\t--noise4-primary-channel:   #ffffff;\n\t\t\t\t--noise4-secondary-note:    #aaaaaa;\n\t\t\t\t--noise4-primary-note:      #ffffff;\n\t\t\t\t--noise5-secondary-channel: #991010;\n\t\t\t\t--noise5-primary-channel:   #ff1616;\n\t\t\t\t--noise5-secondary-note:    #991010;\n\t\t\t\t--noise5-primary-note:      #ff1616;\n         \t--mod1-secondary-channel: #00ffff;\n\t\t\t\t--mod1-primary-channel:   #00ffff;\n\t\t\t\t--mod1-secondary-note:    #00ffff;\n\t\t\t\t--mod1-primary-note:      #00ffff;\n\t\t\t\t--mod2-secondary-channel: #00d8d8;\n\t\t\t\t--mod2-primary-channel:   #00d8d8;\n\t\t\t\t--mod2-secondary-note:    #00d8d8;\n\t\t\t\t--mod2-primary-note:      #00d8d8;\n\t\t\t\t--mod3-secondary-channel: #00adad;\n\t\t\t\t--mod3-primary-channel:   #00adad;\n\t\t\t\t--mod3-secondary-note:    #00adad;\n\t\t\t\t--mod3-primary-note:      #00adad;\n\t\t\t\t-mod4-secondary-channel: #008c8c;\n\t\t\t\t--mod4-primary-channel:   #008c8c;\n\t\t\t\t--mod4-secondary-note:    #008c8c;\n\t\t\t\t--mod4-primary-note:      #008c8c;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"brucebox\": `\n\t\t:root {\n\t\t\t\tfont: 16px/2 cursive;\n\t\t\t\t--page-margin: #4667CE;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 3;\n\t\t\t\t\t--noise-channel-limit: 1;\n\t\t\t\t--pitch1-secondary-channel: #bda822;\n\t\t\t\t--pitch1-primary-channel:   #fcdb00;\n\t\t\t\t--pitch1-secondary-note:    #bda822;\n\t\t\t\t--pitch1-primary-note:      #fcdb00;\n\t\t\t\t--pitch2-secondary-channel: #612278;\n\t\t\t\t--pitch2-primary-channel:   #bb00ff;\n\t\t\t\t--pitch2-secondary-note:    #612278;\n\t\t\t\t--pitch2-primary-note:      #bb00ff;\n\t\t\t\t--pitch3-secondary-channel: #8b4343;\n\t\t\t\t--pitch3-primary-channel:   #ff8844;\n\t\t\t\t--pitch3-secondary-note:    #8b4343;\n\t\t\t\t--pitch3-primary-note:      #ff8844;\n\t\t\t\t--pitch4-secondary-channel: #bda822;\n\t\t\t\t--pitch4-primary-channel:   #fcdb00;\n\t\t\t\t--pitch4-secondary-note:    #bda822;\n\t\t\t\t--pitch4-primary-note:      #fcdb00;\n\t\t\t\t--pitch5-secondary-channel: #612278;\n\t\t\t\t--pitch5-primary-channel:   #bb00ff;\n\t\t\t\t--pitch5-secondary-note:    #612278;\n\t\t\t\t--pitch5-primary-note:      #bb00ff;\n\t\t\t\t--pitch6-secondary-channel: #8b4343;\n\t\t\t\t--pitch6-primary-channel:   #ff8844;\n\t\t\t\t--pitch6-secondary-note:    #8b4343;\n\t\t\t\t--pitch6-primary-note:      #ff8844;\n\t\t\t\t--pitch7-secondary-channel: #bda822;\n\t\t\t\t--pitch7-primary-channel:   #fcdb00;\n\t\t\t\t--pitch7-secondary-note:    #bda822;\n\t\t\t\t--pitch7-primary-note:      #fcdb00;\n\t\t\t\t--pitch8-secondary-channel: #612278;\n\t\t\t\t--pitch8-primary-channel:   #bb00ff;\n\t\t\t\t--pitch8-secondary-note:    #612278;\n\t\t\t\t--pitch8-primary-note:      #bb00ff;\n\t\t\t\t--pitch9-secondary-channel: #8b4343;\n\t\t\t\t--pitch9-primary-channel:   #ff8844;\n\t\t\t\t--pitch9-secondary-note:    #8b4343;\n\t\t\t\t--pitch9-primary-note:      #ff8844;\n\t\t\t\t--pitch10-secondary-channel: #bda822;\n\t\t\t\t--pitch10-primary-channel:   #fcdb00;\n\t\t\t\t--pitch10-secondary-note:    #bda822;\n\t\t\t\t--pitch10-primary-note:      #fcdb00;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"shitbox 2.0\": `\n\t\t\t:root {\n\t\t\t--page-margin: maroon;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: firebrick;\n\t\t\t\t\t--primary-text: silver;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(139,69,19,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(220,20,60,0.2);\n\t\t\t\t\t--loop-accent: #841;\n\t\t\t\t\t--link-accent: #841;\n\t\t\t\t\t--ui-widget-background: #800;\n\t\t\t\t\t--ui-widget-focus: #a00;\n\t\t\t\t\t--pitch-background: #700;\n\t\t\t\t\t--tonic: #522;\n\t\t\t\t\t--fifth-note: #f75;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #7e4a35;\n\t\t\t\t\t--pitch1-primary-channel:   #c27251;\n\t\t\t\t\t--pitch1-secondary-note:    #7e4a35;\n\t\t\t\t\t--pitch1-primary-note:      #f09571;\n\t\t\t\t\t--pitch2-secondary-channel: #998a5c;\n\t\t\t\t\t--pitch2-primary-channel:   #d9c27c;\n\t\t\t\t\t--pitch2-secondary-note:    #998a5c;\n\t\t\t\t\t--pitch2-primary-note:      #fae196;\n\t\t\t\t\t--pitch3-secondary-channel: #9c927c;\n\t\t\t\t\t--pitch3-primary-channel:   #dbceb0;\n\t\t\t\t\t--pitch3-secondary-note:    #9c927c;\n\t\t\t\t\t--pitch3-primary-note:      #eddebb;\n\t\t\t\t\t--pitch4-secondary-channel: #838060;\n\t\t\t\t\t--pitch4-primary-channel:   #ccc795;\n\t\t\t\t\t--pitch4-secondary-note:    #838060;\n\t\t\t\t\t--pitch4-primary-note:      #f2ecb1;\n\t\t\t\t\t--pitch5-secondary-channel: #8b6f47;\n\t\t\t\t\t--pitch5-primary-channel:   #d1a76b;\n\t\t\t\t\t--pitch5-secondary-note:    #8b6f47;\n\t\t\t\t\t--pitch5-primary-note:      #ffcc82;\n\t\t\t\t\t--pitch6-secondary-channel: #a96e5b;\n\t\t\t\t\t--pitch6-primary-channel:   #e3967d;\n\t\t\t\t\t--pitch6-secondary-note:    #a96e5b;\n\t\t\t\t\t--pitch6-primary-note:      #ffa68a;\n\t\t\t\t\t\t--pitch7-secondary-channel: #7e4a35;\n\t\t\t\t\t--pitch7-primary-channel:   #c27251;\n\t\t\t\t\t--pitch7-secondary-note:    #7e4a35;\n\t\t\t\t\t--pitch7-primary-note:      #f09571;\n\t\t\t\t\t--pitch8-secondary-channel: #998a5c;\n\t\t\t\t\t--pitch8-primary-channel:   #d9c27c;\n\t\t\t\t\t--pitch8-secondary-note:    #998a5c;\n\t\t\t\t\t--pitch8-primary-note:      #fae196;\n\t\t\t\t\t--pitch9-secondary-channel: #9c927c;\n\t\t\t\t\t--pitch9-primary-channel:   #dbceb0;\n\t\t\t\t\t--pitch9-secondary-note:    #9c927c;\n\t\t\t\t\t--pitch9-primary-note:      #eddebb;\n\t\t\t\t\t--pitch10-secondary-channel: #838060;\n\t\t\t\t\t--pitch10-primary-channel:   #ccc795;\n\t\t\t\t\t--pitch10-secondary-note:    #838060;\n\t\t\t\t\t--pitch10-primary-note:      #f2ecb1;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise5-secondary-channel: #996633;\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\n         --mod1-secondary-channel: #7e4a35;\n\t\t\t\t\t--mod1-primary-channel:   #c27251;\n\t\t\t\t\t--mod1-secondary-note:    #7e4a35;\n\t\t\t\t\t--mod1-primary-note:      #f09571;\n\t\t\t\t\t--mod2-secondary-channel: #998a5c;\n\t\t\t\t\t--mod2-primary-channel:   #d9c27c;\n\t\t\t\t\t--mod2-secondary-note:    #998a5c;\n\t\t\t\t\t--mod2-primary-note:      #fae196;\n\t\t\t\t\t--mod3-secondary-channel: #9c927c;\n\t\t\t\t\t--mod3-primary-channel:   #dbceb0;\n\t\t\t\t\t--mod3-secondary-note:    #9c927c;\n\t\t\t\t\t--mod3-primary-note:      #eddebb;\n\t\t\t\t\t--mod4-secondary-channel: #838060;\n\t\t\t\t\t--mod4-primary-channel:   #ccc795;\n\t\t\t\t\t--mod4-secondary-note:    #838060;\n\t\t\t\t\t--mod4-primary-note:      #f2ecb1;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"shitbox 3.0\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t\tfont: 20px/2 monospace;\n\t\t\t\t--page-margin: #252525;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t\n\t\t\t`,\n\t\t\t\"nerdbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 9;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #139620;\n\t\t\t\t--pitch1-primary-channel:   #25ff3a;\n\t\t\t\t--pitch1-secondary-note:    #139620;\n\t\t\t\t--pitch1-primary-note:      #25ff3a;\n\t\t\t\t--pitch2-secondary-channel: #109986;\n\t\t\t\t--pitch2-primary-channel:   #1cffe0;\n\t\t\t\t--pitch2-secondary-note:    #109986;\n\t\t\t\t--pitch2-primary-note:      #1cffe0;\n\t\t\t\t--pitch3-secondary-channel: #127296;\n\t\t\t\t--pitch3-primary-channel:   #21c3ff;\n\t\t\t\t--pitch3-secondary-note:    #127296;\n\t\t\t\t--pitch3-primary-note:      #21c3ff;\n\t\t\t\t--pitch4-secondary-channel: #6038a5;\n\t\t\t\t--pitch4-primary-channel:   #9456ff;\n\t\t\t\t--pitch4-secondary-note:    #6038a5;\n\t\t\t\t--pitch4-primary-note:      #ff35e0;\n\t\t\t\t--pitch5-secondary-channel: #a52491;\n\t\t\t\t--pitch5-primary-channel:   #ff35e0;\n\t\t\t\t--pitch5-secondary-note:    #a52491;\n\t\t\t\t--pitch5-primary-note:      #af3221;\n\t\t\t\t--pitch6-secondary-channel: #af3221;\n\t\t\t\t--pitch6-primary-channel:   #ff4a32;\n\t\t\t\t--pitch6-secondary-note:    #af3221;\n\t\t\t\t--pitch6-primary-note:      #ff4a32;\n\t\t\t\t--pitch7-secondary-channel: #ad6e0f;\n\t\t\t\t--pitch7-primary-channel:   #ffa216;\n\t\t\t\t--pitch7-secondary-note:    #ad6e0f;\n\t\t\t\t--pitch7-primary-note:      #ffa216;\n\t\t\t\t--pitch8-secondary-channel: #ad6e0f;\n\t\t\t\t--pitch8-primary-channel:   #ffa216;\n\t\t\t\t--pitch8-secondary-note:    #ad6e0f;\n\t\t\t\t--pitch8-primary-note:      #ffa216;\n\t\t\t\t--pitch9-secondary-channel: #a7b512;\n\t\t\t\t--pitch9-primary-channel:   #ebff19;\n\t\t\t\t--pitch9-secondary-note:    #a7b512;\n\t\t\t\t--pitch9-primary-note:      #ebff19;\n\t\t\t\t--pitch10-secondary-channel:#70ad1b;\n\t\t\t\t--pitch10-primary-channel:  #a4ff26;\n\t\t\t\t--pitch10-secondary-note:   #70ad1b;\n\t\t\t\t--pitch10-primary-note:     #a4ff26;\n\t\t\t\t--noise1-secondary-channel: #68706f;\n\t\t\t\t--noise1-primary-channel:   #a6b2b1;\n\t\t\t\t--noise1-secondary-note:    #68706f;\n\t\t\t\t--noise1-primary-note:      #a6b2b1;\n\t\t\t\t--noise2-secondary-channel: #665c64;\n\t\t\t\t--noise2-primary-channel:   #a396a1;\n\t\t\t\t--noise2-secondary-note:    #665c64;\n\t\t\t\t--noise2-primary-note:      #a396a1;\n\t\t\t\t--noise3-secondary-channel: #60605a;\n\t\t\t\t--noise3-primary-channel:   #afaea3;\n\t\t\t\t--noise3-secondary-note:    #60605a;\n\t\t\t\t--noise3-primary-note:      #afaea3;\n\t\t\t--noise4-secondary-channel: #665c64;\n\t\t\t--noise4-primary-channel:   #a396a1;\n\t\t\t\t--noise4-secondary-note:    #665c64;\n\t\t\t\t--noise4-primary-note:      #a396a1;\n\t\t\t\t--noise5-secondary-channel: #60605a;\n\t\t\t\t--noise5-primary-channel:   #afaea3;\n\t\t\t\t--noise5-secondary-note:    #60605a;\n\t\t\t\t--noise5-primary-note:      #afaea3;\n         --mod1-secondary-channel: #139620;\n\t\t\t\t--mod1-primary-channel:   #25ff3a;\n\t\t\t\t--mod1-secondary-note:    #139620;\n\t\t\t\t--mod1-primary-note:      #25ff3a;\n\t\t\t\t--mod2-secondary-channel: #109986;\n\t\t\t\t--mod2-primary-channel:   #1cffe0;\n\t\t\t\t--mod2-secondary-note:    #109986;\n\t\t\t\t--mod2-primary-note:      #1cffe0;\n\t\t\t\t--mod3-secondary-channel: #127296;\n\t\t\t\t--mod3-primary-channel:   #21c3ff;\n\t\t\t\t--mod3-secondary-note:    #127296;\n\t\t\t\t--mod3-primary-note:      #21c3ff;\n\t\t\t\t--mod4-secondary-channel: #6038a5;\n\t\t\t\t--mod4-primary-channel:   #9456ff;\n\t\t\t\t--mod4-secondary-note:    #6038a5;\n\t\t\t\t--mod4-primary-note:      #ff35e0;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"cardboardbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0f0700;\n--editor-background: #0f0700;\n--hover-preview: #75461d;\n--playhead: #75461d;\n--primary-text: #ddd;\n--secondary-text: #8e695b;\n--inverted-text: black;\n--text-selection: #75461d;\n--box-selection-fill: rgba(117, 70, 29,0.5);\n--loop-accent: #75461d;\n--link-accent: #75461d;\n--ui-widget-background: #574a3e;\n--ui-widget-focus: #756453;\n--pitch-background: #361900;\n--tonic: #fdba9a;\n--fifth-note: #7f78d2;\n--white-piano-key: #bbb;\n--black-piano-key: #444;\n--use-color-formula: false;\n--track-editor-bg-pitch: #444;\n--track-editor-bg-pitch-dim: #333;\n--track-editor-bg-noise: #444;\n--track-editor-bg-noise-dim: #333;\n--track-editor-bg-mod: #234;\n--track-editor-bg-mod-dim: #123;\n--multiplicative-mod-slider: #456;\n--overwriting-mod-slider: #654;\n--indicator-primary: #74f;\n--indicator-secondary: #444;\n--select2-opt-group: #585858;\n--input-box-outline: #333;\n--mute-button-normal: #ffa033;\n--mute-button-mod: #9a6bff;\n--pitch1-secondary-channel: #798566;\n--pitch1-primary-channel: #9dab86;\n--pitch1-secondary-note: #798566;\n--pitch1-primary-note: #9dab86;\n--pitch2-secondary-channel: #a6733d;\n--pitch2-primary-channel: #e6a157;\n--pitch2-secondary-note: #a6733d;\n--pitch2-primary-note: #e6a157;\n--pitch3-secondary-channel: #874c27;\n--pitch3-primary-channel: #eb8242;\n--pitch3-secondary-note: #874c27;\n--pitch3-primary-note: #eb8242;\n--pitch4-secondary-channel: #395866;\n--pitch4-primary-channel: #537d91;\n--pitch4-secondary-note: #395866;\n--pitch4-primary-note: #537d91;\n--pitch5-secondary-channel: #779992;\n--pitch5-primary-channel: #a4d1c8;\n--pitch5-secondary-note: #779992;\n--pitch5-primary-note: #a4d1c8;\n--pitch6-secondary-channel: #7777b0;\n--pitch6-primary-channel: #a0a0ff;\n--pitch6-secondary-note: #8888d0;\n--pitch6-primary-note: #d0d0ff;\n--pitch7-secondary-channel: #300707;\n--pitch7-primary-channel: #560d0d;\n--pitch7-secondary-note: #300707;\n--pitch7-primary-note: #560d0d;\n--pitch8-secondary-channel: #486312;\n--pitch8-primary-channel: #76a21e;\n--pitch8-secondary-note: #486312;\n--pitch8-primary-note: #76a21e;\n--pitch9-secondary-channel: #4a1242;\n--pitch9-primary-channel: #721b65;\n--pitch9-secondary-note: #4a1242;\n--pitch9-primary-note: #721b65;\n--pitch10-secondary-channel: #7a312d;\n--pitch10-primary-channel: #f8615a;\n--pitch10-secondary-note: #7a312d;\n--pitch10-primary-note: #f8615a;\n--noise1-secondary-channel: #5f6582;\n--noise1-primary-channel: #a6b1e1;\n--noise1-secondary-note: #5f6582;\n--noise1-primary-note: #a6b1e1;\n--noise2-secondary-channel: #996633;\n--noise2-primary-channel: #ddaa77;\n--noise2-secondary-note: #cc9966;\n--noise2-primary-note: #f0d0bb;\n--noise3-secondary-channel: #4a6d8f;\n--noise3-primary-channel: #77aadd;\n--noise3-secondary-note: #6f9fcf;\n--noise3-primary-note: #bbd7ff;\n--noise4-secondary-channel: #6B3E8E;\n--noise4-primary-channel: #AF82D2;\n--noise4-secondary-note: #9E71C1;\n--noise4-primary-note: #D4C1EA;\n--noise5-secondary-channel: #996633;\n--noise5-primary-channel: #ddaa77;\n--noise5-secondary-note: #cc9966;\n--noise5-primary-note: #f0d0bb;\n--mod1-secondary-channel: #339955;\n--mod1-primary-channel: #77fc55;\n--mod1-secondary-note: #77ff8a;\n--mod1-primary-note: #cdffee;\n--mod2-secondary-channel: #993355;\n--mod2-primary-channel: #f04960;\n--mod2-secondary-note: #f057a0;\n--mod2-primary-note: #ffb8de;\n--mod3-secondary-channel: #553399;\n--mod3-primary-channel: #8855fc;\n--mod3-secondary-note: #aa64ff;\n--mod3-primary-note: #f8ddff;\n--mod4-secondary-channel: #a86436;\n--mod4-primary-channel: #c8a825;\n--mod4-secondary-note: #e8ba46;\n--mod4-primary-note: #fff6d3;\n--mod-label-primary: #999;\n--mod-label-secondary-text: #333;\n--mod-label-primary-text: black;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"blubox classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #024ACA;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #886eae;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch1-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch1-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch1-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch1-primary-note:      #024ACA;\n\t\t\t\t\t--pitch2-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch2-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch2-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch2-primary-note:      #024ACA;\n\t\t\t\t\t--pitch3-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch3-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch3-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch3-primary-note:      #024ACA;\n\t\t\t\t\t--pitch4-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch4-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch4-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch4-primary-note:      #024ACA;\n\t\t\t\t\t--pitch5-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch5-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch5-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch5-primary-note:      #024ACA;\n\t\t\t\t\t--pitch6-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch6-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch6-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch6-primary-note:      #024ACA;\n\t\t\t\t\t--pitch7-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch7-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch7-secondary-note:\t  #0A89FF;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#024ACA;\n\t\t\t\t\t--pitch8-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch8-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch8-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch8-primary-note:      #024ACA;\n\t\t\t\t\t--pitch9-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch9-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch9-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#024ACA;\n\t\t\t\t\t--pitch10-secondary-channel:#0A89FF;\n\t\t\t\t\t--pitch10-primary-channel:  #024ACA;\n\t\t\t\t\t--pitch10-secondary-note:   #0A89FF;\n\t\t\t\t\t--pitch10-primary-note:     #024ACA;\n\t\t\t\t\t--noise1-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise1-primary-channel:   #024ACA;\n\t\t\t\t\t--noise1-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise1-primary-note:      #024ACA;\n\t\t\t\t\t--noise2-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise2-primary-channel:   #024ACA;\n\t\t\t\t\t--noise2-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise2-primary-note:      #024ACA;\n\t\t\t\t\t--noise3-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise3-primary-channel:   #024ACA;\n\t\t\t\t\t--noise3-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise3-primary-note:      #024ACA;\n\t\t\t\t\t--noise4-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise4-primary-channel:   #024ACA;\n\t\t\t\t\t--noise4-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise4-primary-note:      #024ACA;\n\t\t\t\t\t--mod1-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod1-primary-channel:     #024ACA;\n\t\t\t\t\t--mod1-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod1-primary-note:        #024ACA;\n\t\t\t\t\t--mod2-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod2-primary-channel:     #024ACA;\n\t\t\t\t\t--mod2-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod2-primary-note:        #024ACA;\n\t\t\t\t\t--mod3-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod3-primary-channel:     #024ACA;\n\t\t\t\t\t--mod3-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #024ACA;\n\t\t\t\t\t--mod4-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod4-primary-channel:     #024ACA;\n\t\t\t\t\t--mod4-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod4-primary-note:        #024ACA;\n\t\t\t\t\t--mod-label-primary:        #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text:   white;\n\t\t\t\t}\n\t\t\t`,\n\t\t\"dogebox classic\": `\n\t\t\t\t:root {\n\t\t\t--page-margin: #0d0063;\n\t\t\t--editor-background: #0D0063;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #322c59;\n\t\t\t--tonic: #1c1933;\n\t\t\t--fifth-note: #7b74ad;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t--track-editor-bg-noise: #444;\n\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #74f;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #ffa033;\n\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t--pitch-channel-limit: 6;\n\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #c7ac00;\n\t\t\t--pitch1-primary-channel: #fcf403;\n\t\t\t--pitch1-secondary-note: #c7c700;\n\t\t\t--pitch1-primary-note: #fcf403;\n\t\t\t--pitch2-secondary-channel: #9400b5;\n\t\t\t--pitch2-primary-channel: #ff00ee;\n\t\t\t--pitch2-secondary-note: #9400b5;\n\t\t\t--pitch2-primary-note: #ff00ee;\n\t\t\t--pitch3-secondary-channel: #b37466;\n\t\t\t--pitch3-primary-channel: #ffc6a1;\n\t\t\t--pitch3-secondary-note: #b37466;\n\t\t\t--pitch3-primary-note: #ffc6a1;\n\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t--pitch4-primary-channel: #50ff50;\n\t\t\t--pitch4-secondary-note: #00c700;\n\t\t\t--pitch4-primary-note: #a0ffa0;\n\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t--pitch5-primary-channel: #ff90ff;\n\t\t\t--pitch5-secondary-note: #e040e0;\n\t\t\t--pitch5-primary-note: #ffc0ff;\n\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t--pitch6-primary-channel: #a0a0ff;\n\t\t\t--pitch6-secondary-note: #8888d0;\n\t\t\t--pitch6-primary-note: #d0d0ff;\n\t\t\t--pitch7-secondary-channel: #c7ac00;\n\t\t\t--pitch7-primary-channel: #fcf403;\n\t\t\t--pitch7-secondary-note: #c7c700;\n\t\t\t--pitch7-primary-note: #fcf403;\n\t\t\t--pitch8-secondary-channel: #9400b5;\n\t\t\t--pitch8-primary-channel: #ff00ee;\n\t\t\t--pitch8-secondary-note: #9400b5;\n\t\t\t--pitch8-primary-note: #ff00ee;\n\t\t\t--pitch9-secondary-channel: #b37466;\n\t\t\t--pitch9-primary-channel: #ffc6a1;\n\t\t\t--pitch9-secondary-note: #b37466;\n\t\t\t--pitch9-primary-note: #ffc6a1;\n\t\t\t--pitch10-secondary-channel: #00a100;\n\t\t\t--pitch10-primary-channel: #50ff50;\n\t\t\t--pitch10-secondary-note: #00c700;\n\t\t\t--pitch10-primary-note: #a0ffa0;\n\t\t\t--noise1-secondary-channel: #95acad;\n\t\t\t--noise1-primary-channel: #cee9eb;\n\t\t\t--noise1-secondary-note: #95acad;\n\t\t\t--noise1-primary-note: #cee9eb;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel: #ddaa77;\n\t\t\t--noise2-secondary-note: #cc9966;\n\t\t\t--noise2-primary-note: #f0d0bb;\n\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t--noise3-primary-channel: #77aadd;\n\t\t\t--noise3-secondary-note: #6f9fcf;\n\t\t\t--noise3-primary-note: #bbd7ff;\n\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t--noise5-secondary-channel: #7c9b42;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n      \t \t--mod1-secondary-channel: #c7ac00;\n\t\t\t--mod1-primary-channel: #fcf403;\n\t\t\t--mod1-secondary-note: #c7c700;\n\t\t\t--mod1-primary-note: #fcf403;\n\t\t\t--mod2-secondary-channel: #9400b5;\n\t\t\t--mod2-primary-channel: #ff00ee;\n\t\t\t--mod2-secondary-note: #9400b5;\n\t\t\t--mod2-primary-note: #ff00ee;\n\t\t\t--mod3-secondary-channel: #b37466;\n\t\t\t--mod3-primary-channel: #ffc6a1;\n\t\t\t--mod3-secondary-note: #b37466;\n\t\t\t--mod3-primary-note: #ffc6a1;\n\t\t\t--mod4-secondary-channel: #00a100;\n\t\t\t--mod4-primary-channel: #50ff50;\n\t\t\t--mod4-secondary-note: #00c700;\n\t\t\t--mod4-primary-note: #a0ffa0;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t  \"dogebox dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0d0063;\n\t\t\t\t\t--editor-background: #0D0063;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #322c59;\n\t\t\t\t\t--tonic: #1c1933;\n\t\t\t\t\t--fifth-note: #7b74ad;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--pitch1-secondary-channel: #c7ac00;\n\t\t\t\t\t--pitch1-primary-channel:   #fcf403;\n\t\t\t\t\t--pitch1-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch1-primary-note:      #fcf403;\n\t\t\t\t\t--pitch2-secondary-channel: #9400b5;\n\t\t\t\t\t--pitch2-primary-channel:   #ff00ee;\n\t\t\t\t\t--pitch2-secondary-note:    #9400b5;\n\t\t\t\t\t--pitch2-primary-note:      #ff00ee;\n\t\t\t\t\t--pitch3-secondary-channel: #b37466;\n\t\t\t\t\t--pitch3-primary-channel:   #ffc6a1;\n\t\t\t\t\t--pitch3-secondary-note:    #b37466;\n\t\t\t\t\t--pitch3-primary-note:      #ffc6a1;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--noise1-secondary-channel: #95acad;\n\t\t\t\t\t--noise1-primary-channel:   #cee9eb;\n\t\t\t\t\t--noise1-secondary-note:    #95acad;\n\t\t\t\t\t--noise1-primary-note:      #cee9eb;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t    \"todbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;s\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch7-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch7-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch7-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch8-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch8-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch8-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch8-primary-note:      #ffff92;\n\t\t\t\t\t--pitch9-secondary-channel: #c75000;\n\t\t\t\t\t--pitch9-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch9-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch9-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch10-secondary-channel: #00a100;\n\t\t\t\t\t--pitch10-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch10-secondary-note:    #00c700;\n\t\t\t\t\t--pitch10-primary-note:      #a0ffa0;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise5-secondary-channel: #996633;\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\n\t\t\t\t\t--mod1-secondary-channel: #0099a1;\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t\t--mod1-secondary-note:    #00bdc7;\n\t\t\t\t\t--mod1-primary-note:      #92f9ff;\n\t\t\t\t\t--mod2-secondary-channel: #a1a100;\n\t\t\t\t\t--mod2-primary-channel:   #ffff25;\n\t\t\t\t\t--mod2-secondary-note:    #c7c700;\n\t\t\t\t\t--mod2-primary-note:      #ffff92;\n\t\t\t\t\t--mod3-secondary-channel: #c75000;\n\t\t\t\t\t--mod3-primary-channel:   #ff9752;\n\t\t\t\t\t--mod3-secondary-note:    #ff771c;\n\t\t\t\t\t--mod3-primary-note:      #ffcdab;\n\t\t\t\t\t--mod4-secondary-channel: #00a100;\n\t\t\t\t\t--mod4-primary-channel:   #50ff50;\n\t\t\t\t\t--mod4-secondary-note:    #00c700;\n\t\t\t\t\t--mod4-primary-note:      #a0ffa0;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"todbox dark mode\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: #999999;\n\t\t\t\t\t--playhead: #999999;\n\t\t\t\t\t--primary-text: #999999;\n\t\t\t\t\t--secondary-text: #444444;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: #999999;\n\t\t\t\t\t--box-selection-fill: #999999;\n\t\t\t\t\t--loop-accent: #999999;\n\t\t\t\t\t--link-accent: #999999;\n\t\t\t\t\t--ui-widget-background: #222222;\n\t\t\t\t\t--ui-widget-focus: #444444;\n\t\t\t\t--pitch-background: #101010;\n\t\t\t\t\t--tonic: #404040;\n\t\t\t\t\t--fifth-note: #202020;\n\t\t\t\t\t--white-piano-key: #999999;\n\t\t\t\t\t--black-piano-key: #101010;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #004444;\n\t\t\t\t\t--pitch1-primary-channel:   #009999;\n\t\t\t\t\t--pitch1-secondary-note:    #004444;\n\t\t\t\t\t--pitch1-primary-note:      #009999;\n\t\t\t\t\t--pitch2-secondary-channel: #444400;\n\t\t\t\t\t--pitch2-primary-channel:   #999900;\n\t\t\t\t\t--pitch2-secondary-note:    #444400;\n\t\t\t\t\t--pitch2-primary-note:      #999900;\n\t\t\t\t\t--pitch3-secondary-channel: #443300;\n\t\t\t\t\t--pitch3-primary-channel:   #996600;\n\t\t\t\t\t--pitch3-secondary-note:    #443300;\n\t\t\t\t\t--pitch3-primary-note:      #996600;\n\t\t\t\t\t--pitch4-secondary-channel: #004400;\n\t\t\t\t\t--pitch4-primary-channel:   #009900;\n\t\t\t\t\t--pitch4-secondary-note:    #004400;\n\t\t\t\t\t--pitch4-primary-note:      #009900;\n\t\t\t\t\t--pitch5-secondary-channel: #440044;\n\t\t\t\t\t--pitch5-primary-channel:   #990099;\n\t\t\t\t\t--pitch5-secondary-note:    #440044;\n\t\t\t\t\t--pitch5-primary-note:      #990099;\n\t\t\t\t\t--pitch6-secondary-channel: #333344;\n\t\t\t\t\t--pitch6-primary-channel:   #666699;\n\t\t\t\t\t--pitch6-secondary-note:    #333344;\n\t\t\t\t\t--pitch6-primary-note:      #666699;\n\t\t\t\t\t--pitch7-secondary-channel: #444400;\n\t\t\t\t\t--pitch7-primary-channel:   #999900;\n\t\t\t\t\t--pitch7-secondary-note:    #444400;\n\t\t\t\t\t--pitch7-primary-note:      #999900;\n\t\t\t\t\t--pitch8-secondary-channel: #824E54;\n\t\t\t\t\t--pitch8-primary-channel:   #C4757E;\n\t\t\t\t\t--pitch8-secondary-note:    #824E54;\n\t\t\t\t\t--pitch8-primary-note:      #C4757E;\n\t\t\t\t\t--pitch9-secondary-channel: #006342;\n\t\t\t\t\t--pitch9-primary-channel:   #008E5F;\n\t\t\t\t\t--pitch9-secondary-note:    #006342;\n\t\t\t\t\t--pitch9-primary-note:      #008E5F;\n\t\t\t\t\t--pitch10-secondary-channel: #561291;\n\t\t\t\t\t--pitch10-primary-channel:   #7819C1;\n\t\t\t\t\t--pitch10-secondary-note:    #561291;\n\t\t\t\t\t--pitch10-primary-note:      #7819C1;\n\t\t\t\t\t--noise1-secondary-channel: #444444;\n\t\t\t\t\t--noise1-primary-channel:   #999999;\n\t\t\t\t\t--noise1-secondary-note:    #444444;\n\t\t\t\t\t--noise1-primary-note:      #999999;\n\t\t\t\t\t--noise2-secondary-channel: #443311;\n\t\t\t\t\t--noise2-primary-channel:   #996633;\n\t\t\t\t\t--noise2-secondary-note:    #443311;\n\t\t\t\t\t--noise2-primary-note:      #996633;\n\t\t\t\t\t--noise3-secondary-channel: #113344;\n\t\t\t\t\t--noise3-primary-channel:   #336699;\n\t\t\t\t\t--noise3-secondary-note:    #113344;\n\t\t\t\t\t--noise3-primary-note:      #336699;\n\t\t\t\t\t--noise4-secondary-channel: #444444;\n\t\t\t\t\t--noise4-primary-channel:   #999999;\n\t\t\t\t\t--noise4-secondary-note:    #444444;\n\t\t\t\t\t--noise4-primary-note:      #999999;\n\t\t\t\t\t--noise5-secondary-channel: #443311;\n\t\t\t\t\t--noise5-primary-channel:   #996633;\n\t\t\t\t\t--noise5-secondary-note:    #443311;\n\t\t\t\t\t--noise5-primary-note:      #996633;\n          --mod1-secondary-channel: #004444;\n\t\t\t\t\t--mod1-primary-channel:   #009999;\n\t\t\t\t\t--mod1-secondary-note:    #004444;\n\t\t\t\t\t--mod1-primary-note:      #009999;\n\t\t\t\t\t--mod2-secondary-channel: #444400;\n\t\t\t\t\t--mod2-primary-channel:   #999900;\n\t\t\t\t\t--mod2-secondary-note:    #444400;\n\t\t\t\t\t--mod2-primary-note:      #999900;\n\t\t\t\t\t--mod3-secondary-channel: #443300;\n\t\t\t\t\t--mod3-primary-channel:   #996600;\n\t\t\t\t\t--mod3-secondary-note:    #443300;\n\t\t\t\t\t--mod3-primary-note:      #996600;\n\t\t\t\t\t--mod4-secondary-channel: #004400;\n\t\t\t\t\t--mod4-primary-channel:   #009900;\n\t\t\t\t\t--mod4-secondary-note:    #004400;\n\t\t\t\t\t--mod4-primary-note:      #009900;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"mainbox 1.0\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #2F1C40;\n\t\t\t\t--link-accent: #543873;\n\t\t\t\t--ui-widget-background: #2F1C40;\n\t\t\t\t--ui-widget-focus: #543873;\n\t\t\t\t--pitch-background: #2F1C40;\n\t\t\t\t--tonic: #42286D;\n\t\t\t\t--fifth-note: #37416B;\n\t\t\t\t--white-piano-key: #156CB6;\n\t\t\t\t--black-piano-key: #130D14;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #156C99;\n\t\t\t\t\t--pitch1-primary-channel:   #00CFDF;\n\t\t\t\t\t--pitch1-secondary-note:    #0080A8;\n\t\t\t\t\t--pitch1-primary-note:      #009FC6;\n\t\t\t\t\t--pitch2-secondary-channel: #AD923A;\n\t\t\t\t\t--pitch2-primary-channel:   #FFD552;\n\t\t\t\t\t--pitch2-secondary-note:    #C49736;\n\t\t\t\t\t--pitch2-primary-note:      #EFC742;\n\t\t\t\t\t--pitch3-secondary-channel: #7A401E;\n\t\t\t\t\t--pitch3-primary-channel:   #C14E30;\n\t\t\t\t\t--pitch3-secondary-note:    #89381B;\n\t\t\t\t\t--pitch3-primary-note:      #E15427;\n\t\t\t\t\t--pitch4-secondary-channel: #0B6030;\n\t\t\t\t\t--pitch4-primary-channel:   #00915C;\n\t\t\t\t\t--pitch4-secondary-note:    #004337;\n\t\t\t\t\t--pitch4-primary-note:      #00915E;\n\t\t\t\t\t--pitch5-secondary-channel: #543873;\n\t\t\t\t\t--pitch5-primary-channel:   #695B95;\n\t\t\t\t\t--pitch5-secondary-note:    #8188BE;\n\t\t\t\t\t--pitch5-primary-note:      #848ED8;\n\t\t\t\t\t--pitch6-secondary-channel: #585882;\n\t\t\t\t\t--pitch6-primary-channel:   #5A72DD;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #7D7C2E;\n\t\t\t\t\t--pitch7-primary-channel:   #B0C952;\n\t\t\t\t\t--pitch7-secondary-note:    #7D7C2E;\n\t\t\t\t\t--pitch7-primary-note:      #B0C952;\n\t\t\t\t\t--pitch8-secondary-channel: #7F426A;\n\t\t\t\t\t--pitch8-primary-channel:   #B75297;\n\t\t\t\t\t--pitch8-secondary-note:    #7F426A;\n\t\t\t\t\t--pitch8-primary-note:      #B75297;\n\t\t\t\t\t--pitch9-secondary-channel: #2A6B65;\n\t\t\t\t\t--pitch9-primary-channel:   #3BA590;\n\t\t\t\t\t--pitch9-secondary-note:    #2A6B65;\n\t\t\t\t\t--pitch9-primary-note:      #3BA590;\n\t\t\t\t\t--pitch10-secondary-channel: #713EA0;\n\t\t\t\t\t--pitch10-primary-channel:   #925EC9;\n\t\t\t\t\t--pitch10-secondary-note:    #713EA0;\n\t\t\t\t\t--pitch10-primary-note:      #925EC9;\n\t\t\t\t\t--noise1-secondary-channel: #6C6C8E;\n\t\t\t\t\t--noise1-primary-channel:   #8A7F96;\n\t\t\t\t\t--noise1-secondary-note:    #A1A3B7;\n\t\t\t\t\t--noise1-primary-note:      #DDBADD;\n\t\t\t\t\t--noise2-secondary-channel: #865E40;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #C7B47A;\n\t\t\t\t\t--noise2-primary-note:      #CFC587;\n\t\t\t\t\t--noise3-secondary-channel: #7E7068;\n\t\t\t\t\t--noise3-primary-channel:   #B19998;\n\t\t\t\t\t--noise3-secondary-note:    #BAA6BC;\n\t\t\t\t\t--noise3-primary-note:      #EDDCEC;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel: #156C99;\n\t\t\t\t\t--mod1-primary-channel:   #00CFDF;\n\t\t\t\t\t--mod1-secondary-note:    #0080A8;\n\t\t\t\t\t--mod1-primary-note:      #009FC6;\n\t\t\t\t\t--mod2-secondary-channel: #AD923A;\n\t\t\t\t\t--mod2-primary-channel:   #FFD552;\n\t\t\t\t\t--mod2-secondary-note:    #C49736;\n\t\t\t\t\t--mod2-primary-note:      #EFC742;\n\t\t\t\t\t--mod3-secondary-channel: #7A401E;\n\t\t\t\t\t--mod3-primary-channel:   #C14E30;\n\t\t\t\t\t--mod3-secondary-note:    #89381B;\n\t\t\t\t\t--mod3-primary-note:      #E15427;\n\t\t\t\t\t--mod4-secondary-channel: #0B6030;\n\t\t\t\t\t--mod4-primary-channel:   #00915C;\n\t\t\t\t\t--mod4-secondary-note:    #004337;\n\t\t\t\t\t--mod4-primary-note:      #00915E;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"fogbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #252525;\n\t\t\t\t--editor-background: #252525;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"foxbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #ADD8E6;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"wackybox\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\n.beepboxEditor {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\t\t\n.beepboxEditor .tip {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor .prompt label {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor .layout-option {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor select {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.select2-selection__rendered {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.select2-container--default .select2-results__group {\n    cursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor button {\n\t cursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor canvas {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor input {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n\t\t\t`,\n\t\t\t \"microbox\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000000;\n\t\t\t\t\t--editor-background: #000000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #93B6AD;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\n\t\t\t\t\t--box-selection-fill: #03B068;\n\t\t\t\t\t--loop-accent: #FF0061;\n\t\t\t\t\t--link-accent: #FFC800;\n\t\t\t\t\t--ui-widget-background: #38554E;\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\n\t\t\t\t\t--pitch-background: #281F23;\n\t\t\t\t\t--tonic: #004634;\n\t\t\t\t\t--fifth-note: #463400;\n\t\t\t\t\t--white-piano-key: #edc;\n\t\t\t\t\t--black-piano-key: #456;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\n\t\t\t\t\t--track-editor-bg-noise: #463400;\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\n\t\t\t\t\t--track-editor-bg-mod: #004634;\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\n\t\t\t\t\t--indicator-primary: #333333;\n\t\t\t\t\t--indicator-secondary: #00ffc0;\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\n\t\t\t\t\t--input-box-outline: #69BFC6;\n\t\t\t\t\t--mute-button-normal: #00ffc0;\n\t\t\t\t\t--mute-button-mod: #FFC800;\n\t\t\t\t\t--mod-label-primary: #38554E;\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"paandorasbox\": `\n\t\t\t:root {\n\t\t\t --page-margin: #200000;\n\t\t\t  --editor-background: #200000;\n\t\t\t  --hover-preview: white;\n\t\t\t  --playhead: white;\n\t\t\t  --primary-text: white;\n\t\t\t  --secondary-text: #999;\n\t\t\t  --inverted-text: black;\n\t\t\t  --text-selection: #FF5100;\n\t\t\t  --box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t  --loop-accent: #FF5100;\n\t\t\t  --link-accent: #0F0;\n\t\t\t  --ui-widget-background: #562334;\n\t\t\t  --ui-widget-focus: #6D1B36;\n\t\t\t  --pitch-background: #6D1B36;\n\t\t\t  --tonic: #FF5100;\n\t\t\t  --fifth-note: #00B6FF;\n\t\t\t  --white-piano-key: #bbb;\n\t\t\t  --black-piano-key: #444;\n\t\t\t  --use-color-formula: false;\n\t\t\t  --track-editor-bg-pitch: #380C14;\n\t\t\t  --track-editor-bg-pitch-dim: #200000;\n\t\t\t  --track-editor-bg-noise: #233323;\n\t\t\t  --track-editor-bg-noise-dim: #101A0F;\n\t\t\t  --track-editor-bg-mod: #234C82;\n\t\t\t  --track-editor-bg-mod-dim: #0D1D33;\n\t\t\t  --multiplicative-mod-slider: #456;\n\t\t\t  --overwriting-mod-slider: #654;\n\t\t\t  --indicator-primary: #FF5100;\n\t\t\t  --indicator-secondary: #444;\n\t\t\t  --select2-opt-group: #585858;\n\t\t\t  --input-box-outline: #333;\n\t\t\t  --mute-button-normal: #ffa033;\n\t\t\t  --mute-button-mod: #9a6bff;\n\t\t\t  --pitch1-secondary-channel: #00B200;\n\t\t\t  --pitch1-primary-channel: #0F0;\n\t\t\t  --pitch1-secondary-note: #00B200;\n\t\t\t  --pitch1-primary-note: #0F0;\n\t\t\t  --pitch2-secondary-channel: #00B282;\n\t\t\t  --pitch2-primary-channel: #00FFBF;\n\t\t\t  --pitch2-secondary-note: #00B282;\n\t\t\t  --pitch2-primary-note: #00FFBF;\n\t\t\t  --pitch3-secondary-channel: #00B2B2;\n\t\t\t  --pitch3-primary-channel: #0FF;\n\t\t\t  --pitch3-secondary-note: #00B2B2;\n\t\t\t  --pitch3-primary-note: #0FF;\n\t\t\t  --pitch4-secondary-channel: #2623B2;\n\t\t\t  --pitch4-primary-channel: #3631FF;\n\t\t\t  --pitch4-secondary-note: #2623B2;\n\t\t\t  --pitch4-primary-note: #3631FF;\n\t\t\t  --pitch5-secondary-channel: #7700B2;\n\t\t\t  --pitch5-primary-channel: #A0F;\n\t\t\t  --pitch5-secondary-note: #7700B2;\n\t\t\t  --pitch5-primary-note: #A0F;\n\t\t\t  --pitch6-secondary-channel: #B200B2;\n\t\t\t  --pitch6-primary-channel: #F0F;\n\t\t\t  --pitch6-secondary-note: #B200B2;\n\t\t\t  --pitch6-primary-note: #F0F;\n\t\t\t  --pitch7-secondary-channel: #B20000;\n\t\t\t  --pitch7-primary-channel: #F00;\n\t\t\t  --pitch7-secondary-note: #B20000;\n\t\t\t  --pitch7-primary-note: #F00;\n\t\t\t  --pitch8-secondary-channel: #00B200;\n\t\t\t  --pitch8-primary-channel: #0F0;\n\t\t\t  --pitch8-secondary-note: #00B200;\n\t\t\t  --pitch8-primary-note: #0F0;\n\t\t\t  --pitch9-secondary-channel: #00B282;\n\t\t\t  --pitch9-primary-channel: #0FF;\n\t\t\t  --pitch9-secondary-note: #00B282;\n\t\t\t  --pitch9-primary-note: #0FF;\n\t\t\t  --pitch10-secondary-channel: #0071B2;\n\t\t\t  --pitch10-primary-channel: #009EFF;\n\t\t\t  --pitch10-secondary-note: #0071B2;\n\t\t\t  --pitch10-primary-note: #009EFF;\n\t\t\t  --noise1-secondary-channel: #32B221;\n\t\t\t  --noise1-primary-channel: #44FF2F;\n\t\t\t  --noise1-secondary-note: #32B221;\n\t\t\t  --noise1-primary-note: #44FF2F;\n\t\t\t  --noise2-secondary-channel: #216FB2;\n\t\t\t  --noise2-primary-channel: #2F9DFF;\n\t\t\t  --noise2-secondary-note: #216FB2;\n\t\t\t  --noise2-primary-note: #2F9DFF;\n\t\t\t  --noise3-secondary-channel: #2623B2;\n\t\t\t  --noise3-primary-channel: #3631FF;\n\t\t\t  --noise3-secondary-note: #2623B2;\n\t\t\t  --noise3-primary-note: #3631FF;\n\t\t\t  --noise4-secondary-channel: #7223B2;\n\t\t\t  --noise4-primary-channel: #A531FF;\n\t\t\t  --noise4-secondary-note: #7223B2;\n\t\t\t  --noise4-primary-note: #A531FF;\n\t\t\t  --noise5-secondary-channel: #B2235A;\n\t\t\t  --noise5-primary-channel: #FF317E;\n\t\t\t  --noise5-secondary-note: #B2235A;\n\t\t\t  --noise5-primary-note: #FF317E;\n\t\t\t  --mod1-secondary-channel: #17B274;\n\t\t\t  --mod1-primary-channel: #21FFA8;\n\t\t\t  --mod1-secondary-note: #17B274;\n\t\t\t  --mod1-primary-note: #21FFA8;\n\t\t\t  --mod2-secondary-channel: #1783B2;\n\t\t\t  --mod2-primary-channel: #1FBAFF;\n\t\t\t  --mod2-secondary-note: #1783B2;\n\t\t\t  --mod2-primary-note: #1FBAFF;\n\t\t\t  --mod3-secondary-channel: #553399;\n\t\t\t  --mod3-primary-channel: #8855fc;\n\t\t\t  --mod3-secondary-note: #aa64ff;\n\t\t\t  --mod3-primary-note: #f8ddff;\n\t\t\t  --mod4-secondary-channel: #B20E6B;\n\t\t\t  --mod4-primary-channel: #FF1291;\n\t\t\t  --mod4-secondary-note: #B20E6B;\n\t\t\t  --mod4-primary-note: #FF1291;\n\t\t\t  --mod-label-primary: #994038;\n\t\t\t  --mod-label-secondary-text: #331512;\n\t\t\t  --mod-label-primary-text: #331512;\n\t\t\t  --disabled-note-primary: #994038;\n\t\t\t  --disabled-note-secondary: #331512;\n\t\t\t}\n\t\t\t`,\n\t\t\t \"slushie\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #040814;\n    --editor-background: #040814;\n    --hover-preview: #c6f7ff;\n    --playhead: white;\n    --primary-text: #d3f3ff;\n    --secondary-text: #6f72b5;\n    --inverted-text: black;\n    --text-selection: rgba(119,68,255,0.99);\n    --box-selection-fill: rgb(43 70 171 / 62%);\n    --loop-accent: #573ebb;\n    --link-accent: #98f;\n    --ui-widget-background: #2e2f44;\n    --ui-widget-focus: #2b2c46;\n    --pitch-background: #353654;\n    --tonic: #716fe3;\n    --fifth-note: #76469b;\n    --white-piano-key: #abbce3;\n    --black-piano-key: #2f235e;\n    --use-color-formula: false;\n    --track-editor-bg-pitch: #3a3b5c;\n    --track-editor-bg-pitch-dim: #1f2036;\n    --track-editor-bg-noise: #3c3554;\n    --track-editor-bg-noise-dim: #1e1834;\n    --track-editor-bg-mod: #30335e;\n    --track-editor-bg-mod-dim: #161938;\n    --multiplicative-mod-slider: #e29cff;\n    --overwriting-mod-slider: #495789;\n    --indicator-primary: #e1a6ff;\n    --indicator-secondary: #415187;\n    --select2-opt-group: #22223a;\n    --input-box-outline: #2d2648;\n    --mute-button-normal: #7aceff;\n    --mute-button-mod: #9d6bff;\n    --pitch1-secondary-channel: #5f3ea5;\n    --pitch1-primary-channel: #c1a4ff;\n    --pitch1-secondary-note: #794fd3;\n    --pitch1-primary-note: #d8c6ff;\n    --pitch2-secondary-channel: #4f44bf;\n    --pitch2-primary-channel: #9287ff;\n    --pitch2-secondary-note: #5e51d9;\n    --pitch2-primary-note: #b6afff;\n    --pitch3-secondary-channel: #374eb9;\n    --pitch3-primary-channel: #8097ff;\n    --pitch3-secondary-note: #445cc9;\n    --pitch3-primary-note: #a0b2ff;\n    --pitch4-secondary-channel: #2867cf;\n    --pitch4-primary-channel: #6fa5ff;\n    --pitch4-secondary-note: #2e6ed7;\n    --pitch4-primary-note: #a6c7ff;\n    --pitch5-secondary-channel: #3175a7;\n    --pitch5-primary-channel: #7ec9ff;\n    --pitch5-secondary-note: #367eb3;\n    --pitch5-primary-note: #9fd7ff;\n    --pitch6-secondary-channel: #3993a9;\n    --pitch6-primary-channel: #8ce9ff;\n    --pitch6-secondary-note: #386da3;\n    --pitch6-primary-note: #9eecff;\n    --pitch7-secondary-channel: #369d8a;\n    --pitch7-primary-channel: #8bfce7;\n    --pitch7-secondary-note: #1c93a7;\n    --pitch7-primary-note: #abffef;\n    --pitch8-secondary-channel: #00A170;\n    --pitch8-primary-channel: #50FFC9;\n    --pitch8-secondary-note: #00C78A;\n    --pitch8-primary-note: #83FFD9;\n    --pitch9-secondary-channel: #49b374;\n    --pitch9-primary-channel: #8affa9;\n    --pitch9-secondary-note: #26815f;\n    --pitch9-primary-note: #c8ffde;\n    --pitch10-secondary-channel: #58a747;\n    --pitch10-primary-channel: #bbffaa;\n    --pitch10-secondary-note: #1d7c48;\n    --pitch10-primary-note: #c7ffbc;\n    --noise1-secondary-channel: #42829b;\n    --noise1-primary-channel: #97d3fc;\n    --noise1-secondary-note: #3f53b3;\n    --noise1-primary-note: #97d3fc;\n    --noise2-secondary-channel: #6354bb;\n    --noise2-primary-channel: #9a89ff;\n    --noise2-secondary-note: #5f4dcd;\n    --noise2-primary-note: #c6bcff;\n    --noise3-secondary-channel: #704a95;\n    --noise3-primary-channel: #c285ff;\n    --noise3-secondary-note: #ad5aff;\n    --noise3-primary-note: #d3a6ff;\n    --noise4-secondary-channel: #a53c65;\n    --noise4-primary-channel: #f794bb;\n    --noise4-secondary-note: #cb5080;\n    --noise4-primary-note: #f794bb;\n    --noise5-secondary-channel: #9b2d2d;\n    --noise5-primary-channel: #ff7676;\n    --noise5-secondary-note: #cb4444;\n    --noise5-primary-note: #ff9999;\n    --mod1-secondary-channel: #b7613c;\n    --mod1-primary-channel: #ff9f76;\n    --mod1-secondary-note: #e77e52;\n    --mod1-primary-note: #ffb99b;\n    --mod2-secondary-channel: #916d34;\n    --mod2-primary-channel: #fece80;\n    --mod2-secondary-note: #c58b35;\n    --mod2-primary-note: #ffdda5;\n    --mod3-secondary-channel: #83761a;\n    --mod3-primary-channel: #fdf68c;\n    --mod3-secondary-note: #c18e00;\n    --mod3-primary-note: #fdf68c;\n    --mod4-secondary-channel: #a86436;\n    --mod4-primary-channel: #c8a825;\n    --mod4-secondary-note: #e8ba46;\n    --mod4-primary-note: #c8a825;\n    --mod-label-primary: #37325e;\n    --mod-label-secondary-text: #6e8aa7;\n    --mod-label-primary-text: #c1ffff;\n    --disabled-note-primary: #999;\n    --disabled-note-secondary: #666;\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"midbox\":\n\t\t`:root {\n\t\t\t--page-margin: #010a1e;\n\t\t\t--editor-background: #010a1e;\n\t\t\t--hover-preview: #dfe9fe;\n\t\t\t--playhead: #e7f5f6;\n\t\t\t--primary-text: #f0fdff;\n\t\t\t--secondary-text: #c4c7d7;\n\t\t\t--inverted-text: #0f0623;\n\t\t\t--text-selection: #3f0ab4;\n\t\t\t--box-selection-fill: #32afb3;\n\t\t\t--loop-accent: #1719ff;\n\t\t\t--link-accent: #83a6ed;\n\t\t\t--ui-widget-background: #222856;\n\t\t\t--ui-widget-focus: #21417c;\n\t\t\t--pitch-background: #10264a;\n\t\t\t--tonic: #0797ce;\n\t\t\t--fifth-note: #3e2fb5;\n\t\t\t--white-piano-key: #ebf3f4;\n\t\t\t--black-piano-key: #253353;\n\t\t\t--oscilloscope-line-L: #72dcfc;\n\t\t\t--oscilloscope-line-R: #304eff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #183b65; \n\t\t\t--track-editor-bg-pitch-dim: #1f2c3d;\n\t\t\t--track-editor-bg-noise: #2e196d;\n\t\t\t--track-editor-bg-noise-dim: #212038;\n\t\t\t--track-editor-bg-mod: #066433;\n\t\t\t--track-editor-bg-mod-dim: #152b1f;\n\t\t\t--multiplicative-mod-slider: #1242a4;\n\t\t\t--overwriting-mod-slider: #2218db;\n\t\t\t--indicator-primary: #1698d3;\n\t\t\t--indicator-secondary: #1b478e;\n\t\t\t--select2-opt-group: #312f6d;\n\t\t\t--input-box-outline: #788b96;\n\t\t\t--mute-button-normal: #1d34f2;\n\t\t\t--mute-button-mod: #06bad6;\n\t\t\t--mod-label-primary: #14383f;\n\t\t\t--mod-label-secondary-text: #1d7080;\n\t\t\t--mod-label-primary-text: #b7e9f2;\n\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 0;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 192;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #53527b;\n\t\t\t--disabled-note-secondary:  #1c1b30;\n\t\t}`,\n\t\t\"dogebox2\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000015;\n\t\t\t\t--editor-background: #000015;\n\t\t\t\t--hover-preview: #00ffff;\n\t\t\t\t--playhead: #00ffff;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(255, 127, 80, 0.99);\n\t\t\t\t--box-selection-fill: rgba(255, 255, 255, 0.2);\n\t\t\t\t--loop-accent: #ff00ff;\n\t\t\t\t--link-accent: #00ffff;\n\t\t\t\t--ui-widget-background: #222222;\n\t\t\t\t--ui-widget-focus: #444444;\n\t\t\t\t--pitch-background: #222222;\n\t\t\t\t--tonic: #ab382c;\n\t\t\t\t--fifth-note: #2a76a8;\n\t\t\t\t--white-piano-key: #ffffff;\n\t\t\t\t--black-piano-key: #222222;\n\t\t\t\t--white-piano-key-text: #000000;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #222222;\n\t\t\t\t--track-editor-bg-pitch-dim: #111111;\n\t\t\t\t--track-editor-bg-noise: #222222;\n\t\t\t\t--track-editor-bg-noise-dim: #111111;\n\t\t\t\t--track-editor-bg-mod: #333333;\n\t\t\t\t--track-editor-bg-mod-dim: #111111;\n\t\t\t\t--multiplicative-mod-slider: #666666;\n\t\t\t\t--overwriting-mod-slider: #666666;\n\t\t\t\t--indicator-primary: #ff00ff;\n\t\t\t\t--indicator-secondary: #00ffff;\n\t\t\t\t--select2-opt-group: #333333;\n\t\t\t\t--input-box-outline: #444444;\n\t\t\t\t--mute-button-normal: #ff00ff;\n\t\t\t\t--mute-button-mod: #00ffff;\n\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t--pitch1-secondary-channel: #bd9909;\n\t\t\t\t--pitch1-primary-channel: #fbff8e;\n\t\t\t\t--pitch1-secondary-note: #c79d3a;\n\t\t\t\t--pitch1-primary-note: #fdffb2;\n\t\t\t\t--pitch2-secondary-channel: #b86e0d;\n\t\t\t\t--pitch2-primary-channel: #ffb28e;\n\t\t\t\t--pitch2-secondary-note: #ba643a;\n\t\t\t\t--pitch2-primary-note: #fbac92;\n\t\t\t\t--pitch3-secondary-channel: #a81b08;\n\t\t\t\t--pitch3-primary-channel: #f56c67;\n\t\t\t\t--pitch3-secondary-note: #94352b;\n\t\t\t\t--pitch3-primary-note: #f56147;\n\t\t\t\t--pitch4-secondary-channel: #2a7722;\n\t\t\t\t--pitch4-primary-channel: #6ebf5e;\n\t\t\t\t--pitch4-secondary-note: #1c5c18;\n\t\t\t\t--pitch4-primary-note: #88cf82;\n\t\t\t\t--pitch5-secondary-channel: #8c8b3c;\n\t\t\t\t--pitch5-primary-channel: #c3c168;\n\t\t\t\t--pitch5-secondary-note: #747330;\n\t\t\t\t--pitch5-primary-note: #d4d394;\n\t\t\t\t--pitch6-secondary-channel: #3f9577;\n\t\t\t\t--pitch6-primary-channel: #6fc4b4;\n\t\t\t\t--pitch6-secondary-note: #2c6a5c;\n\t\t\t\t--pitch6-primary-note: #8fdad0;\n\t\t\t\t--pitch7-secondary-channel: #204a80;\n\t\t\t\t--pitch7-primary-channel: #6d9fc2;\n\t\t\t\t--pitch7-secondary-note: #132f5a;\n\t\t\t\t--pitch7-primary-note: #9dbed8;\n\t\t\t\t--pitch8-secondary-channel: #a531ad;\n\t\t\t\t--pitch8-primary-channel: #db68e3;\n\t\t\t\t--pitch8-secondary-note: #8d2f94;\n\t\t\t\t--pitch8-primary-note: #e66cbf;\n\t\t\t\t--pitch9-secondary-channel: #03a1a1;\n\t\t\t\t--pitch9-primary-channel: #52fffb;\n\t\t\t\t--pitch9-secondary-note: #34baba;\n\t\t\t\t--pitch9-primary-note: #60fbfb;\n\t\t\t\t--pitch10-secondary-channel: #4208a1;\n\t\t\t\t--pitch10-primary-channel: #9282ff;\n\t\t\t\t--pitch10-secondary-note: #5735b5;\n\t\t\t\t--pitch10-primary-note: #ab52fb;\n\t\t\t\t--noise1-secondary-channel: #2a5555;\n\t\t\t\t--noise1-primary-channel: #4c7878;\n\t\t\t\t--noise1-secondary-note: #6e9a9a;\n\t\t\t\t--noise1-primary-note: #90bcbc;\n\t\t\t\t--noise2-secondary-channel: #553355;\n\t\t\t\t--noise2-primary-channel: #775577;\n\t\t\t\t--noise2-secondary-note: #997799;\n\t\t\t\t--noise2-primary-note: #bbaa99;\n\t\t\t\t--noise3-secondary-channel: #2a6622;\n\t\t\t\t--noise3-primary-channel: #4c8844;\n\t\t\t\t--noise3-secondary-note: #6eaa66;\n\t\t\t\t--noise3-primary-note: #90cc88;\n\t\t\t\t--noise4-secondary-channel: #664400;\n\t\t\t\t--noise4-primary-channel: #886600;\n\t\t\t\t--noise4-secondary-note: #aa8800;\n\t\t\t\t--noise4-primary-note: #cccc00;\n\t\t\t\t--noise5-secondary-channel: #006633;\n\t\t\t\t--noise5-primary-channel: #008855;\n\t\t\t\t--noise5-secondary-note: #00aa77;\n\t\t\t\t--noise5-primary-note: #00cc99;\n\t\t\t\t--mod1-secondary-channel: #fe00ff;\n\t\t\t\t--mod1-primary-channel: #ff72ff;\n\t\t\t\t--mod1-secondary-note: #ff92ff;\n\t\t\t\t--mod1-primary-note: #ffb2fb;\n\t\t\t\t--mod2-secondary-channel: #00fe00;\n\t\t\t\t--mod2-primary-channel: #8eff8e;\n\t\t\t\t--mod2-secondary-note: #92ff92;\n\t\t\t\t--mod2-primary-note: #b2ffb2;\n\t\t\t\t--mod3-secondary-channel: #feff00;\n\t\t\t\t--mod3-primary-channel: #fffb8e;\n\t\t\t\t--mod3-secondary-note: #fffd92;\n\t\t\t\t--mod3-primary-note: #fffe92;\n\t\t\t\t--mod4-secondary-channel: #00fffe;\n\t\t\t\t--mod4-primary-channel: #82fffb;\n\t\t\t\t--mod4-secondary-note: #92ffff;\n\t\t\t\t--mod4-primary-note: #b2fffb;\n\t\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t\t\t}`,\n\t\t\"azur lane\":`\n\t\t:root {\n\t\t\t--page-margin: #19337e;\n\t\t\t--editor-background: #000333cf;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #9af9ff;\n\t\t\t--secondary-text: #4072dd;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #044b94;\n\t\t\t--loop-accent: #950d0d;\n\t\t\t--link-accent: #0072ff;\n\t\t\t--ui-widget-background: #255bb3;\n\t\t\t--ui-widget-focus: #757575;\n\t\t\t--pitch-background: #20468b73;\n\t\t\t--tonic: #c9c9c9;\n\t\t\t--fifth-note: #731d1d;\n\t\t\t--white-piano-key: #eee;\n\t\t\t--black-piano-key: #000;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #535a73;\n\t\t\t--track-editor-bg-pitch-dim: #353643;\n\t\t\t--track-editor-bg-noise: #770000;\n\t\t\t--track-editor-bg-noise-dim: #430000;\n\t\t\t--track-editor-bg-mod: #5d1d06;\n\t\t\t--track-editor-bg-mod-dim: #270000;\n\t\t\t--multiplicative-mod-slider: #bb0000;\n\t\t\t--overwriting-mod-slider: #ad0000;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #002957;\n\t\t\t--mute-button-normal: #ffffff;\n\t\t\t--mute-button-mod: #4f4f4f;\n\t\t\t--mod-label-primary: #531313;\n\t\t\t--pitch1-secondary-channel: #80858d;\n\t\t  --pitch1-primary-channel: #f2f7ff;\n\t\t  --pitch1-secondary-note: #80858d;\n\t\t  --pitch1-primary-note: #f2f7ff;\n\t\t  --pitch2-secondary-channel: #7392ad;\n\t\t  --pitch2-primary-channel: #a8d6ff;\n\t\t  --pitch2-secondary-note: #7392ad;\n\t\t  --pitch2-primary-note: #a8d6ff;\n\t\t  --pitch3-secondary-channel: #4b7eaa;\n\t\t  --pitch3-primary-channel: #71bdff;\n\t\t  --pitch3-secondary-note: #4b7eaa;\n\t\t  --pitch3-primary-note: #71bdff;\n\t\t  --pitch4-secondary-channel: #3594b1;\n\t\t  --pitch4-primary-channel: #48d4ff;\n\t\t  --pitch4-secondary-note: #3594b1;\n\t\t  --pitch4-primary-note: #48d4ff;\n\t\t  --pitch5-secondary-channel: #1b98b1;\n\t\t  --pitch5-primary-channel: #30f1ff;\n\t\t  --pitch5-secondary-note: #1b98b1;\n\t\t  --pitch5-primary-note: #30f1ff;\n\t\t  --pitch6-secondary-channel: #9e0000;\n\t\t  --pitch6-primary-channel: #db0000;\n\t\t  --pitch6-secondary-note: #9e0000;\n\t\t  --pitch6-primary-note: #db0000;\n\t\t  --pitch7-secondary-channel: #7c1717;\n\t\t  --pitch7-primary-channel: #9e0000;\n\t\t  --pitch7-secondary-note: #7c1717;\n\t\t  --pitch7-primary-note: #9e0000;\n\t\t  --pitch8-secondary-channel: #5c1f1f;\n\t\t  --pitch8-primary-channel: #7c1717;\n\t\t  --pitch8-secondary-note: #5c1f1f;\n\t\t  --pitch8-primary-note: #7c1717;\n\t\t  --pitch9-secondary-channel: #3e2020;\n\t\t  --pitch9-primary-channel: #5c1f1f;\n\t\t  --pitch9-secondary-note: #3e2020;\n\t\t  --pitch9-primary-note: #5c1f1f;\n\t\t  --pitch10-secondary-channel: #2f1c1c;\n\t\t  --pitch10-primary-channel: #5c1f1f;\n\t\t  --pitch10-secondary-note: #2f1c1c;\n\t\t  --pitch10-primary-note: #5c1f1f;\n\t\t  --noise1-secondary-channel: #828282;\n\t\t  --noise1-primary-channel: #cacaca;\n\t\t  --noise1-secondary-note: #828282;\n\t\t  --noise1-primary-note: #cacaca;\n\t\t  --noise2-secondary-channel: #2f8baf;\n\t\t  --noise2-primary-channel: #3de2ff;\n\t\t  --noise2-secondary-note: #2f8baf;\n\t\t  --noise2-primary-note: #3de2ff;\n\t\t  --noise3-secondary-channel: #6f50b1;\n\t\t  --noise3-primary-channel: #8567ff;\n\t\t  --noise3-secondary-note: #6f50b1;\n\t\t  --noise3-primary-note: #8567ff;\n\t\t  --noise4-secondary-channel: #d38900;\n\t\t  --noise4-primary-channel: #ffb500;\n\t\t  --noise4-secondary-note: #d38900;\n\t\t  --noise4-primary-note: #ffb500;\n\t\t  --noise5-secondary-channel: #af0008;\n\t\t  --noise5-primary-channel: #00d70e;\n\t\t  --noise5-secondary-note: #29b700;\n\t\t  --noise5-primary-note: #00f7ff;\n\t\t  --mod1-secondary-channel: #9d5bb9;\n\t\t  --mod1-primary-channel: #e16bff;\n\t\t  --mod1-secondary-note: #3a3ea4;\n\t\t  --mod1-primary-note: #fff;\n\t\t  --mod2-secondary-channel: #3a8d58;\n\t\t  --mod2-primary-channel: #42ffff;\n\t\t  --mod2-secondary-note: #3a8d58;\n\t\t  --mod2-primary-note: #42ffff;\n\t\t  --mod3-secondary-channel: #af6c00;\n\t\t  --mod3-primary-channel: #fa0;\n\t\t  --mod3-secondary-note: #0001a2;\n\t\t  --mod3-primary-note: #970000;\n\t\t  --mod4-secondary-channel: #d3d3d3;\n\t\t  --mod4-primary-channel: #759bff;\n\t\t  --mod4-secondary-note: #a00000;\n\t\t  --mod4-primary-note: #fff;\n\t\t  --disabled-note-primary: #3a3a3a;\n\t\t  --disabled-note-secondary: #000;\n\t\t\t}\n\t\t/* replaces hotdog (in a hacky way) with an image of the girls using the same scratch sprites from the 404 page*/\n\t\t#Hotdog {\n\t\tdisplay: none;\n\t\t}\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\n\t\tdisplay: block;\n\t\tcontent: url(\"UltraboxAzurLaneThemeStarterSquad.png\");\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets cursor */\n\t\t* {\n\t\tcursor: url(\"UltraBoxAzurLaneThemeMouse.png\"), auto !important;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"UltraBoxAzurLaneThemeMemoryTaskBackground.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\tbackground: #0400257d !important;\n\t\t}\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"UltraBoxALThemeLogo.png\");\n\t\t}\n\t}`,\n\t\t\t  \"custom\": `${localStorage.getItem(\"customColors\") || `:root {\n\t\t\t\t--page-margin: #040410;\n\t\t\t\t--editor-background: #040410;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t--pitch-background: #393e4f99;\n\t\t\t\t--tonic: #725491;\n\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t--use-color-formula: true;\n\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t--input-box-outline: #222;\n\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t}`}`,\n    };\n\n    public static readonly pageMargin: string = \"var(--page-margin)\";\n    public static readonly editorBackground: string = \"var(--editor-background)\";\n    public static readonly hoverPreview: string = \"var(--hover-preview)\";\n    public static readonly playhead: string = \"var(--playhead)\";\n    public static readonly primaryText: string = \"var(--primary-text)\";\n    public static readonly secondaryText: string = \"var(--secondary-text)\";\n    public static readonly invertedText: string = \"var(--inverted-text)\";\n    public static readonly textSelection: string = \"var(--text-selection)\";\n    public static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\n    public static readonly loopAccent: string = \"var(--loop-accent)\";\n    public static readonly linkAccent: string = \"var(--link-accent)\";\n    public static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\n    public static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\n    public static readonly pitchBackground: string = \"var(--pitch-background)\";\n    public static readonly tonic: string = \"var(--tonic)\";\n    public static readonly fifthNote: string = \"var(--fifth-note)\";\n    public static readonly whitePianoKey: string = \"var(--white-piano-key)\";\n    public static readonly blackPianoKey: string = \"var(--black-piano-key)\";\n    public static readonly whitePianoKeyText: string = \"var(--white-piano-key-text)\";\n    public static readonly blackPianoKeyText: string = \"var(--black-piano-key-text)\";\n\tpublic static readonly oscilloscopeLineL: string = \"var(--oscilloscope-line-L)\";\n\tpublic static readonly oscilloscopeLineR: string = \"var(--oscilloscope-line-R)\";\n\tpublic static readonly modTitle: string = \"var(--mod-title)\";\n    public static readonly useColorFormula: string = \"var(--use-color-formula)\";\n    public static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\n    public static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\n    public static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\n    public static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\n    public static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\n    public static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\n    public static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\n    public static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\n    public static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\n    public static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\n    public static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\n    public static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\n    public static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\n    public static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\n    public static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\n    public static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\n    public static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\n    public static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\n    public static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\n    public static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\n    public static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\n    public static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\n    public static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\n    public static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\n    public static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\n    public static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\n    public static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\n    public static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\n    public static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\n    public static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\n    public static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\n    public static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\n    public static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\n    public static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\n    public static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\n    public static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\n    public static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\n    public static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\n    public static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\n    public static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\n    public static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\n    public static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\n    public static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\n    public static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\n    public static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\n    public static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\n    public static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\n    public static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\n    public static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\n    public static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\n    public static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\n    public static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\n    public static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\n    public static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\n    public static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\n    public static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\n    public static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\n    public static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\n    public static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\n    public static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\n    public static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\n    public static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\n    public static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\n    public static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\n    public static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\n    public static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\n    public static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\n    public static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\n    public static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\n    public static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\n    public static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\n    public static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\n    public static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\n    public static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\n    public static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\n    public static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\n    public static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\n    public static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\n    public static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\n    public static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\n    public static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\n    public static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\n    public static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\n    public static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\n    public static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\n    public static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\n    public static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\n    public static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\n    public static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\n    public static readonly disabledNotePrimary: string = \"var(--disabled-note-primary)\";\n    public static readonly disabledNoteSecondary: string = \"var(--disabled-note-secondary)\";\n\n    public static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"pitch1\", // cyan\n            secondaryChannel: \"var(--pitch1-secondary-channel)\",\n            primaryChannel: \"var(--pitch1-primary-channel)\",\n            secondaryNote: \"var(--pitch1-secondary-note)\",\n            primaryNote: \"var(--pitch1-primary-note)\",\n        }, {\n            name: \"pitch2\", // yellow\n            secondaryChannel: \"var(--pitch2-secondary-channel)\",\n            primaryChannel: \"var(--pitch2-primary-channel)\",\n            secondaryNote: \"var(--pitch2-secondary-note)\",\n            primaryNote: \"var(--pitch2-primary-note)\",\n        }, {\n            name: \"pitch3\", // orange\n            secondaryChannel: \"var(--pitch3-secondary-channel)\",\n            primaryChannel: \"var(--pitch3-primary-channel)\",\n            secondaryNote: \"var(--pitch3-secondary-note)\",\n            primaryNote: \"var(--pitch3-primary-note)\",\n        }, {\n            name: \"pitch4\", // green\n            secondaryChannel: \"var(--pitch4-secondary-channel)\",\n            primaryChannel: \"var(--pitch4-primary-channel)\",\n            secondaryNote: \"var(--pitch4-secondary-note)\",\n            primaryNote: \"var(--pitch4-primary-note)\",\n        }, {\n            name: \"pitch5\", // magenta\n            secondaryChannel: \"var(--pitch5-secondary-channel)\",\n            primaryChannel: \"var(--pitch5-primary-channel)\",\n            secondaryNote: \"var(--pitch5-secondary-note)\",\n            primaryNote: \"var(--pitch5-primary-note)\",\n        }, {\n            name: \"pitch6\", // blue\n            secondaryChannel: \"var(--pitch6-secondary-channel)\",\n            primaryChannel: \"var(--pitch6-primary-channel)\",\n            secondaryNote: \"var(--pitch6-secondary-note)\",\n            primaryNote: \"var(--pitch6-primary-note)\",\n        }, {\n            name: \"pitch7\", // olive\n            secondaryChannel: \"var(--pitch7-secondary-channel)\",\n            primaryChannel: \"var(--pitch7-primary-channel)\",\n            secondaryNote: \"var(--pitch7-secondary-note)\",\n            primaryNote: \"var(--pitch7-primary-note)\",\n        }, {\n            name: \"pitch8\", // red\n            secondaryChannel: \"var(--pitch8-secondary-channel)\",\n            primaryChannel: \"var(--pitch8-primary-channel)\",\n            secondaryNote: \"var(--pitch8-secondary-note)\",\n            primaryNote: \"var(--pitch8-primary-note)\",\n        }, {\n            name: \"pitch9\", // teal\n            secondaryChannel: \"var(--pitch9-secondary-channel)\",\n            primaryChannel: \"var(--pitch9-primary-channel)\",\n            secondaryNote: \"var(--pitch9-secondary-note)\",\n            primaryNote: \"var(--pitch9-primary-note)\",\n        }, {\n            name: \"pitch10\", // purple\n            secondaryChannel: \"var(--pitch10-secondary-channel)\",\n            primaryChannel: \"var(--pitch10-primary-channel)\",\n            secondaryNote: \"var(--pitch10-secondary-note)\",\n            primaryNote: \"var(--pitch10-primary-note)\",\n        },\n    ]);\n    public static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"noise1\", // gray\n            secondaryChannel: \"var(--noise1-secondary-channel)\",\n            primaryChannel: \"var(--noise1-primary-channel)\",\n            secondaryNote: \"var(--noise1-secondary-note)\",\n            primaryNote: \"var(--noise1-primary-note)\",\n        }, {\n            name: \"noise2\", // brown\n            secondaryChannel: \"var(--noise2-secondary-channel)\",\n            primaryChannel: \"var(--noise2-primary-channel)\",\n            secondaryNote: \"var(--noise2-secondary-note)\",\n            primaryNote: \"var(--noise2-primary-note)\",\n        }, {\n            name: \"noise3\", // azure\n            secondaryChannel: \"var(--noise3-secondary-channel)\",\n            primaryChannel: \"var(--noise3-primary-channel)\",\n            secondaryNote: \"var(--noise3-secondary-note)\",\n            primaryNote: \"var(--noise3-primary-note)\",\n        }, {\n            name: \"noise4\", // purple\n            secondaryChannel: \"var(--noise4-secondary-channel)\",\n            primaryChannel: \"var(--noise4-primary-channel)\",\n            secondaryNote: \"var(--noise4-secondary-note)\",\n            primaryNote: \"var(--noise4-primary-note)\",\n        }, {\n            name: \"noise5\", // sage\n            secondaryChannel: \"var(--noise5-secondary-channel)\",\n            primaryChannel: \"var(--noise5-primary-channel)\",\n            secondaryNote: \"var(--noise5-secondary-note)\",\n            primaryNote: \"var(--noise5-primary-note)\",\n        },\n    ]);\n    public static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"mod1\",\n            secondaryChannel: \"var(--mod1-secondary-channel)\",\n            primaryChannel: \"var(--mod1-primary-channel)\",\n            secondaryNote: \"var(--mod1-secondary-note)\",\n            primaryNote: \"var(--mod1-primary-note)\",\n        }, {\n            name: \"mod2\",\n            secondaryChannel: \"var(--mod2-secondary-channel)\",\n            primaryChannel: \"var(--mod2-primary-channel)\",\n            secondaryNote: \"var(--mod2-secondary-note)\",\n            primaryNote: \"var(--mod2-primary-note)\",\n        }, {\n            name: \"mod3\",\n            secondaryChannel: \"var(--mod3-secondary-channel)\",\n            primaryChannel: \"var(--mod3-primary-channel)\",\n            secondaryNote: \"var(--mod3-secondary-note)\",\n            primaryNote: \"var(--mod3-primary-note)\",\n        }, {\n            name: \"mod4\",\n            secondaryChannel: \"var(--mod4-secondary-channel)\",\n            primaryChannel: \"var(--mod4-primary-channel)\",\n            secondaryNote: \"var(--mod4-secondary-note)\",\n            primaryNote: \"var(--mod4-primary-note)\",\n        },\n    ]);\n\n    public static resetColors() {\n        this.colorLookup.clear();\n    }\n\n\tpublic static getArbitaryChannelColor(type: string, channel: number): ChannelColors {\n\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\n            let base: ChannelColors;\n            switch (type) {\n                case (\"noise\"): {\n                    base = ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.noiseChannels[channel % ColorConfig.noiseChannels.length] \n\t\t\t\t\t: ColorConfig.noiseChannels[channel % (Number(ColorConfig.getComputed(\"--noise-channel-limit\")) % ColorConfig.noiseChannels.length)];\n                    break;\n                }\n                case (\"mod\"): {\n                    base = ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.modChannels[channel % ColorConfig.modChannels.length] \n\t\t\t\t\t: ColorConfig.modChannels[channel % (Number(ColorConfig.getComputed(\"--mod-channel-limit\")) % ColorConfig.modChannels.length)];\n                    break;\n                }\n                case (\"pitch\"):\n                default: {\n                    base = ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \n\t\t\t\t\t: ColorConfig.pitchChannels[channel % (Number(ColorConfig.getComputed(\"--pitch-channel-limit\")) % ColorConfig.pitchChannels.length)];\n                    break;\n                }\n            }\n            var regex = /\\(([^)]+)\\)/;\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        switch (type) {\n            case (\"noise\"): {\n                const noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n                const noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n                const noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n                const noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n                const noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n                const noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n                const noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n                const noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n                const noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n                const noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n                const noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n                const noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n                const noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n                const noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n                const noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n                const noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n                const noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n                const noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n                const noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n                const noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n                const noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n                const noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n                const noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n                const noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + ((channel * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\n                    + (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + ((channel * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\n                    + (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + ((channel * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\n                    + (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + ((channel * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\n                    + (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            } case (\"mod\"): {\n                // Mod formula\n                const modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n                const modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n                const modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n                const modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n                const modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n                const modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n                const modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n                const modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n                const modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n                const modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n                const modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n                const modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n                const modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n                const modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n                const modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n                const modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n                const modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n                const modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n                const modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n                const modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n                const modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n                const modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n                const modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n                const modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + ((channel * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\n                    + (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + ((channel * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\n                    + (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + ((channel * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\n                    + (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + ((channel * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\n                    + (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            }\n            case (\"pitch\"):\n            default: {\n                const pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n                const pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n                const pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n                const pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n                const pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n                const pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n                const pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n                const pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n                const pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n                const pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n                const pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n                const pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n                const pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n                const pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n                const pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n                const pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n                const pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n                const pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n                const pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n                const pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n                const pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n                const pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n                const pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n                const pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            }\n        }\n    }\n\n    // Same as below, but won't return var colors\n    public static getComputedChannelColor(song: Song, channel: number): ChannelColors {\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\n            let base: ChannelColors = ColorConfig.getChannelColor(song, channel);\n            // Trim away \"var(...)\"\n            var regex = /\\(([^)]+)\\)/;\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        else {\n            return ColorConfig.getChannelColor(song, channel);\n        }\n    };\n\n    public static getChannelColor(song: Song, channel: number): ChannelColors {\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\n            // Set colors, not defined by formula\n            if (channel < song.pitchChannelCount) {\n\t\t\t\treturn ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \n\t\t\t\t: ColorConfig.pitchChannels[channel % (Number(ColorConfig.getComputed(\"--pitch-channel-limit\")) % ColorConfig.pitchChannels.length)];\n            } else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                return ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length] \n\t\t\t\t: ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % (Number(ColorConfig.getComputed(\"--noise-channel-limit\")) % ColorConfig.noiseChannels.length)];\n            } else {\n                return ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length] \n\t\t\t\t: ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % (Number(ColorConfig.getComputed(\"--mod-channel-limit\")) % ColorConfig.modChannels.length)];\n            }\n        }\n        else {\n            // Determine if color is cached\n            if (ColorConfig.colorLookup.has(channel)) {\n                return ColorConfig.colorLookup.get(channel) as ChannelColors;\n            }\n            else {\n                // Formulaic color definition\n                if (channel < song.pitchChannelCount) {\n                    // Pitch formula\n                    const pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n                    const pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n                    const pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n                    const pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n                    const pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n                    const pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n                    const pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n                    const pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n                    const pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n                    const pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n                    const pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n                    const pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n                    const pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n                    const pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n                    const pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n                    const pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n                    const pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n                    const pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n                    const pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n                    const pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n                    const pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n                    const pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n                    const pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n                    const pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n\n                    let newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                        + (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                        + (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                    let newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                        + (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                        + (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                    let newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                        + (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                        + (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n                    let newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                        + (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                        + (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n\n                }\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                    // Noise formula\n                    const noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n                    const noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n                    const noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n                    const noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n                    const noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n                    const noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n                    const noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n                    const noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n                    const noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n                    const noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n                    const noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n                    const noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n                    const noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n                    const noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n                    const noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n                    const noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n                    const noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n                    const noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n                    const noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n                    const noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n                    const noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n                    const noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n                    const noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n                    const noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n\n                    let newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                        + (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\n                        + (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\n                    let newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                        + (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\n                        + (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\n                    let newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                        + (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\n                        + (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\n                    let newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                        + (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\n                        + (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n                else {\n                    // Mod formula\n                    const modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n                    const modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n                    const modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n                    const modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n                    const modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n                    const modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n                    const modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n                    const modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n                    const modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n                    const modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n                    const modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n                    const modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n                    const modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n                    const modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n                    const modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n                    const modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n                    const modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n                    const modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n                    const modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n                    const modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n                    const modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n                    const modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n                    const modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n                    const modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n\n                    let newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                        + (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\n                        + (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\n                    let newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                        + (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\n                        + (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\n                    let newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                        + (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\n                        + (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\n                    let newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                        + (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\n                        + (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n            }\n        }\n    }\n\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\n\n    public static setTheme(name: string): void {\n\t\tlet theme: string = this.themes[name];\n\t\tif (theme == undefined) theme = this.themes[\"dark classic\"];\n\t\tthis._styleElement.textContent = theme;\n\n        const themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\n        if (themeColor != null) {\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\n        }\n\n        this.resetColors();\n    }\n\n    public static getComputed(name: string): string {\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\n    }\n}\n\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { getLocalStorageItem } from \"../synth/SynthConfig\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\n\n// Determine if the user's browser/OS adds scrollbars that occupy space.\n// See: https://www.filamentgroup.com/lab/scrollbars/\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\n\tHTML.div({ style: \"width:100%;height:40px\" }),\n));\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\n}\ndocument.body.removeChild(scrollBarTest);\n\n\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\n\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\n:root {\n\t--button-size: 26px;\n\t--settings-area-width: 192px;\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -5 -8 L -5 8 L 8 0 z\" fill=\"gray\"/></svg>');\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-5\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/><rect x=\"3\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/></svg>');\n\t--record-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"gray\"/></svg>');\n\t--stop-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"12\" height=\"12\" fill=\"gray\"/></svg>');\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\n\t\t\t</g> \\\n\t\t</svg>');\n\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\" fill=\"currentColor\"></path></svg>');\n\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\" stroke=\"currentColor\" fill=\"none\"></path><path d=\"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\" fill=\"currentColor\"></path></svg>');\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\"/></svg>');\n\t--add-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\"/></svg>');\n\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\n\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\n\t\t\t<defs> \\\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t</radialGradient> \\\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<radialGradient id=\"membrane\"> \\\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\n\t\t\t\t</radialGradient> \\\n\t\t\t</defs> \\\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\n\t\t</svg>');\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\n\t\t\t<defs> \\\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t</defs> \\\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\n\t\t</svg>');\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\n\t\t\t<defs> \\\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t</defs> \\\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\n\t\t</svg>');\n\t\t--track-font: \"sans-serif\"\n}\n\n\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\n\tscrollbar-width: thin;\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n}\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\n\twidth: 12px;\n}\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\n\tbackground: ${ColorConfig.editorBackground};\n}\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\tborder: 3px solid ${ColorConfig.editorBackground};\n}\n\n@-moz-document url-prefix() {\n\t.muteButtonText {\n\t\ttransform: translate(3px, 1px) !important;\n\t}\n}\n\n.beepboxEditor {\n\tdisplay: grid;\n    grid-template-columns: minmax(0, 1fr) max-content;\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\n\tgrid-column-gap: 6px;\n\tgrid-row-gap: 6px;\n\tposition: relative;\n\ttouch-action: manipulation;\n\tcursor: default;\n\tfont-size: 13px;\n\toverflow: hidden;\n\tcolor: ${ColorConfig.primaryText};\n\tbackground: ${ColorConfig.editorBackground};\n    opacity: 0;\n    -webkit-transition: opacity 0.2s ease-in;\n    -moz-transition: opacity 0.2s ease-in;\n    -o-transition: opacity 0.2s ease-in;\n    -ms-transition: opacity 0.2s ease-in;\n    transition: opacity 0.2s ease-in;\n    transition-delay: 0s;\n}\n\n.beepboxEditor .operatorRow {\n\tmargin: 2px 0;\n\theight: 2em;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n}\n\n.beepboxEditor .operatorRow > * {\n\tflex-grow: 1;\n\tflex-shrink: 1;\n}\n\n.pattern-area {\n     opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0s;\n}\n\n.settings-area {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.15s;\n}\n\n.editor-song-settings {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.35s;\n}\n\n.instrument-settings-area {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.45s;\n}\n\n.trackAndMuteContainer {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.4s;\n}\n\n.barScrollBar {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.5s;\n}\n\n\n\n.load {\n    opacity: 1;\n}\n\n.beepboxEditor .noSelection {\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n}\n\n.beepboxEditor div {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.beepboxEditor .pattern-area {\n\tgrid-area: pattern-area;\n\theight: 481px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tposition: relative;\n}\n\n.beepboxEditor .track-area {\n\tgrid-area: track-area;\n\tbackground-image: url(${getLocalStorageItem(\"customTheme2\", \"\")});\n}\n\n.beepboxEditor .loopEditor {\n\theight: 20px;\n\tposition: sticky;\n\tbottom: 0;\n\tpadding: 5px 0;\n\tbackground-color: ${ColorConfig.editorBackground};\n}\n\n.beepboxEditor .settings-area {\n\tgrid-area: settings-area;\n\tdisplay: grid;\n    grid-template-columns: auto;\n    grid-template-rows: min-content min-content min-content min-content min-content;\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\n\tgrid-column-gap: 6px;\n}\n\n.beepboxEditor .version-area{ grid-area: version-area; }\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\n.beepboxEditor .menu-area{ grid-area: menu-area; }\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\n\n.beepboxEditor .tip {\n\tcursor: help;\n\tcolor: ${ColorConfig.secondaryText};\n\ttext-decoration: none;\n}\n\n.beepboxEditor .tip:hover {\n\tcolor: ${ColorConfig.linkAccent};\n\ttext-decoration: underline;\n}\n.beepboxEditor .tip:active {\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor .volume-speaker {\n\tflex-shrink: 0;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: ${ColorConfig.secondaryText};\n\t-webkit-mask-image: var(--volume-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--volume-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .drum-button {\n\tflex: 1;\n\tbackground-color: transparent;\n\tbackground-image: var(--drum-symbol);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n}\n\n.beepboxEditor .modulator-button {\n\tflex: 1;\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n}\n.beepboxEditor .modulator-button::before {\n\tcontent: \"\";\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tpointer-events: none;\n\tbackground-image: var(--mod-key-symbol);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: 100% 102%;\n}\n\n.beepboxEditor .piano-button {\n\tflex: 1;\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n}\n.beepboxEditor .piano-button::before {\n\tcontent: \"\";\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tpointer-events: none;\n\tbackground-image: var(--piano-key-symbol);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: 100% 115.38%;\n}\n.beepboxEditor .piano-button.disabled::after {\n\tcontent: \"\";\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\twidth: 70%;\n\theight: 100%;\n\tpointer-events: none;\n\tbackground: ${ColorConfig.editorBackground};\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .piano-button.pressed, .beepboxEditor .drum-button.pressed {\n\tfilter: brightness(0.5);\n}\n\n.beepboxEditor .customize-instrument {\n\tmargin: 2px 0;\n}\n.beepboxEditor .customize-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--customize-dial-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--customize-dial-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .instrumentCopyPasteRow {\n\tgap: 2px;\n}\n\n.beepboxEditor .copy-instrument {\n\tmargin: 2px 0;\n\tflex-grow: 1;\n}\n.beepboxEditor .copy-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--instrument-copy-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--instrument-copy-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .paste-instrument {\n\tmargin: 2px 0;\n\tflex-grow: 1;\n}\n.beepboxEditor .paste-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--instrument-paste-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--instrument-paste-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .envelopeEditor {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .envelope-row {\n\tdisplay: flex;\n\tmargin: 2px 0;\n\tgap: 2px;\n}\n\n.beepboxEditor .add-envelope {\n\twidth: var(--button-size);\n}\n.beepboxEditor .add-envelope::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--add-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--add-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .add-envelope:disabled {\n\tvisibility: hidden;\n}\n\n.beepboxEditor .effects-menu {\n\twidth: var(--button-size);\n\tposition: relative;\n}\n.beepboxEditor .effects-menu::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--menu-down-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--menu-down-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .zoomInButton, .beepboxEditor .zoomOutButton {\n\twidth: var(--button-size);\n\tposition: absolute;\n\tright: 10px;\n}\n.beepboxEditor .zoomInButton {\n\ttop: 10px;\n}\n.beepboxEditor .zoomOutButton {\n\ttop: 50px;\n}\n.beepboxEditor .zoomInButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--zoom-in-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--zoom-in-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .zoomOutButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--zoom-out-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--zoom-out-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .delete-envelope {\n\twidth: var(--button-size);\n\tflex-shrink: 0;\n\tflex-grow: 0;\n}\n.beepboxEditor .delete-envelope::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .delete-envelope:disabled {\n\tvisibility: hidden;\n}\n\n.beepboxEditor .menu.file::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--file-page-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--file-page-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .menu.edit::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--edit-pencil-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--edit-pencil-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .menu.preferences::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--preferences-gear-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--preferences-gear-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .mute-button {\n\tbackground: transparent;\n\tborder: none;\n  padding-right: 0px;\n  padding-left: 0px;\n  box-shadow: none;\n}\n\n.beepboxEditor .mute-button:focus {\n  background: transparent;\n\tborder: none;\n}\n\n.beepboxEditor .mute-button::before {\n\tcontent: \"\";\n\tpointer-events: none;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: inline-block;\n  background: var(--mute-button-normal);\n\t-webkit-mask-image: var(--unmuted-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\t-webkit-mask-size: cover;\n  mask-repeat: no-repeat;\n\tmask-position: center;\n\tmask-size: cover;\n  mask-image: var(--unmuted-symbol);\n}\n\n.beepboxEditor .mute-button.muted::before {\n  background: var(--ui-widget-background);\n\t-webkit-mask-image: var(--muted-symbol);\n  mask-image: var(--muted-symbol);\n}\n\n.beepboxEditor .mute-button.modMute.muted::before {\n  background: var(--ui-widget-background);\n\t-webkit-mask-image: var(--muted-symbol);\n  mask-image: var(--muted-symbol);\n}\n\n.beepboxEditor .mute-button.modMute::before {\n  background: var(--mute-button-mod);\n}\n\n\n.beepboxEditor .promptContainer {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tz-index: 100;\n}\n\n.beepboxEditor .promptContainer::before {\n\tcontent: \"\";\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: ${ColorConfig.editorBackground};\n\topacity: 0.5;\n\tdisplay: flex;\n}\n\n.beepboxEditor .prompt {\n\tmargin: auto;\n\ttext-align: center;\n\tbackground: ${ColorConfig.editorBackground};\n\tborder-radius: 15px;\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\n\tcolor: ${ColorConfig.primaryText};\n\tpadding: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\n}\n\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\n\tmargin-top: 1.5em;\n}\n\n.beepboxEditor .prompt h2 {\n\tfont-size: 2em;\n\tmargin: 0 16px;\n\tfont-weight: normal;\n}\n\n.beepboxEditor .prompt p {\n\ttext-align: left;\n\tmargin: 1em 0;\n}\n\n.beepboxEditor .prompt label {\n\tcursor: pointer;\n}\n\n.beepboxEditor .prompt.recordingSetupPrompt p {\n\tmargin-top: 0.75em;\n\tmargin-bottom: 0;\n}\n\n.beepboxEditor .prompt.recordingSetupPrompt > label:not(:first-child):not(.cancelButton) {\n\tmargin: 2px 0;\n}\n\n.beepboxEditor .layout-option {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tcursor: pointer;\n\tcolor: ${ColorConfig.secondaryText};\n}\n\n.beepboxEditor .layout-option input {\n\tdisplay: none;\n}\n\n.beepboxEditor .layout-option input:checked ~ * {\n\tcolor: ${ColorConfig.primaryText};\n}\n.beepboxEditor select.invalidSetting {\n\tborder: solid 1px red;\n}\n.beepboxEditor .selectContainer {\n\tposition: relative;\n}\n.beepboxEditor .selectContainer:not(.menu)::after {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tright: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: 14px;\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--select-arrows-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--select-arrows-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor .selectContainer.menu::after {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tright: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--menu-down-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--menu-down-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor select {\n\tmargin: 0;\n\tpadding: 0 4px;\n\tdisplay: block;\n\theight: var(--button-size);\n\tborder: none;\n\tborder-radius: 5px;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tcolor: inherit;\n\tfont-size: inherit;\n\tcursor: pointer;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\n\t-webkit-appearance:none;\n\t-moz-appearance: none;\n\tappearance: none;\n}\n.beepboxEditor select option:disabled {\n\tcolor: ${ColorConfig.linkAccent};\n\tfont-weight: bold;\n}\n\n.select2-container .select2-selection--single {\n  height: auto;\n}\n\n.select2-container {\n  width: -moz-available !important;\n  width: -webkit-fill-available !important;\n}\n@media (min-width: 711px) {\n\t.select2 {\n\t  width: calc(var(--settings-area-width) * 0.625) !important;\n\t}\n}\n\n.select2-container--default .select2-selection--single{\n  border-radius: 0px;\n  border: 0px;\n  background-color: transparent;\n  outline: none;\n}\n\n.select2-selection__rendered:not(.menu)::before {\n\tcontent: \"\";\n\tposition: absolute;\n\tright: 0.3em;\n\ttop: 0.4em;\n\tborder-bottom: 0.4em solid currentColor;\n\tborder-left: 0.3em solid transparent;\n\tborder-right: 0.3em solid transparent;\n\tpointer-events: none;\n}\n.select2-selection__rendered:not(.menu)::after {\n\tcontent: \"\";\n\tposition: absolute;\n\tright: 0.3em;\n\tbottom: 0.4em;\n\tborder-top: 0.4em solid currentColor;\n\tborder-left: 0.3em solid transparent;\n\tborder-right: 0.3em solid transparent;\n\tpointer-events: none;\n}\n.select2-selection__rendered {\n\tmargin: 0;\n\tpadding: 0 0.3em;\n\tdisplay: block;\n\theight: 2em;\n\tborder: none;\n\tborder-radius: 0.4em;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tcolor: inherit !important;\n\tfont-size: inherit;\n\tcursor: pointer;\n\tfont-family: inherit;\n\t-webkit-appearance:none;\n\t-moz-appearance: none;\n\tappearance: none;\n}\n.select2-selection__arrow b{\n    display:none !important;\n}\n\n.select2-selection__rendered--focus {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n\toutline: none;\n}\n.select2-search__field {\n    background: ${ColorConfig.uiWidgetBackground};\n    color: inherit !important;\n    font-size: small;\n    font-family: inherit;\n    border: 0px !important;\n    padding: 1px !important;\n}\n.select2-dropdown {\n    box-sizing: border-box;\n    display: inline-block;\n    margin: 0;\n    font-size: small;\n    position: relative;\n    vertical-align: middle;\n    background-color: ${ColorConfig.uiWidgetFocus};\n}\n\n.select2-container--default .select2-results>.select2-results__options {\n    max-height: 430px;\n    overflow-x: hidden;\n}\n.select2-container--default .select2-results__group {\n    cursor: default;\n    display: block;\n    padding: 1px;\n    background: ${ColorConfig.select2OptGroup};\n}\n.select2-results__option {\n    padding: 2px;\n    user-select: none;\n    -webkit-user-select: none;\n}\n.select2-container--default .select2-results__option .select2-results__option {\n    padding-left: 0.1em;\n}\n.select2-container--default .select2-results__option[aria-selected=true] {\n  background-color: transparent !important;\n}\n\n.select2-results__option--highlighted[aria-selected] {\n\tcolor: white !important;\n}\n\n.beepboxEditor .menu select {\n\tpadding: 0 var(--button-size);\n}\n.beepboxEditor select:focus {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n\toutline: none;\n}\n.beepboxEditor .menu select {\n\ttext-align: center;\n\ttext-align-last: center;\n}\n.beepboxEditor .settings-area select {\n       width: 100%;\n}\n\n/* This makes it look better in firefox on my computer... What about others?\n@-moz-document url-prefix() {\n\t.beepboxEditor select { padding: 0 2px; }\n}\n*/\n.beepboxEditor button {\n\tmargin: 0;\n\tposition: relative;\n\theight: var(--button-size);\n\tborder: none;\n\tborder-radius: 5px;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tcolor: inherit;\n\tfont-size: inherit;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tcursor: pointer;\n}\n.beepboxEditor button:focus {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n\toutline: none;\n}\n\n.beepboxEditor button.cancelButton {\n\tfloat: right;\n\twidth: var(--button-size);\n\tposition: absolute;\n\ttop: 8px;\n\tright: 8px;\n}\n\n.beepboxEditor .playback-bar-controls {\n\tdisplay: grid;\n\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);\n\tgrid-template-rows: min-content;\n\tgrid-column-gap: 4px;\n}\n\n.beepboxEditor button.playButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--play-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--play-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.pauseButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--pause-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--pause-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.recordButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--record-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--record-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.stopButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--stop-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--stop-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.prevBarButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--prev-bar-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--prev-bar-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.nextBarButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--next-bar-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--next-bar-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton, .beepboxEditor button.stopButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\n\tpadding-left: var(--button-size);\n}\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton {\n\tgrid-column-start: 1;\n\tgrid-column-end: 3;\n}\n.beepboxEditor button.stopButton {\n\tgrid-column-start: 1;\n\tgrid-column-end: 5;\n}\n.beepboxEditor button.prevBarButton {\n\tgrid-column-start: 3;\n\tgrid-column-end: 4;\n}\n.beepboxEditor button.nextBarButton {\n\tgrid-column-start: 4;\n\tgrid-column-end: 5;\n}\n\n.beepboxEditor button.playButton.shrunk, .beepboxEditor button.recordButton.shrunk {\n\tpadding: 0;\n}\n.beepboxEditor button.playButton.shrunk::before, .beepboxEditor button.recordButton.shrunk::before {\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n}\n.beepboxEditor button.playButton.shrunk span, .beepboxEditor button.recordButton.shrunk span {\n\tdisplay: none;\n}\n.beepboxEditor button.playButton.shrunk {\n\tgrid-column-start: 1;\n\tgrid-column-end: 2;\n}\n.beepboxEditor button.recordButton.shrunk {\n\tgrid-column-start: 2;\n\tgrid-column-end: 3;\n}\n\n.beepboxEditor button.cancelButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor button.okayButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--checkmark-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--checkmark-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.exportButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--export-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--export-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .instrument-bar {\n\tdisplay: flex;\n\tgap: 2px;\n}\n\n.beepboxEditor .instrument-bar button {\n\tflex-grow: 1;\n\tmin-width: 0;\n\tpadding: 0;\n\tflex-basis: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: var(--text-color-lit);\n}\n\n.beepboxEditor .instrument-bar .remove-instrument, .beepboxEditor .instrument-bar .add-instrument {\n\tmax-width: var(--button-size);\n}\n\n.beepboxEditor .instrument-bar > :not(:first-child) {\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n\n.beepboxEditor .instrument-bar > :not(.last-button) {\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n\tborder-bottom: inset;\n\tborder-color: var(--background-color-dim);\n}\n\n.beepboxEditor .instrument-bar .selected-instrument {\n\tbackground: var(--background-color-lit);\n\tcolor: ${ColorConfig.invertedText};\n}\n\n.beepboxEditor .instrument-bar .deactivated {\n\tbackground: ${ColorConfig.editorBackground};\n\tcolor: var(--text-color-dim);\n\tborder-bottom: unset;\n}\n\n.beepboxEditor .instrument-bar .deactivated.selected-instrument {\n\tbackground: var(--background-color-dim);\n\tcolor: ${ColorConfig.invertedText};\n}\n\n.beepboxEditor .instrument-bar .remove-instrument {\n\tborder-bottom: unset;\n}\n\n.beepboxEditor .instrument-bar .remove-instrument::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: 100%;\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .instrument-bar .add-instrument {\n\tborder-bottom: unset;\n}\n\n.beepboxEditor .instrument-bar .no-underline {\n\tborder-bottom: unset;\n}\n\n.beepboxEditor .instrument-bar .add-instrument::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: 100%;\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--add-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--add-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor canvas {\n\toverflow: hidden;\n\tposition: absolute;\n\tdisplay: block;\n  cursor: crosshair;\n}\n\n@keyframes dash-animation {\n  to {\n    stroke-dashoffset: -100;\n  }\n}\n\n.beepboxEditor .dash-move {\n  animation: dash-animation 20s infinite linear;\n}\n\n.beepboxEditor .trackContainer {\n\tflex-grow: 1;\n}\n\n.beepboxEditor .trackAndMuteContainer {\n\tdisplay: flex;\n\talign-items: flex-start;\n\twidth: 100%;\n\tmin-height: 0;\n\tflex: 1;\n\toverflow-x: hidden;\n\tposition: relative;\n}\n\n.beepboxEditor .muteEditor {\n\twidth: 32px;\n\tflex-shrink: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tposition: sticky;\n\tleft: 0;\n\tz-index: 1;\n\tbackground: ${ColorConfig.editorBackground};\n}\n\n.beepboxEditor .selectRow, .beepboxEditor .instrumentCopyPasteRow {\n\tmargin: 2px 0;\n\theight: var(--button-size);\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.beepboxEditor .selectRow > :last-child {\n\twidth: 62.5%;\n\tflex-shrink: 0;\n}\n\n.beepboxEditor .menu-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.beepboxEditor .menu-area > * {\n\tmargin: 2px 0;\n}\n.beepboxEditor .menu-area > button {\n\tpadding: 0 var(--button-size);\n\twhite-space: nowrap;\n}\n\n.beepboxEditor .song-settings-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .editor-controls {\n\tflex-shrink: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .instrument-settings-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\n\tflex-shrink: 0;\n}\n\n.beepboxEditor .pitchShiftMarkerContainer {\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\theight: 100%;\n\tleft: 3px;\n\tright: 3px;\n\tposition: absolute;\n\talign-items: center;\n\tpointer-events: none;\n}\n\n.beepboxEditor .pitchShiftMarker {\n\twidth: 0;\n\theight: 0;\n\tposition: absolute;\n}\n\n.beepboxEditor .pitchShiftMarker::before {\n\tcontent: \"\";\n\twidth: 2px;\n\theight: 20px;\n\ttransform: translate(-50%, -50%);\n\tposition: absolute;\n\tbackground: currentColor;\n\tborder-radius: 3px;\n}\n\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\n\tfont-size: inherit;\n\tfont-weight: inherit;\n\tfont-family: inherit;\n\tbackground: transparent;\n\ttext-align: center;\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\n\tbackground-color: ${ColorConfig.textSelection};\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor input[type=checkbox] {\n  transform: scale(1.5);\n}\n\n.beepboxEditor input[type=range] {\n\t-webkit-appearance: none;\n\tcolor: inherit;\n\twidth: 100%;\n\theight: var(--button-size);\n\tfont-size: inherit;\n\tmargin: 0;\n\tcursor: pointer;\n\tbackground: none;\n\ttouch-action: pan-y;\n  position: relative;\n}\n.beepboxEditor input[type=range]:focus {\n\toutline: none;\n}\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n}\n\n.modTarget:hover {\n\tfill: ${ColorConfig.hoverPreview} !important;\n}\n\n.beepboxEditor span.midTick:after {\n    content: \"\";\n    display:inline-block;\n    position: absolute;\n    background: currentColor;\n    width: 2%;\n    left: 49%;\n    height: 0.5em;\n    top: 32%;\n    z-index: 1;\n\t\tpointer-events: none;\n}\n.beepboxEditor span.modSlider {\n\t--mod-position: 20%;\n\t--mod-color: ${ColorConfig.overwritingModSlider};\n  --mod-border-radius: 0%;\n}\n.beepboxEditor span.modSlider:before {\n\tcontent: \"\";\n    display:inline-block;\n    position: absolute;\n    background: var(--mod-color);\n    width: 4%;\n    left: var(--mod-position);\n    height: 0.8em;\n    top: 28%;\n    z-index: 2;\n\t\ttransform: translate(-50%, 0%);\n\t\tpointer-events: none;\n\t\tborder: 40%;\n\t\tborder-radius: var(--mod-border-radius);\n}\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tbackground: currentColor;\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\tmargin-top: -10px;\n}\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-moz-range-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n}\n.beepboxEditor input[type=range]:focus::-moz-range-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-moz-range-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tborder: none;\n\tbackground: currentColor;\n\tcursor: pointer;\n}\n.beepboxEditor input[type=range]::-ms-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tborder-color: transparent;\n}\n.beepboxEditor input[type=range]:focus::-ms-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-ms-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tbackground: currentColor;\n\tcursor: pointer;\n}\n\nli.select2-results__option[role=group] > strong:hover {\n  background-color: #516fbb;\n}\n\n/* wide screen */\n@media (min-width: 711px) {\n\t#beepboxEditorContainer {\n\t\tbackground-image: url(${getLocalStorageItem(\"customTheme2\", \"\")});\n\t\tdisplay: table;\n\t}\n\t.beepboxEditor {\n\t\tflex-direction: row;\n\t}\n\t.beepboxEditor:focus-within {\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\n\t}\n\t.beepboxEditor .trackAndMuteContainer {\n\t\twidth: 512px;\n\t}\n\t.beepboxEditor .trackSelectBox {\n\t\tdisplay: none;\n\t}\n    .beepboxEditor .muteButtonSelectBox {\n\t\tdisplay: none;\n\t}\n\t.beepboxEditor .play-pause-area {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t.beepboxEditor .playback-bar-controls {\n\t\tmargin: 2px 0;\n\t}\n\t.beepboxEditor .playback-volume-controls {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tmargin: 2px 0;\n\t\talign-items: center;\n\t}\n\t.beepboxEditor .settings-area {\n\t\twidth: var(--settings-area-width);\n\t}\n}\n\n/* narrow screen */\n@media (max-width: 710px) {\n\t.beepboxEditor {\n\t\tgrid-template-columns: minmax(0, 1fr);\n\t\tgrid-template-rows: min-content 6px min-content min-content;\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\n\t\tgrid-row-gap: 0;\n\t}\n\t.beepboxEditor .settings-area {\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\n\t\tgrid-template-areas:\n\t\t\t\"play-pause-area play-pause-area\"\n\t\t\t\"menu-area instrument-settings-area\"\n\t\t\t\"song-settings-area instrument-settings-area\"\n\t\t\t\"version-area version-area\";\n\t\tgrid-column-gap: 8px;\n\t\tmargin: 0 4px;\n\t}\n\t.beepboxEditor:focus-within {\n\t\toutline: none;\n\t}\n\t.beepboxEditor .pattern-area {\n\t\tmax-height: 75vh;\n\t}\n\t.beepboxEditor .trackAndMuteContainer {\n\t\toverflow-x: auto;\n\t}\n\t.beepboxEditor .barScrollBar {\n\t\tdisplay: none;\n\t}\n\t.beepboxEditor .play-pause-area {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\tgrid-column-gap: 8px;\n\t\tmargin: 2px 0;\n\t}\n\t.beepboxEditor .playback-bar-controls {\n\t\tflex-grow: 1;\n\t}\n\t.beepboxEditor .playback-volume-controls {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tflex-grow: 1;\n\t}\n\t\n\t.beepboxEditor .soundIcon {\n\t  background: ${ColorConfig.editorBackground};\n\t  display: inline-block;\n\t  height: 10px;\n\t  margin-left: 0px;\n\t  margin-top: 8px;\n\t\tposition: relative;\n\t\twidth: 10px;\n\t}\n\t.beepboxEditor .soundIcon:before {\n\t  border-bottom: 6px solid transparent;\n\t  border-top: 6px solid transparent;\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\n\t  content: \"\";\n\t  height: 10px;\n\t  left: 6px;\n\t  position: absolute;\n\t  top: -6px;\n\t  width: 0;\n\t}\n}\n\n`));\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\n\nexport class BarScrollBar {\n\tprivate readonly _editorWidth: number = 512;\n\tprivate readonly _editorHeight: number = 20;\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\n\t\tprivate readonly _notches: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4});\n\t\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2});\n\t\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\tprivate _renderedPlayhead: number = -1;\n\t\t\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight},\n\t\tthis._notches,\n\t\tthis._handle,\n\t\tthis._handleHighlight,\n\t\tthis._leftHighlight,\n\t\tthis._rightHighlight,\n\t\tthis._playhead,\n\t);\n\t\t\n\t\tpublic readonly container: HTMLElement = HTML.div({class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\"}, this._svg);\n\t\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _dragging: boolean = false;\n\tprivate _dragStart: number;\n\tprivate _notchSpace: number;\n\tprivate _renderedNotchCount: number = -1;\n\tprivate _renderedScrollBarPos: number = -1;\n\t\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\n\t\tconst center: number = this._editorHeight * 0.5;\n\t\tconst base: number = 20;\n\t\tconst tip: number = 9;\n\t\tconst arrowHeight: number = 6;\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t\t\t\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\n\t\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, {capture: false, passive: true});\n\t}\n\n\tpublic animatePlayhead = (): void => {\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\n\t\tif (this._renderedPlayhead != playhead) {\n\t\t\tthis._renderedPlayhead = playhead;\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\n\t}\n\t}\n\t\t\n\tprivate _onScroll = (event: Event): void => {\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\n\t\t//this._doc.notifier.changed();\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._updatePreview();\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._dragStart = this._mouseX;\n\t\t}\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._updatePreview();\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._dragStart = this._mouseX;\n\t\t}\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._dragging) {\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\n\t\t\t\tif (this._doc.barScrollPos > 0) {\n\t\t\t\t\tthis._doc.barScrollPos--;\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\n\t\t\t\t\tthis._doc.barScrollPos++;\n\t\t\t\t\tthis._dragStart += this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._mouseOver) this._updatePreview();\n\t}\n\t\t\n\tpublic changePos(offset: number) {\n\t\twhile (Math.abs(offset) >= 1) {\n\n\t\t\tif (offset < 0) {\n\t\t\t\tif (this._doc.barScrollPos > 0) {\n\t\t\t\t\tthis._doc.barScrollPos--;\n\t\t\t\t\tthis._dragStart += this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\n\t\t\t\t\tthis._doc.barScrollPos++;\n\t\t\t\t\tthis._dragStart += this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset += (offset > 0) ? -1 : 1;\n\n\t\t}\n\t}\n\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (!this._dragging && this._mouseDown) {\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\n\t\t\t\tthis._doc.notifier.changed();\n\t\t\t} else {\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\n\t\t\t\tthis._doc.notifier.changed();\n\t\t\t}\n\t\t}\n\t\tthis._mouseDown = false;\n\t\tthis._dragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tlet showleftHighlight: boolean = false;\n\t\tlet showRightHighlight: boolean = false;\n\t\tlet showHandleHighlight: boolean = false;\n\t\t\t\n\t\tif (showHighlight) {\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\n\t\t\t\tshowleftHighlight = true;\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\t\tshowRightHighlight = true;\n\t\t\t} else {\n\t\t\t\tshowHandleHighlight = true;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\n\t}\n\t\t\n\tpublic render(): void {\n\t\t\tthis._notchSpace = (this._editorWidth-1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\n\t\t\t\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\n\t\tif (resized) {\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\n\t\t\t\t\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\n\t\t\t\t\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\n\t\t\t\t\tthis._notches.appendChild(SVG.rect({fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2}));\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._doc.barScrollPos     = Math.max(0, Math.min(this._doc.song.barCount          - this._doc.trackVisibleBars,     this._doc.barScrollPos));\n\t\tthis._doc.channelScrollPos = Math.max(0, Math.min(this._doc.song.getChannelCount() - this._doc.trackVisibleChannels, this._doc.channelScrollPos));\n\t\t\n\t\tif (resized || this._renderedScrollBarPos != this._doc.barScrollPos) {\n\t\t\tthis._renderedScrollBarPos = this._doc.barScrollPos;\n\t\t\tthis._handle.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\n\t\t\tthis._handle.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\n\t\t\tthis._handleHighlight.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\n\t\t\tthis._handleHighlight.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\n\t\t}\n\t\t\t\n\t\tthis._updatePreview();\n\t\t\t\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\n\t\tthis._trackContainer.scrollTop = this._doc.channelScrollPos * this._doc.getChannelHeight();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\ninterface NumberArray {\n\tlength: number;\n\t[index: number]: number;\n}\n\n// A basic FFT operation scales the overall magnitude of elements by the\n// square root of the length of the array, √N. Performing a forward FFT and\n// then an inverse FFT results in the original array, but multiplied by N.\n// This helper function can be used to compensate for that. \nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\n\tfor (let i: number = 0; i < array.length; i++) {\n\t\tarray[i] *= factor;\n\t}\n}\n\nfunction isPowerOf2(n: number): boolean {\n\treturn !!n && !(n & (n - 1));\n}\n\nfunction countBits(n: number): number {\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\n\treturn Math.round(Math.log(n) / Math.log(2));\n}\n\n// Rearranges the elements of the array, swapping the element at an index\n// with an element at an index that is the bitwise reverse of the first\n// index in base 2. Useful for computing the FFT.\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\n\tconst bitCount: number = countBits(fullArrayLength);\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\n\tconst finalShift: number = 16 - bitCount;\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\n\t\tlet j: number;\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n\t\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\n\t\tif (j > i) {\n\t\t\tlet temp: number = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n}\n\n// Provided for educational purposes. Easier to read than\n// fastFourierTransform(), but computes the same result.\n// Takes two parallel arrays representing the real and imaginary elements,\n// respectively, and returns an array containing two new arrays, which\n// contain the complex result of the transform.\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\n\tconst fullArrayLength: number = realArray.length;\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\tconst realOut: number[] = [];\n\tconst imagOut: number[] = [];\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\trealOut[i] = 0.0;\n\t\timagOut[i] = 0.0;\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\n\t\t\tconst c: number = Math.cos(radians);\n\t\t\tconst s: number = Math.sin(radians);\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\n\t\t}\n\t}\n\treturn [realOut, imagOut];\n}\n\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\n// input real and imaginary arrays. Can be used for both forward and inverse\n// transforms: swap the order of the arguments for the inverse.\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\n\tconst fullArrayLength: number = realArray.length;\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\t\t\n\treverseIndexBits(realArray, fullArrayLength);\n\treverseIndexBits(imagArray, fullArrayLength);\n\t\t\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\n\t\tconst startIndex1: number = startIndex + 1;\n\t\tconst startIndex2: number = startIndex + 2;\n\t\tconst startIndex3: number = startIndex + 3;\n\t\t\tconst real0: number = realArray[startIndex ];\n\t\tconst real1: number = realArray[startIndex1];\n\t\tconst real2: number = realArray[startIndex2];\n\t\tconst real3: number = realArray[startIndex3];\n\t\t\tconst imag0: number = imagArray[startIndex ];\n\t\tconst imag1: number = imagArray[startIndex1];\n\t\tconst imag2: number = imagArray[startIndex2];\n\t\tconst imag3: number = imagArray[startIndex3];\n\t\tconst realTemp0: number = real0 + real1;\n\t\tconst realTemp1: number = real0 - real1;\n\t\tconst realTemp2: number = real2 + real3;\n\t\tconst realTemp3: number = real2 - real3;\n\t\tconst imagTemp0: number = imag0 + imag1;\n\t\tconst imagTemp1: number = imag0 - imag1;\n\t\tconst imagTemp2: number = imag2 + imag3;\n\t\tconst imagTemp3: number = imag2 - imag3;\n\t\t\trealArray[startIndex ] = realTemp0 + realTemp2;\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\n\t\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\n\t}\n\t\t\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\n\t\tconst halfLength: number = stride >>> 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tlet c: number = 1.0;\n\t\t\tlet s: number = 0.0;\n\t\t\tlet cPrev: number = cosIncrement;\n\t\t\tlet sPrev: number = sinIncrement;\n\t\t\tconst secondHalf: number = startIndex + halfLength;\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\n\t\t\t\tconst j: number = i + halfLength;\n\t\t\t\tconst real0: number = realArray[i];\n\t\t\t\tconst imag0: number = imagArray[i];\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\n\t\t\t\trealArray[i] = real0 + real1;\n\t\t\t\timagArray[i] = imag0 + imag1;\n\t\t\t\trealArray[j] = real0 - real1;\n\t\t\t\timagArray[j] = imag0 - imag1;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the Fourier transform from an array of real-valued time-domain\n// samples. The output is specially formatted for space efficieny: elements\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\n// descending frequency. Overwrites the input array.\nexport function forwardRealFourierTransform(array: NumberArray): void {\n\tconst fullArrayLength: number = array.length;\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n\t\t\n\t// First and second pass.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\t// no imaginary elements yet since the input is fully real.\n\t\tconst tempA: number = real0 + real1;\n\t\tconst tempB: number = real2 + real3;\n\t\t\tarray[index ] = tempA + tempB;\n\t\tarray[index1] = real0 - real1;\n\t\tarray[index2] = tempA - tempB;\n\t\tarray[index3] = real2 - real3;\n\t}\n\t\t\n\t// Third pass.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index7: number = index + 7;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst imag3: number = array[index3];\n\t\tconst real4: number = array[index4];\n\t\tconst real5: number = array[index5];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\n\t\t\tarray[index ] = real0 + real4;\n\t\tarray[index1] = real1 + tempA;\n\t\tarray[index3] = real1 - tempA;\n\t\tarray[index4] = real0 - real4;\n\t\tarray[index5] = tempB - imag3;\n\t\tarray[index7] = tempB + imag3;\n\t}\n\t\t\n\t// Handle remaining passes.\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst realStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + realStartB;\n\t\t\tarray[startIndexB] = realStartA - realStartB;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst imag0: number = array[indexA1];\n\t\t\t\tconst real1: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\n\t\t\t\tarray[indexA0] = real0 + tempA;\n\t\t\t\tarray[indexA1] = real0 - tempA;\n\t\t\t\t\tarray[indexB0] =-imag0 - tempB;\n\t\t\t\tarray[indexB1] = imag0 - tempB;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the inverse Fourier transform from a specially formatted array of\n// scalar values. Elements 0 through N/2 are expected to be the real values of\n// the corresponding complex elements, representing cosine wave amplitudes in\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\n// imaginary values, representing sine wave amplitudes in descending frequency.\n// Generates real-valued time-domain samples. Overwrites the input array.\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\n\t// Perform all but the last few passes in reverse.\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\t\t\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst imagStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\n\t\t\tarray[midIndexA] *= 2;\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\n\t\t\tarray[midIndexB] *= 2;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst real1: number = array[indexA1];\n\t\t\t\tconst imag0: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real0 - real1;\n\t\t\t\tconst tempB: number = imag0 + imag1;\n\t\t\t\tarray[indexA0] = real0 + real1;\n\t\t\t\tarray[indexA1] = imag1 - imag0;\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t// Commented out this block (and compensated with an extra pass above)\n\t// because it's slower in my testing so far.\n\t// Pass with stride 8.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index6: number = index + 6;\n\t\tconst index7: number = index + 7;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\tconst imag4: number = array[index4];\n\t\tconst imag5: number = array[index5];\n\t\tconst imag6: number = array[index6];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = real1 - real3;\n\t\tconst tempB: number = imag5 + imag7;\n\t\tarray[index ] = real0 + imag4;\n\t\tarray[index1] = real1 + real3;\n\t\tarray[index2] = real2 * 2;\n\t\tarray[index3] = imag7 - imag5;\n\t\tarray[index4] = real0 - imag4;\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\n\t\tarray[index6] = imag6 * 2;\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\n\t}\n\t*/\n\t// The final passes with strides 4 and 2, combined into one loop.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1] * 2;\n\t\tconst imag2: number = array[index2];\n\t\tconst imag3: number = array[index3] * 2;\n\t\tconst tempA: number = real0 + imag2;\n\t\tconst tempB: number = real0 - imag2;\n\t\t\tarray[index ] = tempA + real1;\n\t\tarray[index1] = tempA - real1;\n\t\tarray[index2] = tempB + imag3;\n\t\tarray[index3] = tempB - imag3;\n\t}\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Deque<T> {\n\tprivate _capacity: number = 1;\n\tprivate _buffer: Array<T | undefined> = [undefined];\n\tprivate _mask: number = 0;\n\tprivate _offset: number = 0;\n\tprivate _count: number = 0;\n\n\tpublic pushFront(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._offset = (this._offset - 1) & this._mask;\n\t\tthis._buffer[this._offset] = element;\n\t\tthis._count++;\n\t}\n\tpublic pushBack(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\n\t\tthis._count++;\n\t}\n\tpublic popFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tconst element: T = <T>this._buffer[this._offset];\n\t\tthis._buffer[this._offset] = undefined;\n\t\tthis._offset = (this._offset + 1) & this._mask;\n\t\tthis._count--;\n\t\treturn element;\n\t}\n\tpublic popBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tthis._count--;\n\t\tconst index: number = (this._offset + this._count) & this._mask;\n\t\tconst element: T = <T>this._buffer[index];\n\t\tthis._buffer[index] = undefined;\n\t\treturn element;\n\t}\n\tpublic peakFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[this._offset];\n\t}\n\tpublic peakBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\n\t}\n\tpublic count(): number {\n\t\treturn this._count;\n\t}\n\tpublic set(index: number, element: T): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\n\t}\n\tpublic get(index: number): T {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\n\t}\n\tpublic remove(index: number): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tif (index <= (this._count >> 1)) {\n\t\t\twhile (index > 0) {\n\t\t\t\tthis.set(index, this.get(index - 1));\n\t\t\t\tindex--;\n\t\t\t}\n\t\t\tthis.popFront();\n\t\t} else {\n\t\t\tindex++;\n\t\t\twhile (index < this._count) {\n\t\t\t\tthis.set(index - 1, this.get(index));\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tthis.popBack();\n\t\t}\n\t}\n\tprivate _expandCapacity(): void {\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\n\t\tthis._capacity = this._capacity << 1;\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\n\t\tconst size: number = this._count | 0;\n\t\tconst offset: number = this._offset | 0;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\n\t\t}\n\t\tfor (let i = size; i < this._capacity; i++) {\n\t\t\tnewBuffer[i] = undefined;\n\t\t}\n\t\tthis._offset = 0;\n\t\tthis._buffer = newBuffer;\n\t\tthis._mask = this._capacity - 1;\n\t}\n}","//A simple events system for effectively direct links without actualy linking files or references\nclass EventManager { \n    private activeEvents:string[] = [];\n    private listeners:any = {};\n\n    constructor() {\n        this.activeEvents = [];\n        this.listeners = {};\n    }\n\n\n    public raise(eventType: string, eventData: any, extraEventData?: any): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.activeEvents.push(eventType);\n        for (let i: number = 0; i < this.listeners[eventType].length; i++) {\n            this.listeners[eventType][i](eventData,extraEventData)\n        }\n        this.activeEvents.pop();\n    }\n\n    public listen(eventType:string,callback:Function): void {\n        if (this.listeners[eventType] == undefined) {\n            this.listeners[eventType] = []\n        }\n        this.listeners[eventType].push(callback)\n    }\n\n    public unlisten(eventType: string, callback: Function): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        const lisen = this.listeners[eventType].indexOf(callback);\n        if (lisen != -1) {\n            this.listeners[eventType].splice(lisen, 1);\n        }\n    }\n    public unlistenAll(eventType: string): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.listeners[eventType]=[];\n    }\n}\n\nexport const events:EventManager = new EventManager()","/*\nThis file contains code to compute digital audio filter coefficients based on\nthe desired type, cutoff frequency, and other parameters. You can use these\ncoefficients to apply the filter to audio samples. It also contains code to\nanalyze these filters, which is useful for graphically displaying their effects.\n\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\nfilters, because older output samples contribute feedback to newer output\nsamples and thus contribute to all future samples, although typically filters\nare design to reduce the contribution of older samples over time.\n\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\nvolume of the signal at all but induce phase changes above the cutoff frequency.\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\nbut raise or lower the volume at that frequency. \n\nThe number of old samples used in the filter determines the \"order\" of the\nfilter. First-order filters generally have shallower slopes, and second-order\nfilters generally have steeper slopes and can be configured to \"resonate\",\nmeaning they have a louder peak at the cutoff frequency. This file contains\nfirst-order filters and second-order filters, meaning one or two older samples\nare involved, as well as the current input sample.\n\nThe class FilterCoefficients is defined lower in this file. You can use it to\nset up a first order filter like this:\n\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst filter: FilterCoefficients = new FilterCoefficients();\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\n\tconst a: number[] = filter.a;\n\t// input sample coefficients are conventionally called b0, b1, etc\n\tconst b: number[] = filter.b;\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\n\tconst x: number[] = [0, 0, 0];\n\t// filter output samples, y[0] will be computed by the filter based on input\n\t// samples and older output samples.\n\tconst y: number[] = [0, 0, 0];\n\nThen to apply the first-order filter to samples inside a loop, using the current\ninput sample (x[0]) as well as previous input and output samples, do this:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\n\t// Remember the input and output samples for next time:\n\tx[1] = x[0];\n\ty[1] = y[0];\n\n2nd order filters are similar, but have more parameters and require more old\nsamples:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\n\t// Remember the input and output samples for next time:\n\tx[2] = x[1];\n\tx[1] = x[0];\n\ty[2] = y[1];\n\ty[1] = y[0];\n\nYou can compose multiple filters into a higher order filter, although doing so\nreduces the numerical stability of the filter:\n\n\tfilter3.combination(filter1, filter2);\n\t// filter3.order will equal: filter1.order + filter2.order\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\n\nThis file also contains a class called FrequencyResponse. You can use it to\ndetermine how much gain or attenuation a filter would apply to sounds at a\nspecific input frequency, as well as the phase offset:\n\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst response: FrequencyResponse = new FrequencyResponse();\n\tresponse.analyze(filter, inputRadians);\n\tconst gainResponse = response.magnitude();\n\tconst phaseResponse = response.angle();\n\nThat's basically all you need to know to use this code, but I'll also explain\nhow the analysis works.\n\nA first-order digital IIR filter is ordinarily implemented in a form like this:\n\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\n\nIf we adopt standard naming conventions for audio filters, this same code would\ninstead look like:\n\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\n\ty0 = b0*x0 + b1*x1 - a1*y1;\n\nLeaving behind the world of code for a moment and entering the world of algebra,\nwe can rewrite this equation by moving all the output terms to the left side,\nand we can add a coefficient to the y0 term called a0 (which is typically\nnormalized to 1.0, which is why I didn't bother including it until now):\n\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\n\nThis is known as the symmetrical form of the filter, and it will help us analyze\nthe impact of the filter on an input audio signal. Here's a lesson that helped\nme understand the symmetrical form:\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\n\nThe end of that lesson introduces a concept called the \"delay operator\" which\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\nwhen you multiply them. For example:\n\n\tx0 * z^-1 = x1\n\nThe lesson doesn't explain how it actually works. Audio signals aren't always\npredictable, which means that you generally can't do math on a single sample to\ncompute what the previous sample was. However, some audio signals ARE\npredictable, such as pure sine waves. Fortunately, all audio signals can be\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\ntime, and use it to analyze the filter's impact on waves at that frequency. In\npractice, this tells us what the filter will do to unpredictable input samples\nthat contain a partial sine wave at that frequency.\n\nTechnically, you can't just use a single sine wave sample to determine the\nprevious sine wave sample, because each possible value is passed going upwards\nand downwards once per period and the direction is ambigous. This is where we\nneed to move into the complex number domain, where the real and imaginary\ncomponents can provide enough information to compute the previous position on\nthe input signal. So now instead of talking about sine waves, we're talking\nabout waves where the imaginary component is a sine wave and the real component\nis a cosine wave at the same frequency. Together, they trace around a unit\ncircle in the complex domain, and each sample is just a consistent rotation\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\nthis same rotation applied in reverse, and it can be computed as:\n\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\n\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\nexplaining what that means is probably beyond the scope of this documentation\naside from noting that a complex number on the unit circle represents a 2D\nrotation that you can apply via multiplication.\n\nNow we can rewrite the symmetrical form using the delay operator and algebra:\n\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nThat last equation expresses the relationship between the input and output\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\npoint, the specific values of the input and output samples don't even matter!\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\n\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nIf you plug in actual filter coefficients and express the delay operators as\ncomplex numbers with the appropriate trigonometry functions, the transfer\nfunction can be computed and produces a complex number that represents the\nrelationship between the input and output signals, whose magnitude represents\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\nrepresents how much phase shift is applied by the filter to signals at that\nfrequency.\n\n(Note that in order to compute the transfer function, you'll need to do\nsomething about the complex number in the denominator. It turns out you can turn\nthe denominator into a real number by multiplying both the numerator and\ndenominator by the complex conjugate of the denominator, which is just the\ndenominator with the imaginary component negated.)\n\nFinally, I'll list some of the links that helped me understand filters and\nprovided some of the algorithms I that use here.\n\nHere's where I found accurate 2nd order low-pass and high-pass digital filters:\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\n\nThis page is how I found a link to the cookbook article above. It claims these\nfilters are Butterworth filters:\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\nI found the first-order digital Butterworth filter coefficients at:\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\n\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\nhttps://www.drpetter.se/project_sfxr.html\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\nnearly identical, but when closer to the nyquist frequency the simpler filters\ncreate extra resonance.\n*/\n\nexport class FilterCoefficients {\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\n\tpublic readonly b: number[] = [1.0]; // input coefficients\n\tpublic order: number = 0;\n\t\n\tpublic linearGain0thOrder(linearGain: number): void {\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\n\t\tthis.b[0] = linearGain;\n\t\tthis.order = 0;\n\t}\n\t\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth low-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\t// A butterworth filter is one where the amplitude response is equal to:\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[1] = this.b[0] = 1 / a0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\n\t\t// then the output is the same as the input, and if the cutoff is higher\n\t\t// than that, then the output actually resonates at high frequencies\n\t\t// instead of attenuating.\n\t\t// I'm guessing this filter was converted from analog to digital using\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\n\t\t// method. The difference is that the bilinear transform warps\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\n\t\t// preserves the frequency of the filter response but also adds the\n\t\t// reflected response from above the nyquist frequency.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 0.0;\n\t\t/*\n\t\t// Alternatively:\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\n\t\tconst a0: number = g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = 1.0 / a0;\n\t\tthis.b[1] = 0.0 / a0;\n\t\t*/\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth high-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = g / a0;\n\t\tthis.b[1] = -g / a0;\n\t\tthis.order = 1;\n\t}\n\t/*\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\n\t\t// appoaches the nyquist.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\n\t\t// I had trouble figuring this one out because I couldn't find any\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\n\t\t// and I could narrow down a couple of them based on the desired gain at\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\n\t\t// Obviously I don't fully understand the bilinear transform yet!\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\n\t\tconst a0: number = 1.0;\n\t\tthis.a[1] = g / a0;\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\t/*\n\t// I haven't found a practical use for this version of the all pass filter.\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = -g;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\t\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\n\t\t// differently and for a different purpose! Useful for interpolating\n\t\t// between samples in a delay line.\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\n\t\t// although it gets distorted near the nyquist.\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\n\t\tthis.b[1] = (1 - cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This filter is adapted from the one in the SFXR source code:\n\t\t// https://www.drpetter.se/project_sfxr.html\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\n\t\t// above, except it resonates too much when the cutoff appoaches the\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\n\t\t// nyquist/3, then the output is the same as the input.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = g*g;\n\t\tthis.b[1] = 0;\n\t\tthis.b[2] = 0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1.0 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\n\t\tthis.b[1] = -(1.0 + cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -2.0;\n\t\tthis.b[2] = 1.0;\n\t\tthis.order = 2;\n\t}\n\t*/\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\t// Create a higher order filter by combining two lower order filters.\n\t// However, making high order filters in this manner results in instability.\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\n\t\tthis.order = filter1.order + filter2.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = 0.0;\n\t\t\tthis.b[i] = 0.0;\n\t\t}\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\n\t\tif (other.order != this.order) throw new Error();\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\n\t\t}\n\t}\n\t\n\tpublic copy(other: FilterCoefficients): void {\n\t\tthis.order = other.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = other.a[i];\n\t\t\tthis.b[i] = other.b[i];\n\t\t}\n\t}\n\t*/\n}\n\nexport class FrequencyResponse {\n\tpublic real: number = 0.0;\n\tpublic imag: number = 0.0;\n\tpublic denom: number = 1.0;\n\t\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\n\t}\n\t\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\n\t\tconst a: number[] = filter.a;\n\t\tconst b: number[] = filter.b;\n\t\tconst realZ1: number = real;\n\t\tconst imagZ1: number = -imag;\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\n\t\tlet imagNum: number = b[1] * imagZ1;\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\n\t\tlet imagDenom: number = a[1] * imagZ1;\n\t\tlet realZ: number = realZ1;\n\t\tlet imagZ: number = imagZ1;\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\n\t\t\trealZ = realTemp;\n\t\t\timagZ = imagTemp;\n\t\t\trealNum += b[i] * realZ;\n\t\t\timagNum += b[i] * imagZ;\n\t\t\trealDenom += a[i] * realZ;\n\t\t\timagDenom += a[i] * imagZ;\n\t\t}\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\n\t}\n\t\n\tpublic magnitude(): number {\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\n\t}\n\t\n\tpublic angle(): number {\n\t\treturn Math.atan2(this.imag, this.real);\n\t}\n}\n\nexport class DynamicBiquadFilter {\n\tpublic a1: number = 0.0;\n\tpublic a2: number = 0.0;\n\tpublic b0: number = 1.0;\n\tpublic b1: number = 0.0;\n\tpublic b2: number = 0.0;\n\tpublic a1Delta: number = 0.0;\n\tpublic a2Delta: number = 0.0;\n\tpublic b0Delta: number = 0.0;\n\tpublic b1Delta: number = 0.0;\n\tpublic b2Delta: number = 0.0;\n\tpublic output1: number = 0.0;\n\tpublic output2: number = 0.0;\n\t\n\t// Some filter types are more stable when interpolating between coefficients\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\n\t// for filter types where the \"b\" coefficients might change sign!\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\n\t\n\tpublic resetOutput(): void {\n\t\tthis.output1 = 0.0;\n\t\tthis.output2 = 0.0;\n\t}\n\t\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\n\t\tthis.a1 = start.a[1];\n\t\tthis.a2 = start.a[2];\n\t\tthis.b0 = start.b[0];\n\t\tthis.b1 = start.b[1];\n\t\tthis.b2 = start.b[2];\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\n\t\tif (useMultiplicativeInputCoefficients) {\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\n\t\t} else {\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\n\t\t}\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { startLoadingSample, sampleLoadingState, SampleLoadingState, sampleLoadEvents, SampleLoadedEvent, SampleLoadingStatus, loadBuiltInSamples, Dictionary, DictionaryArray, toNameMap, FilterType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, OperatorWave } from \"./SynthConfig\";\nimport { Preset, EditorConfig } from \"../editor/EditorConfig\";\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\nimport { Deque } from \"./Deque\";\nimport { events } from \"../global/Events\";\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter } from \"./filtering\";\n\ndeclare global {\n    interface Window {\n        AudioContext: any;\n        webkitAudioContext: any;\n    }\n}\n\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\n\n// For performance debugging:\n//let samplesAccumulated: number = 0;\n//let samplePerformance: number = 0;\n\nexport function clamp(min: number, max: number, val: number): number {\n    max = max - 1;\n    if (val <= max) {\n        if (val >= min) return val;\n        else return min;\n    } else {\n        return max;\n    }\n}\n\nfunction validateRange(min: number, max: number, val: number): number {\n    if (min <= val && val <= max) return val;\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\n}\n\nexport function parseFloatWithDefault<T>(s: string, defaultValue: T): number | T {\n    let result: number | T = parseFloat(s);\n    if (Number.isNaN(result)) result = defaultValue;\n    return result;\n}\n\nexport function parseIntWithDefault<T>(s: string, defaultValue: T): number | T {\n    let result: number | T = parseInt(s);\n    if (Number.isNaN(result)) result = defaultValue;\n    return result;\n}\n\nfunction encode32BitNumber(buffer: number[], x: number): void {\n    // 0b11_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\n    //      111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\n    //             111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\n    //                    111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\n    //                           111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\n    //                                  111111\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\n}\n\n// @TODO: This is error-prone, because the caller has to remember to increment\n// charIndex by 6 afterwards.\nfunction decode32BitNumber(compressed: string, charIndex: number): number {\n    let x: number = 0;\n    // 0b11_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\n    //      111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\n    //             111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\n    //                    111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\n    //                           111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\n    //                                  111111\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\n    return x;\n}\n\nfunction encodeUnisonSettings(buffer: number[], v: number, s: number, o: number, e: number, i: number): void {\n    buffer.push(base64IntToCharCode[v]);\n    \n    // logically this should be done with bitshifts... but I don't know how to do that, so\n    buffer.push(base64IntToCharCode[Number((s > 0))]);\n    let cleanS = Math.round(Math.abs(s) * 1000);\n    let cleanSDivided = Math.floor(cleanS / 63);\n    buffer.push(base64IntToCharCode[cleanS % 63], base64IntToCharCode[cleanSDivided % 63], base64IntToCharCode[Math.floor(cleanSDivided / 63)]);\n\n    buffer.push(base64IntToCharCode[Number((o > 0))]);\n    let cleanO = Math.round(Math.abs(o) * 1000);\n    let cleanODivided = Math.floor(cleanO / 63);\n    buffer.push(base64IntToCharCode[cleanO % 63], base64IntToCharCode[cleanODivided % 63], base64IntToCharCode[Math.floor(cleanODivided / 63)]);\n    \n    buffer.push(base64IntToCharCode[Number((e > 0))]);\n    let cleanE = Math.round(Math.abs(e) * 1000);\n    buffer.push(base64IntToCharCode[cleanE % 63], base64IntToCharCode[Math.floor(cleanE / 63)]);\n\n    buffer.push(base64IntToCharCode[Number((i > 0))]);\n    let cleanI = Math.round(Math.abs(i) * 1000);\n    buffer.push(base64IntToCharCode[cleanI % 63], base64IntToCharCode[Math.floor(cleanI / 63)]);\n}\n\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex: number): [number, number] {\n    let key: number = clamp(0, Config.keys.length, rawKeyIndex);\n    let octave: number = 0;\n    // This conversion code depends on C through B being\n    // available as keys, of course.\n    if (rawKeyIndex === 12) {\n        // { name: \"C+\", isWhiteKey: false, basePitch: 24 }\n        key = 0;\n        octave = 1;\n    } else if (rawKeyIndex === 13) {\n        // { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 }\n        key = 6;\n        octave = -1;\n    } else if (rawKeyIndex === 14) {\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 }\n        key = 0;\n        octave = -1;\n    } else if (rawKeyIndex === 15) {\n        // { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 }\n        key = 5;\n        octave = -1;\n    }\n    return [key, octave];\n}\n\nconst enum CharCode {\n    SPACE = 32,\n    HASH = 35,\n    PERCENT = 37,\n    AMPERSAND = 38,\n    PLUS = 43,\n    DASH = 45,\n    DOT = 46,\n    NUM_0 = 48,\n    NUM_1 = 49,\n    NUM_2 = 50,\n    NUM_3 = 51,\n    NUM_4 = 52,\n    NUM_5 = 53,\n    NUM_6 = 54,\n    NUM_7 = 55,\n    NUM_8 = 56,\n    NUM_9 = 57,\n    EQUALS = 61,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    UNDERSCORE = 95,\n    a = 97,\n    b = 98,\n    c = 99,\n    d = 100,\n    e = 101,\n    f = 102,\n    g = 103,\n    h = 104,\n    i = 105,\n    j = 106,\n    k = 107,\n    l = 108,\n    m = 109,\n    n = 110,\n    o = 111,\n    p = 112,\n    q = 113,\n    r = 114,\n    s = 115,\n    t = 116,\n    u = 117,\n    v = 118,\n    w = 119,\n    x = 120,\n    y = 121,\n    z = 122,\n    LEFT_CURLY_BRACE = 123,\n    RIGHT_CURLY_BRACE = 125,\n}\n\nconst enum SongTagCode {\n    beatCount = CharCode.a, // added in song url version 2\n    bars = CharCode.b, // added in 2\n    vibrato = CharCode.c, // added in 2, DEPRECATED\n    fadeInOut = CharCode.d, // added in 3 for transition, switched to fadeInOut in 9\n    loopEnd = CharCode.e, // added in 2\n    eqFilter = CharCode.f, // added in 3\n    barCount = CharCode.g, // added in 3\n    unison = CharCode.h, // added in 2\n    instrumentCount = CharCode.i, // added in 3\n    patternCount = CharCode.j, // added in 3\n    key = CharCode.k, // added in 2\n    loopStart = CharCode.l, // added in 2\n    reverb = CharCode.m, // added in 5, DEPRECATED\n    channelCount = CharCode.n, // added in 6\n    channelOctave = CharCode.o, // added in 3\n    patterns = CharCode.p, // added in 2\n    effects = CharCode.q, // added in 7\n    rhythm = CharCode.r, // added in 2\n    scale = CharCode.s, // added in 2\n    tempo = CharCode.t, // added in 2\n    preset = CharCode.u, // added in 7\n    volume = CharCode.v, // added in 2\n    wave = CharCode.w, // added in 2\n\n    filterResonance = CharCode.y, // added in 7, DEPRECATED, [UB] repurposed for chip wave loop controls\n    drumsetEnvelopes = CharCode.z, // added in 7 for filter envelopes, still used for drumset envelopes\n    algorithm = CharCode.A, // added in 6\n    feedbackAmplitude = CharCode.B, // added in 6\n    chord = CharCode.C, // added in 7, DEPRECATED\n    detune = CharCode.D, // [JB], added in 3(?), DEPRECATED\n    envelopes = CharCode.E, // added in 6 for FM operator envelopes, repurposed in 9 for general envelopes.\n    feedbackType = CharCode.F, // added in 6\n    arpeggioSpeed = CharCode.G, // [JB], added in 3, DEPRECATED\n    harmonics = CharCode.H, // added in 7\n    stringSustain = CharCode.I, // added in 9\n\n    pan = CharCode.L, // added between 8 and 9, DEPRECATED\n    customChipWave = CharCode.M, // [JB], added in 1(?)\n    songTitle = CharCode.N, // [JB], added in 1(?)\n    limiterSettings = CharCode.O, // [JB], added in 3(?)\n\n    operatorAmplitudes = CharCode.P, // added in 6\n    operatorFrequencies = CharCode.Q, // added in 6\n    operatorWaves = CharCode.R, // [JB], added in 4\n    spectrum = CharCode.S, // added in 7\n    startInstrument = CharCode.T, // added in 6\n    channelNames = CharCode.U, // [JB], added in 4(?)\n    feedbackEnvelope = CharCode.V, // added in 6, DEPRECATED\n    pulseWidth = CharCode.W, // added in 7\n    aliases = CharCode.X, // [JB], added in 4, DEPRECATED\n\n}\n\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\n\nclass BitFieldReader {\n    private _bits: number[] = [];\n    private _readIndex: number = 0;\n\n    constructor(source: string, startIndex: number, stopIndex: number) {\n        for (let i: number = startIndex; i < stopIndex; i++) {\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\n            this._bits.push((value >> 5) & 0x1);\n            this._bits.push((value >> 4) & 0x1);\n            this._bits.push((value >> 3) & 0x1);\n            this._bits.push((value >> 2) & 0x1);\n            this._bits.push((value >> 1) & 0x1);\n            this._bits.push(value & 0x1);\n        }\n    }\n\n    public read(bitCount: number): number {\n        let result: number = 0;\n        while (bitCount > 0) {\n            result = result << 1;\n            result += this._bits[this._readIndex++];\n            bitCount--;\n        }\n        return result;\n    }\n\n    public readLongTail(minValue: number, minBits: number): number {\n        let result: number = minValue;\n        let numBits: number = minBits;\n        while (this._bits[this._readIndex++]) {\n            result += 1 << numBits;\n            numBits++;\n        }\n        while (numBits > 0) {\n            numBits--;\n            if (this._bits[this._readIndex++]) {\n                result += 1 << numBits;\n            }\n        }\n        return result;\n    }\n\n    public readPartDuration(): number {\n        return this.readLongTail(1, 3);\n    }\n\n    public readLegacyPartDuration(): number {\n        return this.readLongTail(1, 2);\n    }\n\n    public readPinCount(): number {\n        return this.readLongTail(1, 0);\n    }\n\n    public readPitchInterval(): number {\n        if (this.read(1)) {\n            return -this.readLongTail(1, 3);\n        } else {\n            return this.readLongTail(1, 3);\n        }\n    }\n}\n\nclass BitFieldWriter {\n    private _index: number = 0;\n    private _bits: number[] = [];\n\n    public clear() {\n        this._index = 0;\n    }\n\n    public write(bitCount: number, value: number): void {\n        bitCount--;\n        while (bitCount >= 0) {\n            this._bits[this._index++] = (value >>> bitCount) & 1;\n            bitCount--;\n        }\n    }\n\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\n        if (value < minValue) throw new Error(\"value out of bounds\");\n        value -= minValue;\n        let numBits: number = minBits;\n        while (value >= (1 << numBits)) {\n            this._bits[this._index++] = 1;\n            value -= 1 << numBits;\n            numBits++;\n        }\n        this._bits[this._index++] = 0;\n        while (numBits > 0) {\n            numBits--;\n            this._bits[this._index++] = (value >>> numBits) & 1;\n        }\n    }\n\n    public writePartDuration(value: number): void {\n        this.writeLongTail(1, 3, value);\n    }\n\n    public writePinCount(value: number): void {\n        this.writeLongTail(1, 0, value);\n    }\n\n    public writePitchInterval(value: number): void {\n        if (value < 0) {\n            this.write(1, 1); // sign\n            this.writeLongTail(1, 3, -value);\n        } else {\n            this.write(1, 0); // sign\n            this.writeLongTail(1, 3, value);\n        }\n    }\n\n    public concat(other: BitFieldWriter): void {\n        for (let i: number = 0; i < other._index; i++) {\n            this._bits[this._index++] = other._bits[i];\n        }\n    }\n\n    public encodeBase64(buffer: number[]): number[] {\n\n        for (let i: number = 0; i < this._index; i += 6) {\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\n            buffer.push(base64IntToCharCode[value]);\n        }\n        return buffer;\n    }\n\n    public lengthBase64(): number {\n        return Math.ceil(this._index / 6);\n    }\n}\n\nexport interface NotePin {\n    interval: number;\n    time: number;\n    size: number;\n}\n\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\n    return { interval: interval, time: time, size: size };\n}\n\nexport class Note {\n    public pitches: number[];\n    public pins: NotePin[];\n    public start: number;\n    public end: number;\n    public continuesLastPattern: boolean;\n\n    public constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\n        this.pitches = [pitch];\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\n        this.start = start;\n        this.end = end;\n        this.continuesLastPattern = false;\n    }\n\n    public pickMainInterval(): number {\n        let longestFlatIntervalDuration: number = 0;\n        let mainInterval: number = 0;\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\n            const pinA: NotePin = this.pins[pinIndex - 1];\n            const pinB: NotePin = this.pins[pinIndex];\n            if (pinA.interval == pinB.interval) {\n                const duration: number = pinB.time - pinA.time;\n                if (longestFlatIntervalDuration < duration) {\n                    longestFlatIntervalDuration = duration;\n                    mainInterval = pinA.interval;\n                }\n            }\n        }\n        if (longestFlatIntervalDuration == 0) {\n            let loudestSize: number = 0;\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\n                const pin: NotePin = this.pins[pinIndex];\n                if (loudestSize < pin.size) {\n                    loudestSize = pin.size;\n                    mainInterval = pin.interval;\n                }\n            }\n        }\n        return mainInterval;\n    }\n\n    public clone(): Note {\n        const newNote: Note = new Note(-1, this.start, this.end, 3);\n        newNote.pitches = this.pitches.concat();\n        newNote.pins = [];\n        for (const pin of this.pins) {\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n        }\n        newNote.continuesLastPattern = this.continuesLastPattern;\n        return newNote;\n    }\n\n    public getEndPinIndex(part: number): number {\n        let endPinIndex: number;\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\n            if (this.pins[endPinIndex].time + this.start > part) break;\n        }\n        return endPinIndex;\n    }\n}\n\nexport class Pattern {\n    public notes: Note[] = [];\n    public readonly instruments: number[] = [0];\n\n    public cloneNotes(): Note[] {\n        const result: Note[] = [];\n        for (const note of this.notes) {\n            result.push(note.clone());\n        }\n        return result;\n    }\n\n    public reset(): void {\n        this.notes.length = 0;\n        this.instruments[0] = 0;\n        this.instruments.length = 1;\n    }\n\n    public toJsonObject(song: Song, channel: Channel, isModChannel: boolean): any {\n        const noteArray: Object[] = [];\n        for (const note of this.notes) {\n            // Only one ins per pattern is enforced in mod channels.\n            let instrument: Instrument = channel.instruments[this.instruments[0]];\n            let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\n            let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n            const pointArray: Object[] = [];\n            for (const pin of note.pins) {\n                let useVol: number = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\n                pointArray.push({\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\n                    \"pitchBend\": pin.interval,\n                    \"volume\": useVol,\n                    \"forMod\": isModChannel,\n                });\n            }\n\n            const noteObject: any = {\n                \"pitches\": note.pitches,\n                \"points\": pointArray,\n            };\n            if (note.start == 0) {\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\n            }\n            noteArray.push(noteObject);\n        }\n\n        const patternObject: any = { \"notes\": noteArray };\n        if (song.patternInstruments) {\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\n        }\n        return patternObject;\n    }\n\n    public fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean, isModChannel: boolean): void {\n        if (song.patternInstruments) {\n            if (Array.isArray(patternObject[\"instruments\"])) {\n                const instruments: any[] = patternObject[\"instruments\"];\n                const instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\n                for (let j: number = 0; j < instrumentCount; j++) {\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\n                }\n                this.instruments.length = instrumentCount;\n            } else {\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\n                this.instruments.length = 1;\n            }\n        }\n\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\n            const maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\n\n            // TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\n            //let tickClock: number = 0;\n            for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\n                if (j >= maxNoteCount) break;\n\n                const noteObject = patternObject[\"notes\"][j];\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\n                    continue;\n                }\n\n                const note: Note = new Note(0, 0, 0, 0);\n                note.pitches = [];\n                note.pins = [];\n\n                for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\n                    const pitch: number = noteObject[\"pitches\"][k] | 0;\n                    if (note.pitches.indexOf(pitch) != -1) continue;\n                    note.pitches.push(pitch);\n                    if (note.pitches.length >= Config.maxChordSize) break;\n                }\n                if (note.pitches.length < 1) continue;\n\n                //let noteClock: number = tickClock;\n                let startInterval: number = 0;\n                for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\n                    const pointObject: any = noteObject[\"points\"][k];\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\n                    const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\n\n                    const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\n\n                    let instrument: Instrument = channel.instruments[this.instruments[0]];\n                    let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\n\n                    // Only one instrument per pattern allowed in mod channels.\n                    let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n\n                    // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\n                    // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\n                    let size: number;\n                    if (pointObject[\"volume\"] == undefined) {\n                        size = volumeCap;\n                    } else if (pointObject[\"forMod\"] == undefined) {\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    else {\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n\n                    if (time > song.beatsPerBar * Config.partsPerBeat) continue;\n                    if (note.pins.length == 0) {\n                        //if (time < noteClock) continue;\n                        note.start = time;\n                        startInterval = interval;\n                    } else {\n                        //if (time <= noteClock) continue;\n                    }\n                    //noteClock = time;\n\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\n                }\n                if (note.pins.length < 2) continue;\n\n                note.end = note.pins[note.pins.length - 1].time + note.start;\n\n                const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n                let lowestPitch: number = maxPitch;\n                let highestPitch: number = 0;\n                for (let k: number = 0; k < note.pitches.length; k++) {\n                    note.pitches[k] += startInterval;\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\n                        note.pitches.splice(k, 1);\n                        k--;\n                    }\n                    if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\n                    if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\n                }\n                if (note.pitches.length < 1) continue;\n\n                for (let k: number = 0; k < note.pins.length; k++) {\n                    const pin: NotePin = note.pins[k];\n                    if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\n                    if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\n                    if (k >= 2) {\n                        if (pin.interval == note.pins[k - 1].interval &&\n                            pin.interval == note.pins[k - 2].interval &&\n                            pin.size == note.pins[k - 1].size &&\n                            pin.size == note.pins[k - 2].size) {\n                            note.pins.splice(k - 1, 1);\n                            k--;\n                        }\n                    }\n                }\n\n                if (note.start == 0) {\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\n                } else {\n                    note.continuesLastPattern = false;\n                }\n\n                this.notes.push(note);\n            }\n        }\n    }\n}\n\nexport class Operator {\n    public frequency: number = 4;\n    public amplitude: number = 0;\n    public waveform: number = 0;\n    public pulseWidth: number = 0.5;\n\n    constructor(index: number) {\n        this.reset(index);\n    }\n\n    public reset(index: number): void {\n        this.frequency = 4; //defualt to 1x\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\n        this.waveform = 0;\n        this.pulseWidth = 5;\n    }\n\n    public copy(other: Operator): void {\n        this.frequency = other.frequency;\n        this.amplitude = other.amplitude;\n        this.waveform = other.waveform;\n        this.pulseWidth = other.pulseWidth;\n    }\n}\n\nexport class CustomAlgorithm {\n    public name: string = \"\";\n    public carrierCount: number = 0;\n    public modulatedBy: number[][] = [[], [], [], [], [], []];\n    public associatedCarrier: number[] = [];\n\n    constructor(){\n        this.fromPreset(1);\n    }\n\n    public set(carriers: number, modulation: number[][]) {\n        this.reset();\n        this.carrierCount = carriers;\n        for (let i = 0; i < this.modulatedBy.length; i++) {\n            this.modulatedBy[i] = modulation[i];\n            if (i < carriers) {\n                this.associatedCarrier[i] = i+1;\n            }\n            this.name += (i+1);\n            for (let j = 0; j < modulation[i].length;j++) {\n                this.name += modulation[i][j];\n                if (modulation[i][j] > carriers-1) {\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\n                }\n                this.name += \",\";\n            }\n            if (i < carriers) {\n                this.name += \"|\";\n            } else {\n                this.name += \".\";\n            }\n        }\n    }\n\n    public reset(): void {\n        this.name = \"\"\n        this.carrierCount = 1;\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\n    }\n\n    public copy(other: CustomAlgorithm): void {\n        this.name = other.name;\n        this.carrierCount = other.carrierCount;\n        this.modulatedBy = other.modulatedBy;\n        this.associatedCarrier = other.associatedCarrier;\n    }\n\n    public fromPreset(other: number): void {\n        this.reset();\n        let preset = Config.algorithms6Op[other]\n        this.name = preset.name;\n        this.carrierCount = preset.carrierCount;\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\n        }\n    }\n}\n\nexport class CustomFeedBack { //feels redunant\n    public name: string = \"\";\n    public indices: number[][] = [[], [], [], [], [], []];\n\n    constructor() {\n        this.fromPreset(1);\n    }\n\n    public set(inIndices: number[][]) {\n        this.reset();\n        for (let i = 0; i < this.indices.length; i++) {\n            this.indices[i] = inIndices[i];\n            for (let j = 0; j < inIndices[i].length; j++) {\n                this.name += inIndices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n\n    public reset(): void {\n        this.reset;\n        this.name = \"\";\n        this.indices = [[1], [], [], [], [], []];\n    }\n\n    public copy(other: CustomFeedBack): void {\n        this.name = other.name;\n        this.indices = other.indices;\n    }\n\n    public fromPreset(other: number): void {\n        this.reset();\n        let preset = Config.feedbacks6Op[other]\n        for (var i = 0; i < preset.indices.length; i++) {\n            this.indices[i] = Array.from(preset.indices[i]);\n            for (let j = 0; j < preset.indices[i].length; j++) {\n                this.name += preset.indices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n}\n\nexport class SpectrumWave {\n    public spectrum: number[] = [];\n    public hash: number = -1;\n\n    constructor(isNoiseChannel: boolean) {\n        this.reset(isNoiseChannel);\n    }\n\n    public reset(isNoiseChannel: boolean): void {\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n            if (isNoiseChannel) {\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\n            } else {\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\n            }\n        }\n        this.markCustomWaveDirty();\n    }\n\n    public markCustomWaveDirty(): void {\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\n        let hash: number = 0;\n        for (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\n\nclass SpectrumWaveState {\n    public wave: Float32Array | null = null;\n    private _hash: number = -1;\n\n    public getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\n        if (this._hash == settings.hash) return this.wave!;\n        this._hash = settings.hash;\n\n        const waveLength: number = Config.spectrumNoiseLength;\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave: Float32Array = this.wave;\n\n        for (let i: number = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n\n        const highestOctave: number = 14;\n        const falloffRatio: number = 0.25;\n        // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\n        const pitchTweak: number[] = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\n        function controlPointToOctave(point: number): number {\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\n        }\n\n        let combinedAmplitude: number = 1;\n        for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\n            const value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\n            const value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\n            const octave1: number = controlPointToOctave(i - 1);\n            let octave2: number = controlPointToOctave(i);\n            if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\n            if (value1 == 0 && value2 == 0) continue;\n\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\n        }\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\n        }\n\n        inverseRealFourierTransform(wave, waveLength);\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\n\n        // Duplicate the first sample at the end for easier wrap-around interpolation.\n        wave[waveLength] = wave[0];\n\n        return wave;\n    }\n}\n\nexport class HarmonicsWave {\n    public harmonics: number[] = [];\n    public hash: number = -1;\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n            this.harmonics[i] = 0;\n        }\n        this.harmonics[0] = Config.harmonicsMax;\n        this.harmonics[3] = Config.harmonicsMax;\n        this.harmonics[6] = Config.harmonicsMax;\n        this.markCustomWaveDirty();\n    }\n\n    public markCustomWaveDirty(): void {\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\n        let hash: number = 0;\n        for (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\n\nclass HarmonicsWaveState {\n    public wave: Float32Array | null = null;\n    private _hash: number = -1;\n    private _generatedForType: InstrumentType;\n\n    public getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\n        if (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\n        this._hash = settings.hash;\n        this._generatedForType = instrumentType;\n\n        const harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\n\n        const waveLength: number = Config.harmonicsWavelength;\n        const retroWave: Float32Array = getDrumWave(0, null, null);\n\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave: Float32Array = this.wave;\n\n        for (let i: number = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n\n        const overallSlope: number = -0.25;\n        let combinedControlPointAmplitude: number = 1;\n\n        for (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\n            const harmonicFreq: number = harmonicIndex + 1;\n            let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\n            }\n            const normalizedValue: number = controlValue / Config.harmonicsMax;\n            let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\n            if (harmonicIndex < Config.harmonicsControlPoints) {\n                combinedControlPointAmplitude += amplitude;\n            }\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\n\n            // Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\n            // retro wave (effectively random) to avoid egregiously tall spikes.\n            amplitude *= retroWave[harmonicIndex + 589];\n\n            wave[waveLength - harmonicFreq] = amplitude;\n        }\n\n        inverseRealFourierTransform(wave, waveLength);\n\n        // Limit the maximum wave amplitude.\n        const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\n        for (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\n\n        performIntegralOld(wave);\n\n        // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n        wave[waveLength] = wave[0];\n\n        return wave;\n    }\n}\n\nexport class FilterControlPoint {\n    public freq: number = 0;\n    public gain: number = Config.filterGainCenter;\n    public type: FilterType = FilterType.peak;\n\n    public set(freqSetting: number, gainSetting: number): void {\n        this.freq = freqSetting;\n        this.gain = gainSetting;\n    }\n\n    public getHz(): number {\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\n    }\n\n    public static getHzFromSettingValue(value: number): number {\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\n    }\n    public static getSettingValueFromHz(hz: number): number {\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\n    }\n    public static getRoundedSettingValueFromHz(hz: number): number {\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\n    }\n\n    public getLinearGain(peakMult: number = 1.0): number {\n        const power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        const neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\n        const interpolatedPower: number = neutral + (power - neutral) * peakMult;\n        return Math.pow(2.0, interpolatedPower);\n    }\n    public static getRoundedSettingValueFromLinearGain(linearGain: number): number {\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\n    }\n\n    public toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\n        const cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\n        const linearGain: number = this.getLinearGain(peakMult);\n        switch (this.type) {\n            case FilterType.lowPass:\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case FilterType.highPass:\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case FilterType.peak:\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\n                break;\n            default:\n                throw new Error();\n        }\n    }\n\n    public getVolumeCompensationMult(): number {\n        const octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\n        const gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        switch (this.type) {\n            case FilterType.lowPass:\n                const freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\n                // Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\n                const warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\n                const warpedOctave: number = Math.log2(warpedFreq);\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\n            case FilterType.highPass:\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\n            case FilterType.peak:\n                const distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\n                const freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\n            default:\n                throw new Error();\n        }\n    }\n}\n\nexport class FilterSettings {\n    public readonly controlPoints: FilterControlPoint[] = [];\n    public controlPointCount: number = 0;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset(): void {\n        this.controlPointCount = 0;\n    }\n\n    addPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\n        let controlPoint: FilterControlPoint;\n        if (this.controlPoints.length <= this.controlPointCount) {\n            controlPoint = new FilterControlPoint();\n            this.controlPoints[this.controlPointCount] = controlPoint;\n        } else {\n            controlPoint = this.controlPoints[this.controlPointCount];\n        }\n        this.controlPointCount++;\n        controlPoint.type = type;\n        controlPoint.set(freqSetting, gainSetting);\n    }\n\n    public toJsonObject(): Object {\n        const filterArray: any[] = [];\n        for (let i: number = 0; i < this.controlPointCount; i++) {\n            const point: FilterControlPoint = this.controlPoints[i];\n            filterArray.push({\n                \"type\": Config.filterTypeNames[point.type],\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\n            });\n        }\n        return filterArray;\n    }\n\n    public fromJsonObject(filterObject: any): void {\n        this.controlPoints.length = 0;\n        if (filterObject) {\n            for (const pointObject of filterObject) {\n                const point: FilterControlPoint = new FilterControlPoint();\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\n                if (<any>point.type == -1) point.type = FilterType.peak;\n                if (pointObject[\"cutoffHz\"] != undefined) {\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\n                } else {\n                    point.freq = 0;\n                }\n                if (pointObject[\"linearGain\"] != undefined) {\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\n                } else {\n                    point.gain = Config.filterGainCenter;\n                }\n                this.controlPoints.push(point);\n            }\n        }\n        this.controlPointCount = this.controlPoints.length;\n    }\n\n    // Returns true if all filter control points match in number and type (but not freq/gain)\n    public static filtersCanMorph(filterA: FilterSettings, filterB: FilterSettings): boolean {\n        if (filterA.controlPointCount != filterB.controlPointCount)\n            return false;\n        for (let i: number = 0; i < filterA.controlPointCount; i++) {\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\n                return false;\n        }\n        return true;\n    }\n\n    // Interpolate two FilterSettings, where pos=0 is filterA and pos=1 is filterB\n    public static lerpFilters(filterA: FilterSettings, filterB: FilterSettings, pos: number): FilterSettings {\n\n        let lerpedFilter: FilterSettings = new FilterSettings();\n\n        // One setting or another is null, return the other.\n        if (filterA == null) {\n            return filterA;\n        }\n        if (filterB == null) {\n            return filterB;\n        }\n\n        pos = Math.max(0, Math.min(1, pos));\n\n        // Filter control points match in number and type\n        if (this.filtersCanMorph(filterA, filterB)) {\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\n            }\n\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\n\n            return lerpedFilter;\n        }\n        else {\n            // Not allowing morph of unmatching filters for now. It's a hornet's nest of problems, and I had it implemented and mostly working and it didn't sound very interesting since the shape becomes \"mushy\" in between\n            return (pos >= 1) ? filterB : filterA;\n        }\n        /* \n        // Filter control points do not match. Take all filterA points and move them to neutral at pos=1 (gain 7 for normal points, slide to edge and gain 7 for lo/hipass),\n        // and do the opposite for filterB points. Return a filter with points for both.\n        else {\n            let lerpedFilter: FilterSettings = new FilterSettings();\n            // Filter A's morph points\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (Config.filterGainCenter - filterA.controlPoints[i].gain) * pos;\n\n                if (filterA.controlPoints[i].type == FilterType.peak) {\n                    lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq;\n                }\n                else if (filterA.controlPoints[i].type == FilterType.highPass) {\n                    lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq * (1 - pos);\n                }\n                else {\n                    lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + ((Config.filterFreqRange - 1) - filterA.controlPoints[i].freq) * pos;\n                }\n            }\n            // Filter B's morph points\n            for (let i: number = 0, j: number = filterA.controlPointCount; i < filterB.controlPointCount; i++, j++) {\n                lerpedFilter.controlPoints[j] = new FilterControlPoint();\n                lerpedFilter.controlPoints[j].type = filterB.controlPoints[i].type;\n                lerpedFilter.controlPoints[j].gain = filterB.controlPoints[i].gain + (Config.filterGainCenter - filterB.controlPoints[i].gain) * (1 - pos);\n\n                if (filterB.controlPoints[i].type == FilterType.peak) {\n                    lerpedFilter.controlPoints[j].freq = filterB.controlPoints[i].freq;\n                }\n                else if (filterB.controlPoints[i].type == FilterType.highPass) {\n                    lerpedFilter.controlPoints[j].freq = filterB.controlPoints[i].freq * pos;\n                }\n                else {\n                    lerpedFilter.controlPoints[j].freq = filterB.controlPoints[i].freq + ((Config.filterFreqRange - 1) - filterB.controlPoints[i].freq) * (1 - pos);\n                }\n            }\n\n            lerpedFilter.controlPointCount = filterA.controlPointCount + filterB.controlPointCount;\n\n            return lerpedFilter;\n        }\n        */\n    }\n\n    public convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\n        this.reset();\n\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n        const legacyFilterMax: number = 0.95;\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance: number = 0.95;\n        const legacyFilterCutoffRange: number = 11;\n        const legacyFilterResonanceRange: number = 8;\n\n        const resonant: boolean = (legacyResonanceSetting > 1);\n        const firstOrder: boolean = (legacyResonanceSetting == 0);\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        const envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\n\n        const standardSampleRate: number = 48000;\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\n        if (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\n            // The response is flat and there's no envelopes, so don't even bother adding any control points.\n        } else if (firstOrder) {\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n            // However, BeepBox's original lowpass filters behaved oddly as they\n            // approach the nyquist frequency, so I've devised this curved conversion\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\n            const extraOctaves: number = 3.5;\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\n\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n            // Bias slightly toward 2^(-extraOctaves):\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            // Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\n            if (envDecays) logGain = Math.min(logGain, -1.0);\n            const convertedGain: number = Math.pow(2.0, logGain);\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        } else {\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain: number = 0.5 / intendedGain;\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio: number = legacyRadians / maxRadians;\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz: number;\n            if (envDecays) {\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\n            } else {\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            }\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n\n            let legacyFilterGain: number;\n            if (envDecays) {\n                legacyFilterGain = intendedGain;\n            } else {\n                const legacyFilter: FilterCoefficients = new FilterCoefficients();\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n                const response: FrequencyResponse = new FrequencyResponse();\n                response.analyze(legacyFilter, curvedRadians);\n                legacyFilterGain = response.magnitude();\n            }\n            if (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        }\n\n        // Added for JummBox - making a 0 point filter does not truncate control points!\n        this.controlPoints.length = this.controlPointCount;\n    }\n\n    // Similar to above, but purpose-fit for quick conversions in synth calls.\n    public convertLegacySettingsForSynth(legacyCutoffSetting: number, legacyResonanceSetting: number, allowFirstOrder: boolean = false): void {\n        this.reset();\n\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n        const legacyFilterMax: number = 0.95;\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance: number = 0.95;\n        const legacyFilterCutoffRange: number = 11;\n        const legacyFilterResonanceRange: number = 8;\n\n        const firstOrder: boolean = (legacyResonanceSetting == 0 && allowFirstOrder);\n        const standardSampleRate: number = 48000;\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\n        if (firstOrder) {\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n            // However, BeepBox's original lowpass filters behaved oddly as they\n            // approach the nyquist frequency, so I've devised this curved conversion\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\n            const extraOctaves: number = 3.5;\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\n\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n            // Bias slightly toward 2^(-extraOctaves):\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            const convertedGain: number = Math.pow(2.0, logGain);\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        } else {\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain: number = 0.5 / intendedGain;\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio: number = legacyRadians / maxRadians;\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz: number;\n\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting: number = FilterControlPoint.getSettingValueFromHz(curvedHz);\n\n            let legacyFilterGain: number;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, curvedRadians);\n            legacyFilterGain = response.magnitude();\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        }\n\n    }\n}\n\nexport class EnvelopeSettings {\n    public target: number = 0;\n    public index: number = 0;\n    public envelope: number = 0;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset(): void {\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n    }\n\n    public toJsonObject(): Object {\n        const envelopeObject: any = {\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\n            \"envelope\": Config.envelopes[this.envelope].name,\n        };\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\n            envelopeObject[\"index\"] = this.index;\n        }\n        return envelopeObject;\n    }\n\n    public fromJsonObject(envelopeObject: any): void {\n        this.reset();\n\n        let target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\n        if (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n        this.target = target.index;\n\n        let envelope: Envelope = Config.envelopes.dictionary[envelopeObject[\"envelope\"]];\n        if (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\n        this.envelope = envelope.index;\n\n        if (envelopeObject[\"index\"] != undefined) {\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\n        } else {\n            this.index = 0;\n        }\n    }\n}\n\n// Settings that were available to old versions of BeepBox but are no longer available in the\n// current version that need to be reinterpreted as a group to determine the best way to\n// represent them in the current version.\ninterface LegacySettings {\n    filterCutoff?: number;\n    filterResonance?: number;\n    filterEnvelope?: Envelope;\n    pulseEnvelope?: Envelope;\n    operatorEnvelopes?: Envelope[];\n    feedbackEnvelope?: Envelope;\n}\n\nexport class Instrument {\n    public type: InstrumentType = InstrumentType.chip;\n    public preset: number = 0;\n    public chipWave: number = 2;\n\t// advloop addition\n\tpublic isUsingAdvancedLoopControls: boolean = false;\n\tpublic chipWaveLoopStart: number = 0;\n\tpublic chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n\tpublic chipWaveLoopMode: number = 0; // 0: loop, 1: ping-pong, 2: once, 3: play loop once\n\tpublic chipWavePlayBackwards: boolean = false;\n        public chipWaveStartOffset: number = 0;\n        // advloop addition\n    public chipNoise: number = 1;\n    public eqFilter: FilterSettings = new FilterSettings();\n    public eqFilterType: boolean = false;\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public eqFilterSimplePeak: number = 0;\n    public noteFilter: FilterSettings = new FilterSettings();\n    public noteFilterType: boolean = false;\n    public noteFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public noteFilterSimplePeak: number = 0;\n    public eqSubFilters: (FilterSettings | null)[] = [];\n    public noteSubFilters: (FilterSettings | null)[] = [];\n    public tmpEqFilterStart: FilterSettings | null;\n    public tmpEqFilterEnd: FilterSettings | null;\n    public tmpNoteFilterStart: FilterSettings | null;\n    public tmpNoteFilterEnd: FilterSettings | null;\n    public envelopes: EnvelopeSettings[] = [];\n    public fadeIn: number = 0;\n    public fadeOut: number = Config.fadeOutNeutral;\n    public envelopeCount: number = 0;\n    public transition: number = Config.transitions.dictionary[\"normal\"].index;\n    public pitchShift: number = 0;\n    public detune: number = 0;\n    public vibrato: number = 0;\n    public interval: number = 0;\n    public vibratoDepth: number = 0;\n    public vibratoSpeed: number = 10;\n    public vibratoDelay: number = 0;\n    public vibratoType: number = 0;\n    public unison: number = 0;\n    public unisonVoices: number = 1;\n    public unisonSpread: number = 0.0;\n    public unisonOffset: number = 0.0;\n    public unisonExpression: number = 1.4;\n    public unisonSign: number = 1.0;\n    public effects: number = 0;\n    public chord: number = 1;\n    public volume: number = 0;\n    public pan: number = Config.panCenter;\n    public panDelay: number = 10;\n    public arpeggioSpeed: number = 12;\n    public fastTwoNoteArp: boolean = false;\n    public legacyTieOver: boolean = false;\n    public clicklessTransition: boolean = false;\n    public aliases: boolean = false;\n    public pulseWidth: number = Config.pulseWidthRange;\n    public decimalOffset: number = 0;\n    public stringSustain: number = 10;\n    public distortion: number = 0;\n    public bitcrusherFreq: number = 0;\n    public bitcrusherQuantization: number = 0;\n    public chorus: number = 0;\n    public reverb: number = 0;\n    public echoSustain: number = 0;\n    public echoDelay: number = 0;\n    public algorithm: number = 0;\n    public feedbackType: number = 0;\n    public algorithm6Op: number = 1;\n    public feedbackType6Op: number = 1;//default to not custom\n    public customAlgorithm: CustomAlgorithm = new CustomAlgorithm(); //{ name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] };\n    public customFeedbackType: CustomFeedBack = new CustomFeedBack(); //{ name: \"1↔4 2↔5 3↔6\", indices: [[3], [5], [6], [1], [2], [3]] };\n    public feedbackAmplitude: number = 0;\n    public LFOtime: number = 0;\n    public nextLFOtime: number = 0;\n    public arpTime: number = 0;\n    public customChipWave: Float32Array = new Float32Array(64);\n    public customChipWaveIntegral: Float32Array = new Float32Array(65); // One extra element for wrap-around in chipSynth.\n    public readonly operators: Operator[] = [];\n    public readonly spectrumWave: SpectrumWave;\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\n    public readonly drumsetEnvelopes: number[] = [];\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\n    public modChannels: number[] = [];\n    public modInstruments: number[] = [];\n    public modulators: number[] = [];\n    public modFilterTypes: number[] = [];\n    public invalidModulators: boolean[] = [];\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\n\n        if (isModChannel) {\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                this.modChannels.push(0);\n                this.modInstruments.push(0);\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n            }\n        }\n\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {//hopefully won't break everything\n            this.operators[i] = new Operator(i);\n        }\n        for (let i: number = 0; i < Config.drumCount; i++) {\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n        }\n\n        for (let i = 0; i < 64; i++) {\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\n        }\n\n        let sum: number = 0.0;\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\n            sum += this.customChipWave[i];\n        }\n        const average: number = sum / this.customChipWave.length;\n\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n        let cumulative: number = 0;\n        let wavePrev: number = 0;\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\n            cumulative += wavePrev;\n            wavePrev = this.customChipWave[i] - average;\n            this.customChipWaveIntegral[i] = cumulative;\n        }\n\n        // 65th, last sample is for anti-aliasing\n        this.customChipWaveIntegral[64] = 0.0;\n\n    }\n\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\n        // Mod channels are forced to one type.\n        if (isModChannel) type = InstrumentType.mod;\n        this.type = type;\n        this.preset = type;\n        this.volume = 0;\n        this.effects = (1 << EffectType.panning); // Panning enabled by default in JB.\n        this.chorus = Config.chorusRange - 1;\n        this.reverb = 0;\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\n        this.eqFilter.reset();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n            this.eqSubFilters[i] = null;\n            this.noteSubFilters[i] = null;\n        }\n        this.noteFilter.reset();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\n        this.pan = Config.panCenter;\n        this.panDelay = 10;\n        this.pitchShift = Config.pitchShiftCenter;\n        this.detune = Config.detuneCenter;\n        this.vibrato = 0;\n        this.unison = 0;\n        this.stringSustain = 10;\n        this.clicklessTransition = false;\n        this.arpeggioSpeed = 12;\n        this.legacyTieOver = false;\n        this.aliases = false;\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.envelopeCount = 0;\n        switch (type) {\n            case InstrumentType.chip:\n                this.chipWave = 2;\n                // TODO: enable the chord effect?\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\t\t\t\t\t // advloop addition\n                    this.isUsingAdvancedLoopControls = false;\n                    this.chipWaveLoopStart = 0;\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                    this.chipWaveLoopMode = 0;\n                    this.chipWavePlayBackwards = false;\n                    this.chipWaveStartOffset = 0;\n                    // advloop addition\n                break;\n            case InstrumentType.customChipWave:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                for (let i: number = 0; i < 64; i++) {\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\n                }\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average: number = sum / this.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n\n                this.customChipWaveIntegral[64] = 0.0;\n                break;\n            case InstrumentType.fm:\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.feedbackAmplitude = 0;\n                for (let i: number = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case InstrumentType.fm6op:\n                this.transition = 1;\n                this.vibrato = 0;\n                this.effects = 1;\n                this.chord = 3;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.algorithm6Op = 1;\n                this.feedbackType6Op = 1;\n                this.customAlgorithm.fromPreset(1);\n                this.feedbackAmplitude = 0;\n                for (let i: number = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case InstrumentType.noise:\n                this.chipNoise = 1;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                break;\n            case InstrumentType.spectrum:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.spectrumWave.reset(isNoiseChannel);\n                break;\n            case InstrumentType.drumset:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                for (let i: number = 0; i < Config.drumCount; i++) {\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n                    }\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\n                }\n                break;\n            case InstrumentType.harmonics:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case InstrumentType.pwm:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.pulseWidth = Config.pulseWidthRange;\n                break;\n            case InstrumentType.pickedString:\n                this.chord = Config.chords.dictionary[\"strum\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case InstrumentType.mod:\n                this.transition = 0;\n                this.vibrato = 0;\n                this.interval = 0;\n                this.effects = 0;\n                this.chord = 0;\n                this.modChannels = [];\n                this.modInstruments = [];\n                this.modulators = [];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    this.modChannels.push(-2);\n                    this.modInstruments.push(0);\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n                    this.invalidModulators[mod] = false;\n                    this.modFilterTypes[mod] = 0;\n                }\n                break;\n            default:\n                throw new Error(\"Unrecognized instrument type: \" + type);\n        }\n        // Chip/noise instruments had arpeggio and FM had custom interval but neither\n        // explicitly saved the chorus setting beforeSeven so enable it here. The effects\n        // will otherwise get overridden when reading SongTagCode.startInstrument.\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n            // Enable chord if it was used.\n            this.effects = (this.effects | (1 << EffectType.chord));\n        }\n    }\n\n    // (only) difference for JummBox: Returns whether or not the note filter was chosen for filter conversion.\n    public convertLegacySettings(legacySettings: LegacySettings, forceSimpleFilter: boolean): void {\n        let legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\n        let legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\n        let legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\n        let legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\n        let legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\n        let legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\n\n        // legacy defaults:\n        if (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\n        if (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\n        if (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        if (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\n        if (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\n        if (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\n\n        // The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\n        const legacyFilterCutoffRange: number = 11;\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        if (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n\n        const carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\n        let noCarriersControlledByNoteSize: boolean = true;\n        let allCarriersControlledByNoteSize: boolean = true;\n        let noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\n        if (this.type == InstrumentType.fm) {\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\n            for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n                if (i < carrierCount) {\n                    if (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\n                        allCarriersControlledByNoteSize = false;\n                    } else {\n                        noCarriersControlledByNoteSize = false;\n                    }\n                } else {\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\n                }\n            }\n        }\n\n        this.envelopeCount = 0;\n\n        if (this.type == InstrumentType.fm) {\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\n            } else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\n            }\n        }\n\n        if (legacyFilterEnv.type == EnvelopeType.none) {\n            this.noteFilter.reset();\n            this.noteFilterType = false;\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects &= ~(1 << EffectType.noteFilter);\n            if (forceSimpleFilter || this.eqFilterType) {\n                this.eqFilterType = true;\n                this.eqFilterSimpleCut = legacyCutoffSetting;\n                this.eqFilterSimplePeak = legacyResonanceSetting;\n            }\n        } else {\n            this.eqFilter.reset();\n\n            this.eqFilterType = false;\n            this.noteFilterType = false;\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects |= 1 << EffectType.noteFilter;\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index);\n            if (forceSimpleFilter || this.noteFilterType) {\n                this.noteFilterType = true;\n                this.noteFilterSimpleCut = legacyCutoffSetting;\n                this.noteFilterSimplePeak = legacyResonanceSetting;\n            }\n        }\n\n        if (legacyPulseEnv.type != EnvelopeType.none) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index);\n        }\n\n        for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n            if (i < carrierCount && allCarriersControlledByNoteSize) continue;\n            if (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index);\n            }\n        }\n\n        if (legacyFeedbackEnv.type != EnvelopeType.none) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index);\n        }\n    }\n\n    public toJsonObject(): Object {\n        const instrumentObject: any = {\n            \"type\": Config.instrumentTypeNames[this.type],\n            \"volume\": this.volume,\n            \"eqFilter\": this.eqFilter.toJsonObject(),\n            \"eqFilterType\": this.eqFilterType,\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\n            \"eqSimplePeak\": this.eqFilterSimplePeak\n        };\n\n        if (this.preset != this.type) {\n            instrumentObject[\"preset\"] = this.preset;\n        }\n\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n            if (this.eqSubFilters[i] != null)\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i]!.toJsonObject();\n        }\n\n        const effects: string[] = [];\n        for (const effect of Config.effectOrder) {\n            if (this.effects & (1 << effect)) {\n                effects.push(Config.effectNames[effect]);\n            }\n        }\n        instrumentObject[\"effects\"] = effects;\n\n\n        if (effectsIncludeTransition(this.effects)) {\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\n        }\n        if (effectsIncludeChord(this.effects)) {\n            instrumentObject[\"chord\"] = this.getChord().name;\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\n        }\n        if (effectsIncludePitchShift(this.effects)) {\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\n        }\n        if (effectsIncludeDetune(this.effects)) {\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\n        }\n        if (effectsIncludeVibrato(this.effects)) {\n            if (this.vibrato == -1) {\n                this.vibrato = 5;\n            }\n            if (this.vibrato != 5) {\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\n            } else {\n                instrumentObject[\"vibrato\"] = \"custom\";\n            }\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\n        }\n        if (effectsIncludeNoteFilter(this.effects)) {\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\n\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null)\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i]!.toJsonObject();\n            }\n        }\n        if (effectsIncludeDistortion(this.effects)) {\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\n            instrumentObject[\"aliases\"] = this.aliases;\n        }\n        if (effectsIncludeBitcrusher(this.effects)) {\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\n        }\n        if (effectsIncludePanning(this.effects)) {\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\n            instrumentObject[\"panDelay\"] = this.panDelay;\n        }\n        if (effectsIncludeChorus(this.effects)) {\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\n        }\n        if (effectsIncludeEcho(this.effects)) {\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\n        }\n        if (effectsIncludeReverb(this.effects)) {\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\n        }\n\n        if (this.type != InstrumentType.drumset) {\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\n        }\n\n        if (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\n            instrumentObject[\"harmonics\"] = [];\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\n            }\n        }\n\n        if (this.type == InstrumentType.noise) {\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\n        } else if (this.type == InstrumentType.spectrum) {\n            instrumentObject[\"spectrum\"] = [];\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\n            }\n        } else if (this.type == InstrumentType.drumset) {\n            instrumentObject[\"drums\"] = [];\n            for (let j: number = 0; j < Config.drumCount; j++) {\n                const spectrum: number[] = [];\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\n                }\n                instrumentObject[\"drums\"][j] = {\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\n                    \"spectrum\": spectrum,\n                };\n            }\n        } else if (this.type == InstrumentType.chip) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            // should this unison pushing code be turned into a function..?\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;   \n            // these don't need to be pushed if custom unisons aren't being used\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n\n\t\t\t\t\t\t// advloop addition\n                instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\n                instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\n                instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\n                instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\n                instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\n                instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\n                // advloop addition\n        } else if (this.type == InstrumentType.pwm) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n        } else if (this.type == InstrumentType.pickedString) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\n        } else if (this.type == InstrumentType.harmonics) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        } else if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\n            const operatorArray: Object[] = [];\n            for (const operator of this.operators) {\n                operatorArray.push({\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\n                    \"amplitude\": operator.amplitude,\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\n                    \"pulseWidth\": operator.pulseWidth,\n                });\n            }\n            if(this.type == InstrumentType.fm){\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                instrumentObject[\"operators\"] = operatorArray;\n            } else {\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                if(this.algorithm6Op == 0){\n                    const customAlgorithm: any = {};\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\n                }\n                if(this.feedbackType6Op == 0){\n                    const customFeedback: any = {};\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\n                    instrumentObject[\"customFeedback\"] = customFeedback;\n                }\n\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n        } else if (this.type == InstrumentType.customChipWave) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\n            }\n        } else if (this.type == InstrumentType.mod) {\n            instrumentObject[\"modChannels\"] = [];\n            instrumentObject[\"modInstruments\"] = [];\n            instrumentObject[\"modSettings\"] = [];\n            instrumentObject[\"modStatuses\"] = [];\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\n            }\n        } else {\n            throw new Error(\"Unrecognized instrument type\");\n        }\n\n        const envelopes: any[] = [];\n        for (let i = 0; i < this.envelopeCount; i++) {\n            envelopes.push(this.envelopes[i].toJsonObject());\n        }\n        instrumentObject[\"envelopes\"] = envelopes;\n\n        return instrumentObject;\n    }\n\n\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean, legacyGlobalReverb: number = 0): void {\n        if (instrumentObject == undefined) instrumentObject = {};\n\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\n        if (<any>type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\n\n        if (instrumentObject[\"preset\"] != undefined) {\n            this.preset = instrumentObject[\"preset\"] >>> 0;\n        }\n\n        if (instrumentObject[\"volume\"] != undefined) {\n            this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\n        } else {\n            this.volume = 0;\n        }\n\n        if (Array.isArray(instrumentObject[\"effects\"])) {\n            let effects: number = 0;\n            for (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\n            }\n            this.effects = (effects & ((1 << EffectType.length) - 1));\n        } else {\n            // The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\n            const legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\n            if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\n        }\n\n        this.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\n        const transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\n        if (transitionProperty != undefined) {\n            let transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\n                const legacySettings = (<any>{\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    // Note that the old slide transition has the same name as a new slide transition that is different.\n                    // Only apply legacy settings if the instrument JSON was created before, based on the presence\n                    // of the fade in/out fields.\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                })[transitionProperty];\n                if (legacySettings != undefined) {\n                    transition = Config.transitions.dictionary[legacySettings.transition];\n                    // These may be overridden below.\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\n                }\n            }\n            if (transition != undefined) this.transition = transition.index;\n\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\n                // Enable transition if it was used.\n                this.effects = (this.effects | (1 << EffectType.transition));\n            }\n        }\n\n        // Overrides legacy settings in transition above.\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\n        }\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\n        }\n\n        {\n            // Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\n            const chordProperty: any = instrumentObject[\"chord\"];\n            const legacyChordNames: Dictionary<string> = { \"harmony\": \"simultaneous\" };\n            const chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\n            if (chord != undefined) {\n                this.chord = chord.index;\n            } else {\n                // Different instruments have different default chord types based on historical behaviour.\n                if (this.type == InstrumentType.noise) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                } else if (this.type == InstrumentType.pickedString) {\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\n                } else if (this.type == InstrumentType.chip) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                } else if (this.type == InstrumentType.fm||this.type == InstrumentType.fm6op) {\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                } else {\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                }\n            }\n        }\n\n        this.unison = Config.unisons.dictionary[\"none\"].index; // default value.\n        const unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\n        if (unisonProperty != undefined) {\n            const legacyChorusNames: Dictionary<string> = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\" };\n            const unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\n            if (unison != undefined) this.unison = unison.index;\n            if (unisonProperty == \"custom\") this.unison = Config.unisons.length;\n        }\n        //clamp these???\n        this.unisonVoices = (instrumentObject[\"unisonVoices\"] == undefined) ? Config.unisons[this.unison].voices : instrumentObject[\"unisonVoices\"];\n        this.unisonSpread = (instrumentObject[\"unisonSpread\"] == undefined) ? Config.unisons[this.unison].spread : instrumentObject[\"unisonSpread\"];\n        this.unisonOffset = (instrumentObject[\"unisonOffset\"] == undefined) ? Config.unisons[this.unison].offset : instrumentObject[\"unisonOffset\"];\n        this.unisonExpression = (instrumentObject[\"unisonExpression\"] == undefined) ? Config.unisons[this.unison].expression : instrumentObject[\"unisonExpression\"];\n        this.unisonSign = (instrumentObject[\"unisonSign\"] == undefined) ? Config.unisons[this.unison].sign : instrumentObject[\"unisonSign\"];\n\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\n            // Enable chord if it was used.\n            this.effects = (this.effects | (1 << EffectType.chord));\n        }\n\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\n        }\n        if (instrumentObject[\"detuneCents\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\n        }\n\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\n        const vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\n        if (vibratoProperty != undefined) {\n\n            const legacyVibratoNames: Dictionary<string> = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\n            const vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\n            if (vibrato != undefined)\n                this.vibrato = vibrato.index;\n            else if (vibratoProperty == \"custom\")\n                this.vibrato = Config.vibratos.length; // custom\n\n            if (this.vibrato == Config.vibratos.length) {\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\n                this.vibratoType = instrumentObject[\"vibratoType\"];\n            }\n            else { // Set defaults for the vibrato profile\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\n                this.vibratoSpeed = 10; // default;\n                this.vibratoType = Config.vibratos[this.vibrato].type;\n            }\n\n            // Old songs may have a vibrato effect without explicitly enabling it.\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\n                this.effects = (this.effects | (1 << EffectType.vibrato));\n            }\n        }\n\n        if (instrumentObject[\"pan\"] != undefined) {\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\n\n            // Old songs may have a panning effect without explicitly enabling it.\n            if (this.pan != Config.panCenter) {\n                this.effects = (this.effects | (1 << EffectType.panning));\n            }\n        } else {\n            this.pan = Config.panCenter;\n            // Still enabling pan effect, to make it a default\n            this.effects = (this.effects | (1 << EffectType.panning));\n        }\n\n        if (instrumentObject[\"panDelay\"] != undefined) {\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\n        } else {\n            this.panDelay = 10;\n        }\n\n        if (instrumentObject[\"detune\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\n        }\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\n            this.detune = Config.detuneCenter;\n        }\n\n        if (instrumentObject[\"distortion\"] != undefined) {\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\n        }\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"echoSustain\"] != undefined) {\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\n        }\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\n        }\n\n        if (!isNaN(instrumentObject[\"chorus\"])) {\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"reverb\"] != undefined) {\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\n        } else {\n            this.reverb = legacyGlobalReverb;\n        }\n\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\n        } else {\n            this.pulseWidth = Config.pulseWidthRange;\n        }\n\n        if (instrumentObject[\"decimalOffset\"] != undefined) {\n            this.decimalOffset = clamp(0, 99 + 1, Math.round(instrumentObject[\"decimalOffset\"]));\n        } else {\n            this.decimalOffset = 0;\n        }\n\n        if (instrumentObject[\"harmonics\"] != undefined) {\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\n            }\n            this.harmonicsWave.markCustomWaveDirty();\n        } else {\n            this.harmonicsWave.reset();\n        }\n\n        if (instrumentObject[\"spectrum\"] != undefined) {\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\n            }\n        } else {\n            this.spectrumWave.reset(isNoiseChannel);\n        }\n\n        if (instrumentObject[\"stringSustain\"] != undefined) {\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\n        } else {\n            this.stringSustain = 10;\n        }\n\n        if (this.type == InstrumentType.noise) {\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            if (instrumentObject[\"wave\"] == \"pink noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"pink\");\n            if (instrumentObject[\"wave\"] == \"brownian noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"brownian\");\n            if (this.chipNoise == -1) this.chipNoise = 1;\n        }\n\n        const legacyEnvelopeNames: Dictionary<string> = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\n        const getEnvelope = (name: any): Envelope | undefined => (legacyEnvelopeNames[name] != undefined) ? Config.envelopes.dictionary[legacyEnvelopeNames[name]] : Config.envelopes.dictionary[name];\n\n        if (this.type == InstrumentType.drumset) {\n            if (instrumentObject[\"drums\"] != undefined) {\n                for (let j: number = 0; j < Config.drumCount; j++) {\n                    const drum: any = instrumentObject[\"drums\"][j];\n                    if (drum == undefined) continue;\n\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\n                    if (drum[\"filterEnvelope\"] != undefined) {\n                        const envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\n                        if (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\n                    }\n                    if (drum[\"spectrum\"] != undefined) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this.type == InstrumentType.chip) {\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\n           \t\t\t\t const modboxWaveNames: Dictionary<number> = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\n             \t const sandboxWaveNames: Dictionary<number> = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\n\t\t\t const zefboxWaveNames: Dictionary<number> = {\"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71,\"deep pulse\": 72 };\n\t\t\t const miscWaveNames: Dictionary<number> = {\"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\n\t\t\t const paandorasboxWaveNames: Dictionary<number> = {\"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119};\n\t\t\t// const paandorasbetaWaveNames = {\"contrabass\": 55, \"double bass\": 56 };\n\t\t//this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            this.chipWave = -1;\n            const rawName: string = instrumentObject[\"wave\"];\n            for (const table of [\n                legacyWaveNames,\n                modboxWaveNames,\n                sandboxWaveNames,\n                zefboxWaveNames,\n                miscWaveNames,\n                paandorasboxWaveNames\n            ]) {\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\n                    this.chipWave = table[rawName];\n                    break;\n                }\n            }\n            if (this.chipWave == -1) {\n                const potentialChipWaveIndex: number = Config.chipWaves.findIndex(wave => wave.name == rawName);\n                if (potentialChipWaveIndex != -1) this.chipWave = potentialChipWaveIndex;\n            }\n            // this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : modboxWaveNames[instrumentObject[\"wave\"]] != undefined ? modboxWaveNames[instrumentObject[\"wave\"]] : sandboxWaveNames[instrumentObject[\"wave\"]] != undefined ? sandboxWaveNames[instrumentObject[\"wave\"]] : zefboxWaveNames[instrumentObject[\"wave\"]] != undefined ? zefboxWaveNames[instrumentObject[\"wave\"]] : miscWaveNames[instrumentObject[\"wave\"]] != undefined ? miscWaveNames[instrumentObject[\"wave\"]] : paandorasboxWaveNames[instrumentObject[\"wave\"]] != undefined ? paandorasboxWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]); \n\t\tif (this.chipWave == -1) this.chipWave = 1;\n        }\n\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\n            if(this.type == InstrumentType.fm) {\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm == -1) this.algorithm = 0;\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType == -1) this.feedbackType = 0;\n            } else {\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm6Op == -1) this.algorithm6Op = 1;\n                if(this.algorithm6Op == 0){ \n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\n                } else{\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\n                }\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType6Op == -1) this.feedbackType6Op = 1;\n                if(this.feedbackType6Op == 0) {\n                    this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\n                }else{\n                    this.customFeedbackType.fromPreset(this.feedbackType6Op)\n                }\n            }\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\n            } else {\n                this.feedbackAmplitude = 0;\n            }\n\n            for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\n                const operator: Operator = this.operators[j];\n                let operatorObject: any = undefined;\n                if (instrumentObject[\"operators\"] != undefined) operatorObject = instrumentObject[\"operators\"][j];\n                if (operatorObject == undefined) operatorObject = {};\n\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\n                if (operator.frequency == -1) operator.frequency = 0;\n                if (operatorObject[\"amplitude\"] != undefined) {\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\n                } else {\n                    operator.amplitude = 0;\n                }\n                if (operatorObject[\"waveform\"] != undefined) {\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\n                    if (operator.waveform == -1) {\n                        // GoldBox compatibility\n                        if (operatorObject[\"waveform\"] == \"square\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\n                            operator.pulseWidth = 5;\n                        } else {\n                            operator.waveform = 0;\n                        }\n\n                    }\n                } else {\n                    operator.waveform = 0;\n                }\n                if (operatorObject[\"pulseWidth\"] != undefined) {\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\n                } else {\n                    operator.pulseWidth = 5;\n                }\n            }\n        }\n        else if (this.type == InstrumentType.customChipWave) {\n            if (instrumentObject[\"customChipWave\"]) {\n\n                for (let i: number = 0; i < 64; i++) {\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\n                }\n\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average: number = sum / this.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n\n                // 65th, last sample is for anti-aliasing\n                this.customChipWaveIntegral[64] = 0.0;\n            }\n        } else if (this.type == InstrumentType.mod) {\n            if (instrumentObject[\"modChannels\"] != undefined) {\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\n                }\n            }\n        }\n\n        if (this.type != InstrumentType.mod) {\n            // Arpeggio speed\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\n            }\n            else {\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\n            }\n\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\n            }\n            else {\n                this.fastTwoNoteArp = useFastTwoNoteArp;\n            }\n\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\n            }\n            else {\n                this.clicklessTransition = false;\n            }\n\n            if (instrumentObject[\"aliases\"] != undefined) {\n                this.aliases = instrumentObject[\"aliases\"];\n            }\n            else {\n                this.aliases = false;\n            }\n\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\n            }\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\n            }\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\n            }\n            if (instrumentObject[\"noteFilter\"] != undefined) {\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\n            } else {\n                this.noteFilter.reset();\n            }\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\n                    this.noteSubFilters[i] = new FilterSettings();\n                    this.noteSubFilters[i]!.fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\n                }\n            }\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\n            }\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\n            }\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\n            }\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\n            } else {\n                this.eqFilter.reset();\n\n                const legacySettings: LegacySettings = {};\n\n                // Try converting from legacy filter settings.\n                const filterCutoffMaxHz: number = 8000;\n                const filterCutoffRange: number = 11;\n                const filterResonanceRange: number = 8;\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\n                } else {\n                    legacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\n                }\n                if (instrumentObject[\"filterResonance\"] != undefined) {\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\n                } else {\n                    legacySettings.filterResonance = 0;\n                }\n\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\n                if (Array.isArray(instrumentObject[\"operators\"])) {\n                    legacySettings.operatorEnvelopes = [];\n                    for (let j: number = 0; j < Config.operatorCount; j++) {\n                        let envelope: Envelope | undefined;\n                        if (instrumentObject[\"operators\"][j] != undefined) {\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\n                        }\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\n                    }\n                }\n\n                // Try converting from even older legacy filter settings.\n                if (instrumentObject[\"filter\"] != undefined) {\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n                    const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\n                    const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\n                    let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\n                    if (legacyFilter == -1) legacyFilter = 0;\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\n                    legacySettings.filterResonance = 0;\n                }\n\n                this.convertLegacySettings(legacySettings, true);\n            }\n\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\n                    this.eqSubFilters[i] = new FilterSettings();\n                    this.eqSubFilters[i]!.fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\n                }\n            }\n\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\n                const envelopeArray: any[] = instrumentObject[\"envelopes\"];\n                for (let i = 0; i < envelopeArray.length; i++) {\n                    if (this.envelopeCount >= Config.maxEnvelopeCount) break;\n                    const tempEnvelope: EnvelopeSettings = new EnvelopeSettings();\n                    tempEnvelope.fromJsonObject(envelopeArray[i]);\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope);\n                }\n            }\n        }\n   \t\t // advloop addition\n            if (type === 0) {\n                if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\n                    this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\n                    this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\n                    this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\n                    this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\n                    this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\n                    this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\n                } else {\n                    this.isUsingAdvancedLoopControls = false;\n                    this.chipWaveLoopStart = 0;\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                    this.chipWaveLoopMode = 0;\n                    this.chipWavePlayBackwards = false;\n                    this.chipWaveStartOffset = 0;\n                }\n            }\n\t}\t\n           // advloop addition\n\n    public static frequencyFromPitch(pitch: number): number {\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\n    }\n\n    public addEnvelope(target: number, index: number, envelope: number): void {\n        let makeEmpty: boolean = false;\n        if (!this.supportsEnvelopeTarget(target, index)) makeEmpty = true;\n        if (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\n        while (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings();\n        const envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\n        envelopeSettings.index = makeEmpty ? 0 : index;\n        envelopeSettings.envelope = envelope;\n        this.envelopeCount++;\n    }\n\n    public supportsEnvelopeTarget(target: number, index: number): boolean {\n        const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\n        if (index >= automationTarget.maxCount) {\n            return false;\n        }\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\n            return false;\n        }\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\n            return false;\n        }\n        if (automationTarget.isFilter) {\n            //if (automationTarget.perNote) {\n            let useControlPointCount: number = this.noteFilter.controlPointCount;\n            if (this.noteFilterType)\n                useControlPointCount = 1;\n            if (index >= useControlPointCount) return false;\n            //} else {\n            //\tif (index >= this.eqFilter.controlPointCount)   return false;\n            //}\n        }\n        return true;\n    }\n\n    public clearInvalidEnvelopeTargets(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\n            const target: number = this.envelopes[envelopeIndex].target;\n            const index: number = this.envelopes[envelopeIndex].index;\n            if (!this.supportsEnvelopeTarget(target, index)) {\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                this.envelopes[envelopeIndex].index = 0;\n            }\n        }\n    }\n\n    public getTransition(): Transition {\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\n            (this.type == InstrumentType.mod ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\n    }\n\n    public getFadeInSeconds(): number {\n        return (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\n    }\n\n    public getFadeOutTicks(): number {\n        return (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\n    }\n\n    public getChord(): Chord {\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\n    }\n\n    public getDrumsetEnvelope(pitch: number): Envelope {\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\n    }\n}\n\nexport class Channel {\n    public octave: number = 0;\n    public readonly instruments: Instrument[] = [];\n    public readonly patterns: Pattern[] = [];\n    public readonly bars: number[] = [];\n    public muted: boolean = false;\n    public name: string = \"\";\n}\n\nexport class Song {\n    private static readonly _format: string = \"UltraBox\";\n    private static readonly _oldestBeepboxVersion: number = 2;\n    private static readonly _latestBeepboxVersion: number = 9;\n    private static readonly _oldestJummBoxVersion: number = 1;\n    private static readonly _latestJummBoxVersion: number = 5;\n    private static readonly _oldestGoldBoxVersion: number = 1;\n    private static readonly _latestGoldBoxVersion: number = 4;\n    private static readonly _oldestUltraBoxVersion: number = 1;\n    private static readonly _latestUltraBoxVersion: number = 4;\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox, Or Goldbox. \"j\" and \"g\" respectively\n\t//also \"u\" is ultrabox lol\n    private static readonly _variant = 0x75; //\"u\" ~ ultrabox\n\n    public title: string;\n    public scale: number;\n    public scaleCustom: boolean[] = [];\n    public key: number;\n    public octave: number;\n    public tempo: number;\n    public reverb: number;\n    public beatsPerBar: number;\n    public barCount: number;\n    public patternsPerChannel: number;\n    public rhythm: number;\n    public layeredInstruments: boolean;\n    public patternInstruments: boolean;\n    public loopStart: number;\n    public loopLength: number;\n    public pitchChannelCount: number;\n    public noiseChannelCount: number;\n    public modChannelCount: number;\n    public readonly channels: Channel[] = [];\n    public limitDecay: number = 4.0;\n    public limitRise: number = 4000.0;\n    public compressionThreshold: number = 1.0;\n    public limitThreshold: number = 1.0;\n    public compressionRatio: number = 1.0;\n    public limitRatio: number = 1.0;\n    public masterGain: number = 1.0;\n    public inVolumeCap: number = 0.0;\n    public outVolumeCap: number = 0.0;\n\n    constructor(string?: string) {\n        if (string != undefined) {\n            this.fromBase64String(string);\n        } else {\n            this.initToDefault(true);\n        }\n    }\n\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n            return 6;\n        else {\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\n            modCount = Config.modCount - modCount - 1;\n\n            let vol: number | undefined = Config.modulators[this.channels[modChannel].instruments[modInstrument].modulators[modCount]].newNoteVol;\n\n            // For tempo, actually use user defined tempo\n            let tempoIndex: number = Config.modulators.dictionary[\"tempo\"].index;\n            if (this.channels[modChannel].instruments[modInstrument].modulators[modCount] == tempoIndex) {\n                vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\n            }\n\n            if (vol != undefined)\n                return vol;\n            else\n                return 6;\n        }\n    }\n\n\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n            return 6;\n        else {\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\n            modCount = Config.modCount - modCount - 1;\n\n            let instrument: Instrument = this.channels[modChannel].instruments[modInstrument];\n            let modulator = Config.modulators[instrument.modulators[modCount]];\n            let cap: number | undefined = modulator.maxRawVol;\n\n            if (cap != undefined) {\n                // For filters, cap is dependent on which filter setting is targeted\n                if (modulator.name == \"eq filter\" || modulator.name == \"note filter\") {\n                    // type 0: number of filter morphs\n                    // type 1/odd: number of filter x positions\n                    // type 2/even: number of filter y positions\n                    cap = Config.filterMorphCount - 1;\n                    if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\n                        cap = Config.filterFreqRange;\n                    } else if (instrument.modFilterTypes[modCount] > 0) {\n                        cap = Config.filterGainRange;\n                    }\n                }\n                return cap;\n            }\n            else\n                return 6;\n        }\n    }\n\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: number, filterType?: number): number => {\n        if (!isMod)\n            return Config.noteSizeMax;\n        else {\n            let cap: number | undefined = Config.modulators[modSetting].maxRawVol;\n            if (cap != undefined) {\n\n                // For filters, cap is dependent on which filter setting is targeted\n                if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\")) {\n                    // type 0: number of filter morphs\n                    // type 1/odd: number of filter x positions\n                    // type 2/even: number of filter y positions\n                    cap = Config.filterMorphCount - 1;\n                    if (filterType > 0 && filterType % 2) {\n                        cap = Config.filterFreqRange;\n                    } else if (filterType > 0) {\n                        cap = Config.filterGainRange;\n                    }\n                }\n\n                return cap;\n            }\n            else\n                return Config.noteSizeMax;\n        }\n    }\n\n    public getChannelCount(): number {\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\n    }\n\n    public getMaxInstrumentsPerChannel(): number {\n        return Math.max(\n            this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\n            this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\n    }\n\n    public getMaxInstrumentsPerPattern(channelIndex: number): number {\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\n    }\n\n    public getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\n        return this.layeredInstruments\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\n            : 1;\n    }\n\n    public getChannelIsNoise(channelIndex: number): boolean {\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\n    }\n\n    public getChannelIsMod(channelIndex: number): boolean {\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\n    }\n\n    public initToDefault(andResetChannels: boolean = true): void {\n        this.scale = 0;\n        //this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\n\tthis.scaleCustom = [true, false, false, false, false, false, false, false, false, false, false, false];\n        this.key = 0;\n        this.octave = 0;\n        this.loopStart = 0;\n        this.loopLength = 4;\n        this.tempo = 120;\n        this.reverb = 0;\n        this.beatsPerBar = 8;\n        this.barCount = 16;\n        this.patternsPerChannel = 8;\n        this.rhythm = 3;\n        this.layeredInstruments = false;\n        this.patternInstruments = false;\n\n        this.title = \"Untitled\";\n        document.title = EditorConfig.versionDisplayName;\n\n        if (andResetChannels) {\n            this.pitchChannelCount = 3;\n            this.noiseChannelCount = 1;\n            this.modChannelCount = 0;\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                if (this.channels.length <= channelIndex) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                const channel: Channel = this.channels[channelIndex];\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0]; Descending octaves with drums at zero in last channel.\n\n                for (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\n                    if (channel.patterns.length <= pattern) {\n                        channel.patterns[pattern] = new Pattern();\n                    } else {\n                        channel.patterns[pattern].reset();\n                    }\n                }\n                channel.patterns.length = this.patternsPerChannel;\n\n                for (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\n                    if (channel.instruments.length <= instrument) {\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\n                    }\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\n                }\n                channel.instruments.length = Config.instrumentCountMin;\n\n                for (let bar: number = 0; bar < this.barCount; bar++) {\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n            this.channels.length = this.getChannelCount();\n        }\n    }\n\n    public toBase64String(): string {\n        let bits: BitFieldWriter;\n        let buffer: number[] = [];\n\n        buffer.push(Song._variant);\n                 //   buffer.push(base64IntToCharCode[Song._latestGoldBoxVersion]);\n\t\t buffer.push(base64IntToCharCode[Song._latestUltraBoxVersion]);\n\n        // Length of the song name string\n        buffer.push(SongTagCode.songTitle);\n        var encodedSongTitle: string = encodeURIComponent(this.title);\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\n\n        // Actual encoded string follows\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\n            buffer.push(encodedSongTitle.charCodeAt(i));\n        }\n\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                buffer.push(base64IntToCharCode[this.scaleCustom[i]?1:0]) // ineffiecent? yes, all we're going to do for now? hell yes\n            }\n        }\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\n\n        // Push limiter settings, but only if they aren't the default!\n        buffer.push(SongTagCode.limiterSettings);\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\n        }\n        else {\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\n        }\n\n        buffer.push(SongTagCode.channelNames);\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\n            // Length of the channel name string\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\n\n            // Actual encoded string follows\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\n                buffer.push(encodedChannelName.charCodeAt(i));\n            }\n        }\n\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\n        if (this.layeredInstruments || this.patternInstruments) {\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\n            }\n        }\n\n        buffer.push(SongTagCode.channelOctave);\n        for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\n        }\n\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\n\n                buffer.push(SongTagCode.eqFilter);\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\n                if (instrument.eqFilterType) {\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\n                }\n                else {\n                    if (instrument.eqFilter == null) {\n                        // Push null filter settings\n                        buffer.push(base64IntToCharCode[0]);\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                    } else {\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\n                        for (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                        }\n                    }\n\n                    // Push subfilters as well. Skip Index 0, is a copy of the base filter.\n                    let usingSubFilterBitfield: number = 0;\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\n                    }\n                    // Put subfilter usage into 2 chars (12 bits)\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                    // Put subfilter info in for all used subfilters\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                        if (usingSubFilterBitfield & (1 << j)) {\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1]!.controlPointCount]);\n                            for (let k: number = 0; k < instrument.eqSubFilters[j + 1]!.controlPointCount; k++) {\n                                const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[k];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                    }\n                }\n\n                // The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\n                buffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects >> 6], base64IntToCharCode[instrument.effects & 63]);\n                if (effectsIncludeNoteFilter(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\n                    if (instrument.noteFilterType) {\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\n                    }\n                    else {\n                        if (instrument.noteFilter == null) {\n                            // Push null filter settings\n                            buffer.push(base64IntToCharCode[0]);\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\n                            for (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n\n                        // Push subfilters as well. Skip Index 0, is a copy of the base filter.\n                        let usingSubFilterBitfield: number = 0;\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\n                        }\n                        // Put subfilter usage into 2 chars (12 bits)\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                        // Put subfilter info in for all used subfilters\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                            if (usingSubFilterBitfield & (1 << j)) {\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1]!.controlPointCount]);\n                                for (let k: number = 0; k < instrument.noteSubFilters[j + 1]!.controlPointCount; k++) {\n                                    const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[k];\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (effectsIncludeTransition(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.transition]);\n                }\n                if (effectsIncludeChord(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chord]);\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\n                    }\n                }\n                if (effectsIncludePitchShift(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\n                }\n                if (effectsIncludeDetune(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\n                }\n                if (effectsIncludeVibrato(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\n                    // Custom vibrato settings\n                    if (instrument.vibrato == Config.vibratos.length) {\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\n                    }\n                }\n                if (effectsIncludeDistortion(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\n                    // Aliasing is tied into distortion for now\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\n                }\n                if (effectsIncludeBitcrusher(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\n                }\n                if (effectsIncludePanning(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\n                }\n                if (effectsIncludeChorus(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\n                }\n                if (effectsIncludeEcho(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\n                }\n                if (effectsIncludeReverb(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\n                }\n\n                if (instrument.type != InstrumentType.drumset) {\n                    buffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\n                    // Transition info follows transition song tag\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\n                }\n\n                if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                    buffer.push(SongTagCode.harmonics);\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\n                    }\n                    harmonicsBits.encodeBase64(buffer);\n                }\n\n                if (instrument.type == InstrumentType.chip) {\n                   \t\t\t\t\t\tif (instrument.chipWave > 186) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[3]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (instrument.chipWave > 124) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[2]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (instrument.chipWave > 62) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[1]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[0]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuffer.push(104, base64IntToCharCode[instrument.unison]);\n                        if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n\n\t\t\t\t\t\t// Repurposed for chip wave loop controls.\n\t\t\t\t\t\tbuffer.push(SongTagCode.filterResonance);\n\t\t\t\t\t\t// The encoding here is as follows:\n\t\t\t\t\t\t// 0b11111_1\n\t\t\t\t\t\t//         ^-- isUsingAdvancedLoopControls\n\t\t\t\t\t\t//   ^^^^^---- chipWaveLoopMode\n\t\t\t\t\t\t// This essentially allocates 32 different loop modes,\n\t\t\t\t\t\t// which should be plenty.\n\t\t\t\t\t\tconst encodedLoopMode: number = (\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\n\t\t\t\t\t\t\t| (instrument.isUsingAdvancedLoopControls ? 1 : 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedLoopMode]);\n\t\t\t\t\t\t// The same encoding above is used here, but with the release mode\n\t\t\t\t\t\t// (which isn't implemented currently), and the backwards toggle.\n\t\t\t\t\t\tconst encodedReleaseMode: number = (\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, 0) << 1)\n\t\t\t\t\t\t\t| (instrument.chipWavePlayBackwards ? 1 : 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedReleaseMode]);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopStart);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopEnd);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveStartOffset);\n\n                } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n                    if (instrument.type == InstrumentType.fm) {\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\n                    } else {\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm6Op]);\n                        if (instrument.algorithm6Op == 0) {\n                            buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\n                            buffer.push(SongTagCode.effects);\n                            for (let o: number = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\n                                for (let j: number = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\n                                }\n                                buffer.push(SongTagCode.operatorWaves);\n                            }\n                            buffer.push(SongTagCode.effects);\n                        }\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType6Op]);\n                        if (instrument.feedbackType6Op == 0) {\n                            buffer.push(SongTagCode.effects);\n                            for (let o: number = 0; o < instrument.customFeedbackType.indices.length; o++) {\n                                for (let j: number = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\n                                }\n                                buffer.push(SongTagCode.operatorWaves);\n                            }\n                            buffer.push(SongTagCode.effects);\n                        }\n                    }\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\n\n                    buffer.push(SongTagCode.operatorFrequencies);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op?6:Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\n                    }\n                    buffer.push(SongTagCode.operatorAmplitudes);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\n                    }\n                    buffer.push(SongTagCode.operatorWaves);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\n                        // Push pulse width if that type is used\n                        if (instrument.operators[o].waveform == 2) {\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\n                        }\n                    }\n                } else if (instrument.type == InstrumentType.customChipWave) {\n                    if (instrument.chipWave > 186) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[3]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (instrument.chipWave > 124) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[2]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (instrument.chipWave > 62) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[1]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[0]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuffer.push(104, base64IntToCharCode[instrument.unison]);\n                        if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(SongTagCode.customChipWave);\n                    // Push custom wave values\n                    for (let j: number = 0; j < 64; j++) {\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\n                    }\n                } else if (instrument.type == InstrumentType.noise) {\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\n                } else if (instrument.type == InstrumentType.spectrum) {\n                    buffer.push(SongTagCode.spectrum);\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                } else if (instrument.type == InstrumentType.drumset) {\n                    buffer.push(SongTagCode.drumsetEnvelopes);\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\n                    }\n\n                    buffer.push(SongTagCode.spectrum);\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\n                        }\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                } else if (instrument.type == InstrumentType.harmonics) {\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                } else if (instrument.type == InstrumentType.pwm) {\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]); \n                } else if (instrument.type == InstrumentType.pickedString) {\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain]);\n                } else if (instrument.type == InstrumentType.mod) {\n                    // Handled down below. Could be moved, but meh.\n                } else {\n                    throw new Error(\"Unknown instrument type.\");\n                }\n\n                buffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\n                for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\n                }\n            }\n        }\n\n        buffer.push(SongTagCode.bars);\n        bits = new BitFieldWriter();\n        let neededBits: number = 0;\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\n            bits.write(neededBits, this.channels[channelIndex].bars[i]);\n        }\n        bits.encodeBase64(buffer);\n\n        buffer.push(SongTagCode.patterns);\n        bits = new BitFieldWriter();\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\n        const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel: Channel = this.channels[channelIndex];\n            const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n            const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n            const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\n            // Some info about modulator settings immediately follows in mod channels.\n            if (isModChannel) {\n                const neededModInstrumentIndexBits: number = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\n                    let instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        const modChannel: number = instrument.modChannels[mod];\n                        const modInstrument: number = instrument.modInstruments[mod];\n                        const modSetting: number = instrument.modulators[mod];\n                        const modFilter: number = instrument.modFilterTypes[mod];\n\n                        // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\n                        // 0 - For pitch/noise\n                        // 1 - (used to be For noise, not needed)\n                        // 2 - For song\n                        // 3 - None\n\n                        let status: number = Config.modulators[modSetting].forSong ? 2 : 0;\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\n                            status = 3;\n\n                        bits.write(2, status);\n\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\n                        if (status == 0 || status == 1) {\n                            bits.write(8, modChannel);\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\n                        }\n\n                        // Only used if setting isn't \"none\".\n                        if (status != 3) {\n                            bits.write(6, modSetting);\n                        }\n\n                        // Write mod filter info, only if this is a filter mod\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\") {\n                            bits.write(6, modFilter);\n                        }\n                    }\n                }\n            }\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\n            let lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n            const recentShapes: string[] = [];\n            for (let i: number = 0; i < recentPitches.length; i++) {\n                recentPitches[i] += octaveOffset;\n            }\n            for (const pattern of channel.patterns) {\n                if (this.patternInstruments) {\n                    const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\n                    for (let i: number = 0; i < instrumentCount; i++) {\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\n                    }\n                }\n\n                if (pattern.notes.length > 0) {\n                    bits.write(1, 1);\n\n                    let curPart: number = 0;\n                    for (const note of pattern.notes) {\n\n                        // For mod channels, a negative offset may be necessary.\n                        if (note.start < curPart && isModChannel) {\n                            bits.write(2, 0); // rest, then...\n                            bits.write(1, 1); // negative offset\n                            bits.writePartDuration(curPart - note.start);\n                        }\n\n                        if (note.start > curPart) {\n                            bits.write(2, 0); // rest\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\n                            bits.writePartDuration(note.start - curPart);\n                        }\n\n                        shapeBits.clear();\n\n                        // Old format was:\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\n                        // New format is:\n                        //      0: 1 pitch\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\n                        if (note.pitches.length == 1) {\n                            shapeBits.write(1, 0);\n                        } else {\n                            shapeBits.write(1, 1);\n                            shapeBits.write(3, note.pitches.length - 2);\n                        }\n\n                        shapeBits.writePinCount(note.pins.length - 1);\n\n                        if (!isModChannel) {\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size); // volume\n                        }\n                        else {\n                            shapeBits.write(9, note.pins[0].size); // Modulator value. 9 bits for now = 512 max mod value?\n                        }\n\n                        let shapePart: number = 0;\n                        let startPitch: number = note.pitches[0];\n                        let currentPitch: number = startPitch;\n                        const pitchBends: number[] = [];\n                        for (let i: number = 1; i < note.pins.length; i++) {\n                            const pin: NotePin = note.pins[i];\n                            const nextPitch: number = startPitch + pin.interval;\n                            if (currentPitch != nextPitch) {\n                                shapeBits.write(1, 1);\n                                pitchBends.push(nextPitch);\n                                currentPitch = nextPitch;\n                            } else {\n                                shapeBits.write(1, 0);\n                            }\n                            shapeBits.writePartDuration(pin.time - shapePart);\n                            shapePart = pin.time;\n                            if (!isModChannel) {\n                                shapeBits.write(bitsPerNoteSize, pin.size);\n                            } else {\n                                shapeBits.write(9, pin.size);\n                            }\n                        }\n\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\n                        if (shapeIndex == -1) {\n                            bits.write(2, 1); // new shape\n                            bits.concat(shapeBits);\n                        } else {\n                            bits.write(1, 1); // old shape\n                            bits.writeLongTail(0, 0, shapeIndex);\n                            recentShapes.splice(shapeIndex, 1);\n                        }\n                        recentShapes.unshift(shapeString);\n                        if (recentShapes.length > 10) recentShapes.pop();\n\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\n                        for (let i: number = 0; i < allPitches.length; i++) {\n                            const pitch: number = allPitches[i];\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\n                            if (pitchIndex == -1) {\n                                let interval: number = 0;\n                                let pitchIter: number = lastPitch;\n                                if (pitchIter < pitch) {\n                                    while (pitchIter != pitch) {\n                                        pitchIter++;\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\n                                    }\n                                } else {\n                                    while (pitchIter != pitch) {\n                                        pitchIter--;\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\n                                    }\n                                }\n                                bits.write(1, 0);\n                                bits.writePitchInterval(interval);\n                            } else {\n                                bits.write(1, 1);\n                                bits.write(4, pitchIndex);\n                                recentPitches.splice(pitchIndex, 1);\n                            }\n                            recentPitches.unshift(pitch);\n                            if (recentPitches.length > 16) recentPitches.pop();\n\n                            if (i == note.pitches.length - 1) {\n                                lastPitch = note.pitches[0];\n                            } else {\n                                lastPitch = pitch;\n                            }\n                        }\n\n                        if (note.start == 0) {\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\n                        }\n\n                        curPart = note.end;\n                    }\n\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                        bits.write(2, 0); // rest\n                        if (isModChannel) bits.write(1, 0); // positive offset\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\n                    }\n                } else {\n                    bits.write(1, 0);\n                }\n            }\n        }\n        let stringLength: number = bits.lengthBase64();\n        let digits: number[] = [];\n        while (stringLength > 0) {\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\n            stringLength = stringLength >> 6;\n        }\n        buffer.push(base64IntToCharCode[digits.length]);\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\n        bits.encodeBase64(buffer);\n\t    \n        const maxApplyArgs: number = 64000;\n\t    \t\t\t            let customSamplesStr = \"\";\n            if(EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0){\n              customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\")\n              \n          }\n\t\t  //samplemark\n        if (buffer.length < maxApplyArgs) {\n            // Note: Function.apply may break for long argument lists. \n                            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\n\t\t\t\t//samplemark\n        } else {\n            let result: string = \"\";\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\n            }\n                          return result + customSamplesStr;\n\t\t\t   //samplemark\n        }\n    }\n\n    private static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\n        // I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\n        if (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\n    }\n\n    public fromBase64String(compressed: string): void {\n        if (compressed == null || compressed == \"\") {\n            Song._clearSamples();\n\n            this.initToDefault(true);\n            return;\n        }\n        let charIndex: number = 0;\n        // skip whitespace.\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\n        // skip hash mark.\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\n        // if it starts with curly brace, treat it as JSON.\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\n            return;\n        }\n\n        const variantTest: number = compressed.charCodeAt(charIndex);\n        let fromBeepBox: boolean;\n        let fromJummBox: boolean;\n        let fromGoldBox: boolean;\n\tlet fromUltraBox: boolean;\n\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\n        if (variantTest == 0x6A) { //\"j\"\n            fromBeepBox = false;\n            fromJummBox = true;\n            fromGoldBox = false;\n\t        fromUltraBox = false;\n            charIndex++;\n        } else if (variantTest == 0x67) { //\"g\"\n            fromBeepBox = false;\n            fromJummBox = false;\n            fromGoldBox = true;\n\t        fromUltraBox = false;\n            charIndex++;\n        } else if (variantTest == 0x75) { //\"u\"\n                fromBeepBox = false;\n                fromJummBox = false;\n                fromGoldBox = false;\n\t\t        fromUltraBox = true;\n                charIndex++;\n            } else {\n            fromBeepBox = true;\n            fromJummBox = false;\n            fromGoldBox = false;\n\t        fromUltraBox = false;\n        }\n\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion)) return;\n\t    if (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion)) return;\n        const beforeTwo: boolean = version < 2;\n        const beforeThree: boolean = version < 3;\n        const beforeFour: boolean = version < 4;\n        const beforeFive: boolean = version < 5;\n        const beforeSix: boolean = version < 6;\n        const beforeSeven: boolean = version < 7;\n        const beforeEight: boolean = version < 8;\n        const beforeNine: boolean = version < 9;\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\n        const forceSimpleFilter: boolean = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\n\n        let willLoadLegacySamplesForOldSongs: boolean = false;\n\n        if (fromUltraBox || fromGoldBox) {\n            compressed = compressed.replaceAll(\"%7C\", \"|\")\n                var compressed_array = compressed.split(\"|\");\n                compressed = compressed_array.shift()!;\n                if(EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\n\n                    Song._restoreChipWaveListToDefault();\n\n                    let willLoadLegacySamples = false;\n                    let willLoadNintariboxSamples = false;\n                    let willLoadMarioPaintboxSamples = false;\n                    const customSampleUrls = [];\n                    const customSamplePresets: Preset[] = [];\n                    sampleLoadingState.statusTable = {};\n                    sampleLoadingState.urlTable = {};\n                    sampleLoadingState.totalSamples = 0;\n                    sampleLoadingState.samplesLoaded = 0;\n                    sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n                        sampleLoadingState.totalSamples,\n                        sampleLoadingState.samplesLoaded\n                    ));\n                    for (const url of compressed_array) {\n                        if (url.toLowerCase() === \"legacysamples\") {\n                            if (!willLoadLegacySamples) {\n                                willLoadLegacySamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(0);\n                            }\n                        } \n                        else if (url.toLowerCase() === \"nintariboxsamples\") {\n                            if (!willLoadNintariboxSamples) {\n                                willLoadNintariboxSamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(1);\n                            }\n                        }\n                        else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                            if (!willLoadMarioPaintboxSamples) {\n                                willLoadMarioPaintboxSamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(2);\n                            }\n                        }\n                        \n                        else {\n                            // UB version 2 URLs and below will be using the old syntax, so we do need to parse it in that case.\n                            // UB version 3 URLs should only have the new syntax, though, unless the user has edited the URL manually.\n                            const parseOldSyntax: boolean = beforeThree;\n                            const ok: boolean = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                            if (!ok) {\n                                continue;\n                            }\n                        }\n                    }\n                    if (customSampleUrls.length > 0) {\n                        EditorConfig.customSamples = customSampleUrls;\n                    }\n                    if (customSamplePresets.length > 0) {\n                        const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\n                        EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                            name: \"Custom Sample Presets\",\n                            presets: customSamplePresetsMap,\n                            index: EditorConfig.presetCategories.length,\n                        };\n                        // EditorConfig.presetCategories.splice(1, 0, {\n                             // name: \"Custom Sample Presets\",\n                             // presets: customSamplePresets,\n                             // index: EditorConfig.presetCategories.length,\n                        // });\n                    }\n\n               \n                }\n                //samplemark\n        }\n\n        if (beforeThree && fromBeepBox) {\n            // Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\n            for (const channel of this.channels) {\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\n                channel.instruments[0].effects |= 1 << EffectType.transition;\n            }\n            this.channels[3].instruments[0].chipNoise = 0;\n        }\n\n        let legacySettingsCache: LegacySettings[][] | null = null;\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n            // Unfortunately, old versions of BeepBox had a variety of different ways of saving\n            // filter-and-envelope-related parameters in the URL, and none of them directly\n            // correspond to the new way of saving these parameters. We can approximate the old\n            // settings by collecting all the old settings for an instrument and passing them to\n            // convertLegacySettings(), so I use this data structure to collect the settings\n            // for each instrument if necessary.\n            legacySettingsCache = [];\n            for (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                legacySettingsCache[i] = [];\n                for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\n            }\n        }\n\n        let legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\n\n        let instrumentChannelIterator: number = 0;\n        let instrumentIndexIterator: number = -1;\n        let command: number;\n        let useSlowerArpSpeed: boolean = false;\n        let useFastTwoNoteArp: boolean = false;\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\n            case SongTagCode.songTitle: {\n                // Length of song name string\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n\n                charIndex += songNameLength;\n            } break;\n            case SongTagCode.channelCount: {\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                if (fromBeepBox || beforeTwo) {\n                    // No mod channel support before jummbox v2\n                    this.modChannelCount = 0;\n                } else {\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                }\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\n\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                this.channels.length = this.getChannelCount();\n                if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    for (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\n                        legacySettingsCache![i] = [];\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\n                    }\n                }\n            } break;\n            case SongTagCode.scale: {\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                // All the scales were jumbled around by Jummbox. Just convert to free.\n                if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                    for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                        this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1; // ineffiecent? yes, all we're going to do for now? hell yes\n                    }\n                }\n                if (fromBeepBox) this.scale = 0;\n            } break;\n            case SongTagCode.key: {\n                if (beforeSeven && fromBeepBox) {\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = 0;\n                } else if (fromBeepBox || fromJummBox) {\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = 0;\n                } else if (fromGoldBox || (beforeThree && fromUltraBox)) {\n                    // GoldBox (so far) didn't introduce any new keys, but old\n                    // songs made with early versions of UltraBox share the\n                    // same URL format, and those can have more keys. This\n                    // shouldn't really result in anything other than 0-11 for\n                    // the key and 0 for the octave for GoldBox songs.\n                    const rawKeyIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const [key, octave]: [number, number] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\n                    this.key = key;\n                    this.octave = octave;\n                } else {\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\n                }\n            } break;\n            case SongTagCode.loopStart: {\n                if (beforeFive && fromBeepBox) {\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                }\n            } break;\n            case SongTagCode.loopEnd: {\n                if (beforeFive && fromBeepBox) {\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n            } break;\n            case SongTagCode.tempo: {\n                if (beforeFour && fromBeepBox) {\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else if (beforeSeven && fromBeepBox) {\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else {\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\n            } break;\n            case SongTagCode.reverb: {\n                if (beforeNine && fromBeepBox) {\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                } else {\n                    // Do nothing, BeepBox v9+ do not support song-wide reverb - JummBox still does via modulator.\n                }\n            } break;\n            case SongTagCode.beatCount: {\n                if (beforeThree && fromBeepBox) {\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else {\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\n            } break;\n            case SongTagCode.barCount: {\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\n                for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                    for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\n                        this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\n                    }\n                    this.channels[channelIndex].bars.length = this.barCount;\n                }\n            } break;\n            case SongTagCode.patternCount: {\n                let patternsPerChannel: number;\n                if (beforeEight && fromBeepBox) {\n                    patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                } else {\n                    patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\n                const channelCount: number = this.getChannelCount();\n                for (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\n                    const patterns: Pattern[] = this.channels[channelIndex].patterns;\n                    for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\n                        patterns[pattern] = new Pattern();\n                    }\n                    patterns.length = this.patternsPerChannel;\n                }\n            } break;\n            case SongTagCode.instrumentCount: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                    this.layeredInstruments = false;\n                    this.patternInstruments = (instrumentsPerChannel > 1);\n\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                        const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n\n                        for (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                            this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\n                        }\n                        this.channels[channelIndex].instruments.length = instrumentsPerChannel;\n                        if (beforeSix && fromBeepBox) {\n                            for (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\n                            }\n                        }\n\n                        for (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\n                            legacySettingsCache![channelIndex][j] = {};\n                        }\n                    }\n                } else {\n                    const instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\n                    this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        let instrumentCount: number = 1;\n                        if (this.layeredInstruments || this.patternInstruments) {\n                            instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                        }\n                        const channel: Channel = this.channels[channelIndex];\n                        const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n                        const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n                        for (let i: number = channel.instruments.length; i < instrumentCount; i++) {\n                            channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\n                        }\n                        channel.instruments.length = instrumentCount;\n                    }\n                }\n            } break;\n            case SongTagCode.rhythm: {\n                if (!fromUltraBox) {\n\t\t\tlet newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\t\n\t\t\tthis.rhythm = clamp(0, Config.rhythms.length, newRhythm + 2);\n\t\t\tif (fromJummBox && beforeThree || fromBeepBox) {\n\t\t\t\tif (this.rhythm == 2 || this.rhythm == 3) {\n\t\t\t\t\tuseSlowerArpSpeed = true;\n\t\t\t\t}\n\t\t\t\tif (this.rhythm >= 2) {\n\t\t\t\t\tuseFastTwoNoteArp = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t}\n\t\t//rhythm fixes\n            } break;\n            case SongTagCode.channelOctave: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                    if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                        if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n                    }\n                } else {\n                    for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    for (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\n                        this.channels[channelIndex].octave = 0;\n                    }\n                }\n            } break;\n            case SongTagCode.startInstrument: {\n                instrumentIndexIterator++;\n                if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\n                    instrumentChannelIterator++;\n                    instrumentIndexIterator = 0;\n                }\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                // JB before v5 had custom chip in the place where pickedString is now, and mod one sooner as well. New index is +1 for both.\n                let instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    if (instrumentType == InstrumentType.pickedString) {\n                        instrumentType = InstrumentType.customChipWave;\n                    }\n                    else if (instrumentType == InstrumentType.customChipWave) {\n                        instrumentType = InstrumentType.mod;\n                    }\n                }\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\n\n                // Anti-aliasing was added in BeepBox 3.0 (v6->v7) and JummBox 1.3 (v1->v2 roughly but some leakage possible)\n                if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == InstrumentType.chip || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.pwm)) {\n                    instrument.aliases = true;\n                    instrument.distortion = 0;\n                    instrument.effects |= 1 << EffectType.distortion;\n                }\n                if (useSlowerArpSpeed) {\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\n                }\n                if (useFastTwoNoteArp) {\n                    instrument.fastTwoNoteArp = true;\n                }\n\n                if (beforeSeven && fromBeepBox) {\n                    instrument.effects = 0;\n                    // Chip/noise instruments had arpeggio and FM had custom interval but neither\n                    // explicitly saved the chorus setting beforeSeven so enable it here.\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                        // Enable chord if it was used.\n                        instrument.effects |= 1 << EffectType.chord;\n                    }\n                }\n            } break;\n            case SongTagCode.preset: {\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\n                // Picked string was inserted before custom chip in JB v5, so bump up preset index.\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.pickedString) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\n                    }\n                }\n            } break;\n            case SongTagCode.wave: {\n                if (beforeThree && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                    instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n\n                    // Version 2 didn't save any settings for settings for filters, or envelopes,\n                    // just waves, so initialize them here I guess.\n                    instrument.convertLegacySettings(legacySettingsCache![channelIndex][0], forceSimpleFilter);\n\n                } else if (beforeSix && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            if (channelIndex >= this.pitchChannelCount) {\n                                instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            } else {\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            }\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                    }\n                } else {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type == InstrumentType.noise) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\t\n\t\t\t\tif (fromUltraBox) {\n\t\t\t\t\tconst chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tconst chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\n\t\t\t\t\tif (chipWaveCounter == 3) {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 186);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t} else if (chipWaveCounter == 2) {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 124);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t} else if (chipWaveCounter == 1) {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 62);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t }\n        \t}\n            } break;\n\t\t\tcase 120:\n\t\t\t\t\t\tif (fromGoldBox && !beforeFour && beforeSix) {\n\t\t\t\t\t\t\tconst chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\t\t\tif ((chipWaveForCompat + 62) > 85) {\n\t\t\t\t\t\t\t\tif (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n\t\t\t\t\t\t\t\t\tif (!willLoadLegacySamplesForOldSongs) {\n\t\t\t\t\t\t\t\t\t\twillLoadLegacySamplesForOldSongs = true;\n\t\t\t\t\t\t\t\t\t\tConfig.willReloadForCustomSamples = true;\n\t\t\t\t\t\t\t\t\t\tEditorConfig.customSamples = [\"legacySamples\"];\n\t\t\t\t\t\t\t\t\t\tloadBuiltInSamples(0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif ((chipWaveForCompat + 62) > 78) {\n\t\t\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ((chipWaveForCompat + 62) > 67) {\n\t\t\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ((chipWaveForCompat + 62) == 67) {\n\t\t\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\t\t\t\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//is it more useful to save base64 characters or url length?\n\t\t\t\t\tbreak;\n            case SongTagCode.eqFilter: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    if (beforeSeven && fromBeepBox) {\n                        const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n                        //const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n                            const legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                            legacySettings.filterResonance = 0;\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        } else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n                                    const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                    if (channelIndex < this.pitchChannelCount) {\n                                        legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                        legacySettings.filterResonance = 0;\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    } else {\n                                        legacySettings.filterCutoff = 10;\n                                        legacySettings.filterResonance = 0;\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\n                                    }\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                            }\n                        } else {\n                            const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                            legacySettings.filterResonance = 0;\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    } else {\n                        const filterCutoffRange: number = 11;\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                        legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                    }\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    if (fromBeepBox || typeCheck == 0) {\n                        instrument.eqFilterType = false;\n                        if (fromJummBox || fromGoldBox || fromUltraBox)\n                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next to get control point count\n                        const originalControlPointCount: number = typeCheck;\n                        instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                        for (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\n                            instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\n                        }\n                        for (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\n                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        for (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                            charIndex += 3;\n                        }\n\n                        // Get subfilters as well. Skip Index 0, is a copy of the base filter.\n                        instrument.eqSubFilters[0] = instrument.eqFilter;\n                        if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox) {\n                            let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                                if (usingSubFilterBitfield & (1 << j)) {\n                                    // Number of control points\n                                    const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (instrument.eqSubFilters[j + 1] == null)\n                                        instrument.eqSubFilters[j + 1] = new FilterSettings();\n                                    instrument.eqSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPoints.length; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\n                                        instrument.eqSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\n                                    }\n                                    for (let i: number = 0; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\n                                        const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[i];\n                                        point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                        charIndex += 3;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        instrument.eqFilterType = true;\n                        instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            } break;\n            case SongTagCode.filterResonance: {\n                if (fromUltraBox) {\n                    if (beforeThree) {\n                        // Still have to support the old and bad loop control data format written as a test, sigh.\n                        const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\n                        charIndex += sampleLoopInfoEncodedLength;\n                        interface SampleLoopInfo {\n                            isUsingAdvancedLoopControls: boolean;\n                            chipWaveLoopStart: number;\n                            chipWaveLoopEnd: number;\n                            chipWaveLoopMode: number;\n                            chipWavePlayBackwards: boolean;\n                            chipWaveStartOffset: number;\n                        }\n                        interface SampleLoopInfoEntry {\n                            channel: number;\n                            instrument: number;\n                            info: SampleLoopInfo;\n                        }\n                        const sampleLoopInfo: SampleLoopInfoEntry[] = JSON.parse(atob(sampleLoopInfoEncoded));\n                        for (const entry of sampleLoopInfo) {\n                            const channelIndex: number = entry[\"channel\"];\n                            const instrumentIndex: number = entry[\"instrument\"];\n                            const info: SampleLoopInfo = entry[\"info\"];\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                            instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\n                            instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\n                            instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\n                            instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\n                            instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\n                            instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\n                            // @TODO: Whenever chipWaveReleaseMode is implemented, it should be set here to the default.\n                        }\n                    } else {\n                        // Read the new loop control data format.\n                        // See Song.toBase64String for details on the encodings used here.\n                        const encodedLoopMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const isUsingAdvancedLoopControls: boolean = Boolean(encodedLoopMode & 1);\n                        const chipWaveLoopMode: number = encodedLoopMode >> 1;\n                        const encodedReleaseMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const chipWavePlayBackwards: boolean = Boolean(encodedReleaseMode & 1);\n                        // const chipWaveReleaseMode: number = encodedReleaseMode >> 1;\n                        const chipWaveLoopStart: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const chipWaveLoopEnd: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const chipWaveStartOffset: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\n                        instrument.chipWaveLoopStart = chipWaveLoopStart;\n                        instrument.chipWaveLoopEnd = chipWaveLoopEnd;\n                        instrument.chipWaveLoopMode = chipWaveLoopMode;\n                        instrument.chipWavePlayBackwards = chipWavePlayBackwards;\n                        instrument.chipWaveStartOffset = chipWaveStartOffset;\n                        // instrument.chipWaveReleaseMode = chipWaveReleaseMode;\n                    }\n                }\n                else if (fromGoldBox && !beforeFour && beforeSix) {\n                    if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                            if (!willLoadLegacySamplesForOldSongs) {\n                                willLoadLegacySamplesForOldSongs = true;\n                                Config.willReloadForCustomSamples = true;\n                                EditorConfig.customSamples = [\"legacySamples\"];\n                                loadBuiltInSamples(0);\n                            }\n                    }\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\t\t\t\t\t\t\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const filterResonanceRange: number = 8;\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.drumsetEnvelopes: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)){\n\n                    }\n                    if (instrument.type == InstrumentType.drumset) {\n                        for (let i: number = 0; i < Config.drumCount; i++) {\n                            let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                            instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\n                        }\n                    } else {\n                        // This used to be used for general filter envelopes.\n                        // The presence of an envelope affects how convertLegacySettings\n                        // decides the closest possible approximation, so update it.\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                        legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                    }\n                } else {\n                    // This tag is now only used for drumset filter envelopes.\n                    for (let i: number = 0; i < Config.drumCount; i++) {\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\n                    }\n                }\n            } break;\n            case SongTagCode.pulseWidth: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                if (fromBeepBox) {\n                    // BeepBox formula\n                    instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\n\n                }\n\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                    legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                }\n\n                if (fromUltraBox && !beforeFour) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];  \n                    instrument.decimalOffset = clamp(0, 99 + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n\n            } break;\n            case SongTagCode.stringSustain: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                instrument.stringSustain = clamp(0, Config.stringSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n            } break;\n            case SongTagCode.fadeInOut: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    // this tag was used for a combination of transition and fade in/out.\n                    const legacySettings = [\n                        { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                        { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                        { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                        { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                        { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    ];\n                    if (beforeThree && fromBeepBox) {\n                        const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    } else if (beforeSix && fromBeepBox) {\n                        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                            for (const instrument of this.channels[channelIndex].instruments) {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    // Enable transition if it was used.\n                                    instrument.effects |= 1 << EffectType.transition;\n                                }\n                            }\n                        }\n                    } else if ((beforeFour && !fromGoldBox && !fromUltraBox) || fromBeepBox) {\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    } else {\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n\n                        // Read tie-note \n                        if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\n                            // Set legacy tie over flag, which is only used to port notes in patterns using this instrument as tying.\n                            instrument.legacyTieOver = true;\n\n                        }\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    }\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    if (fromJummBox||fromGoldBox||fromUltraBox)\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                }\n            } break;\n            case SongTagCode.vibrato: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    if (beforeSeven && fromBeepBox) {\n                        if (beforeThree && fromBeepBox) {\n                            const legacyEffects: number[] = [0, 3, 2, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n                            instrument.vibrato = legacyEffects[effect];\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                // Imitate the legacy tremolo with a filter envelope.\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                // Enable vibrato if it was used.\n                                instrument.effects |= 1 << EffectType.vibrato;\n                            }\n                        } else if (beforeSix && fromBeepBox) {\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                        // Imitate the legacy tremolo with a filter envelope.\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        // Enable vibrato if it was used.\n                                        instrument.effects |= 1 << EffectType.vibrato;\n                                    }\n                                    if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\n                                        // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n                                        instrument.effects |= 1 << EffectType.reverb;\n                                        instrument.reverb = legacyGlobalReverb;\n                                    }\n                                }\n                            }\n                        } else {\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.vibrato = legacyEffects[effect];\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                // Imitate the legacy tremolo with a filter envelope.\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                // Enable vibrato if it was used.\n                                instrument.effects |= 1 << EffectType.vibrato;\n                            }\n                            if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                                // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n                                instrument.effects |= 1 << EffectType.reverb;\n                                instrument.reverb = legacyGlobalReverb;\n                            }\n                        }\n                    } else {\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.vibrato = vibrato;\n                        if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                            // Enable vibrato if it was used.\n                            instrument.effects |= 1 << EffectType.vibrato;\n                        }\n                        // Custom vibrato\n                        if (vibrato == Config.vibratos.length) {\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.effects |= 1 << EffectType.vibrato;\n                        }\n                        // Enforce standard vibrato settings\n                        else {\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                            instrument.vibratoSpeed = 10; // Normal speed\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                        }\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.arpeggioSpeed: {\n                // Deprecated, but supported for legacy purposes\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\n                }\n                else {\n                    // Do nothing, deprecated for now\n                }\n            } break;\n            case SongTagCode.unison: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                } else if (beforeSix && fromBeepBox) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            let unison: number = clamp(0, Config.unisons.length, originalValue);\n                            if (originalValue == 8) {\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n                                unison = 2;\n                                instrument.chord = 3;\n                            }\n                            instrument.unison = unison;\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    let unison: number = clamp(0, Config.unisons.length, originalValue);\n                    if (originalValue == 8) {\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n                        unison = 2;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\n                    }\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\n                } else {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                \n                //if (fromUltrabox) && !beforeFive && (instrument.unison == Config.unisons.length)  {\n                if (instrument.unison == Config.unisons.length) {\n                    instrument.unisonVoices = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    const unisonSpreadNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonSpread: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n\n                    const unisonOffsetNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonOffset: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n\n                    const unisonExpressionNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonExpression: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                    \n                    const unisonSignNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonSign: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n\n\n                    instrument.unisonSpread = unisonSpread / 1000;\n                    if (unisonSpreadNegative == 0) instrument.unisonSpread *= -1;\n\n                    instrument.unisonOffset = unisonOffset / 1000;\n                    if (unisonOffsetNegative == 0) instrument.unisonOffset *= -1;\n\n                    instrument.unisonExpression = unisonExpression / 1000;\n                    if (unisonExpressionNegative == 0) instrument.unisonExpression *= -1;\n\n                    instrument.unisonSign = unisonSign / 1000;\n                    if (unisonSignNegative == 0) instrument.unisonSign *= -1;\n                } else {\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                }\n            \n            } break;\n            case SongTagCode.chord: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                        // Enable chord if it was used.\n                        instrument.effects |= 1 << EffectType.chord;\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.effects: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\n                    if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                        // Disable reverb if legacy song reverb was zero.\n                        instrument.effects &= ~(1 << EffectType.reverb);\n                    } else if (effectsIncludeReverb(instrument.effects)) {\n                        instrument.reverb = legacyGlobalReverb;\n                    }\n                    // @jummbus - Enabling pan effect on song import no matter what to make it a default.\n                    //if (instrument.pan != Config.panCenter) {\n                    instrument.effects |= 1 << EffectType.panning;\n                    //}\n                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                        // Enable vibrato if it was used.\n                        instrument.effects |= 1 << EffectType.vibrato;\n                    }\n                    if (instrument.detune != Config.detuneCenter) {\n                        // Enable detune if it was used.\n                        instrument.effects |= 1 << EffectType.detune;\n                    }\n                    if (instrument.aliases)\n                        instrument.effects |= 1 << EffectType.distortion;\n                    else\n                        instrument.effects &= ~(1 << EffectType.distortion);\n\n                    // convertLegacySettings may need to force-enable note filter, call\n                    // it again here to make sure that this override takes precedence.\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    // BeepBox currently uses two base64 characters at 6 bits each for a bitfield representing all the enabled effects.\n                    if (EffectType.length > 12) throw new Error();\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                    if (effectsIncludeNoteFilter(instrument.effects)) {\n                        let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (fromBeepBox || typeCheck == 0) {\n                            instrument.noteFilterType = false;\n                            if (fromJummBox || fromGoldBox || fromUltraBox)\n                                typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next index in jummbox to get actual count\n                            instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\n                            for (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\n                                instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\n                            }\n                            for (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\n                                point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            for (let i: number = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\n                                charIndex += 3;\n                            }\n\n                            // Get subfilters as well. Skip Index 0, is a copy of the base filter.\n                            instrument.noteSubFilters[0] = instrument.noteFilter;\n                            if ((fromJummBox && !beforeFive) || (fromGoldBox) || (fromUltraBox)) {\n                                let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                                    if (usingSubFilterBitfield & (1 << j)) {\n                                        // Number of control points\n                                        const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (instrument.noteSubFilters[j + 1] == null)\n                                            instrument.noteSubFilters[j + 1] = new FilterSettings();\n                                        instrument.noteSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPoints.length; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\n                                            instrument.noteSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\n                                        }\n                                        for (let i: number = 0; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\n                                            const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[i];\n                                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                            charIndex += 3;\n                                        }\n                                    }\n                                }\n                            }\n                        } else {\n                            instrument.noteFilterType = true;\n                            instrument.noteFilter.reset();\n                            instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                        }\n                    }\n                    if (effectsIncludeTransition(instrument.effects)) {\n                        instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeChord(instrument.effects)) {\n                        instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        // Custom arpeggio speed... only in JB, and only if the instrument arpeggiates.\n                        if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && (fromJummBox||fromGoldBox||fromUltraBox)) {\n                            instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                        }\n                    }\n                    if (effectsIncludePitchShift(instrument.effects)) {\n                        instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeDetune(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // Convert from BeepBox's formula\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\n                        } else {\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeVibrato(instrument.effects)) {\n                        instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                        // Custom vibrato\n                        if (instrument.vibrato == Config.vibratos.length && (fromJummBox || fromGoldBox || fromUltraBox)) {\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        // Enforce standard vibrato settings\n                        else {\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                            instrument.vibratoSpeed = 10; // Normal speed\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                        }\n                    }\n                    if (effectsIncludeDistortion(instrument.effects)) {\n                        instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox)\n                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                    }\n                    if (effectsIncludeBitcrusher(instrument.effects)) {\n                        instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludePanning(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\n                            instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\n                        }\n                        else {\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n\n                        // Now, pan delay follows on new versions of jummbox.\n                        if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox)\n                            instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                    if (effectsIncludeChorus(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // BeepBox has 4 chorus values vs. JB's 8\n                            instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\n                        }\n                        else {\n                            instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeEcho(instrument.effects)) {\n                        instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeReverb(instrument.effects)) {\n                        if (fromBeepBox) {\n                            instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\n                        } else {\n                            instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                }\n                // Clamp the range.\n                instrument.effects &= (1 << EffectType.length) - 1;\n            } break;\n            case SongTagCode.volume: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                } else if (beforeSix && fromBeepBox) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                } else if (fromBeepBox) {\n                    // Beepbox v9's volume range is 0-7 (0 is max, 7 is mute)\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\n                }\n            } break;\n            case SongTagCode.pan: {\n                if (beforeNine && fromBeepBox) {\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    // Pan delay follows on v3 + v4\n                    if (fromJummBox && !beforeThree || fromGoldBox || fromUltraBox) {\n                        instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.detune: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    // Before jummbox v5, detune was -50 to 50. Now it is 0 to 400\n                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\n                    instrument.effects |= 1 << EffectType.detune;\n                } else {\n                    // Now in v5, tag code is deprecated and handled thru detune effects.\n                }\n            } break;\n            case SongTagCode.customChipWave: {\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                // Pop custom wave values\n                for (let j: number = 0; j < 64; j++) {\n                    instrument.customChipWave[j]\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\n                }\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                    sum += instrument.customChipWave[i];\n                }\n                const average: number = sum / instrument.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = instrument.customChipWave[i] - average;\n                    instrument.customChipWaveIntegral[i] = cumulative;\n                }\n\n                // 65th, last sample is for anti-aliasing\n                instrument.customChipWaveIntegral[64] = 0.0;\n\n            } break;\n            case SongTagCode.limiterSettings: {\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                // Check if limiter settings are used... if not, restore to default\n                if (nextValue == 0x3f) {\n                    this.restoreLimiterDefaults();\n                }\n                else {\n                    // Limiter is used, grab values\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\n                }\n            } break;\n            case SongTagCode.channelNames: {\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\n                    var channelNameLength;\n                    if (beforeFour && !fromGoldBox && !fromUltraBox)\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\n                    else\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\n\n                    charIndex += channelNameLength;\n                }\n            } break;\n            case SongTagCode.algorithm: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.fm) {\n                    instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                else {\n                    instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.chord) {\n                        let carrierCountTemp = clamp(1, Config.operatorCount + 2+1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\n                        charIndex++\n                        let tempModArray: number[][] = [];\n                        if (compressed.charCodeAt(charIndex+1) == SongTagCode.effects) {\n                            charIndex++\n                            let j: number = 0;\n                            charIndex++\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\n                                tempModArray[j] = [];\n                                let o: number = 0;\n                                while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\n                                    tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                    o++\n                                    charIndex++\n                                }\n                                j++;\n                                charIndex++\n                            }\n                            instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\n                            charIndex++; //????\n                        }\n                    }\n                }\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    // The algorithm determines the carrier count, which affects how legacy settings are imported.\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                }\n            } break;\n            case SongTagCode.feedbackType: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.fm) {\n                    instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                else {\n                    instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\n                    let tempModArray: number[][] = [];\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.effects) {\n                        let j: number = 0;\n                        charIndex++\n                        while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\n                            tempModArray[j] = [];\n                            let o: number = 0;\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\n                                tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                o++\n                                charIndex++\n                            }\n                            j++;\n                            charIndex++\n                        }\n                        instrument.customFeedbackType.set(tempModArray);\n                        charIndex++; //???? weirdly needs to skip the end character or it'll use that next loop instead of like just moving to the next one itself\n                    }\n                }\n\n            } break;\n            case SongTagCode.feedbackAmplitude: {\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n            } break;\n            case SongTagCode.feedbackEnvelope: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    \n                    let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                    legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.operatorFrequencies: {\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            if (beforeThree && fromGoldBox) {\n\t\t\t\t\t\t\t\tconst freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                               \n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == 10 ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n                            }\n\t\t\t\t\t\t\telse if (!fromGoldBox && !fromUltraBox) {\n\t\t\t\t\t\t\t\tconst freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == 10 ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n                            else {\n                                for (let o = 0; o < (instrument.type == 10 ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n            } break;\n            case SongTagCode.operatorAmplitudes: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                    instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n            } break;\n            case SongTagCode.envelopes: {\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.operatorEnvelopes = [];\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];  \n                        legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\n                    }\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    const envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    for (let i: number = 0; i < envelopeCount; i++) {\n                        const target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        let index: number = 0;\n                        const maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\n                        if (maxCount > 1) {\n                            index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa]; \n                        const envelope: number = clamp(0, Config.envelopes.length, aa);\n                        instrument.addEnvelope(target, index, envelope);\n                    }\n                }\n            } break;\n            case SongTagCode.operatorWaves: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\n                if (beforeThree && fromGoldBox) {\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\n                        const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\n                        const old: number = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (old == 3) {\n                            instrument.operators[o].pulseWidth = 5;\n                        } else if (old == 4) {\n                            instrument.operators[o].pulseWidth = 4;\n                        } else if (old == 5) {\n                            instrument.operators[o].pulseWidth = 6;\n                        }\n                        instrument.operators[o].waveform = pre3To3g[old];\n                    }\n                } else {\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        if (fromJummBox) {\n                            const jummToG = [0, 1, 3, 2, 4, 5];\n                            instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        } else {\n                            instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        // Pulse width follows, if it is a pulse width operator wave\n                        if (instrument.operators[o].waveform == 2) {\n                            instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                }\n\n            } break;\n            case SongTagCode.spectrum: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.spectrum) {\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                    }\n                    instrument.spectrumWave.markCustomWaveDirty();\n                    charIndex += byteCount;\n                } else if (instrument.type == InstrumentType.drumset) {\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                        }\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                    }\n                    charIndex += byteCount;\n                } else {\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\n                }\n            } break;\n            case SongTagCode.harmonics: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\n                }\n                instrument.harmonicsWave.markCustomWaveDirty();\n                charIndex += byteCount;\n            } break;\n            case SongTagCode.aliases: {\n                if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                    if (instrument.aliases) {\n                        instrument.distortion = 0;\n                        instrument.effects |= 1 << EffectType.distortion;\n                    }\n                } else {\n                    if (fromUltraBox) {\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];  \n                        instrument.decimalOffset = clamp(0, 50 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            }\n                break;\n            case SongTagCode.bars: {\n                let subStringLength: number;\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    subStringLength = Math.ceil(barCount * 0.5);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let i: number = 0; i < barCount; i++) {\n                        this.channels[channelIndex].bars[i] = bits.read(3) + 1;\n                    }\n                } else if (beforeFive && fromBeepBox) {\n                    let neededBits: number = 0;\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (let i: number = 0; i < this.barCount; i++) {\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\n                        }\n                    }\n                } else {\n                    let neededBits: number = 0;\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (let i: number = 0; i < this.barCount; i++) {\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits);\n                        }\n                    }\n                }\n                charIndex += subStringLength;\n            } break;\n            case SongTagCode.patterns: {\n                let bitStringLength: number = 0;\n                let channelIndex: number;\n                let largerChords: boolean = !((beforeFour && fromJummBox) || fromBeepBox);\n                let recentPitchBitLength: number = (largerChords ? 4 : 3);\n                let recentPitchLength: number = (largerChords ? 16 : 8);\n                if (beforeThree && fromBeepBox) {\n                    channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default. \n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    bitStringLength = bitStringLength << 6;\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    channelIndex = 0;\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    while (bitStringLengthLength > 0) {\n                        bitStringLength = bitStringLength << 6;\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        bitStringLengthLength--;\n                    }\n                }\n\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\n                charIndex += bitStringLength;\n\n                const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n                let songReverbChannel: number = -1;\n                let songReverbInstrument: number = -1;\n                let songReverbIndex: number = -1;\n\n                while (true) {\n                    const channel: Channel = this.channels[channelIndex];\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n                    const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n\n                    const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n                    const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n\n                    const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\n                    // Some info about modulator settings immediately follows in mod channels.\n                    if (isModChannel) {\n                        let jumfive: boolean = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)\n\n                        // 2 more indices for 'all' and 'active'\n                        const neededModInstrumentIndexBits: number = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n\n                        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\n                            let instrument: Instrument = channel.instruments[instrumentIndex];\n\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\n                                // 0 - For pitch/noise\n                                // 1 - (used to be For noise, not needed)\n                                // 2 - For song\n                                // 3 - None\n                                let status: number = bits.read(2);\n\n                                switch (status) {\n                                    case 0: // Pitch\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\n                                        break;\n                                    case 1: // Noise\n                                        // Getting a status of 1 means this is legacy mod info. Need to add pitch channel count, as it used to just store noise channel index and not overall channel index\n                                        instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\n                                        break;\n                                    case 2: // For song\n                                        instrument.modChannels[mod] = -1;\n                                        break;\n                                    case 3: // None\n                                        instrument.modChannels[mod] = -2;\n                                        break;\n                                }\n\n                                // Mod setting is only used if the status isn't \"none\".\n                                if (status != 3) {\n                                    instrument.modulators[mod] = bits.read(6);\n                                }\n\n                                if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\")) {\n                                    instrument.modFilterTypes[mod] = bits.read(6);\n                                }\n\n                                if (jumfive && instrument.modChannels[mod] >= 0) {\n                                    let forNoteFilter: boolean = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\n\n                                    // For legacy filter cut/peak, need to denote since scaling must be applied\n                                    if (instrument.modulators[mod] == 7) {\n                                        // Legacy filter cut index\n                                        // Check if there is no filter dot on prospective filter. If so, add a low pass at max possible freq.\n\n                                        if (forNoteFilter) {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\n                                        }\n                                        else {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\n                                        }\n\n                                        instrument.modFilterTypes[mod] = 1; // Dot 1 X\n\n                                    }\n                                    else if (instrument.modulators[mod] == 8) {\n                                        // Legacy filter peak index\n                                        if (forNoteFilter) {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\n                                        }\n                                        else {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\n                                        }\n\n                                        instrument.modFilterTypes[mod] = 2; // Dot 1 Y\n                                    }\n                                }\n                                else if (jumfive) {\n                                    // Check for song reverb mod, which must be handled differently now that it is a multiplier\n                                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\n                                        songReverbChannel = channelIndex;\n                                        songReverbInstrument = instrumentIndex;\n                                        songReverbIndex = mod;\n                                    }\n                                }\n\n                                // Based on setting, enable some effects for the modulated instrument. This isn't always set, say if the instrument's pan was right in the center.\n                                // Only used on import of old songs, because sometimes an invalid effect can be set in a mod in the new version that is actually unused. In that case,\n                                // keeping the mod invalid is better since it preserves the state.\n                                if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length) {\n                                    this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\n                                }\n                            }\n                        }\n                    }\n\n                    // Scalar applied to detune mods since its granularity was upped. Could be repurposed later if any other granularity changes occur.\n                    const detuneScaleNotes: number[][] = [];\n                    for (let j: number = 0; j < channel.instruments.length; j++) {\n                        detuneScaleNotes[j] = [];\n                        for (let i: number = 0; i < Config.modCount; i++) {\n                            detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour&&fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\n                        }\n                    }\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n                    const recentShapes: any[] = [];\n                    for (let i: number = 0; i < recentPitches.length; i++) {\n                        recentPitches[i] += octaveOffset;\n                    }\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\n                        const newPattern: Pattern = channel.patterns[i];\n\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n                            newPattern.instruments.length = 1;\n                        } else {\n                            if (this.patternInstruments) {\n                                const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\n                                for (let j: number = 0; j < instrumentCount; j++) {\n                                    newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\n                                }\n                                newPattern.instruments.length = instrumentCount;\n                            } else {\n                                newPattern.instruments[0] = 0;\n                                newPattern.instruments.length = Config.instrumentCountMin;\n                            }\n                        }\n\n                        if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\n                            newPattern.notes.length = 0;\n                            continue;\n                        }\n\n                        let curPart: number = 0;\n                        const newNotes: Note[] = newPattern.notes;\n                        let noteCount: number = 0;\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n\n                            const useOldShape: boolean = bits.read(1) == 1;\n                            let newNote: boolean = false;\n                            let shapeIndex: number = 0;\n                            if (useOldShape) {\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\n                            } else {\n                                newNote = bits.read(1) == 1;\n                            }\n\n                            if (!useOldShape && !newNote) {\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\n                                if (isModChannel) {\n                                    const isBackwards: boolean = bits.read(1) == 1;\n                                    const restLength: number = bits.readPartDuration();\n                                    if (isBackwards) {\n                                        curPart -= restLength;\n                                    }\n                                    else {\n                                        curPart += restLength;\n                                    }\n                                } else {\n                                    const restLength: number = (beforeSeven && fromBeepBox)\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                        : bits.readPartDuration();\n                                    curPart += restLength;\n\n                                }\n                            } else {\n                                let shape: any;\n                                if (useOldShape) {\n                                    shape = recentShapes[shapeIndex];\n                                    recentShapes.splice(shapeIndex, 1);\n                                } else {\n                                    shape = {};\n\n                                    if (!largerChords) {\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\n                                        shape.pitchCount = 1;\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\n                                    }\n                                    else {\n                                        // New format is:\n                                        //      0: 1 pitch\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\n                                        if (bits.read(1) == 1) {\n                                            shape.pitchCount = bits.read(3) + 2;\n                                        }\n                                        else {\n                                            shape.pitchCount = 1;\n                                        }\n                                    }\n\n                                    shape.pinCount = bits.readPinCount();\n                                    if (fromBeepBox) {\n                                        shape.initialSize = bits.read(2) * 2;\n                                    } else if (!isModChannel) {\n                                        shape.initialSize = bits.read(bitsPerNoteSize);\n                                    } else {\n                                        shape.initialSize = bits.read(9);\n                                    }\n\n                                    shape.pins = [];\n                                    shape.length = 0;\n                                    shape.bendCount = 0;\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\n                                        let pinObj: any = {};\n                                        pinObj.pitchBend = bits.read(1) == 1;\n                                        if (pinObj.pitchBend) shape.bendCount++;\n                                        shape.length += (beforeSeven && fromBeepBox)\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                            : bits.readPartDuration();\n                                        pinObj.time = shape.length;\n                                        if (fromBeepBox) {\n                                            pinObj.size = bits.read(2) * 2;\n                                        } else if (!isModChannel) {\n                                            pinObj.size = bits.read(bitsPerNoteSize);\n                                        }\n                                        else {\n                                            pinObj.size = bits.read(9);\n                                        }\n                                        shape.pins.push(pinObj);\n                                    }\n                                }\n                                recentShapes.unshift(shape);\n                                if (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\n\n                                let note: Note;\n                                if (newNotes.length <= noteCount) {\n                                    note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\n                                    newNotes[noteCount++] = note;\n                                } else {\n                                    note = newNotes[noteCount++];\n                                    note.start = curPart;\n                                    note.end = curPart + shape.length;\n                                    note.pins[0].size = shape.initialSize;\n                                }\n\n                                let pitch: number;\n                                let pitchCount: number = 0;\n                                const pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\n                                    const useOldPitch: boolean = bits.read(1) == 1;\n                                    if (!useOldPitch) {\n                                        const interval: number = bits.readPitchInterval();\n                                        pitch = lastPitch;\n                                        let intervalIter: number = interval;\n                                        while (intervalIter > 0) {\n                                            pitch++;\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\n                                            intervalIter--;\n                                        }\n                                        while (intervalIter < 0) {\n                                            pitch--;\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\n                                            intervalIter++;\n                                        }\n                                    } else {\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\n                                        pitch = recentPitches[pitchIndex];\n                                        recentPitches.splice(pitchIndex, 1);\n                                    }\n\n                                    recentPitches.unshift(pitch);\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\n\n                                    if (j < shape.pitchCount) {\n                                        note.pitches[pitchCount++] = pitch;\n                                    } else {\n                                        pitchBends.push(pitch);\n                                    }\n\n                                    if (j == shape.pitchCount - 1) {\n                                        lastPitch = note.pitches[0];\n                                    } else {\n                                        lastPitch = pitch;\n                                    }\n                                }\n                                note.pitches.length = pitchCount;\n                                pitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\n                                if (isModChannel) {\n                                    note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                }\n                                let pinCount: number = 1;\n                                for (const pinObj of shape.pins) {\n                                    if (pinObj.pitchBend) pitchBends.shift();\n\n                                    const interval: number = pitchBends[0] - note.pitches[0];\n                                    if (note.pins.length <= pinCount) {\n                                        if (isModChannel) {\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]]);\n                                        } else {\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\n                                        }\n                                    } else {\n                                        const pin: NotePin = note.pins[pinCount++];\n                                        pin.interval = interval;\n                                        pin.time = pinObj.time;\n                                        if (isModChannel) {\n                                            pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                        } else {\n                                            pin.size = pinObj.size;\n                                        }\n                                    }\n                                }\n                                note.pins.length = pinCount;\n\n                                if (note.start == 0) {\n                                    if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)||(beforeFour&&fromGoldBox))) {\n                                        note.continuesLastPattern = (bits.read(1) == 1);\n                                    } else {\n                                        if ((beforeFour && !fromUltraBox) || fromBeepBox) {\n                                            note.continuesLastPattern = false;\n                                        } else {\n                                            note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\n                                        }\n                                    }\n                                }\n\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\n                            }\n                        }\n                        newNotes.length = noteCount;\n                    }\n\n                    if (beforeThree && fromBeepBox) {\n                        break;\n                    } else {\n                        channelIndex++;\n                        if (channelIndex >= this.getChannelCount()) break;\n                    }\n                } // while (true)\n\n                // Correction for old JB songs that had song reverb mods. Change all instruments using reverb to max reverb\n                if (((fromJummBox && beforeFive)||(beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\n                    for (let channelIndex: number = 0; channelIndex < this.channels.length; channelIndex++) {\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                            if (effectsIncludeReverb(instrument.effects)) {\n                                instrument.reverb = Config.reverbRange - 1;\n                            }\n                            // Set song reverb via mod to the old setting at song start.\n                            if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\n                                const patternIndex: number = this.channels[channelIndex].bars[0];\n                                if (patternIndex > 0) {\n                                    // Doesn't work if 1st pattern isn't using the right ins for song reverb...\n                                    // Add note to start of pattern\n                                    const pattern: Pattern = this.channels[channelIndex].patterns[patternIndex - 1];\n                                    let lowestPart: number = 6;\n                                    for (const note of pattern.notes) {\n                                        if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\n                                            lowestPart = Math.min(lowestPart, note.start);\n                                        }\n                                    }\n\n                                    if (lowestPart > 0) {\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\n                                    }\n                                }\n                                else {\n                                    // Add pattern\n                                    if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\n                                        const pattern: Pattern = new Pattern();\n                                        this.channels[channelIndex].patterns.push(pattern);\n                                        this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\n                                        if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\n                                            for (let chn: number = 0; chn < this.channels.length; chn++) {\n                                                if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\n                                                    this.channels[chn].patterns.push(new Pattern());\n                                                }\n                                            }\n                                            this.patternsPerChannel++;\n                                        }\n                                        pattern.instruments.length = 1;\n                                        pattern.instruments[0] = songReverbInstrument;\n                                        pattern.notes.length = 0;\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            } break;\n            default: {\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(/*charIndex - 2*/0, charIndex));\n            } break;\n        }\n\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n\n    private static _isProperUrl(string: string): boolean {\n        try { \n            return Boolean(new URL(string)); \n        }\n        catch(x){ \n            return false; \n        }\n    }\n\n    // @TODO: Share more of this code with AddSamplesPrompt.\n    private static _parseAndConfigureCustomSample(url: string, customSampleUrls: string[], customSamplePresets: Preset[], sampleLoadingState: SampleLoadingState, parseOldSyntax: boolean): boolean {\n        const defaultIndex: number = 0;\n        const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\n        const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\n\n        const customSampleUrlIndex: number = customSampleUrls.length;\n        customSampleUrls.push(url);\n        // This depends on `Config.chipWaves` being the same\n        // length as `Config.rawRawChipWaves`.\n        const chipWaveIndex: number = Config.chipWaves.length;\n\n        let urlSliced: string = url;\n\n        let customSampleRate: number = 44100;\n        let isCustomPercussive: boolean = false;\n        let customRootKey: number = 60;\n        let presetIsUsingAdvancedLoopControls: boolean = false;\n        let presetChipWaveLoopStart: number | null = null;\n        let presetChipWaveLoopEnd: number | null = null;\n        let presetChipWaveStartOffset: number | null = null;\n        let presetChipWaveLoopMode: number | null = null;\n        let presetChipWavePlayBackwards: boolean = false;\n\n        let parsedSampleOptions: boolean = false;\n        let optionsStartIndex: number = url.indexOf(\"!\");\n        let optionsEndIndex: number = -1;\n        if (optionsStartIndex === 0) {\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\n            if (optionsEndIndex !== -1) {\n                const rawOptions: string[] = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\n                for (const rawOption of rawOptions) {\n                    const optionCode: string = rawOption.charAt(0);\n                    const optionData: string = rawOption.slice(1, rawOption.length);\n                    if (optionCode === \"s\") {\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\n                    } else if (optionCode === \"r\") {\n                        customRootKey = parseFloatWithDefault(optionData, 60);\n                    } else if (optionCode === \"p\") {\n                        isCustomPercussive = true;\n                    } else if (optionCode === \"a\") {\n                        presetChipWaveLoopStart = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopStart != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"b\") {\n                        presetChipWaveLoopEnd = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopEnd != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"c\") {\n                        presetChipWaveStartOffset = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveStartOffset != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"d\") {\n                        presetChipWaveLoopMode = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopMode != null) {\n                            // @TODO: Error-prone. This should be automatically\n                            // derived from the list of available loop modes.\n                            presetChipWaveLoopMode = clamp(0, 3 + 1, presetChipWaveLoopMode);\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"e\") {\n                        presetChipWavePlayBackwards = true;\n                        presetIsUsingAdvancedLoopControls = true;\n                    }\n                }\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\n                parsedSampleOptions = true;\n            }\n        }\n\n        let parsedUrl: URL | null = null;\n        if (Song._isProperUrl(urlSliced)) {\n            parsedUrl = new URL(urlSliced);\n        }\n        else {\n            alert(url + \" is not a valid url\");\n            return false;\n        }\n\n        if (parseOldSyntax) {\n            if (!parsedSampleOptions && parsedUrl != null) {\n                if (url.indexOf(\"@\") != -1) {\n                    //urlSliced = url.slice(url.indexOf(\"@\"), url.indexOf(\"@\"));\n                    urlSliced = url.replaceAll(\"@\", \"\")\n                    parsedUrl = new URL(urlSliced);\n                    isCustomPercussive = true;\t\n                }\t\n\n                function sliceForSampleRate() {\n                    urlSliced = url.slice(0, url.indexOf(\",\"));\n                    parsedUrl = new URL(urlSliced);\n                    customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\n                    //should this be parseFloat or parseInt?\n                    //ig floats let you do decimals and such, but idk where that would be useful\n                }\n\n                function sliceForRootKey() {\n                    urlSliced = url.slice(0, url.indexOf(\"!\"));\n                    parsedUrl = new URL(urlSliced);\n                    customRootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\n                }\n\n\n                if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\n                    if (url.indexOf(\",\") < url.indexOf(\"!\")) {\n                        sliceForRootKey();\n                        sliceForSampleRate();\n                    }\n                    else {\n                        sliceForSampleRate();\n                        sliceForRootKey();\n                    }\t\n                }\n                else {\n                    if (url.indexOf(\",\") != -1) {\n                        sliceForSampleRate();\n                    }\t\n                    if (url.indexOf(\"!\") != -1) {\n                        sliceForRootKey();\n                    }\t\n                }\n            }\n        }\n\n        if (parsedUrl != null) {\n            // Store in the new format.\n            let urlWithNamedOptions = urlSliced;\n            const namedOptions: string[] = [];\n            if (customSampleRate !== 44100) namedOptions.push(\"s\" + customSampleRate);\n            if (customRootKey !== 60) namedOptions.push(\"r\" + customRootKey);\n            if (isCustomPercussive) namedOptions.push(\"p\");\n            if (presetIsUsingAdvancedLoopControls) {\n                if (presetChipWaveLoopStart != null) namedOptions.push(\"a\" + presetChipWaveLoopStart);\n                if (presetChipWaveLoopEnd != null) namedOptions.push(\"b\" + presetChipWaveLoopEnd);\n                if (presetChipWaveStartOffset != null) namedOptions.push(\"c\" + presetChipWaveStartOffset);\n                if (presetChipWaveLoopMode != null) namedOptions.push(\"d\" + presetChipWaveLoopMode);\n                if (presetChipWavePlayBackwards) namedOptions.push(\"e\");\n            }\n            if (namedOptions.length > 0) {\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\n            }\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\n\n            // @TODO: Could also remove known extensions, but it\n            // would probably be much better to be able to specify\n            // a custom name.\n            // @TODO: If for whatever inexplicable reason someone\n            // uses an url like `https://example.com`, this will\n            // result in an empty name here.\n            const name: string = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\n            // @TODO: What to do about samples with the same name?\n            // The problem with using the url is that the name is\n            // user-facing and long names break assumptions of the\n            // UI.\n            const expression: number = 1.0;\n            Config.chipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultIntegratedSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawRawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            const customSamplePresetSettings: Dictionary<any> = {\n                \"type\": \"chip\",\n                \"eqFilter\": [],\n                \"effects\": [],\n                \"transition\": \"normal\",\n                \"fadeInSeconds\": 0,\n                \"fadeOutTicks\": -3,\n                \"chord\": \"harmony\",\n                \"wave\": name,\n                \"unison\": \"none\",\n                \"envelopes\": [],\n            };\n            if (presetIsUsingAdvancedLoopControls) {\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\n            }\n            const customSamplePreset: Preset = {\n                index: 0, // This should be overwritten by toNameMap, in our caller.\n                name: name,\n                midiProgram: 80,\n                settings: customSamplePresetSettings,\n            };\n            customSamplePresets.push(customSamplePreset);\n            if (!Config.willReloadForCustomSamples) {\n                const rawLoopOptions: any = {\n                    \"isUsingAdvancedLoopControls\": presetIsUsingAdvancedLoopControls,\n                    \"chipWaveLoopStart\": presetChipWaveLoopStart,\n                    \"chipWaveLoopEnd\": presetChipWaveLoopEnd,\n                    \"chipWaveLoopMode\": presetChipWaveLoopMode,\n                    \"chipWavePlayBackwards\": presetChipWavePlayBackwards,\n                    \"chipWaveStartOffset\": presetChipWaveStartOffset,\n                };\n                startLoadingSample(urlSliced, chipWaveIndex, customSamplePresetSettings, rawLoopOptions, customSampleRate);\n            }\n            sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\n            sampleLoadingState.totalSamples++;\n        }\n\n        return true;\n    }\n\n    private static _restoreChipWaveListToDefault(): void {\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n    }\n\n    private static _clearSamples(): void {\n        EditorConfig.customSamples = null;\n\n        Song._restoreChipWaveListToDefault();\n\n        sampleLoadingState.statusTable = {};\n        sampleLoadingState.urlTable = {};\n        sampleLoadingState.totalSamples = 0;\n        sampleLoadingState.samplesLoaded = 0;\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n            sampleLoadingState.totalSamples,\n            sampleLoadingState.samplesLoaded\n        ));\n    }\n\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\n        const channelArray: Object[] = [];\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel: Channel = this.channels[channelIndex];\n            const instrumentArray: Object[] = [];\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n            for (const instrument of channel.instruments) {\n                instrumentArray.push(instrument.toJsonObject());\n            }\n\n            const patternArray: Object[] = [];\n            for (const pattern of channel.patterns) {\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\n            }\n\n            const sequenceArray: number[] = [];\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n\n            const channelObject: any = {\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\n                \"name\": channel.name,\n                \"instruments\": instrumentArray,\n                \"patterns\": patternArray,\n                \"sequence\": sequenceArray,\n            };\n            if (!isNoiseChannel) {\n                // For compatibility with old versions the octave is offset by one.\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\n            }\n            channelArray.push(channelObject);\n        }\n\n        const result: any = {\n            \"name\": this.title,\n            \"format\": Song._format,\n            \"version\": Song._latestUltraBoxVersion,\n            \"scale\": Config.scales[this.scale].name,\n            \"customScale\": this.scaleCustom,\n            \"key\": Config.keys[this.key].name,\n            \"keyOctave\": this.octave,\n            \"introBars\": this.loopStart,\n            \"loopBars\": this.loopLength,\n            \"beatsPerBar\": this.beatsPerBar,\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\n            \"beatsPerMinute\": this.tempo,\n            \"reverb\": this.reverb,\n            \"masterGain\": this.masterGain,\n            \"compressionThreshold\": this.compressionThreshold,\n            \"limitThreshold\": this.limitThreshold,\n            \"limitDecay\": this.limitDecay,\n            \"limitRise\": this.limitRise,\n            \"limitRatio\": this.limitRatio,\n            \"compressionRatio\": this.compressionRatio,\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\n            \"layeredInstruments\": this.layeredInstruments,\n            \"patternInstruments\": this.patternInstruments,\n            \"channels\": channelArray,\n        };\n\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n            result[\"customSamples\"] = EditorConfig.customSamples;\n        }\n\n        return result;\n    }\n\n    public fromJsonObject(jsonObject: any): void {\n        this.initToDefault(true);\n        if (!jsonObject) return;\n\n        //const version: number = jsonObject[\"version\"] | 0;\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\n\n        if (jsonObject[\"name\"] != undefined) {\n            this.title = jsonObject[\"name\"];\n        }\n\n\t    \t\t\t// if (jsonObject[\"customSamples\"] != undefined && EditorConfig.customSamples == undefined) {\n                // EditorConfig.customSamples = atob(jsonObject[\"customSamples\"]);\n\t\t\t\t// console.log(EditorConfig.customSamples);\n\t\t\t\t// location.reload(); \n            // }\n\t\t\t//jsonmark\n\t\t\t//this doesn't work\n\n        if (jsonObject[\"customSamples\"] != undefined) {\n            const customSamples: string[] = jsonObject[\"customSamples\"];\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\n                // Have to duplicate the work done in Song.fromBase64String\n                // early here, because Instrument.fromJsonObject depends on the\n                // chip wave list having the correct items already in memory.\n\n                Config.willReloadForCustomSamples = true;\n\n                Song._restoreChipWaveListToDefault();\n\n                let willLoadLegacySamples: boolean = false;\n                let willLoadNintariboxSamples: boolean = false;\n                let willLoadMarioPaintboxSamples: boolean = false;\n                const customSampleUrls: string[] = [];\n                const customSamplePresets: Preset[] = [];\n                for (const url of customSamples) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    } \n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    \n                    else {\n                        // When EditorConfig.customSamples is saved in the json\n                        // export, it should be using the new syntax, unless\n                        // the user has manually modified the URL, so we don't\n                        // really need to parse the old syntax here.\n                        const parseOldSyntax: boolean = false;\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        } else {\n            // No custom samples, so the only possibility at this point is that\n            // we need to load the legacy samples. Let's check whether that's\n            // necessary.\n            let shouldLoadLegacySamples: boolean = false;\n            if (jsonObject[\"channels\"] != undefined) {\n                for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                    const channelObject: any = jsonObject[\"channels\"][channelIndex];\n                    if (channelObject[\"type\"] !== \"pitch\") {\n                        // Legacy samples can only exist in pitch channels.\n                        continue;\n                    }\n                    if (Array.isArray(channelObject[\"instruments\"])) {\n                        const instrumentObjects: any[] = channelObject[\"instruments\"];\n                        for (let i: number = 0; i < instrumentObjects.length; i++) {\n                            const instrumentObject: any = instrumentObjects[i];\n                            if (instrumentObject[\"type\"] !== \"chip\") {\n                                // Legacy samples can only exist in chip wave\n                                // instruments.\n                                continue;\n                            }\n                            if (instrumentObject[\"wave\"] == null) {\n                                // This should exist if things got saved\n                                // correctly, but if they didn't, skip this.\n                                continue;\n                            }\n                            const waveName: string = instrumentObject[\"wave\"];\n                            // @TODO: Avoid this duplication.\n                            const names: string[] = [\n                                \"paandorasbox kick\",\n                                \"paandorasbox snare\",\n                                \"paandorasbox piano1\",\n                                \"paandorasbox WOW\",\n                                \"paandorasbox overdrive\",\n                                \"paandorasbox trumpet\",\n                                \"paandorasbox saxophone\",\n                                \"paandorasbox orchestrahit\",\n                                \"paandorasbox detatched violin\",\n                                \"paandorasbox synth\",\n                                \"paandorasbox sonic3snare\",\n                                \"paandorasbox come on\",\n                                \"paandorasbox choir\",\n                                \"paandorasbox overdriveguitar\",\n                                \"paandorasbox flute\",\n                                \"paandorasbox legato violin\",\n                                \"paandorasbox tremolo violin\",\n                                \"paandorasbox amen break\",\n                                \"paandorasbox pizzicato violin\",\n                                \"paandorasbox tim allen grunt\",\n                                \"paandorasbox tuba\",\n                                \"paandorasbox loopingcymbal\",\n                                \"paandorasbox standardkick\",\n                                \"paandorasbox standardsnare\",\n                                \"paandorasbox closedhihat\",\n                                \"paandorasbox foothihat\",\n                                \"paandorasbox openhihat\",\n                                \"paandorasbox crashcymbal\",\n                                \"paandorasbox pianoC4\",\n                                \"paandorasbox liver pad\",\n                                \"paandorasbox marimba\",\n                                \"paandorasbox susdotwav\",\n                                \"paandorasbox wackyboxtts\",\n                                \"paandorasbox peppersteak_1\",\n                                \"paandorasbox peppersteak_2\",\n                                \"paandorasbox vinyl_noise\",\n                                \"paandorasbeta slap bass\",\n                                \"paandorasbeta HD EB overdrive guitar\",\n                                \"paandorasbeta sunsoft bass\",\n                                \"paandorasbeta masculine choir\",\n                                \"paandorasbeta feminine choir\",\n                                \"paandorasbeta tololoche\",\n                                \"paandorasbeta harp\",\n                                \"paandorasbeta pan flute\",\n                                \"paandorasbeta krumhorn\",\n                                \"paandorasbeta timpani\",\n                                \"paandorasbeta crowd hey\",\n                                \"paandorasbeta wario land 4 brass\",\n                                \"paandorasbeta wario land 4 rock organ\",\n                                \"paandorasbeta wario land 4 DAOW\",\n                                \"paandorasbeta wario land 4 hour chime\",\n                                \"paandorasbeta wario land 4 tick\",\n                                \"paandorasbeta kirby kick\",\n                                \"paandorasbeta kirby snare\",\n                                \"paandorasbeta kirby bongo\",\n                                \"paandorasbeta kirby click\",\n                                \"paandorasbeta sonor kick\",\n                                \"paandorasbeta sonor snare\",\n                                \"paandorasbeta sonor snare (left hand)\",\n                                \"paandorasbeta sonor snare (right hand)\",\n                                \"paandorasbeta sonor high tom\",\n                                \"paandorasbeta sonor low tom\",\n                                \"paandorasbeta sonor hihat (closed)\",\n                                \"paandorasbeta sonor hihat (half opened)\",\n                                \"paandorasbeta sonor hihat (open)\",\n                                \"paandorasbeta sonor hihat (open tip)\",\n                                \"paandorasbeta sonor hihat (pedal)\",\n                                \"paandorasbeta sonor crash\",\n                                \"paandorasbeta sonor crash (tip)\",\n                                \"paandorasbeta sonor ride\"\n                            ];\n                            // The difference for these is in the doubled a.\n                            const oldNames: string[] = [\n                                \"pandoraasbox kick\",\n                                \"pandoraasbox snare\",\n                                \"pandoraasbox piano1\",\n                                \"pandoraasbox WOW\",\n                                \"pandoraasbox overdrive\",\n                                \"pandoraasbox trumpet\",\n                                \"pandoraasbox saxophone\",\n                                \"pandoraasbox orchestrahit\",\n                                \"pandoraasbox detatched violin\",\n                                \"pandoraasbox synth\",\n                                \"pandoraasbox sonic3snare\",\n                                \"pandoraasbox come on\",\n                                \"pandoraasbox choir\",\n                                \"pandoraasbox overdriveguitar\",\n                                \"pandoraasbox flute\",\n                                \"pandoraasbox legato violin\",\n                                \"pandoraasbox tremolo violin\",\n                                \"pandoraasbox amen break\",\n                                \"pandoraasbox pizzicato violin\",\n                                \"pandoraasbox tim allen grunt\",\n                                \"pandoraasbox tuba\",\n                                \"pandoraasbox loopingcymbal\",\n                                \"pandoraasbox standardkick\",\n                                \"pandoraasbox standardsnare\",\n                                \"pandoraasbox closedhihat\",\n                                \"pandoraasbox foothihat\",\n                                \"pandoraasbox openhihat\",\n                                \"pandoraasbox crashcymbal\",\n                                \"pandoraasbox pianoC4\",\n                                \"pandoraasbox liver pad\",\n                                \"pandoraasbox marimba\",\n                                \"pandoraasbox susdotwav\",\n                                \"pandoraasbox wackyboxtts\",\n                                \"pandoraasbox peppersteak_1\",\n                                \"pandoraasbox peppersteak_2\",\n                                \"pandoraasbox vinyl_noise\",\n                                \"pandoraasbeta slap bass\",\n                                \"pandoraasbeta HD EB overdrive guitar\",\n                                \"pandoraasbeta sunsoft bass\",\n                                \"pandoraasbeta masculine choir\",\n                                \"pandoraasbeta feminine choir\",\n                                \"pandoraasbeta tololoche\",\n                                \"pandoraasbeta harp\",\n                                \"pandoraasbeta pan flute\",\n                                \"pandoraasbeta krumhorn\",\n                                \"pandoraasbeta timpani\",\n                                \"pandoraasbeta crowd hey\",\n                                \"pandoraasbeta wario land 4 brass\",\n                                \"pandoraasbeta wario land 4 rock organ\",\n                                \"pandoraasbeta wario land 4 DAOW\",\n                                \"pandoraasbeta wario land 4 hour chime\",\n                                \"pandoraasbeta wario land 4 tick\",\n                                \"pandoraasbeta kirby kick\",\n                                \"pandoraasbeta kirby snare\",\n                                \"pandoraasbeta kirby bongo\",\n                                \"pandoraasbeta kirby click\",\n                                \"pandoraasbeta sonor kick\",\n                                \"pandoraasbeta sonor snare\",\n                                \"pandoraasbeta sonor snare (left hand)\",\n                                \"pandoraasbeta sonor snare (right hand)\",\n                                \"pandoraasbeta sonor high tom\",\n                                \"pandoraasbeta sonor low tom\",\n                                \"pandoraasbeta sonor hihat (closed)\",\n                                \"pandoraasbeta sonor hihat (half opened)\",\n                                \"pandoraasbeta sonor hihat (open)\",\n                                \"pandoraasbeta sonor hihat (open tip)\",\n                                \"pandoraasbeta sonor hihat (pedal)\",\n                                \"pandoraasbeta sonor crash\",\n                                \"pandoraasbeta sonor crash (tip)\",\n                                \"pandoraasbeta sonor ride\"\n                            ];\n                            // This mirrors paandorasboxWaveNames, which is unprefixed.\n                            const veryOldNames: string[] = [\n                                \"kick\",\n                                \"snare\",\n                                \"piano1\",\n                                \"WOW\",\n                                \"overdrive\",\n                                \"trumpet\",\n                                \"saxophone\",\n                                \"orchestrahit\",\n                                \"detatched violin\",\n                                \"synth\",\n                                \"sonic3snare\",\n                                \"come on\",\n                                \"choir\",\n                                \"overdriveguitar\",\n                                \"flute\",\n                                \"legato violin\",\n                                \"tremolo violin\",\n                                \"amen break\",\n                                \"pizzicato violin\",\n                                \"tim allen grunt\",\n                                \"tuba\",\n                                \"loopingcymbal\",\n                                \"standardkick\",\n                                \"standardsnare\",\n                                \"closedhihat\",\n                                \"foothihat\",\n                                \"openhihat\",\n                                \"crashcymbal\",\n                                \"pianoC4\",\n                                \"liver pad\",\n                                \"marimba\",\n                                \"susdotwav\",\n                                \"wackyboxtts\"\n                            ];\n                            if (names.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                            } else if (oldNames.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                                // If we see one of these old names, update it\n                                // to the corresponding new name.\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\n                            } else if (veryOldNames.includes(waveName)) {\n                                if (waveName === \"trumpet\" || waveName === \"flute\") {\n                                    // @TODO: This isn't exactly correct, but for now, if we see one of these two,\n                                    // leave them with the JummBox chip waves. The actual solution here will probably\n                                    // involve disambiguation via user input.\n                                } else {\n                                    // There's no other chip waves with ambiguous names like that, so it should\n                                    // be okay to assume we'll need to load the legacy samples now.\n                                    shouldLoadLegacySamples = true;\n                                    // If we see one of these old names, update it\n                                    // to the corresponding new name.\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (shouldLoadLegacySamples) {\n                Config.willReloadForCustomSamples = true;\n\n                Song._restoreChipWaveListToDefault();\n\n                loadBuiltInSamples(0);\n                EditorConfig.customSamples = [\"legacySamples\"];\n            } else {\n                // We don't need to load the legacy samples, but we may have\n                // leftover samples in memory. If we do, clear them.\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n                    // We need to reload anyway in this case, because (for now)\n                    // the chip wave lists won't be correctly updated.\n                    Config.willReloadForCustomSamples = true;\n                    Song._clearSamples();\n                }\n            }\n        }\n\n        this.scale = 0; // default to free.\n        if (jsonObject[\"scale\"] != undefined) {\n            const oldScaleNames: Dictionary<string> = {\n                \"romani :)\": \"dbl harmonic :)\",\n                \"romani :(\": \"dbl harmonic :(\",\n                \"enigma\": \"strange\",\n            };\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\n            if (scale != -1) this.scale = scale;\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                if (jsonObject[\"customScale\"] != undefined) {\n                    for (var i of jsonObject[\"customScale\"].keys()) {\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\n                    }\n                }\n            }\n        }\n\n        if (jsonObject[\"key\"] != undefined) {\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\n                const key: string = jsonObject[\"key\"];\n                // This conversion code depends on C through B being\n                // available as keys, of course.\n                if (key === \"C+\") {\n                    this.key = 0;\n                    this.octave = 1;\n                } else if (key === \"G- (actually F#-)\") {\n                    this.key = 6;\n                    this.octave = -1;\n                } else if (key === \"C-\") {\n                    this.key = 0;\n                    this.octave = -1;\n                } else if (key === \"oh no (F-)\") {\n                    this.key = 5;\n                    this.octave = -1;\n                } else {\n                    const letter: string = key.charAt(0).toUpperCase();\n                    const symbol: string = key.charAt(1).toLowerCase();\n                    const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\n                    const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\n                    let index: number | undefined = letterMap[letter];\n                    const offset: number | undefined = accidentalMap[symbol];\n                    if (index != undefined) {\n                        if (offset != undefined) index += offset;\n                        if (index < 0) index += 12;\n                        index = index % 12;\n                        this.key = index;\n                    }\n                }\n            }\n        }\n\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\n        }\n\n        if (jsonObject[\"keyOctave\"] != undefined) {\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\n        }\n\n        let legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\n        if (jsonObject[\"reverb\"] != undefined) {\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\n        }\n\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\n        }\n\n        let importedPartsPerBeat: number = 4;\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\n            if (this.rhythm == -1) {\n                this.rhythm = 1;\n            }\n        }\n\n        // Read limiter settings. Ranges and defaults are based on slider settings\n\n        if (jsonObject[\"masterGain\"] != undefined) {\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\n        } else {\n            this.masterGain = 1.0;\n        }\n\n        if (jsonObject[\"limitThreshold\"] != undefined) {\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\n        }\n        else {\n            this.limitThreshold = 1.0;\n        }\n\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\n        }\n        else {\n            this.compressionThreshold = 1.0;\n        }\n\n        if (jsonObject[\"limitRise\"] != undefined) {\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\n        }\n        else {\n            this.limitRise = 4000.0;\n        }\n\n        if (jsonObject[\"limitDecay\"] != undefined) {\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\n        }\n        else {\n            this.limitDecay = 4.0;\n        }\n\n        if (jsonObject[\"limitRatio\"] != undefined) {\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\n        }\n        else {\n            this.limitRatio = 1.0;\n        }\n\n        if (jsonObject[\"compressionRatio\"] != undefined) {\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\n        }\n        else {\n            this.compressionRatio = 1.0;\n        }\n\n        let maxInstruments: number = 1;\n        let maxPatterns: number = 1;\n        let maxBars: number = 1;\n        if (jsonObject[\"channels\"] != undefined) {\n            for (const channelObject of jsonObject[\"channels\"]) {\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\n            }\n        }\n\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\n        } else {\n            this.layeredInstruments = false;\n        }\n        if (jsonObject[\"patternInstruments\"] != undefined) {\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\n        } else {\n            this.patternInstruments = (maxInstruments > 1);\n        }\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\n        this.barCount = Math.min(maxBars, Config.barCountMax);\n\n        if (jsonObject[\"introBars\"] != undefined) {\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\n        }\n        if (jsonObject[\"loopBars\"] != undefined) {\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\n        }\n\n        const newPitchChannels: Channel[] = [];\n        const newNoiseChannels: Channel[] = [];\n        const newModChannels: Channel[] = [];\n        if (jsonObject[\"channels\"] != undefined) {\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\n\n                const channel: Channel = new Channel();\n\n                let isNoiseChannel: boolean = false;\n                let isModChannel: boolean = false;\n                if (channelObject[\"type\"] != undefined) {\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\n                } else {\n                    // for older files, assume drums are channel 3.\n                    isNoiseChannel = (channelIndex >= 3);\n                }\n                if (isNoiseChannel) {\n                    newNoiseChannels.push(channel);\n                } else if (isModChannel) {\n                    newModChannels.push(channel);\n                }\n                else {\n                    newPitchChannels.push(channel);\n                }\n\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\n                    if (isNoiseChannel) channel.octave = 0;\n                }\n\n                if (channelObject[\"name\"] != undefined) {\n                    channel.name = channelObject[\"name\"];\n                }\n                else {\n                    channel.name = \"\";\n                }\n\n                if (Array.isArray(channelObject[\"instruments\"])) {\n                    const instrumentObjects: any[] = channelObject[\"instruments\"];\n                    for (let i: number = 0; i < instrumentObjects.length; i++) {\n                        if (i >= this.getMaxInstrumentsPerChannel()) break;\n                        const instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\n                        channel.instruments[i] = instrument;\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb);\n                    }\n\n                }\n\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\n                    const pattern: Pattern = new Pattern();\n                    channel.patterns[i] = pattern;\n\n                    let patternObject: any = undefined;\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\n                    if (patternObject == undefined) continue;\n\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel);\n                }\n                channel.patterns.length = this.patternsPerChannel;\n\n                for (let i: number = 0; i < this.barCount; i++) {\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n        }\n\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\n        this.pitchChannelCount = newPitchChannels.length;\n        this.noiseChannelCount = newNoiseChannels.length;\n        this.modChannelCount = newModChannels.length;\n        this.channels.length = 0;\n        Array.prototype.push.apply(this.channels, newPitchChannels);\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\n        Array.prototype.push.apply(this.channels, newModChannels);\n\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            // The prompt seems to get stuck if reloading is done too quickly.\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n\n    public getPattern(channelIndex: number, bar: number): Pattern | null {\n        if (bar < 0 || bar >= this.barCount) return null;\n        const patternIndex: number = this.channels[channelIndex].bars[bar];\n        if (patternIndex == 0) return null;\n        return this.channels[channelIndex].patterns[patternIndex - 1];\n    }\n\n    public getBeatsPerMinute(): number {\n        return this.tempo;\n    }\n\n    public static getNeededBits(maxValue: number): number {\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\n    }\n\n    public restoreLimiterDefaults(): void {\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.limitRise = 4000.0;\n        this.limitDecay = 4.0;\n        this.limitThreshold = 1.0;\n        this.compressionThreshold = 1.0;\n        this.masterGain = 1.0;\n    }\n}\n\nclass PickedString {\n    public delayLine: Float32Array | null = null;\n    public delayIndex: number;\n    public allPassSample: number;\n    public allPassPrevInput: number;\n    public shelfSample: number;\n    public shelfPrevInput: number;\n    public fractionalDelaySample: number;\n    public prevDelayLength: number;\n    public delayLengthDelta: number;\n    public delayResetOffset: number;\n\n    public allPassG: number = 0.0;\n    public allPassGDelta: number = 0.0;\n    public shelfA1: number = 0.0;\n    public shelfA1Delta: number = 0.0;\n    public shelfB0: number = 0.0;\n    public shelfB0Delta: number = 0.0;\n    public shelfB1: number = 0.0;\n    public shelfB1Delta: number = 0.0;\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        this.delayIndex = -1;\n        this.allPassSample = 0.0;\n        this.allPassPrevInput = 0.0;\n        this.shelfSample = 0.0;\n        this.shelfPrevInput = 0.0;\n        this.fractionalDelaySample = 0.0;\n        this.prevDelayLength = -1.0;\n        this.delayResetOffset = 0;\n    }\n\n    public update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number): void {\n        const allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n        const shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n        const decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n        const decayCurveEnd: number = (Math.pow(100.0, stringDecayEnd) - 1.0) / 99.0;\n\n        const prevDelayLength: number = this.prevDelayLength;\n\n        const phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\n        const phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\n        const phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\n\n        const radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\n        const radiansPerSampleEnd: number = Math.PI * 2.0 * phaseDeltaEnd;\n\n        const centerHarmonicStart: number = radiansPerSampleStart * 2.0;\n        const centerHarmonicEnd: number = radiansPerSampleEnd * 2.0;\n\n        const allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\n        const allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\n\n        const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\n        const decayRateEnd: number = Math.pow(0.5, decayCurveEnd * shelfRadians / radiansPerSampleEnd);\n        const shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\n        const shelfGainEnd: number = Math.pow(decayRateEnd, Config.stringDecayRate);\n        const expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\n        const expressionDecayEnd: number = Math.pow(decayRateEnd, 0.002);\n\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\n        const allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\n        const allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\n        Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, shelfGainStart);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const shelfA1Start: number = Synth.tempFilterStartCoefficients.a[1];\n        const shelfB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\n        const shelfB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\n        const shelfPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\n        Synth.tempFilterEndCoefficients.highShelf1stOrder(shelfRadians, shelfGainEnd);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const shelfA1End: number = Synth.tempFilterEndCoefficients.a[1];\n        const shelfB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\n        const shelfB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\n        const shelfPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\n        const periodLengthStart: number = 1.0 / phaseDeltaStart;\n        const periodLengthEnd: number = 1.0 / phaseDeltaEnd;\n        const minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\n        const delayLength: number = periodLengthStart - allPassPhaseDelayStart - shelfPhaseDelayStart;\n        const delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - shelfPhaseDelayEnd;\n\n        this.prevDelayLength = delayLength;\n        this.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\n        this.allPassG = allPassGStart;\n        this.shelfA1 = shelfA1Start;\n        this.shelfB0 = shelfB0Start;\n        this.shelfB1 = shelfB1Start;\n        this.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\n        this.shelfA1Delta = (shelfA1End - shelfA1Start) / roundedSamplesPerTick;\n        this.shelfB0Delta = (shelfB0End - shelfB0Start) / roundedSamplesPerTick;\n        this.shelfB1Delta = (shelfB1End - shelfB1Start) / roundedSamplesPerTick;\n\n        const pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\n\n        const reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\n            // The delay line buffer will get reused for other tones so might as well\n            // start off with a buffer size that is big enough for most notes.\n            const likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\n            const newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n            if (!reinitializeImpulse && this.delayLine != null) {\n                // If the tone has already started but the buffer needs to be reallocated,\n                // transfer the old data to the new buffer.\n                const oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\n                const startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\n                for (let i: number = 0; i < this.delayLine.length; i++) {\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                }\n            }\n            this.delayLine = newDelayLine;\n        }\n        const delayLine: Float32Array = this.delayLine;\n        const delayBufferMask: number = (delayLine.length - 1) >> 0;\n\n        if (reinitializeImpulse) {\n            // -1 delay index means the tone was reset.\n            // Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\n\n            this.delayIndex = 0;\n            this.allPassSample = 0.0;\n            this.allPassPrevInput = 0.0;\n            this.shelfSample = 0.0;\n            this.shelfPrevInput = 0.0;\n            this.fractionalDelaySample = 0.0;\n\n            // Clear away a region of the delay buffer for the new impulse.\n            const startImpulseFrom: number = -delayLength;\n            const startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\n            const stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\n            this.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\n            for (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\n                delayLine[i & delayBufferMask] = 0.0;\n            }\n\n            const impulseWave: Float32Array = instrumentState.wave!;\n            const impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n            const impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\n\n            const fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\n            const startImpulseFromSample: number = Math.ceil(startImpulseFrom);\n            const stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\n            const stopImpulseAtSample: number = stopImpulseAt;\n            let impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n            let prevWaveIntegral: number = 0.0;\n            for (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n                const impulsePhaseInt: number = impulsePhase | 0;\n                const index: number = impulsePhaseInt % impulseWaveLength;\n                let nextWaveIntegral: number = impulseWave[index];\n                const phaseRatio: number = impulsePhase - impulsePhaseInt;\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\n                const sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n                const fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n                const fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n                const combinedFade: number = fadeIn * fadeOut;\n                const curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\n                delayLine[i & delayBufferMask] += sample * curvedFade;\n                prevWaveIntegral = nextWaveIntegral;\n                impulsePhase += impulsePhaseDelta;\n            }\n        }\n    }\n}\n\nclass EnvelopeComputer {\n    public noteSecondsStart: number = 0.0;\n    public noteSecondsEnd: number = 0.0;\n    public noteTicksStart: number = 0.0;\n    public noteTicksEnd: number = 0.0;\n    public noteSizeStart: number = Config.noteSizeMax;\n    public noteSizeEnd: number = Config.noteSizeMax;\n    public prevNoteSize: number = Config.noteSizeMax;\n    public nextNoteSize: number = Config.noteSizeMax;\n    private _noteSizeFinal: number = Config.noteSizeMax;\n    public prevNoteSecondsStart: number = 0.0;\n    public prevNoteSecondsEnd: number = 0.0;\n    public prevNoteTicksStart: number = 0.0;\n    public prevNoteTicksEnd: number = 0.0;\n    private _prevNoteSizeFinal: number = Config.noteSizeMax;\n\n    public prevSlideStart: boolean = false;\n    public prevSlideEnd: boolean = false;\n    public nextSlideStart: boolean = false;\n    public nextSlideEnd: boolean = false;\n    public prevSlideRatioStart: number = 0.0;\n    public prevSlideRatioEnd: number = 0.0;\n    public nextSlideRatioStart: number = 0.0;\n    public nextSlideRatioEnd: number = 0.0;\n\n    public readonly envelopeStarts: number[] = [];\n    public readonly envelopeEnds: number[] = [];\n    private readonly _modifiedEnvelopeIndices: number[] = [];\n    private _modifiedEnvelopeCount: number = 0;\n    public lowpassCutoffDecayVolumeCompensation: number = 1.0;\n\n    constructor(/*private _perNote: boolean*/) {\n        //const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\n        const length: number = EnvelopeComputeIndex.length;\n        for (let i: number = 0; i < length; i++) {\n            this.envelopeStarts[i] = 1.0;\n            this.envelopeEnds[i] = 1.0;\n        }\n\n        this.reset();\n    }\n\n    public reset(): void {\n        this.noteSecondsEnd = 0.0;\n        this.noteTicksEnd = 0.0;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsEnd = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this._modifiedEnvelopeCount = 0;\n    }\n\n    public computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number, secondsPerTick: number, tone: Tone | null): void {\n        const transition: Transition = instrument.getTransition();\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n            this.prevNoteSecondsEnd = this.noteSecondsEnd;\n            this.prevNoteTicksEnd = this.noteTicksEnd;\n            this._prevNoteSizeFinal = this._noteSizeFinal;\n            this.noteSecondsEnd = 0.0;\n            this.noteTicksEnd = 0.0;\n        }\n        if (tone != null) {\n            if (tone.note != null) {\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\n            } else {\n                this._noteSizeFinal = Config.noteSizeMax;\n            }\n        }\n\n        const tickTimeEnd: number = tickTimeStart + 1.0;\n        const noteSecondsStart: number = this.noteSecondsEnd;\n        const noteSecondsEnd: number = noteSecondsStart + secondsPerTick;\n        const noteTicksStart: number = this.noteTicksEnd;\n        const noteTicksEnd: number = noteTicksStart + 1.0;\n        const prevNoteSecondsStart: number = this.prevNoteSecondsEnd;\n        const prevNoteSecondsEnd: number = prevNoteSecondsStart + secondsPerTick;\n        const prevNoteTicksStart: number = this.prevNoteTicksEnd;\n        const prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\n\n        const beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\n        const beatTimeStart: number = beatsPerTick * tickTimeStart;\n        const beatTimeEnd: number = beatsPerTick * tickTimeEnd;\n\n        let noteSizeStart: number = this._noteSizeFinal;\n        let noteSizeEnd: number = this._noteSizeFinal;\n        let prevNoteSize: number = this._prevNoteSizeFinal;\n        let nextNoteSize: number = 0;\n        let prevSlideStart: boolean = false;\n        let prevSlideEnd: boolean = false;\n        let nextSlideStart: boolean = false;\n        let nextSlideEnd: boolean = false;\n        let prevSlideRatioStart: number = 0.0;\n        let prevSlideRatioEnd: number = 0.0;\n        let nextSlideRatioStart: number = 0.0;\n        let nextSlideRatioEnd: number = 0.0;\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\n            const endPinIndex: number = tone.note.getEndPinIndex(currentPart);\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\n            const endPin: NotePin = tone.note.pins[endPinIndex];\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\n\n            if (transition.slides) {\n                const noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\n                const noteEndTick: number = tone.noteEndPart * Config.ticksPerPart;\n                const noteLengthTicks: number = noteEndTick - noteStartTick;\n                const maximumSlideTicks: number = noteLengthTicks * 0.5;\n                const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\n                    if (tickTimeStart - noteStartTick < slideTicks) {\n                        prevSlideStart = true;\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStart - noteStartTick) / slideTicks);\n                    }\n                    if (tickTimeEnd - noteStartTick < slideTicks) {\n                        prevSlideEnd = true;\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEnd - noteStartTick) / slideTicks);\n                    }\n                }\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\n                    nextNoteSize = tone.nextNote.pins[0].size\n                    if (noteEndTick - tickTimeStart < slideTicks) {\n                        nextSlideStart = true;\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStart) / slideTicks);\n                    }\n                    if (noteEndTick - tickTimeEnd < slideTicks) {\n                        nextSlideEnd = true;\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEnd) / slideTicks);\n                    }\n                }\n            }\n        }\n\n        let lowpassCutoffDecayVolumeCompensation: number = 1.0;\n        let usedNoteSize: boolean = false;\n        for (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\n            let automationTarget: AutomationTarget;\n            let targetIndex: number;\n            let envelope: Envelope;\n            if (envelopeIndex == instrument.envelopeCount) {\n                if (usedNoteSize /*|| !this._perNote*/) break;\n                // Special case: if no other envelopes used note size, default to applying it to note volume.\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n                targetIndex = 0;\n                envelope = Config.envelopes.dictionary[\"note size\"];\n            } else {\n                let envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\n                targetIndex = envelopeSettings.index;\n                envelope = Config.envelopes[envelopeSettings.envelope];\n                if (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\n            }\n            if (/*automationTarget.perNote == this._perNote &&*/ automationTarget.computeIndex != null) {\n                const computeIndex: number = automationTarget.computeIndex + targetIndex;\n                let envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsStart, beatTimeStart, noteSizeStart);\n                let envelopeEnd: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsEnd, beatTimeEnd, noteSizeEnd);\n\n                if (prevSlideStart) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\n                }\n                if (prevSlideEnd) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\n                    envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\n                }\n                if (nextSlideStart) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeStart, nextNoteSize);\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\n                }\n                if (nextSlideEnd) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeEnd, nextNoteSize);\n                    envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\n                }\n\n                this.envelopeStarts[computeIndex] *= envelopeStart;\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\n\n                if (automationTarget.isFilter) {\n                    const filterSettings: FilterSettings = /*this._perNote ?*/ (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter /*: instrument.eqFilter*/;\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope));\n                    }\n                }\n            }\n        }\n\n        this.noteSecondsStart = noteSecondsStart;\n        this.noteSecondsEnd = noteSecondsEnd;\n        this.noteTicksStart = noteTicksStart;\n        this.noteTicksEnd = noteTicksEnd;\n        this.prevNoteSecondsStart = prevNoteSecondsStart;\n        this.prevNoteSecondsEnd = prevNoteSecondsEnd;\n        this.prevNoteTicksStart = prevNoteTicksStart;\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\n        this.prevNoteSize = prevNoteSize;\n        this.nextNoteSize = nextNoteSize;\n        this.noteSizeStart = noteSizeStart;\n        this.noteSizeEnd = noteSizeEnd;\n        this.prevSlideStart = prevSlideStart;\n        this.prevSlideEnd = prevSlideEnd;\n        this.nextSlideStart = nextSlideStart;\n        this.nextSlideEnd = nextSlideEnd;\n        this.prevSlideRatioStart = prevSlideRatioStart;\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\n        this.nextSlideRatioStart = nextSlideRatioStart;\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\n    }\n\n    public clearEnvelopes(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\n            const computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\n            this.envelopeStarts[computeIndex] = 1.0;\n            this.envelopeEnds[computeIndex] = 1.0;\n        }\n        this._modifiedEnvelopeCount = 0;\n    }\n\n    public static computeEnvelope(envelope: Envelope, time: number, beats: number, noteSize: number): number {\n        switch (envelope.type) {\n            case EnvelopeType.noteSize: return Synth.noteSizeToVolumeMult(noteSize);\n            case EnvelopeType.none: return 1.0;\n            case EnvelopeType.twang: return 1.0 / (1.0 + time * envelope.speed);\n            case EnvelopeType.swell: return 1.0 - 1.0 / (1.0 + time * envelope.speed);\n            case EnvelopeType.tremolo: return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\n            case EnvelopeType.tremolo2: return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\n            case EnvelopeType.punch: return Math.max(1.0, 2.0 - time * 10.0);\n            case EnvelopeType.flare: const attack: number = 0.25 / Math.sqrt(envelope.speed); return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * envelope.speed);\n            case EnvelopeType.decay: return Math.pow(2, -envelope.speed * time);\n            case EnvelopeType.wibble:\n                let temp = 0.5 - Math.cos(beats * envelope.speed) * 0.5;\n                temp = 1.0 / (1.0 + time * (envelope.speed - (temp / (1.5 / envelope.speed))));\n                temp = temp > 0.0 ? temp : 0.0;\n                return temp;\n            case EnvelopeType.linear: {\n                let lin = (1.0 - (time / (16 / envelope.speed)));\n                lin = lin > 0.0 ? lin : 0.0;\n                return lin;\n            }\n            case EnvelopeType.rise: {\n                let lin = (time / (16 / envelope.speed));\n                lin = lin < 1.0 ? lin : 1.0;\n                return lin;\n            }\n            default: throw new Error(\"Unrecognized operator envelope type.\");\n        }\n\n    }\n\n    public static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope): number {\n        // This is a little hokey in the details, but I designed it a while ago and keep it \n        // around for compatibility. This decides how much to increase the volume (or\n        // expression) to compensate for a decaying lowpass cutoff to maintain perceived\n        // volume overall.\n        if (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * envelope.speed;\n        if (envelope.type == EnvelopeType.twang) return 1.0 + 0.02 * envelope.speed;\n        return 1.0;\n    }\n}\n\nclass Tone {\n    public instrumentIndex: number;\n    public readonly pitches: number[] = Array(Config.maxChordSize+2).fill(0);\n    public pitchCount: number = 0;\n    public chordSize: number = 0;\n    public drumsetPitch: number | null = null;\n    public note: Note | null = null;\n    public prevNote: Note | null = null;\n    public nextNote: Note | null = null;\n    public prevNotePitchIndex: number = 0;\n    public nextNotePitchIndex: number = 0;\n    public freshlyAllocated: boolean = true;\n    public atNoteStart: boolean = false;\n    public isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\n    public passedEndOfNote: boolean = false;\n    public forceContinueAtStart: boolean = false;\n    public forceContinueAtEnd: boolean = false;\n    public noteStartPart: number = 0;\n    public noteEndPart: number = 0;\n    public ticksSinceReleased: number = 0;\n    public liveInputSamplesHeld: number = 0;\n    public lastInterval: number = 0;\n    public noiseSample: number = 0.0;\n    public stringSustainStart: number = 0;\n    public stringSustainEnd: number = 0;\n    public readonly phases: number[] = [];\n    public readonly operatorWaves: OperatorWave[] = [];\n    public readonly phaseDeltas: number[] = [];\n\t\t\t// advloop addition\n        public directions: number[] = [];\n        public chipWaveCompletions: number[] = [];\n        public chipWavePrevWaves: number[] = [];\n        public chipWaveCompletionsLastWave: number[] = [];\n           // advloop addition\n    public readonly phaseDeltaScales: number[] = [];\n    public expression: number = 0.0;\n    public expressionDelta: number = 0.0;\n    public readonly operatorExpressions: number[] = [];\n    public readonly operatorExpressionDeltas: number[] = [];\n    public readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\n    public prevVibrato: number | null = null;\n    public prevStringDecay: number | null = null;\n    public pulseWidth: number = 0.0;\n    public pulseWidthDelta: number = 0.0;\n    public decimalOffset: number = 0.0;\n    public readonly pickedStrings: PickedString[] = [];\n\n    public readonly noteFilters: DynamicBiquadFilter[] = [];\n    public noteFilterCount: number = 0;\n    public initialNoteFilterInput1: number = 0.0;\n    public initialNoteFilterInput2: number = 0.0;\n\n    public specialIntervalExpressionMult: number = 1.0;\n    public readonly feedbackOutputs: number[] = [];\n    public feedbackMult: number = 0.0;\n    public feedbackDelta: number = 0.0;\n    public stereoVolumeLStart: number = 0.0;\n    public stereoVolumeRStart: number = 0.0;\n    public stereoVolumeLDelta: number = 0.0;\n    public stereoVolumeRDelta: number = 0.0;\n    public stereoDelayStart: number = 0.0;\n    public stereoDelayEnd: number = 0.0;\n    public stereoDelayDelta: number = 0.0;\n    public customVolumeStart: number = 0.0;\n    public customVolumeEnd: number = 0.0;\n    public filterResonanceStart: number = 0.0;\n    public filterResonanceDelta: number = 0.0;\n    public isFirstOrder: boolean = false;\n\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        this.noiseSample = 0.0;\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            this.phases[i] = 0.0;\n\t\t\t\t\t\t// advloop addition\n                this.directions[i] = 1;\n                this.chipWaveCompletions[i] = 0;\n                this.chipWavePrevWaves[i] = 0;\n                this.chipWaveCompletionsLastWave[i] = 0;\n                // advloop addition\n            this.operatorWaves[i] = Config.operatorWaves[0];\n            this.feedbackOutputs[i] = 0.0;\n            this.prevPitchExpressions[i] = null;\n        }\n        for (let i: number = 0; i < this.noteFilterCount; i++) {\n            this.noteFilters[i].resetOutput();\n        }\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInput1 = 0.0;\n        this.initialNoteFilterInput2 = 0.0;\n        this.liveInputSamplesHeld = 0;\n        for (const pickedString of this.pickedStrings) {\n            pickedString.reset();\n        }\n        this.envelopeComputer.reset();\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.drumsetPitch = null;\n    }\n}\n\nclass InstrumentState {\n    public instrument: Instrument;\n\n    public awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\n    public computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\n    public tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\n    public flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\n    public deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\n    public attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\n    public flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\n    public readonly activeTones: Deque<Tone> = new Deque<Tone>();\n    public readonly activeModTones: Deque<Tone> = new Deque<Tone>();\n    public readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\n    public readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\n\n    public type: InstrumentType = InstrumentType.chip;\n    public synthesizer: Function | null = null;\n    public wave: Float32Array | null = null;\n\t\t\t\t // advloop addition\n            public isUsingAdvancedLoopControls = false;\n            public chipWaveLoopStart = 0;\n            public chipWaveLoopEnd = 0;\n            public chipWaveLoopMode = 0;\n            public chipWavePlayBackwards = false;\n            public chipWaveStartOffset = 0;\n            // advloop addition\n    public noisePitchFilterMult: number = 1.0;\n    public unison: Unison | null = null;\n    public unisonVoices: number = 1;\n    public unisonSpread: number = 0.0;\n    public unisonOffset: number = 0.0;\n    public unisonExpression: number = 1.4;\n    public unisonSign: number = 1.0;\n    public chord: Chord | null = null;\n    public effects: number = 0;\n\n    public volumeScale: number = 0;\n    public aliases: boolean = false;\n\n    public eqFilterVolume: number = 1.0;\n    public eqFilterVolumeDelta: number = 0.0;\n    public mixVolume: number = 1.0;\n    public mixVolumeDelta: number = 0.0;\n    public delayInputMult: number = 0.0;\n    public delayInputMultDelta: number = 0.0;\n\n    public distortion: number = 0.0;\n    public distortionDelta: number = 0.0;\n    public distortionDrive: number = 0.0;\n    public distortionDriveDelta: number = 0.0;\n    public distortionFractionalInput1: number = 0.0;\n    public distortionFractionalInput2: number = 0.0;\n    public distortionFractionalInput3: number = 0.0;\n    public distortionPrevInput: number = 0.0;\n    public distortionNextOutput: number = 0.0;\n\n    public bitcrusherPrevInput: number = 0.0;\n    public bitcrusherCurrentOutput: number = 0.0;\n    public bitcrusherPhase: number = 1.0;\n    public bitcrusherPhaseDelta: number = 0.0;\n    public bitcrusherPhaseDeltaScale: number = 1.0;\n    public bitcrusherScale: number = 1.0;\n    public bitcrusherScaleScale: number = 1.0;\n    public bitcrusherFoldLevel: number = 1.0;\n    public bitcrusherFoldLevelScale: number = 1.0;\n\n    public readonly eqFilters: DynamicBiquadFilter[] = [];\n    public eqFilterCount: number = 0;\n    public initialEqFilterInput1: number = 0.0;\n    public initialEqFilterInput2: number = 0.0;\n\n    public panningDelayLine: Float32Array | null = null;\n    public panningDelayPos: number = 0;\n    public panningVolumeL: number = 0.0;\n    public panningVolumeR: number = 0.0;\n    public panningVolumeDeltaL: number = 0.0;\n    public panningVolumeDeltaR: number = 0.0;\n    public panningOffsetL: number = 0.0;\n    public panningOffsetR: number = 0.0;\n    public panningOffsetDeltaL: number = 0.0;\n    public panningOffsetDeltaR: number = 0.0;\n\n    public chorusDelayLineL: Float32Array | null = null;\n    public chorusDelayLineR: Float32Array | null = null;\n    public chorusDelayLineDirty: boolean = false;\n    public chorusDelayPos: number = 0;\n    public chorusPhase: number = 0;\n    public chorusVoiceMult: number = 0;\n    public chorusVoiceMultDelta: number = 0;\n    public chorusCombinedMult: number = 0;\n    public chorusCombinedMultDelta: number = 0;\n\n    public echoDelayLineL: Float32Array | null = null;\n    public echoDelayLineR: Float32Array | null = null;\n    public echoDelayLineDirty: boolean = false;\n    public echoDelayPos: number = 0;\n    public echoDelayOffsetStart: number = 0;\n    public echoDelayOffsetEnd: number | null = null;\n    public echoDelayOffsetRatio: number = 0.0;\n    public echoDelayOffsetRatioDelta: number = 0.0;\n    public echoMult: number = 0.0;\n    public echoMultDelta: number = 0.0;\n    public echoShelfA1: number = 0.0;\n    public echoShelfB0: number = 0.0;\n    public echoShelfB1: number = 0.0;\n    public echoShelfSampleL: number = 0.0;\n    public echoShelfSampleR: number = 0.0;\n    public echoShelfPrevInputL: number = 0.0;\n    public echoShelfPrevInputR: number = 0.0;\n\n    public reverbDelayLine: Float32Array | null = null;\n    public reverbDelayLineDirty: boolean = false;\n    public reverbDelayPos: number = 0;\n    public reverbMult: number = 0.0;\n    public reverbMultDelta: number = 0.0;\n    public reverbShelfA1: number = 0.0;\n    public reverbShelfB0: number = 0.0;\n    public reverbShelfB1: number = 0.0;\n    public reverbShelfSample0: number = 0.0;\n    public reverbShelfSample1: number = 0.0;\n    public reverbShelfSample2: number = 0.0;\n    public reverbShelfSample3: number = 0.0;\n    public reverbShelfPrevInput0: number = 0.0;\n    public reverbShelfPrevInput1: number = 0.0;\n    public reverbShelfPrevInput2: number = 0.0;\n    public reverbShelfPrevInput3: number = 0.0;\n\n    //public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(false);\n\n    public readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\n    public readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\n    public readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\n\n    constructor() {\n        for (let i: number = 0; i < Config.drumCount; i++) {\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\n        }\n    }\n\n\n    public allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\n        if (effectsIncludePanning(instrument.effects)) {\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\n            }\n        }\n        if (effectsIncludeChorus(instrument.effects)) {\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\n            }\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\n            }\n        }\n        if (effectsIncludeEcho(instrument.effects)) {\n            // account for tempo and delay automation changing delay length during a tick?\n            const safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\n            const baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\n            const safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\n\n            if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\n                this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n                this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n            } else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\n                // The echo delay length may change whlie the song is playing if tempo changes,\n                // so buffers may need to be reallocated, but we don't want to lose any echoes\n                // so we need to copy the contents of the old buffer to the new one.\n                const newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n                const newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n                const oldMask: number = this.echoDelayLineL.length - 1;\n\n                for (let i = 0; i < this.echoDelayLineL.length; i++) {\n                    newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                    newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                }\n\n                this.echoDelayPos = this.echoDelayLineL.length;\n                this.echoDelayLineL = newDelayLineL;\n                this.echoDelayLineR = newDelayLineR;\n            }\n        }\n        if (effectsIncludeReverb(instrument.effects)) {\n            // TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\n            if (this.reverbDelayLine == null) {\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\n            }\n        }\n    }\n\n    public deactivate(): void {\n        this.bitcrusherPrevInput = 0.0;\n        this.bitcrusherCurrentOutput = 0.0;\n        this.bitcrusherPhase = 1.0;\n        for (let i: number = 0; i < this.eqFilterCount; i++) {\n            this.eqFilters[i].resetOutput();\n        }\n        this.eqFilterCount = 0;\n        this.initialEqFilterInput1 = 0.0;\n        this.initialEqFilterInput2 = 0.0;\n        this.distortionFractionalInput1 = 0.0;\n        this.distortionFractionalInput2 = 0.0;\n        this.distortionFractionalInput3 = 0.0;\n        this.distortionPrevInput = 0.0;\n        this.distortionNextOutput = 0.0;\n        this.panningDelayPos = 0;\n        if (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\n        this.echoDelayOffsetEnd = null;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n\n        this.volumeScale = 1.0;\n        this.aliases = false;\n\n        this.awake = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n    }\n\n    public resetAllEffects(): void {\n        this.deactivate();\n\n        if (this.chorusDelayLineDirty) {\n            for (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\n            for (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\n        }\n        if (this.echoDelayLineDirty) {\n            for (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\n            for (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\n        }\n        if (this.reverbDelayLineDirty) {\n            for (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\n        }\n\n        this.chorusPhase = 0.0;\n    }\n\n    public compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null, channelIndex: number, instrumentIndex: number): void {\n        this.computed = true;\n\n        this.type = instrument.type;\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\n        this.unison = Config.unisons[instrument.unison];\n        this.chord = instrument.getChord();\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\n        this.effects = instrument.effects;\t\n\n        this.aliases = instrument.aliases;\n        this.volumeScale = 1.0;\n\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\n\n        const samplesPerSecond: number = synth.samplesPerSecond;\n        this.updateWaves(instrument, samplesPerSecond);\n\n        //const ticksIntoBar: number = synth.getTicksIntoBar();\n        //const tickTimeStart: number = ticksIntoBar;\n        //const tickTimeEnd:   number = ticksIntoBar + 1.0;\n        //const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\n        //const currentPart: number = synth.getCurrentPart();\n        //this.envelopeComputer.computeEnvelopes(instrument, currentPart, tickTimeStart, secondsPerTick, tone);\n        //const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\n        //const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\n\n        const usesDistortion: boolean = effectsIncludeDistortion(this.effects);\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(this.effects);\n        const usesPanning: boolean = effectsIncludePanning(this.effects);\n        const usesChorus: boolean = effectsIncludeChorus(this.effects);\n        const usesEcho: boolean = effectsIncludeEcho(this.effects);\n        const usesReverb: boolean = effectsIncludeReverb(this.effects);\n\n        if (usesDistortion) {\n            let useDistortionStart: number = instrument.distortion;\n            let useDistortionEnd: number = instrument.distortion;\n\n            // Check for distortion mods\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const distortionSliderStart = Math.min(1.0, /*envelopeStarts[InstrumentAutomationIndex.distortion] **/ useDistortionStart / (Config.distortionRange - 1));\n            const distortionSliderEnd = Math.min(1.0, /*envelopeEnds[  InstrumentAutomationIndex.distortion] **/ useDistortionEnd / (Config.distortionRange - 1));\n            const distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\n            const distortionEnd: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\n            const distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\n            const distortionDriveEnd: number = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\n            this.distortion = distortionStart;\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\n            this.distortionDrive = distortionDriveStart;\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\n        }\n\n        if (usesBitcrusher) {\n            let freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\n            let freqSettingEnd: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\n\n            // Check for freq crush mods\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false);\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\n            let quantizationSettingEnd: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\n\n            // Check for bitcrush mods\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false);\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const basePitch: number = Config.keys[synth.song!.key].basePitch + (Config.pitchesPerOctave * synth.song!.octave); // TODO: What if there's a key change mid-song?\n            const freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\n            const freqEnd: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\n            const phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\n            const phaseDeltaEnd: number = Math.min(1.0, freqEnd / samplesPerSecond);\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\n\n            const scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\n            const scaleEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\n            this.bitcrusherScale = scaleStart;\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\n\n            const foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\n            const foldLevelEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\n            this.bitcrusherFoldLevel = foldLevelStart;\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\n        }\n\n        let eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (instrument.eqFilterType) {\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\n            const eqFilterSettingsStart: FilterSettings = instrument.eqFilter;\n            if (instrument.eqSubFilters[1] == null)\n                instrument.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd: FilterSettings = instrument.eqSubFilters[1];\n\n            // Change location based on slider values\n            let startSimpleFreq: number = instrument.eqFilterSimpleCut;\n            let startSimpleGain: number = instrument.eqFilterSimplePeak;\n            let endSimpleFreq: number = instrument.eqFilterSimpleCut;\n            let endSimpleGain: number = instrument.eqFilterSimplePeak;\n\n            let filterChanges: boolean = false;\n\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n\n            let startPoint: FilterControlPoint;\n\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint: FilterControlPoint = eqFilterSettingsEnd.controlPoints[0];\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n\n            } else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n\n            }\n\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n\n            this.eqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings: FilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\n            //const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\n            //const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\n            for (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\n                //const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\n                //const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\n                //const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\n                //const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\n                let startPoint: FilterControlPoint = eqFilterSettings.controlPoints[i];\n                let endPoint: FilterControlPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n\n                // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\n                if (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n\n            }\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n\n        const mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\n        this.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\n        let mixVolumeEnd: number = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\n\n        // Check for mod-related volume delta\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\n            // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n            const startVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\n            const endVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true)\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n        }\n\n        // Check for SONG mod-related volume delta\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\n        }\n\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\n\n        let eqFilterVolumeStart: number = eqFilterVolume;\n        let eqFilterVolumeEnd: number = eqFilterVolume;\n        let delayInputMultStart: number = 1.0;\n        let delayInputMultEnd: number = 1.0;\n\n        if (usesPanning) {\n            //const panEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.panning] * 2.0 - 1.0;\n            //const panEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.panning] * 2.0 - 1.0;\n\n            let usePanStart: number = instrument.pan;\n            let usePanEnd: number = instrument.pan;\n            // Check for pan mods\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let panStart: number = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter /** panEnvelopeStart*/));\n            let panEnd: number = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter /** panEnvelopeEnd  */));\n\n            const volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\n            const volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\n            const volumeEndL: number = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\n            const volumeEndR: number = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\n            const maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\n\n            let usePanDelayStart: number = instrument.panDelay;\n            let usePanDelayEnd: number = instrument.panDelay;\n            // Check for pan delay mods\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const delayStart: number = panStart * usePanDelayStart * maxDelaySamples / 10;\n            const delayEnd: number = panEnd * usePanDelayEnd * maxDelaySamples / 10;\n            const delayStartL: number = Math.max(0.0, delayStart);\n            const delayStartR: number = Math.max(0.0, -delayStart);\n            const delayEndL: number = Math.max(0.0, delayEnd);\n            const delayEndR: number = Math.max(0.0, -delayEnd);\n\n            this.panningVolumeL = volumeStartL;\n            this.panningVolumeR = volumeStartR;\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\n        }\n\n        if (usesChorus) {\n            //const chorusEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.chorus];\n            //const chorusEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.chorus];\n            let useChorusStart: number = instrument.chorus;\n            let useChorusEnd: number = instrument.chorus;\n            // Check for chorus mods\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let chorusStart: number = Math.min(1.0, /*chorusEnvelopeStart **/ useChorusStart / (Config.chorusRange - 1));\n            let chorusEnd: number = Math.min(1.0, /*chorusEnvelopeEnd   **/ useChorusEnd / (Config.chorusRange - 1));\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n            this.chorusVoiceMult = chorusStart;\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\n            this.chorusCombinedMult = chorusCombinedMultStart;\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\n        }\n\n        let maxEchoMult = 0.0;\n        let averageEchoDelaySeconds: number = 0.0;\n        if (usesEcho) {\n            //const echoSustainEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.echoSustain];\n            //const echoSustainEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.echoSustain];\n            let useEchoSustainStart: number = instrument.echoSustain;\n            let useEchoSustainEnd: number = instrument.echoSustain;\n            // Check for echo mods\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\n                useEchoSustainStart = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false) );\n                useEchoSustainEnd = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true) );\n            }\n            const echoMultStart: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeStart **/ useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\n            const echoMultEnd: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeEnd   **/ useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\n            this.echoMult = echoMultStart;\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\n\n            // TODO: After computing a tick's settings once for multiple run lengths (which is\n            // good for audio worklet threads), compute the echo delay envelopes at tick (or\n            // part) boundaries to interpolate between two delay taps.\n            //const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\n            //const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\n            let useEchoDelayStart: number = instrument.echoDelay;\n            let useEchoDelayEnd: number = instrument.echoDelay;\n            let ignoreTicks: boolean = false;\n            // Check for pan delay mods\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false);\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true);\n                ignoreTicks = true;\n            }\n\n            const tmpEchoDelayOffsetStart: number = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            const tmpEchoDelayOffsetEnd: number = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            if (this.echoDelayOffsetEnd != null && !ignoreTicks) {\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\n            } else {\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\n            }\n\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\n\n            this.echoDelayOffsetRatio = 0.0;\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\n\n            const shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n\n        let maxReverbMult = 0.0;\n        if (usesReverb) {\n            //const reverbEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.reverb];\n            //const reverbEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.reverb];\n\n            let useReverbStart: number = instrument.reverb;\n            let useReverbEnd: number = instrument.reverb;\n\n            // Check for mod reverb, instrument level\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\n            }\n            // Check for mod reverb, song scalar\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n            }\n\n            const reverbStart: number = Math.min(1.0, Math.pow(/*reverbEnvelopeStart **/ useReverbStart / Config.reverbRange, 0.667)) * 0.425;\n            const reverbEnd: number = Math.min(1.0, Math.pow(/*reverbEnvelopeEnd   **/ useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\n\n            this.reverbMult = reverbStart;\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\n\n            const shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n\n        if (this.tonesAddedInThisTick) {\n            this.attentuationProgress = 0.0;\n            this.flushedSamples = 0;\n            this.flushingDelayLines = false;\n        } else if (!this.flushingDelayLines) {\n            // If this instrument isn't playing tones anymore, the volume can fade out by the\n            // end of the first tick. It's possible for filters and the panning delay line to\n            // continue past the end of the tone but they should have mostly dissipated by the\n            // end of the tick anyway.\n            if (this.attentuationProgress == 0.0) {\n                eqFilterVolumeEnd = 0.0;\n            } else {\n                eqFilterVolumeStart = 0.0;\n                eqFilterVolumeEnd = 0.0;\n            }\n\n            const attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\n            const halfLifeMult: number = -Math.log2(attenuationThreshold);\n            let delayDuration: number = 0.0;\n\n            if (usesChorus) {\n                delayDuration += Config.chorusMaxDelay;\n            }\n\n            if (usesEcho) {\n                const attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n                const echoDuration: number = halfLife * halfLifeMult;\n                delayDuration += echoDuration;\n            }\n\n            if (usesReverb) {\n                const averageMult: number = maxReverbMult * 2.0;\n                const averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\n                const attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n                const reverbDuration: number = halfLife * halfLifeMult;\n                delayDuration += reverbDuration;\n            }\n\n            const secondsInTick: number = samplesPerTick / samplesPerSecond;\n            const progressInTick: number = secondsInTick / delayDuration;\n            const progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\n            if (progressAtEndOfTick >= 1.0) {\n                delayInputMultEnd = 0.0;\n            }\n\n            this.attentuationProgress = progressAtEndOfTick;\n            if (this.attentuationProgress >= 1.0) {\n                this.flushingDelayLines = true;\n            }\n        } else {\n            // Flushing delay lines to zero since the signal has mostly dissipated.\n            eqFilterVolumeStart = 0.0;\n            eqFilterVolumeEnd = 0.0;\n            delayInputMultStart = 0.0;\n            delayInputMultEnd = 0.0;\n\n            let totalDelaySamples: number = 0;\n            if (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\n            if (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\n            if (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\n\n            this.flushedSamples += roundedSamplesPerTick;\n            if (this.flushedSamples >= totalDelaySamples) {\n                this.deactivateAfterThisTick = true;\n            }\n        }\n\n        this.eqFilterVolume = eqFilterVolumeStart;\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n        this.delayInputMult = delayInputMultStart;\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\n    }\n\n    public updateWaves(instrument: Instrument, samplesPerSecond: number): void {\n        this.volumeScale = 1.0;\n        if (instrument.type == InstrumentType.chip) {\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\n\t\t\t\t\t\t // advloop addition\n                this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\n                this.chipWaveLoopStart = instrument.chipWaveLoopStart;\n                this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\n                this.chipWaveLoopMode = instrument.chipWaveLoopMode;\n                this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\n                this.chipWaveStartOffset = instrument.chipWaveStartOffset;\n               // advloop addition\n\n               this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        } else if (instrument.type == InstrumentType.customChipWave) {\n            this.wave = (this.aliases) ? instrument.customChipWave! : instrument.customChipWaveIntegral!;\n            this.volumeScale = 0.05;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        } else if (instrument.type == InstrumentType.noise) {\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\n        } else if (instrument.type == InstrumentType.harmonics) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        } else if (instrument.type == InstrumentType.spectrum) {\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\n        } else if (instrument.type == InstrumentType.drumset) {\n            for (let i: number = 0; i < Config.drumCount; i++) {\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\n            }\n            this.wave = null;\n        } else {\n            this.wave = null;\n        }\n    }\n\n    public getDrumsetWave(pitch: number): Float32Array {\n        if (this.type == InstrumentType.drumset) {\n            return this.drumsetSpectrumWaves[pitch].wave!;\n        } else {\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\n        }\n    }\n\n    public static drumsetIndexReferenceDelta(index: number): number {\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\n    }\n\n    private static _drumsetIndexToSpectrumOctave(index: number): number {\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\n    }\n}\n\nclass ChannelState {\n    public readonly instruments: InstrumentState[] = [];\n    public muted: boolean = false;\n    public singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n}\n\nexport class Synth {\n\n    private syncSongState(): void {\n        const channelCount: number = this.song!.getChannelCount();\n        for (let i: number = this.channels.length; i < channelCount; i++) {\n            this.channels[i] = new ChannelState();\n        }\n        this.channels.length = channelCount;\n        for (let i: number = 0; i < channelCount; i++) {\n            const channel: Channel = this.song!.channels[i];\n            const channelState: ChannelState = this.channels[i];\n            for (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\n                channelState.instruments[j] = new InstrumentState();\n            }\n            channelState.instruments.length = channel.instruments.length;\n\n            if (channelState.muted != channel.muted) {\n                channelState.muted = channel.muted;\n                if (channelState.muted) {\n                    for (const instrumentState of channelState.instruments) {\n                        instrumentState.resetAllEffects();\n                    }\n                }\n            }\n        }\n    }\n\n    public warmUpSynthesizer(song: Song | null): void {\n        // Don't bother to generate the drum waves unless the song actually\n        // uses them, since they may require a lot of computation.\n        if (song != null) {\n            this.syncSongState();\n            const samplesPerTick: number = this.getSamplesPerTick();\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    Synth.getInstrumentSynthFunction(instrument);\n                    instrument.LFOtime = 0;\n                    instrument.nextLFOtime = 0;\n                    instrument.arpTime = 0;\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\n                    instrument.tmpEqFilterEnd = null;\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\n                    instrument.tmpNoteFilterEnd = null;\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\n                }\n\n            }\n        }\n\t    \t\t\t var dummyArray = new Float32Array(1);\n        this.isPlayingSong = true;\n        this.synthesize(dummyArray, dummyArray, 1, true);\n        this.isPlayingSong = false;\n\t\t//BUGFIX FROM JUMMBOX\n    }\n\n    public computeLatestModValues(): void {\n\n        if (this.song != null && this.song.modChannelCount > 0) {\n\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\n            let latestModTimes: (number | null)[] = [];\n            let latestModInsTimes: (number | null)[][][] = [];\n            this.modValues = [];\n            this.nextModValues = [];\n            this.modInsValues = [];\n            this.nextModInsValues = [];\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                latestModInsTimes[channel] = [];\n                this.modInsValues[channel] = [];\n                this.nextModInsValues[channel] = [];\n\n                for (let instrument: number = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\n                    this.modInsValues[channel][instrument] = [];\n                    this.nextModInsValues[channel][instrument] = [];\n                    latestModInsTimes[channel][instrument] = [];\n                }\n            }\n\n            // Find out where we're at in the fraction of the current bar.\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\n\n            // For mod channels, calculate last set value for each mod\n            for (let channelIndex: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\n                if (!(this.song.channels[channelIndex].muted)) {\n\n                    let pattern: Pattern | null;\n\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\n                        pattern = this.song.getPattern(channelIndex, currentBar);\n\n                        if (pattern != null) {\n                            let instrumentIdx: number = pattern.instruments[0];\n                            let instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\n                            let latestPinParts: number[] = [];\n                            let latestPinValues: number[] = [];\n\n                            let partsInBar: number = (currentBar == this.bar)\n                                ? currentPart\n                                : this.findPartsInBar(currentBar);\n\n                            for (const note of pattern.notes) {\n                                if (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\n                                    if (note.end <= partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n\n                            // Set modulator value, if it wasn't set in another pattern already scanned\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                if (latestPinParts[mod] != null) {\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modulators[mod]] as number)) {\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                        }\n                                    }\n                                    else {\n                                        // Generate list of used instruments\n                                        let usedInstruments: number[] = [];\n                                        // All\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            for (let i: number = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                                                usedInstruments.push(i);\n                                            }\n                                        }\n                                        // Active\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            const tgtPattern: Pattern | null = this.song.getPattern(instrument.modChannels[mod], currentBar);\n                                            if (tgtPattern != null)\n                                                usedInstruments = tgtPattern.instruments;\n                                        } else {\n                                            usedInstruments.push(instrument.modInstruments[mod]);\n                                        }\n                                        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n                                            // Iterate through all used instruments by this modulator\n                                            // Special indices for mod filter targets, since they control multiple things.\n                                            const eqFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\n                                            const noteFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                            let modulatorAdjust: number = instrument.modulators[mod];\n                                            if (eqFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + instrument.modFilterTypes[mod];\n                                            } else if (noteFilterParam) {\n                                                // Skip all possible indices for eq filter\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + instrument.modFilterTypes[mod];\n                                            }\n\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]!) {\n\n                                                if (eqFilterParam) {\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\n                                                    } else {\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart!.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpEqFilterStart!.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpEqFilterStart!.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\n                                                } else if (noteFilterParam) {\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\n                                                    } else {\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart!.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpNoteFilterStart!.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpNoteFilterStart!.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\n                                                }\n                                                else this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\n\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Detects if a modulator is set, but not valid for the current effects/instrument type/filter type\n    // Note, setting 'none' or the intermediary steps when clicking to add a mod, like an unset channel/unset instrument, counts as valid.\n    // TODO: This kind of check is mirrored in SongEditor.ts' whenUpdated. Creates a lot of redundancy for adding new mods. Can be moved into new properties for mods, to avoid this later.\n    public determineInvalidModulators(instrument: Instrument): void {\n        if (this.song == null)\n            return;\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\n            instrument.invalidModulators[mod] = true;\n            // For song modulator, valid if any setting used\n            if (instrument.modChannels[mod] == -1) {\n                if (instrument.modulators[mod] != 0)\n                    instrument.invalidModulators[mod] = false;\n                continue;\n            }\n            const channel: Channel | null = this.song.channels[instrument.modChannels[mod]];\n            if (channel == null) continue;\n            let tgtInstrumentList: Instrument[] = [];\n            if (instrument.modInstruments[mod] >= channel.instruments.length) { // All or active\n                tgtInstrumentList = channel.instruments;\n            } else {\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\n            }\n            for (let i: number = 0; i < tgtInstrumentList.length; i++) {\n                const tgtInstrument: Instrument | null = tgtInstrumentList[i];\n                if (tgtInstrument == null) continue;\n                const str: string = Config.modulators[instrument.modulators[mod]].name;\n                // Check effects\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\n                    // Instrument type specific\n                    || ((tgtInstrument.type != InstrumentType.fm && tgtInstrument.type != InstrumentType.fm6op) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\n                    || tgtInstrument.type != InstrumentType.fm6op && (str == \"fm slider 5\" || str == \"fm slider 6\")\n                    || (tgtInstrument.type != InstrumentType.pwm && (str == \"pulse width\"))\n                    // Arp check\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\n                    // EQ Filter check\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.eqFilter.controlPointCount)\n                    // Note Filter check\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.noteFilter.controlPointCount))) {\n\n                    instrument.invalidModulators[mod] = false;\n                    i = tgtInstrumentList.length;\n                }\n            }\n\n        }\n    }\n\n    private static operatorAmplitudeCurve(amplitude: number): number {\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\n    }\n\n    public samplesPerSecond: number = 44100;\n    public panningDelayBufferSize: number;\n    public panningDelayBufferMask: number;\n    public chorusDelayBufferSize: number;\n    public chorusDelayBufferMask: number;\n    // TODO: reverb\n\n    public song: Song | null = null;\n    public preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\n    public anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\n    public liveInputDuration: number = 0;\n    public liveInputStarted: boolean = false;\n    public liveInputPitches: number[] = [];\n    public liveInputChannel: number = 0;\n    public liveInputInstruments: number[] = [];\n    public loopRepeatCount: number = -1;\n    public volume: number = 1.0;\n    public oscRefreshEventTimer: number = 0;\n    public oscEnabled: boolean = true;\n    public enableMetronome: boolean = false;\n    public countInMetronome: boolean = false;\n    public renderingSong: boolean = false;\n\n    private wantToSkip: boolean = false;\n    private playheadInternal: number = 0.0;\n    private bar: number = 0;\n    private prevBar: number | null = null;\n    private nextBar: number | null = null;\n    private beat: number = 0;\n    private part: number = 0;\n    private tick: number = 0;\n    public isAtStartOfTick: boolean = true;\n    public isAtEndOfTick: boolean = true;\n    public tickSampleCountdown: number = 0;\n    private modValues: (number | null)[] = [];\n    private modInsValues: (number | null)[][][] = [];\n    private nextModValues: (number | null)[] = [];\n    private nextModInsValues: (number | null)[][][] = [];\n    private isPlayingSong: boolean = false;\n    private isRecording: boolean = false;\n    private liveInputEndTime: number = 0.0;\n    private browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\n\n    public static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\n    public static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\n    private tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\n    public tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\n\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\n    private static readonly fm6SynthFunctionCache: Dictionary<Function> = {};\n    private static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\n    private static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\n\n    private readonly channels: ChannelState[] = [];\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\n    private readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\n\n    private startedMetronome: boolean = false;\n    private metronomeSamplesRemaining: number = -1;\n    private metronomeAmplitude: number = 0.0;\n    private metronomePrevAmplitude: number = 0.0;\n    private metronomeFilter: number = 0.0;\n    private limit: number = 0.0;\n\n    private tempMonoInstrumentSampleBuffer: Float32Array | null = null;\n\n    private audioCtx: any | null = null;\n    private scriptNode: any | null = null;\n\n    public get playing(): boolean {\n        return this.isPlayingSong;\n    }\n\n    public get recording(): boolean {\n        return this.isRecording;\n    }\n\n    public get playhead(): number {\n        return this.playheadInternal;\n    }\n\n    public set playhead(value: number) {\n        if (this.song != null) {\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\n            let remainder: number = this.playheadInternal;\n            this.bar = Math.floor(remainder);\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\n            this.beat = Math.floor(remainder);\n            remainder = Config.partsPerBeat * (remainder - this.beat);\n            this.part = Math.floor(remainder);\n            remainder = Config.ticksPerPart * (remainder - this.part);\n            this.tick = Math.floor(remainder);\n            this.tickSampleCountdown = 0;\n            this.isAtStartOfTick = true;\n            this.prevBar = null;\n        }\n    }\n\n    public getSamplesPerBar(): number {\n        if (this.song == null) throw new Error();\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\n    }\n\n    public getTicksIntoBar(): number {\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n    }\n    public getCurrentPart(): number {\n        return (this.beat * Config.partsPerBeat + this.part);\n    }\n\n    private findPartsInBar(bar: number): number {\n        if (this.song == null) return 0;\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\n            if (pattern != null) {\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                        for (const note of pattern.notes) {\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                // Find the earliest next bar note.\n                                if (partsInBar > note.start)\n                                    partsInBar = note.start;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return partsInBar;\n    }\n\n    // Returns the total samples in the song\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\n        if (this.song == null)\n            return -1;\n\n        // Compute the window to be checked (start bar to end bar)\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\n        let hasTempoMods: boolean = false;\n        let hasNextBarMods: boolean = false;\n        let prevTempo: number = this.song.tempo;\n\n        // Determine if any tempo or next bar mods happen anywhere in the window\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n            for (let bar: number = startBar; bar < endBar; bar++) {\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\n                if (pattern != null) {\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                            hasTempoMods = true;\n                        }\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                            hasNextBarMods = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\n        if (startBar > 0) {\n            let latestTempoPin: number | null = null;\n            let latestTempoValue: number = 0;\n\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\n                for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n                    let pattern = this.song.getPattern(channel, bar);\n\n                    if (pattern != null) {\n                        let instrumentIdx: number = pattern.instruments[0];\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n\n                        let partsInBar: number = this.findPartsInBar(bar);\n\n                        for (const note of pattern.notes) {\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\n                                    if (note.end <= partsInBar) {\n                                        latestTempoPin = note.end;\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestTempoPin = partsInBar;\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\n                if (latestTempoPin != null) {\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                    bar = -1;\n                }\n            }\n        }\n\n        if (hasTempoMods || hasNextBarMods) {\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\n            let bar: number = startBar;\n            let ended: boolean = false;\n            let totalSamples: number = 0;\n\n            while (!ended) {\n                // Compute the subsection of the pattern that will play\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\n                let currentPart: number = 0;\n\n                if (hasNextBarMods) {\n                    partsInBar = this.findPartsInBar(bar);\n                }\n\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\n                if (hasTempoMods) {\n                    let foundMod: boolean = false;\n                    for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n                        if (foundMod == false) {\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\n                            if (pattern != null) {\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\n                                        foundMod = true;\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                                        for (const note of pattern.notes) {\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                                // Compute samples up to this note\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n\n                                                if (note.start < partsInBar) {\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\n                                                        // Compute samples up to this pin\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\n                                                            const prevPinTempo: number = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            let currPinTempo: number = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            }\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\n\n                                                            if (currPinTempo != prevPinTempo) {\n\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\n                                                                // The starting formula is\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\n                                                                //\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\n                                                                //\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\n\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\n\n                                                            }\n                                                            else {\n\n                                                                // No tempo change between the two pins.\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\n\n                                                            }\n                                                            prevTempo = currPinTempo;\n                                                        }\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Compute samples for the rest of the bar\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n\n                bar++;\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\n                    bar = this.song.loopStart;\n                    if (loop > 0) loop--;\n                }\n                if (bar >= endBar) {\n                    ended = true;\n                }\n            }\n\n            return Math.ceil(totalSamples);\n        }\n        else {\n            // No tempo or next bar mods... phew! Just calculate normally.\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\n        }\n    }\n\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\n        if (this.song == null) throw new Error();\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\n        if (enableIntro) bars += this.song.loopStart;\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\n        return bars;\n    }\n\n    constructor(song: Song | string | null = null) {\n        this.computeDelayBufferSizes();\n        if (song != null) this.setSong(song);\n    }\n\n    public setSong(song: Song | string): void {\n        if (typeof (song) == \"string\") {\n            this.song = new Song(song);\n        } else if (song instanceof Song) {\n            this.song = song;\n        }\n        this.prevBar = null;\n    }\n\n    private computeDelayBufferSizes(): void {\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\n    }\n\n    private activateAudio(): void {\n        const bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\n            if (this.scriptNode != null) this.deactivateAudio();\n            const latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\n            this.samplesPerSecond = this.audioCtx.sampleRate;\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\n            this.scriptNode.channelCountMode = 'explicit';\n            this.scriptNode.channelInterpretation = 'speakers';\n            this.scriptNode.connect(this.audioCtx.destination);\n\n            this.computeDelayBufferSizes();\n        }\n        this.audioCtx.resume();\n    }\n\n    private deactivateAudio(): void {\n        if (this.audioCtx != null && this.scriptNode != null) {\n            this.scriptNode.disconnect(this.audioCtx.destination);\n            this.scriptNode = null;\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\n            this.audioCtx = null;\n        }\n    }\n\n    public maintainLiveInput(): void {\n        this.activateAudio();\n        this.liveInputEndTime = performance.now() + 10000.0;\n    }\n\n    public play(): void {\n        if (this.isPlayingSong) return;\n\t    \t\t\t this.computeLatestModValues();\n        this.warmUpSynthesizer(this.song);\n\t\t//BUGFIX FROM JUMMBOX\n        this.isPlayingSong = true;\n        this.activateAudio();\n                   //this.warmUpSynthesizer(this.song);\n           // this.computeLatestModValues();\n    }\n\n    public pause(): void {\n        if (!this.isPlayingSong) return;\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.modValues = [];\n        this.nextModValues = [];\n        if (this.song != null) {\n            this.song.inVolumeCap = 0.0;\n            this.song.outVolumeCap = 0.0;\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                this.modInsValues[channelIndex] = [];\n                this.nextModInsValues[channelIndex] = [];\n            }\n        }\n    }\n\n    public startRecording(): void {\n        this.preferLowerLatency = true;\n        this.isRecording = true;\n        this.play();\n    }\n\n    public resetEffects(): void {\n        this.limit = 0.0;\n        this.freeAllTones();\n        if (this.song != null) {\n            for (const channelState of this.channels) {\n                for (const instrumentState of channelState.instruments) {\n                    instrumentState.resetAllEffects();\n                }\n            }\n        }\n    }\n\n    public setModValue(volumeStart: number, volumeEnd: number, mod: number, channelIndex: number, instrumentIndex: number, setting: number): number {\n        let val: number = volumeStart + Config.modulators[setting].convertRealFactor;\n        let nextVal: number = volumeEnd + Config.modulators[setting].convertRealFactor;\n        if (Config.modulators[setting].optionalModify == \"invert-0to50\") {\n            val = 50 - val;\n            nextVal = 50 - nextVal;\n        }\n        if (Config.modulators[setting].optionalModify == \"invert-0to99\") {\n            val = 99 - val;\n            nextVal = 99 - nextVal;\n        }\n        //should this be turned into a function?\n        if (Config.modulators[setting].forSong) {\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\n                this.modValues[setting] = val;\n                this.nextModValues[setting] = nextVal;\n            }\n        } else {\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\n            }\n        }\n\n        return val;\n    }\n\n    public getModValue(setting: number, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\n        const forSong: boolean = Config.modulators[setting].forSong;\n        if (forSong) {\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\n            }\n        } else if (channel != undefined && instrument != undefined) {\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\n            }\n        }\n        return -1;\n    }\n\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\n    public isAnyModActive(channel: number, instrument: number): boolean {\n        for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n            if ((this.modValues != undefined && this.modValues[setting] != null)\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public unsetMod(setting: number, channel?: number, instrument?: number) {\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\n            this.modValues[setting] = null;\n            this.nextModValues[setting] = null;\n            if (channel != undefined && instrument != undefined) {\n                this.modInsValues[channel][instrument][setting] = null;\n                this.nextModInsValues[channel][instrument][setting] = null;\n            }\n        }\n    }\n\n    public isFilterModActive(forNoteFilter: boolean, channelIdx: number, instrumentIdx: number) {\n        const instrument: Instrument = this.song!.channels[channelIdx].instruments[instrumentIdx];\n\n        if (forNoteFilter) {\n            if (instrument.noteFilterType)\n                return false;\n            if (instrument.tmpNoteFilterEnd != null)\n                return true;\n        }\n        else {\n            if (instrument.eqFilterType)\n                return false;\n            if (instrument.tmpEqFilterEnd != null)\n                return true;\n        }\n        return false\n    }\n\n    public isModActive(setting: number, channel?: number, instrument?: number): boolean {\n        const forSong: boolean = Config.modulators[setting].forSong;\n        if (forSong) {\n            return (this.modValues != undefined && this.modValues[setting] != null);\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\n            return (this.modInsValues[channel][instrument][setting] != null);\n        }\n        return false;\n    }\n\n    public snapToStart(): void {\n        this.bar = 0;\n        this.resetEffects();\n        this.snapToBar();\n    }\n\n    public goToBar(bar: number): void {\n        this.bar = bar;\n        this.resetEffects();\n        this.playheadInternal = this.bar;\n    }\n\n    public snapToBar(): void {\n        this.playheadInternal = this.bar;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = 0;\n    }\n\n    public jumpIntoLoop(): void {\n        if (!this.song) return;\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\n            const oldBar: number = this.bar;\n            this.bar = this.song.loopStart;\n            this.playheadInternal += this.bar - oldBar;\n\n            if (this.playing)\n                this.computeLatestModValues();\n        }\n    }\n\n    public goToNextBar(): void {\n        if (!this.song) return;\n        this.prevBar = this.bar;\n        const oldBar: number = this.bar;\n        this.bar++;\n        if (this.bar >= this.song.barCount) {\n            this.bar = 0;\n        }\n        this.playheadInternal += this.bar - oldBar;\n\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n\n    public goToPrevBar(): void {\n        if (!this.song) return;\n        this.prevBar = null;\n        const oldBar: number = this.bar;\n        this.bar--;\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\n            this.bar = this.song.barCount - 1;\n        }\n        this.playheadInternal += this.bar - oldBar;\n\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n\n    private getNextBar(): number {\n        let nextBar: number = this.bar + 1;\n        if (this.isRecording) {\n            if (nextBar >= this.song!.barCount) {\n                nextBar = this.song!.barCount - 1;\n            }\n        } else if (this.loopRepeatCount != 0 && nextBar == this.song!.loopStart + this.song!.loopLength) {\n            nextBar = this.song!.loopStart;\n        }\n        return nextBar;\n    }\n\n    public skipBar(): void {\n        if (!this.song) return;\n        const samplesPerTick: number = this.getSamplesPerTick();\n        this.bar++;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = samplesPerTick;\n\t    \t\t\tthis.isAtStartOfTick = true;\n\t\t\t//BUGFIX FROM JUMMBOX\n\n        if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\n            this.bar = this.song.loopStart;\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\n        }\n\n    }\n\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\n        const outputBuffer = audioProcessingEvent.outputBuffer;\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\n\n        if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\n            // If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\n            this.browserAutomaticallyClearsAudioBuffer = false;\n        }\n        if (!this.browserAutomaticallyClearsAudioBuffer) {\n            // If this browser does not clear the buffer automatically, do so manually before continuing.\n            const length: number = outputBuffer.length;\n            for (let i: number = 0; i < length; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n        }\n\n        if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\n            this.deactivateAudio();\n        } else {\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\n\n            if (this.oscEnabled) {\n                if (this.oscRefreshEventTimer <= 0) {\n                    events.raise(\"oscillascopeUpdate\", outputDataL, outputDataR);\n                    this.oscRefreshEventTimer = 2;\n                } else {\n                    this.oscRefreshEventTimer--;\n                }\n            }\n        }\n    }\n\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\n        if (this.song == null) {\n            for (let i: number = 0; i < outputBufferLength; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n            this.deactivateAudio();\n            return;\n        }\n\n        const song: Song = this.song;\n        this.song.inVolumeCap = 0.0 // Reset volume cap for this run\n        this.song.outVolumeCap = 0.0;\n\n        let samplesPerTick: number = this.getSamplesPerTick();\n        let ended: boolean = false;\n\n        // Check the bounds of the playhead:\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\n            this.tickSampleCountdown = samplesPerTick;\n            this.isAtStartOfTick = true;\n        }\n        if (playSong) {\n            if (this.beat >= song.beatsPerBar) {\n                this.beat = 0;\n                this.part = 0;\n                this.tick = 0;\n                this.tickSampleCountdown = samplesPerTick;\n                this.isAtStartOfTick = true;\n\n                this.prevBar = this.bar;\n                this.bar = this.getNextBar();\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\n            }\n            if (this.bar >= song.barCount) {\n                this.bar = 0;\n                if (this.loopRepeatCount != -1) {\n                    ended = true;\n                    this.pause();\n                }\n            }\n        }\n\n        //const synthStartTime: number = performance.now();\n\n        this.syncSongState();\n\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\n        }\n\n        // Post processing parameters:\n        const volume: number = +this.volume;\n        const limitDecay: number = 1.0 - Math.pow(0.5, 4.0 / this.samplesPerSecond);\n        const limitRise: number = 1.0 - Math.pow(0.5, 4000.0 / this.samplesPerSecond);\n        let limit: number = +this.limit;\n\t    \t\t\tlet skippedBars = [];\n        let firstSkippedBufferIndex = -1;\n\t\t//BUGFIX FROM JUMMBOX\n\n        let bufferIndex: number = 0;\n        while (bufferIndex < outputBufferLength && !ended) {\n\n            this.nextBar = this.getNextBar();\n            if (this.nextBar >= song.barCount) this.nextBar = null;\n\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\n            const samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\n            const runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\n            const runEnd: number = bufferIndex + runLength;\n\n            // Handle mod synth\n            if (this.isPlayingSong || this.renderingSong) {\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel: Channel = song.channels[channelIndex];\n                    const channelState: ChannelState = this.channels[channelIndex];\n\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\n\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone: Tone = instrumentState.activeModTones.get(i);\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                        }\n                    }\n                }\n            }\n\n            // Handle next bar mods if they were set\n            if (this.wantToSkip) {\n\t\t    \t\t\t\t\t// Unable to continue, as we have skipped back to a previously visited bar without generating new samples, which means we are infinitely skipping.\n                // In this case processing will return before the designated number of samples are processed. In other words, silence will be generated.\n                let barVisited = skippedBars.includes(this.bar);\n                if (barVisited && bufferIndex == firstSkippedBufferIndex)\n                    return;\n                if (firstSkippedBufferIndex == -1) {\n                    firstSkippedBufferIndex = bufferIndex;\n                }\n                if (!barVisited)\n                    skippedBars.push(this.bar);\n\t\t\t\t//BUGFIX FROM JUMMBOX\n                this.wantToSkip = false;\n                this.skipBar();\n\t\t    \t\t\t\t\tcontinue;\n\t\t\t\t\t//BUGFIX FROM JUMMBOX\n            }\n\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\n                const channel: Channel = song.channels[channelIndex];\n                const channelState: ChannelState = this.channels[channelIndex];\n\n                if (this.isAtStartOfTick) {\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\n                }\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\n                    const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n\n                    if (this.isAtStartOfTick) {\n                        let tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\n\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone: Tone = instrumentState.releasedTones.get(i);\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                                continue;\n                            }\n                            const shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\n                            tonesPlayedInThisInstrument++;\n                        }\n\n                        if (instrumentState.awake) {\n                            if (!instrumentState.computed) {\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\n                            }\n\n                            instrumentState.computed = false;\n                            //instrumentState.envelopeComputer.clearEnvelopes();\n                        }\n                    }\n\n                    for (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\n                        const tone: Tone = instrumentState.activeTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    for (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\n                        const tone: Tone = instrumentState.liveInputTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                        const tone: Tone = instrumentState.releasedTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    if (instrumentState.awake) {\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n                    }\n\n                    // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\n\n                    const tickSampleCountdown: number = this.tickSampleCountdown;\n                    const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\n                    const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\n                    const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n                    const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\n                    const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\n                    const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n                    const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\n\n                    instrument.LFOtime = instrument.nextLFOtime;\n\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\n                    }\n\n                    if (useVibratoSpeed == 0) {\n                        instrument.LFOtime = 0;\n                        instrument.nextLFOtime = 0;\n                    }\n                    else {\n                        instrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\n                    }\n                }\n            }\n\n            if (this.enableMetronome || this.countInMetronome) {\n                if (this.part == 0) {\n                    if (!this.startedMetronome) {\n                        const midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\n                        const periods: number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\n                        const hz: number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\n                        const amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\n                        const samplesPerPeriod: number = this.samplesPerSecond / hz;\n                        const radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\n                        this.metronomePrevAmplitude = 0.0;\n\n                        this.startedMetronome = true;\n                    }\n                    if (this.metronomeSamplesRemaining > 0) {\n                        const stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\n                        for (let i: number = bufferIndex; i < stopIndex; i++) {\n                            outputDataL[i] += this.metronomeAmplitude;\n                            outputDataR[i] += this.metronomeAmplitude;\n                            const tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\n                            this.metronomeAmplitude = tempAmplitude;\n                        }\n                    }\n                } else {\n                    this.startedMetronome = false;\n                }\n            }\n\n            // Post processing:\n            for (let i: number = bufferIndex; i < runEnd; i++) {\n                // A compressor/limiter.\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\n                const abs: number = absL > absR ? absL : absR;\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\n                const limitRange: number = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\n                // Determine the target amplification based on the range of the curve\n                const limitTarget: number =\n                    (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\n                    + (+(limitRange == 1)) * (1.05)\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\n                // Move the limit towards the target\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\n                outputDataL[i] = sampleL * limitedVolume;\n                outputDataR[i] = sampleR * limitedVolume;\n\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\n            }\n\n            bufferIndex += runLength;\n\n            this.isAtStartOfTick = false;\n            this.tickSampleCountdown -= runLength;\n            if (this.tickSampleCountdown <= 0) {\n                this.isAtStartOfTick = true;\n\n                // Track how long tones have been released, and free them if there are too many.\n                // Also reset awake InstrumentStates that didn't have any Tones during this tick.\n                for (const channelState of this.channels) {\n                    for (const instrumentState of channelState.instruments) {\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone: Tone = instrumentState.releasedTones.get(i);\n                            if (tone.isOnLastTick) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                            } else {\n                                tone.ticksSinceReleased++;\n                            }\n                        }\n                        if (instrumentState.deactivateAfterThisTick) {\n                            instrumentState.deactivate();\n                        }\n                        instrumentState.tonesAddedInThisTick = false;\n                    }\n                }\n\n                // Update arpeggio time, which is used to calculate arpeggio position\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\n                            useArpeggioSpeed = this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false);\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            } else {\n                                // Linear interpolate arpeggio values\n                                instrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        else {\n                            instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                        }\n                    }\n                }\n\n                // Update next-used filters after each run\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        if (instrument.tmpEqFilterEnd != null) {\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\n                        } else {\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\n                        }\n                        if (instrument.tmpNoteFilterEnd != null) {\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\n                        } else {\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\n                        }\n                    }\n                }\n\n                this.tick++;\n                this.tickSampleCountdown += samplesPerTick;\n                if (this.tick == Config.ticksPerPart) {\n                    this.tick = 0;\n                    this.part++;\n                    this.liveInputDuration--;\n\n                    if (this.part == Config.partsPerBeat) {\n                        this.part = 0;\n\n                        if (playSong) {\n                            this.beat++;\n                            if (this.beat == song.beatsPerBar) {\n                                // bar changed, reset for next bar:\n                                this.beat = 0;\n\n                                if (this.countInMetronome) {\n                                    this.countInMetronome = false;\n                                } else {\n                                    this.prevBar = this.bar;\n                                    this.bar = this.getNextBar();\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\n                                    if (this.bar >= song.barCount) {\n                                        this.bar = 0;\n                                        if (this.loopRepeatCount != -1) {\n                                            ended = true;\n                                            this.resetEffects();\n                                            this.pause();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Update mod values so that next values copy to current values\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\n                    this.modValues[setting] = this.nextModValues[setting];\n            }\n\n            // Set samples per tick if song tempo mods changed it\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n                samplesPerTick = this.getSamplesPerTick();\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\n            }\n\n            // Bound LFO times to be within their period (to keep values from getting large)\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\n            for (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\n                for (let instrument of this.song.channels[channel].instruments) {\n                    instrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\n                    instrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\n                }\n            }\n\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrument: number = 0; instrument < this.song.getMaxInstrumentsPerChannel(); instrument++) {\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\n                        }\n                    }\n                }\n            }\n        }\n\n        // Optimization: Avoid persistent reverb values in the float denormal range.\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\n        this.limit = limit;\n\n        if (playSong && !this.countInMetronome) {\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\n        }\n\n        /*\n        const synthDuration: number = performance.now() - synthStartTime;\n        // Performance measurements:\n        samplesAccumulated += outputBufferLength;\n        samplePerformance += synthDuration;\n    \t\n        if (samplesAccumulated >= 44100 * 4) {\n            const secondsGenerated = samplesAccumulated / 44100;\n            const secondsRequired = samplePerformance / 1000;\n            const ratio = secondsRequired / secondsGenerated;\n            console.log(ratio);\n            samplePerformance = 0;\n            samplesAccumulated = 0;\n        }\n        */\n    }\n\n    private freeTone(tone: Tone): void {\n        this.tonePool.pushBack(tone);\n    }\n\n    private newTone(): Tone {\n        if (this.tonePool.count() > 0) {\n            const tone: Tone = this.tonePool.popBack();\n            tone.freshlyAllocated = true;\n            return tone;\n        }\n        return new Tone();\n    }\n\n    private releaseTone(instrumentState: InstrumentState, tone: Tone): void {\n        instrumentState.releasedTones.pushFront(tone);\n        tone.atNoteStart = false;\n        tone.passedEndOfNote = true;\n    }\n\n    private freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\n        instrumentState.releasedTones.remove(toneIndex);\n    }\n\n    public freeAllTones(): void {\n        for (const channelState of this.channels) {\n            for (const instrumentState of channelState.instruments) {\n                while (instrumentState.activeTones.count() > 0) this.freeTone(instrumentState.activeTones.popBack());\n                while (instrumentState.activeModTones.count() > 0) this.freeTone(instrumentState.activeModTones.popBack());\n                while (instrumentState.releasedTones.count() > 0) this.freeTone(instrumentState.releasedTones.popBack());\n                while (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\n            }\n        }\n    }\n\n    private determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const pitches: number[] = this.liveInputPitches;\n\n        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n            const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n            const toneList: Deque<Tone> = instrumentState.liveInputTones;\n            let toneCount: number = 0;\n            if (this.liveInputDuration > 0 && channelIndex == this.liveInputChannel && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument: Instrument = channel.instruments[instrumentIndex];\n\n                if (instrument.getChord().singleTone) {\n                    let tone: Tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    } else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n\n                    for (let i: number = 0; i < pitches.length; i++) {\n                        tone.pitches[i] = pitches[i];\n                    }\n                    tone.pitchCount = pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                } else {\n                    //const transition: Transition = instrument.getTransition();\n\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\n\n                    for (let i: number = 0; i < pitches.length; i++) {\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\n\n                        let tone: Tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount]!;\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        } else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n\n                        tone.pitches[0] = pitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = pitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n\n            while (toneList.count() > toneCount) {\n                this.releaseTone(instrumentState, toneList.popBack());\n            }\n\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\n        }\n\n        this.liveInputStarted = false;\n    }\n\n    // Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\n    // seamless transition across patterns, otherwise returns null.\n    private adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\n            // The adjacent pattern does not contain the same instrument as the current pattern.\n\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\n                // The current or adjacent pattern contains more than one instrument, don't bother\n                // trying to connect them.\n                return null;\n            }\n            // Otherwise, the two patterns each contain one instrument, but not the same instrument.\n            // Try to connect them.\n            const otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\n\n            if (forceContinue) {\n                // Even non-seamless instruments can be connected across patterns if forced.\n                return otherInstrument.getChord();\n            }\n\n            // Otherwise, check that both instruments are seamless across patterns.\n            const otherTransition: Transition = otherInstrument.getTransition();\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\n                return otherInstrument.getChord();\n            } else {\n                return null;\n            }\n        } else {\n            // If both patterns contain the same instrument, check that it is seamless across patterns.\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\n        }\n    }\n\n    public static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\n        if (firstNote.pitches.length != secondNote.pitches.length) return false;\n        const firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\n        for (const pitch of firstNote.pitches) {\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\n        }\n        return true;\n    }\n\n    private moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\n        // The tones are about to seamlessly transition to a new note. The pitches\n        // from the old note may or may not match any of the pitches in the new\n        // note, and not necessarily in order, but if any do match, they'll sound\n        // better if those tones continue to have the same pitch. Attempt to find\n        // the right spot for each old tone in the new chord if possible.\n\n        for (let i: number = 0; i < toneList.count(); i++) {\n            const tone: Tone = toneList.get(i);\n            const pitch: number = tone.pitches[0] + tone.lastInterval;\n            for (let j: number = 0; j < notePitches.length; j++) {\n                if (notePitches[j] == pitch) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    toneList.remove(i);\n                    i--;\n                    break;\n                }\n            }\n        }\n\n        // Any tones that didn't get matched should just fill in the gaps.\n        while (toneList.count() > 0) {\n            const tone: Tone = toneList.popFront();\n            for (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\n                if (this.tempMatchedPitchTones[j] == null) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    break;\n                }\n            }\n        }\n    }\n\n    private determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\n        const currentPart: number = this.getCurrentPart();\n        const currentTick: number = this.tick + Config.ticksPerPart * currentPart;\n\n        if (playSong && song.getChannelIsMod(channelIndex)) {\n\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\n            let notes: (Note | null)[] = [];\n            let prevNotes: (Note | null)[] = [];\n            let nextNotes: (Note | null)[] = [];\n            let fillCount: number = Config.modCount;\n            while (fillCount--) {\n                notes.push(null);\n                prevNotes.push(null);\n                nextNotes.push(null);\n            }\n\n            if (pattern != null && !channel.muted) {\n                for (let i: number = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        // Actually need to check which note starts closer to the start of this note.\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        // Actually need to check which note starts closer to the end of this note.\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                }\n            }\n\n            let modToneCount: number = 0;\n            const newInstrumentIndex: number = (song.patternInstruments && (pattern != null)) ? pattern!.instruments[0] : 0;\n            const instrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n            const toneList: Deque<Tone> = instrumentState.activeModTones;\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                if (notes[mod] != null) {\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\n\n                }\n\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n\n                if (notes[mod] != null) {\n                    let prevNoteForThisInstrument: Note | null = prevNotes[mod];\n                    let nextNoteForThisInstrument: Note | null = nextNotes[mod];\n\n                    let forceContinueAtStart: boolean = false;\n                    let forceContinueAtEnd: boolean = false;\n                    const atNoteStart: boolean = (Config.ticksPerPart * notes[mod]!.start == currentTick) && this.isAtStartOfTick;\n                    let tone: Tone;\n                    if (toneList.count() <= modToneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (atNoteStart && (prevNoteForThisInstrument == null)) {\n                        const oldTone: Tone = toneList.get(modToneCount);\n                        if (oldTone.isOnLastTick) {\n                            this.freeTone(oldTone);\n                        } else {\n                            this.releaseTone(instrumentState, oldTone);\n                        }\n                        tone = this.newTone();\n                        toneList.set(modToneCount, tone);\n                    } else {\n                        tone = toneList.get(modToneCount);\n                    }\n                    modToneCount++;\n\n                    for (let i: number = 0; i < notes[mod]!.pitches.length; i++) {\n                        tone.pitches[i] = notes[mod]!.pitches[i];\n                    }\n                    tone.pitchCount = notes[mod]!.pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = newInstrumentIndex;\n                    tone.note = notes[mod];\n                    tone.noteStartPart = notes[mod]!.start;\n                    tone.noteEndPart = notes[mod]!.end;\n                    tone.prevNote = prevNoteForThisInstrument;\n                    tone.nextNote = nextNoteForThisInstrument;\n                    tone.prevNotePitchIndex = 0;\n                    tone.nextNotePitchIndex = 0;\n                    tone.atNoteStart = atNoteStart;\n                    tone.passedEndOfNote = false;\n                    tone.forceContinueAtStart = forceContinueAtStart;\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\n                }\n            }\n            // Automatically free or release seamless tones if there's no new note to take over.\n            while (toneList.count() > modToneCount) {\n                const tone: Tone = toneList.popBack();\n                const channel: Channel = song.channels[channelIndex];\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\n                    this.releaseTone(instrumentState, tone);\n                } else {\n                    this.freeTone(tone);\n                }\n            }\n\n        }\n        else if (!song.getChannelIsMod(channelIndex)) {\n\n            let note: Note | null = null;\n            let prevNote: Note | null = null;\n            let nextNote: Note | null = null;\n\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\n                for (let i: number = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        prevNote = pattern.notes[i];\n                    } else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        note = pattern.notes[i];\n                    } else if (pattern.notes[i].start > currentPart) {\n                        nextNote = pattern.notes[i];\n                        break;\n                    }\n                }\n\n                if (note != null) {\n                    if (prevNote != null && prevNote.end != note.start) prevNote = null;\n                    if (nextNote != null && nextNote.start != note.end) nextNote = null;\n                }\n            }\n\n            // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\n                const newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeTones.count() > 0) {\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n            } else {\n                channelState.singleSeamlessInstrument = null;\n            }\n\n            for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                const toneList: Deque<Tone> = instrumentState.activeTones;\n                let toneCount: number = 0;\n                if ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\n                    let prevNoteForThisInstrument: Note | null = prevNote;\n                    let nextNoteForThisInstrument: Note | null = nextNote;\n\n                    const partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\n                    const transition: Transition = instrument.getTransition();\n                    const chord: Chord = instrument.getChord();\n                    let forceContinueAtStart: boolean = false;\n                    let forceContinueAtEnd: boolean = false;\n                    let tonesInPrevNote: number = 0;\n                    let tonesInNextNote: number = 0;\n                    if (note.start == 0) {\n                        // If the beginning of the note coincides with the beginning of the pattern,\n                        let prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\n                        if (prevPattern != null) {\n                            const lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\n                            if (lastNote != null && lastNote.end == partsPerBar) {\n                                const patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    prevNoteForThisInstrument = lastNote;\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\n                                    forceContinueAtStart = patternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    } else if (prevNoteForThisInstrument != null) {\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\n                    }\n                    if (note.end == partsPerBar) {\n                        // If the end of the note coincides with the end of the pattern, look for an\n                        // adjacent note at the beginning of the next pattern.\n                        let nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\n                        if (nextPattern != null) {\n                            const firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\n                            if (firstNote != null && firstNote.start == 0) {\n                                const nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    nextNoteForThisInstrument = firstNote;\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    } else if (nextNoteForThisInstrument != null) {\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\n                    }\n\n                    if (chord.singleTone) {\n                        const atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\n                        let tone: Tone;\n                        if (toneList.count() <= toneCount) {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        } else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\n                            const oldTone: Tone = toneList.get(toneCount);\n                            if (oldTone.isOnLastTick) {\n                                this.freeTone(oldTone);\n                            } else {\n                                this.releaseTone(instrumentState, oldTone);\n                            }\n                            tone = this.newTone();\n                            toneList.set(toneCount, tone);\n                        } else {\n                            tone = toneList.get(toneCount);\n                        }\n                        toneCount++;\n\n                        for (let i: number = 0; i < note.pitches.length; i++) {\n                            tone.pitches[i] = note.pitches[i];\n                        }\n                        tone.pitchCount = note.pitches.length;\n                        tone.chordSize = 1;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = note;\n                        tone.noteStartPart = note.start;\n                        tone.noteEndPart = note.end;\n                        tone.prevNote = prevNoteForThisInstrument;\n                        tone.nextNote = nextNoteForThisInstrument;\n                        tone.prevNotePitchIndex = 0;\n                        tone.nextNotePitchIndex = 0;\n                        tone.atNoteStart = atNoteStart;\n                        tone.passedEndOfNote = false;\n                        tone.forceContinueAtStart = forceContinueAtStart;\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    } else {\n                        const transition: Transition = instrument.getTransition();\n\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\n                        }\n\n                        let strumOffsetParts: number = 0;\n                        for (let i: number = 0; i < note.pitches.length; i++) {\n\n                            let prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\n                            let noteForThisTone: Note = note;\n                            let nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\n                            let noteStartPart: number = noteForThisTone.start + strumOffsetParts;\n                            let passedEndOfNote: boolean = false;\n\n                            // Strumming may mean that a note's actual start time may be after the\n                            // note's displayed start time. If the note start hasn't been reached yet,\n                            // carry over the previous tone if available and seamless, otherwise skip\n                            // the new tone until it is ready to start.\n                            if (noteStartPart > currentPart) {\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\n                                    // Continue the previous note's chord until the current one takes over.\n                                    nextNoteForThisTone = noteForThisTone;\n                                    noteForThisTone = prevNoteForThisTone;\n                                    prevNoteForThisTone = null;\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\n                                    passedEndOfNote = true;\n                                } else {\n                                    // This and the rest of the tones in the chord shouldn't start yet.\n                                    break;\n                                }\n                            }\n\n                            let noteEndPart: number = noteForThisTone.end;\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\n                            }\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\n                                strumOffsetParts += chord.strumParts;\n                            }\n\n                            const atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\n                            let tone: Tone;\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\n                                tone = this.tempMatchedPitchTones[toneCount]!;\n                                this.tempMatchedPitchTones[toneCount] = null;\n                                toneList.pushBack(tone);\n                            } else if (toneList.count() <= toneCount) {\n                                tone = this.newTone();\n                                toneList.pushBack(tone);\n                            } else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\n                                const oldTone: Tone = toneList.get(toneCount);\n                                if (oldTone.isOnLastTick) {\n                                    this.freeTone(oldTone);\n                                } else {\n                                    this.releaseTone(instrumentState, oldTone);\n                                }\n                                tone = this.newTone();\n                                toneList.set(toneCount, tone);\n                            } else {\n                                tone = toneList.get(toneCount);\n                            }\n                            toneCount++;\n\n                            tone.pitches[0] = noteForThisTone.pitches[i];\n                            tone.pitchCount = 1;\n                            tone.chordSize = noteForThisTone.pitches.length;\n                            tone.instrumentIndex = instrumentIndex;\n                            tone.note = noteForThisTone;\n                            tone.noteStartPart = noteStartPart;\n                            tone.noteEndPart = noteEndPart;\n                            tone.prevNote = prevNoteForThisTone;\n                            tone.nextNote = nextNoteForThisTone;\n                            tone.prevNotePitchIndex = i;\n                            tone.nextNotePitchIndex = i;\n                            tone.atNoteStart = atNoteStart;\n                            tone.passedEndOfNote = passedEndOfNote;\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                        }\n                    }\n                }\n                // Automatically free or release seamless tones if there's no new note to take over.\n                while (toneList.count() > toneCount) {\n                    const tone: Tone = toneList.popBack();\n                    const channel: Channel = song.channels[channelIndex];\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n                        this.releaseTone(instrumentState, tone);\n                    } else {\n                        this.freeTone(tone);\n                    }\n                }\n\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\n            }\n        }\n    }\n\n    private clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\n        for (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\n            const oldTone: Tone | null = this.tempMatchedPitchTones[i];\n            if (oldTone != null) {\n                if (oldTone.isOnLastTick) {\n                    this.freeTone(oldTone);\n                } else {\n                    this.releaseTone(instrumentState, oldTone);\n                }\n                this.tempMatchedPitchTones[i] = null;\n            }\n        }\n    }\n\n\n    private playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\n        const channelState: ChannelState = this.channels[channelIndex];\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n\n        if (instrumentState.synthesizer != null) instrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\n        tone.envelopeComputer.clearEnvelopes();\n    }\n\n    // Computes mod note position at the start and end of the window and \"plays\" the mod tone, setting appropriate mod data.\n    private playModTone(song: Song, channelIndex: number, samplesPerTick: number, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n        const channel: Channel = song.channels[channelIndex];\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n\n        if (tone.note != null) {\n            const ticksIntoBar: number = this.getTicksIntoBar();\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\n            const tickSampleCountdown: number = this.tickSampleCountdown;\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\n            const endRatio: number = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n            const tickTimeStart: number = Config.ticksPerPart * partTimeStart;\n            const tickTimeEnd: number = Config.ticksPerPart * partTimeEnd;\n            const endPinIndex: number = tone.note.getEndPinIndex(this.getCurrentPart());\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\n            const endPin: NotePin = tone.note.pins[endPinIndex];\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\n\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\n        }\n    }\n\n    private static computeChordExpression(chordSize: number): number {\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\n    }\n\n    private computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n        const roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n        instrumentState.awake = true;\n        instrumentState.tonesAddedInThisTick = true;\n        if (!instrumentState.computed) {\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\n        }\n        const transition: Transition = instrument.getTransition();\n        const chord: Chord = instrument.getChord();\n        const chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\n        const sampleTime: number = 1.0 / this.samplesPerSecond;\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\n        const ticksIntoBar: number = this.getTicksIntoBar();\n        const partTimeStart: number = (ticksIntoBar) / Config.ticksPerPart;\n        const partTimeEnd: number = (ticksIntoBar + 1.0) / Config.ticksPerPart;\n        const currentPart: number = this.getCurrentPart();\n\n        let specialIntervalMult: number = 1.0;\n        tone.specialIntervalExpressionMult = 1.0;\n\n        //if (synth.isModActive(ModSetting.mstPan, channelIndex, tone.instrumentIndex)) {\n        //    startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\n        //    endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\n        //}\n\n        let toneIsOnLastTick: boolean = shouldFadeOutFast;\n        let intervalStart: number = 0.0;\n        let intervalEnd: number = 0.0;\n        let fadeExpressionStart: number = 1.0;\n        let fadeExpressionEnd: number = 1.0;\n        let chordExpressionStart: number = chordExpression;\n        let chordExpressionEnd: number = chordExpression;\n\n        let expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\n        let basePitch: number = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\n        let baseExpression: number = 1.0;\n        let pitchDamping: number = 48;\n        if (instrument.type == InstrumentType.spectrum) {\n            baseExpression = Config.spectrumBaseExpression;\n            if (isNoiseChannel) {\n                basePitch = Config.spectrumBasePitch;\n                baseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\n            }\n            expressionReferencePitch = Config.spectrumBasePitch;\n            pitchDamping = 28;\n        } else if (instrument.type == InstrumentType.drumset) {\n            basePitch = Config.spectrumBasePitch;\n            baseExpression = Config.drumsetBaseExpression;\n            expressionReferencePitch = basePitch;\n        } else if (instrument.type == InstrumentType.noise) {\n            // dogebox2 code, makes basic noise affected by keys in pitch channels\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\n            // maybe also lower expression in pitch channels?\n            baseExpression = Config.noiseBaseExpression;\n            expressionReferencePitch = basePitch;\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\n        } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n            baseExpression = Config.fmBaseExpression;\n        } else if (instrument.type == InstrumentType.chip){\n                baseExpression = Config.chipBaseExpression;\n\t\t\t\tif (Config.chipWaves[instrument.chipWave].isCustomSampled) {\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isPercussion){\n\t\t\t\t\t\tbasePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse {\n\t\t\t\t\t\tbasePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!); \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\n\t\t\t\t\t\tbasePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune!\n\t\t\t\t\t}\n\t\t\t\t\telse if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\n\t\t\t\t\tbasePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune!;\n\t\t\t\t\t}\n\t\t\t\t}\n            } else if (instrument.type == InstrumentType.customChipWave) {\n            baseExpression = Config.chipBaseExpression;\n        } else if (instrument.type == InstrumentType.harmonics) {\n            baseExpression = Config.harmonicsBaseExpression;\n        } else if (instrument.type == InstrumentType.pwm) {\n            baseExpression = Config.pwmBaseExpression;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            baseExpression = Config.pickedStringBaseExpression;\n        } else if (instrument.type == InstrumentType.mod) {\n            baseExpression = 1.0;\n            expressionReferencePitch = 0;\n            pitchDamping = 1.0;\n            basePitch = 0;\n        } else {\n            throw new Error(\"Unknown instrument type in computeTone.\");\n        }\n\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\n            tone.reset();\n\t\t\t\t\t\t // advloop addition\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                const firstOffset = instrument.chipWaveStartOffset / chipWaveLength;\n                // const lastOffset = (chipWaveLength - 0.01) / chipWaveLength;\n                // @TODO: This is silly and I should actually figure out how to\n                // properly keep lastOffset as 1.0 and not get it wrapped back\n                // to 0 once it's in `Synth.loopableChipSynth`.\n                const lastOffset = 0.999999999999999;\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\n                    tone.chipWaveCompletions[i] = 0;\n                    tone.chipWavePrevWaves[i] = 0;\n                    tone.chipWaveCompletionsLastWave[i] = 0;\n                }\n                // console.log(tone.directions);\n                // advloop addition\n        }\n        tone.freshlyAllocated = false;\n\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            tone.phaseDeltas[i] = 0.0;\n            tone.phaseDeltaScales[i] = 0.0;\n            tone.operatorExpressions[i] = 0.0;\n            tone.operatorExpressionDeltas[i] = 0.0;\n        }\n        tone.expression = 0.0;\n        tone.expressionDelta = 0.0;\n        for (let i: number = 0; i < Config.operatorCount; i++) {\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\n        }\n\n        if (released) {\n            const startTicksSinceReleased: number = tone.ticksSinceReleased;\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + 1.0;\n            intervalStart = intervalEnd = tone.lastInterval;\n            const fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n\n            if (shouldFadeOutFast) {\n                fadeExpressionEnd = 0.0;\n            }\n\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\n        } else if (tone.note == null) {\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\n            tone.lastInterval = 0;\n            tone.ticksSinceReleased = 0;\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\n        } else {\n            const note: Note = tone.note;\n            const nextNote: Note | null = tone.nextNote;\n\n            const noteStartPart: number = tone.noteStartPart;\n            const noteEndPart: number = tone.noteEndPart;\n\n\n            const endPinIndex: number = note.getEndPinIndex(currentPart);\n            const startPin: NotePin = note.pins[endPinIndex - 1];\n            const endPin: NotePin = note.pins[endPinIndex];\n            const noteStartTick: number = noteStartPart * Config.ticksPerPart;\n            const noteEndTick: number = noteEndPart * Config.ticksPerPart;\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\n\n            tone.ticksSinceReleased = 0;\n\n            const tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\n            const tickTimeEnd: number = tickTimeStart + 1.0;\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\n            fadeExpressionStart = 1.0;\n            fadeExpressionEnd = 1.0;\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\n            tone.lastInterval = intervalEnd;\n\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\n                const fadeOutTicks: number = -instrument.getFadeOutTicks();\n                if (fadeOutTicks > 0.0) {\n                    // If the tone should fade out before the end of the note, do so here.\n                    const noteLengthTicks: number = noteEndTick - noteStartTick;\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\n                }\n            }\n\n        }\n\n        tone.isOnLastTick = toneIsOnLastTick;\n\n        let tmpNoteFilter: FilterSettings = instrument.noteFilter;\n        let startPoint: FilterControlPoint;\n        let endPoint: FilterControlPoint;\n\n        if (instrument.noteFilterType) {\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\n            const noteFilterSettingsStart: FilterSettings = instrument.noteFilter;\n            if (instrument.noteSubFilters[1] == null)\n                instrument.noteSubFilters[1] = new FilterSettings();\n            const noteFilterSettingsEnd: FilterSettings = instrument.noteSubFilters[1];\n\n            // Change location based on slider values\n            let startSimpleFreq: number = instrument.noteFilterSimpleCut;\n            let startSimpleGain: number = instrument.noteFilterSimplePeak;\n            let endSimpleFreq: number = instrument.noteFilterSimpleCut;\n            let endSimpleGain: number = instrument.noteFilterSimplePeak;\n            let filterChanges: boolean = false;\n\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\n\n            startPoint = noteFilterSettingsStart.controlPoints[0];\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\n\n            // Temporarily override so that envelope computer uses appropriate computed note filter\n            instrument.noteFilter = noteFilterSettingsStart;\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\n        }\n\n        // Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\n        const envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\n        envelopeComputer.computeEnvelopes(instrument, currentPart, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone);\n        const envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\n        const envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\n        instrument.noteFilter = tmpNoteFilter;\n\n        if (tone.note != null && transition.slides) {\n            // Slide interval and chordExpression at the start and/or end of the note if necessary.\n            const prevNote: Note | null = tone.prevNote;\n            const nextNote: Note | null = tone.nextNote;\n            if (prevNote != null) {\n                const intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\n                if (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\n                if (envelopeComputer.prevSlideEnd) intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\n                    if (envelopeComputer.prevSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\n                }\n            }\n            if (nextNote != null) {\n                const intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\n                if (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\n                if (envelopeComputer.nextSlideEnd) intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\n                    if (envelopeComputer.nextSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\n                }\n            }\n        }\n\n        if (effectsIncludePitchShift(instrument.effects)) {\n            let pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\n            let pitchShiftScalarStart: number = 1.0;\n            let pitchShiftScalarEnd: number = 1.0;\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\n            }\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.pitchShift];\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\n        }\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.detune];\n            let modDetuneStart: number = instrument.detune;\n            let modDetuneEnd: number = instrument.detune;\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\n            }\n            intervalStart += Synth.detuneToCents((modDetuneStart) * envelopeStart) * Config.pitchesPerOctave / (12.0 * 100.0);\n            intervalEnd += Synth.detuneToCents((modDetuneEnd) * envelopeEnd) * Config.pitchesPerOctave / (12.0 * 100.0);\n        }\n\n        if (effectsIncludeVibrato(instrument.effects)) {\n            let delayTicks: number;\n            let vibratoAmplitudeStart: number;\n            let vibratoAmplitudeEnd: number;\n            // Custom vibrato\n            if (instrument.vibrato == Config.vibratos.length) {\n                delayTicks = instrument.vibratoDelay * 2; // Delay was changed from parts to ticks in BB v9\n                // Special case: if vibrato delay is max, NEVER vibrato.\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\n                    delayTicks = Number.POSITIVE_INFINITY;\n                vibratoAmplitudeStart = instrument.vibratoDepth;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            } else {\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2; // Delay was changed from parts to ticks in BB v9\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\n                    delayTicks = Number.POSITIVE_INFINITY;\n\n            }\n\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\n            }\n\n\n            // To maintain pitch continuity, (mostly for picked string which retriggers impulse\n            // otherwise) remember the vibrato at the end of this run and reuse it at the start\n            // of the next run if available.\n            let vibratoStart: number;\n            if (tone.prevVibrato != null) {\n                vibratoStart = tone.prevVibrato;\n            } else {\n                let lfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\n                const vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\n                vibratoStart = vibratoAmplitudeStart * lfoStart * vibratoDepthEnvelopeStart;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\n                }\n            }\n\n            let lfoEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\n            const vibratoDepthEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.vibratoDepth];\n            if (instrument.type != InstrumentType.mod) {\n                let vibratoEnd: number = vibratoAmplitudeEnd * lfoEnd * vibratoDepthEnvelopeEnd;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoEnd: number = delayTicks - envelopeComputer.noteTicksEnd;\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\n                }\n\n                tone.prevVibrato = vibratoEnd;\n\n                intervalStart += vibratoStart;\n                intervalEnd += vibratoEnd;\n            }\n        }\n\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\n            // Fade in the beginning of the note.\n            const fadeInSeconds: number = instrument.getFadeInSeconds();\n            if (fadeInSeconds > 0.0) {\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStart / fadeInSeconds);\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEnd / fadeInSeconds);\n            }\n        }\n\n\n        if (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\n            // It's possible that the note will change while the user is editing it,\n            // but the tone's pitches don't get updated because the tone has already\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\n            tone.drumsetPitch = tone.pitches[0];\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\n        }\n\n        let noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\n            tone.noteFilterCount = 0;\n        } else {\n\n            const noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\n            const noteAllFreqsEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterAllFreqs];\n\n            // Simple note filter\n            if (instrument.noteFilterType) {\n                const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0];\n                const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0];\n                const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0];\n                const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0];\n\n                startPoint!.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                endPoint!.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n\n                if (tone.noteFilters.length < 1) tone.noteFilters[0] = new DynamicBiquadFilter();\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint!.type == FilterType.lowPass);\n                noteFilterExpression *= startPoint!.getVolumeCompensationMult();\n\n                tone.noteFilterCount = 1;\n            }\n            else {\n                const noteFilterSettings: FilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n\n                for (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\n                    const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\n                    const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0 + i];\n                    const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\n                    const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0 + i];\n                    let startPoint: FilterControlPoint = noteFilterSettings.controlPoints[i];\n                    const endPoint: FilterControlPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\n\n                    // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\n                    if (startPoint.type != endPoint.type) {\n                        startPoint = endPoint;\n                    }\n\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                    if (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\n                }\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\n            }\n        }\n\n        if (instrument.type == InstrumentType.drumset) {\n            const drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\n            // If the drumset lowpass cutoff decays, compensate by increasing expression.\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope)\n\n            // Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\n            let drumsetFilterEnvelopeStart: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.noteSizeStart);\n            let drumsetFilterEnvelopeEnd: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.noteSizeEnd);\n\n            // Apply slide interpolation to drumset envelope.\n            if (envelopeComputer.prevSlideStart) {\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.prevNoteSize);\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.prevSlideRatioStart;\n            }\n            if (envelopeComputer.prevSlideEnd) {\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.prevNoteSize);\n                drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.prevSlideRatioEnd;\n            }\n            if (envelopeComputer.nextSlideStart) {\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeStart, envelopeComputer.nextNoteSize);\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.nextSlideRatioStart;\n            }\n            if (envelopeComputer.nextSlideEnd) {\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeEnd, envelopeComputer.nextNoteSize);\n                drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.nextSlideRatioEnd;\n            }\n\n            const point: FilterControlPoint = this.tempDrumSetControlPoint;\n            point.type = FilterType.lowPass;\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\n            // Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\n            if (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n            tone.noteFilterCount++;\n        }\n\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\n\n        if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n            // phase modulation!\n\n            let sineExpressionBoost: number = 1.0;\n            let totalCarrierExpression: number = 0.0;\n\n            let arpeggioInterval: number = 0;\n            const arpeggiates: boolean = chord.arpeggiates;\n            if (tone.pitchCount > 1 && arpeggiates) {\n                const arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n            }\n\n\n            const carrierCount: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\n            for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op? 6 : Config.operatorCount); i++) {\n\n                const associatedCarrierIndex: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.associatedCarrier[i]-1:Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\n                const pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\n                const pitchStart: number = basePitch + (pitch + intervalStart) * intervalScale + interval;\n                const pitchEnd: number = basePitch + (pitch + intervalEnd) * intervalScale + interval;\n                const baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\n                const baseFreqEnd: number = Instrument.frequencyFromPitch(pitchEnd);\n                const hzOffset: number = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\n                const targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\n                const targetFreqEnd: number = freqMult * baseFreqEnd + hzOffset;\n\n                \n                const freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\n                const freqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.operatorFrequency0 + i];\n                let freqStart: number;\n                let freqEnd: number;\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\n                } else {\n                    freqStart = targetFreqStart;\n                    freqEnd = targetFreqEnd;\n                }\n                tone.phaseDeltas[i] = freqStart * sampleTime;\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\n\n                let amplitudeStart: number = instrument.operators[i].amplitude;\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\n                if (i < 4){\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                } else {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n\n                let expressionStart: number = amplitudeMultStart;\n                let expressionEnd: number = amplitudeMultEnd;\n\n\n                if (i < carrierCount) {\n                    // carrier\n                    let pitchExpressionStart: number;\n                    if (tone.prevPitchExpressions[i] != null) {\n                        pitchExpressionStart = tone.prevPitchExpressions[i]!;\n                    } else {\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\n                    }\n                    const pitchExpressionEnd: number = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\n                    expressionStart *= pitchExpressionStart;\n                    expressionEnd *= pitchExpressionEnd;\n\n                    totalCarrierExpression += amplitudeCurveEnd;\n                } else {\n                    // modulator\n                    expressionStart *= Config.sineWaveLength * 1.5;\n                    expressionEnd *= Config.sineWaveLength * 1.5;\n\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\n                }\n\n                expressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\n                expressionEnd *= envelopeEnds[EnvelopeComputeIndex.operatorAmplitude0 + i];\n\n                // Check for mod-related volume delta\n                // @jummbus - This amplification is also applied to modulator FM operators which distorts the sound.\n                // The fix is to apply this only to carriers, but as this is a legacy bug and it can cause some interesting sounds, it's left in.\n                // You can use the mix volume modulator instead to avoid this effect.\n\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n                    const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                    const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n                }\n\n                tone.operatorExpressions[i] = expressionStart;\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n            }\n\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\n            const expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\n            const expressionEnd: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\n            }\n\n            let feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\n\n            let feedbackStart: number = feedbackAmplitudeStart * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\n            let feedbackEnd: number = feedbackAmplitudeEnd * envelopeEnds[EnvelopeComputeIndex.feedbackAmplitude];\n            tone.feedbackMult = feedbackStart;\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\n\n\n        } else {\n            const basePhaseDeltaScale: number = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / 12.0) / roundedSamplesPerTick);\n\n            let pitch: number = tone.pitches[0];\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\n                const arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\n                if (chord.customInterval) {\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\n                } else {\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\n                }\n            }\n\n            const startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\n            const endPitch: number = basePitch + (pitch + intervalEnd) * intervalScale;\n            let pitchExpressionStart: number;\n            // TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\n            if (tone.prevPitchExpressions[0] != null) {\n                pitchExpressionStart = tone.prevPitchExpressions[0]!;\n            } else {\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\n            }\n            const pitchExpressionEnd: number = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\n            let settingsExpressionMult: number = baseExpression * noteFilterExpression;\n\n            if (instrument.type == InstrumentType.noise) {\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\n            }\n            if (instrument.type == InstrumentType.chip) {\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\n            }\n            if (instrument.type == InstrumentType.pwm) {\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\n                // Check for PWM mods to this instrument\n                let pulseWidthModStart: number = basePulseWidth;\n                let pulseWidthModEnd: number = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\n                tone.pulseWidth = pulseWidthStart;\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\n\n                //decimal offset mods\n                let decimalOffsetModStart: number = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n \n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\n                tone.decimalOffset = decimalOffsetStart;\n                \n                tone.pulseWidth -= (tone.decimalOffset) / 10000;\n            }\n            if (instrument.type == InstrumentType.pickedString) {\n                // Check for sustain mods\n                let useSustainStart: number = instrument.stringSustain;\n                let useSustainEnd: number = instrument.stringSustain;\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\n                }\n\n                tone.stringSustainStart = useSustainStart;\n                tone.stringSustainEnd = useSustainEnd;\n\n                // Increase expression to compensate for string decay.\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\n\n            }\n\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                // These instruments have two waves at different frequencies for the unison feature.\n                //const unison: Unison = Config.unisons[instrument.unison];\n                const unisonVoices: number = instrument.unisonVoices;\n                const unisonSpread: number = instrument.unisonSpread;\n                const unisonOffset: number = instrument.unisonOffset;\n                const unisonExpression: number = instrument.unisonExpression;\n                //const unisonSign: number = Config.unisons[instrument.unisonSign];\n                //const unison: Unison = [voices:, ];\n                const voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unisonVoices / 2.0;\n                settingsExpressionMult *= unisonExpression * voiceCountExpression;\n                const unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\n                const unisonEnvelopeEnd = envelopeEnds[EnvelopeComputeIndex.unison];\n                const unisonAStart: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeStart / 12.0);\n                const unisonAEnd: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeEnd / 12.0);\n                const unisonBStart: number = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\n                const unisonBEnd: number = Math.pow(2.0, (unisonOffset- unisonSpread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\n                tone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\n                tone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\n            } else {\n                tone.phaseDeltas[0] = startFreq * sampleTime;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\n            }\n\n            let expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\n            let expressionEnd: number = settingsExpressionMult * fadeExpressionEnd * chordExpressionEnd * pitchExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\n\n            // Check for mod-related volume delta\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n                const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true)\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n            }\n\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n\n            if (instrument.type == InstrumentType.pickedString) {\n                let stringDecayStart: number;\n                if (tone.prevStringDecay != null) {\n                    stringDecayStart = tone.prevStringDecay;\n                } else {\n                    const sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\n                }\n                const sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[EnvelopeComputeIndex.stringSustain];\n                let stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\n                tone.prevStringDecay = stringDecayEnd;\n\n                //const unison: Unison = Config.unisons[instrument.unison];\n                const unisonVoices: number = instrument.unisonVoices;\n                for (let i: number = tone.pickedStrings.length; i < unisonVoices; i++) {\n                    tone.pickedStrings[i] = new PickedString();\n                }\n\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n                    for (const pickedString of tone.pickedStrings) {\n                        // Force the picked string to retrigger the attack impulse at the start of the note.\n                        pickedString.delayIndex = -1;\n                    }\n                }\n\n                for (let i: number = 0; i < unisonVoices; i++) {\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd);\n                }\n            }\n        }\n    }\n\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\n        let effect: number = 0.0;\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\n        }\n        return effect;\n    }\n\n\n    public static getInstrumentSynthFunction(instrument: Instrument): Function {\n        if (instrument.type == InstrumentType.fm) {\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\n                const synthSource: string[] = [];\n\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs: string[] = [];\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks: string[] = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                } else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    } else if (line.indexOf(\"#\") != -1) {\n                        for (let j: number = 0; j < Config.operatorCount; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    } else {\n                        synthSource.push(line);\n                    }\n                }\n\n                //console.log(synthSource.join(\"\\n\"));\n\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"bufferIndex\", \"roundedSamplesPerTick\", \"tone\", \"instrumentState\", synthSource.join(\"\\n\"));\n            }\n            return Synth.fmSynthFunctionCache[fingerprint];\n        } else if (instrument.type == InstrumentType.chip) {\n\t\t                 // advloop addition\n                if (instrument.isUsingAdvancedLoopControls) {\n                    return Synth.loopableChipSynth;\n                }\n                // advloop addition\n            return Synth.chipSynth;\n        } else if (instrument.type == InstrumentType.customChipWave) {\n            return Synth.chipSynth;\n        } else if (instrument.type == InstrumentType.harmonics) {\n            return Synth.harmonicsSynth;\n        } else if (instrument.type == InstrumentType.pwm) {\n            return Synth.pulseWidthSynth;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            return Synth.pickedStringSynth;\n        } else if (instrument.type == InstrumentType.noise) {\n            return Synth.noiseSynth;\n        } else if (instrument.type == InstrumentType.spectrum) {\n            return Synth.spectrumSynth;\n        } else if (instrument.type == InstrumentType.drumset) {\n            return Synth.drumsetSynth;\n        } else if (instrument.type == InstrumentType.mod) {\n            return Synth.modSynth;\n        } else if (instrument.type == InstrumentType.fm6op) {\n            const fingerprint: string = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\n                const synthSource: string[] = [];\n\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs: string[] = [];\n                        for (let j: number = 0; j < instrument.customAlgorithm.carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j: number = Config.operatorCount+2 - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n\n                                    const feedbackIndices: ReadonlyArray<number> = instrument.customFeedbackType.indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks: string[] = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                } else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    } else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount+2; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    } else {\n                        synthSource.push(line);\n                    }\n                }\n\n                //console.log(synthSource.join(\"\\n\"));\n\n                Synth.fm6SynthFunctionCache[fingerprint] = new Function(\"synth\", \"bufferIndex\", \"roundedSamplesPerTick\", \"tone\", \"instrumentState\", synthSource.join(\"\\n\"));\n            }\n            return Synth.fm6SynthFunctionCache[fingerprint];\n        }else{\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\n        }\n    }\n// advloop addition\n        static wrap(x: number, b: number): number {\n            return (x % b + b) % b;\n        }\n        static loopableChipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n            // @TODO:\n            // - Longer declicking? This is more difficult than I thought.\n            //   When determining this automatically is difficult (or the input\n            //   samples are expected to vary too much), this is left up to the\n            //   user.\n            const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n            // const aliases = false;\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n            const wave: Float32Array = instrumentState.wave!;\n            const volumeScale: number = instrumentState.volumeScale;\n            const waveLength: number = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n            let chipWaveLoopEnd: number = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\n            let chipWaveLoopStart: number = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\n\t\t\t// @TODO: This is where to set things up for the release loop mode.\n           // const ticksSinceReleased = tone.ticksSinceReleased;\n            // if (ticksSinceReleased > 0) {\n            //     chipWaveLoopStart = 0;\n            //     chipWaveLoopEnd = waveLength - 1;\n            // }\n            let chipWaveLoopLength: number = chipWaveLoopEnd - chipWaveLoopStart;\n\t\t\tif (chipWaveLoopLength < 2) {\n                chipWaveLoopStart = 0;\n                chipWaveLoopEnd = waveLength;\n                chipWaveLoopLength = waveLength;\n            }\n            const chipWaveLoopMode: number = instrumentState.chipWaveLoopMode;\n            const chipWavePlayBackwards: boolean = instrumentState.chipWavePlayBackwards;\n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n            if (instrumentState.unisonVoices == 1 && !instrumentState.chord!.customInterval)\n                tone.phases[1] = tone.phases[0];\n            let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n            let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n            let directionA: number = tone.directions[0];\n            let directionB: number = tone.directions[1];\n            let chipWaveCompletionA: number = tone.chipWaveCompletions[0];\n            let chipWaveCompletionB: number = tone.chipWaveCompletions[1];\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\n                // If playing once or looping, we force the correct direction,\n                // since it shouldn't really change. This is mostly so that if\n                // the mode is changed midway through playback, it won't get\n                // stuck on the wrong direction.\n                if (!chipWavePlayBackwards) {\n                    directionA = 1;\n                    directionB = 1;\n                } else {\n                    directionA = -1;\n                    directionB = -1;\n                }\n            }\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {\n                // If looping or ping-ponging, we clear the completion status,\n                // as it's not relevant anymore. This is mostly so that if the\n                // mode is changed midway through playback, it won't get stuck\n                // on zero volume.\n                chipWaveCompletionA = 0;\n                chipWaveCompletionB = 0;\n            }\n            let lastWaveA: number = tone.chipWaveCompletionsLastWave[0];\n            let lastWaveB: number = tone.chipWaveCompletionsLastWave[1];\n            const chipWaveCompletionFadeLength: number = 1000;\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n            let expression: number = +tone.expression;\n            const expressionDelta: number = +tone.expressionDelta;\n            let phaseA: number = Synth.wrap(tone.phases[0], 1) * waveLength;\n            let phaseB: number = Synth.wrap(tone.phases[1], 1) * waveLength;\n            let prevWaveIntegralA: number = 0;\n            let prevWaveIntegralB: number = 0;\n            if (!aliases) {\n                const phaseAInt = Math.floor(phaseA);\n                const phaseBInt = Math.floor(phaseB);\n                const indexA = Synth.wrap(phaseAInt, waveLength);\n               const indexB = Synth.wrap(phaseBInt, waveLength);\n                const phaseRatioA = phaseA - phaseAInt;\n                const phaseRatioB = phaseB - phaseBInt;\n                prevWaveIntegralA = +wave[indexA];\n                prevWaveIntegralB = +wave[indexB];\n                prevWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - prevWaveIntegralA) * phaseRatioA;\n                prevWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - prevWaveIntegralB) * phaseRatioB;\n           }\n            const filters = tone.noteFilters;\n            const filterCount: number = tone.noteFilterCount | 0;\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n            const applyFilters: Function = Synth.applyFilters;\n            const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n            let prevWaveA: number = tone.chipWavePrevWaves[0];\n            let prevWaveB: number = tone.chipWavePrevWaves[1];\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                if (chipWaveCompletionA > 0 && chipWaveCompletionA < chipWaveCompletionFadeLength) {\n                    chipWaveCompletionA++;\n                }\n                if (chipWaveCompletionB > 0 && chipWaveCompletionB < chipWaveCompletionFadeLength) {\n                    chipWaveCompletionB++;\n                }\n               let wrapped: number = 0;\n                phaseA += phaseDeltaA * directionA;\n                phaseB += phaseDeltaB * directionB;\n                if (chipWaveLoopMode === 2) {\n                    // once\n                    if (directionA === 1) {\n                        if (phaseA > waveLength) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < 0) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > waveLength) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseB < 0) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 3) {\n                    // loop once\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 0) {\n                    // loop\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            phaseA = chipWaveLoopStart + Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopStart;\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            phaseA = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopEnd;\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            phaseB = chipWaveLoopStart + Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopStart;\n                            wrapped = 1;\n                        }\n                    } else if (directionB === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            phaseB = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopEnd;\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 1) {\n                    // ping-pong\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            phaseA = chipWaveLoopEnd - Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopEnd;\n                            directionA = -1;\n                           wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            phaseA = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopStart;\n                            directionA = 1;\n                           wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            phaseB = chipWaveLoopEnd - Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopEnd;\n                            directionB = -1;\n                            wrapped = 1;\n                        }\n                    } else if (directionB === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            phaseB = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopStart;\n                            directionB = 1;\n                            wrapped = 1;\n                        }\n                    }\n               }\n                let waveA = 0;\n                let waveB = 0;\n                let inputSample = 0;\n                if (aliases) {\n                    waveA = wave[Synth.wrap(Math.floor(phaseA), waveLength)];\n                    waveB = wave[Synth.wrap(Math.floor(phaseB), waveLength)];\n                    prevWaveA = waveA;\n                    prevWaveB = waveB;\n                    const completionFadeA: number = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    const completionFadeB: number = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    inputSample = 0;\n                    if (chipWaveCompletionA > 0) {\n                        inputSample += lastWaveA * completionFadeA;\n                    } else {\n                        inputSample += waveA;\n                    }\n                    if (chipWaveCompletionB > 0) {\n                        inputSample += lastWaveB * completionFadeB;\n                    } else {\n                        inputSample += waveB;\n                    }\n                }\n                else {\n                    const phaseAInt = Math.floor(phaseA);\n                    const phaseBInt = Math.floor(phaseB);\n                    const indexA = Synth.wrap(phaseAInt, waveLength);\n                    const indexB = Synth.wrap(phaseBInt, waveLength);\n                    let nextWaveIntegralA = wave[indexA];\n                    let nextWaveIntegralB = wave[indexB];\n                    const phaseRatioA = phaseA - phaseAInt;\n                    const phaseRatioB = phaseB - phaseBInt;\n                    nextWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - nextWaveIntegralA) * phaseRatioA;\n                    nextWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - nextWaveIntegralB) * phaseRatioB;\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\n                        let pwia = 0;\n                        let pwib = 0;\n                        const phaseA_ = Math.max(0, phaseA - phaseDeltaA * directionA);\n                        const phaseB_ = Math.max(0, phaseB - phaseDeltaB * directionB);\n                        const phaseAInt = Math.floor(phaseA_);\n                        const phaseBInt = Math.floor(phaseB_);\n                        const indexA = Synth.wrap(phaseAInt, waveLength);\n                        const indexB = Synth.wrap(phaseBInt, waveLength);\n                        pwia = wave[indexA];\n                        pwib = wave[indexB];\n                        pwia += (wave[Synth.wrap(indexA + 1, waveLength)] - pwia) * (phaseA_ - phaseAInt) * directionA;\n                        pwib += (wave[Synth.wrap(indexB + 1, waveLength)] - pwib) * (phaseB_ - phaseBInt) * directionB;\n                        prevWaveIntegralA = pwia;\n                        prevWaveIntegralB = pwib;\n\t\t\t\t   }\n                   if (chipWaveLoopMode === 1 && wrapped !== 0) {\n                       waveA = prevWaveA;\n                       waveB = prevWaveB;\n                   } else {\n                       waveA = (nextWaveIntegralA - prevWaveIntegralA) / (phaseDeltaA * directionA);\n                       waveB = (nextWaveIntegralB - prevWaveIntegralB) / (phaseDeltaB * directionB);\n                   }\n                   prevWaveA = waveA;\n                   prevWaveB = waveB;\n\t\t\t\t   prevWaveIntegralA = nextWaveIntegralA;\n\t\t\t\t   prevWaveIntegralB = nextWaveIntegralB;\n                    const completionFadeA = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    const completionFadeB = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    if (chipWaveCompletionA > 0) {\n                        inputSample += lastWaveA * completionFadeA;\n                    } else {\n                        inputSample += waveA;\n                    }\n                    if (chipWaveCompletionB > 0) {\n                        inputSample += lastWaveB * completionFadeB;\n                    } else {\n                        inputSample += waveB * unisonSign;\n                    }\n                }\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n                initialFilterInput2 = initialFilterInput1;\n                initialFilterInput1 = inputSample * volumeScale;\n                phaseDeltaA *= phaseDeltaScaleA;\n                phaseDeltaB *= phaseDeltaScaleB;\n                const output = sample * expression;\n                expression += expressionDelta;\n                data[sampleIndex] += output;\n            }\n            tone.phases[0] = phaseA / waveLength;\n            tone.phases[1] = phaseB / waveLength;\n            tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n            tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n            tone.directions[0] = directionA;\n            tone.directions[1] = directionB;\n            tone.chipWaveCompletions[0] = chipWaveCompletionA;\n            tone.chipWaveCompletions[1] = chipWaveCompletionB;\n            tone.chipWavePrevWaves[0] = prevWaveA;\n            tone.chipWavePrevWaves[1] = prevWaveB;\n            tone.chipWaveCompletionsLastWave[0] = lastWaveA;\n            tone.chipWaveCompletionsLastWave[1] = lastWaveB;\n            tone.expression = expression;\n            synth.sanitizeFilters(filters);\n            tone.initialNoteFilterInput1 = initialFilterInput1;\n            tone.initialNoteFilterInput2 = initialFilterInput2;\n        }\n        // advloop addition\n    private static chipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const volumeScale = instrumentState.volumeScale;\n\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\t\t\t//BUGFIX FROM JUMMBOX\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n        let prevWaveIntegralA: number = 0;\n        let prevWaveIntegralB: number = 0;\n\n        if (!aliases) {\n            const phaseAInt: number = phaseA | 0;\n            const phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt % waveLength;\n            const indexB: number = phaseBInt % waveLength;\n            const phaseRatioA: number = phaseA - phaseAInt;\n            const phaseRatioB: number = phaseB - phaseBInt;\n            prevWaveIntegralA = +wave[indexA];\n            prevWaveIntegralB = +wave[indexB];\n            prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n            prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n        }\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n\n            let waveA: number;\n            let waveB: number;\n            let inputSample: number;\n\n            if (aliases) {\n                waveA = wave[(0 | phaseA) % waveLength];\n                waveB = wave[(0 | phaseB) % waveLength];\n                inputSample = waveA + waveB;\n            } else {\n                const phaseAInt: number = phaseA | 0;\n                const phaseBInt: number = phaseB | 0;\n                const indexA: number = phaseAInt % waveLength;\n                const indexB: number = phaseBInt % waveLength;\n                let nextWaveIntegralA: number = wave[indexA];\n                let nextWaveIntegralB: number = wave[indexB];\n                const phaseRatioA: number = phaseA - phaseAInt;\n                const phaseRatioB: number = phaseB - phaseBInt;\n                nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n                nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n                waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n                waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n                prevWaveIntegralA = nextWaveIntegralA;\n                prevWaveIntegralB = nextWaveIntegralB;\n                inputSample = waveA + waveB * unisonSign;\n            }\n\n            const sample: number = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t//BUGFIX FROM JUMMBOX\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample * volumeScale;\n\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n\t\t//BUGFIX FROM JUMMBOX\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static harmonicsSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        const phaseAInt: number = phaseA | 0;\n        const phaseBInt: number = phaseB | 0;\n        const indexA: number = phaseAInt % waveLength;\n        const indexB: number = phaseBInt % waveLength;\n        const phaseRatioA: number = phaseA - phaseAInt;\n        const phaseRatioB: number = phaseB - phaseBInt;\n        let prevWaveIntegralA: number = +wave[indexA];\n        let prevWaveIntegralB: number = +wave[indexB];\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n\n            const phaseAInt: number = phaseA | 0;\n            const phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt % waveLength;\n            const indexB: number = phaseBInt % waveLength;\n            let nextWaveIntegralA: number = wave[indexA];\n            let nextWaveIntegralB: number = wave[indexB];\n            const phaseRatioA: number = phaseA - phaseAInt;\n            const phaseRatioB: number = phaseB - phaseBInt;\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n            const waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n            const waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n            prevWaveIntegralA = nextWaveIntegralA;\n            prevWaveIntegralB = nextWaveIntegralB;\n\n            const inputSample: number = waveA + waveB * unisonSign;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static pickedStringSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        // This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\n        // all-pass filter for dispersion and with more control over the impulse harmonics.\n        // The source code is processed as a string before being compiled, in order to\n        // handle the unison feature. If unison is disabled or set to none, then only one\n        // string voice is required, otherwise two string voices are required. We only want\n        // to compute the minimum possible number of string voices, so omit the code for\n        // processing extra ones if possible. Any line containing a \"#\" is duplicated for\n        // each required voice, replacing the \"#\" with the voice index.\n\n        const voiceCount: number = instrumentState.unisonVoices;\n        let pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\n        if (pickedStringFunction == undefined) {\n            let pickedStringSource: string = \"\";\n\n            pickedStringSource += `\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet shelfSample# = +pickedString#.shelfSample;\n\t\t\t\tlet shelfPrevInput# = +pickedString#.shelfPrevInput;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet shelfA1# = +pickedString#.shelfA1;\n\t\t\t\tlet shelfB0# = +pickedString#.shelfB0;\n\t\t\t\tlet shelfB1# = +pickedString#.shelfB1;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst shelfA1Delta# = +pickedString#.shelfA1Delta;\n\t\t\t\tconst shelfB0Delta# = +pickedString#.shelfB0Delta;\n\t\t\t\tconst shelfB1Delta# = +pickedString#.shelfB1Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tshelfSample# = shelfB0# * allPassSample# + shelfB1# * shelfPrevInput# - shelfA1# * shelfSample#;\n\t\t\t\t\tshelfPrevInput# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += shelfSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (`\n\n            const sampleList: string[] = [];\n            for (let voice: number = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\n            }\n\n            pickedStringSource += sampleList.join(\" + \");\n\n            pickedStringSource += `) * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tshelfA1# += shelfA1Delta#;\n\t\t\t\t\tshelfB0# += shelfB0Delta#;\n\t\t\t\t\tshelfB1# += shelfB1Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(shelfSample#) || Math.abs(shelfSample#) < epsilon) shelfSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(shelfPrevInput#) || Math.abs(shelfPrevInput#) < epsilon) shelfPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.shelfSample = shelfSample#;\n\t\t\t\tpickedString#.shelfPrevInput = shelfPrevInput#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.shelfA1 = shelfA1#;\n\t\t\t\tpickedString#.shelfB0 = shelfB0#;\n\t\t\t\tpickedString#.shelfB1 = shelfB1#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;`\n\n            // Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\n                const lines = [];\n                for (let voice: number = 0; voice < voiceCount; voice++) {\n                    lines.push(line.replace(/\\#/g, String(voice)));\n                }\n                return lines.join(\"\\n\");\n            });\n\n            //console.log(pickedStringSource);\n            pickedStringFunction = new Function(\"synth\", \"bufferIndex\", \"runLength\", \"tone\", \"instrumentState\", pickedStringSource);\n            Synth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\n        }\n\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n\n    private static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\n        // TODO: If automation is involved, don't assume sliders will stay at zero.\n        // @jummbus - ^ Correct, removed the non-zero checks as modulation can change them.\n\n        const usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\n        const usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\n        const usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\n        const usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\n        const usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\n        const usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\n        let signature: number = 0; if (usesDistortion) signature = signature | 1;\n        signature = signature << 1; if (usesBitcrusher) signature = signature | 1;\n        signature = signature << 1; if (usesEqFilter) signature = signature | 1;\n        signature = signature << 1; if (usesPanning) signature = signature | 1;\n        signature = signature << 1; if (usesChorus) signature = signature | 1;\n        signature = signature << 1; if (usesEcho) signature = signature | 1;\n        signature = signature << 1; if (usesReverb) signature = signature | 1;\n\n        let effectsFunction: Function = Synth.effectsFunctionCache[signature];\n        if (effectsFunction == undefined) {\n            let effectsSource: string = \"\";\n\n            const usesDelays: boolean = usesChorus || usesReverb || usesEcho;\n\n            effectsSource += `\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\n            }\n\n            if (usesDistortion) {\n                // Distortion can sometimes create noticeable aliasing.\n                // It seems the established industry best practice for distortion antialiasing\n                // is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\n                // at the original nyquist frequency), perform the distortion, then downsample\n                // (the lowpass again followed by dropping in-between samples). This is\n                // \"mathematically correct\" in that it preserves only the intended frequencies,\n                // but it has several unfortunate tradeoffs depending on the choice of filter,\n                // introducing latency and/or time smearing, since no true brick wall filter\n                // exists. For the time being, I've opted to instead generate in-between input\n                // samples using fractional delay all-pass filters, and after distorting them,\n                // I \"downsample\" these with a simple weighted sum.\n\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = beepbox.Synth.applyFilters;`\n            }\n\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\n            }\n\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\n\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\n            }\n\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\n            } else {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    `\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;`\n            }\n\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\n            }\n\n            effectsSource += `\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\n            }\n\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\n\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\n            }\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tbeepbox.Synth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\n            }\n\n            //console.log(effectsSource);\n            effectsFunction = new Function(\"synth\", \"outputDataL\", \"outputDataR\", \"bufferIndex\", \"runLength\", \"instrumentState\", effectsSource);\n            Synth.effectsFunctionCache[signature] = effectsFunction;\n        }\n\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n    }\n\n    private static pulseWidthSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\n        let phaseDelta: number = tone.phaseDeltas[0];\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phase: number = (tone.phases[0] % 1);\n\n        let pulseWidth: number = tone.pulseWidth;\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            const sawPhaseA: number = phase % 1;\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\n\n            let pulseWave: number = sawPhaseB - sawPhaseA;\n\n            // This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n            if (!instrument.aliases) {\n                if (sawPhaseA < phaseDelta) {\n                    var t = sawPhaseA / phaseDelta;\n                    pulseWave += (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseA > 1.0 - phaseDelta) {\n                    var t = (sawPhaseA - 1.0) / phaseDelta;\n                    pulseWave += (t + t + t * t + 1) * 0.5;\n                }\n                if (sawPhaseB < phaseDelta) {\n                    var t = sawPhaseB / phaseDelta;\n                    pulseWave -= (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseB > 1.0 - phaseDelta) {\n                    var t = (sawPhaseB - 1.0) / phaseDelta;\n                    pulseWave -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n\n            const inputSample: number = pulseWave;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n            pulseWidth += pulseWidthDelta;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase;\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.pulseWidth = pulseWidth;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static fmSourceTemplate: string[] = (`\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = beepbox.Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = beepbox.Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t`).split(\"\\n\");\n\n    private static operatorSourceTemplate: string[] = (`\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t`).split(\"\\n\");\n\n    private static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        let phaseDelta: number = +tone.phaseDeltas[0];\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\n        if (tone.phases[0] == 0) {\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase = Math.random() * Config.chipNoiseLength;\n        }\n        const phaseMask: number = Config.chipNoiseLength - 1;\n        let noiseSample: number = +tone.noiseSample;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta * instrumentState.noisePitchFilterMult);\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const waveSample: number = wave[phase & phaseMask];\n\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.chipNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.noiseSample = noiseSample;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const samplesInPeriod: number = (1 << 7);\n        let phaseDelta: number = tone.phaseDeltas[0] * samplesInPeriod;\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let noiseSample: number = +tone.noiseSample;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\n\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseInt: number = phase | 0;\n            const index: number = phaseInt & phaseMask;\n            let waveSample: number = wave[index];\n            const phaseRatio: number = phase - phaseInt;\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\n\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\n\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta / samplesInPeriod;\n        tone.expression = expression;\n        tone.noiseSample = noiseSample;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        let wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\n        const referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\n        let phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseInt: number = phase | 0;\n            const index: number = phaseInt & phaseMask;\n            let noiseSample: number = wave[index];\n            const phaseRatio: number = phase - phaseInt;\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static modSynth(synth: Synth, stereoBufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\n        // Note: present modulator value is tone.expressionStarts[0].\n\n        if (!synth.song) return;\n\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n        // Flagged as invalid because unused by current settings, skip\n        if (instrument.invalidModulators[mod]) return;\n\n        let setting: number = instrument.modulators[mod];\n\n        // Generate list of used instruments\n        let usedInstruments: number[] = [];\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\n            // Instrument doesn't matter for song, just push a random index to run the modsynth once\n            usedInstruments.push(0);\n        } else {\n            // All\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                for (let i: number = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                    usedInstruments.push(i);\n                }\n            }\n            // Active\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar)!.instruments;\n            } else {\n                usedInstruments.push(instrument.modInstruments[mod]);\n            }\n        }\n\n        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, mod, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n\n            // Reset arps, but only at the start of the note\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\n            }\n            // Denote next bar skip\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\n                synth.wantToSkip = true;\n            }\n            // Extra info for eq filter target needs to be set as well\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n\n                if (!tgtInstrument.eqFilterType) {\n\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\n\n                        let pinIdx: number = 0;\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\n                        // 0 to 1 based on distance to next morph\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n\n                        // Compute the new settings to go to.\n                        if (tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\n                        } else {\n                            // No mutation will occur to the filter object so we can safely return it without copying\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\n                        }\n\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\n                    else {\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\n                        }\n\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) { // X\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            } else { // Y\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            // Extra info for note filter target needs to be set as well\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n\n                if (!tgtInstrument.noteFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\n\n                        let pinIdx: number = 0;\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\n                        // 0 to 1 based on distance to next morph\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n\n                        // Compute the new settings to go to.\n                        if (tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\n                        } else {\n                            // No mutation will occur to the filter object so we can safely return it without copying\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\n                        }\n\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\n                    else {\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\n\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\n                        }\n\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) { // X\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            } else { // Y\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private static findRandomZeroCrossing(wave: Float32Array, waveLength: number): number {\n        let phase: number = Math.random() * waveLength;\n        const phaseMask: number = waveLength - 1;\n\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\n        // otherwise they pop. Try to find a zero crossing.\n        let indexPrev: number = phase & phaseMask;\n        let wavePrev: number = wave[indexPrev];\n        const stride: number = 16;\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\n            const indexNext: number = (indexPrev + stride) & phaseMask;\n            const waveNext: number = wave[indexNext];\n            if (wavePrev * waveNext <= 0.0) {\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\n                for (let i: number = 0; i < stride; i++) {\n                    const innerIndexNext: number = (indexPrev + 1) & phaseMask;\n                    const innerWaveNext: number = wave[innerIndexNext];\n                    if (wavePrev * innerWaveNext <= 0.0) {\n                        // Found the zero crossing again! Now let's find the exact intersection.\n                        const slope: number = innerWaveNext - wavePrev;\n                        phase = indexPrev;\n                        if (Math.abs(slope) > 0.00000001) {\n                            phase += -wavePrev / slope;\n                        }\n                        phase = Math.max(0, phase) % waveLength;\n                        break;\n                    } else {\n                        indexPrev = innerIndexNext;\n                        wavePrev = innerWaveNext;\n                    }\n                }\n                break;\n            } else {\n                indexPrev = indexNext;\n                wavePrev = waveNext;\n            }\n        }\n\n        return phase;\n    }\n\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\n    }\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\n    }\n    public static noteSizeToVolumeMult(size: number): number {\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\n    }\n    public static volumeMultToNoteSize(volumeMult: number): number {\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\n    }\n\n    public static fadeInSettingToSeconds(setting: number): number {\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\n    }\n    public static secondsToFadeInSetting(seconds: number): number {\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n    }\n    public static fadeOutSettingToTicks(setting: number): number {\n        return Config.fadeOutTicks[setting];\n    }\n    public static ticksToFadeOutSetting(ticks: number): number {\n        let lower: number = Config.fadeOutTicks[0];\n        if (ticks <= lower) return 0;\n        for (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\n            let upper: number = Config.fadeOutTicks[i];\n            if (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\n            lower = upper;\n        }\n        return Config.fadeOutTicks.length - 1;\n    }\n\n    public static detuneToCents(detune: number): number {\n        // BeepBox formula, for reference:\n        // return detune * (Math.abs(detune) + 1) / 2;\n        return detune - Config.detuneCenter;\n    }\n    public static centsToDetune(cents: number): number {\n        // BeepBox formula, for reference:\n        // return Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\n        return cents + Config.detuneCenter;\n    }\n\n    public static getOperatorWave(waveform: number, pulseWidth: number) {\n        if (waveform != 2) {\n            return Config.operatorWaves[waveform];\n        }\n        else {\n            return Config.pwmOperatorWaves[pulseWidth];\n        }\n    }\n\n    private getSamplesPerTick(): number {\n        if (this.song == null) return 0;\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\n        }\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\n    }\n\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\n        return this.samplesPerSecond / tickPerSecond;\n    }\n\n    public static fittingPowerOfTwo(x: number): number {\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\n    }\n\n    private sanitizeFilters(filters: DynamicBiquadFilter[]): void {\n        let reset: boolean = false;\n        for (const filter of filters) {\n            const output1: number = Math.abs(filter.output1);\n            const output2: number = Math.abs(filter.output2);\n            // If either is a large value, Infinity, or NaN, then just reset all filter history.\n            if (!(output1 < 100) || !(output2 < 100)) {\n                reset = true;\n                break;\n            }\n            if (output1 < epsilon) filter.output1 = 0.0;\n            if (output2 < epsilon) filter.output2 = 0.0;\n        }\n        if (reset) {\n            for (const filter of filters) {\n                filter.output1 = 0.0;\n                filter.output2 = 0.0;\n            }\n        }\n    }\n\n    public static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\n        while (true) {\n            lastIndex--;\n            const index: number = lastIndex & mask;\n            const sample: number = Math.abs(delayLine[index]);\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\n            delayLine[index] = 0.0;\n        }\n    }\n\n    public static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\n        for (let i: number = 0; i < filterCount; i++) {\n            const filter: DynamicBiquadFilter = filters[i];\n            const output1: number = filter.output1;\n            const output2: number = filter.output2;\n            const a1: number = filter.a1;\n            const a2: number = filter.a2;\n            const b0: number = filter.b0;\n            const b1: number = filter.b1;\n            const b2: number = filter.b2;\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\n            filter.a1 = a1 + filter.a1Delta;\n            filter.a2 = a2 + filter.a2Delta;\n            if (filter.useMultiplicativeInputCoefficients) {\n                filter.b0 = b0 * filter.b0Delta;\n                filter.b1 = b1 * filter.b1Delta;\n                filter.b2 = b2 * filter.b2Delta;\n            } else {\n                filter.b0 = b0 + filter.b0Delta;\n                filter.b1 = b1 + filter.b1Delta;\n                filter.b2 = b2 + filter.b2Delta;\n            }\n            filter.output2 = output1;\n            filter.output1 = sample;\n            // Updating the input values is waste if the next filter doesn't exist...\n            input2 = output2;\n            input1 = output1;\n        }\n        return sample;\n    }\n}\n\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\nexport { Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Change {\n\tprivate _noop: boolean = true;\n\t\t\n\tprotected _didSomething(): void {\n\t\tthis._noop = false;\n\t}\n\t\t\n\tpublic isNoop(): boolean {\n\t\treturn this._noop;\n\t}\n\t\t\n\t\tpublic commit(): void {}\n}\n\nexport class UndoableChange extends Change {\n\tprivate _reversed: boolean;\n\tprivate _doneForwards: boolean;\n\tconstructor(reversed: boolean) {\n\t\tsuper();\n\t\tthis._reversed = reversed;\n\t\tthis._doneForwards = !reversed;\n\t}\n\t\t\n\tpublic undo(): void {\n\t\tif (this._reversed) {\n\t\t\tthis._doForwards();\n\t\t\tthis._doneForwards = true;\n\t\t} else {\n\t\t\tthis._doBackwards();\n\t\t\tthis._doneForwards = false;\n\t\t}\n\t}\n\t\t\n\tpublic redo(): void {\n\t\tif (this._reversed) {\n\t\t\tthis._doBackwards();\n\t\t\tthis._doneForwards = false;\n\t\t} else {\n\t\t\tthis._doForwards();\n\t\t\tthis._doneForwards = true;\n\t\t}\n\t}\n\t\t\n\t// isDoneForwards() returns whether or not the Change was most recently \n\t// performed forwards or backwards. If the change created something, do not \n\t// delete it in the change destructor unless the Change was performed \n\t// backwards: \n\tprotected _isDoneForwards(): boolean {\n\t\treturn this._doneForwards;\n\t}\n\t\t\n\tprotected _doForwards(): void {\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\n\t}\n\t\t\n\tprotected _doBackwards(): void {\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\n\t}\n}\n\nexport class ChangeGroup extends Change {\n\tconstructor() {\n\t\tsuper();\n\t}\n\t\t\n\tpublic append(change: Change): void {\n\t\tif (change.isNoop()) return;\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeSequence extends UndoableChange {\n\tprivate _changes: UndoableChange[];\n\tconstructor(changes?: UndoableChange[]) {\n\t\tsuper(false);\n\t\tif (changes == undefined) {\n\t\t\tthis._changes = [];\n\t\t} else {\n\t\t\tthis._changes = changes.concat();\n\t\t}\n\t}\n\t\t\n\tpublic append(change: UndoableChange): void {\n\t\tif (change.isNoop()) return;\n\t\tthis._changes[this._changes.length] = change;\n\t\tthis._didSomething();\n\t}\n\t\t\n\tprotected _doForwards(): void {\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\n\t\t\tthis._changes[i].redo();\n\t\t}\n\t}\n\t\t\n\tprotected _doBackwards(): void {\n\t\t\tfor (let i: number = this._changes.length-1; i >= 0 ; i--) {\n\t\t\tthis._changes[i].undo();\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Algorithm, Dictionary, FilterType, InstrumentType, EffectType, AutomationTarget, Config, effectsIncludeDistortion } from \"../synth/SynthConfig\";\nimport { NotePin, Note, makeNotePin, Pattern, FilterSettings, FilterControlPoint, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, Synth } from \"../synth/synth\";\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ColorConfig } from \"./ColorConfig\";\n\nexport function patternsContainSameInstruments(pattern1Instruments: number[], pattern2Instruments: number[]): boolean {\n    const pattern2Has1Instruments: boolean = pattern1Instruments.every(instrument => pattern2Instruments.indexOf(instrument) != -1);\n    const pattern1Has2Instruments: boolean = pattern2Instruments.every(instrument => pattern1Instruments.indexOf(instrument) != -1);\n    return pattern2Has1Instruments && pattern1Has2Instruments && pattern2Instruments.length == pattern1Instruments.length;\n}\n\nexport function discardInvalidPatternInstruments(instruments: number[], song: Song, channelIndex: number) {\n    const uniqueInstruments: Set<number> = new Set(instruments);\n    instruments.length = 0;\n    instruments.push(...uniqueInstruments);\n    for (let i: number = 0; i < instruments.length; i++) {\n        if (instruments[i] >= song.channels[channelIndex].instruments.length) {\n            instruments.splice(i, 1);\n            i--;\n        }\n    }\n    if (instruments.length > song.getMaxInstrumentsPerPattern(channelIndex)) {\n        instruments.length = song.getMaxInstrumentsPerPattern(channelIndex);\n    }\n    if (instruments.length <= 0) {\n        instruments[0] = 0;\n    }\n}\n\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\n    for (const note of pattern.notes) {\n        for (const pitch of note.pitches) {\n            for (const pin of note.pins) {\n                const key: number = (pitch + pin.interval) % 12;\n                if (!flags[key]) {\n                    flags[key] = true;\n                }\n            }\n        }\n    }\n}\n\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number, customScaleFlags: ReadonlyArray<boolean>): number[] {\n    const newScaleFlags: ReadonlyArray<boolean> = newScaleValue == Config.scales[\"dictionary\"][\"Custom\"].index ? customScaleFlags : Config.scales[newScaleValue].flags;\n\tconst oldScale: number[] = [];\n\tconst newScale: number[] = [];\n\tfor (let i: number = 0; i < 12; i++) {\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\n\t\tif (newScaleFlags[i]) newScale.push(i);\n\t}\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\n\n    const roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\n    let bestScore: number = Number.MAX_SAFE_INTEGER;\n    let bestIndexMap: number[] = [];\n    const stack: number[][] = [[0]]; // Root always maps to root.\n\n    while (stack.length > 0) {\n        const indexMap: number[] = stack.pop()!;\n\n        if (indexMap.length == smallerScale.length) {\n            // Score this mapping.\n            let score: number = 0;\n            for (let i: number = 0; i < indexMap.length; i++) {\n                score += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\n                if (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\n                    // Penalize changing roles.\n                    score += 0.75;\n                }\n            }\n            if (bestScore > score) {\n                bestScore = score;\n                bestIndexMap = indexMap;\n            }\n        } else {\n            // Recursively choose next indices for mapping.\n            const lowIndex: number = indexMap[indexMap.length - 1] + 1;\n            const highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\n            for (let i: number = lowIndex; i <= highIndex; i++) {\n                stack.push(indexMap.concat(i));\n            }\n        }\n    }\n\n    const sparsePitchMap: number[][] = [];\n    for (let i: number = 0; i < bestIndexMap.length; i++) {\n        const smallerScalePitch = smallerScale[i];\n        const largerScalePitch = largerScale[bestIndexMap[i]];\n        sparsePitchMap[i] = largerToSmaller\n            ? [largerScalePitch, smallerScalePitch]\n            : [smallerScalePitch, largerScalePitch];\n    }\n\n    // To make it easier to wrap around.\n    sparsePitchMap.push([12, 12]);\n    newScale.push(12);\n\n    let sparseIndex: number = 0;\n    const fullPitchMap: number[] = [];\n    for (let i: number = 0; i < 12; i++) {\n        const oldLow: number = sparsePitchMap[sparseIndex][0];\n        const newLow: number = sparsePitchMap[sparseIndex][1];\n        const oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\n        const newHigh: number = sparsePitchMap[sparseIndex + 1][1];\n        if (i == oldHigh - 1) sparseIndex++;\n\n        const transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\n\n        let nearestPitch: number = 0;\n        let nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\n        for (const newPitch of newScale) {\n            let distance: number = Math.abs(newPitch - transformedPitch);\n            if (roles[newPitch] != roles[i]) {\n                // Again, penalize changing roles.\n                distance += 0.1;\n            }\n            if (nearestPitchDistance > distance) {\n                nearestPitchDistance = distance;\n                nearestPitch = newPitch;\n            }\n        }\n\n        fullPitchMap[i] = nearestPitch;\n    }\n\n    return fullPitchMap;\n}\n\nfunction removeRedundantPins(pins: NotePin[]): void {\n    for (let i: number = 1; i < pins.length - 1;) {\n        if (pins[i - 1].interval == pins[i].interval &&\n            pins[i].interval == pins[i + 1].interval &&\n            pins[i - 1].size == pins[i].size &&\n            pins[i].size == pins[i + 1].size) {\n            pins.splice(i, 1);\n        } else {\n            i++;\n        }\n    }\n}\n\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\n    // Create a new note, and interpret the pitch bend and size events\n    // to determine where we need to insert pins to control interval and volume.\n    const newNote: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\n    newNote.pins.length = 0;\n    newNote.pitches.length = 0;\n    const newNoteLength: number = noteEndPart - noteStartPart;\n\n    for (const pitch of oldNote.pitches) {\n        newNote.pitches.push(pitch);\n    }\n\n    for (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\n        const pin: NotePin = oldNote.pins[pinIndex];\n        const newPinTime: number = pin.time + timeOffset;\n        if (newPinTime < 0) {\n            if (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\n            const nextPin: NotePin = oldNote.pins[pinIndex + 1];\n            const nextPinTime: number = nextPin.time + timeOffset;\n            if (nextPinTime > 0) {\n                // Insert an interpolated pin at the start of the new note.\n                const ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\n                newNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.size + ratio * (nextPin.size - pin.size))));\n\n            }\n        } else if (newPinTime <= newNoteLength) {\n            newNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.size));\n        } else {\n            if (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\n            const prevPin: NotePin = oldNote.pins[pinIndex - 1];\n            const prevPinTime: number = prevPin.time + timeOffset;\n            if (prevPinTime < newNoteLength) {\n                // Insert an interpolated pin at the end of the new note.\n                const ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\n                newNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.size + ratio * (pin.size - prevPin.size))));\n            }\n        }\n    }\n    \n    // Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\n    const offsetInterval: number = newNote.pins[0].interval;\n    for (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\n        newNote.pitches[pitchIdx] += offsetInterval;\n    }\n    for (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\n        newNote.pins[pinIdx].interval -= offsetInterval;\n    }\n\n    let joinedWithPrevNote: boolean = false;\n    if (newNote.start == 0) {\n        newNote.continuesLastPattern = (timeOffset < 0 || oldNote.continuesLastPattern);\n    } else {\n        newNote.continuesLastPattern = false;\n        if (newNotes.length > 0 && oldNote.continuesLastPattern) {\n            const prevNote: Note = newNotes[newNotes.length - 1];\n            if (prevNote.end == newNote.start && Synth.adjacentNotesHaveMatchingPitches(prevNote, newNote)) {\n                joinedWithPrevNote = true;\n                const newIntervalOffset: number = prevNote.pins[prevNote.pins.length - 1].interval;\n                const newTimeOffset: number = prevNote.end - prevNote.start;\n                for (let pinIndex: number = 1; pinIndex < newNote.pins.length; pinIndex++) {\n                    const tempPin: NotePin = newNote.pins[pinIndex];\n                    const transformedPin: NotePin = makeNotePin(tempPin.interval + newIntervalOffset, tempPin.time + newTimeOffset, tempPin.size);\n                    prevNote.pins.push(transformedPin);\n                    prevNote.end = prevNote.start + transformedPin.time;\n                }\n                removeRedundantPins(prevNote.pins);\n            }\n        }\n    }\n    if (!joinedWithPrevNote) {\n        newNotes.push(newNote);\n    }\n}\n\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\n    constructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\n        super();\n\n        const pitchChannels: Channel[] = [];\n        const noiseChannels: Channel[] = [];\n        const modChannels: Channel[] = []\n\n        for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            const oldChannel: Channel = doc.song.channels[channelIndex];\n            const newChannel: Channel = new Channel();\n\n            if (channelIndex < doc.song.pitchChannelCount) {\n                pitchChannels.push(newChannel);\n            } else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\n                noiseChannels.push(newChannel);\n            }\n            else {\n                modChannels.push(newChannel);\n            }\n\n            newChannel.muted = oldChannel.muted;\n            newChannel.octave = oldChannel.octave;\n            newChannel.name = oldChannel.name;\n\n            for (const instrument of oldChannel.instruments) {\n                newChannel.instruments.push(instrument);\n            }\n\n            const oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\n            const newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\n            let currentBar: number = -1;\n            let pattern: Pattern | null = null;\n\n            for (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\n                const oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\n                if (oldPattern != null) {\n                    const oldBarStart: number = oldBar * oldPartsPerBar;\n                    for (const oldNote of oldPattern.notes) {\n\n                        const absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\n                        const absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\n\n                        const startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\n                        const endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\n                        for (let bar: number = startBar; bar < endBar; bar++) {\n                            const barStartPart: number = bar * newPartsPerBar;\n                            const noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\n                            const noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\n\n                            if (noteStartPart < noteEndPart) {\n\n                                // Ensure a pattern exists for the current bar before inserting notes into it.\n                                if (currentBar < bar || pattern == null) {\n                                    currentBar++;\n                                    while (currentBar < bar) {\n                                        newChannel.bars[currentBar] = 0;\n                                        currentBar++;\n                                    }\n                                    pattern = new Pattern();\n                                    newChannel.patterns.push(pattern);\n                                    newChannel.bars[currentBar] = newChannel.patterns.length;\n                                    pattern.instruments.length = 0;\n                                    pattern.instruments.push(...oldPattern.instruments);\n                                }\n\n                                // This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\n                                pattern = newChannel.patterns[newChannel.bars[bar] - 1];\n\n                                projectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        removeDuplicatePatterns(pitchChannels);\n        removeDuplicatePatterns(noiseChannels);\n        removeDuplicatePatterns(modChannels);\n        this.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\n    }\n}\n\nclass ChangePins extends UndoableChange {\n    protected _oldStart: number;\n    protected _newStart: number;\n    protected _oldEnd: number;\n    protected _newEnd: number;\n    protected _oldPins: NotePin[];\n    protected _newPins: NotePin[];\n    protected _oldPitches: number[];\n    protected _newPitches: number[];\n    protected _oldContinuesLastPattern: boolean;\n    protected _newContinuesLastPattern: boolean;\n    constructor(protected _doc: SongDocument | null, protected _note: Note) {\n        super(false);\n        this._oldStart = this._note.start;\n        this._oldEnd = this._note.end;\n        this._newStart = this._note.start;\n        this._newEnd = this._note.end;\n        this._oldPins = this._note.pins;\n        this._newPins = [];\n        this._oldPitches = this._note.pitches;\n        this._newPitches = [];\n        this._oldContinuesLastPattern = this._note.continuesLastPattern;\n        this._newContinuesLastPattern = this._note.continuesLastPattern;\n    }\n\n    protected _finishSetup(continuesLastPattern?: boolean): void {\n        for (let i: number = 0; i < this._newPins.length - 1;) {\n            if (this._newPins[i].time >= this._newPins[i + 1].time) {\n                this._newPins.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n\n        removeRedundantPins(this._newPins);\n\n        const firstInterval: number = this._newPins[0].interval;\n        const firstTime: number = this._newPins[0].time;\n        for (let i: number = 0; i < this._oldPitches.length; i++) {\n            this._newPitches[i] = this._oldPitches[i] + firstInterval;\n        }\n        for (let i: number = 0; i < this._newPins.length; i++) {\n            this._newPins[i].interval -= firstInterval;\n            this._newPins[i].time -= firstTime;\n        }\n        this._newStart = this._oldStart + firstTime;\n        this._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\n\n        if (continuesLastPattern != undefined) {\n            this._newContinuesLastPattern = continuesLastPattern;\n        }\n        if (this._newStart != 0) {\n            this._newContinuesLastPattern = false;\n        }\n\n        this._doForwards();\n        this._didSomething();\n    }\n\n    protected _doForwards(): void {\n        this._note.pins = this._newPins;\n        this._note.pitches = this._newPitches;\n        this._note.start = this._newStart;\n        this._note.end = this._newEnd;\n        this._note.continuesLastPattern = this._newContinuesLastPattern;\n        if (this._doc != null) this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._note.pins = this._oldPins;\n        this._note.pitches = this._oldPitches;\n        this._note.start = this._oldStart;\n        this._note.end = this._oldEnd;\n        this._note.continuesLastPattern = this._oldContinuesLastPattern;\n        if (this._doc != null) this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeCustomizeInstrument extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (instrument.preset != instrument.type) {\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeCustomWave extends Change {\n    constructor(doc: SongDocument, newArray: Float32Array) {\n        super();\n        const oldArray: Float32Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\n        var comparisonResult: boolean = true;\n        for (let i: number = 0; i < oldArray.length; i++) {\n            if (oldArray[i] != newArray[i]) {\n                comparisonResult = false;\n                i = oldArray.length;\n            }\n        }\n        if (comparisonResult == false) {\n            let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n            for (let i: number = 0; i < newArray.length; i++) {\n                instrument.customChipWave[i] = newArray[i];\n            }\n\n            let sum: number = 0.0;\n            for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                sum += instrument.customChipWave[i];\n            }\n            const average: number = sum / instrument.customChipWave.length;\n\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n            let cumulative: number = 0;\n            let wavePrev: number = 0;\n            for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                cumulative += wavePrev;\n                wavePrev = instrument.customChipWave[i] - average;\n                instrument.customChipWaveIntegral[i] = cumulative;\n            }\n\n            instrument.customChipWaveIntegral[64] = 0.0;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeCustomAlgorythmorFeedback extends Change {\n    constructor(doc: SongDocument, newArray: number[][], carry: number, mode: string) {\n        super();\n        if (mode == \"algorithm\") {\n            const oldArray: number[][] = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customAlgorithm.modulatedBy;\n            const oldCarriercount: number = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customAlgorithm.carrierCount;\n            var comparisonResult: boolean = true;\n            if (carry != oldCarriercount) {\n                comparisonResult = false;\n            } else {\n                for (let i: number = 0; i < oldArray.length; i++) {\n                    if (oldArray[i].length != newArray[i].length) {\n                        comparisonResult = false;\n                        break;\n                    } else {\n                        for (let j: number = 0; j < oldArray[i].length; j++) {\n                            if (oldArray[i][j] != newArray[i][j]) {\n                                comparisonResult = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            if (comparisonResult == false) {\n                let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\n                instrument.customAlgorithm.set(carry, newArray);\n\n                instrument.algorithm6Op = 0;\n                doc.notifier.changed();\n                this._didSomething();\n            }\n        }else if (mode == \"feedback\") {\n            const oldArray: number[][] = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customFeedbackType.indices;\n            var comparisonResult: boolean = true;\n\t\t\tfor (let i: number = 0; i < oldArray.length; i++) {\n\t\t\t\tif (oldArray[i].length != newArray[i].length) {\n\t\t\t\t\tcomparisonResult = false;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let j: number = 0; j < oldArray[i].length; j++) {\n\t\t\t\t\t\tif (oldArray[i][j] != newArray[i][j]) {\n\t\t\t\t\t\t\tcomparisonResult = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n            \n            if (!comparisonResult) {\n                let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\n                instrument.customFeedbackType.set(newArray);\n\n                instrument.feedbackType6Op = 0;\n                doc.notifier.changed();\n                this._didSomething();\n            }\n        }\n    }\n}\n\nexport class ChangePreset extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.preset;\n        if (oldValue != newValue) {\n            const preset1: Preset | null = EditorConfig.instrumentToPreset(newValue);\n            const preset: Preset | null = preset1 ?? EditorConfig.valueToPreset(newValue);\n            if (preset != null) {\n                if (preset.customType != undefined) {\n                    instrument.type = preset.customType;\n                    if (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].customInterval) {\n                        instrument.chord = 0;\n                    }\n                    instrument.clearInvalidEnvelopeTargets();\n                } else if (preset.settings != undefined) {\n                    const tempVolume: number = instrument.volume;\n                    const tempPan: number = instrument.pan;\n                    const tempPanDelay = instrument.panDelay;\n                    //const usesPanning: boolean = effectsIncludePanning(instrument.effects);\n                    instrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\n                    instrument.volume = tempVolume;\n                    instrument.pan = tempPan;\n                    instrument.panDelay = tempPanDelay;\n                    //@jummbus - Disable this check, pan will be on by default.\n                    //if (usesPanning && instrument.pan != Config.panCenter) {\n                        instrument.effects = (instrument.effects | (1 << EffectType.panning));\n                    //}\n                }\n            }\n            instrument.preset = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeRandomGeneratedInstrument extends Change {\n    constructor(doc: SongDocument) {\n        super();\n\n        interface ItemWeight<T> {\n            readonly item: T;\n            readonly weight: number;\n        }\n        function selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\n            let total: number = 0;\n            for (const entry of entries) {\n                total += entry.weight;\n            }\n            let random: number = Math.random() * total;\n            for (const entry of entries) {\n                random -= entry.weight;\n                if (random <= 0.0) return entry.item;\n            }\n            return entries[(Math.random() * entries.length) | 0].item;\n        }\n        function selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\n            const entries: Array<ItemWeight<number>> = [];\n            for (let i: number = min; i <= max; i++) {\n                entries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\n            }\n            return selectWeightedRandom(entries);\n        }\n\n        class PotentialFilterPoint {\n            constructor(\n                public readonly chance: number,\n                public readonly type: FilterType,\n                public readonly minFreq: number,\n                public readonly maxFreq: number,\n                public readonly centerHz: number,\n                public readonly centerGain: number,\n            ) { };\n        }\n        function applyFilterPoints(filter: FilterSettings, potentialPoints: ReadonlyArray<PotentialFilterPoint>): void {\n            filter.reset();\n            const usedFreqs: number[] = [];\n            for (const potentialPoint of potentialPoints) {\n                if (Math.random() > potentialPoint.chance) continue;\n                const point: FilterControlPoint = new FilterControlPoint();\n                point.type = potentialPoint.type;\n                point.freq = selectCurvedDistribution(potentialPoint.minFreq, potentialPoint.maxFreq, FilterControlPoint.getRoundedSettingValueFromHz(potentialPoint.centerHz), 1.0 / Config.filterFreqStep);\n                point.gain = selectCurvedDistribution(0, Config.filterGainRange - 1, Config.filterGainCenter + potentialPoint.centerGain, 2.0 / Config.filterGainStep);\n                if (point.type == FilterType.peak && point.gain == Config.filterGainCenter) continue; // skip pointless points. :P\n                if (usedFreqs.includes(point.freq)) continue;\n                usedFreqs.push(point.freq);\n                filter.controlPoints[filter.controlPointCount] = point;\n                filter.controlPointCount++;\n            }\n        }\n\n        const isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.effects &= 1 << EffectType.panning; // disable all existing effects except panning.\n        instrument.envelopeCount = 0;\n\n        const midFreq: number = FilterControlPoint.getRoundedSettingValueFromHz(700.0);\n        const maxFreq: number = Config.filterFreqRange - 1;\n        applyFilterPoints(instrument.eqFilter, [\n            new PotentialFilterPoint(0.8, FilterType.lowPass, midFreq, maxFreq, 4000.0, -1),\n            new PotentialFilterPoint(0.4, FilterType.highPass, 0, midFreq - 1, 250.0, -1),\n            new PotentialFilterPoint(0.5, FilterType.peak, 0, maxFreq, 2000.0, 0),\n            new PotentialFilterPoint(0.4, FilterType.peak, 0, maxFreq, 1400.0, 0),\n            new PotentialFilterPoint(0.3, FilterType.peak, 0, maxFreq, 1000.0, 0),\n            new PotentialFilterPoint(0.2, FilterType.peak, 0, maxFreq, 500.0, 0),\n        ]);\n\n\t\tif (isNoise) {\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\n\t\t\t]);\n\t\t\tinstrument.preset = instrument.type = type;\n\n            instrument.fadeIn = (Math.random() < 0.8) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\n            instrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\n\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.transition;\n                instrument.transition = Config.transitions.dictionary[selectWeightedRandom([\n                    { item: \"normal\", weight: 30 },\n                    { item: \"interrupt\", weight: 1 },\n                    { item: \"slide\", weight: 2 },\n                ])].index;\n            }\n            if (Math.random() < 0.2) {\n                instrument.effects |= 1 << EffectType.chord;\n                instrument.chord = Config.chords.dictionary[selectWeightedRandom([\n                    { item: \"strum\", weight: 2 },\n                    { item: \"arpeggio\", weight: 1 },\n                ])].index;\n            }\n            if (Math.random() < 0.1) {\n                instrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 2);\n                if (instrument.pitchShift != Config.pitchShiftCenter) {\n                    instrument.effects |= 1 << EffectType.pitchShift;\n                    instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                        { item: \"flare 1\", weight: 2 },\n                        { item: \"flare 2\", weight: 1 },\n                        { item: \"flare 3\", weight: 1 },\n                        { item: \"twang 1\", weight: 16 },\n                        { item: \"twang 2\", weight: 8 },\n                        { item: \"twang 3\", weight: 4 },\n                        { item: \"tremolo1\", weight: 1 },\n                        { item: \"tremolo2\", weight: 1 },\n                        { item: \"tremolo3\", weight: 1 },\n                        { item: \"decay 1\", weight: 4 },\n                        { item: \"decay 2\", weight: 2 },\n                        { item: \"decay 3\", weight: 1 },\n                    ])].index);\n                }\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.vibrato;\n                instrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n                instrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\n                    { item: \"light\", weight: 2 },\n                    { item: \"delayed\", weight: 2 },\n                    { item: \"heavy\", weight: 1 },\n                    { item: \"shaky\", weight: 2 },\n                ])].index;\n            }\n            if (Math.random() < 0.8) {\n                instrument.effects |= 1 << EffectType.noteFilter;\n                applyFilterPoints(instrument.noteFilter, [\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 8000.0, -1),\n                ]);\n                instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n\t\t\t\t{ item: \"punch\", weight: 4 },\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\n                { item: \"decay 3\", weight: 4 },\n                { item: \"wibble 1\", weight: 2 },\n                { item: \"wibble 2\", weight: 2 },\n                { item: \"wibble 3\", weight: 2 },\n                { item: \"linear 1\", weight: 2 },\n                { item: \"linear 2\", weight: 2 },\n                { item: \"linear 3\", weight: 2 },\n                { item: \"linear-1\", weight: 1 },\n\t\t\t])].index);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.distortion;\n                instrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.bitcrusher;\n                instrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, Config.bitcrusherFreqRange >> 1, 2);\n                instrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.chorus;\n                instrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\n            }\n            if (Math.random() < 0.1) {\n                instrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n                instrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\n                if (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\n                    instrument.effects |= 1 << EffectType.echo;\n                }\n            }\n            if (Math.random() < 0.5) {\n                instrument.effects |= 1 << EffectType.reverb;\n                instrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\n            }\n\n\t\t\tfunction normalize(harmonics: number[]): void {\n\t\t\t\tlet max: number = 0;\n\t\t\t\tfor (const value of harmonics) {\n\t\t\t\t\tif (value > max) max = value;\n\t\t\t\t}\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase InstrumentType.noise: {\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.spectrum: {\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn spectrum;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tlet current: number = 1.0;\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\n\t\t\t\t\t\t\t\tspectrum[i] = current;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn spectrum;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tlet current: number = 1.0;\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn spectrum;\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\n\t\t\t\t\tconst spectrum: number[] = generator();\n\t\t\t\t\tnormalize(spectrum);\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\n\t\t\t\t} break;\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\n\t\t\t}\n\t\t} else {\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\n                { item: InstrumentType.chip, weight: 4 },\n                { item: InstrumentType.pwm, weight: 4 },\n                { item: InstrumentType.harmonics, weight: 5 },\n                { item: InstrumentType.pickedString, weight: 5 },\n                { item: InstrumentType.spectrum, weight: 1 },\n                { item: InstrumentType.fm, weight: 5 },\n\t\t\t\t{ item: InstrumentType.fm6op, weight: 3 },\n\t\t\t]);\n\t\t\tinstrument.preset = instrument.type = type;\n\t\t\t\n            instrument.fadeIn = (Math.random() < 0.5) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\n            instrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\n            if (type == InstrumentType.chip || type == InstrumentType.harmonics || type == InstrumentType.pickedString) {\n                instrument.unison = Config.unisons.dictionary[selectWeightedRandom([\n                    { item: \"none\", weight: 10 },\n                    { item: \"shimmer\", weight: 5 },\n                    { item: \"hum\", weight: 4 },\n                    { item: \"honky tonk\", weight: 3 },\n                    { item: \"dissonant\", weight: 1 },\n                    { item: \"fifth\", weight: 1 },\n                    { item: \"octave\", weight: 2 },\n                    { item: \"bowed\", weight: 2 },\n                    { item: \"piano\", weight: 5 },\n                    { item: \"warbled\", weight: 3 },\n                    { item: \"hecking gosh\", weight: 2 },\n                    // { item: \"custom\", weight: 55 },\n                ])].index;\n                // randomly generated unisons don't work correctly - instead of trying to fix them, just ignore it\n\n                // if (instrument.unison == Config.unisons.length) {\n                //     instrument.unisonVoices = 2;\n                //     instrument.unisonSpread = Math.floor(Math.random() * 12000 - 6000) / 1000;\n                //     instrument.unisonOffset = Math.floor(Math.random() * 12000 - 6000) / 1000;\n                //     instrument.unisonExpression = 1;\n                //     instrument.unisonSign = Math.floor(Math.random() * 2000 - 1000) / 1000;\n                //     // console.log(instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                // } else {\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                // } \n            }\n\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.transition;\n                instrument.transition = Config.transitions.dictionary[selectWeightedRandom([\n                    { item: \"interrupt\", weight: 1 },\n                    { item: \"slide\", weight: 2 },\n                ])].index;\n            }\n            if (Math.random() < 0.2) {\n                instrument.effects |= 1 << EffectType.chord;\n                instrument.chord = Config.chords.dictionary[selectWeightedRandom([\n                    { item: \"strum\", weight: 2 },\n                    { item: \"arpeggio\", weight: 1 },\n                ])].index;\n            }\n            if (Math.random() < 0.05) {\n                instrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 1);\n                if (instrument.pitchShift != Config.pitchShiftCenter) {\n                    instrument.effects |= 1 << EffectType.pitchShift;\n                    instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                        { item: \"flare 1\", weight: 2 },\n                        { item: \"flare 2\", weight: 1 },\n                        { item: \"flare 3\", weight: 1 },\n                        { item: \"twang 1\", weight: 16 },\n                        { item: \"twang 2\", weight: 8 },\n                        { item: \"twang 3\", weight: 4 },\n                        { item: \"decay 1\", weight: 4 },\n                        { item: \"decay 2\", weight: 2 },\n                        { item: \"decay 3\", weight: 1 },\n                        { item: \"linear 1\", weight: 1 },\n                        { item: \"linear 2\", weight: 1 },\n                    ])].index);\n                }\n            }\n            if (Math.random() < 0.25) {\n                instrument.effects |= 1 << EffectType.vibrato;\n                instrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n                instrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\n                    { item: \"light\", weight: 2 },\n                    { item: \"delayed\", weight: 2 },\n                    { item: \"heavy\", weight: 1 },\n                    { item: \"shaky\", weight: 2 },\n                ])].index;\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.distortion;\n                instrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\n            }\n            if (effectsIncludeDistortion(instrument.effects) && Math.random() < 0.8) {\n                instrument.effects |= 1 << EffectType.noteFilter;\n                applyFilterPoints(instrument.noteFilter, [\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 2000.0, -1),\n                    new PotentialFilterPoint(0.9, FilterType.highPass, 0, midFreq - 1, 500.0, -1),\n                    new PotentialFilterPoint(0.4, FilterType.peak, 0, maxFreq, 1400.0, 0),\n                ]);\n            } else if (Math.random() < 0.5) {\n                instrument.effects |= 1 << EffectType.noteFilter;\n                applyFilterPoints(instrument.noteFilter, [\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 8000.0, -1),\n                ]);\n                instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                { item: \"punch\", weight: 6 },\n                { item: \"flare -1\", weight: 1 },\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\n                { item: \"flare 3\", weight: 2 },\n                { item: \"twang -1\", weight: 1 },\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\n                { item: \"twang 3\", weight: 4 },\n                { item: \"swell -1\", weight: 4 },\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\n                { item: \"swell 3\", weight: 1 },\n                { item: \"tremolo0\", weight: 1 },\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\n                { item: \"tremolo6\", weight: 1 },\n                { item: \"decay -1\", weight: 1 },\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\n                { item: \"decay 3\", weight: 2 },\n                { item: \"wibble-1\", weight: 2 },\n                { item: \"wibble 1\", weight: 4 },\n                { item: \"wibble 2\", weight: 4 },\n                { item: \"wibble 3\", weight: 4 },\n                { item: \"linear-2\", weight: 1 },\n                { item: \"linear-1\", weight: 1 },\n                { item: \"linear 1\", weight: 2 },\n                { item: \"linear 2\", weight: 3 },\n                { item: \"linear 3\", weight: 2 },\n                { item: \"rise -2\", weight: 4 },\n                { item: \"rise -1\", weight: 4 },\n                { item: \"rise 1\", weight: 3 },\n                { item: \"rise 2\", weight: 2 },\n                { item: \"rise 3\", weight: 1 },\n\t\t\t])].index);\n\t\t\t}\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.bitcrusher;\n                instrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, 0, 2);\n                instrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.chorus;\n                instrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\n            }\n            if (Math.random() < 0.1) {\n                instrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n                instrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\n                if (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\n                    instrument.effects |= 1 << EffectType.echo;\n                }\n            }\n            if (Math.random() < 0.5) {\n                instrument.effects |= 1 << EffectType.reverb;\n                instrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\n            }\n\t\t\tfunction normalize(harmonics: number[]): void {\n\t\t\t\tlet max: number = 0;\n\t\t\t\tfor (const value of harmonics) {\n\t\t\t\t\tif (value > max) max = value;\n\t\t\t\t}\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase InstrumentType.chip: {\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\n\t\t\t\t\t\t\t\t\t\t\t\t // advloop addition\n                            instrument.isUsingAdvancedLoopControls = false;\n                            instrument.chipWaveLoopStart = 0;\n                            instrument.chipWaveLoopEnd = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                            instrument.chipWaveLoopMode = 0;\n                            instrument.chipWavePlayBackwards = false;\n                            instrument.chipWaveStartOffset = 0;\n                            // advloop addition\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.pwm: {\n                    instrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\n                    instrument.decimalOffset = 0;\n\n                    if (Math.random() < 0.6) {\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                        { item: \"punch\", weight: 6 },\n                        { item: \"flare -1\", weight: 1 },\n                        { item: \"flare 1\", weight: 2 },\n                        { item: \"flare 2\", weight: 4 },\n                        { item: \"flare 3\", weight: 2 },\n                        { item: \"twang -1\", weight: 1 },\n                        { item: \"twang 1\", weight: 2 },\n                        { item: \"twang 2\", weight: 4 },\n                        { item: \"twang 3\", weight: 4 },\n                        { item: \"swell -1\", weight: 4 },\n                        { item: \"swell 1\", weight: 4 },\n                        { item: \"swell 2\", weight: 2 },\n                        { item: \"swell 3\", weight: 1 },\n                        { item: \"tremolo0\", weight: 1 },\n                        { item: \"tremolo1\", weight: 1 },\n                        { item: \"tremolo2\", weight: 1 },\n                        { item: \"tremolo3\", weight: 1 },\n                        { item: \"tremolo4\", weight: 1 },\n                        { item: \"tremolo5\", weight: 1 },\n                        { item: \"tremolo6\", weight: 1 },\n                        { item: \"decay -1\", weight: 1 },\n                        { item: \"decay 1\", weight: 1 },\n                        { item: \"decay 2\", weight: 2 },\n                        { item: \"decay 3\", weight: 2 },\n                        { item: \"wibble-1\", weight: 2 },\n                        { item: \"wibble 1\", weight: 4 },\n                        { item: \"wibble 2\", weight: 4 },\n                        { item: \"wibble 3\", weight: 4 },\n                        { item: \"linear-2\", weight: 1 },\n                        { item: \"linear-1\", weight: 1 },\n                        { item: \"linear 1\", weight: 2 },\n                        { item: \"linear 2\", weight: 3 },\n                        { item: \"linear 3\", weight: 2 },\n                        { item: \"rise -2\", weight: 4 },\n                        { item: \"rise -1\", weight: 4 },\n                        { item: \"rise 1\", weight: 3 },\n                        { item: \"rise 2\", weight: 2 },\n                        { item: \"rise 3\", weight: 1 },\n\t\t\t\t\t])].index);\n\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.pickedString:\n                case InstrumentType.harmonics: {\n                    if (type == InstrumentType.pickedString) {\n                        instrument.stringSustain = (Math.random() * Config.stringSustainRange) | 0;\n                    }\n\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\n\t\t\t\t\t\t\treturn harmonics;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tlet current: number = 1.0;\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\n\t\t\t\t\t\t\t\tharmonics[i] = current;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn harmonics;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(): number[] => {\n\t\t\t\t\t\t\tlet current: number = 1.0;\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn harmonics;\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\n\t\t\t\t\tconst harmonics: number[] = generator();\n\t\t\t\t\tnormalize(harmonics);\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.spectrum: {\n\t\t\t\t\tconst spectrum: number[] = [];\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\n\t\t\t\t\t\tif (isHarmonic) {\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnormalize(spectrum);\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\n\t\t\t\t} break;\n\t\t\t\tcase InstrumentType.fm6op: \n\t\t\t\tcase InstrumentType.fm: {\n\t\t\t\t\tif(type == InstrumentType.fm){\n\t\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\n\t\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tinstrument.algorithm6Op = (Math.random() * (Config.algorithms6Op.length-1)+1) | 0;\n\t\t\t\t\t\tinstrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\n\t\t\t\t\t\tinstrument.feedbackType6Op = (Math.random() * (Config.feedbacks6Op.length-1)+1) | 0;\n\t\t\t\t\t\tinstrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\n\t\t\t\t\t}\n\t\t\t\t\tconst algorithm: Algorithm = type == InstrumentType.fm? Config.algorithms[instrument.algorithm] : Config.algorithms6Op[instrument.algorithm6Op];\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\n                            { item: \"sine\", weight: 10 },\n                            { item: \"triangle\", weight: 6 },\n                            { item: \"pulse width\", weight: 6 },\n                            { item: \"sawtooth\", weight: 3 },\n                            { item: \"ramp\", weight: 3 },\n                            { item: \"trapezoid\", weight: 4 },\n\t\t\t\t{ item: \"rounded\", weight: 1 },\n                        ])].index;\n\t\t\t\t\t\tif (instrument.operators[i].waveform == 2/*\"pulse width\"*/) {\n\t\t\t\t\t\t\tinstrument.operators[i].pulseWidth = selectWeightedRandom([\n\t\t\t\t\t\t\t\t{ item: 0, weight: 3 },\n\t\t\t\t\t\t\t\t{ item: 1, weight: 5 },\n\t\t\t\t\t\t\t\t{ item: 2, weight: 7 },\n\t\t\t\t\t\t\t\t{ item: 3, weight: 10 },\n\t\t\t\t\t\t\t\t{ item: 4, weight: 15 },\n\t\t\t\t\t\t\t\t{ item: 5, weight: 25 }, // 50%\n\t\t\t\t\t\t\t\t{ item: 6, weight: 15 },\n\t\t\t\t\t\t\t\t{ item: 7, weight: 10 },\n\t\t\t\t\t\t\t\t{ item: 8, weight: 7 },\n\t\t\t\t\t\t\t\t{ item: 9, weight: 5 },\n\t\t\t\t\t\t\t\t{ item: 9, weight: 3 },\n\t\t\t\t\t\t\t]);\n                        }\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount + (type == InstrumentType.fm6op? 2 : 0); i++) {\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\n                        if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\n                            instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\n                            { item: \"punch\", weight: 2 },\n                            { item: \"flare -1\", weight: 1 },\n                            { item: \"flare 1\", weight: 2 },\n                            { item: \"flare 2\", weight: 2 },\n                            { item: \"flare 3\", weight: 2 },\n                            { item: \"twang -1\", weight: 1 },\n                            { item: \"twang 1\", weight: 2 },\n                            { item: \"twang 2\", weight: 2 },\n                            { item: \"twang 3\", weight: 2 },\n                            { item: \"swell -1\", weight: 2 },\n                            { item: \"swell 1\", weight: 2 },\n                            { item: \"swell 2\", weight: 2 },\n                            { item: \"swell 3\", weight: 1 },\n                            { item: \"tremolo0\", weight: 1 },\n                            { item: \"tremolo1\", weight: 1 },\n                            { item: \"tremolo2\", weight: 1 },\n                            { item: \"tremolo3\", weight: 1 },\n                            { item: \"tremolo4\", weight: 1 },\n                            { item: \"tremolo5\", weight: 1 },\n                            { item: \"tremolo6\", weight: 1 },\n                            { item: \"decay -1\", weight: 1 },\n                            { item: \"decay 1\", weight: 1 },\n                            { item: \"decay 2\", weight: 2 },\n                            { item: \"decay 3\", weight: 2 },\n                            { item: \"wibble-1\", weight: 2 },\n                            { item: \"wibble 1\", weight: 2 },\n                            { item: \"wibble 2\", weight: 2 },\n                            { item: \"wibble 3\", weight: 2 },\n                            { item: \"linear-2\", weight: 1 },\n                            { item: \"linear-1\", weight: 1 },\n                            { item: \"linear 1\", weight: 2 },\n                            { item: \"linear 2\", weight: 2 },\n                            { item: \"linear 3\", weight: 1 },\n                            { item: \"rise -2\", weight: 2 },\n                            { item: \"rise -1\", weight: 2 },\n                            { item: \"rise 1\", weight: 2 },\n                            { item: \"rise 2\", weight: 2 },\n                            { item: \"rise 3\", weight: 1 },\n\t\t\t\t\t\t])].index);\n\t\t\t\t\t\t}\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\n                            { item: \"sine\", weight: 10 },\n                            { item: \"triangle\", weight: 6 },\n                            { item: \"pulse width\", weight: 6 },\n                            { item: \"sawtooth\", weight: 3 },\n                            { item: \"ramp\", weight: 3 },\n                            { item: \"trapezoid\", weight: 4 },\n\t\t\t\t{ item: \"rounded\", weight: 1 },\n                        ])].index;\n\t\t\t\t\t\tif (instrument.operators[i].waveform == 2) {\n\t\t\t\t\t\t\tinstrument.operators[i].pulseWidth = selectWeightedRandom([\n\t\t\t\t\t\t\t\t{ item: 0, weight: 3 },\n\t\t\t\t\t\t\t\t{ item: 1, weight: 5 },\n\t\t\t\t\t\t\t\t{ item: 2, weight: 7 },\n\t\t\t\t\t\t\t\t{ item: 3, weight: 10 },\n\t\t\t\t\t\t\t\t{ item: 4, weight: 15 },\n\t\t\t\t\t\t\t\t{ item: 5, weight: 25 }, // 50%\n\t\t\t\t\t\t\t\t{ item: 6, weight: 15 },\n\t\t\t\t\t\t\t\t{ item: 7, weight: 10 },\n\t\t\t\t\t\t\t\t{ item: 8, weight: 7 },\n\t\t\t\t\t\t\t\t{ item: 9, weight: 5 },\n\t\t\t\t\t\t\t\t{ item: 9, weight: 3 },\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\n                    if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                        { item: \"steady\", weight: 4 },\n                        { item: \"punch\", weight: 2 },\n                        { item: \"flare -1\", weight: 1 },\n                        { item: \"flare 1\", weight: 2 },\n                        { item: \"flare 2\", weight: 2 },\n                        { item: \"flare 3\", weight: 2 },\n                        { item: \"twang -1\", weight: 1 },\n                        { item: \"twang 1\", weight: 2 },\n                        { item: \"twang 2\", weight: 2 },\n                        { item: \"twang 3\", weight: 2 },\n                        { item: \"swell -1\", weight: 2 },\n                        { item: \"swell 1\", weight: 2 },\n                        { item: \"swell 2\", weight: 2 },\n                        { item: \"swell 3\", weight: 1 },\n                        { item: \"tremolo0\", weight: 1 },\n                        { item: \"tremolo1\", weight: 1 },\n                        { item: \"tremolo2\", weight: 1 },\n                        { item: \"tremolo3\", weight: 1 },\n                        { item: \"tremolo4\", weight: 1 },\n                        { item: \"tremolo5\", weight: 1 },\n                        { item: \"tremolo6\", weight: 1 },\n                        { item: \"decay -1\", weight: 1 },\n                        { item: \"decay 1\", weight: 1 },\n                        { item: \"decay 2\", weight: 2 },\n                        { item: \"decay 3\", weight: 2 },\n                        { item: \"wibble-1\", weight: 2 },\n                        { item: \"wibble 1\", weight: 2 },\n                        { item: \"wibble 2\", weight: 2 },\n                        { item: \"wibble 3\", weight: 2 },\n                        { item: \"linear-2\", weight: 1 },\n                        { item: \"linear-1\", weight: 1 },\n                        { item: \"linear 1\", weight: 2 },\n                        { item: \"linear 2\", weight: 2 },\n                        { item: \"linear 3\", weight: 1 },\n                        { item: \"rise -2\", weight: 2 },\n                        { item: \"rise -1\", weight: 2 },\n                        { item: \"rise 1\", weight: 2 },\n                        { item: \"rise 2\", weight: 2 },\n                        { item: \"rise 3\", weight: 1 },\n\t\t\t\t\t])].index);\n\t\t\t\t\t}\n\t\t\t\t} break;\n                default: throw new Error(\"Unhandled pitched instrument type in random generator.\");\n            }\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeTransition extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.transition;\n        if (oldValue != newValue) {\n            this._didSomething();\n            instrument.transition = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangeToggleEffects extends Change {\n    constructor(doc: SongDocument, toggleFlag: number, useInstrument: Instrument | null) {\n        super();\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (useInstrument != null)\n            instrument = useInstrument;\n        const oldValue: number = instrument.effects;\n        const wasSelected: boolean = ((oldValue & (1 << toggleFlag)) != 0);\n        const newValue: number = wasSelected ? (oldValue & (~(1 << toggleFlag))) : (oldValue | (1 << toggleFlag));\n        instrument.effects = newValue;\n        // As a special case, toggling the panning effect doesn't remove the preset.\n        if (toggleFlag != EffectType.panning) instrument.preset = instrument.type;\n        if (wasSelected) instrument.clearInvalidEnvelopeTargets();\n        this._didSomething();\n        doc.notifier.changed();\n    }\n}\n\n\nexport class ChangePatternNumbers extends Change {\n    constructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\n        super();\n        if (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\n\n        for (let bar: number = startBar; bar < startBar + width; bar++) {\n            for (let channelIndex: number = startChannel; channelIndex < startChannel + height; channelIndex++) {\n                if (doc.song.channels[channelIndex].bars[bar] != value) {\n                    doc.song.channels[channelIndex].bars[bar] = value;\n                    this._didSomething();\n                }\n            }\n        }\n\n        //Make mod channels shift viewed instrument over when pattern numbers change\n        if (startChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\n            const pattern: Pattern | null = doc.getCurrentPattern();\n            if (pattern != null) {\n                doc.viewedInstrument[startChannel] = pattern.instruments[0];\n            }\n            else {\n                doc.viewedInstrument[startChannel] = 0;\n            }\n        }\n\n        doc.notifier.changed();\n    }\n}\n\nexport class ChangeBarCount extends Change {\n    constructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\n        super();\n        if (doc.song.barCount != newValue) {\n            for (const channel of doc.song.channels) {\n                if (atBeginning) {\n                    while (channel.bars.length < newValue) {\n                        channel.bars.unshift(0);\n                    }\n                    if (doc.song.barCount > newValue) {\n                        channel.bars.splice(0, doc.song.barCount - newValue);\n                    }\n                } else {\n                    while (channel.bars.length < newValue) {\n                        channel.bars.push(0);\n                    }\n                    channel.bars.length = newValue;\n                }\n            }\n\n            if (atBeginning) {\n                const diff: number = newValue - doc.song.barCount;\n                doc.bar = Math.max(0, doc.bar + diff);\n                if (diff < 0 || doc.barScrollPos > 0) {\n                    doc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\n                }\n                doc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\n            }\n            doc.bar = Math.min(doc.bar, newValue - 1);\n            doc.song.loopLength = Math.min(newValue, doc.song.loopLength);\n            doc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\n            doc.song.barCount = newValue;\n            doc.notifier.changed();\n\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeInsertBars extends Change {\n    constructor(doc: SongDocument, start: number, count: number) {\n        super();\n\n        const newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\n        count = newLength - doc.song.barCount;\n        if (count == 0) return;\n\n        for (const channel of doc.song.channels) {\n            while (channel.bars.length < newLength) {\n                channel.bars.splice(start, 0, 0);\n            }\n        }\n        doc.song.barCount = newLength;\n\n        doc.bar += count;\n        doc.barScrollPos += count;\n        if (doc.song.loopStart >= start) {\n            doc.song.loopStart += count;\n        } else if (doc.song.loopStart + doc.song.loopLength >= start) {\n            doc.song.loopLength += count;\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeDeleteBars extends Change {\n    constructor(doc: SongDocument, start: number, count: number) {\n        super();\n\n        for (const channel of doc.song.channels) {\n            channel.bars.splice(start, count);\n            if (channel.bars.length == 0) channel.bars.push(0);\n        }\n        doc.song.barCount = Math.max(1, doc.song.barCount - count);\n\n        doc.bar = Math.max(0, doc.bar - count);\n\n        doc.barScrollPos = Math.max(0, doc.barScrollPos - count);\n        if (doc.song.loopStart >= start) {\n            doc.song.loopStart = Math.max(0, doc.song.loopStart - count);\n        } else if (doc.song.loopStart + doc.song.loopLength > start) {\n            doc.song.loopLength -= count;\n        }\n        doc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeLimiterSettings extends Change {\n    constructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\n        super();\n\n        // This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\n        //if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\n\n        doc.song.limitRatio = limitRatio;\n        doc.song.compressionRatio = compressionRatio;\n        doc.song.limitThreshold = limitThreshold;\n        doc.song.compressionThreshold = compressionThreshold;\n        doc.song.limitRise = limitRise;\n        doc.song.limitDecay = limitDecay;\n        doc.song.masterGain = masterGain;\n\n        doc.notifier.changed();\n        this._didSomething();\n        //}\n    }\n}\n\nexport class ChangeChannelOrder extends Change {\n    constructor(doc: SongDocument, selectionMin: number, selectionMax: number, offset: number) {\n        super();\n        // Change the order of two channels by swapping.\n        doc.song.channels.splice(selectionMin + offset, 0, ...doc.song.channels.splice(selectionMin, selectionMax - selectionMin + 1));\n\n        // Update mods for each channel\n        selectionMax = Math.max(selectionMax, selectionMin);\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\n                let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\n                for (let i: number = 0; i < Config.modCount; i++) {\n                    if (instrument.modChannels[i] >= selectionMin && instrument.modChannels[i] <= selectionMax) {\n                        instrument.modChannels[i] += offset;\n                    }\n                    else if (instrument.modChannels[i] >= selectionMin + offset && instrument.modChannels[i] <= selectionMax + offset) {\n                        instrument.modChannels[i] -= offset * (selectionMax - selectionMin + 1);\n                    }\n                }\n            }\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n\n    }\n}\n\nexport class ChangeCustomScale extends Change {\n    constructor(doc: SongDocument, flags: boolean[]) {\n        super();\n\n        for (let i: number = 0; i < Config.pitchesPerOctave; i++) {\n            doc.song.scaleCustom[i] = flags[i];\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeChannelCount extends Change {\n    constructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\n        super();\n        if (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\n            const newChannels: Channel[] = [];\n\n            function changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\n                for (let i: number = 0; i < newCount; i++) {\n                    const channelIndex = i + newStart;\n                    const oldChannel = i + oldStart;\n                    if (i < oldCount) {\n                        newChannels[channelIndex] = doc.song.channels[oldChannel];\n                    } else {\n                        newChannels[channelIndex] = new Channel();\n                        newChannels[channelIndex].octave = octave;\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) {\n                            const instrument: Instrument = new Instrument(isNoise, isMod);\n                            if (!isMod) {\n                                const presetValue: number = pickRandomPresetValue(isNoise);\n                                const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n                                instrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\n                                instrument.preset = presetValue;\n                            } else {\n                                instrument.setTypeAndReset(InstrumentType.mod, isNoise, isMod);\n                            }\n                            newChannels[channelIndex].instruments[j] = instrument;\n                        }\n                        for (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\n                            newChannels[channelIndex].patterns[j] = new Pattern();\n                        }\n                        for (let j: number = 0; j < doc.song.barCount; j++) {\n                            newChannels[channelIndex].bars[j] = 0;\n                        }\n                    }\n                }\n            }\n\n            changeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 3, false, false);\n            changeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\n            changeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\n\n            let oldPitchCount: number = doc.song.pitchChannelCount;\n            doc.song.pitchChannelCount = newPitchChannelCount;\n            doc.song.noiseChannelCount = newNoiseChannelCount;\n            doc.song.modChannelCount = newModChannelCount;\n\n            for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n                doc.song.channels[channelIndex] = newChannels[channelIndex];\n            }\n            doc.song.channels.length = doc.song.getChannelCount();\n\n            doc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\n\n            // Determine if any mod instruments now refer to an invalid channel. Unset them if so\n            for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n                for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n                        let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\n                        let modChannel: number = instrument.modChannels[mod];\n\n                        // Boundary checking\n                        if ((modChannel >= doc.song.pitchChannelCount && modChannel < oldPitchCount) || modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\n                            instrument.modulators[mod] = Config.modulators.dictionary[\"none\"].index;\n                        }\n\n                        // Bump indices - new pitch channel added, bump all noise mods.\n                        if (modChannel >= oldPitchCount && oldPitchCount < newPitchChannelCount) {\n                            instrument.modChannels[mod] += newPitchChannelCount - oldPitchCount;\n                        }\n                    }\n                }\n            }\n\n            doc.notifier.changed();\n\n            ColorConfig.resetColors();\n\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeAddChannel extends ChangeGroup {\n\tconstructor(doc: SongDocument, index: number, isNoise: boolean, isMod: boolean) {\n\t\tsuper();\n\t\tconst newPitchChannelCount: number = doc.song.pitchChannelCount + (isNoise || isMod ? 0 : 1);\n        const newNoiseChannelCount: number = doc.song.noiseChannelCount + (!isNoise || isMod ? 0 : 1);\n        const newModChannelCount: number = doc.song.modChannelCount + (isNoise || !isMod ? 0 : 1);\n\n        if (newPitchChannelCount <= Config.pitchChannelCountMax && newNoiseChannelCount <= Config.noiseChannelCountMax && newModChannelCount <= Config.modChannelCountMax) {\n            const addedChannelIndex: number = isNoise ? doc.song.pitchChannelCount + doc.song.noiseChannelCount : doc.song.pitchChannelCount;\n            this.append(new ChangeChannelCount(doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\n            if (addedChannelIndex - 1 >= index) {\n                this.append(new ChangeChannelOrder(doc, index, addedChannelIndex - 1, 1));\n            }\n\n            doc.synth.computeLatestModValues();\n            doc.recalcChannelNames = true;\n\t\t}\n\t}\n}\n\nexport class ChangeRemoveChannel extends ChangeGroup {\n\tconstructor(doc: SongDocument, minIndex: number, maxIndex: number) {\n        super();\n\n        const oldMax: number = maxIndex;\n\n        // Update modulators - if a higher index was removed, shift down\n        for (let modChannel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; modChannel < doc.song.channels.length; modChannel++) {\n            for (let instrumentIndex: number = 0; instrumentIndex < doc.song.channels[modChannel].instruments.length; instrumentIndex++) {\n                const modInstrument: Instrument = doc.song.channels[modChannel].instruments[instrumentIndex];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    if (modInstrument.modChannels[mod] >= minIndex && modInstrument.modChannels[mod] <= oldMax) {\n                        this.append(new ChangeModChannel(doc, mod, 0, modInstrument));\n                    }\n                    else if (modInstrument.modChannels[mod] > oldMax) {\n                        this.append(new ChangeModChannel(doc, mod, modInstrument.modChannels[mod] - (oldMax - minIndex + 1) + 2, modInstrument));\n                    }\n                }\n            }\n        }\n\n\t\twhile (maxIndex >= minIndex) {\n            const isNoise: boolean = doc.song.getChannelIsNoise(maxIndex);\n            const isMod: boolean = doc.song.getChannelIsMod(maxIndex);\n\t\t\tdoc.song.channels.splice(maxIndex, 1);\n            if (isNoise) {\n                doc.song.noiseChannelCount--;\n            } else if (isMod) {\n                doc.song.modChannelCount--;\n            } else {\n\t\t\t\tdoc.song.pitchChannelCount--;\n\t\t\t}\n            maxIndex--;\n\t\t}\n\t\t\n        if (doc.song.pitchChannelCount < Config.pitchChannelCountMin) {\n            this.append(new ChangeChannelCount(doc, Config.pitchChannelCountMin, doc.song.noiseChannelCount, doc.song.modChannelCount));\n        }\n\n        ColorConfig.resetColors();\n        doc.recalcChannelNames = true;\n\n\t\tthis.append(new ChangeChannelBar(doc, Math.max(0, minIndex - 1), doc.bar));\n\n        doc.synth.computeLatestModValues();\n\n\t\tthis._didSomething();\n\t\tdoc.notifier.changed();\n\t}\n}\n\nexport class ChangeChannelBar extends Change {\n    constructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\n        super();\n        const oldChannel: number = doc.channel;\n        const oldBar: number = doc.bar;\n        doc.channel = newChannel;\n        doc.bar = newBar;\n        if (!silently) {\n            doc.selection.scrollToSelectedPattern();\n        }\n        // Mod channels always jump to viewing the active instrument for the mod.\n        if (doc.song.getChannelIsMod(doc.channel)) {\n            const pattern: Pattern | null = doc.song!.getPattern(doc.channel, doc.bar);\n            if (pattern != null)\n                doc.viewedInstrument[doc.channel] = pattern.instruments[0];\n        }\n        doc.notifier.changed();\n        if (oldChannel != newChannel || oldBar != newBar) {\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeUnison extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.unison;\n        if (oldValue != newValue) {\n            instrument.unison = newValue;\n            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n            instrument.unisonSign = Config.unisons[instrument.unison].sign;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeUnisonVoices extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevUnison: number = instrument.unison;\n        if (oldValue != newValue || prevUnison != Config.unisons.length) {            \n            instrument.unisonVoices = newValue;\n            instrument.unison = Config.unisons.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeUnisonSpread extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevUnison: number = instrument.unison;\n        if (oldValue != newValue || prevUnison != Config.unisons.length) {\n            instrument.unisonSpread = newValue;\n            instrument.unison = Config.unisons.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeUnisonOffset extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevUnison: number = instrument.unison;\n        if (oldValue != newValue || prevUnison != Config.unisons.length) {\n            instrument.unisonOffset = newValue;\n            instrument.unison = Config.unisons.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeUnisonExpression extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevUnison: number = instrument.unison;\n        if (oldValue != newValue || prevUnison != Config.unisons.length) {\n            instrument.unisonExpression = newValue;\n            instrument.unison = Config.unisons.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeUnisonSign extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevUnison: number = instrument.unison;\n        if (oldValue != newValue || prevUnison != Config.unisons.length) {\n            instrument.unisonSign = newValue;\n            instrument.unison = Config.unisons.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeChord extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.chord;\n        if (oldValue != newValue) {\n            this._didSomething();\n            instrument.chord = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangeVibrato extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.vibrato;\n        if (oldValue != newValue) {\n            instrument.vibrato = newValue;\n            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n            instrument.vibratoSpeed = 10; // default\n            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeVibratoDepth extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevVibrato: number = instrument.vibrato;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato depth\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\n            instrument.vibratoDepth = newValue / 25;\n            instrument.vibrato = Config.vibratos.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeVibratoSpeed extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevVibrato: number = instrument.vibrato;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato speed\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\n            instrument.vibratoSpeed = newValue;\n            instrument.vibrato = Config.vibratos.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeVibratoDelay extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevVibrato: number = instrument.vibrato;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato delay\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\n            instrument.vibratoDelay = newValue;\n            instrument.vibrato = Config.vibratos.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeVibratoType extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.vibratoType;\n        let prevVibrato: number = instrument.vibrato;\n\n        doc.notifier.changed();\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\n            instrument.vibratoType = newValue;\n            instrument.vibrato = Config.vibratos.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeArpeggioSpeed extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.arpeggioSpeed = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"arp speed\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeFastTwoNoteArp extends Change {\n    constructor(doc: SongDocument, newValue: boolean) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue = instrument.fastTwoNoteArp;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            instrument.fastTwoNoteArp = newValue;\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeClicklessTransition extends Change {\n    constructor(doc: SongDocument, newValue: boolean) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue = instrument.clicklessTransition;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            instrument.clicklessTransition = newValue;\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeAliasing extends Change {\n    constructor(doc: SongDocument, newValue: boolean) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue = instrument.aliases;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            instrument.aliases = newValue;\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeSpectrum extends Change {\n    constructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\n        super();\n        spectrumWave.markCustomWaveDirty();\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeHarmonics extends Change {\n    constructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\n        super();\n        harmonicsWave.markCustomWaveDirty();\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeDrumsetEnvelope extends Change {\n    constructor(doc: SongDocument, drumIndex: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.drumsetEnvelopes[drumIndex];\n        if (oldValue != newValue) {\n            instrument.drumsetEnvelopes[drumIndex] = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nclass ChangeInstrumentSlider extends Change {\n    protected _instrument: Instrument;\n    constructor(private _doc: SongDocument) {\n        super();\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n    }\n\n    public commit(): void {\n        if (!this.isNoop()) {\n            this._instrument.preset = this._instrument.type;\n            this._doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.pulseWidth = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"pulse width\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeDecimalOffset extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.decimalOffset = newValue;\n        // doc.synth.unsetMod(Config.modulators.dictionary[\"decimalOffset\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangePitchShift extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.pitchShift = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeDetune extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.detune = newValue + Config.detuneCenter;\n        doc.notifier.changed();\n        doc.synth.unsetMod(Config.modulators.dictionary[\"detune\"].index, doc.channel, doc.getCurrentInstrument());\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeDistortion extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.distortion = newValue;\n        doc.notifier.changed();\n        doc.synth.unsetMod(Config.modulators.dictionary[\"distortion\"].index, doc.channel, doc.getCurrentInstrument());\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeBitcrusherFreq extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.bitcrusherFreq = newValue;\n        //doc.synth.unsetMod(Config.modulators.dictionary[\"bit crush\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeBitcrusherQuantization extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        //doc.synth.unsetMod(Config.modulators.dictionary[\"freq crush\"].index, doc.channel, doc.getCurrentInstrument());\n        this._instrument.bitcrusherQuantization = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeStringSustain extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.stringSustain = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"sustain\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeEQFilterType extends Change {\n    constructor(doc: SongDocument, instrument: Instrument, newValue: boolean) {\n        super();\n        instrument.eqFilterType = newValue;\n        if (newValue == true) { // To Simple - clear eq filter\n            instrument.eqFilter.reset();\n            instrument.tmpEqFilterStart = instrument.eqFilter;\n            instrument.tmpEqFilterEnd = null;\n        }\n        else {\n            // To Advanced - convert filter\n            instrument.eqFilter.convertLegacySettings(instrument.eqFilterSimpleCut, instrument.eqFilterSimplePeak, Config.envelopes.dictionary[\"none\"]);\n            instrument.tmpEqFilterStart = instrument.eqFilter;\n            instrument.tmpEqFilterEnd = null;\n        }\n        instrument.clearInvalidEnvelopeTargets();\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeNoteFilterType extends Change {\n    constructor(doc: SongDocument, instrument: Instrument, newValue: boolean) {\n        super();\n        instrument.noteFilterType = newValue;\n        if (newValue == true) { // To Simple - clear note filter, kill modulators\n            instrument.noteFilter.reset();\n            instrument.tmpNoteFilterStart = instrument.noteFilter;\n            instrument.tmpNoteFilterEnd = null;\n        }\n        else {\n            // To Advanced - convert filter, kill modulators\n            instrument.noteFilter.convertLegacySettings(instrument.noteFilterSimpleCut, instrument.noteFilterSimplePeak, Config.envelopes.dictionary[\"none\"]);\n            instrument.tmpNoteFilterStart = instrument.noteFilter;\n            instrument.tmpNoteFilterEnd = null;\n        }\n        instrument.clearInvalidEnvelopeTargets();\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeEQFilterSimpleCut extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.eqFilterSimpleCut = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"eq filt cut\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeEQFilterSimplePeak extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.eqFilterSimplePeak = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"eq filt peak\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeNoteFilterSimpleCut extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.noteFilterSimpleCut = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"note filt cut\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeNoteFilterSimplePeak extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.noteFilterSimplePeak = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"note filt peak\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeFilterAddPoint extends UndoableChange {\n    private _doc: SongDocument;\n    private _instrument: Instrument;\n    private _instrumentPrevPreset: number;\n    private _instrumentNextPreset: number;\n    private _filterSettings: FilterSettings;\n    private _point: FilterControlPoint;\n    private _index: number;\n    private _envelopeTargetsAdd: number[] = [];\n    private _envelopeIndicesAdd: number[] = [];\n    private _envelopeTargetsRemove: number[] = [];\n    private _envelopeIndicesRemove: number[] = [];\n    constructor(doc: SongDocument, filterSettings: FilterSettings, point: FilterControlPoint, index: number, isNoteFilter: boolean, deletion: boolean = false) {\n        super(deletion);\n        this._doc = doc;\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        this._instrumentNextPreset = deletion ? this._instrument.preset : this._instrument.type;\n        this._instrumentPrevPreset = deletion ? this._instrument.type : this._instrument.preset;\n        this._filterSettings = filterSettings;\n        this._point = point;\n        this._index = index;\n\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n            let target: number = this._instrument.envelopes[envelopeIndex].target;\n            let targetIndex: number = this._instrument.envelopes[envelopeIndex].index;\n            this._envelopeTargetsAdd.push(target);\n            this._envelopeIndicesAdd.push(targetIndex);\n            if (deletion) {\n                // When deleting a filter control point, find all envelopes that targeted that\n                // point and clear them, and all envelopes that targeted later points and\n                // decrement those to keep them in sync with the new list of points.\n                const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\n                if (automationTarget.isFilter && (automationTarget.effect == EffectType.noteFilter) == isNoteFilter) {\n                    if (automationTarget.maxCount == Config.filterMaxPoints) {\n                        if (targetIndex == index) {\n                            target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                            targetIndex = 0;\n                        } else if (targetIndex > index) {\n                            targetIndex--;\n                        }\n                    } else {\n                        if (filterSettings.controlPointCount <= 1) {\n                            target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                            targetIndex = 0;\n                        }\n                    }\n                }\n            }\n            this._envelopeTargetsRemove.push(target);\n            this._envelopeIndicesRemove.push(targetIndex);\n        }\n\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._filterSettings.controlPoints.splice(this._index, 0, this._point);\n        this._filterSettings.controlPointCount++;\n        this._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\n        this._instrument.preset = this._instrumentNextPreset;\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n            this._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsAdd[envelopeIndex];\n            this._instrument.envelopes[envelopeIndex].index = this._envelopeIndicesAdd[envelopeIndex];\n        }\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n        this._instrument.tmpEqFilterEnd = null;\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n        this._instrument.tmpNoteFilterEnd = null;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._filterSettings.controlPoints.splice(this._index, 1);\n        this._filterSettings.controlPointCount--;\n        this._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\n        this._instrument.preset = this._instrumentPrevPreset;\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n            this._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsRemove[envelopeIndex];\n            this._instrument.envelopes[envelopeIndex].index = this._envelopeIndicesRemove[envelopeIndex];\n        }\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n        this._instrument.tmpEqFilterEnd = null;\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n        this._instrument.tmpNoteFilterEnd = null;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeFilterMovePoint extends UndoableChange {\n    private _doc: SongDocument;\n    private _instrument: Instrument;\n    private _instrumentPrevPreset: number;\n    private _instrumentNextPreset: number;\n    private _point: FilterControlPoint;\n    private _oldFreq: number;\n    private _newFreq: number;\n    private _oldGain: number;\n    private _newGain: number;\n    constructor(doc: SongDocument, point: FilterControlPoint, oldFreq: number, newFreq: number, oldGain: number, newGain: number) {\n        super(false);\n        this._doc = doc;\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        this._instrumentNextPreset = this._instrument.type;\n        this._instrumentPrevPreset = this._instrument.preset;\n        this._point = point;\n        this._oldFreq = oldFreq;\n        this._newFreq = newFreq;\n        this._oldGain = oldGain;\n        this._newGain = newGain;\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._point.freq = this._newFreq;\n        this._point.gain = this._newGain;\n        this._instrument.preset = this._instrumentNextPreset;\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n        this._instrument.tmpEqFilterEnd = null;\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n        this._instrument.tmpNoteFilterEnd = null;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._point.freq = this._oldFreq;\n        this._point.gain = this._oldGain;\n        this._instrument.preset = this._instrumentPrevPreset;\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n        this._instrument.tmpEqFilterEnd = null;\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n        this._instrument.tmpNoteFilterEnd = null;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeFilterSettings extends UndoableChange {\n    private _doc: SongDocument;\n    private _instrument: Instrument;\n    private _instrumentPrevPreset: number;\n    private _instrumentNextPreset: number;\n    private _filterSettings: FilterSettings;\n    private _subFilters: (FilterSettings | null)[];\n    private _oldSubFilters: (FilterSettings | null)[];\n    private _oldSettings: FilterSettings;\n    private _useNoteFilter: boolean;\n    constructor(doc: SongDocument, settings: FilterSettings, oldSettings: FilterSettings, useNoteFilter: boolean, subFilters: (FilterSettings | null)[] | null = null, oldSubFilters: (FilterSettings | null)[] | null = null) {\n        super(false);\n        this._doc = doc;\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        this._instrumentNextPreset = this._instrument.type;\n        this._instrumentPrevPreset = this._instrument.preset;\n        this._oldSettings = oldSettings;\n        this._useNoteFilter = useNoteFilter;\n        this._filterSettings = settings;\n        if (subFilters != null && oldSubFilters != null) {\n            this._subFilters = subFilters;\n            this._oldSubFilters = oldSubFilters;\n        }\n        this._instrument.clearInvalidEnvelopeTargets();\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n\n        if (this._useNoteFilter) {\n            this._instrument.noteFilter = this._filterSettings;\n            if (this._subFilters != null)\n                this._instrument.noteSubFilters = this._subFilters;\n            this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n            this._instrument.tmpNoteFilterEnd = null;\n        } else {\n            this._instrument.eqFilter = this._filterSettings;\n            if (this._subFilters != null)\n                this._instrument.eqSubFilters = this._subFilters;\n            this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n            this._instrument.tmpEqFilterEnd = null;\n        }\n\n        this._instrument.preset = this._instrumentNextPreset;\n        this._instrument.clearInvalidEnvelopeTargets();\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        if (this._useNoteFilter) {\n            this._instrument.noteFilter = this._oldSettings;\n            if (this._oldSubFilters != null)\n                this._instrument.noteSubFilters = this._oldSubFilters;\n            this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n            this._instrument.tmpNoteFilterEnd = null;\n        } else {\n            this._instrument.eqFilter = this._oldSettings;\n            if (this._oldSubFilters != null)\n                this._instrument.eqSubFilters = this._oldSubFilters;\n            this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n            this._instrument.tmpEqFilterEnd = null;\n        }\n        this._instrument.preset = this._instrumentPrevPreset;\n        this._instrument.clearInvalidEnvelopeTargets();\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeFadeInOut extends UndoableChange {\n    private _doc: SongDocument;\n    private _instrument: Instrument;\n    private _instrumentPrevPreset: number;\n    private _instrumentNextPreset: number;\n    private _oldFadeIn: number;\n    private _oldFadeOut: number;\n    private _newFadeIn: number;\n    private _newFadeOut: number;\n    constructor(doc: SongDocument, fadeIn: number, fadeOut: number) {\n        super(false);\n        this._doc = doc;\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        this._instrumentNextPreset = this._instrument.type;\n        this._instrumentPrevPreset = this._instrument.preset;\n        this._oldFadeIn = this._instrument.fadeIn;\n        this._oldFadeOut = this._instrument.fadeOut;\n        this._newFadeIn = fadeIn;\n        this._newFadeOut = fadeOut;\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._instrument.fadeIn = this._newFadeIn;\n        this._instrument.fadeOut = this._newFadeOut;\n        this._instrument.preset = this._instrumentNextPreset;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._instrument.fadeIn = this._oldFadeIn;\n        this._instrument.fadeOut = this._oldFadeOut;\n        this._instrument.preset = this._instrumentPrevPreset;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeAlgorithm extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.algorithm;\n        if (oldValue != newValue) {\n            instrument.algorithm = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeFeedbackType extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.feedbackType;\n        if (oldValue != newValue) {\n            instrument.feedbackType = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\n\nexport class Change6OpAlgorithm extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.algorithm6Op;\n        if (oldValue != newValue) {\n            instrument.algorithm6Op = newValue;\n            if (newValue != 0) {\n                instrument.customAlgorithm.fromPreset(newValue);\n            }\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class Change6OpFeedbackType extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.feedbackType6Op;\n        if (oldValue != newValue) {\n            instrument.feedbackType6Op = newValue;\n            if (newValue != 0) {\n                instrument.customFeedbackType.fromPreset(newValue);\n            }\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeOperatorWaveform extends Change {\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.operators[operatorIndex].waveform;\n        if (oldValue != newValue) {\n            instrument.operators[operatorIndex].waveform = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeOperatorPulseWidth extends Change {\n    constructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.operators[operatorIndex].pulseWidth = newValue;\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeOperatorFrequency extends Change {\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.operators[operatorIndex].frequency;\n        if (oldValue != newValue) {\n            instrument.operators[operatorIndex].frequency = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.operators[operatorIndex].amplitude = newValue;\n        // Not used currently as mod is implemented as multiplicative\n        //doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.feedbackAmplitude = newValue;\n        // Not used currently as mod is implemented as multiplicative\n        //doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeAddChannelInstrument extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const channel: Channel = doc.song.channels[doc.channel];\n        const isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\n        const isMod: boolean = doc.song.getChannelIsMod(doc.channel);\n        const maxInstruments: number = doc.song.getMaxInstrumentsPerChannel();\n        if (channel.instruments.length >= maxInstruments) return;\n        const presetValue: number = pickRandomPresetValue(isNoise);\n        const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n        const instrument: Instrument = new Instrument(isNoise, isMod);\n        instrument.fromJsonObject(preset.settings, isNoise, isMod, false, false, 1);\n        instrument.preset = presetValue;\n        instrument.volume = 0;\n        channel.instruments.push(instrument);\n        if (!isMod) { // Mod channels lose information when changing set instrument\n            doc.viewedInstrument[doc.channel] = channel.instruments.length - 1;\n        }\n\n        // Determine if any mod instruments were setting 'all' or 'active'. If so, bump indices since there is now a new instrument in the list.\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            for (let instrumentIndex: number = 0; instrumentIndex < doc.song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n                    let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIndex];\n                    let modInstrument: number = instrument.modInstruments[mod];\n                    let modChannel: number = instrument.modChannels[mod];\n\n                    if (modChannel == doc.channel && modInstrument >= doc.song.channels[modChannel].instruments.length-1 ) {\n\t\t\t\t\t\t\t//BUGFIX FROM JUMMBOX\n                        instrument.modInstruments[mod]++;\n                    }\n                }\n            }\n        }\n        // Also, make synth re-compute mod values, since 'all'/'active' mods now retroactively apply to this new instrument.\n        doc.synth.computeLatestModValues();\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeRemoveChannelInstrument extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const channel: Channel = doc.song.channels[doc.channel];\n        if (channel.instruments.length <= Config.instrumentCountMin) return;\n        const removedIndex: number = doc.viewedInstrument[doc.channel];\n        channel.instruments.splice(removedIndex, 1);\n        if (doc.song.patternInstruments) {\n            for (const pattern of channel.patterns) {\n                for (let i: number = 0; i < pattern.instruments.length; i++) {\n                    if (pattern.instruments[i] == removedIndex) {\n                        pattern.instruments.splice(i, 1);\n                        i--;\n                    } else if (pattern.instruments[i] > removedIndex) {\n                        pattern.instruments[i]--;\n                    }\n                }\n                if (pattern.instruments.length <= 0) {\n                    pattern.instruments[0] = 0;\n                }\n            }\n        }\n\n        // Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n                    let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\n                    let modInstrument: number = instrument.modInstruments[mod];\n                    let modChannel: number = instrument.modChannels[mod];\n\n                    if (modChannel == doc.channel) {\n                        // Boundary checking - check if setting was 'all' or 'active' previously\n                      if (modInstrument > removedIndex) {\n                            instrument.modInstruments[mod]--;\n                        }\n                        // Boundary checking - check if setting was set to the last instrument before splice\n                       else if (modInstrument == removedIndex) {\n                            instrument.modInstruments[mod] = 0;\n                            instrument.modulators[mod] = 0;\n                        }\n                    }\n\n                }\n            }\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeViewInstrument extends Change {\n    constructor(doc: SongDocument, index: number) {\n        super();\n        if (doc.viewedInstrument[doc.channel] != index) {\n            doc.viewedInstrument[doc.channel] = index;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeInstrumentsFlags extends Change {\n    constructor(doc: SongDocument, newLayeredInstruments: boolean, newPatternInstruments: boolean) {\n        super();\n        const oldLayeredInstruments: boolean = doc.song.layeredInstruments;\n        const oldPatternInstruments: boolean = doc.song.patternInstruments;\n        if (oldLayeredInstruments == newLayeredInstruments && oldPatternInstruments == newPatternInstruments) return;\n        doc.song.layeredInstruments = newLayeredInstruments;\n        doc.song.patternInstruments = newPatternInstruments;\n\n        for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            const channel: Channel = doc.song.channels[channelIndex];\n            if (channel.instruments.length > doc.song.getMaxInstrumentsPerChannel()) {\n                channel.instruments.length = doc.song.getMaxInstrumentsPerChannel();\n            }\n            for (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\n                const pattern: Pattern = channel.patterns[j];\n                if (!oldPatternInstruments && newPatternInstruments) {\n                    // patternInstruments was enabled, set up pattern instruments as appropriate.\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\n                        pattern.instruments[i] = i;\n                    }\n                    pattern.instruments.length = channel.instruments.length;\n                }\n                discardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\n            }\n        }\n\n\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\n\nexport class ChangeKey extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        if (doc.song.key != newValue) {\n            doc.song.key = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeLoop extends Change {\n    constructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\n        super();\n        this._doc.song.loopStart = this.newStart;\n        this._doc.song.loopLength = this.newLength;\n        this._doc.notifier.changed();\n        if (this.oldStart != this.newStart || this.oldLength != this.newLength) {\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangePitchAdded extends UndoableChange {\n    private _doc: SongDocument;\n    private _note: Note;\n    private _pitch: number;\n    private _index: number;\n    constructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\n        super(deletion);\n        this._doc = doc;\n        this._note = note;\n        this._pitch = pitch;\n        this._index = index;\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._note.pitches.splice(this._index, 0, this._pitch);\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._note.pitches.splice(this._index, 1);\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeOctave extends Change {\n    constructor(doc: SongDocument, public oldValue: number, newValue: number) {\n        super();\n        doc.song.channels[doc.channel].octave = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeRhythm extends ChangeGroup {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n\n        if (doc.song.rhythm != newValue) {\n            doc.song.rhythm = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangePaste extends ChangeGroup {\n    constructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\n        super();\n\n        // Erase the current contents of the selection:\n        this.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\n\n        // Mods don't follow this sequence, so skipping for now.\n        let noteInsertionIndex: number = 0;\n        if (!doc.song.getChannelIsMod(doc.channel)) {\n            for (let i: number = 0; i < pattern.notes.length; i++) {\n                if (pattern.notes[i].start < selectionStart) {\n                    if (pattern.notes[i].end > selectionStart) throw new Error();\n\n                    noteInsertionIndex = i + 1;\n                } else if (pattern.notes[i].start < selectionEnd) {\n                    throw new Error();\n                }\n            }\n        }\n        else {\n            noteInsertionIndex = pattern.notes.length;\n        }\n\n        while (selectionStart < selectionEnd) {\n            for (const noteObject of notes) {\n                const noteStart: number = noteObject[\"start\"] + selectionStart;\n                const noteEnd: number = noteObject[\"end\"] + selectionStart;\n                if (noteStart >= selectionEnd) break;\n                const note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"size\"], false);\n                note.pitches.length = 0;\n                for (const pitch of noteObject[\"pitches\"]) {\n                    note.pitches.push(pitch);\n                }\n                note.pins.length = 0;\n                for (const pin of noteObject[\"pins\"]) {\n                    note.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n                }\n                note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true) && (note.start == 0);\n                pattern.notes.splice(noteInsertionIndex++, 0, note);\n                if (note.end > selectionEnd) {\n                    this.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\n                }\n            }\n\n            selectionStart += oldPartDuration;\n        }\n\n        // Need to re-sort the notes by start time as they might change order because of paste.\n        if (pattern != null && doc.song.getChannelIsMod(doc.channel)) pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangePasteInstrument extends ChangeGroup {\n    constructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\n        super();\n        instrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeSetPatternInstruments extends Change {\n    constructor(doc: SongDocument, channelIndex: number, instruments: number[], pattern: Pattern) {\n        super();\n        if (!patternsContainSameInstruments(instruments, pattern.instruments)) {\n            pattern.instruments.length = 0;\n            pattern.instruments.push(...instruments);\n            discardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\n            this._didSomething();\n            doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangeModChannel extends Change {\n    constructor(doc: SongDocument, mod: number, index: number, useInstrument?: Instrument) {\n        super();\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (useInstrument != undefined)\n            instrument = useInstrument;\n\n        // None, or swapping from song to instrument/vice-versa\n        if (index == 0 || (Config.modulators[instrument.modulators[mod]].forSong && index >= 2) || (!Config.modulators[instrument.modulators[mod]].forSong && index < 2)) {\n            instrument.modulators[mod] = Config.modulators.dictionary[\"none\"].index;\n        }\n\n        instrument.modChannels[mod] = index - 2;\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeModInstrument extends Change {\n    constructor(doc: SongDocument, mod: number, tgtInstrument: number) {\n        super();\n\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\n        if (instrument.modInstruments[mod] != tgtInstrument) {\n            instrument.modInstruments[mod] = tgtInstrument;\n\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeModSetting extends Change {\n    constructor(doc: SongDocument, mod: number, text: string) {\n        super();\n\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\n        // Populate all instruments that could be targeted by this mod setting.\n        let tgtChannel: number = instrument.modChannels[mod];\n        let usedInstruments: Instrument[] = [];\n        if (tgtChannel >= 0) { // Ignore song/none.\n            if (instrument.modInstruments[mod] == doc.song.channels[tgtChannel].instruments.length) {\n                // All - Populate list of all instruments\n                usedInstruments = usedInstruments.concat(doc.song.channels[tgtChannel].instruments);\n            } else if (instrument.modInstruments[mod] > doc.song.channels[tgtChannel].instruments.length) {\n                // Active - Populate list of only used instruments\n                let tgtPattern: Pattern | null = doc.song.getPattern(tgtChannel, doc.bar);\n                if (tgtPattern != null) {\n                    for (let i: number = 0; i < tgtPattern.instruments.length; i++) {\n                        usedInstruments.push(doc.song.channels[tgtChannel].instruments[tgtPattern.instruments[i]]);\n                    }\n                }\n            }\n            else {\n                // Single instrument used.\n                usedInstruments.push(doc.song.channels[tgtChannel].instruments[instrument.modInstruments[mod]]);\n            }\n        }\n\n        // Check if a new effect is being added - if so add the proper associated effect to the instrument(s), and truncate \"+ \" from start of text.\n        if (text.startsWith(\"+ \")) {\n            text = text.substr(2);\n            for (let i: number = 0; i < usedInstruments.length; i++) {\n                const tgtInstrument: Instrument = usedInstruments[i];\n                if (!(tgtInstrument.effects & (1 << Config.modulators.dictionary[text].associatedEffect))) {\n                    doc.record(new ChangeToggleEffects(doc, Config.modulators.dictionary[text].associatedEffect, tgtInstrument));\n                }\n            }\n        }\n\n        let setting: number = Config.modulators.dictionary[text].index;\n\n        if (instrument.modulators[mod] != setting) {\n\n            instrument.modulators[mod] = setting;\n\n            // Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\n            let cap: number = Config.modulators[setting].maxRawVol;\n\n            for (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\n                const pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\n                if (pattern.instruments[0] == doc.getCurrentInstrument()) {\n                    for (let j: number = 0; j < pattern.notes.length; j++) {\n                        const note: Note = pattern.notes[j];\n                        if (note.pitches[0] == Config.modCount - mod - 1) {\n                            for (let k: number = 0; k < note.pins.length; k++) {\n                                const pin: NotePin = note.pins[k];\n                                if (pin.size > cap)\n                                    pin.size = cap;\n                            }\n                        }\n                    }\n                }\n            }\n\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeModFilter extends Change {\n    constructor(doc: SongDocument, mod: number, type: number) {\n        super();\n\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\n        if (instrument.modFilterTypes[mod] != type) {\n\n            instrument.modFilterTypes[mod] = type;\n\n            // Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\n            let cap: number = doc.song.getVolumeCapForSetting(true, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n\n            for (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\n                const pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\n                if (pattern.instruments[0] == doc.getCurrentInstrument()) {\n                    for (let j: number = 0; j < pattern.notes.length; j++) {\n                        const note: Note = pattern.notes[j];\n                        if (note.pitches[0] == Config.modCount - mod - 1) {\n                            for (let k: number = 0; k < note.pins.length; k++) {\n                                const pin: NotePin = note.pins[k];\n                                if (pin.size > cap)\n                                    pin.size = cap;\n                            }\n                        }\n                    }\n                }\n            }\n\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangePatternsPerChannel extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        if (doc.song.patternsPerChannel != newValue) {\n            for (let i: number = 0; i < doc.song.getChannelCount(); i++) {\n                const channelBars: number[] = doc.song.channels[i].bars;\n                const channelPatterns: Pattern[] = doc.song.channels[i].patterns;\n                for (let j: number = 0; j < channelBars.length; j++) {\n                    if (channelBars[j] > newValue) channelBars[j] = 0;\n                }\n                for (let j: number = channelPatterns.length; j < newValue; j++) {\n                    channelPatterns[j] = new Pattern();\n                }\n                channelPatterns.length = newValue;\n            }\n            doc.song.patternsPerChannel = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeEnsurePatternExists extends UndoableChange {\n    private _doc: SongDocument;\n    private _bar: number;\n    private _channelIndex: number;\n    private _patternIndex: number;\n    private _patternOldNotes: Note[] | null = null;\n    private _oldPatternCount: number;\n    private _newPatternCount: number;\n    private _oldPatternInstruments: number[] | null = null;\n    private _newPatternInstruments: number[];\n\n    constructor(doc: SongDocument, channelIndex: number, bar: number) {\n        super(false);\n        const song: Song = doc.song;\n        if (song.channels[channelIndex].bars[bar] != 0) return;\n\n        this._doc = doc;\n        this._bar = bar;\n        this._channelIndex = channelIndex;\n        this._oldPatternCount = song.patternsPerChannel;\n        this._newPatternCount = song.patternsPerChannel;\n        this._newPatternInstruments = doc.recentPatternInstruments[channelIndex].concat();\n\n        let firstEmptyUnusedIndex: number | null = null;\n        let firstUnusedIndex: number | null = null;\n        for (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\n            let used = false;\n            for (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\n                if (song.channels[channelIndex].bars[barIndex] == patternIndex) {\n                    used = true;\n                    break;\n                }\n            }\n            if (used) continue;\n            if (firstUnusedIndex == null) {\n                firstUnusedIndex = patternIndex;\n            }\n            const pattern: Pattern = song.channels[channelIndex].patterns[patternIndex - 1];\n            if (pattern.notes.length == 0) {\n                firstEmptyUnusedIndex = patternIndex;\n                break;\n            }\n        }\n\n        if (firstEmptyUnusedIndex != null) {\n            this._patternIndex = firstEmptyUnusedIndex;\n            this._oldPatternInstruments = song.channels[channelIndex].patterns[firstEmptyUnusedIndex - 1].instruments.concat();\n        } else if (song.patternsPerChannel < song.barCount) {\n            this._newPatternCount = song.patternsPerChannel + 1;\n            this._patternIndex = song.patternsPerChannel + 1;\n        } else if (firstUnusedIndex != null) {\n            this._patternIndex = firstUnusedIndex;\n            this._patternOldNotes = song.channels[channelIndex].patterns[firstUnusedIndex - 1].notes;\n            this._oldPatternInstruments = song.channels[channelIndex].patterns[firstUnusedIndex - 1].instruments.concat();\n        } else {\n            throw new Error();\n        }\n\n        this._didSomething();\n        this._doForwards();\n    }\n\n    protected _doForwards(): void {\n        const song: Song = this._doc.song;\n        for (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\n            for (let i: number = 0; i < song.getChannelCount(); i++) {\n                song.channels[i].patterns[j] = new Pattern();\n            }\n        }\n        song.patternsPerChannel = this._newPatternCount;\n        const pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\n        pattern.notes = [];\n        pattern.instruments.length = 0;\n        pattern.instruments.push(...this._newPatternInstruments);\n        song.channels[this._channelIndex].bars[this._bar] = this._patternIndex;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        const song: Song = this._doc.song;\n        const pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\n        if (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\n        if (this._oldPatternInstruments != null) {\n            pattern.instruments.length = 0;\n            pattern.instruments.push(...this._oldPatternInstruments);\n        }\n        song.channels[this._channelIndex].bars[this._bar] = 0;\n        for (let i: number = 0; i < song.getChannelCount(); i++) {\n            song.channels[i].patterns.length = this._oldPatternCount;\n        }\n        song.patternsPerChannel = this._oldPatternCount;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangePinTime extends ChangePins {\n    constructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number, continuesLastPattern: boolean) {\n        super(doc, note);\n\n        shiftedTime -= this._oldStart;\n        const originalTime: number = this._oldPins[pinIndex].time;\n        const skipStart: number = Math.min(originalTime, shiftedTime);\n        const skipEnd: number = Math.max(originalTime, shiftedTime);\n        let setPin: boolean = false;\n        for (let i: number = 0; i < this._oldPins.length; i++) {\n            const oldPin: NotePin = note.pins[i];\n            const time: number = oldPin.time;\n            if (time < skipStart) {\n                this._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\n            } else if (time > skipEnd) {\n                if (!setPin) {\n                    if (this._newPins.length > 0) continuesLastPattern = note.continuesLastPattern;\n                    this._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\n                    setPin = true;\n                }\n                this._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\n            }\n        }\n        if (!setPin) {\n            continuesLastPattern = note.continuesLastPattern;\n            this._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\n        }\n\n        this._finishSetup(continuesLastPattern);\n    }\n}\n\nexport class ChangePitchBend extends ChangePins {\n    constructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\n        super(doc, note);\n\n        bendStart -= this._oldStart;\n        bendEnd -= this._oldStart;\n        bendTo -= note.pitches[pitchIndex];\n\n        let setStart: boolean = false;\n        let setEnd: boolean = false;\n        let prevInterval: number = 0;\n        let prevSize: number = Config.noteSizeMax;\n        let persist: boolean = true;\n        let i: number;\n        let direction: number;\n        let stop: number;\n        let push: (item: NotePin) => void;\n        if (bendEnd > bendStart) {\n            i = 0;\n            direction = 1;\n            stop = note.pins.length;\n            push = (item: NotePin) => { this._newPins.push(item); };\n        } else {\n            i = note.pins.length - 1;\n            direction = -1;\n            stop = -1;\n            push = (item: NotePin) => { this._newPins.unshift(item); };\n        }\n        for (; i != stop; i += direction) {\n            const oldPin: NotePin = note.pins[i];\n            const time: number = oldPin.time;\n            for (; ;) {\n                if (!setStart) {\n                    if (time * direction <= bendStart * direction) {\n                        prevInterval = oldPin.interval;\n                        prevSize = oldPin.size;\n                    }\n                    if (time * direction < bendStart * direction) {\n                        push(makeNotePin(oldPin.interval, time, oldPin.size));\n                        break;\n                    } else {\n                        push(makeNotePin(prevInterval, bendStart, prevSize));\n                        setStart = true;\n                    }\n                } else if (!setEnd) {\n                    if (time * direction <= bendEnd * direction) {\n                        prevInterval = oldPin.interval;\n                        prevSize = oldPin.size;\n                    }\n                    if (time * direction < bendEnd * direction) {\n                        break;\n                    } else {\n                        push(makeNotePin(bendTo, bendEnd, prevSize));\n                        setEnd = true;\n                    }\n                } else {\n                    if (time * direction == bendEnd * direction) {\n                        break;\n                    } else {\n                        if (oldPin.interval != prevInterval) persist = false;\n                        push(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.size));\n                        break;\n                    }\n                }\n            }\n        }\n        if (!setEnd) {\n            push(makeNotePin(bendTo, bendEnd, prevSize));\n        }\n\n        this._finishSetup();\n    }\n}\n\nexport class ChangePatternRhythm extends ChangeSequence {\n    constructor(doc: SongDocument, pattern: Pattern) {\n        super();\n        const minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\n\n        const changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\n            let thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\n            if (thresholds != null) {\n                const beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\n                const remainder: number = oldTime - beatStart;\n                let newTime: number = beatStart;\n                for (const threshold of thresholds) {\n                    if (remainder >= threshold) {\n                        newTime += minDivision;\n                    } else {\n                        break;\n                    }\n                }\n                return newTime;\n            } else {\n                return Math.round(oldTime / minDivision) * minDivision;\n            }\n        };\n\n        let i: number = 0;\n        while (i < pattern.notes.length) {\n            const note: Note = pattern.notes[i];\n            if (changeRhythm(note.start) >= changeRhythm(note.end)) {\n                this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n            } else {\n                this.append(new ChangeRhythmNote(doc, note, changeRhythm));\n                i++;\n            }\n        }\n    }\n}\n\nclass ChangeRhythmNote extends ChangePins {\n    constructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\n        super(doc, note);\n\n        for (const oldPin of this._oldPins) {\n            this._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.size));\n        }\n\n        this._finishSetup();\n    }\n}\n\nexport class ChangeMoveNotesSideways extends ChangeGroup {\n    constructor(doc: SongDocument, beatsToMove: number, strategy: string) {\n        super();\n        let partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\n        if (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\n        if (partsToMove == 0.0) return;\n\n        switch (strategy) {\n            case \"wrapAround\": {\n                const partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\n                for (const channel of doc.song.channels) {\n                    for (const pattern of channel.patterns) {\n                        const newNotes: Note[] = [];\n\n                        for (let bar: number = 1; bar >= 0; bar--) {\n                            const barStartPart: number = bar * partsPerBar;\n\n                            for (const oldNote of pattern.notes) {\n                                const absoluteNoteStart: number = oldNote.start + partsToMove;\n                                const absoluteNoteEnd: number = oldNote.end + partsToMove;\n                                const noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\n                                const noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\n\n                                if (noteStartPart < noteEndPart) {\n                                    projectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\n                                }\n                            }\n                        }\n\n                        pattern.notes = newNotes;\n                    }\n                }\n            } break;\n            case \"overflow\": {\n                let originalBarCount: number = doc.song.barCount;\n                let originalLoopStart: number = doc.song.loopStart;\n                let originalLoopLength: number = doc.song.loopLength;\n\n                this.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\n\n                if (beatsToMove < 0) {\n                    let firstBarIsEmpty: boolean = true;\n                    for (const channel of doc.song.channels) {\n                        if (channel.bars[0] != 0) firstBarIsEmpty = false;\n                    }\n                    if (firstBarIsEmpty) {\n                        for (const channel of doc.song.channels) {\n                            channel.bars.shift();\n                        }\n                        doc.song.barCount--;\n                    } else {\n                        originalBarCount++;\n                        originalLoopStart++;\n                        doc.bar++;\n                    }\n                }\n                while (doc.song.barCount < originalBarCount) {\n                    for (const channel of doc.song.channels) {\n                        channel.bars.push(0);\n                    }\n                    doc.song.barCount++;\n                }\n                doc.song.loopStart = originalLoopStart;\n                doc.song.loopLength = originalLoopLength;\n            } break;\n            default: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeBeatsPerBar extends ChangeGroup {\n    constructor(doc: SongDocument, newValue: number, strategy: string) {\n        super();\n        if (doc.song.beatsPerBar != newValue) {\n            switch (strategy) {\n                case \"splice\": {\n                    if (doc.song.beatsPerBar > newValue) {\n                        const sequence: ChangeSequence = new ChangeSequence();\n                        for (let i: number = 0; i < doc.song.getChannelCount(); i++) {\n                            for (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\n                                sequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\n                            }\n                        }\n                    }\n                } break;\n                case \"stretch\": {\n                    const changeRhythm = function (oldTime: number): number {\n                        return Math.round(oldTime * newValue / doc.song.beatsPerBar);\n                    };\n                    for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n                        for (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\n                            const pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\n                            let noteIndex: number = 0;\n                            while (noteIndex < pattern.notes.length) {\n                                const note: Note = pattern.notes[noteIndex];\n                                if (changeRhythm(note.start) >= changeRhythm(note.end)) {\n                                    this.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\n                                } else {\n                                    this.append(new ChangeRhythmNote(doc, note, changeRhythm));\n                                    noteIndex++;\n                                }\n                            }\n                        }\n                    }\n                    this.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\n                } break;\n                case \"overflow\": {\n                    this.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\n                    doc.song.loopStart = 0;\n                    doc.song.loopLength = doc.song.barCount;\n                } break;\n                default: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\n            }\n\n            doc.song.beatsPerBar = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeScale extends ChangeGroup {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        if (doc.song.scale != newValue) {\n            doc.song.scale = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeDetectKey extends ChangeGroup {\n    constructor(doc: SongDocument) {\n        super();\n        const song: Song = doc.song;\n        const basePitch: number = Config.keys[song.key].basePitch;\n        const keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\n            for (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\n                const pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\n                if (pattern != null) {\n                    for (const note of pattern.notes) {\n                        const prevPin: NotePin = note.pins[0];\n                        for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n                            const nextPin: NotePin = note.pins[pinIndex];\n                            if (prevPin.interval == nextPin.interval) {\n                                let weight: number = nextPin.time - prevPin.time;\n                                weight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\n                                weight *= nextPin.size + prevPin.size;\n                                for (const pitch of note.pitches) {\n                                    const key = (basePitch + prevPin.interval + pitch) % 12;\n                                    keyWeights[key] += weight;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        let bestKey: number = 0;\n        let bestKeyWeight: number = 0;\n        for (let key: number = 0; key < 12; key++) {\n            // Look for the root of the most prominent major or minor chord.\n            const keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\n            if (bestKeyWeight < keyWeight) {\n                bestKeyWeight = keyWeight;\n                bestKey = key;\n            }\n        }\n\n        if (bestKey != song.key) {\n            const diff: number = song.key - bestKey;\n            const absoluteDiff: number = Math.abs(diff);\n\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\n                for (const pattern of song.channels[channelIndex].patterns) {\n                    for (let i: number = 0; i < absoluteDiff; i++) {\n                        this.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\n                    }\n                }\n            }\n\n            song.key = bestKey;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport function pickRandomPresetValue(isNoise: boolean): number {\n    const eligiblePresetValues: number[] = [];\n    for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n        const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n        if (category.name == \"Novelty Presets\") continue;\n        for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n            const preset: Preset = category.presets[presetIndex];\n            if (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\n                eligiblePresetValues.push((categoryIndex << 6) + presetIndex);\n            }\n        }\n    }\n    return eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\n}\n\nexport function setDefaultInstruments(song: Song): void {\n    for (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\n        for (const instrument of song.channels[channelIndex].instruments) {\n            const isNoise: boolean = song.getChannelIsNoise(channelIndex);\n            const isMod: boolean = song.getChannelIsMod(channelIndex);\n            const presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\n            const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n            instrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2, 1);\n            instrument.preset = presetValue;\n        }\n    }\n}\n\nexport class ChangeSong extends ChangeGroup {\n    constructor(doc: SongDocument, newHash: string) {\n        super();\n        let pitchChannelCount = doc.song.pitchChannelCount;\n        let noiseChannelCount = doc.song.noiseChannelCount;\n        let modChannelCount = doc.song.modChannelCount;\n        doc.song.fromBase64String(newHash);\n        if (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\n            ColorConfig.resetColors();\n        }\n        if (newHash == \"\") {\n            this.append(new ChangePatternSelection(doc, 0, 0));\n            doc.selection.resetBoxSelection();\n            setDefaultInstruments(doc.song);\n            doc.song.scale = doc.prefs.defaultScale;\n\n            for (let i: number = 0; i <= doc.song.channels.length; i++) {\n                doc.viewedInstrument[i] = 0;\n                doc.recentPatternInstruments[i] = [0];\n            }\n            doc.viewedInstrument.length = doc.song.channels.length;\n        } else {\n            this.append(new ChangeValidateTrackSelection(doc));\n        }\n        doc.synth.computeLatestModValues();\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeValidateTrackSelection extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const channelIndex: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\n        const bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\n        if (doc.channel != channelIndex || doc.bar != bar) {\n\t\t\tdoc.bar = bar;\n\t\t\tdoc.channel = channelIndex;\n\t\t\tthis._didSomething();\n\t\t}\n\t\tdoc.selection.scrollToSelectedPattern();\n\t\tdoc.notifier.changed();\n    }\n}\n\nexport class ChangeReplacePatterns extends ChangeGroup {\n    constructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\n        super();\n\n        const song: Song = doc.song;\n\n        function removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\n            while (channels.length > maxLength) {\n                let sparsestIndex: number = channels.length - 1;\n                let mostZeroes: number = 0;\n                for (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\n                    let zeroes: number = 0;\n                    for (const bar of channels[channelIndex].bars) {\n                        if (bar == 0) zeroes++;\n                    }\n                    if (zeroes >= mostZeroes) {\n                        sparsestIndex = channelIndex;\n                        mostZeroes = zeroes;\n                    }\n                }\n                channels.splice(sparsestIndex, 1);\n            }\n        }\n\n        removeExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\n        removeExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\n        removeExtraSparseChannels(modChannels, Config.modChannelCountMax);\n\n        while (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\n        while (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\n        while (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\n\n        // Set minimum counts.\n        song.barCount = 1;\n        song.patternsPerChannel = 8;\n        const combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\n        for (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\n            const channel: Channel = combinedChannels[channelIndex];\n            song.barCount = Math.max(song.barCount, channel.bars.length);\n            song.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\n            song.channels[channelIndex] = channel;\n        }\n        song.channels.length = combinedChannels.length;\n        song.pitchChannelCount = pitchChannels.length;\n        song.noiseChannelCount = noiseChannels.length;\n        song.modChannelCount = modChannels.length;\n\n        song.barCount = Math.min(Config.barCountMax, song.barCount);\n        song.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\n        for (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\n            const channel: Channel = song.channels[channelIndex];\n\n            for (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\n                if (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\n                    channel.bars[barIndex] = 0;\n                }\n            }\n            while (channel.bars.length < song.barCount) {\n                channel.bars.push(0);\n            }\n            channel.bars.length = song.barCount;\n\n            if (channel.instruments.length > song.getMaxInstrumentsPerChannel()) {\n                channel.instruments.length = song.getMaxInstrumentsPerChannel();\n            }\n\n            for (const pattern of channel.patterns) {\n                discardInvalidPatternInstruments(pattern.instruments, song, channelIndex);\n            }\n            while (channel.patterns.length < song.patternsPerChannel) {\n                channel.patterns.push(new Pattern());\n            }\n\n            channel.patterns.length = song.patternsPerChannel;\n        }\n\n        song.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\n        song.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\n\n        this.append(new ChangeValidateTrackSelection(doc));\n        doc.notifier.changed();\n        this._didSomething();\n\n        ColorConfig.resetColors();\n    }\n}\n\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\n    if (a.length != b.length) return false;\n\n    for (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\n        const oldNote: Note = a[noteIndex];\n        const newNote: Note = b[noteIndex];\n        if (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\n            return false;\n        }\n\n        for (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\n            if (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\n                return false;\n            }\n        }\n\n        for (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\n            if (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].size != oldNote.pins[pinIndex].size) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport function removeDuplicatePatterns(channels: Channel[]): void {\n    for (const channel of channels) {\n        const newPatterns: Pattern[] = [];\n        for (let bar: number = 0; bar < channel.bars.length; bar++) {\n            if (channel.bars[bar] == 0) continue;\n\n            const oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\n\n            let foundMatchingPattern: boolean = false;\n            for (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\n                const newPattern: Pattern = newPatterns[newPatternIndex];\n\n                if (!patternsContainSameInstruments(oldPattern.instruments, newPattern.instruments) || newPattern.notes.length != oldPattern.notes.length) {\n                    continue;\n                }\n\n                if (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\n                    foundMatchingPattern = true;\n                    channel.bars[bar] = newPatternIndex + 1;\n                    break;\n                }\n            }\n\n            if (!foundMatchingPattern) {\n                newPatterns.push(oldPattern);\n                channel.bars[bar] = newPatterns.length;\n            }\n        }\n\n        for (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\n            channel.patterns[patternIndex] = newPatterns[patternIndex];\n        }\n        channel.patterns.length = newPatterns.length;\n    }\n}\n\nexport class ChangeKeyOctave extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.octave = Math.max(Config.octaveMin, Math.min(Config.octaveMax, Math.round(newValue)));\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeTempo extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\n        doc.synth.unsetMod(Config.modulators.dictionary[\"tempo\"].index);\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeEchoDelay extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.echoDelay = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"echo delay\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeEchoSustain extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.echoSustain = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"echo\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeChorus extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.chorus = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeReverb extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.reverb = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"reverb\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeSongReverb extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.reverb = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"song reverb\"].index);\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeNoteAdded extends UndoableChange {\n    private _doc: SongDocument;\n    private _pattern: Pattern;\n    private _note: Note;\n    private _index: number;\n    constructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\n        super(deletion);\n        this._doc = doc;\n        this._pattern = pattern;\n        this._note = note;\n        this._index = index;\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._pattern.notes.splice(this._index, 0, this._note);\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._pattern.notes.splice(this._index, 1);\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeNoteLength extends ChangePins {\n    constructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\n        super(doc, note);\n        const continuesLastPattern: boolean = ((this._oldStart < 0 || note.continuesLastPattern) && truncStart == 0);\n\n        truncStart -= this._oldStart;\n        truncEnd -= this._oldStart;\n        let setStart: boolean = false;\n        let prevSize: number = this._oldPins[0].size;\n        let prevInterval: number = this._oldPins[0].interval;\n        let pushLastPin: boolean = true;\n        let i: number;\n        for (i = 0; i < this._oldPins.length; i++) {\n            const oldPin: NotePin = this._oldPins[i];\n            if (oldPin.time < truncStart) {\n                prevSize = oldPin.size;\n                prevInterval = oldPin.interval;\n            } else {\n                if (oldPin.time > truncStart && !setStart) {\n                    this._newPins.push(makeNotePin(prevInterval, truncStart, prevSize));\n                    setStart = true;\n                }\n                if (oldPin.time <= truncEnd) {\n                    this._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.size));\n                    if (oldPin.time == truncEnd) {\n                        pushLastPin = false;\n                        break;\n                    }\n                } else {\n                    break;\n                }\n\n            }\n\n        }\n\n        if (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].size));\n\n        this._finishSetup(continuesLastPattern);\n    }\n}\n\nexport class ChangeNoteTruncate extends ChangeSequence {\n    constructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note | null = null, force: boolean = false) {\n        super();\n        let i: number = 0;\n        while (i < pattern.notes.length) {\n            const note: Note = pattern.notes[i];\n            if (note == skipNote && skipNote != null) {\n                i++;\n            } else if (note.end <= start) {\n                i++;\n            } else if (note.start >= end) {\n                // Allow out-of-order notes for mods so that all get checked.\n                if (!doc.song.getChannelIsMod(doc.channel)) {\n                    break;\n                } else {\n                    i++;\n                }\n            } else if (note.start < start && note.end > end) {\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\n                    const copy: Note = note.clone();\n                    this.append(new ChangeNoteLength(doc, note, note.start, start));\n                    i++;\n                    this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n                    this.append(new ChangeNoteLength(doc, copy, end, copy.end));\n                }\n                i++;\n            } else if (note.start < start) {\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\n                    this.append(new ChangeNoteLength(doc, note, note.start, start));\n                i++;\n            } else if (note.end > end) {\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\n                    this.append(new ChangeNoteLength(doc, note, end, note.end));\n                i++;\n            } else {\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\n                    this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n                else\n                    i++;\n            }\n        }\n    }\n}\n\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\n    constructor(doc: SongDocument, pattern: Pattern) {\n        super();\n        let i: number = 0;\n        while (i < pattern.notes.length) {\n            const note: Note = pattern.notes[i];\n            if (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\n                const copy: Note = note.clone();\n                this.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\n                i++;\n                this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n                this.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\n                // i++; // The second note might be split again at the end of the selection. Check it again.\n            } else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\n                const copy: Note = note.clone();\n                this.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\n                i++;\n                this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n                this.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\n                i++;\n            } else {\n                i++;\n            }\n        }\n    }\n}\n\nclass ChangeTransposeNote extends UndoableChange {\n    protected _doc: SongDocument;\n    protected _note: Note;\n    protected _oldStart: number;\n    protected _newStart: number;\n    protected _oldEnd: number;\n    protected _newEnd: number;\n    protected _oldPins: NotePin[];\n    protected _newPins: NotePin[];\n    protected _oldPitches: number[];\n    protected _newPitches: number[];\n    constructor(doc: SongDocument, channelIndex: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\n        super(false);\n        this._doc = doc;\n        this._note = note;\n        this._oldPins = note.pins;\n        this._newPins = [];\n        this._oldPitches = note.pitches;\n        this._newPitches = [];\n\n        // I'm disabling pitch transposing for noise channels to avoid\n        // accidentally messing up noise channels when pitch shifting all\n        // channels at once.\n        const isNoise: boolean = doc.song.getChannelIsNoise(channelIndex);\n        if (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\n\n        // Can't transpose mods\n        if (doc.song.getChannelIsMod(doc.channel)) return;\n\n        const maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\n\n        for (let i: number = 0; i < this._oldPitches.length; i++) {\n            let pitch: number = this._oldPitches[i];\n            if (octave && !isNoise) {\n                if (upward) {\n                    pitch = Math.min(maxPitch, pitch + 12);\n                } else {\n                    pitch = Math.max(0, pitch - 12);\n                }\n            } else {\n\t\t\t\tlet scale = doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? doc.song.scaleCustom : Config.scales[doc.song.scale].flags;\n                if (upward) {\n                    for (let j: number = pitch + 1; j <= maxPitch; j++) {\n                        if (isNoise || ignoreScale || scale[j % 12]) {\n                            pitch = j;\n                            break;\n                        }\n                    }\n                } else {\n                    for (let j: number = pitch - 1; j >= 0; j--) {\n                        if (isNoise || ignoreScale || scale[j % 12]) {\n                            pitch = j;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            let foundMatch: boolean = false;\n            for (let j: number = 0; j < this._newPitches.length; j++) {\n                if (this._newPitches[j] == pitch) {\n                    foundMatch = true;\n                    break;\n                }\n            }\n            if (!foundMatch) this._newPitches.push(pitch);\n        }\n\n        let min: number = 0;\n        let max: number = maxPitch;\n\n        for (let i: number = 1; i < this._newPitches.length; i++) {\n            const diff: number = this._newPitches[0] - this._newPitches[i];\n            if (min < diff) min = diff;\n            if (max > diff + maxPitch) max = diff + maxPitch;\n        }\n\n        for (const oldPin of this._oldPins) {\n            let interval: number = oldPin.interval + this._oldPitches[0];\n\n            if (interval < min) interval = min;\n            if (interval > max) interval = max;\n            if (octave && !isNoise) {\n                if (upward) {\n                    interval = Math.min(max, interval + 12);\n                } else {\n                    interval = Math.max(min, interval - 12);\n                }\n            } else {\n\t\t\t\tlet scale = doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? doc.song.scaleCustom : Config.scales[doc.song.scale].flags;\n                if (upward) {\n                    for (let i: number = interval + 1; i <= max; i++) {\n                        if (isNoise || ignoreScale || scale[i % 12]) {\n                            interval = i;\n                            break;\n                        }\n                    }\n                } else {\n                    for (let i: number = interval - 1; i >= min; i--) {\n                        if (isNoise || ignoreScale || scale[i % 12]) {\n                            interval = i;\n                            break;\n                        }\n                    }\n                }\n            }\n            interval -= this._newPitches[0];\n            this._newPins.push(makeNotePin(interval, oldPin.time, oldPin.size));\n        }\n\n        if (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\n\n        for (let i: number = 1; i < this._newPins.length - 1;) {\n            if (this._newPins[i - 1].interval == this._newPins[i].interval &&\n                this._newPins[i].interval == this._newPins[i + 1].interval &&\n                this._newPins[i - 1].size == this._newPins[i].size &&\n                this._newPins[i].size == this._newPins[i + 1].size) {\n                this._newPins.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n\n        this._doForwards();\n        this._didSomething();\n    }\n\n    protected _doForwards(): void {\n        this._note.pins = this._newPins;\n        this._note.pitches = this._newPitches;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._note.pins = this._oldPins;\n        this._note.pitches = this._oldPitches;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeTranspose extends ChangeSequence {\n    constructor(doc: SongDocument, channelIndex: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\n        super();\n        if (doc.selection.patternSelectionActive) {\n            this.append(new ChangeSplitNotesAtSelection(doc, pattern));\n        }\n        for (const note of pattern.notes) {\n            if (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\n                continue;\n            }\n            this.append(new ChangeTransposeNote(doc, channelIndex, note, upward, ignoreScale, octave));\n        }\n    }\n}\n\nexport class ChangeTrackSelection extends Change {\n    constructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\n        super();\n        doc.selection.boxSelectionX0 = newX0;\n        doc.selection.boxSelectionX1 = newX1;\n        doc.selection.boxSelectionY0 = newY0;\n        doc.selection.boxSelectionY1 = newY1;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangePatternSelection extends UndoableChange {\n    private _doc: SongDocument;\n    private _oldStart: number;\n    private _oldEnd: number;\n    private _oldActive: boolean;\n    private _newStart: number;\n    private _newEnd: number;\n    private _newActive: boolean;\n\n    constructor(doc: SongDocument, newStart: number, newEnd: number) {\n        super(false);\n        this._doc = doc;\n        this._oldStart = doc.selection.patternSelectionStart;\n        this._oldEnd = doc.selection.patternSelectionEnd;\n        this._oldActive = doc.selection.patternSelectionActive;\n        this._newStart = newStart;\n        this._newEnd = newEnd;\n        this._newActive = newStart < newEnd;\n        this._doForwards();\n        this._didSomething();\n    }\n\n    protected _doForwards(): void {\n        this._doc.selection.patternSelectionStart = this._newStart;\n        this._doc.selection.patternSelectionEnd = this._newEnd;\n        this._doc.selection.patternSelectionActive = this._newActive;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._doc.selection.patternSelectionStart = this._oldStart;\n        this._doc.selection.patternSelectionEnd = this._oldEnd;\n        this._doc.selection.patternSelectionActive = this._oldActive;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeDragSelectedNotes extends ChangeSequence {\n    constructor(doc: SongDocument, channelIndex: number, pattern: Pattern, parts: number, transpose: number) {\n        super();\n\n        if (parts == 0 && transpose == 0) return;\n\n        if (doc.selection.patternSelectionActive) {\n            this.append(new ChangeSplitNotesAtSelection(doc, pattern));\n        }\n\n        const oldStart: number = doc.selection.patternSelectionStart;\n        const oldEnd: number = doc.selection.patternSelectionEnd;\n        const newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\n        const newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\n        if (newStart == newEnd) {\n            // Just erase the current contents of the selection:\n            this.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\n        } else if (parts < 0) {\n            // Clear space for the dragged notes:\n            this.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\n        } else {\n            // Clear space for the dragged notes:\n            this.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\n        }\n\n        this.append(new ChangePatternSelection(doc, newStart, newEnd));\n        const draggedNotes = [];\n        let noteInsertionIndex: number = 0;\n        let i: number = 0;\n        while (i < pattern.notes.length) {\n            const note: Note = pattern.notes[i];\n            if (note.end <= oldStart || note.start >= oldEnd) {\n                i++;\n                if (note.end <= newStart) noteInsertionIndex = i;\n            } else {\n                draggedNotes.push(note.clone());\n                this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n            }\n        }\n\n        for (const note of draggedNotes) {\n            note.start += parts;\n            note.end += parts;\n            if (note.end <= newStart) continue;\n            if (note.start >= newEnd) continue;\n\n            this.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\n\n            this.append(new ChangeNoteLength(doc, note, Math.max(note.start, newStart), Math.min(newEnd, note.end)));\n\n            for (let i: number = 0; i < Math.abs(transpose); i++) {\n                this.append(new ChangeTransposeNote(doc, channelIndex, note, transpose > 0, doc.prefs.notesOutsideScale));\n            }\n\n        }\n    }\n}\n\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\n    constructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\n        super();\n        for (let channelIndex: number = channelStart; channelIndex < channelStart + channelHeight; channelIndex++) {\n            const reusablePatterns: Dictionary<number> = {};\n\n            for (let bar: number = barStart; bar < barStart + barWidth; bar++) {\n                const currentPatternIndex: number = doc.song.channels[channelIndex].bars[bar];\n                if (currentPatternIndex == 0) continue;\n\n                if (reusablePatterns[String(currentPatternIndex)] == undefined) {\n                    let isUsedElsewhere = false;\n                    for (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\n                        if (bar2 < barStart || bar2 >= barStart + barWidth) {\n                            if (doc.song.channels[channelIndex].bars[bar2] == currentPatternIndex) {\n                                isUsedElsewhere = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (isUsedElsewhere) {\n                        // Need to duplicate the pattern.\n                        const copiedPattern: Pattern = doc.song.getPattern(channelIndex, bar)!;\n                        this.append(new ChangePatternNumbers(doc, 0, bar, channelIndex, 1, 1));\n                        this.append(new ChangeEnsurePatternExists(doc, channelIndex, bar));\n                        const newPattern: Pattern | null = doc.song.getPattern(channelIndex, bar);\n                        if (newPattern == null) throw new Error();\n                        this.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\n\n                        // Copy the instruments into the new pattern.\n                        newPattern.instruments.length = 0;\n                        newPattern.instruments.push(...copiedPattern.instruments);\n\n                        reusablePatterns[String(currentPatternIndex)] = doc.song.channels[channelIndex].bars[bar];\n                    } else {\n                        reusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\n                    }\n                }\n\n                this.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channelIndex, 1, 1));\n            }\n        }\n    }\n}\n\nexport class ChangePatternScale extends Change {\n    constructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\n        super();\n        if (doc.selection.patternSelectionActive) {\n            new ChangeSplitNotesAtSelection(doc, pattern);\n        }\n        const maxPitch: number = Config.maxPitch;\n        for (const note of pattern.notes) {\n            if (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\n                continue;\n            }\n\n            const newPitches: number[] = [];\n            const newPins: NotePin[] = [];\n            for (let i: number = 0; i < note.pitches.length; i++) {\n                const pitch: number = note.pitches[i];\n                const transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\n                if (newPitches.indexOf(transformedPitch) == -1) {\n                    newPitches.push(transformedPitch);\n                }\n            }\n\n            let min: number = 0;\n            let max: number = maxPitch;\n\n            for (let i: number = 1; i < newPitches.length; i++) {\n                const diff: number = newPitches[0] - newPitches[i];\n                if (min < diff) min = diff;\n                if (max > diff + maxPitch) max = diff + maxPitch;\n            }\n\n            for (const oldPin of note.pins) {\n                let interval: number = oldPin.interval + note.pitches[0];\n                if (interval < min) interval = min;\n                if (interval > max) interval = max;\n                const transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\n                newPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.size));\n            }\n\n            if (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\n\n            for (let i: number = 1; i < newPins.length - 1;) {\n                if (newPins[i - 1].interval == newPins[i].interval &&\n                    newPins[i].interval == newPins[i + 1].interval &&\n                    newPins[i - 1].size == newPins[i].size &&\n                    newPins[i].size == newPins[i + 1].size) {\n                    newPins.splice(i, 1);\n                } else {\n                    i++;\n                }\n            }\n\n            note.pitches = newPitches;\n            note.pins = newPins;\n        }\n        this._didSomething();\n        doc.notifier.changed();\n    }\n}\n\nexport class ChangeVolume extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\n        // Not used currently as mod is implemented as multiplicative.\n        //doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeSongTitle extends Change {\n    constructor(doc: SongDocument, oldValue: string, newValue: string) {\n        super();\n        if (newValue.length > 30) {\n            newValue = newValue.substring(0, 30);\n        }\n\n        doc.song.title = newValue;\n        document.title = newValue + \" - \" + EditorConfig.versionDisplayName;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeChannelName extends Change {\n    constructor(doc: SongDocument, oldValue: string, newValue: string) {\n        super();\n        if (newValue.length > 15) {\n            newValue = newValue.substring(0, 15);\n        }\n\n        doc.song.channels[doc.muteEditorChannel].name = newValue;\n        doc.recalcChannelNames = true;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangePan extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"pan\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangePanDelay extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeSizeBend extends UndoableChange {\n    private _doc: SongDocument;\n    private _note: Note;\n    private _oldPins: NotePin[];\n    private _newPins: NotePin[];\n    constructor(doc: SongDocument, note: Note, bendPart: number, bendSize: number, bendInterval: number, uniformSize: boolean) {\n        super(false);\n        this._doc = doc;\n        this._note = note;\n        this._oldPins = note.pins;\n        this._newPins = [];\n\n        let inserted: boolean = false;\n\n        for (const pin of note.pins) {\n            if (pin.time < bendPart) {\n                if (uniformSize) {\n                    this._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\n                } else {\n                    this._newPins.push(pin);\n                }\n            } else if (pin.time == bendPart) {\n                this._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\n                inserted = true;\n            } else {\n                if (!uniformSize && !inserted) {\n                    this._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\n                    inserted = true;\n                }\n                if (uniformSize) {\n                    this._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\n                } else {\n                    this._newPins.push(pin);\n                }\n            }\n        }\n\n        removeRedundantPins(this._newPins);\n\n        this._doForwards();\n        this._didSomething();\n    }\n\n    protected _doForwards(): void {\n        this._note.pins = this._newPins;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._note.pins = this._oldPins;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeChipWave extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (instrument.chipWave != newValue) {\n            instrument.chipWave = newValue;\n\t\t\t\t\t\t // advloop addition\n                instrument.isUsingAdvancedLoopControls = false;\n                instrument.chipWaveLoopStart = 0;\n                instrument.chipWaveLoopEnd = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                instrument.chipWaveLoopMode = 0;\n                instrument.chipWavePlayBackwards = false;\n                instrument.chipWaveStartOffset = 0;\n                // advloop addition\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\n\t// advloop addition\n    export class ChangeChipWaveUseAdvancedLoopControls extends Change {\n        constructor(doc: SongDocument, newValue: boolean) {\n            super();\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n            if (instrument.isUsingAdvancedLoopControls != newValue) {\n                instrument.isUsingAdvancedLoopControls = newValue;\n                instrument.chipWaveLoopStart = 0;\n                instrument.chipWaveLoopEnd = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                instrument.chipWaveLoopMode = 0;\n                instrument.chipWavePlayBackwards = false;\n                instrument.chipWaveStartOffset = 0;\n                instrument.preset = instrument.type;\n                doc.notifier.changed();\n                this._didSomething();\n            }\n        }\n    }\n    export class ChangeChipWaveLoopMode extends Change {\n        constructor(doc: SongDocument, newValue: number) {\n            super();\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n            if (instrument.chipWaveLoopMode != newValue) {\n                instrument.isUsingAdvancedLoopControls = true;\n                instrument.chipWaveLoopMode = newValue;\n                instrument.preset = instrument.type;\n                doc.notifier.changed();\n                this._didSomething();\n            }\n        }\n    }\n   export class ChangeChipWaveLoopStart extends Change {\n        constructor(doc: SongDocument, newValue: number) {\n            super();\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n            if (instrument.chipWaveLoopStart != newValue) {\n                instrument.isUsingAdvancedLoopControls = true;\n                instrument.chipWaveLoopStart = newValue;\n                instrument.preset = instrument.type;\n                doc.notifier.changed();\n                this._didSomething();\n            }\n        }\n    }\n   export class ChangeChipWaveLoopEnd extends Change {\n        constructor(doc: SongDocument, newValue: number) {\n            super();\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n            if (instrument.chipWaveLoopEnd != newValue) {\n                instrument.isUsingAdvancedLoopControls = true;\n                instrument.chipWaveLoopEnd = newValue;\n                instrument.chipWaveLoopStart = Math.max(0, Math.min(newValue - 1, instrument.chipWaveLoopStart));\n                instrument.preset = instrument.type;\n                doc.notifier.changed();\n                this._didSomething();\n            }\n        }\n    }\n   export class ChangeChipWaveStartOffset extends Change {\n        constructor(doc: SongDocument, newValue: number) {\n            super();\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n            if (instrument.chipWaveStartOffset != newValue) {\n                instrument.isUsingAdvancedLoopControls = true;\n                instrument.chipWaveStartOffset = newValue;\n                instrument.preset = instrument.type;\n                doc.notifier.changed();\n                this._didSomething();\n            }\n        }\n    }\n   export class ChangeChipWavePlayBackwards extends Change {\n        constructor(doc: SongDocument, newValue: boolean) {\n            super();\n            const instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n            if (instrument.chipWavePlayBackwards != newValue) {\n                instrument.isUsingAdvancedLoopControls = true;\n                instrument.chipWavePlayBackwards = newValue;\n                instrument.preset = instrument.type;\n                doc.notifier.changed();\n                this._didSomething();\n            }\n        }\n    }\n    // advloop addition\n\nexport class ChangeNoiseWave extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (instrument.chipNoise != newValue) {\n            instrument.chipNoise = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeAddEnvelope extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.addEnvelope(0, 0, 0);\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeRemoveEnvelope extends Change {\n    constructor(doc: SongDocument, index: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.envelopeCount--;\n        for (let i: number = index; i < instrument.envelopeCount; i++) {\n            instrument.envelopes[i].target = instrument.envelopes[i + 1].target;\n            instrument.envelopes[i].index = instrument.envelopes[i + 1].index;\n            instrument.envelopes[i].envelope = instrument.envelopes[i + 1].envelope;\n        }\n        // TODO: Shift any envelopes that were targeting other envelope indices after the removed one.\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeSetEnvelopeTarget extends Change {\n    constructor(doc: SongDocument, envelopeIndex: number, target: number, targetIndex: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldTarget: number = instrument.envelopes[envelopeIndex].target;\n        const oldIndex: number = instrument.envelopes[envelopeIndex].index;\n        if (oldTarget != target || oldIndex != targetIndex) {\n            instrument.envelopes[envelopeIndex].target = target;\n            instrument.envelopes[envelopeIndex].index = targetIndex;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeSetEnvelopeType extends Change {\n    constructor(doc: SongDocument, envelopeIndex: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.envelopes[envelopeIndex].envelope;\n        if (oldValue != newValue) {\n            instrument.envelopes[envelopeIndex].envelope = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeBeatsPerBar } from \"./changes\";\n\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class BeatsPerBarPrompt implements Prompt {\n\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"splice\"}, \"Splice beats at end of bars.\"),\n\t\toption({value: \"stretch\"}, \"Stretch notes to fit in bars.\"),\n\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Beats Per Bar\"),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({style: \"text-align: right;\"},\n\t\t\t\t\"Beats per bar:\",\n\t\t\t\tbr(),\n\t\t\t\tspan({ style: \"font-size: smaller; color: ${ColorConfig.secondaryText};\" }, \"(Multiples of 3 or 4 are recommended)\"),\n\t\t\t),\n\t\t\tthis._beatsStepper,\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\n\t\t\t\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\n\t\tif (lastStrategy != null) {\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\n\t\t}\n\t\t\t\n\t\tthis._beatsStepper.select();\n\t\t\tsetTimeout(()=>this._beatsStepper.focus());\n\t\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\n\t}\n\t\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeGroup } from \"./Change\";\nimport {ChangePatternsPerChannel, ChangeInstrumentsFlags, ChangeChannelCount} from \"./changes\";\n\nconst {button, div, label, br, h2, input} = HTML;\n\nexport class ChannelSettingsPrompt implements Prompt {\n\t\tprivate readonly _patternsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\t\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\t\tprivate readonly _drumChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\t\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\n\t\tprivate readonly _layeredInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\n\t\tprivate readonly _patternInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\n\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px; text-align: right;\"},\n\t\th2(\"Channel Settings\"),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Pitch channels:\",\n\t\t\tthis._pitchChannelStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Drum channels:\",\n\t\t\tthis._drumChannelStepper,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\t\"Mod channels:\",\n\t\t\tthis._modChannelStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Available patterns per channel:\",\n\t\t\tthis._patternsStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Simultaneous instruments\",\n\t\t\tbr(),\n\t\t\t\"per channel:\",\n\t\t\tthis._layeredInstrumentsBox,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Different instruments\",\n\t\t\tbr(),\n\t\t\t\"per pattern:\",\n\t\t\tthis._patternInstrumentsBox,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\n\t\tthis._patternsStepper.min = \"1\";\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\n\t\t\t\n\t\t\t\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\n\t\t\t\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\n\t\t\t\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\n\t\t\n\t\tthis._layeredInstrumentsBox.checked = this._doc.song.layeredInstruments;\n\t\tthis._patternInstrumentsBox.checked = this._doc.song.patternInstruments;\n\t\tthis._pitchChannelStepper.select();\n\t\t\tsetTimeout(()=>this._pitchChannelStepper.focus());\n\t\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._patternsStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis._modChannelStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._patternsStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tprivate _validateNumber = (event: Event): void => {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\n\t}\n\t\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\t\n\tprivate _saveChanges = (): void => {\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tgroup.append(new ChangeInstrumentsFlags(this._doc, this._layeredInstrumentsBox.checked, this._patternInstrumentsBox.checked));\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(group, true);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeCustomWave } from \"./changes\";\nimport { SongEditor } from \"./SongEditor\";\n\n//namespace beepbox {\nconst { button, div, h2 } = HTML;\n\nexport class CustomChipPromptCanvas {\n\tprivate readonly _doc: SongDocument;\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _lastIndex: number = 0;\n\tprivate _lastAmp: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tpublic chipData: Float32Array = new Float32Array(64);\n\tpublic startingChipData: Float32Array = new Float32Array(64);\n\tprivate _undoHistoryState: number = 0;\n\tprivate _changeQueue: Float32Array[] = [];\n\tprivate readonly _editorWidth: number = 768; // 64*12\n\tprivate readonly _editorHeight: number = 294; // 49*6\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\n\t\tthis._fill,\n\t\tthis._ticks,\n\t\tthis._subticks,\n\t\tthis._blocks,\n\t);\n\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\n\n\tconstructor(doc: SongDocument) {\n\n\t\tthis._doc = doc;\n\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\n\t\t}\n\t\tfor (let i: number = 1; i <= 8; i++) {\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\n\t\t}\n\n\t\t// Horiz. ticks\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\n\t\tfor (let i: number = 0; i < 3; i++) {\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\n\t\t}\n\n\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n\t\tfor (let i: number = 0; i <= 64; i++) {\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\n\t\t\tthis.chipData[i] = val;\n\t\t\tthis.startingChipData[i] = val;\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\n\t\t}\n\n\t\t// Record initial state of the chip data queue\n\t\tthis._storeChange();\n\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\n\t}\n\n\tprivate _storeChange = (): void => {\n\t\t// Check if change is unique compared to the current history state\n\t\tvar sameCheck = true;\n\t\tif (this._changeQueue.length > 0) {\n\t\t\tfor (var i = 0; i < 64; i++) {\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\n\t\t\t\t\tsameCheck = false; i = 64;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\n\n\t\t\t// Create new branch in history, removing all after this in time\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\n\n\t\t\tthis._undoHistoryState = 0;\n\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\n\n\t\t\t// 32 undo max\n\t\t\tif (this._changeQueue.length > 32) {\n\t\t\t\tthis._changeQueue.pop();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tpublic undo = (): void => {\n\t\t// Go backward, if there is a change to go back to\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\n\t\t\tthis._undoHistoryState++;\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tpublic redo = (): void => {\n\t\t// Go forward, if there is a change to go to\n\t\tif (this._undoHistoryState > 0) {\n\t\t\tthis._undoHistoryState--;\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif (event.keyCode == 90) { // z\n\t\t\tthis.undo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 89) { // y\n\t\t\tthis.redo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._lastIndex = -1;\n\n\t\tthis._whenCursorMoved();\n\t}\n\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._lastIndex = -1;\n\n\t\tthis._whenCursorMoved();\n\t}\n\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\n\n\t\t\t// Paint between mouse drag indices unless a click just happened.\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\n\t\t\t\tvar lowest = index;\n\t\t\t\tvar highest = this._lastIndex;\n\t\t\t\tvar startingAmp = amp;\n\t\t\t\tvar endingAmp = this._lastAmp;\n\t\t\t\tif (this._lastIndex < index) {\n\t\t\t\t\tlowest = this._lastIndex;\n\t\t\t\t\thighest = index;\n\t\t\t\t\tstartingAmp = this._lastAmp;\n\t\t\t\t\tendingAmp = amp;\n\t\t\t\t}\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\n\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.chipData[index] = amp - 24;\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\n\n\t\t\t}\n\n\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\n\n\t\t\tthis._lastIndex = index;\n\t\t\tthis._lastAmp = amp;\n\n\t\t}\n\t}\n\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\t// Add current data into queue, if it is unique from last data\n\t\tthis._storeChange();\n\t\tthis._mouseDown = false;\n\t}\n\n\tpublic render(): void {\n\t\tfor (var i = 0; i < 64; i++) {\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\n\t\t}\n\t}\n}\n\nexport class CustomChipPrompt implements Prompt {\n\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\n\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\n\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\n\t\th2(\"Edit Custom Chip Instrument\"),\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis._playButton,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis.customChipCanvas.container,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\n\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\n\t\tthis.updatePlayButton();\n\n\t\tsetTimeout(() => this._playButton.focus());\n\n\n\t\tthis.customChipCanvas.render();\n\t}\n\n\tprivate _togglePlay = (): void => {\n\t\tthis._songEditor.togglePlay();\n\t\tthis.updatePlayButton();\n\t}\n\n\tpublic updatePlayButton(): void {\n\t\tif (this._doc.synth.playing) {\n\t\t\tthis._playButton.classList.remove(\"playButton\");\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\n\t\t\tthis._playButton.title = \"Pause (Space)\";\n\t\t\tthis._playButton.innerText = \"Pause\";\n\t\t} else {\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\n\t\t\tthis._playButton.classList.add(\"playButton\");\n\t\t\tthis._playButton.title = \"Play (Space)\";\n\t\t\tthis._playButton.innerText = \"Play\";\n\t\t}\n\t}\n\n\tprivate _close = (): void => {\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.undo();\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\n\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\n\t}\n\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t\telse if (event.keyCode == 32) {\n\t\t\tthis._togglePlay();\n\t\t\tevent.preventDefault();\n\t\t}\n\t\telse if (event.keyCode == 90) { // z\n\t\t\tthis.customChipCanvas.undo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 89) { // y\n\t\t\tthis.customChipCanvas.redo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 219) { // [\n\t\t\tthis._doc.synth.goToPrevBar();\n\t\t}\n\t\telse if (event.keyCode == 221) { // ]\n\t\t\tthis._doc.synth.goToNextBar();\n\t\t}\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\tthis._doc.prompt = null;\n\t\t// Restore custom chip to starting values\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\n\t}\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { FilterCoefficients, FrequencyResponse } from \"../synth/filtering\";\nimport { FilterType, Config } from \"../synth/SynthConfig\";\nimport { FilterSettings, FilterControlPoint, Instrument } from \"../synth/synth\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeSequence, UndoableChange } from \"./Change\";\nimport { ChangeFilterAddPoint, ChangeFilterMovePoint, ChangeFilterSettings } from \"./changes\";\nimport { prettyNumber } from \"./EditorConfig\";\n\nexport class FilterEditor {\n    private _editorWidth: number = 120;\n    private _editorHeight: number = 26;\n    private readonly _responsePath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\n    //private readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\", overflow: \"visible\"});\n    private _indicators: SVGTextElement[] = [];\n    private _subFilters: FilterSettings[] = [];\n    private readonly _controlPointPath: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\n    private readonly _dottedLinePath: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\" });\n    private readonly _highlight: SVGCircleElement = SVG.circle({ fill: \"white\", stroke: \"none\", \"pointer-events\": \"none\", r: 4 });\n    private readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\n        this._responsePath,\n        //this._octaves,\n        this._dottedLinePath,\n        this._highlight,\n        this._controlPointPath,\n    );\n    private selfUndoSettings: String[] = [];\n    private selfUndoHistoryPos: number = 0;\n    private readonly _label: HTMLDivElement = HTML.div({ style: \"position: absolute; bottom: 0; left: 2px; font-size: 8px; line-height: 1; pointer-events: none;\" });\n\n    public coordText: HTMLElement | null = null;\n    public readonly container: HTMLElement = HTML.div({ class: \"filterEditor\", style: \"height: 100%; position: relative;\" },\n        this._svg,\n        this._label,\n    );\n    private _pointRadius: number = 2;\n\n    private _useNoteFilter: boolean = false;\n    private _larger: boolean = false;\n    private _touchMode: boolean = false;\n    private _mouseX: number = 0;\n    private _mouseY: number = 0;\n    private _mouseOver: boolean = false;\n    private _mouseDown: boolean = false;\n    private _mouseDragging: boolean = false;\n    private _addingPoint: boolean = false;\n    private _deletingPoint: boolean = false;\n    private _addedType: FilterType = FilterType.peak;\n    private _selectedIndex: number = 0;\n    private _freqStart: number = 0;\n    private _gainStart: number = 0;\n    private _dragChange: UndoableChange | null = null;\n    private _subfilterIndex: number = 0;\n\n    private _filterSettings: FilterSettings;\n    private _renderedSelectedIndex: number = -1;\n    private _renderedPointCount: number = -1;\n    private _renderedPointTypes: number = -1;\n    private _renderedPointFreqs: number = -1;\n    private _renderedPointGains: number = -1;\n    //private _renderedKey: number = -1;\n\n    constructor(private _doc: SongDocument, useNoteFilter: boolean = false, larger: boolean = false) {\n        this._useNoteFilter = useNoteFilter;\n        this._larger = larger;\n\n        if (this._larger) {\n            this.container.addEventListener(\"keydown\", this._whenKeyPressed)\n            this._editorWidth = 1200;\n            this._editorHeight = 260;\n            this._pointRadius = 14;\n            // A bit of vertical spacing on viewBox so that numbers will show.\n            this._svg.setAttribute(\"viewBox\", \"0 -20 \" + this._editorWidth + \" \" + (this._editorHeight + 30));\n            this._label.style.setProperty(\"font-size\", \"16px\");\n            this._label.style.setProperty(\"position\", \"\");\n            this._label.style.setProperty(\"bottom\", \"-16px\");\n            this._label.style.setProperty(\"min-height\", \"1em\");\n            this._dottedLinePath.style.setProperty(\"stroke-width\", \"3\");\n            this._dottedLinePath.style.setProperty(\"stroke-dasharray\", \"6, 4\");\n            this._dottedLinePath.setAttribute(\"color\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\n            this.container.style.setProperty(\"width\", \"85%\");\n            this._highlight.setAttribute(\"r\", \"20\");\n            this._controlPointPath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\n\n            for (let i: number = 0; i < Config.filterMaxPoints; i++) {\n                this._indicators[i] = SVG.text();\n                this._indicators[i].setAttribute(\"fill\", ColorConfig.invertedText);\n                this._indicators[i].setAttribute(\"text-anchor\", \"start\");\n                this._indicators[i].setAttribute(\"dominant-baseline\", \"central\");\n                this._indicators[i].setAttribute(\"pointer-events\", \"none\");\n                this._indicators[i].setAttribute(\"font-weight\", \"bolder\");\n                this._indicators[i].textContent = \"\" + (i + 1);\n                this._indicators[i].style.setProperty(\"display\", \"none\");\n                this._indicators[i].style.setProperty(\"font-size\", \"24px\");\n                this._svg.appendChild(this._indicators[i]);\n            }\n\n            // Push initial state\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n            const filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\n            this.selfUndoSettings.push(JSON.stringify(filterSettings.toJsonObject()));\n\n            this._subFilters[0] = filterSettings;\n            for (let i: number = 1; i < Config.filterMorphCount; i++) {\n                const subFilter: FilterSettings | null = this._useNoteFilter ? instrument.noteSubFilters[i] : instrument.eqSubFilters[i];\n                if (subFilter != null) {\n                    let parsedFilter: FilterSettings = new FilterSettings();\n                    parsedFilter.fromJsonObject(subFilter.toJsonObject());\n                    this._subFilters[i] = parsedFilter;\n                }\n            }\n        }\n\n        this.container.addEventListener(\"mousedown\", this._whenMousePressed);\n        this.container.addEventListener(\"mouseover\", this._whenMouseOver);\n        this.container.addEventListener(\"mouseout\", this._whenMouseOut);\n        document.addEventListener(\"mousemove\", this._whenMouseMoved);\n        document.addEventListener(\"mouseup\", this._whenCursorReleased);\n\n        this.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n        this.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n        this.container.addEventListener(\"touchend\", this._whenCursorReleased);\n        this.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n    }\n\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\n        if (event.keyCode == 90) { // z\n            this.undo();\n            event.stopPropagation();\n        }\n        if (event.keyCode == 89) { // y\n            this.redo();\n            event.stopPropagation();\n        }\n    }\n\n    private _xToFreq(x: number): number {\n        return Config.filterFreqRange * x / this._editorWidth - 0.5;\n    }\n    private _freqToX(freq: number): number {\n        return this._editorWidth * (freq + 0.5) / Config.filterFreqRange;\n    }\n    private _yToGain(y: number): number {\n        return (Config.filterGainRange - 1) * (1 - (y - .5) / (this._editorHeight - 1));\n    }\n    private _gainToY(gain: number): number {\n        return (this._editorHeight - 1) * (1 - gain / (Config.filterGainRange - 1)) + .5;\n    }\n\n    private _whenMouseOver = (event: MouseEvent): void => {\n        this._mouseOver = true;\n\n        if (!this._larger)\n            this._controlPointPath.style.setProperty(\"fill\", \"currentColor\");\n    }\n\n    private _whenMouseOut = (event: MouseEvent): void => {\n        this._mouseOver = false;\n        this._updatePath();\n\n        if (this.coordText != null) {\n            this.coordText.innerText = \"\";\n        }\n    }\n\n    private _whenMousePressed = (event: MouseEvent): void => {\n        event.preventDefault();\n        this._touchMode = false;\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._whenCursorPressed();\n    }\n\n    private _whenTouchPressed = (event: TouchEvent): void => {\n        event.preventDefault();\n        this._touchMode = true;\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._whenCursorPressed();\n    }\n\n    private _whenMouseMoved = (event: MouseEvent): void => {\n        if (this.container.offsetParent == null) return;\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        if (!this._mouseDown) this._updateCursor();\n\n        this._whenCursorMoved();\n    }\n\n    private _whenTouchMoved = (event: TouchEvent): void => {\n        if (this.container.offsetParent == null) return;\n        if (this._mouseDown) event.preventDefault();\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        if (!this._mouseDown) this._updateCursor();\n        this._whenCursorMoved();\n    }\n\n    private _whenCursorPressed(): void {\n        this._mouseDown = true;\n        const sequence: ChangeSequence = new ChangeSequence();\n        this._dragChange = sequence;\n        this._doc.setProspectiveChange(this._dragChange);\n        this._updateCursor();\n        this._whenCursorMoved();\n    }\n\n    private _updateCursor(): void {\n        this._freqStart = this._xToFreq(this._mouseX);\n        this._gainStart = this._yToGain(this._mouseY);\n\n        this._addingPoint = true;\n        this._selectedIndex = -1;\n        let nearestDistance: number = Number.POSITIVE_INFINITY;\n        for (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\n            const point: FilterControlPoint = this._filterSettings.controlPoints[i];\n            const distance: number = Math.sqrt(Math.pow(this._freqToX(point.freq) - this._mouseX, 2) + Math.pow(this._gainToY(point.gain) - this._mouseY, 2));\n            if ((distance <= 13 * (1 + +this._larger) || this._filterSettings.controlPointCount >= Config.filterMaxPoints) && distance < nearestDistance) {\n                nearestDistance = distance;\n                this._selectedIndex = i;\n                this._addingPoint = false;\n            }\n        }\n        if (this._addingPoint) {\n            const ratio: number = this._mouseX / this._editorWidth;\n            if (ratio < 0.2) {\n                this._addedType = FilterType.highPass;\n            } else if (ratio < 0.8) {\n                this._addedType = FilterType.peak;\n            } else {\n                this._addedType = FilterType.lowPass;\n            }\n        }\n    }\n\n    private _whenCursorMoved(): void {\n        if (this._dragChange != null && this._doc.lastChangeWas(this._dragChange)) {\n            this._dragChange.undo();\n        } else {\n            this._mouseDown = false;\n        }\n        this._dragChange = null;\n        this._deletingPoint = false;\n\n        if (this.coordText != null && !this._mouseDown) {\n            let gain: number = Math.round(this._yToGain(this._mouseY));\n            let freq: number = Math.round(this._xToFreq(this._mouseX));\n            if (freq >= 0 && freq < Config.filterFreqRange && gain >= 0 && gain < Config.filterGainRange)\n                this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\n            else\n                this.coordText.innerText = \"\";\n        }\n\n        if (this._mouseDown) {\n            const sequence: ChangeSequence = new ChangeSequence();\n            this._dragChange = sequence;\n            this._doc.setProspectiveChange(this._dragChange);\n\n            if (this._addingPoint) {\n                const gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(this._yToGain(this._mouseY))));\n                const freq: number = this._findNearestFreqSlot(this._filterSettings, this._xToFreq(this._mouseX), -1);\n                if (freq >= 0 && freq < Config.filterFreqRange) {\n                    const point: FilterControlPoint = new FilterControlPoint();\n                    point.type = this._addedType;\n                    point.freq = freq;\n                    point.gain = gain;\n                    sequence.append(new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._filterSettings.controlPointCount, this._useNoteFilter));\n\n                    if (this.coordText != null) {\n                        this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\n                    }\n                } else {\n                    this._deletingPoint = true;\n                }\n            } else if (this._selectedIndex >= this._filterSettings.controlPointCount || this._selectedIndex == -1) {\n                this._dragChange = null;\n                this._mouseDown = false;\n            } else {\n                const freqDelta: number = this._xToFreq(this._mouseX) - this._freqStart;\n                const gainDelta: number = this._yToGain(this._mouseY) - this._gainStart;\n                const point: FilterControlPoint = this._filterSettings.controlPoints[this._selectedIndex];\n                const gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(point.gain + gainDelta)));\n                const freq: number = this._findNearestFreqSlot(this._filterSettings, point.freq + freqDelta, this._selectedIndex);\n\n                if (Math.round(freqDelta) != 0.0 || Math.round(gainDelta) != 0.0 || freq != point.freq || gain != point.gain) {\n                    this._mouseDragging = true;\n                }\n\n                if (freq >= 0 && freq < Config.filterFreqRange) {\n                    sequence.append(new ChangeFilterMovePoint(this._doc, point, point.freq, freq, point.gain, gain));\n                    if (this.coordText != null) {\n                        this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\n                    }\n                } else {\n                    sequence.append(new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._selectedIndex, this._useNoteFilter, true));\n                    this._deletingPoint = true;\n                }\n            }\n        }\n        if (this._mouseDown || this._mouseOver) {\n            this._updatePath();\n        }\n    }\n\n    private _whenCursorReleased = (event: Event): void => {\n        if (this.container.offsetParent == null) return;\n        if (this._mouseDown && this._doc.lastChangeWas(this._dragChange) && this._dragChange != null) {\n            if (!this._addingPoint && !this._mouseDragging && !this._touchMode) {\n                if (this._selectedIndex < this._filterSettings.controlPointCount && this._selectedIndex != -1) {\n                    const point: FilterControlPoint = this._filterSettings.controlPoints[this._selectedIndex];\n                    let change: ChangeFilterAddPoint = new ChangeFilterAddPoint(this._doc, this._filterSettings, point, this._selectedIndex, this._useNoteFilter, true);\n                    if (!this._larger) {\n                        this._doc.record(change);\n                    }\n                }\n            } else if (!this._larger) {\n                this._doc.record(this._dragChange);\n            }\n            this._updatePath();\n            if (this._larger) {\n                this.selfUndoSettings.length = this.selfUndoHistoryPos+1;\n                this.selfUndoSettings.push(JSON.stringify(this._filterSettings.toJsonObject()));\n                this.selfUndoHistoryPos++;\n            }\n        }\n        this._dragChange = null;\n        this._mouseDragging = false;\n        this._deletingPoint = false;\n        this._mouseDown = false;\n        this._updateCursor();\n    }\n\n    private _findNearestFreqSlot(filterSettings: FilterSettings, targetFreq: number, ignoreIndex: number): number {\n        const roundedFreq: number = Math.round(targetFreq);\n        let lowerFreq: number = roundedFreq;\n        let upperFreq: number = roundedFreq;\n        let tryingLower: boolean = (roundedFreq <= targetFreq);\n        while (true) {\n            let foundConflict: boolean = false;\n            const currentFreq: number = tryingLower ? lowerFreq : upperFreq;\n            for (let i: number = 0; i < filterSettings.controlPointCount; i++) {\n                if (i == ignoreIndex) continue;\n                if (filterSettings.controlPoints[i].freq == currentFreq) {\n                    foundConflict = true;\n                    break;\n                }\n            }\n            if (!foundConflict) return currentFreq;\n            tryingLower = !tryingLower;\n            if (tryingLower) lowerFreq--;\n            if (!tryingLower) upperFreq++;\n        }\n    }\n\n    private static _circlePath(cx: number, cy: number, radius: number, reverse: boolean = false): string {\n        return `M ${cx - radius} ${cy} ` +\n            `a ${radius} ${radius} 0 1 ${reverse ? 1 : 0} ${radius * 2} 0 ` +\n            `a ${radius} ${radius} 0 1 ${reverse ? 1 : 0} ${-radius * 2} 0 `;\n    }\n\n    private _updatePath(): void {\n        this._highlight.style.display = \"none\";\n        this._label.textContent = \"\";\n\n        let controlPointPath: string = \"\";\n        let dottedLinePath: string = \"\";\n        for (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\n            const point: FilterControlPoint = this._filterSettings.controlPoints[i];\n            const pointX: number = this._freqToX(point.freq);\n            const pointY: number = this._gainToY(point.gain);\n\n            controlPointPath += FilterEditor._circlePath(pointX, pointY, this._pointRadius);\n\n            if (point.type == FilterType.highPass) {\n                dottedLinePath += \"M \" + 0 + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\n            } else if (point.type == FilterType.lowPass) {\n                dottedLinePath += \"M \" + this._editorWidth + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\n            }\n\n            if (this._selectedIndex == i && this._mouseOver && !this._mouseDown) {\n                this._highlight.setAttribute(\"cx\", String(pointX));\n                this._highlight.setAttribute(\"cy\", String(pointY));\n                this._highlight.style.display = \"\";\n\n                if (this.coordText != null) {\n                    this.coordText.innerText = \"(\" + point.freq + \", \" + point.gain + \")\";\n                }\n            }\n            if ((this._selectedIndex == i || (this._addingPoint && this._mouseDown && i == this._filterSettings.controlPointCount - 1)) && (this._mouseOver || this._mouseDown) && !this._deletingPoint) {\n                this._label.textContent = (i + 1) + \": \" + Config.filterTypeNames[point.type] + (this._larger ? \" @\" + prettyNumber(point.getHz()) + \"Hz\" : \"\");\n            }\n\n            if (this._larger) {\n                this._indicators[i].style.setProperty(\"display\", \"\");\n                this._indicators[i].setAttribute(\"x\", \"\" + (pointX - 7));\n                this._indicators[i].setAttribute(\"y\", \"\" + (pointY + 2));\n            }\n        }\n        this._controlPointPath.setAttribute(\"d\", controlPointPath);\n        this._dottedLinePath.setAttribute(\"d\", dottedLinePath);\n        if (this._addingPoint && !this._mouseDown && this._mouseOver) {\n            this._label.textContent = \"+ \" + Config.filterTypeNames[this._addedType];\n        }\n\n        // Hide unused control point labels\n        if (this._larger) {\n            for (let i: number = this._filterSettings.controlPointCount; i < Config.filterMaxPoints; i++) {\n                this._indicators[i].style.setProperty(\"display\", \"none\");\n            }\n        }\n\n        //let volumeCompensation: number = 1.0;\n        const standardSampleRate: number = 44800;\n        const filters: FilterCoefficients[] = [];\n        for (let i: number = 0; i < this._filterSettings.controlPointCount; i++) {\n            const point: FilterControlPoint = this._filterSettings.controlPoints[i];\n            const filter: FilterCoefficients = new FilterCoefficients();\n            point.toCoefficients(filter, standardSampleRate);\n            filters.push(filter);\n            //volumeCompensation *= point.getVolumeCompensationMult();\n        }\n\n        const response: FrequencyResponse = new FrequencyResponse();\n        let responsePath: string = \"M 0 \" + this._editorHeight + \" \";\n        for (let i: number = -1; i <= Config.filterFreqRange; i++) {\n            const hz: number = FilterControlPoint.getHzFromSettingValue(i);\n            const cornerRadiansPerSample: number = 2.0 * Math.PI * hz / standardSampleRate;\n            const real: number = Math.cos(cornerRadiansPerSample);\n            const imag: number = Math.sin(cornerRadiansPerSample);\n\n            let linearGain: number = 1.0; //volumeCompensation;\n            for (const filter of filters) {\n                response.analyzeComplex(filter, real, imag);\n                linearGain *= response.magnitude();\n            }\n\n            const gainSetting: number = Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter;\n            const y: number = this._gainToY(gainSetting);\n            const x: number = this._freqToX(i);\n            responsePath += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y) + \" \";\n        }\n\n        responsePath += \"L \" + this._editorWidth + \" \" + this._editorHeight + \" L 0 \" + this._editorHeight + \" z \";\n        this._responsePath.setAttribute(\"d\", responsePath);\n    }\n\n    // Swap to new filter settings all at once.\n    public swapToSettings(settings: FilterSettings, useHistory: boolean = false) {\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        new ChangeFilterSettings(this._doc, settings, this._filterSettings, this._useNoteFilter, this._subFilters, this._useNoteFilter ? instrument.noteSubFilters : instrument.eqSubFilters);\n        this._filterSettings = settings;\n        this._subFilters[this._subfilterIndex] = settings;\n        if (useHistory && this._larger) {\n            this.selfUndoSettings.length = this.selfUndoHistoryPos + 1;\n            this.selfUndoSettings.push(JSON.stringify((this._filterSettings.toJsonObject())));\n            this.selfUndoHistoryPos++;\n        }\n        this._updatePath();\n    }\n\n    // Save settings on prompt close (record a change from first settings to newest)\n    public saveSettings() {\n        let firstFilter: FilterSettings = new FilterSettings;\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        firstFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[0])));\n        this._doc.record(new ChangeFilterSettings(this._doc, this._subFilters[0], firstFilter, this._useNoteFilter, this._subFilters, this._useNoteFilter ? instrument.noteSubFilters : instrument.eqSubFilters), true);\n    }\n\n    // Self-undo history management\n    // Returns the subfilter index to swap to, if any\n    public undo(): number {\n        if (this.selfUndoHistoryPos > 0) {\n            this.selfUndoHistoryPos--;\n            // Jump back and load latest state of this subfilter. Also save subfilter settings for current index\n            if (this.selfUndoSettings[this.selfUndoHistoryPos + 1] != null && this.selfUndoSettings[this.selfUndoHistoryPos + 1].startsWith(\"jmp\")) {\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos + 1];\n                let jumpIndex = +str.substring(3, str.indexOf(\"|\"));\n                this.swapToSubfilter(this._subfilterIndex, jumpIndex);\n                return jumpIndex;\n            // Jumping to FIRST state of this subfilter\n            } else if (this.selfUndoSettings[this.selfUndoHistoryPos].startsWith(\"jmp\")) {\n                let savedFilter: FilterSettings = new FilterSettings();\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos];\n                savedFilter.fromJsonObject(JSON.parse(str.substring(str.indexOf(\":\") + 1)));\n                this.swapToSettings(savedFilter, false);\n            } else {\n                let savedFilter: FilterSettings = new FilterSettings();\n                savedFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[this.selfUndoHistoryPos])));\n                this.swapToSettings(savedFilter, false);\n            }\n        }\n        return -1;\n    }\n\n    // Returns the subfilter index to swap to, if any\n    public redo(): number {\n        if (this.selfUndoHistoryPos < this.selfUndoSettings.length-1) {\n            this.selfUndoHistoryPos++;\n            // Check if next index in undo queue is a command to jump to a new filter index\n            if (this.selfUndoSettings[this.selfUndoHistoryPos].startsWith(\"jmp\")) {\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos];\n                let jumpIndex = +str.substring(str.indexOf(\"|\") + 1, str.indexOf(\":\"));\n                this.swapToSubfilter(this._subfilterIndex, jumpIndex, false);\n                return jumpIndex;\n            } else {\n                let savedFilter: FilterSettings = new FilterSettings();\n                savedFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[this.selfUndoHistoryPos])));\n                this.swapToSettings(savedFilter, false);\n            }\n        }\n        return -1;\n\n    }\n\n    public resetToInitial() {\n        this.selfUndoHistoryPos = 1;\n        this.undo();\n    }\n\n    public swapSubfilterIndices(newIndex: number) {\n        if (this._selectedIndex == -1)\n            return;\n\n        if (newIndex >= this._filterSettings.controlPointCount)\n            return;\n\n        let tmp: FilterControlPoint = this._filterSettings.controlPoints[this._selectedIndex];\n        this._filterSettings.controlPoints[this._selectedIndex] = this._filterSettings.controlPoints[newIndex];\n        this._filterSettings.controlPoints[newIndex] = tmp;\n\n        this.render();\n    }\n\n    public swapToSubfilter(oldIndex: number, newIndex: number, useHistory: boolean = false) {\n        if (oldIndex != newIndex) {\n            // Save current subfilter\n            let currFilter: FilterSettings = new FilterSettings();\n            currFilter.fromJsonObject(this._filterSettings.toJsonObject());\n            this._subFilters[oldIndex] = currFilter;\n\n            // Copy main filter at this time\n            if (this._subFilters[newIndex] == undefined) {\n                let parsedFilter: FilterSettings = new FilterSettings();\n                parsedFilter.fromJsonObject(this._subFilters[0].toJsonObject());\n                this._subFilters[newIndex] = parsedFilter;\n            }\n\n            // Record the swap in undo history\n            if (useHistory) {\n                this.selfUndoSettings.length = this.selfUndoHistoryPos + 1;\n                // Swap from|to:filterInitSettings\n                this.selfUndoSettings.push(\"jmp\" + oldIndex + \"|\" + newIndex + \":\" + JSON.stringify(this._subFilters[newIndex].toJsonObject()));\n                this.selfUndoHistoryPos++;\n            }\n\n            this._subfilterIndex = newIndex;\n            // Never use history here since the swap action is itself history-generating\n            this.swapToSettings(this._subFilters[newIndex], false);\n        }\n\n    }\n\n    public render(activeMods: boolean = false): void {\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        const filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\n        let displayMods: boolean = (activeMods && !this._larger && !this._mouseOver && !this._mouseDragging && !this._mouseDown && this._doc.synth.playing)\n        if (displayMods)\n            this._controlPointPath.style.setProperty(\"fill\", `${ColorConfig.overwritingModSlider}`);\n        else if (!this._larger)\n            this._controlPointPath.style.setProperty(\"fill\", \"currentColor\");\n\n        if (this._filterSettings != filterSettings) {\n            this._dragChange = null;\n            this._mouseDown = false;\n        }\n        this._filterSettings = filterSettings;\n        let targetSettings: FilterSettings = filterSettings;\n        if (!this._mouseDown) this._updateCursor();\n\n        // If modulators are active, show synth's current filter point settings instead of real points\n        if (displayMods) {\n            // TODO: Re-compute default point freqs/gains only when needed\n            targetSettings = (this._useNoteFilter) ? instrument.tmpNoteFilterStart! : instrument.tmpEqFilterStart!;\n            if (targetSettings == null) targetSettings = (this._useNoteFilter) ? instrument.noteFilter : instrument.eqFilter;\n            this._filterSettings = targetSettings!;\n        }\n\n        let pointTypes: number = 0;\n        let pointFreqs: number = 0;\n        let pointGains: number = 0;\n        for (let i: number = 0; i < targetSettings.controlPointCount; i++) {\n            const point: FilterControlPoint = targetSettings.controlPoints[i];\n            pointTypes = pointTypes * FilterType.length + point.type;\n            pointFreqs = pointFreqs * Config.filterFreqRange + point.freq;\n            pointGains = pointGains * Config.filterGainRange + point.gain;\n        }\n        if (this._renderedSelectedIndex != this._selectedIndex ||\n            this._renderedPointCount != targetSettings.controlPointCount ||\n            this._renderedPointTypes != pointTypes ||\n            this._renderedPointFreqs != pointFreqs ||\n            this._renderedPointGains != pointGains) {\n            this._renderedSelectedIndex = this._selectedIndex;\n            this._renderedPointCount = targetSettings.controlPointCount;\n            this._renderedPointTypes = pointTypes;\n            this._renderedPointFreqs = pointFreqs;\n            this._renderedPointGains = pointGains;\n            this._updatePath();\n        }\n\n        // Return to normal filter settings\n        if (displayMods) {\n            this._filterSettings = filterSettings;\n        }\n\n        /*\n        if (this._renderedKey != this._doc.song.key) {\n            this._renderedKey = this._doc.song.key;\n            const tonicHz: number = Instrument.frequencyFromPitch(Config.keys[this._doc.song.key].basePitch);\n            const x: number = this._freqToX(FilterControlPoint.getSettingValueFromHz(tonicHz));\n            this._octaves.setAttribute(\"x\", String(x));\n        }\n        */\n    }\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Config } from \"../synth/SynthConfig\";\nimport { FilterEditor } from \"./FilterEditor\";\nimport { SongEditor } from \"./SongEditor\";\nimport { FilterSettings } from \"../synth/synth\";\nimport { ColorConfig } from \"./ColorConfig\";\n\n//namespace beepbox {\nconst { button, div, h2, p } = HTML;\n\nexport class CustomFilterPrompt implements Prompt {\n\n\tpublic filterEditor: FilterEditor;\n\n\tpublic filterData: FilterSettings = new FilterSettings;\n\tpublic startingFilterData: FilterSettings = new FilterSettings;\n\n\tprivate _subfilterIndex = 0;\n\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\n\n\tpublic readonly _filterButtons: HTMLButtonElement[] = [];\n\n\tpublic readonly _filterButtonContainer: HTMLDivElement = div({class: \"instrument-bar\", style: \"justify-content: center;\"});\n\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\n\tprivate readonly _filterContainer: HTMLDivElement = div({ style: \"width: 100%; display: flex; flex-direction: row; align-items: center; justify-content: center;\" });\n\n\tprivate readonly _editorTitle: HTMLDivElement = div({}, h2(\"Edit Filter\"));\n\n\tprivate readonly _filterCopyButton: HTMLButtonElement = button({ style: \"width:86px; margin-right: 5px;\", class: \"copyButton\" }, [\n\t\t\"Copy\",\n\t\t// Copy icon:\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\n\t\t]),\n\t]);\n\tprivate readonly _filterPasteButton: HTMLButtonElement = button({ style: \"width:86px;\", class: \"pasteButton\" }, [\n\t\t\"Paste\",\n\t\t// Paste icon:\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\n\t\t]),\n\t]);\n\tprivate readonly _filterCopyPasteContainer: HTMLDivElement = div({ style: \"width: 185px;\" }, this._filterCopyButton, this._filterPasteButton);\n\n\tprivate readonly _filterCoordinateText: HTMLDivElement = div({ style: \"text-align: left; margin-bottom: 0px; font-size: x-small; height: 1.3em; color: \" + ColorConfig.secondaryText + \";\"}, p(\"\"));\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\n\t\tthis._editorTitle,\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis._playButton\n\t\t),\n\t\tthis._filterButtonContainer,\n\t\tthis._filterContainer,\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t\tthis._filterCopyPasteContainer,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor, private _useNoteFilter: boolean) {\n\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\n\t\tthis._filterCopyButton.addEventListener(\"click\", this._copyFilterSettings);\n\t\tthis._filterPasteButton.addEventListener(\"click\", this._pasteFilterSettings);\n\t\tthis.updatePlayButton();\n\t\tlet colors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\n\n\t\tthis.filterEditor = new FilterEditor(_doc, _useNoteFilter, true);\n\t\tthis._filterContainer.appendChild(this.filterEditor.container);\n\n\t\t// Add coordinates to editor\n\t\tthis.filterEditor.container.insertBefore(this._filterCoordinateText, this.filterEditor.container.firstChild);\n\t\tthis.filterEditor.coordText = this._filterCoordinateText;\n\n\t\tthis._editorTitle.children[0].innerHTML = (_useNoteFilter) ? \"Edit Note Filter\" : \"Edit EQ Filter\";\n\n\t\tlet newButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"max-width: 5em;\"}, \"Main\");\n\t\tthis._filterButtonContainer.appendChild(newButton);\n\t\tthis._filterButtons.push(newButton);\n\t\tnewButton.addEventListener(\"click\", () => { this._setSubfilter(0); });\n\t\tfor (let i: number = 1; i < Config.filterMorphCount; i++) {\n\t\t\tlet newSubButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"max-width: 2em;\"}, \"\" + i);\n\t\t\tthis._filterButtons.push(newSubButton);\n\t\t\tthis._filterButtonContainer.appendChild(newSubButton);\n\t\t\tnewSubButton.addEventListener(\"click\", () => { this._setSubfilter(i); });\n\t\t}\n\t\tthis._filterButtons[Config.filterMorphCount - 1].classList.add(\"last-button\");\n\t\tthis._filterButtons[0].classList.add(\"selected-instrument\");\n\n\t\tthis._filterButtonContainer.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n\t\tthis._filterButtonContainer.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n\t\tthis._filterButtonContainer.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n\t\tthis._filterButtonContainer.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n\n\t\tthis._filterContainer.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis.filterEditor.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\n\t\tsetTimeout(() => this._playButton.focus());\n\n\t\tthis.filterEditor.render();\n\t}\n\n\tprivate _setSubfilter = (index: number, useHistory: boolean = true, doSwap: boolean = true): void => {\n\t\tthis._filterButtons[this._subfilterIndex].classList.remove(\"selected-instrument\");\n\t\tif ( doSwap ) this.filterEditor.swapToSubfilter(this._subfilterIndex, index, useHistory);\n\t\tthis._subfilterIndex = index;\n\t\tthis._filterButtons[index].classList.add(\"selected-instrument\");\n    }\n\n\tprivate _copyFilterSettings = (): void => {\n\t\tconst filterCopy: any = this._useNoteFilter\n\t\t\t? this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].noteFilter.toJsonObject()\n\t\t\t: this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].eqFilter.toJsonObject();\n\t\twindow.localStorage.setItem(\"filterCopy\", JSON.stringify(filterCopy));\n\t}\n\n\tprivate _pasteFilterSettings = (): void => {\n\n\t\tlet filterCopy: FilterSettings = new FilterSettings();\n\t\tfilterCopy.fromJsonObject(JSON.parse(String(window.localStorage.getItem(\"filterCopy\"))));\n\t\tif (filterCopy != null) {\n\t\t\tthis.filterEditor.swapToSettings(filterCopy, true);\n\t\t}\n    }\n\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif (event.keyCode == 90) { // z\n\t\t\tlet newIdx = this.filterEditor.undo();\n\t\t\tif (newIdx >= 0) {\n\t\t\t\tthis._setSubfilter(newIdx, false, false);\n            }\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\tif (event.keyCode == 89) { // y\n\t\t\tlet newIdx = this.filterEditor.redo();\n\t\t\tif (newIdx >= 0) {\n\t\t\t\tthis._setSubfilter(newIdx, false, false);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\t// Number 1-9\n\t\tif (event.keyCode >= 49 && event.keyCode <= 57) {\n\t\t\tif (!event.shiftKey) {\n\t\t\t\tthis.filterEditor.swapSubfilterIndices(event.keyCode - 49);\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _togglePlay = (): void => {\n\t\tthis._songEditor.togglePlay();\n\t\tthis.updatePlayButton();\n\t}\n\n\tpublic updatePlayButton(): void {\n\t\tif (this._doc.synth.playing) {\n\t\t\tthis._playButton.classList.remove(\"playButton\");\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\n\t\t\tthis._playButton.title = \"Pause (Space)\";\n\t\t\tthis._playButton.innerText = \"Pause\";\n\t\t} else {\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\n\t\t\tthis._playButton.classList.add(\"playButton\");\n\t\t\tthis._playButton.title = \"Play (Space)\";\n\t\t\tthis._playButton.innerText = \"Play\";\n\t\t}\n\t}\n\n\tprivate _close = (): void => {\n\t\tthis._doc.prompt = null;\n\t\t// Restore filter settings to default\n\t\tthis.filterEditor.resetToInitial();\n\t\tthis._doc.undo();\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\n\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\n\t}\n\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t\telse if (event.keyCode == 32) { // space\n\t\t\tthis._togglePlay();\n\t\t\tevent.preventDefault();\n\t\t}\n\t\telse if (event.keyCode == 90) { // z\n\t\t\tthis.filterEditor.undo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 89) { // y\n\t\t\tthis.filterEditor.redo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 219) { // [\n\t\t\tthis._doc.synth.goToPrevBar();\n\t\t}\n\t\telse if (event.keyCode == 221) { // ]\n\t\t\tthis._doc.synth.goToNextBar();\n\t\t}\n\t\telse if (event.keyCode >= 48 && event.keyCode <= 57) { // 0-9\n\t\t\tif (event.shiftKey) {\n\t\t\t\tthis._setSubfilter(event.keyCode - 48);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\tthis._doc.prompt = null;\n\t\tthis.filterEditor.saveSettings();\n\t}\n}\n//}\n","// Copyright (C) 2012-2023 John Nesky and contributing authors, distributed under the MIT license, see the accompanying LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\nimport { prettyNumber } from \"./EditorConfig\";\nimport { ChangeGroup } from \"./Change\";\nimport { ChangeEnsurePatternExists, ChangePatternNumbers, ChangeNoteAdded, ChangeInsertBars } from \"./changes\";\nimport { Note, NotePin, Pattern, makeNotePin } from \"../synth/synth\";\n\nconst { button, div, h2, input } = HTML;\n\n// @TODO:\n// - Better pattern management.\n// - Make it possible to hear the generated sequences before commiting to them?\n//   Probably mostly worth it for the reduced friction of turning knobs and\n//   hearing the results nearly instantaneously, given that if undo is working\n//   it's not really a huge burden to try something again.\n// - Is it worth trying to reuse SVG elements in the rendering procedures like\n//   _renderClock or _renderBarPreview?\n// - Profile the note merging code and improve its performance.\n// - When a pattern selection is active, check if there's one stored sequence\n//   for each selected channel, and if so, use them instead of using defaults.\n// - Save the current sequence index in localStorage?\n// - Pick pitch in a different way? I don't have many good ideas beyond\n//   separated named note and octave lists though.\n// - Add a way to specify a custom pitch sequence to be used when emitting\n//   notes. Probably fairly complicated. Overlaps with the pattern editor\n//   somewhat.\n\ninterface Sequence {\n\tsteps: number;\n\tpulses: number;\n\trotation: number;\n\tstepSizeNumerator: number;\n\tstepSizeDenominator: number;\n\tchannel: number;\n\tpitch: number;\n\tinvert: boolean;\n\tgenerateFadingNotes: boolean;\n}\n\nfunction gcd(x: number, y: number): number {\n\twhile (y !== 0) {\n\t\tconst z: number = x % y;\n\t\tx = y;\n\t\ty = z;\n\t}\n\treturn x;\n}\n\nfunction lcm(a: number, b: number): number {\n\treturn Math.floor(Math.abs(a * b) / gcd(a, b));\n}\n\n// Not exactly a good fraction/rational datatype, but it will do for now.\ntype Fraction = [number, number];\n\nfunction fraction(a: number, b: number): Fraction {\n\tlet n: number = a;\n\tlet d: number = b;\n\tconst g: number = gcd(n, d);\n\tif (g > 1) {\n\t\tn = Math.floor(n / g);\n\t\td = Math.floor(d / g);\n\t}\n\treturn [n, d];\n}\n\nfunction fractionMul(a: Fraction, b: Fraction): Fraction {\n\tconst an: number = a[0];\n\tconst ad: number = a[1];\n\tconst bn: number = b[0];\n\tconst bd: number = b[1];\n\treturn fraction(an * bn, ad * bd);\n}\n\nfunction fractionDiv(a: Fraction, b: Fraction): Fraction {\n\tconst an: number = a[0];\n\tconst ad: number = a[1];\n\tconst bn: number = b[0];\n\tconst bd: number = b[1];\n\treturn fraction(an * bd, ad * bn);\n}\n\n// https://math.stackexchange.com/questions/44836/rational-numbers-lcm-and-hcf\nfunction fractionLCM(a: Fraction, b: Fraction): Fraction {\n\tconst an: number = a[0];\n\tconst ad: number = a[1];\n\tconst bn: number = b[0];\n\tconst bd: number = b[1];\n\treturn fraction(lcm(an, bn), gcd(ad, bd));\n}\n\nfunction generateEuclideanRhythm(steps: number, pulses: number, offset: number): number[] {\n\t// Negative amount of pulses makes no sense.\n\tsteps = Math.max(0, steps);\n\t// More pulses than steps makes no sense.\n\tpulses = Math.max(0, Math.min(steps, pulses));\n\t// This algorithm is described in the extended version of the paper\n\t// \"The Euclidean Algorithm Generates Traditional Musical Rhythms\"\n\t// by Godfried Toussaint. It can be found here:\n\t// http://cgm.cs.mcgill.ca/~godfried/publications/banff-extended.pdf\n\tlet columns: number[][] = [];\n\tfor (let step: number = 0; step < steps; step++)\n\t\tcolumns.push([step >= pulses ? 0 : 1]);\n\tlet a: number = steps;\n\tlet b: number = steps - pulses;\n\tif (a > 0 && b > 0) {\n\t\t// This is the subtraction-based version of Euclid's algorithm:\n\t\t// https://en.wikipedia.org/wiki/Euclidean_algorithm#Implementations\n\t\twhile (a !== b) {\n\t\t\tif (a > b) {\n\t\t\t\ta = a - b;\n\t\t\t} else {\n\t\t\t\tb = b - a;\n\t\t\t}\n\t\t\tconst amountToMove: number = Math.min(a, b);\n\t\t\tif (amountToMove <= 1) continue;\n\t\t\tfor (let i: number = 0; i < amountToMove; i++) {\n\t\t\t\tconst moved: number[] | undefined = columns.pop();\n\t\t\t\tif (moved != null) for (const v of moved) columns[i].push(v);\n\t\t\t}\n\t\t}\n\t}\n\tlet pattern: number[] = [];\n\tfor (const c of columns) for (const v of c) pattern.push(v);\n\tif (offset !== 0) {\n\t\t// Wrap.\n\t\toffset = (offset % pattern.length + pattern.length) % pattern.length;\n\t\t// Flip the offset around so that rotation goes clockwise.\n\t\toffset = pattern.length - offset;\n\t\tpattern = pattern.slice(offset).concat(pattern.slice(0, offset));\n\t}\n\treturn pattern;\n}\n\nexport class EuclideanRhythmPrompt implements Prompt {\n\tprivate readonly _minSteps: number = 2;\n\tprivate readonly _maxSteps: number = 64;\n\n\tprivate readonly _maxSequences: number = 14;\n\n\tprivate _maxChannel: number = Config.pitchChannelCountMax + Config.noiseChannelCountMax - 1; // Inclusive.\n\n\tprivate readonly _localStorageKey: string = \"euclidGenMemory\";\n\n\tprivate readonly _sequences: Sequence[];\n\tprivate _generatedSequences: (number[])[];\n\tprivate _sequenceIndex: number = 0;\n\tprivate _renderedSequenceCount: number = 0;\n\tprivate _highlightedSequenceIndex: number = -1;\n\n\tprivate _startBar: number = 0;\n\tprivate _barAmount: number = 1;\n\tprivate _barsAvailable: number = Config.barCountMax;\n\n\tprivate _barPreviewBarIndex: number = 0;\n\tprivate readonly _barPreviewWidth: number = 400;\n\tprivate readonly _barPreviewHeight: number = 10;\n\n\tprivate readonly _clockWidth: number = 100;\n\tprivate readonly _clockHeight: number = 100;\n\tprivate readonly _clockPointMinRadius: number = this._clockWidth / this._maxSteps;\n\tprivate readonly _clockPointMaxRadius: number = this._clockWidth / 16;\n\tprivate readonly _clockPadding: number = this._clockWidth / this._maxSteps;\n\tprivate readonly _clockRadius: number = this._clockWidth / 2 - this._clockPointMaxRadius - this._clockPadding;\n\n\tprivate readonly _sequenceButtons: HTMLButtonElement[] = [];\n\tprivate readonly _sequenceRemoveButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"flex-grow: 0; flex-basis: 30px;\" },\n\t\t// Based on `--close-symbol`.\n\t\tSVG.svg({ width: \"26\", height: \"26\", viewBox: \"-13 -13 26 26\", \"pointer-events\": \"none\" },\n\t\t\tSVG.path({ d: \"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\", fill: ColorConfig.primaryText })\n\t\t)\n\t);\n\tprivate readonly _sequenceAddButton: HTMLButtonElement = button({ class: \"no-underline last-button\", style: \"flex-grow: 0; flex-basis: 30px;\" },\n\t\t// Based on `--add-symbol`.\n\t\tSVG.svg({ width: \"26\", height: \"26\", viewBox: \"-13 -13 26 26\", \"pointer-events\": \"none\" },\n\t\t\tSVG.path({ d: \"M -8 -1 L -1 -1 L -1 -8 L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\", fill: ColorConfig.primaryText })\n\t\t)\n\t);\n\tprivate readonly _sequenceButtonContainer: HTMLDivElement = div({ class: \"instrument-bar\", style: \"justify-content: center; width: 100%;\" },\n\t\tthis._sequenceRemoveButton,\n\t\tthis._sequenceAddButton\n\t);\n\n\tprivate readonly _barPreviewBackground: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _barPreviewSteps: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _barPreviewLabel: HTMLDivElement = div({ style: `flex-grow: 1; color: ${ColorConfig.secondaryText}` });\n\tprivate readonly _barPreviewGoToFirstButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\" },\n\t\t// Based on `--prev-bar-symbol`.\n\t\tSVG.svg({ width: \"26\", height: \"26\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\" },\n\t\t\tSVG.rect({ x: \"-6\", y: \"-6\", width: \"2\", height: \"12\", fill: ColorConfig.primaryText }),\n\t\t\tSVG.path({ d: \"M 6 -6 L 6 6 L -3 0 z\", fill: ColorConfig.primaryText })\n\t\t)\n\t);\n\tprivate readonly _barPreviewGoBackButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 1em;\" },\n\t\tSVG.svg({ width: \"24\", height: \"26\", viewBox: \"-10 -14 24 26\", \"pointer-events\": \"none\" },\n\t\t\tSVG.path({ d: \"M 6 -6 L 6 6 L -3 0 z\", fill: ColorConfig.primaryText })\n\t\t)\n\t);\n\tprivate readonly _barPreviewGoForwardButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\" },\n\t\tSVG.svg({ width: \"24\", height: \"26\", viewBox: \"-14 -14 24 26\", \"pointer-events\": \"none\" },\n\t\t\tSVG.path({ d: \"M -6 -6 L -6 6 L 3 0 z\", fill: ColorConfig.primaryText })\n\t\t)\n\t);\n\tprivate readonly _barPreviewGoToLastButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 1em;\" },\n\t\t// Based on `--next-bar-symbol`.\n\t\tSVG.svg({ width: \"26\", height: \"26\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\" },\n\t\t\tSVG.rect({ x: \"4\", y: \"-6\", width: \"2\", height: \"12\", fill: ColorConfig.primaryText }),\n\t\t\tSVG.path({ d: \"M -6 -6 L -6 6 L 3 0 z\", fill: ColorConfig.primaryText })\n\t\t)\n\t);\n\n\tprivate readonly _clockWire: SVGCircleElement = SVG.circle({ cx: this._clockWidth / 2, cy: this._clockHeight / 2, r: this._clockRadius, stroke: ColorConfig.primaryText, \"stroke-width\": \"0.5\", fill: \"none\" });\n\tprivate readonly _clockPoints: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\n\tprivate readonly _stepsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: this._minSteps, max: this._maxSteps, value: \"8\", step: \"1\" });\n\tprivate readonly _pulsesStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"0\", max: \"8\", value: \"5\", step: \"1\" });\n\tprivate readonly _rotationStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"0\", max: this._maxSteps, value: \"0\", step: \"1\" });\n\tprivate readonly _stepSizeNumeratorStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"1\", max: Config.partsPerBeat, value: \"1\", step: \"1\" });\n\tprivate readonly _stepSizeDenominatorStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"1\", max: Config.partsPerBeat, value: \"4\", step: \"1\" });\n\n\t// Keep in mind this counts from 1 (to match the rest of the UI).\n\tprivate readonly _channelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"1\", max: this._maxChannel + 1, value: \"1\", step: \"1\" });\n\n\tprivate readonly _pitchStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"0\", max: Config.maxPitch, value: \"0\", step: \"1\" });\n\tprivate readonly _barAmountStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", min: \"1\", max: Config.barCountMax, value: \"1\", step: \"1\" });\n\n\tprivate readonly _extendUntilLoopButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 1em;\" }, \"Extend until loop\");\n\n\tprivate readonly _generateFadingNotesBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: 1em;\" });\n\n\tprivate readonly _invertBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: 1em;\" });\n\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width: 45%;\" }, \"Okay\");\n\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\n\t\th2(\"Generate Euclidean Rhythm\"),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center;\" },\n\t\t\tthis._sequenceButtonContainer\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\n\t\t\tdiv({ style: \"flex-grow: 0; flex-shrink: 0;\" },\n\t\t\t\tthis._barPreviewGoToFirstButton,\n\t\t\t\tthis._barPreviewGoBackButton\n\t\t\t),\n\t\t\tthis._barPreviewLabel,\n\t\t\tdiv({ style: \"flex-grow: 0; flex-shrink: 0;\" },\n\t\t\t\tthis._barPreviewGoForwardButton,\n\t\t\t\tthis._barPreviewGoToLastButton\n\t\t\t),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tSVG.svg({ \"pointer-events\": \"none\", style: \"touch-action: none; overflow: hidden;\", width: \"100%\", height: \"20px\", viewBox: `0 0 ${this._barPreviewWidth} ${this._barPreviewHeight}`, preserveAspectRatio: \"none\" },\n\t\t\t\tthis._barPreviewBackground,\n\t\t\t\tthis._barPreviewSteps\n\t\t\t),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-evenly;\" },\n\t\t\tdiv({ style: \"max-width: 150px; height: 100%;\" },\n\t\t\t\tSVG.svg({ \"pointer-events\": \"none\", width: \"100%\", height: \"100%\", style: \"touch-action: none; overflow: hidden; margin-right: 1.5em; max-width: 150px; height: 100%;\", viewBox: `0 0 ${this._clockWidth} ${this._clockHeight}`, preserveAspectRatio: \"none\" },\n\t\t\t\t\tthis._clockWire,\n\t\t\t\t\tthis._clockPoints\n\t\t\t\t),\n\t\t\t),\n\t\t\tdiv({ style: \"display: flex; height: 100%;\" },\n\t\t\t\tdiv({ style: \"flex-grow: 1; \" },\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end;\" },\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\t\t\t\"Steps\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis._stepsStepper\n\t\t\t\t\t),\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-top: 0.5em;\" },\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\t\t\t\"Pulses\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis._pulsesStepper\n\t\t\t\t\t),\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-top: 0.5em;\" },\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\t\t\t\"Rotation\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis._rotationStepper\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tdiv({ style: \"flex-grow: 1; margin-left: 1em;\" },\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-bottom: 1em;\" },\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\t\t\t\"Size\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: column;\" },\n\t\t\t\t\t\t\tthis._stepSizeNumeratorStepper,\n\t\t\t\t\t\t\tthis._stepSizeDenominatorStepper\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-top: 0.5em;\" },\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\t\t\t\"Channel\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis._channelStepper\n\t\t\t\t\t),\n\t\t\t\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 3em; justify-content: flex-end; margin-top: 0.5em;\" },\n\t\t\t\t\t\tdiv({ style: `text-align: right; flex-grow: 1; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\t\t\t\"Pitch\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis._pitchStepper\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Generate fading notes\"\n\t\t\t),\n\t\t\tthis._generateFadingNotesBox,\n\t\t\tdiv({ style: `text-align: right; color: ${ColorConfig.primaryText}; margin-left: 1em;` },\n\t\t\t\t\"Invert\"\n\t\t\t),\n\t\t\tthis._invertBox,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Length (in bars)\"\n\t\t\t),\n\t\t\tthis._barAmountStepper,\n\t\t\tthis._extendUntilLoopButton\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._startBar = this._doc.bar;\n\t\tthis._barPreviewBarIndex = this._startBar;\n\n\t\tthis._barsAvailable = Config.barCountMax - this._startBar;\n\t\tthis._barAmountStepper.max = this._barsAvailable + \"\";\n\n\t\tthis._maxChannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1;\n\t\tthis._channelStepper.max = (this._maxChannel + 1) + \"\";\n\n\t\tconst defaultSteps: number = Math.max(this._minSteps, Math.min(this._maxSteps, this._doc.song.beatsPerBar));\n\t\tconst defaultPulses: number = Math.max(0, Math.min(defaultSteps, 5));\n\n\t\tthis._sequences = [{\n\t\t\tsteps: defaultSteps,\n\t\t\tpulses: defaultPulses,\n\t\t\trotation: 0,\n\t\t\tstepSizeNumerator: 1,\n\t\t\tstepSizeDenominator: 4,\n\t\t\tchannel: Math.max(0, Math.min(this._maxChannel, this._doc.channel)),\n\t\t\tpitch: 0,\n\t\t\tinvert: false,\n\t\t\tgenerateFadingNotes: false,\n\t\t}];\n\n\t\tif (this._doc.selection.boxSelectionActive) {\n\t\t\t// If a selection is active, set up some default sequences, one per\n\t\t\t// selected channel.\n\t\t\tthis._startBar = this._doc.selection.boxSelectionBar;\n\t\t\tthis._barPreviewBarIndex = this._startBar;\n\n\t\t\tthis._barAmount = Math.max(1, Math.min(this._barsAvailable, this._doc.selection.boxSelectionWidth));\n\n\t\t\tthis._sequences[0].channel = Math.max(0, Math.min(this._maxChannel, this._doc.selection.boxSelectionChannel));\n\n\t\t\tfor (let i: number = 1; i < this._doc.selection.boxSelectionHeight; i++) {\n\t\t\t\tthis._sequences.push({\n\t\t\t\t\tsteps: defaultSteps,\n\t\t\t\t\tpulses: defaultPulses,\n\t\t\t\t\trotation: 0,\n\t\t\t\t\tstepSizeNumerator: 1,\n\t\t\t\t\tstepSizeDenominator: 4,\n\t\t\t\t\tchannel: Math.max(0, Math.min(this._maxChannel, this._doc.selection.boxSelectionChannel + i)),\n\t\t\t\t\tpitch: 0,\n\t\t\t\t\tinvert: false,\n\t\t\t\t\tgenerateFadingNotes: false,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// Otherwise, load up the sequences generated previously. Keeping these\n\t\t\t// is probably a better experience for tweaking purposes.\n\t\t\tconst savedData: any = JSON.parse(String(window.localStorage.getItem(this._localStorageKey)));\n\t\t\tif (savedData != null) {\n\t\t\t\tconst rawSequences: any = savedData[\"sequences\"];\n\t\t\t\tif (rawSequences != null && Array.isArray(rawSequences)) {\n\t\t\t\t\tlet parsedSequences: Sequence[] = [];\n\t\t\t\t\tfor (let rawSequence of rawSequences) {\n\t\t\t\t\t\tparsedSequences.push({\n\t\t\t\t\t\t\tsteps: Math.max(this._minSteps, Math.min(this._maxSteps, rawSequence[\"steps\"] ?? this._doc.song.beatsPerBar)),\n\t\t\t\t\t\t\tpulses: Math.max(0, Math.min(this._maxSteps, rawSequence[\"pulses\"] ?? 5)),\n\t\t\t\t\t\t\trotation: Math.max(0, Math.min(this._maxSteps, rawSequence[\"rotation\"] ?? 0)),\n\t\t\t\t\t\t\tstepSizeNumerator: Math.max(1, Math.min(Config.partsPerBeat, rawSequence[\"stepSizeNumerator\"] ?? 1)),\n\t\t\t\t\t\t\tstepSizeDenominator: Math.max(1, Math.min(Config.partsPerBeat, rawSequence[\"stepSizeDenominator\"] ?? 4)),\n\t\t\t\t\t\t\tchannel: Math.max(0, Math.min(this._maxChannel, rawSequence[\"channel\"])),\n\t\t\t\t\t\t\tpitch: rawSequence[\"pitch\"] ?? 0,\n\t\t\t\t\t\t\tinvert: rawSequence[\"invert\"] ?? false,\n\t\t\t\t\t\t\tgenerateFadingNotes: rawSequence[\"generateFadingNotes\"] ?? false,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis._sequences = parsedSequences;\n\n\t\t\t\t\tif (this._sequences.length === 1) {\n\t\t\t\t\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\t\t\t\t\tconst channel: number = Math.max(0, Math.min(this._maxChannel, this._doc.channel));\n\t\t\t\t\t\tsequence.channel = channel;\n\n\t\t\t\t\t\tconst maxPitch: number = this._doc.song.getChannelIsNoise(channel) ? (Config.drumCount - 1) : Config.maxPitch;\n\t\t\t\t\t\tsequence.pitch = Math.max(0, Math.min(maxPitch, sequence.pitch));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._barAmount = Math.max(1, Math.min(this._barsAvailable, savedData[\"barAmount\"] ?? this._barAmount));\n\t\t\t}\n\t\t}\n\n\t\tthis._generateAllSequences();\n\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis._sequenceButtonContainer.addEventListener(\"click\", this._whenSelectSequence);\n\t\tthis._barPreviewGoToFirstButton.addEventListener(\"click\", this._whenBarPreviewGoToFirstClicked);\n\t\tthis._barPreviewGoBackButton.addEventListener(\"click\", this._whenBarPreviewGoBackClicked);\n\t\tthis._barPreviewGoForwardButton.addEventListener(\"click\", this._whenBarPreviewGoForwardClicked);\n\t\tthis._barPreviewGoToLastButton.addEventListener(\"click\", this._whenBarPreviewGoToLastClicked);\n\t\tthis._stepsStepper.addEventListener(\"change\", this._whenStepsChanges);\n\t\tthis._pulsesStepper.addEventListener(\"change\", this._whenPulsesChanges);\n\t\tthis._rotationStepper.addEventListener(\"change\", this._whenRotationChanges);\n\t\tthis._stepSizeNumeratorStepper.addEventListener(\"change\", this._whenStepSizeChanges);\n\t\tthis._stepSizeDenominatorStepper.addEventListener(\"change\", this._whenStepSizeChanges);\n\t\tthis._channelStepper.addEventListener(\"change\", this._whenChannelChanges);\n\t\tthis._pitchStepper.addEventListener(\"change\", this._whenPitchChanges);\n\t\tthis._barAmountStepper.addEventListener(\"change\", this._whenBarAmountChanges);\n\t\tthis._invertBox.addEventListener(\"change\", this._whenInvertChanges);\n\t\tthis._generateFadingNotesBox.addEventListener(\"change\", this._whenGenerateFadingNotesChanges);\n\t\tthis._extendUntilLoopButton.addEventListener(\"click\", this._whenExtendUntilLoopClicked);\n\n\t\tthis._initialRender();\n\t\tthis._render();\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis._sequenceButtonContainer.removeEventListener(\"click\", this._whenSelectSequence);\n\t\tthis._barPreviewGoToFirstButton.removeEventListener(\"click\", this._whenBarPreviewGoToFirstClicked);\n\t\tthis._barPreviewGoBackButton.removeEventListener(\"click\", this._whenBarPreviewGoBackClicked);\n\t\tthis._barPreviewGoForwardButton.removeEventListener(\"click\", this._whenBarPreviewGoForwardClicked);\n\t\tthis._barPreviewGoToLastButton.removeEventListener(\"click\", this._whenBarPreviewGoToLastClicked);\n\t\tthis._stepsStepper.removeEventListener(\"change\", this._whenStepsChanges);\n\t\tthis._pulsesStepper.removeEventListener(\"change\", this._whenPulsesChanges);\n\t\tthis._rotationStepper.removeEventListener(\"change\", this._whenRotationChanges);\n\t\tthis._stepSizeNumeratorStepper.removeEventListener(\"change\", this._whenStepSizeChanges);\n\t\tthis._stepSizeDenominatorStepper.removeEventListener(\"change\", this._whenStepSizeChanges);\n\t\tthis._channelStepper.removeEventListener(\"change\", this._whenChannelChanges);\n\t\tthis._pitchStepper.removeEventListener(\"change\", this._whenPitchChanges);\n\t\tthis._barAmountStepper.removeEventListener(\"change\", this._whenBarAmountChanges);\n\t\tthis._invertBox.removeEventListener(\"change\", this._whenInvertChanges);\n\t\tthis._generateFadingNotesBox.removeEventListener(\"change\", this._whenGenerateFadingNotesChanges);\n\t\tthis._extendUntilLoopButton.removeEventListener(\"click\", this._whenExtendUntilLoopClicked);\n\t}\n\n\tprivate _close = (): void => {\n\t\tthis._doc.undo();\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\tthis._doc.prompt = null;\n\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\n\t\tconst beatsPerBar: number = this._doc.song.beatsPerBar;\n\t\tconst partsPerBeat: number = Config.partsPerBeat;\n\t\tconst partsPerBar: number = partsPerBeat * beatsPerBar;\n\n\t\tconst firstBar: number = this._startBar;\n\t\tconst lastBar: number = firstBar + this._barAmount; // Exclusive.\n\n\t\tif (lastBar > this._doc.song.barCount) {\n\t\t\tconst existing: number = this._doc.song.barCount - firstBar;\n\t\t\tconst remaining: number = this._barAmount - existing;\n\t\t\tgroup.append(new ChangeInsertBars(this._doc, this._doc.song.barCount, remaining));\n\t\t}\n\n\t\ttype ResultingSequence = Note[];\n\t\ttype ResultingBar = ResultingSequence[];\n\t\ttype ResultingChannel = ResultingBar[];\n\t\tlet allNewNotesByChannel: Map<number, ResultingChannel> = new Map();\n\t\tlet pitchesToBeGenerated: Map<number, boolean> = new Map();\n\n\t\tfor (let bar: number = firstBar; bar < lastBar; bar++) {\n\t\t\t// `bar` is an \"absolute\" coordinate, but we really want 0 to\n\t\t\t// be our actual starting point regardless of whatever bar we\n\t\t\t// are truly on.\n\t\t\tconst relativeBar: number = bar - firstBar;\n\n\t\t\t// This is so that we can keep `step` counting up uninterrupted.\n\t\t\t// We can't really place anything before 0 or after `partsPerBar`, so we\n\t\t\t// need to make the note positions relative to the current bar.\n\t\t\tconst partOffset: number = relativeBar * partsPerBar;\n\n\t\t\tfor (let sequenceIndex: number = 0; sequenceIndex < this._sequences.length; sequenceIndex++) {\n\t\t\t\tconst sequence: Sequence = this._sequences[sequenceIndex];\n\t\t\t\tconst generatedSequence: number[] = this._generatedSequences[sequenceIndex];\n\t\t\t\tconst hasGeneratedSequence: boolean = generatedSequence.length > 0;\n\t\t\t\tif (!hasGeneratedSequence) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst steps: number = sequence.steps;\n\t\t\t\tif (generatedSequence.length !== steps) {\n\t\t\t\t\tconsole.error(\"The size of the generated sequence and the specified number of steps it should take have diverged: generated\", generatedSequence.length, \"steps but expected\", steps);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst stepSize: number = sequence.stepSizeNumerator / sequence.stepSizeDenominator;\n\t\t\t\tconst pitch: number = sequence.pitch;\n\t\t\t\tconst channelIndex: number = sequence.channel;\n\t\t\t\tconst invert: boolean = sequence.invert;\n\t\t\t\tconst on: number = invert ? 0 : 1;\n\t\t\t\tconst generateFadingNotes: boolean = sequence.generateFadingNotes;\n\t\t\t\tpitchesToBeGenerated.set(pitch, true);\n\t\t\t\tlet resultingChannel: ResultingChannel | undefined = allNewNotesByChannel.get(channelIndex);\n\t\t\t\tif (resultingChannel == undefined) {\n\t\t\t\t\tresultingChannel = [];\n\t\t\t\t\tfor (let i: number = 0; i < this._barAmount; i++) {\n\t\t\t\t\t\tconst newResultingBar: ResultingBar = [];\n\t\t\t\t\t\tfor (let j: number = 0; j < this._sequences.length; j++) {\n\t\t\t\t\t\t\tconst newResultingSequence: ResultingSequence = [];\n\t\t\t\t\t\t\tnewResultingBar.push(newResultingSequence);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresultingChannel.push(newResultingBar);\n\t\t\t\t\t}\n\t\t\t\t\tallNewNotesByChannel.set(channelIndex, resultingChannel);\n\t\t\t\t}\n\t\t\t\tconst resultingBar: ResultingBar = resultingChannel[relativeBar];\n\t\t\t\tlet resultingSequence: ResultingSequence = resultingBar[sequenceIndex];\n\t\t\t\tconst firstStep: number = Math.floor((beatsPerBar * relativeBar) / stepSize);\n\t\t\t\tconst lastStep: number = Math.ceil((beatsPerBar * (relativeBar + 1)) / stepSize); // Exclusive.\n\t\t\t\tfor (let step: number = firstStep; step < lastStep; step++) {\n\t\t\t\t\tlet continuesLastPattern: boolean = false;\n\t\t\t\t\tlet needToAdjustPins: boolean = false;\n\t\t\t\t\tconst rawStepPartStart: number = (\n\t\t\t\t\t\tMath.floor(step * partsPerBeat * stepSize) - partOffset\n\t\t\t\t\t);\n\t\t\t\t\tconst rawStepPartEnd: number = (\n\t\t\t\t\t\tMath.floor((step + 1) * partsPerBeat * stepSize) - partOffset\n\t\t\t\t\t);\n\t\t\t\t\tif (rawStepPartStart < 0) {\n\t\t\t\t\t\tcontinuesLastPattern = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (continuesLastPattern || rawStepPartEnd > partsPerBar) {\n\t\t\t\t\t\tneedToAdjustPins = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst stepPartStart: number = Math.max(0, Math.min(partsPerBar, rawStepPartStart));\n\t\t\t\t\tconst stepPartEnd: number = Math.max(0, Math.min(partsPerBar, rawStepPartEnd));\n\t\t\t\t\tif (generatedSequence[step % steps] === on) {\n\t\t\t\t\t\tconst note: Note = new Note(pitch, stepPartStart, stepPartEnd, Config.noteSizeMax, generateFadingNotes);\n\t\t\t\t\t\tif (continuesLastPattern) {\n\t\t\t\t\t\t\tnote.continuesLastPattern = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (needToAdjustPins && generateFadingNotes) {\n\t\t\t\t\t\t\tconst startRatio: number = (stepPartStart - rawStepPartStart) / (rawStepPartEnd - rawStepPartStart);\n\t\t\t\t\t\t\tconst startPinSize: number = Math.round(Config.noteSizeMax + (0 - Config.noteSizeMax) * startRatio);\n\t\t\t\t\t\t\tnote.pins[0].size = startPinSize;\n\t\t\t\t\t\t\tconst endRatio: number = (stepPartEnd - rawStepPartStart) / (rawStepPartEnd - rawStepPartStart);\n\t\t\t\t\t\t\tconst endPinSize: number = Math.round(Config.noteSizeMax + (0 - Config.noteSizeMax) * endRatio);\n\t\t\t\t\t\t\tnote.pins[1].size = endPinSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresultingSequence.push(note);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const [channelIndex, resultingChannel] of allNewNotesByChannel.entries()) {\n\t\t\tfor (let resultingBarIndex: number = 0; resultingBarIndex < resultingChannel.length; resultingBarIndex++) {\n\t\t\t\tconst resultingBar: ResultingBar = resultingChannel[resultingBarIndex];\n\n\t\t\t\tconst bar: number = resultingBarIndex + firstBar;\n\n\t\t\t\tlet oldNotes: Note[] = [];\n\t\t\t\tconst oldPattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\t\tif (oldPattern != null) {\n\t\t\t\t\toldNotes = oldPattern.cloneNotes();\n\t\t\t\t}\n\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\n\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n\t\t\t\tif (pattern == null) {\n\t\t\t\t\tthrow new Error(\"Couldn't create new pattern\");\n\t\t\t\t}\n\n\t\t\t\tlet merged: Note[] = [];\n\n\t\t\t\t// Clean the pitch lines that we will be adding notes to:\n\t\t\t\t// go through all the notes and remove the pitches we will add.\n\t\t\t\t//\n\t\t\t\t// If the resulting note is empty, get rid of it.\n\t\t\t\t//\n\t\t\t\t// This is optional and may be worth leaving out, especially if\n\t\t\t\t// this generator ever starts supporting multi-pitch sequences.\n\t\t\t\tfor (let oldNoteIndex: number = oldNotes.length - 1; oldNoteIndex >= 0; oldNoteIndex--) {\n\t\t\t\t\tconst oldNote: Note = oldNotes[oldNoteIndex];\n\t\t\t\t\tlet newPitches: number[] = [];\n\t\t\t\t\tfor (const oldPitch of oldNote.pitches) {\n\t\t\t\t\t\tif (!pitchesToBeGenerated.has(oldPitch)) {\n\t\t\t\t\t\t\tnewPitches.push(oldPitch);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\toldNote.pitches = newPitches;\n\t\t\t\t\tif (oldNote.pitches.length < 1) {\n\t\t\t\t\t\toldNotes.splice(oldNoteIndex, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Explicitly mark the start and end points of every note as distinct\n\t\t\t\t// \"events\".\n\t\t\t\tinterface MergeableEvent {\n\t\t\t\t\tnoteType: \"old\" | \"new\";\n\t\t\t\t\teventType: \"start\" | \"end\";\n\t\t\t\t\tpart: number; // aka time\n\t\t\t\t\tnote: Note;\n\t\t\t\t}\n\t\t\t\tlet timeline: MergeableEvent[] = [];\n\t\t\t\tfor (const note of oldNotes) {\n\t\t\t\t\ttimeline.push({ noteType: \"old\", eventType: \"start\", part: note.start, note: note });\n\t\t\t\t\ttimeline.push({ noteType: \"old\", eventType: \"end\", part: note.end, note: note });\n\t\t\t\t}\n\t\t\t\tfor (const resultingSequence of resultingBar) {\n\t\t\t\t\tfor (const note of resultingSequence) {\n\t\t\t\t\t\ttimeline.push({ noteType: \"new\", eventType: \"start\", part: note.start, note: note });\n\t\t\t\t\t\ttimeline.push({ noteType: \"new\", eventType: \"end\", part: note.end, note: note });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Sort the events by time/part.\n\t\t\t\ttimeline.sort((a, b) => { return a.part - b.part; });\n\n\t\t\t\t// Group events that start/end at the same time.\n\t\t\t\tinterface MergeableEventGroup {\n\t\t\t\t\tpart: number; // aka time\n\t\t\t\t\tevents: MergeableEvent[];\n\t\t\t\t}\n\t\t\t\tlet eventGroups: MergeableEventGroup[] = [];\n\t\t\t\tlet currentEventGroup: MergeableEventGroup | null = null;\n\t\t\t\tfor (let event of timeline) {\n\t\t\t\t\tif (currentEventGroup == null) {\n\t\t\t\t\t\tcurrentEventGroup = { part: event.part, events: [event] };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (event.part !== currentEventGroup.part) {\n\t\t\t\t\t\t\teventGroups.push(currentEventGroup);\n\t\t\t\t\t\t\tcurrentEventGroup = { part: event.part, events: [event] };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentEventGroup.events.push(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (currentEventGroup != null) eventGroups.push(currentEventGroup);\n\n\t\t\t\t// Walk through the event groups.\n\t\t\t\tinterface MergeableNote {\n\t\t\t\t\tnoteType: \"old\" | \"new\";\n\t\t\t\t\tnote: Note;\n\t\t\t\t}\n\t\t\t\tlet heldNotes: MergeableNote[] = [];\n\t\t\t\tlet mergedStartPart: number = 0;\n\t\t\t\tlet mergedEndPart: number = 0;\n\t\t\t\tlet notesToDrop: Set<Note> = new Set();\n\t\t\t\tlet notesToAdd: MergeableNote[] = [];\n\t\t\t\tlet setOfPitchesToCommit: Set<number> = new Set();\n\t\t\t\tfor (const eventGroup of eventGroups) {\n\t\t\t\t\tif (heldNotes.length === 0) {\n\t\t\t\t\t\t// There's no notes currently held, so we should be at the start of\n\t\t\t\t\t\t// some notes now.\n\t\t\t\t\t\tfor (const event of eventGroup.events) {\n\t\t\t\t\t\t\tif (event.eventType === \"end\") {\n\t\t\t\t\t\t\t\tthrow new Error(\"Got note end earlier than expected\");\n\t\t\t\t\t\t\t} else if (event.eventType === \"start\") {\n\t\t\t\t\t\t\t\theldNotes.push({ noteType: event.noteType, note: event.note });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(\"Unknown mergeable event type\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergedStartPart = eventGroup.part;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We have at least one note held.\n\t\t\t\t\t\tfor (const event of eventGroup.events) {\n\t\t\t\t\t\t\tif (event.eventType === \"end\") {\n\t\t\t\t\t\t\t\tnotesToDrop.add(event.note);\n\t\t\t\t\t\t\t} else if (event.eventType === \"start\") {\n\t\t\t\t\t\t\t\tnotesToAdd.push({ noteType: event.noteType, note: event.note });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(\"Unknown mergeable event type\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergedEndPart = eventGroup.part;\n\t\t\t\t\t\tconst mergedNote: Note = new Note(0, mergedStartPart, mergedEndPart, Config.noteSizeMax, false);\n\t\t\t\t\t\tlet continuesLastPattern: boolean = false;\n\t\t\t\t\t\tlet theNewNote: Note | null = null;\n\t\t\t\t\t\tlet theOldNote: Note | null = null;\n\t\t\t\t\t\tfor (const mergeableNote of heldNotes) {\n\t\t\t\t\t\t\tconst note: Note = mergeableNote.note;\n\t\t\t\t\t\t\tfor (const candidatePitch of note.pitches) {\n\t\t\t\t\t\t\t\tsetOfPitchesToCommit.add(candidatePitch);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (note.continuesLastPattern) continuesLastPattern = true;\n\t\t\t\t\t\t\tif (mergeableNote.noteType === \"new\") {\n\t\t\t\t\t\t\t\t// If there's two or more new notes being held currently, we\n\t\t\t\t\t\t\t\t// should pick the shortest most recent one.\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\ttheNewNote == null\n\t\t\t\t\t\t\t\t\t|| mergeableNote.note.start > theNewNote.start\n\t\t\t\t\t\t\t\t\t|| mergeableNote.note.end < theNewNote.end\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\ttheNewNote = mergeableNote.note;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (mergeableNote.noteType === \"old\") {\n\t\t\t\t\t\t\t\tif (theOldNote != null) throw new Error(\"Somehow got more than one old note\");\n\t\t\t\t\t\t\t\ttheOldNote = mergeableNote.note;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst pitchesToCommit: number[] = Array.from(setOfPitchesToCommit).sort((a, b) => a - b);\n\t\t\t\t\t\tmergedNote.pitches = pitchesToCommit;\n\t\t\t\t\t\tmergedNote.continuesLastPattern = continuesLastPattern;\n\t\t\t\t\t\tif (theNewNote != null) {\n\t\t\t\t\t\t\t// Use the pins of the new note selected. We have to find the\n\t\t\t\t\t\t\t// intersection of the merged note sides with the fadeout line.\n\t\t\t\t\t\t\tconst theNewNoteStartPart: number = theNewNote.start;\n\t\t\t\t\t\t\tconst theNewNoteEndPart: number = theNewNote.end;\n\t\t\t\t\t\t\tconst startSize: number = theNewNote.pins[0].size;\n\t\t\t\t\t\t\tconst endSize: number = theNewNote.pins[1].size;\n\t\t\t\t\t\t\tconst startRatio: number = (mergedStartPart - theNewNoteStartPart) / (theNewNoteEndPart - theNewNoteStartPart);\n\t\t\t\t\t\t\tconst startPinSize: number = Math.round(startSize + (endSize - startSize) * startRatio);\n\t\t\t\t\t\t\tmergedNote.pins[0].size = startPinSize;\n\t\t\t\t\t\t\tconst endRatio: number = (mergedEndPart - theNewNoteStartPart) / (theNewNoteEndPart - theNewNoteStartPart);\n\t\t\t\t\t\t\tconst endPinSize: number = Math.round(startSize + (endSize - startSize) * endRatio);\n\t\t\t\t\t\t\tmergedNote.pins[1].size = endPinSize;\n\t\t\t\t\t\t} else if (theOldNote != null) {\n\t\t\t\t\t\t\t// Use the pins of the old note.\n\t\t\t\t\t\t\t// We have to find the pins that are within the note sides.\n\t\t\t\t\t\t\t// If a pin at one of the sides lands exactly on that side,\n\t\t\t\t\t\t\t// assign the value of that pin as is. Otherwise, find the\n\t\t\t\t\t\t\t// adjacent pin in the relevant direction, and find the point on\n\t\t\t\t\t\t\t// the line between those two that intersects with the side we're\n\t\t\t\t\t\t\t// looking at.\n\t\t\t\t\t\t\tconst mergedNoteLength: number = mergedEndPart - mergedStartPart;\n\t\t\t\t\t\t\tconst mergedStartRelativeToOldStart: number = mergedStartPart - theOldNote.start;\n\t\t\t\t\t\t\tconst mergedEndRelativeToOldStart: number = mergedEndPart - theOldNote.start;\n\t\t\t\t\t\t\tlet newPins: NotePin[] = [];\n\t\t\t\t\t\t\tlet firstVisibleOldPinIndex: number = -1;\n\t\t\t\t\t\t\tlet lastVisibleOldPinIndex: number = -1; // Inclusive.\n\t\t\t\t\t\t\tlet leftAdjacentOldPinIndex: number = 0;\n\t\t\t\t\t\t\tlet rightAdjacentOldPinIndex: number = theOldNote.pins.length - 1;\n\t\t\t\t\t\t\tfor (let oldPinIndex = 0; oldPinIndex < theOldNote.pins.length; oldPinIndex++) {\n\t\t\t\t\t\t\t\tconst oldPin: NotePin = theOldNote.pins[oldPinIndex];\n\t\t\t\t\t\t\t\tif (oldPin.time < mergedStartRelativeToOldStart) {\n\t\t\t\t\t\t\t\t\tleftAdjacentOldPinIndex = oldPinIndex;\n\t\t\t\t\t\t\t\t} else if (oldPin.time >= mergedStartRelativeToOldStart && oldPin.time <= mergedEndRelativeToOldStart) {\n\t\t\t\t\t\t\t\t\tif (firstVisibleOldPinIndex === -1) {\n\t\t\t\t\t\t\t\t\t\tfirstVisibleOldPinIndex = oldPinIndex;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlastVisibleOldPinIndex = oldPinIndex;\n\t\t\t\t\t\t\t\t} else if (oldPin.time > mergedEndRelativeToOldStart) {\n\t\t\t\t\t\t\t\t\trightAdjacentOldPinIndex = oldPinIndex;\n\t\t\t\t\t\t\t\t\t// We want the first pin to our right.\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (firstVisibleOldPinIndex !== -1) {\n\t\t\t\t\t\t\t\t// Note that `lastVisibleOldPinIndex` should also be not equal\n\t\t\t\t\t\t\t\t// to -1 here.\n\t\t\t\t\t\t\t\tfor (let visibleOldPinIndex: number = firstVisibleOldPinIndex; visibleOldPinIndex <= lastVisibleOldPinIndex; visibleOldPinIndex++) {\n\t\t\t\t\t\t\t\t\tconst visibleOldPin: NotePin = theOldNote.pins[visibleOldPinIndex];\n\t\t\t\t\t\t\t\t\tconst correctedTime: number = visibleOldPin.time - mergedStartRelativeToOldStart;\n\t\t\t\t\t\t\t\t\tnewPins.push(makeNotePin(0, correctedTime, visibleOldPin.size));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// We should have at least one pin here.\n\t\t\t\t\t\t\t\tconst firstNewPin: NotePin = newPins[0];\n\t\t\t\t\t\t\t\tconst lastNewPin: NotePin = newPins[newPins.length - 1];\n\t\t\t\t\t\t\t\tif (firstNewPin.time !== 0) {\n\t\t\t\t\t\t\t\t\t// No pin landed at the start of this new note, so let's\n\t\t\t\t\t\t\t\t\t// split the line between it and the left adjacent old pin.\n\t\t\t\t\t\t\t\t\tconst leftAdjacentOldPin: NotePin = theOldNote.pins[leftAdjacentOldPinIndex];\n\t\t\t\t\t\t\t\t\tconst lineMiddleTime: number = mergedStartRelativeToOldStart - leftAdjacentOldPin.time;\n\t\t\t\t\t\t\t\t\tconst lineEndTime: number = lineMiddleTime + firstNewPin.time;\n\t\t\t\t\t\t\t\t\tconst ratio: number = lineMiddleTime / lineEndTime;\n\t\t\t\t\t\t\t\t\tconst newSize: number = Math.round(leftAdjacentOldPin.size + (firstNewPin.size - leftAdjacentOldPin.size) * ratio);\n\t\t\t\t\t\t\t\t\tnewPins.unshift(makeNotePin(0, 0, newSize));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (lastNewPin.time !== mergedNoteLength) {\n\t\t\t\t\t\t\t\t\t// No pin landed at the end of this new note, so let's\n\t\t\t\t\t\t\t\t\t// split the line between it and the right adjacent old pin.\n\t\t\t\t\t\t\t\t\tconst rightAdjacentOldPin: NotePin = theOldNote.pins[rightAdjacentOldPinIndex];\n\t\t\t\t\t\t\t\t\tconst lineMiddleTime: number = mergedEndRelativeToOldStart - (lastNewPin.time + mergedStartRelativeToOldStart);\n\t\t\t\t\t\t\t\t\tconst lineEndTime: number = lineMiddleTime + (rightAdjacentOldPin.time - mergedEndRelativeToOldStart);\n\t\t\t\t\t\t\t\t\tconst ratio: number = lineMiddleTime / lineEndTime;\n\t\t\t\t\t\t\t\t\tconst newSize: number = Math.round(lastNewPin.size + (rightAdjacentOldPin.size - lastNewPin.size) * ratio);\n\t\t\t\t\t\t\t\t\tnewPins.push(makeNotePin(0, mergedNoteLength, newSize));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// No visible pins.\n\t\t\t\t\t\t\t\tconst leftAdjacentOldPin: NotePin = theOldNote.pins[leftAdjacentOldPinIndex];\n\t\t\t\t\t\t\t\tconst rightAdjacentOldPin: NotePin = theOldNote.pins[rightAdjacentOldPinIndex];\n\t\t\t\t\t\t\t\tconst lineFirstIntersectionTime: number = mergedStartRelativeToOldStart - leftAdjacentOldPin.time;\n\t\t\t\t\t\t\t\tconst lineLastIntersectionTime: number = mergedEndRelativeToOldStart - leftAdjacentOldPin.time;\n\t\t\t\t\t\t\t\tconst lineLength: number = rightAdjacentOldPin.time - leftAdjacentOldPin.time;\n\t\t\t\t\t\t\t\tconst firstRatio: number = lineFirstIntersectionTime / lineLength;\n\t\t\t\t\t\t\t\tconst lastRatio: number = lineLastIntersectionTime / lineLength;\n\t\t\t\t\t\t\t\tconst firstNewSize: number = Math.round(leftAdjacentOldPin.size + (rightAdjacentOldPin.size - leftAdjacentOldPin.size) * firstRatio);\n\t\t\t\t\t\t\t\tconst lastNewSize: number = Math.round(leftAdjacentOldPin.size + (rightAdjacentOldPin.size - leftAdjacentOldPin.size) * lastRatio);\n\t\t\t\t\t\t\t\tnewPins.push(makeNotePin(0, 0, firstNewSize));\n\t\t\t\t\t\t\t\tnewPins.push(makeNotePin(0, mergedNoteLength, lastNewSize));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmergedNote.pins = newPins;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (mergedNote.pins.length < 2) {\n\t\t\t\t\t\t\tthrow new Error(\"Ended up generating note with less than two pins\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (mergedNote.pitches.length < 1) {\n\t\t\t\t\t\t\t// This is particularly important to check, because otherwise\n\t\t\t\t\t\t\t// an infinite loop will start somewhere if any note has no\n\t\t\t\t\t\t\t// pitches.\n\t\t\t\t\t\t\tthrow new Error(\"Ended up generating note with no pitches\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmerged.push(mergedNote);\n\t\t\t\t\t\tfor (let note of notesToDrop) {\n\t\t\t\t\t\t\tfor (let heldNoteIndex = heldNotes.length - 1; heldNoteIndex >= 0; heldNoteIndex--) {\n\t\t\t\t\t\t\t\tlet heldNote: Note = heldNotes[heldNoteIndex].note;\n\t\t\t\t\t\t\t\tif (note === heldNote) {\n\t\t\t\t\t\t\t\t\theldNotes.splice(heldNoteIndex, 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let note of notesToAdd) heldNotes.push(note);\n\t\t\t\t\t\tsetOfPitchesToCommit.clear();\n\t\t\t\t\t\tnotesToDrop.clear();\n\t\t\t\t\t\twhile (notesToAdd.length > 0) notesToAdd.pop();\n\t\t\t\t\t\tmergedStartPart = mergedEndPart;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpattern.notes = [];\n\t\t\t\tfor (let noteIndex = 0; noteIndex < merged.length; noteIndex++) {\n\t\t\t\t\tconst note: Note = merged[noteIndex];\n\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, pattern, note, noteIndex));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._doc.record(group, true);\n\n\t\twindow.localStorage.setItem(this._localStorageKey, JSON.stringify({\n\t\t\t\"sequences\": this._sequences,\n\t\t\t\"barAmount\": this._barAmount,\n\t\t}));\n\t}\n\n\tprivate _generateAllSequences = (): void => {\n\t\tthis._generatedSequences = [];\n\t\tfor (let i: number = 0; i < this._sequences.length; i++) {\n\t\t\tthis._generatedSequences.push([]);\n\t\t\tthis._generateSequence(i);\n\t\t}\n\t}\n\n\tprivate _generateSequence = (index: number): void => {\n\t\tconst sequence: Sequence = this._sequences[index];\n\t\tthis._generatedSequences[index] = generateEuclideanRhythm(\n\t\t\tsequence.steps, sequence.pulses, sequence.rotation\n\t\t);\n\t}\n\n\tprivate _generateCurrentSequence = (): void => {\n\t\tthis._generateSequence(this._sequenceIndex);\n\t}\n\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) {\n\t\t\t// Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\n\tprivate _whenSelectSequence = (event: MouseEvent): void => {\n\t\tif (event.target == this._sequenceAddButton) {\n\t\t\tconst currentSequence: Sequence = this._sequences[this._sequenceIndex];\n\t\t\tthis._sequences.push({\n\t\t\t\tsteps: currentSequence.steps,\n\t\t\t\tpulses: currentSequence.pulses,\n\t\t\t\trotation: currentSequence.rotation,\n\t\t\t\tstepSizeNumerator: currentSequence.stepSizeNumerator,\n\t\t\t\tstepSizeDenominator: currentSequence.stepSizeDenominator,\n\t\t\t\tchannel: currentSequence.channel,\n\t\t\t\tpitch: currentSequence.pitch,\n\t\t\t\tinvert: currentSequence.invert,\n\t\t\t\tgenerateFadingNotes: currentSequence.generateFadingNotes,\n\t\t\t});\n\t\t\tthis._sequenceIndex = this._sequences.length - 1;\n\n\t\t\tthis._generateCurrentSequence();\n\n\t\t\tthis._refreshSequenceWidgets();\n\t\t\tthis._reconfigurePulsesStepper();\n\t\t\tthis._reconfigurePitchStepper();\n\t\t\tthis._render();\n\t\t} else if (event.target == this._sequenceRemoveButton) {\n\t\t\tthis._sequences.splice(this._sequenceIndex, 1);\n\t\t\tthis._generatedSequences.splice(this._sequenceIndex, 1);\n\t\t\tthis._sequenceIndex = Math.max(0, Math.min(this._sequences.length - 1, this._sequenceIndex));\n\n\t\t\tthis._refreshSequenceWidgets();\n\t\t\tthis._reconfigurePulsesStepper();\n\t\t\tthis._reconfigurePitchStepper();\n\t\t\tthis._render();\n\t\t} else {\n\t\t\tconst index: number = this._sequenceButtons.indexOf(<any>event.target);\n\t\t\tif (index != -1) {\n\t\t\t\tthis._sequenceIndex = index;\n\n\t\t\t\tthis._refreshSequenceWidgets();\n\t\t\t\tthis._reconfigurePulsesStepper();\n\t\t\t\tthis._reconfigurePitchStepper();\n\t\t\t\tthis._render();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _whenBarPreviewGoToFirstClicked = (event: Event): void => {\n\t\tthis._barPreviewBarIndex = this._startBar;\n\n\t\tthis._renderBarPreview();\n\t\tthis._renderLabel();\n\t}\n\n\tprivate _whenBarPreviewGoBackClicked = (event: Event): void => {\n\t\tthis._barPreviewBarIndex = this._barPreviewBarIndex - 1;\n\t\tif (this._barPreviewBarIndex < this._startBar) {\n\t\t\t// Wrap around.\n\t\t\tthis._barPreviewBarIndex += this._barAmount;\n\t\t}\n\n\t\tthis._renderBarPreview();\n\t\tthis._renderLabel();\n\t}\n\n\tprivate _whenBarPreviewGoForwardClicked = (event: Event): void => {\n\t\tthis._barPreviewBarIndex = this._barPreviewBarIndex + 1;\n\t\tconst lastBar: number = this._startBar + this._barAmount; // Exclusive.\n\t\tif (this._barPreviewBarIndex >= lastBar) {\n\t\t\t// Wrap around.\n\t\t\tthis._barPreviewBarIndex -= this._barAmount;\n\t\t}\n\n\t\tthis._renderBarPreview();\n\t\tthis._renderLabel();\n\t}\n\n\tprivate _whenBarPreviewGoToLastClicked = (event: Event): void => {\n\t\tconst firstBar: number = this._startBar;\n\t\tconst lastBar: number = firstBar + this._barAmount; // Exclusive.\n\t\tthis._barPreviewBarIndex = lastBar - 1;\n\n\t\tthis._renderBarPreview();\n\t\tthis._renderLabel();\n\t}\n\n\tprivate _whenInvertChanges = (event: Event): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst invert: boolean = this._invertBox.checked;\n\n\t\tsequence.invert = invert;\n\n\t\tthis._renderClock();\n\t\tthis._renderBarPreview();\n\t}\n\n\tprivate _whenGenerateFadingNotesChanges = (event: Event): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst generateFadingNotes: boolean = this._generateFadingNotesBox.checked;\n\n\t\tsequence.generateFadingNotes = generateFadingNotes;\n\n\t\tthis._renderBarPreview();\n\t}\n\n\tprivate _whenExtendUntilLoopClicked = (event: Event): void => {\n\t\tconst beatsPerBar: number = this._doc.song.beatsPerBar;\n\t\tconst beatsPerBarFraction: Fraction = [beatsPerBar, 1];\n\t\tconst barAmountFraction: Fraction = fractionDiv(\n\t\t\tthis._sequences.reduce((acc: Fraction, seq: Sequence): Fraction => {\n\t\t\t\tconst steps: Fraction = [seq.steps, 1];\n\t\t\t\tconst stepSize: Fraction = fraction(seq.stepSizeNumerator, seq.stepSizeDenominator);\n\t\t\t\tconst total: Fraction = fractionMul(steps, stepSize);\n\t\t\t\treturn fractionLCM(acc, fractionLCM(total, beatsPerBarFraction));\n\t\t\t}, [1, 1]),\n\t\t\tbeatsPerBarFraction\n\t\t);\n\t\tconst barAmount: number = barAmountFraction[0];\n\t\tthis._barAmount = Math.max(1, Math.min(this._barsAvailable, barAmount));\n\n\t\tconst firstBar: number = this._startBar;\n\t\tconst lastBar: number = this._startBar + this._barAmount; // Exclusive.\n\t\tthis._barPreviewBarIndex = Math.max(firstBar, Math.min(lastBar - 1, this._barPreviewBarIndex));\n\n\t\tthis._barAmountStepper.value = this._barAmount + \"\";\n\t\tthis._renderBarPreview();\n\t\tthis._renderLabel();\n\t}\n\n\tprivate _whenStepsChanges = (event: Event): void => {\n\t\tconst steps: number = Math.max(this._minSteps, Math.min(this._maxSteps, +this._stepsStepper.value));\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tsequence.steps = steps;\n\n\t\tthis._stepsStepper.value = steps + \"\";\n\t\tthis._reconfigurePulsesStepper();\n\t\tthis._generateCurrentSequence();\n\n\t\tthis._render();\n\t}\n\n\tprivate _whenPulsesChanges = (event: Event): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst pulses: number = Math.max(0, Math.min(sequence.steps, +this._pulsesStepper.value));\n\t\tsequence.pulses = pulses;\n\n\t\tthis._pulsesStepper.value = pulses + \"\";\n\t\tthis._generateCurrentSequence();\n\n\t\tthis._render();\n\t}\n\n\tprivate _whenRotationChanges = (event: Event): void => {\n\t\tconst rotation: number = Math.max(0, Math.min(this._maxSteps, +this._rotationStepper.value));\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tsequence.rotation = rotation;\n\n\t\tthis._rotationStepper.value = rotation + \"\";\n\t\tthis._generateCurrentSequence();\n\n\t\tthis._render();\n\t}\n\n\tprivate _whenStepSizeChanges = (event: Event): void => {\n\t\tconst numerator: number = Math.max(1, Math.min(Config.partsPerBeat, +this._stepSizeNumeratorStepper.value));\n\t\tconst denominator: number = Math.max(1, Math.min(Config.partsPerBeat, +this._stepSizeDenominatorStepper.value));\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tsequence.stepSizeNumerator = numerator;\n\t\tsequence.stepSizeDenominator = denominator;\n\n\t\tthis._stepSizeNumeratorStepper.value = numerator + \"\";\n\t\tthis._stepSizeDenominatorStepper.value = denominator + \"\";\n\t\tthis._renderBarPreview();\n\t}\n\n\tprivate _whenPitchChanges = (event: Event): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst maxPitch: number = this._doc.song.getChannelIsNoise(sequence.channel) ? (Config.drumCount - 1) : Config.maxPitch;\n\t\tconst pitch: number = Math.max(0, Math.min(maxPitch, +this._pitchStepper.value));\n\t\tsequence.pitch = pitch;\n\n\t\tthis._pitchStepper.value = pitch + \"\";\n\t\tthis._renderLabel();\n\t}\n\n\tprivate _whenChannelChanges = (event: Event): void => {\n\t\tconst channel: number = Math.max(0, Math.min(this._maxChannel, (+this._channelStepper.value) - 1));\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tsequence.channel = channel;\n\n\t\tthis._channelStepper.value = (channel + 1) + \"\";\n\t\tthis._reconfigurePitchStepper();\n\t\tthis._render();\n\t}\n\n\tprivate _whenBarAmountChanges = (event: Event): void => {\n\t\tconst barAmount: number = Math.max(1, Math.min(this._barsAvailable, +this._barAmountStepper.value));\n\t\tthis._barAmount = barAmount;\n\n\t\tconst firstBar: number = this._startBar;\n\t\tconst lastBar: number = this._startBar + this._barAmount; // Exclusive.\n\t\tthis._barPreviewBarIndex = Math.max(firstBar, Math.min(lastBar - 1, this._barPreviewBarIndex));\n\n\t\tthis._barAmountStepper.value = barAmount + \"\";\n\t\tthis._renderBarPreview();\n\t\tthis._renderLabel();\n\t}\n\n\tprivate _initialRender = (): void => {\n\t\t// Render bar preview background.\n\t\tconst beatsPerBar: number = this._doc.song.beatsPerBar;\n\n\t\tconst color: string = ColorConfig.pitchBackground;\n\n\t\tconst container: SVGSVGElement = this._barPreviewBackground;\n\t\tconst padding: number = 1;\n\t\tconst beatWidth: number = this._barPreviewWidth / beatsPerBar;\n\t\tconst beatHeight: number = this._barPreviewHeight;\n\n\t\tfor (let beat: number = 0; beat < beatsPerBar; beat++) {\n\t\t\tconst x: number = beat * beatWidth + padding;\n\t\t\tconst y: number = padding;\n\t\t\tconst w: number = beatWidth - padding * 2;\n\t\t\tconst h: number = beatHeight - padding * 2;\n\t\t\tconst beatElement: SVGRectElement = SVG.rect({\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\tstyle: `fill: ${color};`,\n\t\t\t});\n\t\t\tcontainer.appendChild(beatElement);\n\t\t}\n\n\t\t// Show sequence configuration.\n\t\tthis._refreshSequenceWidgets();\n\t\tthis._reconfigurePitchStepper();\n\t\tthis._reconfigurePulsesStepper();\n\t}\n\n\tprivate _refreshSequenceWidgets = (): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tthis._stepsStepper.value = sequence.steps + \"\";\n\t\tthis._pulsesStepper.value = sequence.pulses + \"\";\n\t\tthis._rotationStepper.value = sequence.rotation + \"\";\n\t\tthis._stepSizeNumeratorStepper.value = sequence.stepSizeNumerator + \"\";\n\t\tthis._stepSizeDenominatorStepper.value = sequence.stepSizeDenominator + \"\";\n\t\tthis._channelStepper.value = (sequence.channel + 1) + \"\";\n\t\tthis._pitchStepper.value = sequence.pitch + \"\";\n\t\tthis._invertBox.checked = sequence.invert;\n\t\tthis._generateFadingNotesBox.checked = sequence.generateFadingNotes;\n\t\tthis._barAmountStepper.value = this._barAmount + \"\";\n\t}\n\n\tprivate _reconfigurePitchStepper = (): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst channel: number = sequence.channel;\n\t\tconst maxPitch: number = this._doc.song.getChannelIsNoise(channel) ? (Config.drumCount - 1) : Config.maxPitch;\n\t\tthis._pitchStepper.value = Math.max(0, Math.min(maxPitch, +this._pitchStepper.value)) + \"\";\n\t\tthis._pitchStepper.max = maxPitch + \"\";\n\n\t\tsequence.pitch = +this._pitchStepper.value;\n\t}\n\n\tprivate _reconfigurePulsesStepper = (): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst steps: number = sequence.steps;\n\t\tthis._pulsesStepper.value = Math.max(0, Math.min(steps, +this._pulsesStepper.value)) + \"\";\n\t\tthis._pulsesStepper.max = steps + \"\";\n\n\t\tsequence.pulses = +this._pulsesStepper.value;\n\t}\n\n\tprivate _render = (): void => {\n\t\tthis._renderClock();\n\t\tthis._renderBarPreview();\n\t\tthis._renderLabel();\n\t\tthis._renderSequenceButtons();\n\t}\n\n\tprivate _renderSequenceButtons = (): void => {\n\t\tconst container: HTMLDivElement = this._sequenceButtonContainer;\n\n\t\twhile (this._sequenceButtons.length < this._sequences.length) {\n\t\t\tconst sequenceButton: HTMLButtonElement = button({ class: \"no-underline\" },\n\t\t\t\t(this._sequenceButtons.length + 1) + \"\"\n\t\t\t);\n\t\t\tthis._sequenceButtons.push(sequenceButton);\n\t\t\tcontainer.insertBefore(sequenceButton, this._sequenceRemoveButton);\n\t\t}\n\t\tfor (let i: number = this._renderedSequenceCount; i < this._sequences.length; i++) {\n\t\t\tconst sequenceButton: HTMLButtonElement = this._sequenceButtons[i];\n\t\t\tsequenceButton.style.display = \"\";\n\t\t}\n\t\tfor (let i: number = this._sequences.length; i < this._renderedSequenceCount; i++) {\n\t\t\tthis._sequenceButtons[i].style.display = \"none\";\n\t\t}\n\t\tthis._renderedSequenceCount = this._sequences.length;\n\t\twhile (this._sequenceButtons.length > this._maxSequences) {\n\t\t\tcontainer.removeChild(this._sequenceButtons.pop()!);\n\t\t}\n\t\tthis._sequenceRemoveButton.style.display = (this._sequences.length > 1) ? \"\" : \"none\";\n\t\tthis._sequenceAddButton.style.display = (this._sequences.length < this._maxSequences) ? \"\" : \"none\";\n\t\tif (this._sequences.length < this._maxSequences) {\n\t\t\tthis._sequenceRemoveButton.classList.remove(\"last-button\");\n\t\t} else {\n\t\t\tthis._sequenceRemoveButton.classList.add(\"last-button\");\n\t\t}\n\t\tif (this._highlightedSequenceIndex != this._sequenceIndex) {\n\t\t\tconst oldButton: HTMLButtonElement = this._sequenceButtons[this._highlightedSequenceIndex];\n\t\t\tif (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\n\t\t\tconst newButton: HTMLButtonElement = this._sequenceButtons[this._sequenceIndex];\n\t\t\tnewButton.classList.add(\"selected-instrument\");\n\t\t\tthis._highlightedSequenceIndex = this._sequenceIndex;\n\t\t}\n\n\t\tfor (let sequence: number = 0; sequence < this._sequences.length; sequence++) {\n\t\t\tconst sequenceButton: HTMLButtonElement = this._sequenceButtons[sequence];\n\t\t\tif (sequence === this._highlightedSequenceIndex) {\n\t\t\t\tsequenceButton.style.color = \"\";\n\t\t\t} else {\n\t\t\t\tsequenceButton.style.color = ColorConfig.primaryText;\n\t\t\t}\n\t\t}\n\n\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this._sequences[this._sequenceIndex].channel);\n\t\tthis._sequenceButtonContainer.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n\t\tthis._sequenceButtonContainer.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n\t\tthis._sequenceButtonContainer.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n\t\tthis._sequenceButtonContainer.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n\t}\n\n\tprivate _renderLabel = (): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst sequencePitch: number = sequence.pitch;\n\n\t\tconst pitchNameIndex: number = (sequencePitch + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\n\t\tlet pitch: string = \"\";\n\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\n\t\t\tpitch = Config.keys[pitchNameIndex].name;\n\t\t} else {\n\t\t\tconst shiftDir: number = Config.blackKeyNameParents[sequencePitch % Config.pitchesPerOctave];\n\t\t\tpitch = Config.keys[(pitchNameIndex + Config.pitchesPerOctave + shiftDir) % Config.pitchesPerOctave].name;\n\t\t\tif (shiftDir == 1) {\n\t\t\t\tpitch += \"♭\";\n\t\t\t} else if (shiftDir == -1) {\n\t\t\t\tpitch += \"♯\";\n\t\t\t}\n\t\t}\n\t\tpitch += Math.floor(sequencePitch / Config.pitchesPerOctave);\n\n\t\tthis._barPreviewLabel.innerText = `Bar ${this._barPreviewBarIndex + 1}, ${pitch}`;\n\t}\n\n\tprivate _renderClock = (): void => {\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst steps: number = sequence.steps;\n\t\tconst channelIndex: number = sequence.channel;\n\n\t\tconst generatedSequence: number[] = this._generatedSequences[this._sequenceIndex];\n\t\tconst hasGeneratedSequence: boolean = generatedSequence.length > 0;\n\n\t\tconst invert: boolean = sequence.invert;\n\t\tconst on: number = invert ? 0 : 1;\n\n\t\tconst color: string = ColorConfig.getChannelColor(this._doc.song, channelIndex).primaryNote;\n\t\tconst backgroundColor: string = ColorConfig.editorBackground;\n\n\t\tthis._clockWire.setAttribute(\"stroke\", color);\n\n\t\tconst container: SVGSVGElement = this._clockPoints;\n\n\t\twhile (container.firstChild !== null) {\n\t\t\tcontainer.removeChild(container.firstChild);\n\t\t}\n\n\t\tconst centerX: number = this._clockWidth / 2;\n\t\tconst centerY: number = this._clockHeight / 2;\n\t\tconst clockRadius: number = this._clockRadius;\n\t\tconst clockPointRadius: number = Math.max(this._clockPointMinRadius, Math.min(this._clockPointMaxRadius, this._clockWidth / steps));\n\n\t\tfor (let step: number = 0; step < steps; step++) {\n\t\t\tconst angle: number = (step / steps) * Math.PI * 2 - Math.PI / 2;\n\t\t\tconst x: number = centerX + Math.cos(angle) * clockRadius;\n\t\t\tconst y: number = centerY + Math.sin(angle) * clockRadius;\n\t\t\tconst clockPoint: SVGCircleElement = SVG.circle({\n\t\t\t\tcx: x,\n\t\t\t\tcy: y,\n\t\t\t\tr: clockPointRadius,\n\t\t\t\tstyle: `stroke: ${color}; stroke-width: 0.5; fill: ${backgroundColor}`,\n\t\t\t});\n\t\t\tif (hasGeneratedSequence && generatedSequence[step % steps] === on) {\n\t\t\t\tclockPoint.setAttribute(\"style\", `fill: ${color};`);\n\t\t\t}\n\t\t\tcontainer.appendChild(clockPoint);\n\t\t}\n\t}\n\n\tprivate _renderBarPreview = (): void => {\n\t\tconst beatsPerBar: number = this._doc.song.beatsPerBar;\n\t\tconst partsPerBeat: number = Config.partsPerBeat;\n\t\tconst partsPerBar: number = partsPerBeat * beatsPerBar;\n\n\t\tconst sequence: Sequence = this._sequences[this._sequenceIndex];\n\t\tconst steps: number = sequence.steps;\n\t\tconst channelIndex: number = sequence.channel;\n\t\tconst stepSize: number = sequence.stepSizeNumerator / sequence.stepSizeDenominator;\n\n\t\tconst generatedSequence: number[] = this._generatedSequences[this._sequenceIndex];\n\t\tconst hasGeneratedSequence: boolean = generatedSequence.length > 0;\n\n\t\tconst invert: boolean = sequence.invert;\n\t\tconst on: number = invert ? 0 : 1;\n\n\t\tconst generateFadingNotes: boolean = sequence.generateFadingNotes;\n\n\t\tconst channelColors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, channelIndex);\n\t\tconst color: string = channelColors.primaryNote;\n\t\tconst secondaryColor: string = channelColors.secondaryNote;\n\n\t\t// `this._barPreviewBarIndex` is an \"absolute\" coordinate, but we\n\t\t// really want 0 to be our actual starting point regardless of whatever\n\t\t// bar we are truly on.\n\t\tconst bar: number = this._barPreviewBarIndex - this._startBar;\n\n\t\t// This is so that we can keep `step` counting up uninterrupted.\n\t\t// We can't really place anything after `partsPerBar`, so we\n\t\t// need to move whatever is after that back to somewhere near 0.\n\t\tconst partOffset: number = bar * partsPerBar;\n\n\t\tconst container: SVGSVGElement = this._barPreviewSteps;\n\n\t\twhile (container.firstChild !== null) {\n\t\t\tcontainer.removeChild(container.firstChild);\n\t\t}\n\n\t\tlet toPushAtTheEnd: SVGElement[] = [];\n\n\t\tconst beatWidth: number = this._barPreviewWidth / beatsPerBar;\n\t\tconst partWidth: number = beatWidth / partsPerBeat;\n\t\tconst beatHeight: number = this._barPreviewHeight;\n\t\tconst padding: number = 0.2;\n\n\t\tconst firstStep: number = Math.floor((beatsPerBar * bar) / stepSize);\n\t\tconst lastStep: number = Math.ceil((beatsPerBar * (bar + 1)) / stepSize); // Exclusive.\n\n\t\tconst y: number = padding;\n\t\tconst h: number = beatHeight - padding * 2;\n\t\tfor (let step: number = firstStep; step < lastStep; step++) {\n\t\t\tlet continuesLastPattern: boolean = false;\n\t\t\tlet needToAdjustPins: boolean = false;\n\n\t\t\tconst rawStepPartStart: number = (\n\t\t\t\tMath.floor(step * partsPerBeat * stepSize) - partOffset\n\t\t\t);\n\t\t\tconst rawStepPartEnd: number = (\n\t\t\t\tMath.floor((step + 1) * partsPerBeat * stepSize) - partOffset\n\t\t\t);\n\n\t\t\tif (rawStepPartStart < 0) {\n\t\t\t\tcontinuesLastPattern = true;\n\t\t\t}\n\t\t\tif (continuesLastPattern || rawStepPartEnd > partsPerBar) {\n\t\t\t\tneedToAdjustPins = true;\n\t\t\t}\n\n\t\t\tconst stepPartStart: number = Math.max(0, Math.min(partsPerBar, rawStepPartStart));\n\t\t\tconst stepPartEnd: number = Math.max(0, Math.min(partsPerBar, rawStepPartEnd));\n\t\t\tconst partAmount: number = stepPartEnd - stepPartStart;\n\n\t\t\tconst x: number = padding + stepPartStart * partWidth;\n\t\t\tconst w: number = partAmount * partWidth - padding * 2;\n\t\t\tif (hasGeneratedSequence && generatedSequence[step % steps] === on) {\n\t\t\t\tif (generateFadingNotes) {\n\t\t\t\t\tconst stepBackgroundElement: SVGRectElement = SVG.rect({\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tstyle: `fill: ${secondaryColor};`,\n\t\t\t\t\t});\n\t\t\t\t\tcontainer.appendChild(stepBackgroundElement);\n\n\t\t\t\t\tlet startSize: number = Config.noteSizeMax;\n\t\t\t\t\tlet endSize: number = 0;\n\n\t\t\t\t\tif (needToAdjustPins) {\n\t\t\t\t\t\tconst startRatio: number = (stepPartStart - rawStepPartStart) / (rawStepPartEnd - rawStepPartStart);\n\t\t\t\t\t\tconst startPinSize: number = Math.round(Config.noteSizeMax + (0 - Config.noteSizeMax) * startRatio);\n\t\t\t\t\t\tstartSize = startPinSize;\n\n\t\t\t\t\t\tconst endRatio: number = (stepPartEnd - rawStepPartStart) / (rawStepPartEnd - rawStepPartStart);\n\t\t\t\t\t\tconst endPinSize: number = Math.round(Config.noteSizeMax + (0 - Config.noteSizeMax) * endRatio);\n\t\t\t\t\t\tendSize = endPinSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tstartSize /= Config.noteSizeMax;\n\t\t\t\t\tendSize /= Config.noteSizeMax;\n\n\t\t\t\t\tconst x0: number = x;\n\t\t\t\t\tconst y0: number = y + (h / 2) * (1 - startSize);\n\t\t\t\t\tconst x1: number = x + w;\n\t\t\t\t\tconst y1: number = y + (h / 2) * (1 - endSize);\n\t\t\t\t\tconst x2: number = x + w;\n\t\t\t\t\tconst y2: number = y + h - (h / 2) * (1 - endSize);\n\t\t\t\t\tconst x3: number = x;\n\t\t\t\t\tconst y3: number = y + h - (h / 2) * (1 - startSize);\n\n\t\t\t\t\tconst stepElement: SVGPathElement = SVG.path({\n\t\t\t\t\t\td: `M ${x0} ${y0} L ${x1} ${y1} L ${x2} ${y2} L ${x3} ${y3} z`,\n\t\t\t\t\t\tstyle: `fill: ${color};`,\n\t\t\t\t\t});\n\t\t\t\t\tcontainer.appendChild(stepElement);\n\t\t\t\t} else {\n\t\t\t\t\tconst stepElement: SVGRectElement = SVG.rect({\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tstyle: `fill: ${color};`,\n\t\t\t\t\t});\n\t\t\t\t\tcontainer.appendChild(stepElement);\n\t\t\t\t}\n\n\t\t\t\tif (continuesLastPattern) {\n\t\t\t\t\tlet indicatorOffset: number = 2 + padding;\n\t\t\t\t\tconst arrowHeight: number = Math.min(h, 20);\n\t\t\t\t\tconst arrowY: number = y + h / 2;\n\n\t\t\t\t\tlet arrowPath: string;\n\t\t\t\t\tarrowPath = \"M \" + prettyNumber(partWidth * stepPartStart + indicatorOffset) + \" \" + prettyNumber(arrowY - 0.1 * arrowHeight);\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset) + \" \" + prettyNumber(arrowY + 0.1 * arrowHeight);\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 4) + \" \" + prettyNumber(arrowY + 0.1 * arrowHeight);\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 4) + \" \" + prettyNumber(arrowY + 0.3 * arrowHeight);\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 12) + \" \" + prettyNumber(arrowY);\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 4) + \" \" + prettyNumber(arrowY - 0.3 * arrowHeight);\n\t\t\t\t\tarrowPath += \"L \" + prettyNumber(partWidth * stepPartStart + indicatorOffset + 4) + \" \" + prettyNumber(arrowY - 0.1 * arrowHeight);\n\n\t\t\t\t\tconst arrow: SVGPathElement = SVG.path();\n\t\t\t\t\tarrow.setAttribute(\"d\", arrowPath);\n\t\t\t\t\tarrow.setAttribute(\"fill\", ColorConfig.invertedText);\n\n\t\t\t\t\ttoPushAtTheEnd.push(arrow);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let element of toPushAtTheEnd) {\n\t\t\tcontainer.appendChild(element);\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\n\tlet nextOffset = 0;\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\n\tconst wordSizes = [8, 4, 2, 1];\n\tfor (const wordSize of wordSizes) {\n\t\tif (leftBytes >= wordSize) {\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\n\t\t\tnextOffset = done.nextOffset;\n\t\t\tleftBytes = done.leftBytes;\n\t\t}\n\t}\n\treturn dest;\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\n\t\tlet ViewClass: any = Uint8Array;\n\t\tswitch (wordSize) {\n\t\t\tcase 8:\n\t\t\t\tViewClass = Float64Array;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tViewClass = Float32Array;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tViewClass = Uint16Array;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tViewClass = Uint8Array;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tViewClass = Uint8Array;\n\t\t\t\tbreak;\n\t\t}\n\t\t\t\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\n\t\t\tview_dest[i] = view_source[i];\n\t\t}\n\t\treturn {\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\n\t\t}\n\t}\n}\n\n// Note: All methods are big endian.\nexport class ArrayBufferWriter {\n\tprivate _writeIndex: number = 0;\n\tprivate _fileSize: number = 0;\n\tprivate _arrayBuffer: ArrayBuffer;\n\tprivate _data: DataView;\n\t\t\n\tconstructor(initialCapacity: number) {\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\n\t\tthis._data = new DataView(this._arrayBuffer);\n\t}\n\t\t\n\tprivate _addBytes(numBytes: number): void {\n\t\tthis._fileSize += numBytes;\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\n\t\t\tthis._data = new DataView(this._arrayBuffer);\n\t\t}\n\t}\n\t\t\n\tpublic getWriteIndex(): number {\n\t\treturn this._writeIndex;\n\t}\n\t\t\n\tpublic rewriteUint32(index: number, value: number): void {\n\t\tthis._data.setUint32(index, value >>> 0, false);\n\t}\n\t\t\n\tpublic writeUint32(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(4);\n\t\tthis._data.setUint32(this._writeIndex, value, false);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeUint24(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(3);\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeUint16(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(2);\n\t\tthis._data.setUint16(this._writeIndex, value, false);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeUint8(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(1);\n\t\tthis._data.setUint8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeInt8(value: number): void {\n\t\tvalue = value | 0;\n\t\tthis._addBytes(1);\n\t\tthis._data.setInt8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeMidi7Bits(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\n\t\tthis._addBytes(1);\n\t\tthis._data.setUint8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeMidiVariableLength(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\n\t\tlet startWriting: boolean = false;\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst shift: number = 21 - i * 7;\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\n\t\t}\n\t}\n\t\t\n\tpublic writeMidiAscii(string: string): void {\n\t\tthis.writeMidiVariableLength(string.length);\n\t\tfor (let i: number = 0; i < string.length; i++) {\n\t\t\tconst charCode: number = string.charCodeAt(i);\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\n\t\t}\n\t}\n\t\t\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport const defaultMidiExpression: number = 0x7F;\nexport const defaultMidiPitchBend: number = 0x2000;\n\nexport const enum MidiChunkType {\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\n}\n\nexport const enum MidiFileFormat {\n\tsingleTrack = 0x0000,\n\tsimultaneousTracks = 0x0001,\n\tindependentTracks = 0x0002,\n}\n\n// Lower 4 bits indicate channel, except for meta and sysex events.\nexport const enum MidiEventType {\n\t//channelMode = 0x70,\n\tnoteOff = 0x80,\n\tnoteOn = 0x90,\n\tkeyPressure = 0xA0,\n\tcontrolChange = 0xB0,\n\tprogramChange = 0xC0,\n\tchannelPressure = 0xD0,\n\tpitchBend = 0xE0,\n\tmetaAndSysex = 0xF0,\n\t\t\n\t// These events are identified by all 8 bits.\n\tmeta = 0xFF,\n\t// sysexStart = 0xF0,\n\t// sysexEscape = 0xF7,\n}\n\nexport const enum MidiControlEventMessage {\n\t\t\n\tsetParameterMSB = 0x06,\n\tvolumeMSB = 0x07,\n\tpanMSB = 0x0A,\n\texpressionMSB = 0x0B,\n\t\t\n\tsetParameterLSB = 0x26,\n\t//volumeLSB = 0x27,\n\t//expressionLSB = 0x2B,\n\t\t\n\t//nonRegisteredParameterNumberLSB = 0x62,\n\t//nonRegisteredParameterNumberMSB = 0x63,\n\tregisteredParameterNumberLSB = 0x64,\n\tregisteredParameterNumberMSB = 0x65,\n\t\t\n\t// Channel mode messages:\n\t/*\n\tallSoundOff = 0x78,\n\tresetControllers = 0x79,\n\tlocalControl = 0x7A,\n\tallNotesOff = 0x7B,\n\tomniModeOff = 0x7C,\n\tomniModeOn = 0x7D,\n\tmonoMode = 0x7E,\n\tpolyphonicMode = 0x7F,\n\t*/\n}\n\nexport const enum MidiRegisteredParameterNumberMSB {\n\tpitchBendRange = 0x00, // semitones\n\tfineTuning = 0x00,\n\tcoarseTuning = 0x00,\n\ttuningProgramSelect = 0x00,\n\ttuningBankSelect = 0x00,\n\treset = 0x7f,\n}\n\nexport const enum MidiRegisteredParameterNumberLSB {\n\tpitchBendRange = 0x00, // cents\n\tfineTuning = 0x01,\n\tcoarseTuning = 0x02,\n\ttuningProgramSelect = 0x03,\n\ttuningBankSelect = 0x04,\n\treset = 0x7f,\n}\n\nexport const enum MidiMetaEventMessage {\n\tsequenceNumber = 0x00,\n\ttext = 0x01,\n\tcopyrightNotice = 0x02,\n\ttrackName = 0x03,\n\tinstrumentName = 0x04,\n\tlyricText = 0x05,\n\tmarker = 0x06,\n\tcuePoint = 0x07,\n\tchannelPrefix = 0x20,\n\tendOfTrack = 0x2F,\n\ttempo = 0x51,\n\tsmpteOffset = 0x54,\n\ttimeSignature = 0x58,\n\tkeySignature = 0x59,\n\tsequencerSpecificEvent = 0x7F,\n}\n\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\nexport interface AnalogousDrum {\n\tfrequency: number;\n\tduration: number;\n\tvolume: number;\n}\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\n\t\t35: { frequency:  0, duration: 2, volume: 3 }, // Acoustic Bass Drum\n\t\t36: { frequency:  0, duration: 2, volume: 3 }, // Bass Drum 1\n\t\t37: { frequency:  5, duration: 1, volume: 3 }, // Side Stick\n\t\t38: { frequency:  4, duration: 2, volume: 3 }, // Acoustic Snare\n\t\t39: { frequency:  5, duration: 2, volume: 3 }, // Hand Clap\n\t\t40: { frequency:  4, duration: 2, volume: 3 }, // Electric Snare\n\t\t41: { frequency:  1, duration: 2, volume: 3 }, // Low Floor Tom\n\t\t42: { frequency:  8, duration: 1, volume: 3 }, // Closed Hi Hat\n\t\t43: { frequency:  1, duration: 2, volume: 3 }, // High Floor Tom\n\t\t44: { frequency:  8, duration: 1, volume: 2 }, // Pedal Hi-Hat\n\t\t45: { frequency:  2, duration: 2, volume: 3 }, // Low Tom\n\t\t46: { frequency:  8, duration: 4, volume: 3 }, // Open Hi-Hat\n\t\t47: { frequency:  2, duration: 2, volume: 3 }, // Low-Mid Tom\n\t\t48: { frequency:  3, duration: 2, volume: 3 }, // Hi-Mid Tom\n\t\t49: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 1\n\t\t50: { frequency:  3, duration: 2, volume: 3 }, // High Tom\n\t\t51: { frequency:  6, duration: 4, volume: 2 }, // Ride Cymbal 1\n\t\t52: { frequency:  7, duration: 4, volume: 3 }, // Chinese Cymbal\n\t\t53: { frequency:  6, duration: 2, volume: 3 }, // Ride Bell\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\n\t\t55: { frequency:  9, duration: 4, volume: 3 }, // Splash Cymbal\n\t\t56: { frequency:  7, duration: 1, volume: 2 }, // Cowbell\n\t\t57: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 2\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\n\t\t59: { frequency:  6, duration: 4, volume: 3 }, // Ride Cymbal 2\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\n};\n\nexport function midiVolumeToVolumeMult(volume: number): number {\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\n}\nexport function volumeMultToMidiVolume(volumeMult: number): number {\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\n}\nexport function midiExpressionToVolumeMult(expression: number): number {\n\treturn Math.pow(expression / 127, 4.0);\n}\nexport function volumeMultToMidiExpression(volumeMult: number): number {\n\treturn Math.pow(volumeMult, 0.25) * 127;\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { InstrumentType, /*EnvelopeType,*/ Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Preset, EditorConfig } from \"./EditorConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\n\nconst { button, div, h2, input, select, option } = HTML;\n\nfunction lerp(low: number, high: number, t: number): number {\n    return low + t * (high - low);\n}\n\nfunction save(blob: Blob, name: string): void {\n    if ((<any>navigator).msSaveOrOpenBlob) {\n        (<any>navigator).msSaveOrOpenBlob(blob, name);\n        return;\n    }\n\n    const anchor: HTMLAnchorElement = document.createElement(\"a\");\n    if (anchor.download != undefined) {\n        const url: string = URL.createObjectURL(blob);\n        setTimeout(function () { URL.revokeObjectURL(url); }, 60000);\n        anchor.href = url;\n        anchor.download = name;\n        // Chrome bug regression: We need to delay dispatching the click\n        // event. Seems to be related to going back in the browser history.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=825100\n        setTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\n    } else {\n        const url: string = URL.createObjectURL(blob);\n        setTimeout(function () { URL.revokeObjectURL(url); }, 60000);\n        if (!window.open(url, \"_blank\")) window.location.href = url;\n    }\n}\n\nexport class ExportPrompt implements Prompt {\n    private synth: Synth;\n    private thenExportTo: string;\n    private recordedSamplesL: Float32Array;\n    private recordedSamplesR: Float32Array;\n    private sampleFrames: number;\n    private totalChunks: number;\n    private currentChunk: number;\n    private outputStarted: boolean = false;\n    private readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\n    private readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\n    private readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\n    private readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\n    private readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\n    private readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\n        option({ value: \"wav\" }, \"Export to .wav file.\"),\n        option({ value: \"mp3\" }, \"Export to .mp3 file.\"),\n\t//option({ value: \"ogg\" }, \"Export to .ogg file.\"),\n        option({ value: \"midi\" }, \"Export to .mid file.\"),\n        option({ value: \"json\" }, \"Export to .json file.\"),\n        option({ value: \"html\" }, \"Export to .html file.\"),\n    );\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n    private readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\n    private readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\n    private readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\n    private readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\n        this._outputProgressBar,\n        this._outputProgressLabel,\n    );\n    private static readonly midiChipInstruments: number[] = [\n        0x4A, // rounded -> recorder\n        0x47, // triangle -> clarinet\n        0x50, // square -> square wave\n        0x46, // ¹/₄ pulse -> bassoon\n        0x44, // ¹/₈ pulse -> oboe\n        0x51, // sawtooth -> sawtooth wave\n        0x51, // double saw -> sawtooth wave\n        0x51, // double pulse -> sawtooth wave\n        0x51, // spiky -> sawtooth wave\n    ];\n\n    public readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\n        h2(\"Export Options\"),\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\n            \"File name:\",\n            this._fileName,\n        ),\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\n            \"Length:\",\n            this._computedSamplesLabel,\n        ),\n        div({ style: \"display: table; width: 100%;\" },\n            div({ style: \"display: table-row;\" },\n                div({ style: \"display: table-cell;\" }, \"Intro:\"),\n                div({ style: \"display: table-cell;\" }, \"Loop Count:\"),\n                div({ style: \"display: table-cell;\" }, \"Outro:\"),\n            ),\n            div({ style: \"display: table-row;\" },\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\n            ),\n        ),\n        div({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\n        div({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\n        this._outputProgressContainer,\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n            this._exportButton,\n        ),\n        this._cancelButton,\n    );\n\n    constructor(private _doc: SongDocument) {\n        this._loopDropDown.value = \"1\";\n\n        if (this._doc.song.loopStart == 0) {\n            this._enableIntro.checked = false;\n            this._enableIntro.disabled = true;\n        } else {\n            this._enableIntro.checked = true;\n            this._enableIntro.disabled = false;\n        }\n        if (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\n            this._enableOutro.checked = false;\n            this._enableOutro.disabled = true;\n        } else {\n            this._enableOutro.checked = true;\n            this._enableOutro.disabled = false;\n        }\n\n        const lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\n        if (lastExportFormat != null) {\n            this._formatSelect.value = lastExportFormat;\n        }\n\n        this._fileName.select();\n        setTimeout(() => this._fileName.focus());\n\n        this._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\n        this._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\n        this._exportButton.addEventListener(\"click\", this._export);\n        this._cancelButton.addEventListener(\"click\", this._close);\n        this._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\n        this._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\n        this._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\n        this.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\n        this._fileName.value = _doc.song.title;\n        ExportPrompt._validateFileName(null, this._fileName);\n\n        (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\n    }\n\n    // Could probably be moved to doc or synth. Fine here for now until needed by something else.\n    private samplesToTime(samples: number): string {\n        const rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\n        const seconds: number = rawSeconds % 60;\n        const minutes: number = Math.floor(rawSeconds / 60);\n        return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n    }\n\n    private _close = (): void => {\n        if (this.synth != null)\n            this.synth.renderingSong = false;\n        this.outputStarted = false;\n        this._doc.undo();\n    }\n\n    public changeFileName(newValue: string) {\n        this._fileName.value = newValue;\n    }\n\n    public cleanUp = (): void => {\n        this._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\n        this._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\n        this._exportButton.removeEventListener(\"click\", this._export);\n        this._cancelButton.removeEventListener(\"click\", this._close);\n        this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n    }\n\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n            this._export();\n        }\n    }\n\n    private static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\n\n        let input: HTMLInputElement;\n        if (event != null) {\n            input = <HTMLInputElement>event.target;\n        } else if (use != undefined) {\n            input = use;\n        }\n        else {\n            return;\n        }\n        const deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\n        if (deleteChars.test(input.value)) {\n            let cursorPos: number = <number>input.selectionStart;\n            input.value = input.value.replace(deleteChars, \"\");\n            cursorPos--;\n            input.setSelectionRange(cursorPos, cursorPos);\n        }\n    }\n\n    private static _validateNumber(event: Event): void {\n        const input: HTMLInputElement = <HTMLInputElement>event.target;\n        input.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\n    }\n\n    private _export = (): void => {\n        if (this.outputStarted == true)\n            return;\n        window.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\n        switch (this._formatSelect.value) {\n            case \"wav\":\n                this.outputStarted = true;\n                this._exportTo(\"wav\");\n                break;\n            case \"mp3\":\n                this.outputStarted = true;\n                this._exportTo(\"mp3\");\n                break;\n            case \"midi\":\n                this.outputStarted = true;\n                this._exportToMidi();\n                break;\n            case \"json\":\n                this.outputStarted = true;\n                this._exportToJson();\n                break;\n            case \"html\":\n                this._exportToHtml();\n                break;\n            default:\n                throw new Error(\"Unhandled file export type.\");\n        }\n    }\n\n    private _synthesize(): void {\n        //const timer: number = performance.now();\n\n        // If output was stopped e.g. user clicked the close button, abort.\n        if (this.outputStarted == false) {\n            return;\n        }\n\n        // Update progress bar UI once per 5 sec of exported data\n        const samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\n        const currentFrame: number = this.currentChunk * samplesPerChunk;\n\n        const samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\n        const tempSamplesL = new Float32Array(samplesInChunk);\n        const tempSamplesR = new Float32Array(samplesInChunk);\n\n        this.synth.renderingSong = true;\n        this.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\n\n        // Concatenate chunk data into final array\n        this.recordedSamplesL.set(tempSamplesL, currentFrame);\n        this.recordedSamplesR.set(tempSamplesR, currentFrame);\n\n        // Update UI\n        this._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\n        this._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\n\n        // Next call, synthesize the next chunk.\n        this.currentChunk++;\n\n        if (this.currentChunk >= this.totalChunks) {\n            // Done, call final function\n            this.synth.renderingSong = false;\n            this._outputProgressLabel.innerText = \"Encoding...\";\n            if (this.thenExportTo == \"wav\") {\n                this._exportToWavFinish();\n            }\n            else if (this.thenExportTo == \"mp3\") {\n                this._exportToMp3Finish();\n            }\n            else {\n                throw new Error(\"Unrecognized file export type chosen!\");\n            }\n        }\n        else {\n            // Continue batch export\n            setTimeout(() => { this._synthesize(); });\n        }\n\n        //console.log(\"export timer\", (performance.now() - timer) / 1000.0);\n    }\n\n    private _exportTo(type: string): void {\n        // Batch the export operation\n        this.thenExportTo = type;\n        this.currentChunk = 0;\n        this.synth = new Synth(this._doc.song);\n        if (type == \"wav\") {\n            this.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\n        }\n        else if (type == \"mp3\") {\n            this.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\n        }\n        else {\n            throw new Error(\"Unrecognized file export type chosen!\");\n        }\n\n        this._outputProgressBar.style.setProperty(\"width\", \"0%\");\n        this._outputProgressLabel.innerText = \"0%\";\n\n        this.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\n        if (!this._enableIntro.checked) {\n            for (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\n                this.synth.goToNextBar();\n            }\n        }\n\n      \n        this.synth.computeLatestModValues();\n\t      this.synth.warmUpSynthesizer(this._doc.song);\n\n        this.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\n        // Compute how many UI updates will need to run to determine how many \n        this.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\n        this.recordedSamplesL = new Float32Array(this.sampleFrames);\n        this.recordedSamplesR = new Float32Array(this.sampleFrames);\n\n        // Batch the actual export\n        setTimeout(() => { this._synthesize(); });\n    }\n\n    private _exportToWavFinish(): void {\n        const sampleFrames: number = this.recordedSamplesL.length;\n        const sampleRate: number = this.synth.samplesPerSecond;\n\n        const wavChannelCount: number = 2;\n        const bytesPerSample: number = 2;\n        const bitsPerSample: number = 8 * bytesPerSample;\n        const sampleCount: number = wavChannelCount * sampleFrames;\n\n        const totalFileSize: number = 44 + sampleCount * bytesPerSample;\n\n        let index: number = 0;\n        const arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\n        const data: DataView = new DataView(arrayBuffer);\n        data.setUint32(index, 0x52494646, false); index += 4;\n        data.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\n        data.setUint32(index, 0x57415645, false); index += 4;\n        data.setUint32(index, 0x666D7420, false); index += 4;\n        data.setUint32(index, 0x00000010, true); index += 4; // size of following header\n        data.setUint16(index, 0x0001, true); index += 2; // not compressed\n        data.setUint16(index, wavChannelCount, true); index += 2; // channel count\n        data.setUint32(index, sampleRate, true); index += 4; // sample rate\n        data.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\n        data.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\n        data.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\n        data.setUint32(index, 0x64617461, false); index += 4;\n        data.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\n\n        if (bytesPerSample > 1) {\n            // usually samples are signed. \n            const range: number = (1 << (bitsPerSample - 1)) - 1;\n            for (let i: number = 0; i < sampleFrames; i++) {\n                let valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\n                let valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\n                if (bytesPerSample == 2) {\n                    data.setInt16(index, valL, true); index += 2;\n                    data.setInt16(index, valR, true); index += 2;\n                } else if (bytesPerSample == 4) {\n                    data.setInt32(index, valL, true); index += 4;\n                    data.setInt32(index, valR, true); index += 4;\n                } else {\n                    throw new Error(\"unsupported sample size\");\n                }\n            }\n        } else {\n            // 8 bit samples are a special case: they are unsigned.\n            for (let i: number = 0; i < sampleFrames; i++) {\n                let valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\n                let valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\n                data.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\n                data.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\n            }\n        }\n\n        const blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\n        save(blob, this._fileName.value.trim() + \".wav\");\n\n        this._close();\n    }\n\n    private _exportToMp3Finish(): void {\n        const whenEncoderIsAvailable = (): void => {\n\n            const lamejs: any = (<any>window)[\"lamejs\"];\n            const channelCount: number = 2;\n            const kbps: number = 192;\n            const sampleBlockSize: number = 1152;\n            const mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\n            const mp3Data: any[] = [];\n\n            const left: Int16Array = new Int16Array(this.recordedSamplesL.length);\n            const right: Int16Array = new Int16Array(this.recordedSamplesR.length);\n            const range: number = (1 << 15) - 1;\n            for (let i: number = 0; i < this.recordedSamplesL.length; i++) {\n                left[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\n                right[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\n            }\n\n            for (let i: number = 0; i < left.length; i += sampleBlockSize) {\n                const leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\n                const rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\n                const mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\n                if (mp3buf.length > 0) mp3Data.push(mp3buf);\n            }\n\n            const mp3buf: any = mp3encoder.flush();\n            if (mp3buf.length > 0) mp3Data.push(mp3buf);\n\n            const blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\n            save(blob, this._fileName.value.trim() + \".mp3\");\n            this._close();\n        }\n\n        if (\"lamejs\" in window) {\n            whenEncoderIsAvailable();\n        } else {\n            var script = document.createElement(\"script\");\n            script.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\n            script.onload = whenEncoderIsAvailable;\n            document.head.appendChild(script);\n        }\n    }\n\n    private _exportToMidi(): void {\n        const song: Song = this._doc.song;\n        const midiTicksPerBeepBoxTick: number = 2;\n        const midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\n        const midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\n        const secondsPerMinute: number = 60;\n        const microsecondsPerMinute: number = secondsPerMinute * 1000000;\n        const beatsPerMinute: number = song.getBeatsPerMinute();\n        const microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\n        //const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\n        const midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\n        const pitchBendRange: number = 24;\n        const defaultNoteVelocity: number = 90;\n\n        const unrolledBars: number[] = [];\n        if (this._enableIntro.checked) {\n            for (let bar: number = 0; bar < song.loopStart; bar++) {\n                unrolledBars.push(bar);\n            }\n        }\n        for (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\n            for (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\n                unrolledBars.push(bar);\n            }\n        }\n        if (this._enableOutro.checked) {\n            for (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\n                unrolledBars.push(bar);\n            }\n        }\n\n        const tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\n        let midiChannelCounter: number = 0;\n        let foundADrumset: boolean = false;\n        for (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\n            if (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\n                tracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\n                foundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\n            } else {\n                if (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\n                tracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\n                if (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\n            }\n        }\n\n        const writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\n        writer.writeUint32(MidiChunkType.header);\n        writer.writeUint32(6); // length of headers is 6 bytes\n        writer.writeUint16(MidiFileFormat.simultaneousTracks);\n        writer.writeUint16(tracks.length);\n        writer.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\n\n        for (const track of tracks) {\n            writer.writeUint32(MidiChunkType.track);\n\n            const { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\n\n            // We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\n            const trackStartIndex: number = writer.getWriteIndex();\n            writer.writeUint32(0); // placeholder for track size\n\n            let prevTime: number = 0;\n            let barStartTime: number = 0;\n            const writeEventTime = function (time: number): void {\n                if (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\n                writer.writeMidiVariableLength(time - prevTime);\n                prevTime = time;\n            }\n\n            const writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\n                if (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\n                writer.writeUint8(MidiEventType.controlChange | midiChannel);\n                writer.writeMidi7Bits(message);\n                writer.writeMidi7Bits(value | 0);\n            }\n\n            if (isMeta) {\n                // for first midi track, include tempo, time signature, and key signature information.\n\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.text);\n                writer.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\n\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.tempo);\n                writer.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\n                writer.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\n\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\n                writer.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\n                writer.writeUint8(song.beatsPerBar); // numerator.\n                writer.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\n                writer.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\n                writer.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\n\t\t\t\tlet tempScale = song.scale == Config.scales.dictionary[\"Custom\"].index ? song.scaleCustom : Config.scales[song.scale].flags;\n                const isMinor: boolean = tempScale[3] && !tempScale[4];\n                const key: number = song.key; // C=0, C#=1, counting up to B=11\n                let numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\n                if ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\n                if (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\n                while (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\n\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.keySignature);\n                writer.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\n                writer.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\n                writer.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\n\n                if (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\n                writeEventTime(barStartTime);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.marker);\n                writer.writeMidiAscii(\"Loop Start\");\n\n                for (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\n                    barStartTime += midiTicksPerBar * song.loopLength;\n                    writeEventTime(barStartTime);\n                    writer.writeUint8(MidiEventType.meta);\n                    writer.writeMidi7Bits(MidiMetaEventMessage.marker);\n                    writer.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\n                }\n\n                if (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\n                if (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\n\n            } else {\n                // For remaining tracks, set up the instruments and write the notes:\n\n                let channelName: string = isNoise\n                    ? \"noise channel \" + channel\n                    : \"pitch channel \" + channel;\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.trackName);\n                writer.writeMidiAscii(channelName);\n\n                // This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\n\n                let prevInstrumentIndex: number = -1;\n                function writeInstrumentSettings(instrumentIndex: number): void {\n                    const instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\n                    const preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\n\n                    if (prevInstrumentIndex != instrumentIndex) {\n                        prevInstrumentIndex = instrumentIndex;\n                        writeEventTime(barStartTime);\n                        writer.writeUint8(MidiEventType.meta);\n                        writer.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\n                        writer.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\n\n                        if (!isDrumset) {\n                            let instrumentProgram: number = 81; // default to sawtooth wave. \n\n                            if (preset != null && preset.midiProgram != undefined) {\n                                instrumentProgram = preset.midiProgram;\n                            } else if (instrument.type == InstrumentType.drumset) {\n                                // The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\n                                instrumentProgram = 116; // taiko\n                            } else {\n                                if (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\n                                    if (isNoise) {\n                                        instrumentProgram = 116; // taiko\n                                    } else {\n                                        instrumentProgram = 75; // pan flute\n                                    }\n                                } else if (instrument.type == InstrumentType.chip) {\n                                    if (ExportPrompt.midiChipInstruments.length > instrument.chipWave) {\n                                        instrumentProgram = ExportPrompt.midiChipInstruments[instrument.chipWave];\n                                    }\n                                } else if (instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op || instrument.type == InstrumentType.harmonics) {\n                                    instrumentProgram = 81; // sawtooth\n                                } else if (instrument.type == InstrumentType.pickedString) {\n                                    instrumentProgram = 0x19; // steel guitar\n                                } else if (instrument.type == InstrumentType.customChipWave) {\n                                    instrumentProgram = 81; // sawtooth\n                                } else {\n                                    throw new Error(\"Unrecognized instrument type.\");\n                                }\n                            }\n\n                            // Program (instrument) change event:\n                            writeEventTime(barStartTime);\n                            writer.writeUint8(MidiEventType.programChange | midiChannel);\n                            writer.writeMidi7Bits(instrumentProgram);\n                        }\n\n                        // Instrument volume:\n                        writeEventTime(barStartTime);\n                        let instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\n                        writeControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\n\n                        // Instrument pan:\n                        writeEventTime(barStartTime);\n                        let instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\n                        writeControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\n                    }\n                }\n                if (song.getPattern(channel, 0) == null) {\n                    // Go ahead and apply the instrument settings at the beginning of the channel\n                    // even if a bar doesn't kick in until later.\n                    writeInstrumentSettings(0);\n                }\n\n                let prevPitchBend: number = defaultMidiPitchBend;\n                let prevExpression: number = defaultMidiExpression;\n                let shouldResetExpressionAndPitchBend: boolean = false;\n                //let prevTremolo: number = -1;\n                const channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\n                const intervalScale: number = isNoise ? Config.noiseInterval : 1;\n\n                for (const bar of unrolledBars) {\n                    const pattern: Pattern | null = song.getPattern(channel, bar);\n\n                    if (pattern != null) {\n\n                        const instrumentIndex: number = pattern.instruments[0]; // Don't bother trying to export multiple instruments per pattern to midi, just pick the first one.\n                        const instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\n                        const preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\n                        writeInstrumentSettings(instrumentIndex);\n\n                        let usesArpeggio: boolean = instrument.getChord().arpeggiates;\n                        let polyphony: number = usesArpeggio ? 1 : Config.maxChordSize;\n                        if (instrument.getChord().customInterval) {\n                            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics) {\n                                polyphony = 2;\n                                usesArpeggio = true;\n                            } else if (instrument.type == InstrumentType.fm) {\n                                polyphony = Config.operatorCount;\n                            } else {\n                                console.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\n                            }\n                        }\n\n                        for (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\n                            const note: Note = pattern.notes[noteIndex];\n\n                            const noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\n                            let pinTime: number = noteStartTime;\n                            let pinSize: number = note.pins[0].size;\n                            let pinInterval: number = note.pins[0].interval;\n                            const prevPitches: number[] = [-1, -1, -1, -1];\n                            const nextPitches: number[] = [-1, -1, -1, -1];\n                            const toneCount: number = Math.min(polyphony, note.pitches.length);\n                            const velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].size / Config.noteSizeMax)) : defaultNoteVelocity;\n\n                            // The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \n                            // To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\n                            // This may involve offsetting this base pitch from BeepBox's note pitch.\n                            let mainInterval: number = note.pickMainInterval();\n                            let pitchOffset: number = mainInterval * intervalScale;\n                            if (!isDrumset) {\n                                let maxPitchOffset: number = pitchBendRange;\n                                let minPitchOffset: number = -pitchBendRange;\n                                for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n                                    const interval = note.pins[pinIndex].interval * intervalScale;\n                                    maxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\n                                    minPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\n                                }\n                                /*\n                                // I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\n                                if (usesArpeggio && note.pitches.length > polyphony) {\n                                    let lowestArpeggioOffset: number = 0;\n                                    let highestArpeggioOffset: number = 0;\n                                    const basePitch: number = note.pitches[toneCount - 1];\n                                    for (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\n                                        lowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\n                                        highestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\n                                    }\n                                    maxPitchOffset -= lowestArpeggioOffset;\n                                    minPitchOffset += lowestArpeggioOffset;\n                                }\n                                */\n                                pitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\n                            }\n\n                            for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n                                const nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\n                                const nextPinSize: number = note.pins[pinIndex].size;\n                                const nextPinInterval: number = note.pins[pinIndex].interval;\n\n                                const length: number = nextPinTime - pinTime;\n                                for (let midiTick: number = 0; midiTick < length; midiTick++) {\n                                    const midiTickTime: number = pinTime + midiTick;\n                                    const linearSize: number = lerp(pinSize, nextPinSize, midiTick / length);\n                                    const linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\n\n                                    const interval: number = linearInterval * intervalScale - pitchOffset;\n\n                                    const pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\n\n                                    const expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.noteSizeToVolumeMult(linearSize))));\n\n                                    if (pitchBend != prevPitchBend) {\n                                        writeEventTime(midiTickTime);\n                                        writer.writeUint8(MidiEventType.pitchBend | midiChannel);\n                                        writer.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\n                                        writer.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\n                                        prevPitchBend = pitchBend;\n                                    }\n\n                                    if (expression != prevExpression && !isDrumset) {\n                                        writeEventTime(midiTickTime);\n                                        writeControlEvent(MidiControlEventMessage.expressionMSB, expression);\n                                        prevExpression = expression;\n                                    }\n\n                                    const noteStarting: boolean = midiTickTime == noteStartTime;\n                                    for (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n                                        let nextPitch: number = note.pitches[toneIndex];\n                                        if (isDrumset) {\n                                            nextPitch += mainInterval;\n                                            const drumsetMap: number[] = [\n                                                36, // Bass Drum 1\n                                                41, // Low Floor Tom\n                                                45, // Low Tom\n                                                48, // Hi-Mid Tom\n                                                40, // Electric Snare\n                                                39, // Hand Clap\n                                                59, // Ride Cymbal 2\n                                                49, // Crash Cymbal 1\n                                                46, // Open Hi-Hat\n                                                55, // Splash Cymbal\n                                                69, // Cabasa\n                                                54, // Tambourine\n                                            ];\n                                            if (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\n                                            nextPitch = drumsetMap[nextPitch];\n                                        } else {\n                                            if (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\n                                                const midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\n                                                const midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\n                                                const arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\n                                                nextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\n                                            }\n                                            nextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\n                                            if (preset != null && preset.midiSubharmonicOctaves != undefined) {\n                                                nextPitch += 12 * preset.midiSubharmonicOctaves;\n                                            } else if (isNoise) {\n                                                nextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\n                                            }\n\n                                            if (isNoise) nextPitch *= 2;\n                                        }\n                                        nextPitch = Math.max(0, Math.min(127, nextPitch));\n                                        nextPitches[toneIndex] = nextPitch;\n\n                                        if (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\n                                            writeEventTime(midiTickTime);\n                                            writer.writeUint8(MidiEventType.noteOff | midiChannel);\n                                            writer.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\n                                            writer.writeMidi7Bits(velocity); // velocity\n                                        }\n                                    }\n\n                                    for (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n                                        if (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\n                                            writeEventTime(midiTickTime);\n                                            writer.writeUint8(MidiEventType.noteOn | midiChannel);\n                                            writer.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\n                                            writer.writeMidi7Bits(velocity); // velocity\n                                            prevPitches[toneIndex] = nextPitches[toneIndex];\n                                        }\n                                    }\n                                }\n\n                                pinTime = nextPinTime;\n                                pinSize = nextPinSize;\n                                pinInterval = nextPinInterval;\n                            }\n\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// End all tones.\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n\t\t\t\t\t\t\t\t// TODO: If the note at the start of the next pattern has\n\t\t\t\t\t\t\t\t// continuesLastPattern and has the same chord, it ought to extend\n\t\t\t\t\t\t\t\t// this previous note.\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\n\t\t\t\t\t\t\t\t// Reset expression\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\n\t\t\t\t\t\t\t\t// Reset pitch bend\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twriteEventTime(barStartTime);\n\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\n\t\t\twriter.writeMidiVariableLength(0x00);\n\t\t\t\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\n\t\t}\n\t\t\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], {type: \"audio/midi\"});\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\n\t\t\n\t\tthis._close();\n\t}\n\t\n\tprivate _exportToJson(): void {\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\n\t\tconst blob: Blob = new Blob([jsonString], {type: \"application/json\"});\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\n\t\tthis._close();\n    }\n\n    private _exportToHtml(): void {\n        const fileContents = `\\\n<!DOCTYPE html><meta charset=\"utf-8\">\n\nYou should be redirected to the song at:<br /><br />\n\n<a id=\"destination\" href=\"${new URL(\"#\" + this._doc.song.toBase64String(), location.href).href}\"></a>\n\n<style>\n\t:root {\n\t\tcolor: white;\n\t\tbackground: black;\n\t\tfont-family:\n\t\tsans-serif;\n\t}\n\ta {\n\t\tcolor: #98f;\n\t}\n\ta[href]::before {\n\t\tcontent: attr(href);\n\t}\n</style>\n\n<script>\n\tlocation.assign(document.querySelector(\"a#destination\").href);\n</script>\n`;\n        const blob: Blob = new Blob([fileContents], { type: \"text/html\" });\n        save(blob, this._fileName.value.trim() + \".html\");\n        this._close();\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\n\nexport class Layout {\n\tprivate static readonly _layoutMap: {[K: string]: string} = {\n\t\t\"small\": \"\",\n\t\t\"long\": `\\\n\n\t\t\t/* long layout */\n\t\t\t@media (min-width: 711px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 390px; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) minmax(0, min-content);\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmin-height: 0;\n\t\t\t\t\tflex: 1;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t\tmax-height: 97.5vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .song-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 390px;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .barScrollBar {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor.selectRow {\n\t\t\t\t\theight: 2em;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .operatorRow {\n\t\t\t\t\theiht: 2em;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tmax-height: 446px;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tscrollbar-width: auto;\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t\t\"tall\": `\\\n\t\t\t/* tall layout */\n\t\t\t@media (min-width: 711px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) 192px;\n\t\t\t\t\tgrid-template-rows: 1fr;\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmin-height: 0;\n\t\t\t\t\tflex: 0;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t\tflex-basis: initial;\n\t\t\t\t\tflex-grow: 0;\n\t\t\t\t\tmax-height: 97.5vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 192px;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"version-area\"\n\t\t\t\t\t\t\"play-pause-area\"\n\t\t\t\t\t\t\"menu-area\"\n\t\t\t\t\t\t\"song-settings-area\"\n\t\t\t\t\t\t\"instrument-settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .version-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .play-pause-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 22px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .menu-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 82px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .barScrollBar {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tscrollbar-width: auto;\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t\t\"wide\": `\\\n\t\t\t/* wide (JB) layout */\n\t\t\t@media (min-width: 1001px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em;\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 80%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tmax-height: 100%\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .editor-widget-column {\n\t\t\t\t\tflex: 0;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tflex: 0;\n\t\t\t\t\tflex-basis: initial;\n\t\t\t\t\tflex-grow: 0;\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tmax-height: 97.5vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .song-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 30em;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .version-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .play-pause-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 22px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .menu-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 82px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t\t\"AbyssBox Special\": `\\\n\n            \t/* AB Special layout */\n\t\t\t@media (min-width: 711px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: 390px minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) minmax(0, min-content);\n\t\t\t\t\tgrid-template-areas: \"settings-area pattern-area\" \"track-area track-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmin-height: 0;\n\t\t\t\t\tflex: 1;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t\tmax-height: 97.5vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .song-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 390px;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .barScrollBar {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor.selectRow {\n\t\t\t\t\theight: 2em;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .operatorRow {\n\t\t\t\t\theiht: 2em;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tmax-height: 446px;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tscrollbar-width: auto;\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\"Focus\": `\\\n\n            \t/* Focus layout */\n\t\t\t@media (min-width: 711px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0,1fr);\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) minmax(0, min-content) minmax(0, min-content);\n\t\t\t\t\tgrid-template-areas: \"pattern-area\" \"track-area track-area settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmin-height: 0;\n\t\t\t\t\tflex: 1;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t\tmax-height: 97.5vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .song-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 390px;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .barScrollBar {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor.selectRow {\n\t\t\t\t\theight: 2em;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .operatorRow {\n\t\t\t\t\theiht: 2em;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tmax-height: 446px;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tscrollbar-width: auto;\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t}\n\t\t\n\t\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\n\t\t\n\tpublic static setLayout(layout: string): void {\n\t\tthis._styleElement.textContent = this._layoutMap[layout];\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeHarmonics } from \"./changes\";\nimport { prettyNumber } from \"./EditorConfig\";\n\nexport class HarmonicsEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\t\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\n\t\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\n\t\tthis._octaves,\n\t\tthis._fifths,\n\t\tthis._curve,\n\t\tthis._lastControlPointContainer,\n\t);\n\t\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"harmonics\", style: \"height: 100%;\"}, this._svg);\n\t\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _freqPrev: number = 0;\n\tprivate _ampPrev: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _change: ChangeHarmonics | null = null;\n\tprivate _renderedPath: String = \"\";\n\tprivate _renderedFifths: boolean = true;\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\n\t\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\t\tconst rect: SVGRectElement = SVG.rect({fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight});\n\t\t\tthis._lastControlPoints.push(rect);\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\n\t\t}\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\t\n\tprivate _xToFreq(x: number): number {\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\n\t}\n\t\t\n\tprivate _yToAmp(y: number): number {\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t    \n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t    \n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\n\t\t\t\t\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\n\t\t\t\t\n\t\t\tif (freq != this._freqPrev) {\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\n\t\t\t\t\n\t\t\tthis._freqPrev = freq;\n\t\t\tthis._ampPrev = amp;\n\t\t\t\t\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t}\n\t\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._mouseDown) {\n\t\t\tthis._doc.record(this._change!);\n\t\t\tthis._change = null;\n\t\t}\n\t\tthis._mouseDown = false;\n\t}\n\t\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\n\t\tconst controlPointToHeight = (point: number): number => {\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\n\t\t}\n\t\t\t\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\n\t\tlet path: string = \"\";\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\n\t\t}\n\t\t\t\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\n\t\t}\n\t\t\t\n\t\tif (this._renderedPath != path) {\n\t\t\tthis._renderedPath = path;\n\t\t\tthis._curve.setAttribute(\"d\", path);\n\t\t}\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\n\t\t}\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\n\nimport { Change } from \"./Change\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\nconst { span } = HTML;\n\nexport class InputBox {\n\tprivate _change: Change | null = null;\n\tprivate _value: string = \"\";\n\tprivate _oldValue: string = \"\";\n\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\n\t\tinput.addEventListener(\"input\", this._whenInput);\n\t\tinput.addEventListener(\"change\", this._whenChange);\n\t}\n\n\tpublic updateValue(value: string): void {\n\t\tthis._value = value;\n\t\tthis.input.value = String(value);\n\t}\n\n\tprivate _whenInput = (): void => {\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\n\t\tthis._doc.setProspectiveChange(this._change);\n\t};\n\n\tprivate _whenChange = (): void => {\n\t\tthis._doc.record(this._change!);\n\t\tthis._change = null;\n\t};\n}\n\nexport class Slider {\n\tprivate _change: Change | null = null;\n\tprivate _value: number = 0;\n\tprivate _oldValue: number = 0;\n\tpublic container: HTMLSpanElement;\n\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\n\t\tinput.addEventListener(\"input\", this._whenInput);\n\t\tinput.addEventListener(\"change\", this._whenChange);\n\t}\n\n\tpublic updateValue(value: number): void {\n\t\tthis._value = value;\n\t\tthis.input.value = String(value);\n\t}\n\n\tprivate _whenInput = (): void => {\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\n\t\tif (this._getChange != null) {\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t};\n\n\tprivate _whenChange = (): void => {\n\t\tif (this._getChange != null) {\n\t\t\tthis._doc.record(this._change!);\n\t\t\tthis._change = null;\n\t\t}\n\t};\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// Note: All methods are big endian.\nexport class ArrayBufferReader {\n\tprivate _readIndex: number = 0;\n\tprivate _data: DataView;\n\t\t\n\tconstructor(data: DataView) {\n\t\tthis._data = data;\n\t}\n\t\t\n\tpublic getReadIndex(): number {\n\t\treturn this._readIndex;\n\t}\n\t\t\n\tpublic readUint32(): number {\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\n\t\tthis._readIndex += 4;\n\t\treturn result;\n\t}\n\t\t\n\tpublic readUint24(): number {\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\n\t}\n\t\t\n\tpublic readUint16(): number {\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\n\t\tthis._readIndex += 2;\n\t\treturn result;\n\t}\n\t\t\n\tpublic readUint8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint8(this._readIndex);\n\t\tthis._readIndex++;\n\t\treturn result;\n\t}\n\t\t\n\tpublic readInt8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getInt8(this._readIndex);\n\t\tthis._readIndex++;\n\t\treturn result;\n\t}\n\t\t\n\tpublic peakUint8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\treturn this._data.getUint8(this._readIndex);\n\t}\n\t\t\n\tpublic readMidi7Bits(): number {\n\t\tconst result: number = this.readUint8();\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\n\t\treturn result & 0x7f;\n\t}\n\t\t\n\tpublic readMidiVariableLength(): number {\n\t\tlet result: number = 0;\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst nextByte: number = this.readUint8();\n\t\t\tresult += nextByte & 0x7f;\n\t\t\tif (nextByte & 0x80) {\n\t\t\t\tresult = result << 7;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\t\n\tpublic skipBytes(length: number): void {\n\t\tthis._readIndex += length;\n\t}\n\t\t\n\tpublic hasMore(): boolean {\n\t\treturn this._data.byteLength > this._readIndex;\n\t}\n\t\t\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\n\t\tthis.skipBytes(length);\n\t\treturn result;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\nimport { Preset, EditorConfig } from \"./EditorConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { ChangeGroup } from \"./Change\";\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\n\n\tconst {button, p, div, h2, input} = HTML;\n\nexport class ImportPrompt implements Prompt {\n\t\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\t\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\n\t\th2(\"Import\"),\n\t\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\n\t\t),\n\t\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\n\t\t),\n\t\tthis._fileInput,\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._fileInput.select();\n\t\t\tsetTimeout(()=>this._fileInput.focus());\n\t\t\t\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t}\n\t\t\n\tprivate _whenFileSelected = (): void => {\n\t\tconst file: File = this._fileInput.files![0];\n\t\tif (!file) return;\n\t\t\t\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\n\t\tif (extension == \"json\") {\n\t\t\tconst reader: FileReader = new FileReader();\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\n\t\t\t\tthis._doc.prompt = null;\n\t\t\t\tthis._doc.goBackToStart();\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\n\t\t\t});\n\t\t\treader.readAsText(file);\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\n\t\t\tconst reader: FileReader = new FileReader();\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\n\t\t\t\tthis._doc.prompt = null;\n\t\t\t\tthis._doc.goBackToStart();\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\n\t\t\t});\n\t\t\treader.readAsArrayBuffer(file);\n\t\t} else {\n\t\t\tconsole.error(\"Unrecognized file extension.\");\n\t\t\tthis._close();\n\t\t}\n\t}\n\t\t\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\n\t\t\t\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\n\t\tlet headerReader: ArrayBufferReader | null = null;\n\t\tinterface Track {\n\t\t\treader: ArrayBufferReader;\n\t\t\tnextEventMidiTick: number;\n\t\t\tended: boolean;\n\t\t\trunningStatus: number;\n\t\t}\n\t\tconst tracks: Track[] = [];\n\t\t\twhile(reader.hasMore()) {\n\t\t\tconst chunkType: number = reader.readUint32();\n\t\t\tconst chunkLength: number = reader.readUint32();\n\t\t\tif (chunkType == MidiChunkType.header) {\n\t\t\t\tif (headerReader == null) {\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\n\t\t\t\t}\n\t\t\t} else if (chunkType == MidiChunkType.track) {\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\n\t\t\t\tif (trackReader.hasMore()) {\n\t\t\t\t\ttracks.push({\n\t\t\t\t\t\treader: trackReader,\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\n\t\t\t\t\t\tended: false,\n\t\t\t\t\t\trunningStatus: -1,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Unknown chunk type. Skip it.\n\t\t\t\treader.skipBytes(chunkLength);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif (headerReader == null) {\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\n\t\t\tthis._close();\n\t\t\treturn;\n\t\t}\n\t\tconst fileFormat: number = headerReader.readUint16();\n\t\t/*const trackCount: number =*/ headerReader.readUint16();\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\n\t\t\t\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\n\t\tlet currentIndependentTrackIndex: number = 0;\n\t\tconst currentTrackIndices: number[] = [];\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\n\t\tif (independentTracks) {\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\n\t\t} else {\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tinterface NoteEvent {\n\t\t\tmidiTick: number;\n\t\t\tpitch: number;\n\t\t\tvelocity: number;\n\t\t\tprogram: number;\n\t\t\tinstrumentVolume: number;\n\t\t\tinstrumentPan: number;\n\t\t\ton: boolean;\n\t\t}\n\t\tinterface PitchBendEvent {\n\t\t\tmidiTick: number;\n\t\t\tinterval: number;\n\t\t}\n\t\tinterface NoteSizeEvent {\n\t\t\tmidiTick: number;\n\t\t\tsize: number;\n\t\t}\n\n\t\tinterface TempoChange {\n\t\t\tmidiTick: number;\n\t\t\tmicrosecondsPerBeat: number;\n\t\t}\n\t\t\t\n\t\t// To read a MIDI file we have to simulate state changing over time.\n\t\t// Keep a record of various parameters for each channel that may\n\t\t// change over time, initialized to default values.\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\n\t\t\tconst channelRPNMSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\n\t\t\tconst channelRPNLSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\n\t\t\tconst pitchBendRangeMSB: number[] = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; // pitch bend range defaults to 2 semitones.\n\t\t\tconst pitchBendRangeLSB: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]; // and 0 cents.\n\t\t\tconst currentInstrumentProgram: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n\t\t\tconst currentInstrumentVolumes: number[] = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];\n\t\t\tconst currentInstrumentPans: number[] = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64];\n\t\t\tconst noteEvents: NoteEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\t\tconst pitchBendEvents: PitchBendEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\tconst noteSizeEvents: NoteSizeEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\tlet tempoChanges: TempoChange[] = [];\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\n\t\tlet beatsPerBar: number = 8;\n\t\tlet numSharps: number = 0;\n\t\tlet isMinor: boolean = false;\n\t\t\t\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\n\t\tlet currentMidiTick: number = 0;\n\t\twhile (true) {\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\n\t\t\tlet anyTrackHasMore: boolean = false;\n\t\t\tfor (const trackIndex of currentTrackIndices) {\n\t\t\t\t\t\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\n\t\t\t\tconst track: Track = tracks[trackIndex];\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\n\t\t\t\t\t\t\n\t\t\t\t\t// If the most significant bit is set in the first byte\n\t\t\t\t\t// of the event, it's a new event status, otherwise\n\t\t\t\t\t// reuse the running status and save the next byte for\n\t\t\t\t\t// the content of the event. I'm assuming running status\n\t\t\t\t\t// is separate for each track.\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\n\t\t\t\t\t\t\n\t\t\t\t\tswitch (eventType) {\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tif (velocity == 0) {\n\t\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\n\t\t\t\t\t\t\t\t)));\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\n\t\t\t\t\t\t\t\t)));\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\n\t\t\t\t\t\t\t\t\tpitch: pitch,\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\n\t\t\t\t\t\t\t\t\ton: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\n\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitch (message) {\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\n\t\t\t\t\t\t\t\t\tnoteSizeEvents[eventChannel].push({midiTick: currentMidiTick, size: Synth.volumeMultToNoteSize(midiExpressionToVolumeMult(value))});\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.programChange: {\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({midiTick: currentMidiTick, interval: interval});\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\n\t\t\t\t\t\t\t\t\ttempoChanges.push({\n                                                midiTick: currentMidiTick,\n                                               microsecondsPerBeat: microsecondsPerBeat,\n                                           });\n//midi tempo addition\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\n\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\n\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\n\t\t\t\t\t\t\t\tthis._close();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\n\t\t\t\t\t\t\tthis._close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrack.ended = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\n\t\t\t\t\t\tif (independentTracks) {\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tif (!track.ended) {\n\t\t\t\t\tanyTrackHasMore = true;\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tif (anyTrackHasMore) {\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\n\t\t\t\t\t// Pick the first tempo value.\n            for (const change of tempoChanges) {\n                microsecondsPerBeat = change.microsecondsPerBeat;\n                break;\n            }\n\t\t\t//midi tempo addition\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\n\t\t\t\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\n\t\t}\n\n\t\tlet key: number = numSharps;\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\n\t\t\t\n\t\t// Convert each midi channel into a BeepBox channel.\n\t\tconst pitchChannels: Channel[] = [];\n\t\tconst noiseChannels: Channel[] = [];\n\t\tconst modChannels: Channel[] = [];\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\n\t\t\t\t\n\t\t\tconst channel: Channel = new Channel();\n\t\t\t\t\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\n\t\t\t\t\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n\t\t\t\t\n\t\t\tif (isNoiseChannel) {\n\t\t\t\tif (isDrumsetChannel) {\n\t\t\t\t\tnoiseChannels.unshift(channel);\n\t\t\t\t} else {\n\t\t\t\t\tnoiseChannels.push(channel);\n\t\t\t\t}\n\t\t\t} else if (isModChannel) {\n\t\t\t\tmodChannels.push(channel);\n\t\t\t} else {\n\t\t\t\tpitchChannels.push(channel);\n\t\t\t}\n\t\t\t\t\n\t\t\tlet currentVelocity: number = 1.0;\n\t\t\tlet currentProgram: number = 0;\n\t\t\tlet currentInstrumentVolume: number = 0;\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\n\t\t\t\t\n\t\t\tif (isDrumsetChannel) {\n\t\t\t\tconst heldPitches: number[] = [];\n\t\t\t\tlet currentBar: number = -1;\n\t\t\t\tlet pattern: Pattern | null = null;\n\t\t\t\tlet prevEventPart: number = 0;\n\t\t\t\tlet setInstrumentVolume: boolean = false;\n\t\t\t\t\t\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false, 1);\n\t\t\t\t\t\n\t\t\t\tinstrument.preset = presetValue;\n\t\t\t\tchannel.instruments.push(instrument);\n\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\n\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\twhile (currentBar < bar) {\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\n\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpattern = new Pattern();\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\n\t\t\t\t\t\t\tpattern.instruments[0] = 0;\n\t\t\t\t\t\t\tpattern.instruments.length = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\n\t\t\t\t\t\t// zero volume.\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\n\t\t\t\t\t\tlet maxDuration: number = 0;\n\t\t\t\t\t\tlet noteSize: number = 1; // the minimum non-zero note size.\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnoteSize = Math.max(noteSize, Math.round(drum.volume * currentVelocity));\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, noteSize, true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tnote.pitches.length = 0;\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpattern.notes.push(note);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\theldPitches.length = 0;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\n\t\t\t\t\t\tprevEventPart = nextEventPart;\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\n\t\t\t\t\t\n\t\t\t\t// Advance the pitch bend and note size timelines to the given midiTick, \n\t\t\t\t// changing the value of currentMidiInterval or currentMidiNoteSize.\n\t\t\t\t// IMPORTANT: These functions can't rewind!\n\t\t\t\tlet currentMidiInterval: number = 0.0;\n\t\t\t\tlet currentMidiNoteSize: number = Config.noteSizeMax;\n\t\t\t\tlet pitchBendEventIndex: number = 0;\n\t\t\t\tlet noteSizeEventIndex: number = 0;\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\n\t\t\t\t\t\tpitchBendEventIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction updateCurrentMidiNoteSize(midiTick: number) {\n\t\t\t\t\twhile (noteSizeEventIndex < noteSizeEvents[midiChannel].length && noteSizeEvents[midiChannel][noteSizeEventIndex].midiTick <= midiTick) {\n\t\t\t\t\t\tcurrentMidiNoteSize = noteSizeEvents[midiChannel][noteSizeEventIndex].size;\n\t\t\t\t\t\tnoteSizeEventIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\n\t\t\t\tconst heldPitches: number[] = [];\n\t\t\t\tlet currentBar: number = -1;\n\t\t\t\tlet pattern: Pattern | null = null;\n\t\t\t\tlet prevEventMidiTick: number = 0;\n\t\t\t\tlet prevEventPart: number = 0;\n\t\t\t\tlet pitchSum: number = 0;\n\t\t\t\tlet pitchCount: number = 0;\n\t\t\t\t\t\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\n\t\t\t\t\t\t\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\n\t\t\t\t\t\tlet createdNote: boolean = false;\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\n\t\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\n\t\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false, 1);\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\n\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tpattern.instruments[0] = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\n\t\t\t\t\t\t\t\t\tpattern.instruments.length = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\n\t\t\t\t\t\t\t\t// zero volume.\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and note size events\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and size.\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\n\t\t\t\t\t\t\t\tnote.continuesLastPattern = (createdNote && noteStartPart == 0);\n\t\t\t\t\t\t\t\tcreatedNote = true;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\n\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(noteStartMidiTick);\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiNoteSize));\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinterface PotentialPin {\n\t\t\t\t\t\t\t\t\tpart: number;\n\t\t\t\t\t\t\t\t\tpitch: number;\n\t\t\t\t\t\t\t\t\tsize: number;\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\n\t\t\t\t\t\t\t\t\tkeySize: boolean;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\n\t\t\t\t\t\t\t\t\t{part: 0, pitch: initialBeepBoxPitch, size: firstPin.size, keyPitch: false, keySize: false}\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\n\t\t\t\t\t\t\t\tlet prevPartSize: number = currentVelocity * currentMidiNoteSize;\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and sizes. Detect places where\n\t\t\t\t\t\t\t\t\t// the interval or size are at or cross whole numbers, and add these to the list of\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(midiTick);\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\n\t\t\t\t\t\t\t\t\tconst partSize: number = currentVelocity * currentMidiNoteSize;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst nearestSize: number = Math.round(partSize);\n\t\t\t\t\t\t\t\t\tconst sizeIsNearInteger: boolean = Math.abs(partSize - nearestSize) < 0.01;\n\t\t\t\t\t\t\t\t\tconst sizeCrossedInteger: boolean = (Math.abs(prevPartSize - Math.round(prevPartSize)))\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partSize - prevPartSize) >= 1.0\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partSize) != Math.floor(prevPartSize);\n\t\t\t\t\t\t\t\t\tconst keySize: boolean = sizeIsNearInteger || sizeCrossedInteger;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\n\t\t\t\t\t\t\t\t\tprevPartSize = partSize;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (keyPitch || keySize || lastPart) {\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = {part: noteRelativePart, pitch: nearestPitch, size: nearestSize, keyPitch: keyPitch || lastPart, keySize: keySize || lastPart};\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keySize) {\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.size - prevPin.size) / (currentPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\tlet furthestSizeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePin: boolean = false;\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keySize) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedSize: number = prevPin.size + slope * (potentialPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedSize - potentialPin.size);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestSizeDistance < distance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestSizeDistance = distance;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePin = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePinAtIndex = potentialIndex;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (addSizePin) {\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addSizePinAtIndex);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.size));\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.size));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (noteEvent.on) {\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\n\t\t\t\t\tprevEventPart = nextEventPart;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\n\t\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(Config.pitchOctaves - 1, Math.floor((averagePitch / 12))));\n\t\t\t}\n\t\t\t\t\t\n\t\t\twhile (channel.bars.length < songTotalBars) {\n\t\t\t\tchannel.bars.push(0);\n\t\t\t}\n\t\t}\n\t\t\t\t\t\t // Add mod channel to hold the tempo changes, if necessary.\n            if (tempoChanges.length > 1) {\n                let tempoModChannel = new Channel();\n                modChannels.push(tempoModChannel);\n                let tempoModInstrument = new Instrument(false, true);\n                tempoModInstrument.setTypeAndReset(9 /* InstrumentType.mod */, false, true);\n                tempoModInstrument.modulators[0] = Config.modulators.dictionary[\"tempo\"].index;\n                tempoModInstrument.modChannels[0] = -1;\n                tempoModChannel.instruments.push(tempoModInstrument);\n                // We're using the first modulator in the channel, but the pitch values are\n                // flipped relative to the UI, so we need to pick a pitch value accordingly.\n                const tempoModPitch = Config.modCount - 1;\n                let currentBar = -1;\n                let pattern = null;\n                let prevChangeEndPart = 0;\n                for (let changeIndex = 0; changeIndex < tempoChanges.length; changeIndex++) {\n                    const change = tempoChanges[changeIndex];\n                    const changeStartMidiTick = change.midiTick;\n                    const changeStartPart = quantizeMidiTickToPart(changeStartMidiTick);\n                    let changeEndMidiTick = -1;\n                    let changeEndPart = -1;\n                    if (changeIndex === tempoChanges.length - 1) {\n                        changeEndMidiTick = changeStartMidiTick + 1;\n                        changeEndPart = changeStartPart + 1;\n                    }\n                    else {\n                        const nextChange = tempoChanges[changeIndex + 1];\n                        changeEndMidiTick = nextChange.midiTick;\n                        changeEndPart = quantizeMidiTickToPart(changeEndMidiTick);\n                    }\n                    let startBar = Math.floor(changeStartPart / partsPerBar);\n                    let endBar = Math.ceil(changeEndPart / partsPerBar);\n                    for (let bar = startBar; bar < endBar; bar++) {\n                        const barStartPart = bar * partsPerBar;\n                        const noteStartPart = Math.max(0, prevChangeEndPart - barStartPart);\n                        let noteEndPart = Math.min(partsPerBar, changeEndPart - barStartPart);\n                        if (noteStartPart < noteEndPart) {\n                            // Ensure a pattern exists for the current bar before inserting notes into it.\n                            if (currentBar != bar || pattern == null) {\n                                currentBar++;\n                                while (currentBar < bar) {\n                                    tempoModChannel.bars[currentBar] = 0;\n                                    currentBar++;\n                                }\n                                pattern = new Pattern();\n                                tempoModChannel.patterns.push(pattern);\n                                tempoModChannel.bars[currentBar] = tempoModChannel.patterns.length;\n                                pattern.instruments[0] = 0;\n                                pattern.instruments.length = 1;\n                            }\n                            // Create a new note.\n                            const newBPM = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / change.microsecondsPerBeat) - Config.modulators.dictionary[\"tempo\"].convertRealFactor));\n                            const note = new Note(tempoModPitch, noteStartPart, noteEndPart, newBPM, false);\n                            pattern.notes.push(note);\n                        }\n                    }\n                    prevChangeEndPart = changeEndPart;\n                }\n           }\n//midi tempo addition\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\n\t\t// To compensate, try to merge non-overlapping channels.\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\n\t\t\twhile (channels.length > maxLength) {\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\n\t\t\t\t\t\tlet conflicts: number = 0;\n\t\t\t\t\t\tlet gaps: number = 0;\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\n\t\t\t\tfor (const instrument of channelB.instruments) {\n\t\t\t\t\tchannelA.instruments.push(instrument);\n\t\t\t\t}\n\t\t\t\tfor (const pattern of channelB.patterns) {\n\t\t\t\t\tpattern.instruments[0] += channelAInstrumentCount;\n\t\t\t\t\tchannelA.patterns.push(pattern);\n\t\t\t\t}\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t// Remove channelB.\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\n\t\t\t\n\t\tclass ChangeImportMidi extends ChangeGroup {\n\t\t\tconstructor(doc: SongDocument) {\n\t\t\t\tsuper();\n\t\t\t\tconst song: Song = doc.song;\n\t\t\t\tsong.tempo = beatsPerMinute;\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\n\t\t\t\tsong.key = key;\n\t\t\t\tsong.scale = 11;\n\t\t\t\tsong.rhythm = 1;\n\t\t\t\tsong.layeredInstruments = false;\n\t\t\t\tsong.patternInstruments = pitchChannels.some(channel => channel.instruments.length > 1) || noiseChannels.some(channel => channel.instruments.length > 1);\n\t\t\t\t\t\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\n\t\t\t\tremoveDuplicatePatterns(modChannels);\n\t\t\t\t\t\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\n\t\t\t\tsong.loopStart = 0;\n\t\t\t\tsong.loopLength = song.barCount;\n\t\t\t\tthis._didSomething();\n\t\t\t\tdoc.notifier.changed();\n\t\t\t}\n\t\t}\n\t\tthis._doc.goBackToStart();\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\n\t}\n}\n\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {SongDocument} from \"./SongDocument\";\nimport {Layout} from \"./Layout\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\n\nconst {button, label, div, form, h2, input} = HTML;\n\nexport class LayoutPrompt implements Prompt {\n\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _form: HTMLFormElement = form({style: \"display: flex; gap: 10px;\"},\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"small\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-4 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"11\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"14\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"11\" height=\"5\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Small\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"long\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"12\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"15\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"20\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"22\" height=\"5\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Long\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"tall\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"11\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"20\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Tall\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"wide\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"18\" y=\"2\" width=\"2.5\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"21.5\" y=\"2\" width=\"2.5\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"7\" y=\"2\" width=\"10\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Wide (JB)\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"AbyssBox Special\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"22\" height=\"2\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"5\" width=\"4\" height=\"8\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"7\" y=\"5\" width=\"17\" height=\"8\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"14\" width=\"22\" height=\"4\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Special (AB)\"),\n\t\t\t),\n\t\t);\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\n\t\th2(\"Layout\"),\n\t\tthis._form,\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._fileInput.select();\n\t\tsetTimeout(()=>this._fileInput.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\t\n\t\t(<any> this._form.elements)[\"layout\"].value = this._doc.prefs.layout;\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._confirm();\n\t\t}\n\t}\n\t\n\tprivate _confirm = (): void => { \n\t\tthis._doc.prefs.layout = (<any> this._form.elements)[\"layout\"].value;\n\t\tthis._doc.prefs.save();\n\t\tLayout.setLayout(this._doc.prefs.layout);\n\t\tthis._close();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {InstrumentType, Config} from \"../synth/SynthConfig\";\nimport {Instrument} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ChangeSetEnvelopeTarget, ChangeSetEnvelopeType, ChangeRemoveEnvelope} from \"./changes\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\nexport class EnvelopeEditor {\n\tpublic readonly container: HTMLElement = HTML.div({class: \"envelopeEditor\"});\n\t\n\tprivate readonly _rows: HTMLDivElement[] = [];\n\tprivate readonly _targetSelects: HTMLSelectElement[] = [];\n\tprivate readonly _envelopeSelects: HTMLSelectElement[] = [];\n\tprivate readonly _deleteButtons: HTMLButtonElement[] = [];\n\tprivate _renderedEnvelopeCount: number = 0;\n\tprivate _renderedEqFilterCount: number = -1;\n\tprivate _renderedNoteFilterCount: number = -1;\n\tprivate _renderedInstrumentType: InstrumentType;\n\tprivate _renderedEffects: number = 0;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis.container.addEventListener(\"change\", this._onChange);\n\t\tthis.container.addEventListener(\"click\", this._onClick);\n\t}\n\t\n\tprivate _onChange = (event: Event): void => {\n\t\tconst targetSelectIndex: number = this._targetSelects.indexOf(<any> event.target);\n\t\tconst envelopeSelectIndex: number = this._envelopeSelects.indexOf(<any> event.target);\n\t\tif (targetSelectIndex != -1) {\n\t\t\tconst combinedValue: number = parseInt(this._targetSelects[targetSelectIndex].value);\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\n\t\t\tthis._doc.record(new ChangeSetEnvelopeTarget(this._doc, targetSelectIndex, target, index));\n\t\t} else if (envelopeSelectIndex != -1) {\n\t\t\tthis._doc.record(new ChangeSetEnvelopeType(this._doc, envelopeSelectIndex, this._envelopeSelects[envelopeSelectIndex].selectedIndex));\n\t\t}\n\t}\n\t\n\tprivate _onClick = (event: MouseEvent): void => {\n\t\tconst index: number = this._deleteButtons.indexOf(<any> event.target);\n\t\tif (index != -1) {\n\t\t\tthis._doc.record(new ChangeRemoveEnvelope(this._doc, index));\n\t\t}\n\t}\n\t\n\tprivate _makeOption(target: number, index: number): HTMLOptionElement {\n\t\tlet displayName = Config.instrumentAutomationTargets[target].displayName;\n\t\tif (Config.instrumentAutomationTargets[target].maxCount > 1) {\n\t\t\tif (displayName.indexOf(\"#\") != -1) {\n\t\t\t\tdisplayName = displayName.replace(\"#\", String(index+1));\n\t\t\t} else {\n\t\t\t\tdisplayName += \" \" + (index+1);\n\t\t\t}\n\t\t}\n\t\treturn HTML.option({value: target + index * Config.instrumentAutomationTargets.length}, displayName);\n\t}\n\t\n\tprivate _updateTargetOptionVisibility(menu: HTMLSelectElement, instrument: Instrument): void {\n\t\tfor (let optionIndex: number = 0; optionIndex < menu.childElementCount; optionIndex++) {\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement> menu.children[optionIndex];\n\t\t\tconst combinedValue: number = parseInt(option.value);\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\n\t\t\toption.hidden = !instrument.supportsEnvelopeTarget(target, index);\n\t\t}\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\n\t\tfor (let envelopeIndex: number = this._rows.length; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tconst targetSelect: HTMLSelectElement = HTML.select();\n\t\t\tfor (let target: number = 0; target < Config.instrumentAutomationTargets.length; target++) {\n\t\t\t\tconst interleaved: boolean = (Config.instrumentAutomationTargets[target].interleave);\n\t\t\t\tfor (let index: number = 0; index < Config.instrumentAutomationTargets[target].maxCount; index++) {\n\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target, index));\n\t\t\t\t\tif (interleaved) {\n\t\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target + 1, index));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (interleaved) target++;\n\t\t\t}\n\t\t\t\n\t\t\tconst envelopeSelect: HTMLSelectElement = HTML.select();\n\t\t\tfor (let envelope: number = 0; envelope < Config.envelopes.length; envelope++) {\n\t\t\t\tenvelopeSelect.appendChild(HTML.option({value: envelope}, Config.envelopes[envelope].name));\n\t\t\t} \n\t\t\t\n\t\t\tconst deleteButton: HTMLButtonElement = HTML.button({type: \"button\", class: \"delete-envelope\"});\n\t\t\t\n\t\t\tconst row: HTMLDivElement = HTML.div({class: \"envelope-row\"},\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 1;\"}, targetSelect),\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 0.7;\"}, envelopeSelect),\n\t\t\t\tdeleteButton,\n\t\t\t);\n\t\t\t\n\t\t\tthis.container.appendChild(row);\n\t\t\tthis._rows[envelopeIndex] = row;\n\t\t\tthis._targetSelects[envelopeIndex] = targetSelect;\n\t\t\tthis._envelopeSelects[envelopeIndex] = envelopeSelect;\n\t\t\tthis._deleteButtons[envelopeIndex] = deleteButton;\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = this._renderedEnvelopeCount; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tthis._rows[envelopeIndex].style.display = \"\";\n\t\t\t// For newly visible rows, update target option visibiliy.\n\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = instrument.envelopeCount; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\n\t\t\tthis._rows[envelopeIndex].style.display = \"none\";\n\t\t}\n\n\t\tlet useControlPointCount: number = instrument.noteFilter.controlPointCount;\n\t\tif (instrument.noteFilterType)\n\t\t\tuseControlPointCount = 1;\n\t\t\n\t\tif (this._renderedEqFilterCount != instrument.eqFilter.controlPointCount ||\n\t\t\tthis._renderedNoteFilterCount != useControlPointCount ||\n\t\t\tthis._renderedInstrumentType != instrument.type ||\n\t\t\tthis._renderedEffects != instrument.effects)\n\t\t{\n\t\t\t// Update target option visibility for previously visible rows.\n\t\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\n\t\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tthis._targetSelects[envelopeIndex].value = String(instrument.envelopes[envelopeIndex].target + instrument.envelopes[envelopeIndex].index * Config.instrumentAutomationTargets.length);\n\t\t\tthis._envelopeSelects[envelopeIndex].selectedIndex = instrument.envelopes[envelopeIndex].envelope;\n\t\t}\n\t\t\n\t\tthis._renderedEnvelopeCount = instrument.envelopeCount;\n\t\tthis._renderedEqFilterCount = instrument.eqFilter.controlPointCount;\n\t\tthis._renderedNoteFilterCount = useControlPointCount;\n\t\tthis._renderedInstrumentType = instrument.type;\n\t\tthis._renderedEffects = instrument.effects;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {clamp, Instrument, Synth} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {ChangeSequence, UndoableChange} from \"./Change\";\nimport {ChangeFadeInOut} from \"./changes\";\n\nexport class FadeInOutEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\tprivate readonly _fadeCurve: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\n\tprivate readonly _dottedLinePath: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\"});\n\tprivate readonly _controlCurve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\n\t\tthis._fadeCurve,\n\t\tthis._dottedLinePath,\n\t\tthis._controlCurve,\n\t);\n\tpublic readonly container: HTMLElement = HTML.div({class: \"fadeInOut\", style: \"height: 100%;\"}, this._svg);\n\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseXStart: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseDragging: boolean = false;\n\tprivate _draggingFadeIn: boolean = false;\n\tprivate _dragChange: UndoableChange | null = null;\n\tprivate _renderedFadeIn: number = -1;\n\tprivate _renderedFadeOut: number = -1;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\n\t\tthis._dottedLinePath.setAttribute(\"d\", `M ${dottedLineX} 0 L ${dottedLineX} ${this._editorHeight}`);\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\n\tprivate _fadeInToX(fadeIn: number) {\n\t\treturn 1.0 + (this._editorWidth - 2.0) * 0.4 * fadeIn / (Config.fadeInRange - 1);\n\t}\n\tprivate _xToFadeIn(x: number) {\n\t\treturn clamp(0, Config.fadeInRange, Math.round((x - 1.0) * (Config.fadeInRange - 1) / (0.4 * this._editorWidth - 2.0)));\n\t}\n\tprivate _fadeOutToX(fadeOut: number) {\n\t\treturn 1.0 + (this._editorWidth - 2.0) * (0.5 + 0.5 * fadeOut / (Config.fadeOutTicks.length - 1));\n\t}\n\tprivate _xToFadeOut(x: number) {\n\t\treturn clamp(0, Config.fadeOutTicks.length, Math.round((Config.fadeOutTicks.length - 1) * ((x - 1.0) / (this._editorWidth - 2.0) - 0.5) / 0.5));\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenCursorPressed(): void {\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._mouseXStart = this._mouseX;\n\t\tthis._mouseDown = true;\n\t\tthis._mouseDragging = false;\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\n\t\tthis._draggingFadeIn = this._mouseXStart < (fadeInX + fadeOutX) / 2.0;\n\t\tthis._dragChange = new ChangeSequence();\n\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._dragChange != null && this._doc.lastChangeWas(this._dragChange)) {\n\t\t\tthis._dragChange.undo();\n\t\t} else {\n\t\t\tthis._mouseDown = false;\n\t\t}\n\t\tthis._dragChange = null;\n\t\t\n\t\tif (this._mouseDown) {\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\t\tthis._dragChange = sequence;\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t\t\t\n\t\t\tif (Math.abs(this._mouseX - this._mouseXStart) > 4.0) {\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (this._mouseDragging) {\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\t\tif (this._draggingFadeIn) {\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._fadeInToX(instrument.fadeIn) + this._mouseX - this._mouseXStart), instrument.fadeOut));\n\t\t\t\t} else {\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._fadeOutToX(instrument.fadeOut) + this._mouseX - this._mouseXStart)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (this._mouseDown && this._doc.lastChangeWas(this._dragChange) && this._dragChange != null) {\n\t\t\tif (!this._mouseDragging) {\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\t\tif (this._draggingFadeIn) {\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._mouseX), instrument.fadeOut));\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._mouseX)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._doc.record(this._dragChange);\n\t\t\t}\n\t\t}\n\t\tthis._dragChange = null;\n\t\tthis._mouseDragging = false;\n\t\tthis._mouseDown = false;\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\n\t\tif (this._renderedFadeIn == instrument.fadeIn && this._renderedFadeOut == instrument.fadeOut) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\n\t\tthis._controlCurve.setAttribute(\"d\", `M ${fadeInX} 0 L ${fadeInX} ${this._editorHeight} M ${fadeOutX} 0 L ${fadeOutX} ${this._editorHeight}`);\n\t\t\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\n\t\tlet fadePath: string = \"\";\n\t\tfadePath += `M 0 ${this._editorHeight} `;\n\t\tfadePath += `L ${fadeInX} 0 `;\n\t\tif (Synth.fadeOutSettingToTicks(instrument.fadeOut) > 0) {\n\t\t\tfadePath += `L ${dottedLineX} 0 `;\n\t\t\tfadePath += `L ${fadeOutX} ${this._editorHeight} `;\n\t\t} else {\n\t\t\tfadePath += `L ${fadeOutX} 0 `;\n\t\t\tfadePath += `L ${dottedLineX} ${this._editorHeight} `;\n\t\t}\n\t\tfadePath += \"z\";\n\t\tthis._fadeCurve.setAttribute(\"d\", fadePath);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeLimiterSettings } from \"./changes\";\nimport { SongEditor } from \"./SongEditor\";\nimport { prettyNumber } from \"./EditorConfig\";\n\n//namespace beepbox {\nconst { button, div, h2, input } = HTML;\n\nexport class LimiterCanvas {\n\tprivate readonly _editorWidth: number = 200; // 112\n\tprivate readonly _editorHeight: number = 52; // 26\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\n\t\tthis._defs,\n\t\tthis._fill,\n\t\tthis._ticks,\n\t\tthis._subticks,\n\t\tthis._boostCurve,\n\t\tthis._midCurve,\n\t\tthis._limitCurve,\n\t\tthis._boostDot,\n\t\tthis._limitDot,\n\t\tthis._label0,\n\t\tthis._label1,\n\t\tthis._label2,\n\t\tthis._inLabel,\n\t\tthis._outLabel,\n\t\tthis._xAxisLabel,\n\t\tthis._yAxisLabel,\n\t\tthis._inVolumeBg,\n\t\tthis._outVolumeBg,\n\t\tthis._inVolumeBar,\n\t\tthis._outVolumeBar,\n\t\tthis._inVolumeCap,\n\t\tthis._outVolumeCap,\n\t);\n\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\n\n\tprivate _limiterPrompt: LimiterPrompt;\n\n\tconstructor(lim: LimiterPrompt) {\n\t\tfor (let i: number = 0; i <= 2; i++) {\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\n\t\t}\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\n\t\t}\n\n\t\tthis._limiterPrompt = lim;\n\n\t}\n\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\n\t}\n\n\tpublic render(): void {\n\t\tconst controlPointToHeight = (point: number): number => {\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\n\t\t}\n\n\t\tlet lastValue: number = 0;\n\t\tlet currentSubpathIdx: number = 0;\n\t\tlet lastSubpathIdx: number = -1;\n\t\tlet path: string = \"\";\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\n\t\tfor (let i: number = 0; i < 64; i++) {\n\t\t\t// Calculate next value based on limiter settings\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\n\t\t\tlet nextValue: number = 1 / 1.05;\n\t\t\tif (useVol >= limiterThreshold) {\n\t\t\t\t// Limiter falloff\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\n\t\t\t}\n\t\t\telse if (useVol < compressorThreshold) {\n\t\t\t\t// Compressor boost\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\n\t\t\t}\n\n\t\t\t// first point in entire path\n\t\t\tif (i == 0) {\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\t}\n\n\t\t\t// first point in a specific subpath\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\n\t\t\t\tif (lastSubpathIdx >= 0) {\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\t\t}\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\n\t\t\t\t}\n\t\t\t\tif (currentSubpathIdx == 2) {\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\n\t\t\t\t}\n\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\n\t\t\t}\n\n\t\t\tif (lastValue != 0 || nextValue != 0) {\n\t\t\t\tpath += \"L \";\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\n\t\t\t} else {\n\t\t\t\tpath += \"M \";\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\n\t\t\t}\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\tlastValue = nextValue;\n\n\t\t\t// Move to next subpath\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\n\t\t\t\tcurrentSubpathIdx++;\n\t\t\t}\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\n\t\t\t\tcurrentSubpathIdx++;\n\t\t\t}\n\t\t}\n\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\n\t\tif (lastValue > 0) {\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\n\t\t}\n\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\n\t}\n}\n\nexport class LimiterPrompt implements Prompt {\n\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\n\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\n\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\n\n\tprivate startingLimitDecay: number;\n\tprivate startingLimitRise: number;\n\tprivate startingCompressionThreshold: number;\n\tprivate startingLimitThreshold: number;\n\tprivate startingCompressionRatio: number;\n\tprivate startingLimitRatio: number;\n\tprivate startingMasterGain: number;\n\n\tprivate inVolumeHistoricTimer: number = 0.0;\n\tprivate inVolumeHistoricCap: number = 0.0;\n\tprivate outVolumeHistoricTimer: number = 0.0;\n\tprivate outVolumeHistoricCap: number = 0.0;\n\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\n\t\th2(\"Limiter Options\"),\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis._playButton,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis.limiterCanvas.container,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"\"\n\t\t\t),\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\n\t\t\t\t\"Boost\"\n\t\t\t),\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\n\t\t\t\t\"Cutoff\"\n\t\t\t),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Threshold:\"\n\t\t\t),\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\n\t\t\t\tthis.compressionThresholdSlider,\n\t\t\t),\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\n\t\t\t\tthis.limitThresholdSlider,\n\t\t\t),\n\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Ratio:\"\n\t\t\t),\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\n\t\t\t\tthis.compressionRatioSlider,\n\t\t\t),\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\n\t\t\t\tthis.limitRatioSlider,\n\t\t\t),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Limit Decay:\"\n\t\t\t),\n\t\t\tthis.limitDecaySlider,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Limit Rise:\"\n\t\t\t),\n\t\t\tthis.limitRiseSlider,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Master Gain:\"\n\t\t\t),\n\t\t\tthis.masterGainSlider,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t\tthis._resetButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\n\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\n\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\n\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\n\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\n\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\n\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\n\n\t\tthis.updatePlayButton();\n\n\t\tsetTimeout(() => this._playButton.focus());\n\n\t\tthis.limiterCanvas.render();\n\t}\n\n\tprivate _volumeUpdate = (): void => {\n\t\tthis.inVolumeHistoricTimer--;\n\t\tif (this.inVolumeHistoricTimer <= 0) {\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\n\t\t}\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\n\t\t\tthis.inVolumeHistoricTimer = 50;\n\t\t}\n\n\t\tthis.outVolumeHistoricTimer--;\n\t\tif (this.outVolumeHistoricTimer <= 0) {\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\n\t\t}\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\n\t\t\tthis.outVolumeHistoricTimer = 50;\n\t\t}\n\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\n\t\t//console.log(this._doc.song.volumeCap);\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\n\t}\n\n\tprivate _togglePlay = (): void => {\n\t\tthis._songEditor.togglePlay();\n\t\tthis.updatePlayButton();\n\t}\n\n\tpublic updatePlayButton(): void {\n\t\tif (this._doc.synth.playing) {\n\t\t\tthis._playButton.classList.remove(\"playButton\");\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\n\t\t\tthis._playButton.title = \"Pause (Space)\";\n\t\t\tthis._playButton.innerText = \"Pause\";\n\t\t} else {\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\n\t\t\tthis._playButton.classList.add(\"playButton\");\n\t\t\tthis._playButton.title = \"Play (Space)\";\n\t\t\tthis._playButton.innerText = \"Play\";\n\t\t}\n\t}\n\n\tprivate _whenInput = (): void => {\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\n\t\t}\n\t\tthis.limiterCanvas.render();\n\t\tthis._updateLimiter();\n\t}\n\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\n\tprivate _whenInputFavorLimitThreshold = (): void => {\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\n\t\t}\n\t\tthis.limiterCanvas.render();\n\t\tthis._updateLimiter();\n\t}\n\n\tprivate _close = (): void => {\n\t\t// Reset all sliders to starting values\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\n\n\t\tthis._updateLimiter();\n\t\tthis._doc.prompt = null;\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\n\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\n\t}\n\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t\tif (event.keyCode == 32) {\n\t\t\tthis._togglePlay();\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tprivate _resetDefaults = (): void => {\n\t\t// Set song limiter settings to their default\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\n\n\t\t\tthis.limitRatioSlider.value = \"10\";\n\t\t\tthis.limitRiseSlider.value = \"4000\";\n\t\t\tthis.limitDecaySlider.value = \"4\";\n\t\t\tthis.limitThresholdSlider.value = \"1\";\n\t\t\tthis.compressionRatioSlider.value = \"10\";\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\n\t\t\tthis.masterGainSlider.value = \"1\";\n\n\t\t\tthis._whenInput();\n\t\t}\n\t}\n\n\tprivate _updateLimiter = (): void => {\n\t\t// Save slider values to song\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\n\t\t\t+this.limitThresholdSlider.value,\n\t\t\t+this.compressionThresholdSlider.value,\n\t\t\t+this.limitRiseSlider.value,\n\t\t\t+this.limitDecaySlider.value,\n\t\t\t+this.masterGainSlider.value,\n\t\t), true);\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\tthis._updateLimiter();\n\t\tthis._doc.prompt = null;\n\n\t}\n}\n//}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeCustomScale } from \"./changes\";\n\n\n//namespace beepbox {\nconst { button, div, h2, input } = HTML;\n\nexport class CustomScalePrompt implements Prompt {\n    private readonly _flags: boolean[] = [];\n    private readonly _scaleFlags: HTMLInputElement[] = [];\n    private readonly _scaleRows: HTMLDivElement[] = [];\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n    private readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\n    public readonly container: HTMLDivElement;\n\n    constructor(private _doc: SongDocument) {\n        this._flags = _doc.song.scaleCustom.slice();\n        let scaleHolder: HTMLDivElement = div({});\n        for (var i = 1; i < Config.pitchesPerOctave; i++) {\n            this._scaleFlags[i] = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\", \"checked\": this._flags[i], \"value\": i });\n            this._scaleRows[i] = div({ style: \"text-align: right; height: 2em;\" },\n                \"note \" + i + \":\",\n                this._scaleFlags[i]\n            );\n            scaleHolder.appendChild(this._scaleRows[i])\n        }\n\n        this._okayButton.addEventListener(\"click\", this._saveChanges);\n        this._cancelButton.addEventListener(\"click\", this._close);\n\n        this.container = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\n            h2(\"Custom Scale\"),\n            div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" },\n                scaleHolder,\n            ),\n            div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n                this._okayButton,\n            ),\n            this._cancelButton,\n        )\n        this.container.addEventListener(\"keydown\", this.whenKeyPressed);\n    }\n\n    private _close = (): void => {\n        this._doc.undo();\n    }\n\n    public cleanUp = (): void => {\n        this._okayButton.removeEventListener(\"click\", this._saveChanges);\n        this._cancelButton.removeEventListener(\"click\", this._close);\n        this.container.removeEventListener(\"keydown\", this.whenKeyPressed);\n    }\n\n    public whenKeyPressed = (event: KeyboardEvent): void => {\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n            this._saveChanges();\n        }\n    }\n    \n\n    private _saveChanges = (): void => {\n        for (var i = 1; i < this._scaleFlags.length; i++) {\n            this._flags[i] = this._scaleFlags[i].checked;\n        }\n        this._doc.prompt = null;\n        this._doc.record(new ChangeCustomScale(this._doc, this._flags));\n    }\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\nimport { ColorConfig } from \"./ColorConfig\";\n\ninterface Cursor {\n\tstartBar: number;\n\tmode: number;\n}\n\ninterface Endpoints {\n\tstart: number;\n\tlength: number;\n}\n\nexport class LoopEditor {\n\tprivate readonly _editorHeight: number = 20;\n\t\tprivate readonly _startMode:   number = 0;\n\t\tprivate readonly _endMode:     number = 1;\n\t\tprivate readonly _bothMode:    number = 2;\n\t\t\n\t\tprivate readonly _loop: SVGPathElement = SVG.path({fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4});\n\t\tprivate readonly _highlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\t\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `touch-action: pan-y; position: absolute;`, height: this._editorHeight},\n\t\tthis._loop,\n\t\tthis._highlight,\n\t);\n\t\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"loopEditor\"}, this._svg);\n\t\t\n\tprivate _barWidth: number = 32;\n\tprivate _change: ChangeLoop | null = null;\n\t\tprivate _cursor: Cursor = {startBar: -1, mode: -1};\n\tprivate _mouseX: number = 0;\n\t//private _mouseY: number = 0;\n\tprivate _clientStartX: number = 0;\n\tprivate _clientStartY: number = 0;\n\tprivate _startedScrolling: boolean = false;\n\tprivate _draggingHorizontally: boolean = false;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _renderedLoopStart: number = -1;\n\tprivate _renderedLoopStop: number = -1;\n\tprivate _renderedBarCount: number = 0;\n\tprivate _renderedBarWidth: number = -1;\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._updateCursorStatus();\n\t\tthis._render();\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\n\t}\n\t\t\n\tprivate _updateCursorStatus(): void {\n\t\tconst bar: number = this._mouseX / this._barWidth;\n\t\tthis._cursor.startBar = bar;\n\t\t\t\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\n\t\t\t\tthis._cursor.mode = this._startMode;\n\t\t\t} else {\n\t\t\t\tthis._cursor.mode = this._endMode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._cursor.mode = this._bothMode;\n\t\t}\n\t}\n\t\t\n\tprivate _findEndPoints(middle: number): Endpoints {\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\n\t\tlet end: number = start + this._doc.song.loopLength;\n\t\tif (start < 0) {\n\t\t\tend -= start;\n\t\t\tstart = 0;\n\t\t}\n\t\tif (end > this._doc.song.barCount) {\n\t\t\tstart -= end - this._doc.song.barCount;\n\t\t\tend = this._doc.song.barCount;\n\t\t}\n\t\t\treturn {start: start, length: end - start};\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._updateCursorStatus();\n\t\tthis._updatePreview();\n\t\tthis._whenMouseMoved(event);\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\t//event.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._updateCursorStatus();\n\t\tthis._updatePreview();\n\t\t//this._whenTouchMoved(event);\n\t\tthis._clientStartX = event.touches[0].clientX;\n\t\tthis._clientStartY = event.touches[0].clientY;\n\t\tthis._draggingHorizontally = false;\n\t\tthis._startedScrolling = false;\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\t\t\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\n\t\t\t\tthis._startedScrolling = true;\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\n\t\t\t\tthis._draggingHorizontally = true;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif (this._draggingHorizontally) {\n\t\t\tthis._whenCursorMoved();\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\n\t\t\t\toldStart = this._change.oldStart;\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\n\t\t\t}\n\t\t\t\t\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\n\t\t\tlet start: number;\n\t\t\tlet end: number;\n\t\t\tlet temp: number;\n\t\t\tif (this._cursor.mode == this._startMode) {\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\n\t\t\t\tend = oldEnd;\n\t\t\t\tif (start < 0) start = 0;\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\n\t\t\t\tif (start == end) {\n\t\t\t\t\tstart = end - 1;\n\t\t\t\t} else if (start > end) {\n\t\t\t\t\ttemp = start;\n\t\t\t\t\tstart = end;\n\t\t\t\t\tend = temp;\n\t\t\t\t}\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\n\t\t\t} else if (this._cursor.mode == this._endMode) {\n\t\t\t\tstart = oldStart;\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\n\t\t\t\tif (end < 0) end = 0;\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\n\t\t\t\tif (end == start) {\n\t\t\t\t\tend = start + 1;\n\t\t\t\t} else if (end < start) {\n\t\t\t\t\ttemp = start;\n\t\t\t\t\tstart = end;\n\t\t\t\t\tend = temp;\n\t\t\t\t}\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\n\t\t\t}\n\t\t\tthis._doc.synth.jumpIntoLoop();\n\t\t\tif (this._doc.prefs.autoFollow) {\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\n\t\t\t}\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t} else {\n\t\t\tthis._updateCursorStatus();\n\t\t\tthis._updatePreview();\n\t\t}\n\t}\n\t\t\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tif (!this._startedScrolling) {\n\t\t\tthis._whenCursorMoved();\n\t\t\tthis._mouseOver = false;\n\t\t\tthis._whenCursorReleased(event);\n\t\t\tthis._updatePreview();\n\t\t}\n\n\t\tthis._mouseDown = false;\n\t}\n\t\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._change != null) this._doc.record(this._change);\n\t\tthis._change = null;\n\t\tthis._mouseDown = false;\n\t\tthis._updateCursorStatus();\n\t\tthis._render();\n\t}\n\t\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\n\t\t\t\n\t\tif (showHighlight) {\n\t\t\tconst radius: number = this._editorHeight / 2;\n\t\t\t\t\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\n\t\t\tif (this._cursor.mode == this._startMode) {\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\n\t\t\t} else if (this._cursor.mode == this._endMode) {\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\n\t\t\t} else {\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\n\t\t\t}\n\t\t\t\t\n\t\t\tthis._highlight.setAttribute(\"d\",\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\n\t\t\t\t`z`\n\t\t\t);\n\t\t}\n\t}\n\t\t\n\tprivate _documentChanged = (): void => {\n\t\tthis._render();\n\t}\n\t\t\n\tprivate _render(): void {\n\t\tthis._barWidth = this._doc.getBarWidth();\n\t\t\t\n\t\tconst radius: number = this._editorHeight / 2;\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\n\t\t\t\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\n\t\t\tthis._renderedBarWidth = this._barWidth;\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\n\t\t\tthis.container.style.width = editorWidth + \"px\";\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\n\t\t}\n\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\n\t\t\tthis._renderedLoopStart = loopStart;\n\t\t\tthis._renderedLoopStop = loopStop;\n\t\t\tthis._loop.setAttribute(\"d\",\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\n\t\t\t\t`z`\n\t\t\t);\n\t\t}\n\t\t\t\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeMoveNotesSideways } from \"./changes\";\nimport { ColorConfig } from \"./ColorConfig\";\n\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class MoveNotesSidewaysPrompt implements Prompt {\n\t\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\"});\n\t\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\n\t\t\toption({value: \"wrapAround\"}, \"Wrap notes around within bars.\"),\n\t);\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\t\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Move Notes Sideways\"),\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({style: \"text-align: right;\"},\n\t\t\t\t\"Beats to move:\",\n\t\t\t\tbr(),\n\t\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Negative is left, positive is right)\"),\n\t\t\t),\n\t\t\tthis._beatsStepper,\n\t\t),\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\n\t\t),\n\t\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\n\t\t\t\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\n\t\tif (lastStrategy != null) {\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\n\t\t}\n\t\t\t\n\t\tthis._beatsStepper.select();\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\n\t\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tlet value: number = +input.value;\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\n\t\tvalue = Math.round(value * 100) / 100;\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\n\t}\n\t\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { InputBox } from \"./HTMLWrapper\";\nimport { ChangeChannelOrder, ChangeChannelName, ChangeRemoveChannel } from \"./changes\";\nimport { Config } from \"../synth/SynthConfig\";\nimport { SongEditor } from \"./SongEditor\";\n\n//namespace beepbox {\nexport class MuteEditor {\n\t\n\tprivate _cornerFiller: HTMLDivElement = HTML.div({style: `background: ${ColorConfig.editorBackground}; position: sticky; bottom: 0; left: 0; width: 32px; height: 30px;`});\n\t\n\tprivate readonly _buttons: HTMLDivElement[] = [];\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\n\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\n\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\n\t);\n\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: sticky; padding-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\n\n\tprivate _editorHeight: number = 128;\n\tprivate _renderedChannelCount: number = 0;\n\tprivate _renderedPitchChannels: number = 0;\n\tprivate _renderedNoiseChannels: number = 0;\n\tprivate _renderedModChannels: number = 0;\n\tprivate _renderedChannelHeight: number = -1;\n\tprivate _channelDropDownChannel: number = 0;\n\tprivate _channelDropDownOpen: boolean = false;\n\tprivate _channelDropDownLastState: boolean = false;\n\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\n\t\tthis.container.addEventListener(\"click\", this._onClick);\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\n\n\t\tthis._channelDropDown.selectedIndex = -1;\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\n\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\n\t}\n\n\tprivate _channelNameInputWhenInput = (): void => {\n\t\tlet newValue = this._channelNameInput.input.value;\n\t\tif (newValue.length > 15) {\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\n\t\t}\n\t}\n\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\n\t\tevent.stopPropagation();\n\t}\n\n\tprivate _channelNameInputHide = (): void => {\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t}\n\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\n\t\tthis._channelDropDownGetOpenedPosition(event);\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\n\t}\n\n\tprivate _channelDropDownBlur = (): void => {\n\t\tthis._channelDropDownOpen = false;\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\n\t}\n\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\n\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\n\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\n\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\n\n\t\t// Check if channel is at limit, in which case another can't be inserted\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\n\t\t\tthis._channelDropDown.options[5].disabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis._channelDropDown.options[5].disabled = false;\n\t\t}\n\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\t\t\tthis._channelDropDown.options[1].disabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis._channelDropDown.options[1].disabled = false;\n\t\t}\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\n\t\t\tthis._channelDropDown.options[2].disabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis._channelDropDown.options[2].disabled = false;\n\t\t}\n\n\t\t// Also, can't delete the last pitch channel.\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\n\t\t\tthis._channelDropDown.options[6].disabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis._channelDropDown.options[6].disabled = false;\n\t\t}\n\t}\n\n\tprivate _channelDropDownHandler = (event: Event): void => {\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\n\t\tthis._channelDropDownOpen = false;\n\t\tevent.stopPropagation();\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\n\n\t\tswitch (this._channelDropDown.value) {\n\t\t\tcase \"rename\":\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\n\t\t\t\t}\n\t\t\t\tthis._channelNameInput.input.select();\n\t\t\t\tbreak;\n\t\t\tcase \"chnUp\":\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel, -1));\n\t\t\t\tbreak;\n\t\t\tcase \"chnDown\":\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel, 1));\n\t\t\t\tbreak;\n\t\t\tcase \"chnMute\":\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\n\t\t\t\tthis.render();\n\t\t\t\tbreak;\n\t\t\tcase \"chnSolo\": {\n\t\t\t\t// Check for any channel not matching solo pattern\n\t\t\t\tlet shouldSolo: boolean = false;\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\n\t\t\t\t\t\tshouldSolo = true;\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (shouldSolo) {\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.render();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"chnInsert\": {\n\t\t\t\tthis._doc.channel = this._channelDropDownChannel;\n\t\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\t\tthis._doc.selection.insertChannel();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"chnDelete\": {\n\t\t\t\tthis._doc.record(new ChangeRemoveChannel(this._doc, this._channelDropDownChannel, this._channelDropDownChannel));\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (this._channelDropDown.value != \"rename\")\n\t\t\tthis._editor.refocusStage();\n\n\t\tthis._channelDropDown.selectedIndex = -1;\n\t}\n\n\tprivate _onClick = (event: MouseEvent): void => {\n\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\n\t\tif (index == -1) return;\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\n\t\tif (xPos < 21.0) {\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\n\t\t}\n\t\tthis._doc.notifier.changed();\n\t}\n\n\tprivate _onMouseMove = (event: MouseEvent): void => {\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\n\t\tif (index == -1) {\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\n\t\tif (xPos >= 21.0) {\n\t\t\tif (!this._channelDropDownOpen) {\n\t\t\t\t// Mouse over chn. number\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\n\t\t\t\tvar height = this._doc.getChannelHeight();\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\n\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\n\t\t\t\t\t}\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\t}\n\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight + 2 + index * this._renderedChannelHeight) + \"px\";\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!this._channelDropDownOpen) {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\n\t\tif (!this._channelDropDownOpen) {\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\n\t\t}\n\t}\n\n\tpublic onKeyUp(event: KeyboardEvent): void {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 27: // esc\n\t\t\t\tthis._channelDropDownOpen = false;\n\t\t\t\t//console.log(\"close\");\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\tbreak;\n\t\t\tcase 13: // enter\n\t\t\t\tthis._channelDropDownOpen = false;\n\t\t\t\t//console.log(\"close\");\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic render(): void {\n\t\tif (!this._doc.prefs.enableChannelMuting) return;\n\t\t\n\t\tconst channelHeight = this._doc.getChannelHeight();\n\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\n\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; -webkit-text-stroke: 1.5px; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", title: \"Mute (M), Mute All (⇧M), Solo (S), Exclude (⇧S)\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\n\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\n\t\t\t\t\tmuteButton,\n\t\t\t\t\tchannelCountText,\n\t\t\t\t]);\n\t\t\t\tthis.container.appendChild(muteContainer);\n\t\t\t\tthis._buttons[y] = muteContainer;\n\t\t\t\tthis._channelCounts[y] = channelCountText;\n\t\t\t}\n\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\n\t\t\t}\n\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\n\n\t\t\tthis.container.appendChild(this._cornerFiller);\n\t\t}\n\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\tif (this._doc.song.channels[y].muted) {\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\n\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\n\t\t\t\telse\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\n\n\t\t\t} else {\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\n\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\n\t\t\t\telse\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\n\t\t\t}\n\t\t}\n\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\n\t\t\t}\n\t\t}\n\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\n\t\t\t\t\tlet val: number = (y + 1);\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\n\t\t\t\t}\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\n\t\t}\n\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\n\t\t\tthis._renderedChannelHeight = channelHeight;\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\tthis.container.style.height = (this._editorHeight + 16) + \"px\";\n\n\t\t\tif (this._renderedChannelHeight < 27) {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\n\n\t\t\t}\n\t\t\telse if (this._renderedChannelHeight < 30) {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\n\t\t\t}\n\t\t}\n\t}\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ChangeOctave } from \"./changes\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Piano } from \"./Piano\";\n\nexport class OctaveScrollBar {\n\tprivate readonly _editorWidth: number = 20;\n\tprivate readonly _editorHeight: number = 481;\n\tprivate readonly _notchHeight: number = 4.0;\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\n\t\n\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4});\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2});\n\t\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\t\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\n\t\tpublic readonly container: HTMLDivElement = HTML.div({id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\"}, this._svg);\n\t\t\n\t//private _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _dragging: boolean = false;\n\tprivate _dragStart: number;\n\tprivate _barBottom: number;\n\tprivate _barHeight: number;\n\tprivate _renderedBarBottom: number = -1;\n\tprivate _renderedVisibleOctaveCount: number = -1;\n\tprivate _change: ChangeOctave | null = null;\n\t\t\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\t\t\n\t\tthis._svg.appendChild(this._handle);\n\t\t\t\n\t\t// notches:\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\n\t\t\t\tthis._svg.appendChild(SVG.rect({fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight}));\n\t\t}\n\t\t\t\n\t\tthis._svg.appendChild(this._handleHighlight);\n\t\tthis._svg.appendChild(this._upHighlight);\n\t\tthis._svg.appendChild(this._downHighlight);\n\t\t\t\n\t\tconst center: number = this._editorWidth * 0.5;\n\t\tconst base: number = 20;\n\t\tconst tip: number = 9;\n\t\tconst arrowWidth: number = 6;\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\n\t\tthis._updatePreview();\n\t\t\t\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._change = null;\n\t\t\tthis._dragStart = this._mouseY;\n\t\t}\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\n\t\tthis._updatePreview();\n\t\t\t\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._change = null;\n\t\t\tthis._dragStart = this._mouseY;\n\t\t}\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\n\t\tif (this._dragging) {\n\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\n\t\t\t\n\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\n\t\t\tlet octave: number = currentOctave;\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\n\t\t\t\t\tif (octave < scrollableOctaves) {\n\t\t\t\t\toctave++;\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\n\t\t\t\tif (octave > 0) {\n\t\t\t\t\toctave--;\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(octave + visibleOctaveCount * 0.5));\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t\t\t\n\t\tif (this._mouseOver) this._updatePreview();\n\t}\n\t\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\n\t\t\tif (this._dragging) {\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\n\t\t\t} else {\n\t\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\n\t\t\t\n\t\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\n\t\t\t\t\tif (currentOctave < scrollableOctaves) {\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave + 1 + visibleOctaveCount * 0.5));\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (currentOctave > 0) {\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave - 1 + visibleOctaveCount * 0.5));\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._mouseDown = false;\n\t\tthis._dragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tlet showUpHighlight: boolean = false;\n\t\tlet showDownHighlight: boolean = false;\n\t\tlet showHandleHighlight: boolean = false;\n\t\t\t\n\t\tif (showHighlight) {\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\n\t\t\t\tshowUpHighlight = true;\n\t\t\t} else if (this._mouseY > this._barBottom) {\n\t\t\t\tshowDownHighlight = true;\n\t\t\t} else {\n\t\t\t\tshowHandleHighlight = true;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\n\t}\n\t\t\n\tprivate _documentChanged = (): void => {\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.getBaseVisibleOctave(this._doc.channel));\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\n\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedVisibleOctaveCount != visibleOctaveCount) {\n\t\t\tthis._renderedBarBottom = this._barBottom;\n\t\t\tthis._renderedVisibleOctaveCount = visibleOctaveCount;\n\t\t\tthis._barHeight = (this._octaveHeight * visibleOctaveCount + this._notchHeight);\n\t\t\tthis._handle.setAttribute(\"height\", String(this._barHeight));\n\t\t\tthis._handleHighlight.setAttribute(\"height\", String(this._barHeight));\n\t\t\tthis._handle.setAttribute(\"y\", String(this._barBottom - this._barHeight));\n\t\t\tthis._handleHighlight.setAttribute(\"y\", String(this._barBottom - this._barHeight));\n\n\t\t\tthis._piano.forceRender();\n\t\t}\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {AnalogousDrum, analogousDrumMap, MidiEventType} from \"./Midi\";\n\ndeclare global {\n\tinterface Navigator {\n\t\trequestMIDIAccess?(): Promise<any>;\n\t}\n}\n\ninterface MIDIInput extends EventTarget {\n\tid: string;\n\ttype: \"input\" | \"output\";\n\tstate: \"disconnected\" | \"connected\";\n}\n\ninterface MIDIConnectionEvent {\n\tport: MIDIInput;\n}\n\ninterface MIDIMessageEvent {\n\tdata: [type: number, key: number, velocity: number];\n\ttarget: MIDIInput;\n}\n\n// A unique id for this tab.\nconst id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\n\nexport class MidiInputHandler {\n\tconstructor(private _doc: SongDocument) {\n\t\tthis.registerMidiAccessHandler();\n\t}\n\t\n\tprivate async registerMidiAccessHandler() {\n\t\tif (navigator.requestMIDIAccess == null) return;\n\t\t\n\t\ttry {\n\t\t\tconst midiAccess = await navigator.requestMIDIAccess();\n\t\t\t\n\t\t\tmidiAccess.inputs.forEach(this._registerMidiInput);\n\t\t\tmidiAccess.addEventListener(\"statechange\", this._handleStateChange);\n\t\t\t\n\t\t\tthis._takeMidiHandlerFocus();\n\t\t\twindow.addEventListener(\"focus\", this._takeMidiHandlerFocus);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to get MIDI access\", e);\n\t\t}\n\t}\n\t\n\tprivate _takeMidiHandlerFocus = (event?: Event) => {\n\t\t// Record that this browser tab is the one that should handle midi\n\t\t// events and any other open tabs should ignore midi events for now.\n\t\tlocalStorage.setItem(\"midiHandlerId\", id);\n\t}\n\t\n\tprivate _handleStateChange = (event: MIDIConnectionEvent) => {\n\t\tif (event.port.type !== \"input\") return;\n\t\t\n\t\tswitch (event.port.state) {\n\t\t\tcase \"connected\":\n\t\t\t\tthis._registerMidiInput(event.port);\n\t\t\t\tbreak;\n\t\t\tcase \"disconnected\":\n\t\t\t\tthis._unregisterMidiInput(event.port);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprivate _registerMidiInput = (midiInput: MIDIInput) => {\n\t\tmidiInput.addEventListener(\"midimessage\", this._onMidiMessage as any);\n\t}\n\t\n\tprivate _unregisterMidiInput = (midiInput: MIDIInput) => {\n\t\tmidiInput.removeEventListener(\"midimessage\", this._onMidiMessage as any);\n\t\tthis._doc.performance.clearAllPitches();\n\t}\n\t\n\tprivate _onMidiMessage = (event: MIDIMessageEvent) => {\n\t\t// Ignore midi events if disabled or a different tab is handling them.\n\t\tif (!this._doc.prefs.enableMidi || localStorage.getItem(\"midiHandlerId\") != id) return;\n\t\t\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tlet [eventType, key, velocity] = event.data;\n\t\teventType &= 0xF0;\n\t\t\n\t\tif (isDrum) {\n\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[key];\n\t\t\tif (drum != undefined) {\n\t\t\t\tkey = drum.frequency;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tkey -= Config.keys[this._doc.song.key].basePitch; // The basePitch of the song key is implicit so don't include it.\n\t\t\tif (key < 0 || key > Config.maxPitch) return;\n\t\t}\n\t\t\n\t\tif (eventType == MidiEventType.noteOn && velocity == 0) {\n\t\t\teventType = MidiEventType.noteOff;\n\t\t}\n\t\t\n\t\tswitch (eventType) {\n\t\t\tcase MidiEventType.noteOn:\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\tthis._doc.performance.addPerformedPitch(key);\n\t\t\t\tbreak;\n\t\t\tcase MidiEventType.noteOff:\n\t\t\t\tthis._doc.performance.removePerformedPitch(key);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SongDocument} from \"./SongDocument\";\n\nexport class KeyboardLayout {\n\tprivate static _pianoAtC: ReadonlyArray<ReadonlyArray<number | null>> = [\n\t\t[   0,   2,   4,   5,   7,   9,  11,  12,  14,  16,  17],\n\t\t[null,   1,   3,null,   6,   8,  10,null,  13,  15,null,  18],\n\t\t[  12,  14,  16,  17,  19,  21,  23,  24,  26,  28,  29,  31,  33],\n\t\t[null,  13,  15,null,  18,  20,  22,null,  25,  27,null,  30,  32],\n\t];\n\tprivate static _pianoAtA: ReadonlyArray<ReadonlyArray<number | null>> = [\n\t\t[   0,   2,   3,   5,   7,   8,  10,  12,  14,  15,  17],\n\t\t[  -1,   1,null,   4,   6,null,   9,  11,  13,null,  16,  18],\n\t\t[  12,  14,  15,  17,  19,  20,  22,  24,  26,  27,  29,  31,  32],\n\t\t[  11,  13,null,  16,  18,null,  21,  23,  25,null,  28,  30,null],\n\t];\n\t\n\tpublic static keyPosToPitch(doc: SongDocument, x: number, y: number, keyboardLayout: string): number | null {\n\t\tlet pitchOffset: number | null = null;\n\t\tlet forcedKey: number | null = null;\n\t\tswitch (keyboardLayout) {\n\t\t\tcase \"wickiHayden\":\n\t\t\t\tpitchOffset = y * 5 + x * 2 - 2;\n\t\t\t\tbreak;\n\t\t\tcase \"songScale\":\n\t\t\t\tconst scaleFlags: ReadonlyArray<boolean> = Config.scales[doc.song.scale].flags;\n\t\t\t\tconst scaleIndices: number[] = <number[]> scaleFlags.map((flag, index) => flag ? index : null).filter((index) => index != null);\n\t\t\t\tpitchOffset = (y - 1 + Math.floor(x / scaleIndices.length)) * Config.pitchesPerOctave + scaleIndices[(x + scaleIndices.length) % scaleIndices.length];\n\t\t\t\tbreak;\n\t\t\tcase \"pianoAtC\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\n\t\t\t\tforcedKey = Config.keys.dictionary[\"C\"].basePitch;\n\t\t\t\tbreak;\n\t\t\tcase \"pianoAtA\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\n\t\t\t\tforcedKey = Config.keys.dictionary[\"A\"].basePitch;\n\t\t\t\tbreak;\n\t\t\tcase \"pianoTransposingC\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\n\t\t\t\tbreak;\n\t\t\tcase \"pianoTransposingA\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif (pitchOffset == null) return null;\n\t\t\n\t\tconst octaveOffset: number = Math.max(0, doc.song.channels[doc.channel].octave - 1) * Config.pitchesPerOctave;\n\t\tlet keyOffset: number = 0; // The basePitch of the song key is implicit.\n\t\t\n\t\tif (forcedKey != null) {\n\t\t\tconst keyBasePitch: number = Config.keys[doc.song.key].basePitch;\n\t\t\tkeyOffset = (forcedKey - keyBasePitch + 144) % 12;\n\t\t}\n\t\t\n\t\tconst pitch = octaveOffset + keyOffset + pitchOffset;\n\t\tif (pitch < 0 || pitch > Config.maxPitch) return null;\n\t\t\t\n\t\treturn pitch;\n\t}\n\t\n\tprivate _possiblyPlayingPitchesFromKeyboard: boolean = false;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\twindow.addEventListener(\"blur\", this._onWindowBlur);\n\t}\n\t\n\tprivate _onWindowBlur = (event: Event) => {\n\t\t// Browsers don't explicitly release keys when the page isn't in focus so let's just assume they're all released.\n\t\tif (this._possiblyPlayingPitchesFromKeyboard) {\n\t\t\tthis._doc.performance.clearAllPitches();\n\t\t\tthis._possiblyPlayingPitchesFromKeyboard = false;\n\t\t}\n\t}\n\t\n\tpublic handleKeyEvent(event: KeyboardEvent, pressed: boolean): void {\n\t\t// See: https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\n\t\tswitch (event.code) {\n\t\t\tcase \"Backquote\": this.handleKey(-1, 3, pressed); break;\n\t\t\tcase \"Digit1\": this.handleKey(0, 3, pressed); break;\n\t\t\tcase \"Digit2\": this.handleKey(1, 3, pressed); break;\n\t\t\tcase \"Digit3\": this.handleKey(2, 3, pressed); break;\n\t\t\tcase \"Digit4\": this.handleKey(3, 3, pressed); break;\n\t\t\tcase \"Digit5\": this.handleKey(4, 3, pressed); break;\n\t\t\tcase \"Digit6\": this.handleKey(5, 3, pressed); break;\n\t\t\tcase \"Digit7\": this.handleKey(6, 3, pressed); break;\n\t\t\tcase \"Digit8\": this.handleKey(7, 3, pressed); break;\n\t\t\tcase \"Digit9\": this.handleKey(8, 3, pressed); break;\n\t\t\tcase \"Digit0\": this.handleKey(9, 3, pressed); break;\n\t\t\tcase \"Minus\": this.handleKey(10, 3, pressed); break;\n\t\t\tcase \"Equal\": this.handleKey(11, 3, pressed); break;\n\t\t\tcase \"IntlYen\": this.handleKey(12, 3, pressed); break; // Present on Russian and Japanese keyboards.\n\t\t\t\n\t\t\tcase \"KeyQ\": this.handleKey(0, 2, pressed); break;\n\t\t\tcase \"KeyW\": this.handleKey(1, 2, pressed); break;\n\t\t\tcase \"KeyE\": this.handleKey(2, 2, pressed); break;\n\t\t\tcase \"KeyR\": this.handleKey(3, 2, pressed); break;\n\t\t\tcase \"KeyT\": this.handleKey(4, 2, pressed); break;\n\t\t\tcase \"KeyY\": this.handleKey(5, 2, pressed); break;\n\t\t\tcase \"KeyU\": this.handleKey(6, 2, pressed); break;\n\t\t\tcase \"KeyI\": this.handleKey(7, 2, pressed); break;\n\t\t\tcase \"KeyO\": this.handleKey(8, 2, pressed); break;\n\t\t\tcase \"KeyP\": this.handleKey(9, 2, pressed); break;\n\t\t\tcase \"BracketLeft\": this.handleKey(10, 2, pressed); break;\n\t\t\tcase \"BracketRight\": this.handleKey(11, 2, pressed); break;\n\t\t\tcase \"Backslash\":\n\t\t\t\t// Present on US keyboards... but on non-US keyboards it's also used at a different location, see \"IntlHash\" below. :/\n\t\t\t\tif (event.key == \"\\\\\" || event.key == \"|\") {\n\t\t\t\t\tthis.handleKey(12, 2, pressed);\n\t\t\t\t} else {\n\t\t\t\t\tthis.handleKey(11, 1, pressed);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"KeyA\": this.handleKey(0, 1, pressed); break;\n\t\t\tcase \"KeyS\": this.handleKey(1, 1, pressed); break;\n\t\t\tcase \"KeyD\": this.handleKey(2, 1, pressed); break;\n\t\t\tcase \"KeyF\": this.handleKey(3, 1, pressed); break;\n\t\t\tcase \"KeyG\": this.handleKey(4, 1, pressed); break;\n\t\t\tcase \"KeyH\": this.handleKey(5, 1, pressed); break;\n\t\t\tcase \"KeyJ\": this.handleKey(6, 1, pressed); break;\n\t\t\tcase \"KeyK\": this.handleKey(7, 1, pressed); break;\n\t\t\tcase \"KeyL\": this.handleKey(8, 1, pressed); break;\n\t\t\tcase \"Semicolon\": this.handleKey(9, 1, pressed); break;\n\t\t\tcase \"Quote\": this.handleKey(10, 1, pressed); break;\n\t\t\tcase \"IntlHash\": this.handleKey(11, 1, pressed); break; // Present on non-US keyboards... but in practice it is actually represented as \"Backslash\" so this is obsolete. Oh well. :/\n\t\t\t\n\t\t\tcase \"IntlBackslash\": this.handleKey(-1, 0, pressed); break; // Present on Brazillian and many European keyboards.\n\t\t\tcase \"KeyZ\": this.handleKey(0, 0, pressed); break;\n\t\t\tcase \"KeyX\": this.handleKey(1, 0, pressed); break;\n\t\t\tcase \"KeyC\": this.handleKey(2, 0, pressed); break;\n\t\t\tcase \"KeyV\": this.handleKey(3, 0, pressed); break;\n\t\t\tcase \"KeyB\": this.handleKey(4, 0, pressed); break;\n\t\t\tcase \"KeyN\": this.handleKey(5, 0, pressed); break;\n\t\t\tcase \"KeyM\": this.handleKey(6, 0, pressed); break;\n\t\t\tcase \"Comma\": this.handleKey(7, 0, pressed); break;\n\t\t\tcase \"Period\": this.handleKey(8, 0, pressed); break;\n\t\t\tcase \"Slash\": this.handleKey(9, 0, pressed); break;\n\t\t\tcase \"IntlRo\": this.handleKey(10, 0, pressed); break; // Present on Brazillian and Japanese keyboards.\n\t\t\t\n\t\t\tdefault: return; //unhandled, don't prevent default.\n\t\t}\n\t\t\n\t\t// If the key event was handled as a note, prevent default behavior.\n\t\tevent.preventDefault();\n\t}\n\t\n\tpublic handleKey(x: number, y: number, pressed: boolean): void {\n\t\t\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tif (isDrum) {\n\t\t\tif (x >= 0 && x < Config.drumCount) {\n\t\t\t\tif (pressed) {\n\t\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\t\tthis._doc.performance.addPerformedPitch(x);\n\t\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.performance.removePerformedPitch(x);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, x, y, this._doc.prefs.keyboardLayout);\n\t\t\n\t\tif (pitch != null) {\n\t\t\tif (pressed) {\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\tthis._doc.performance.addPerformedPitch(pitch);\n\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\n\t\t\t} else {\n\t\t\t\tthis._doc.performance.removePerformedPitch(pitch);\n\t\t\t}\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { getLocalStorageItem, Chord, Transition, Config } from \"../synth/SynthConfig\";\nimport { NotePin, Note, makeNotePin, Pattern, Instrument } from \"../synth/synth\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ChangeSequence, UndoableChange } from \"./Change\";\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeSizeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\nimport { prettyNumber } from \"./EditorConfig\";\n\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\n    const clone: T = <T>node.cloneNode(false);\n    node.parentNode!.replaceChild(clone, node);\n    return clone;\n}\n\nclass PatternCursor {\n    public valid: boolean = false;\n    public prevNote: Note | null = null;\n    public curNote: Note | null = null;\n    public nextNote: Note | null = null;\n    public pitch: number = 0;\n    public pitchIndex: number = -1;\n    public curIndex: number = 0;\n    public start: number = 0;\n    public end: number = 0;\n    public part: number = 0;\n    public exactPart: number = 0;\n    public nearPinIndex: number = 0;\n    public pins: NotePin[] = [];\n}\n\nexport class PatternEditor {\n    public controlMode: boolean = false;\n    public shiftMode: boolean = false;\n    private readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\n    private readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\n    private readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\n    private readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\n    private _svgNoteContainer: SVGSVGElement = SVG.svg();\n    private readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\n    private readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\n    private readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\n    public modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\n    public _svg: SVGSVGElement = SVG.svg({ id:'firstImage', style: `background-image: url(${getLocalStorageItem(\"customTheme\", \"\")}); background-repeat: no-repeat; background-size: 100% 100%; background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\n\tSVG.defs(\n            this._svgNoteBackground,\n            this._svgDrumBackground,\n            this._svgModBackground,\n        ),\n        this._svgBackground,\n        this._selectionRect,\n        this._svgNoteContainer,\n        this._svgPreview,\n        this._svgPlayhead,\n    );\n    public readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\n\n    private readonly _defaultModBorder: number = 34;\n    private readonly _backgroundPitchRows: SVGRectElement[] = [];\n    private readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\n    private readonly _backgroundModRow: SVGRectElement = SVG.rect();\n\n    private _editorWidth: number;\n\n    private _modDragValueLabelLeft: number = 0;\n    private _modDragValueLabelTop: number = 0;\n    private _modDragValueLabelWidth: number = 0;\n    public editingModLabel: boolean = false;\n    private _modDragStartValue: number = 0;\n    private _modDragPin: NotePin;\n    private _modDragNote: Note;\n    private _modDragSetting: number;\n    private _modDragLowerBound: number = 0;\n    private _modDragUpperBound: number = 6;\n\n    private _editorHeight: number;\n    private _partWidth: number;\n    private _pitchHeight: number = -1;\n    private _pitchBorder: number;\n    private _pitchCount: number;\n    private _mouseX: number = 0;\n    private _mouseY: number = 0;\n    private _mouseDown: boolean = false;\n    private _mouseOver: boolean = false;\n    private _mouseDragging: boolean = false;\n    private _mouseHorizontal: boolean = false;\n    private _usingTouch: boolean = false;\n    private _copiedPinChannels: NotePin[][] = [];\n    private _copiedPins: NotePin[];\n    private _mouseXStart: number = 0;\n    private _mouseYStart: number = 0;\n    private _touchTime: number = 0;\n    private _shiftHeld: boolean = false;\n    private _dragConfirmed: boolean = false;\n    private _draggingStartOfSelection: boolean = false;\n    private _draggingEndOfSelection: boolean = false;\n    private _draggingSelectionContents: boolean = false;\n    private _dragTime: number = 0;\n    private _dragPitch: number = 0;\n    private _dragSize: number = 0;\n    private _dragVisible: boolean = false;\n    private _dragChange: UndoableChange | null = null;\n    private _changePatternSelection: UndoableChange | null = null;\n    private _lastChangeWasPatternSelection: boolean = false;\n    private _cursor: PatternCursor = new PatternCursor();\n    private _stashCursorPinVols: number[][] = [];\n    private _pattern: Pattern | null = null;\n    private _playheadX: number = 0.0;\n    private _octaveOffset: number = 0;\n    private _renderedWidth: number = -1;\n    private _renderedHeight: number = -1;\n    private _renderedBeatWidth: number = -1;\n    private _renderedPitchHeight: number = -1;\n    private _renderedFifths: boolean = false;\n    private _renderedDrums: boolean = false;\n    private _renderedMod: boolean = false;\n    private _renderedRhythm: number = -1;\n    private _renderedPitchChannelCount: number = -1;\n    private _renderedNoiseChannelCount: number = -1;\n    private _renderedModChannelCount: number = -1;\n    private _followPlayheadBar: number = -1;\n\n    constructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\n        for (let i: number = 0; i < Config.pitchesPerOctave; i++) {\n            const rectangle: SVGRectElement = SVG.rect();\n            rectangle.setAttribute(\"x\", \"1\");\n            rectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\n            this._svgNoteBackground.appendChild(rectangle);\n            this._backgroundPitchRows[i] = rectangle;\n        }\n\n        this._backgroundDrumRow.setAttribute(\"x\", \"1\");\n        this._backgroundDrumRow.setAttribute(\"y\", \"1\");\n        this._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\n        this._svgDrumBackground.appendChild(this._backgroundDrumRow);\n        this._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\n        this._svgModBackground.appendChild(this._backgroundModRow);\n\n        if (this._interactive) {\n            this._updateCursorStatus();\n            this._updatePreview();\n            window.requestAnimationFrame(this._animatePlayhead);\n            this._svg.addEventListener(\"mousedown\", this._whenMousePressed);\n            document.addEventListener(\"mousemove\", this._whenMouseMoved);\n            document.addEventListener(\"mouseup\", this._whenCursorReleased);\n            this._svg.addEventListener(\"mouseover\", this._whenMouseOver);\n            this._svg.addEventListener(\"mouseout\", this._whenMouseOut);\n\n            this._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\n            this._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\n            this._svg.addEventListener(\"touchend\", this._whenCursorReleased);\n            this._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\n            this.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\n        } else {\n            this._svgPlayhead.style.display = \"none\";\n            this._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\n        }\n\n        this.resetCopiedPins();\n    }\n\n    private _validateModDragLabelInput = (event: Event): void => {\n        const label: HTMLDivElement = <HTMLDivElement>event.target;\n\n        // Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\n        let converted: number = Number(label.innerText);\n        if (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\n            return;\n\n        // Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\n        if (label.innerText != \"\" && label.innerText != \"-\") {\n            // Force NaN results to be 0\n            if (isNaN(converted)) {\n                converted = this._modDragLowerBound;\n                label.innerText = \"\" + this._modDragLowerBound;\n            }\n\n            let presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\n            if (label.innerText != presValue + \"\")\n                label.innerText = presValue + \"\";\n\n            // This is me being too lazy to fiddle with the css to get it to align center.\n            let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\n            this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\n            this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\n\n            const sequence: ChangeSequence = new ChangeSequence();\n            this._dragChange = sequence;\n            this._doc.setProspectiveChange(this._dragChange);\n\n            sequence.append(new ChangeSizeBend(this._doc, this._modDragNote, this._modDragPin.time, presValue- Config.modulators[this._modDragSetting].convertRealFactor, this._modDragPin.interval, this.shiftMode));\n\n        }\n    }\n\n    private _getMaxDivision(): number {\n        const rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n        if (rhythmStepsPerBeat % 4 == 0) {\n            // Beat is divisible by 2 (and 4).\n            return Config.partsPerBeat / 2;\n        } else if (rhythmStepsPerBeat % 3 == 0) {\n            // Beat is divisible by 3.\n            return Config.partsPerBeat / 3;\n        } else if (rhythmStepsPerBeat % 2 == 0) {\n            // Beat is divisible by 2.\n            return Config.partsPerBeat / 2;\n        }\n        return Config.partsPerBeat;\n    }\n\n    private _getMinDivision(): number {\n        return Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n    }\n\n    private _snapToMinDivision(input: number): number {\n        const minDivision: number = this._getMinDivision();\n        return Math.floor(input / minDivision) * minDivision;\n    }\n\n    private _updateCursorStatus(): void {\n        this._cursor = new PatternCursor();\n\n        if (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\n\n        const minDivision: number = this._getMinDivision();\n        this._cursor.exactPart = this._mouseX / this._partWidth;\n        this._cursor.part =\n            Math.floor(\n                Math.max(0,\n                    Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\n                )\n                / minDivision) * minDivision;\n\n        let foundNote: boolean = false;\n\n        if (this._pattern != null) {\n            for (const note of this._pattern.notes) {\n                if (note.end <= this._cursor.exactPart) {\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\n                            this._cursor.prevNote = note;\n                        }\n                        if (!foundNote)\n                            this._cursor.curIndex++;\n\n                    } else {\n                        this._cursor.prevNote = note;\n                        this._cursor.curIndex++;\n                    }\n                } else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\n                            this._cursor.curNote = note;\n                            foundNote = true;\n                        }\n                        // Only increment index if the sought note has been found... or if this note truly starts before the other\n                        else if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\n                            this._cursor.curIndex++;\n                    }\n                    else {\n                        this._cursor.curNote = note;\n                    }\n                } else if (note.start > this._cursor.exactPart) {\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\n                            this._cursor.nextNote = note;\n                            break;\n                        }\n                    } else {\n                        this._cursor.nextNote = note;\n                        break;\n                    }\n                }\n            }\n\n            if (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\n\n                if (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\n\n                    let pinIdx: number = 0;\n\n                    while (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\n                        pinIdx++;\n                    }\n                    // Decide if the previous pin is closer\n                    if (pinIdx > 0) {\n                        if (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\n                            pinIdx--;\n                        }\n                    }\n\n                    this.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\n                    this.modDragValueLabel.style.setProperty(\"display\", \"\");\n                    const mod: number = Math.max( 0, Config.modCount - 1 - this._cursor.curNote.pitches[0]);\n\n                    let setting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modulators[mod];\n\n                    let presValue: number = this._cursor.curNote.pins[pinIdx].size + Config.modulators[setting].convertRealFactor;\n\n                    // This is me being too lazy to fiddle with the css to get it to align center.\n                    let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\n\n                    this._modDragValueLabelWidth = 8 + xOffset * 8;\n                    this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\n                    this._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\n\n                    this._modDragStartValue = this._cursor.curNote.pins[pinIdx].size;\n                    this._modDragNote = this._cursor.curNote;\n                    this._modDragPin = this._cursor.curNote.pins[pinIdx];\n                    this._modDragLowerBound = Config.modulators[setting].convertRealFactor;\n                    this._modDragUpperBound = Config.modulators[setting].convertRealFactor + Config.modulators[setting].maxRawVol;\n                    this._modDragSetting = setting;\n\n                    this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\n                    this.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\n                    this.modDragValueLabel.textContent = \"\" + presValue;\n\n                }\n                else {\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n                }\n            }\n            else if (!this.editingModLabel) {\n                this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n                this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n            }\n        }\n        else {\n            this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n            this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n        }\n\n        let mousePitch: number = this._findMousePitch(this._mouseY);\n\n        if (this._cursor.curNote != null) {\n\n            this._cursor.start = this._cursor.curNote.start;\n            this._cursor.end = this._cursor.curNote.end;\n            this._cursor.pins = this._cursor.curNote.pins;\n\n            let interval: number = 0;\n            let error: number = 0;\n            let prevPin: NotePin;\n            let nextPin: NotePin = this._cursor.curNote.pins[0];\n            for (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\n                prevPin = nextPin;\n                nextPin = this._cursor.curNote.pins[j];\n                const leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\n                const rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\n                if (this._mouseX > rightSide) continue;\n                if (this._mouseX < leftSide) throw new Error();\n                const intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\n                const arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\n                const bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\n                interval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\n                error = arc * bendHeight + 0.95;\n                break;\n            }\n\n            let minInterval: number = Number.MAX_VALUE;\n            let maxInterval: number = -Number.MAX_VALUE;\n            let bestDistance: number = Number.MAX_VALUE;\n            for (const pin of this._cursor.curNote.pins) {\n                if (minInterval > pin.interval) minInterval = pin.interval;\n                if (maxInterval < pin.interval) maxInterval = pin.interval;\n                const pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\n                if (bestDistance > pinDistance) {\n                    bestDistance = pinDistance;\n                    this._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\n                }\n            }\n\n            mousePitch -= interval;\n            const maxPitch: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 :\n                    this._doc.song.getChannelIsMod(this._doc.channel) ? Config.modCount - 1 : Config.maxPitch;\n            this._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, maxPitch - maxInterval);\n\n            // Snap to nearby existing note if present.\n            if (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel)) {\n                let nearest: number = error;\n                for (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\n                    const distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\n                    if (distance > nearest) continue;\n                    nearest = distance;\n                    this._cursor.pitch = this._cursor.curNote.pitches[i];\n                }\n            }\n\n            for (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\n                if (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\n                    this._cursor.pitchIndex = i;\n                    break;\n                }\n            }\n        } else {\n\n            const maxPitch: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 :\n                this._doc.song.getChannelIsMod(this._doc.channel) ? Config.modCount : Config.maxPitch;\n            this._cursor.pitch = this._snapToPitch(mousePitch, 0, maxPitch);\n            const defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\n            const fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\n            const maxDivision: number = this._getMaxDivision();\n            const modMouse: number = this._cursor.part % Config.partsPerBeat;\n            if (defaultLength == 1) {\n                this._cursor.start = this._cursor.part;\n            } else if (defaultLength > Config.partsPerBeat) {\n                this._cursor.start = fullBeats * Config.partsPerBeat;\n            } else if (defaultLength == Config.partsPerBeat) {\n                this._cursor.start = fullBeats * Config.partsPerBeat;\n                if (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\n                    this._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\n                }\n            } else {\n                this._cursor.start = fullBeats * Config.partsPerBeat;\n                let division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\n                while (division < maxDivision && Config.partsPerBeat % division != 0) {\n                    division++;\n                }\n                this._cursor.start += Math.floor(modMouse / division) * division;\n            }\n            this._cursor.end = this._cursor.start + defaultLength;\n            let forceStart: number = 0;\n            let forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\n            if (this._cursor.prevNote != null) {\n                forceStart = this._cursor.prevNote.end;\n            }\n            if (this._cursor.nextNote != null) {\n                forceEnd = this._cursor.nextNote.start;\n            }\n            if (this._cursor.start < forceStart) {\n                this._cursor.start = forceStart;\n                this._cursor.end = this._cursor.start + defaultLength;\n                if (this._cursor.end > forceEnd) {\n                    this._cursor.end = forceEnd;\n                }\n            } else if (this._cursor.end > forceEnd) {\n                this._cursor.end = forceEnd;\n                this._cursor.start = this._cursor.end - defaultLength;\n                if (this._cursor.start < forceStart) {\n                    this._cursor.start = forceStart;\n                }\n            }\n\n            if (this._cursor.end - this._cursor.start == defaultLength) {\n                this._copiedPins = this._copiedPinChannels[this._doc.channel];\n                this._cursor.pins = this._copiedPins;\n            } else {\n                this._cursor.pins = [];\n                for (const oldPin of this._copiedPins) {\n                    if (oldPin.time <= this._cursor.end - this._cursor.start) {\n                        this._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\n                        if (oldPin.time == this._cursor.end - this._cursor.start) break;\n                    } else {\n                        this._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.size));\n                        break;\n                    }\n                }\n            }\n\n            if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n\n                this._cursor.pitch = Math.max(0, Math.min(Config.modCount - 1, this._cursor.pitch));\n\n                // Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\n                if (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\n                    for (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\n                        this._cursor.pins[pin].size = this._stashCursorPinVols[this._doc.channel][pin];\n                    }\n                }\n\n                // Scale volume of copied pin to cap for this row\n                let maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\n                let maxFoundHeight: number = 0;\n                for (const pin of this._cursor.pins) {\n                    if (pin.size > maxFoundHeight) {\n                        maxFoundHeight = pin.size;\n                    }\n                }\n                // Apply scaling if the max height is below any pin setting.\n                if (maxFoundHeight > maxHeight) {\n                    for (const pin of this._cursor.pins) {\n                        pin.size = Math.round(pin.size * (maxHeight / maxFoundHeight));\n                    }\n                }\n            }\n\n        }\n\n        this._cursor.valid = true;\n\n    }\n\n    private _cursorIsInSelection(): boolean {\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\n    }\n\n    private _cursorAtStartOfSelection(): boolean {\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\n    }\n\n    private _cursorAtEndOfSelection(): boolean {\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\n    }\n\n    private _findMousePitch(pixelY: number): number {\n        return Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\n    }\n\n    private _snapToPitch(guess: number, min: number, max: number): number {\n        if (guess < min) guess = min;\n        if (guess > max) guess = max;\n        const scale: ReadonlyArray<boolean> = this._doc.prefs.notesOutsideScale ? Config.scales.dictionary[\"Free\"].flags : this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\n        if (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\n\n            return Math.floor(guess);\n        } else {\n            let topPitch: number = Math.floor(guess) + 1;\n            let bottomPitch: number = Math.floor(guess) - 1;\n            while (!scale[topPitch % Config.pitchesPerOctave]) {\n                topPitch++;\n            }\n            while (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\n                bottomPitch--;\n            }\n            if (topPitch > max) {\n                if (bottomPitch < min) {\n                    return min;\n                } else {\n                    return bottomPitch;\n                }\n            } else if (bottomPitch < min) {\n                return topPitch;\n            }\n            let topRange: number = topPitch;\n            let bottomRange: number = bottomPitch + 1;\n            if (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\n                topRange -= 0.5;\n            }\n            if (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\n                bottomRange += 0.5;\n            }\n            return guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\n        }\n    }\n\n    private _copyPins(note: Note): void {\n        this._copiedPins = [];\n        for (const oldPin of note.pins) {\n            this._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.size));\n        }\n        for (let i: number = 1; i < this._copiedPins.length - 1;) {\n            if (this._copiedPins[i - 1].size == this._copiedPins[i].size &&\n                this._copiedPins[i].size == this._copiedPins[i + 1].size) {\n                this._copiedPins.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        this._copiedPinChannels[this._doc.channel] = this._copiedPins;\n\n        this._stashCursorPinVols[this._doc.channel] = [];\n        for (let pin: number = 0; pin < this._copiedPins.length; pin++) {\n            this._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].size);\n        }\n    }\n\n    public movePlayheadToMouse(): boolean {\n\t\tif (this._mouseOver) {\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n    public resetCopiedPins = (): void => {\n        const maxDivision: number = this._getMaxDivision();\n        let cap: number = this._doc.song.getVolumeCap(false);\n        this._copiedPinChannels.length = this._doc.song.getChannelCount();\n        this._stashCursorPinVols.length = this._doc.song.getChannelCount();\n        for (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\n            this._stashCursorPinVols[i] = [cap, cap];\n        }\n        for (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\n            this._stashCursorPinVols[i] = [cap, 0];\n        }\n        for (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\n            this._stashCursorPinVols[i] = [cap, 0];\n        }\n    }\n\n    private _animatePlayhead = (timestamp: number): void => {\n\n        if (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\n            // On a mobile device, the pattern editor supports using a long stationary touch to activate selection.\n            this._dragChange!.undo();\n            this._shiftHeld = true;\n            this._dragConfirmed = false;\n            this._whenCursorPressed();\n            // The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n            this._doc.notifier.notifyWatchers();\n        }\n\n        const playheadBar: number = Math.floor(this._doc.synth.playhead);\n\n        if (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\n            this._svgPlayhead.setAttribute(\"visibility\", \"visible\");\n            const modPlayhead: number = this._doc.synth.playhead - playheadBar;\n            if (Math.abs(modPlayhead - this._playheadX) > 0.1) {\n                this._playheadX = modPlayhead;\n            } else {\n                this._playheadX += (modPlayhead - this._playheadX) * 0.2;\n            }\n            this._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\n        } else {\n            this._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\n        }\n\n        if (this._doc.synth.playing && (this._doc.synth.recording || this._doc.prefs.autoFollow) && this._followPlayheadBar != playheadBar) {\n            // When autofollow is enabled, select the current bar (but don't record it in undo history).\n            new ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\n            // The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n            this._doc.notifier.notifyWatchers();\n        }\n        this._followPlayheadBar = playheadBar;\n\n        if (this._doc.currentPatternIsDirty) {\n            this._redrawNotePatterns();\n        }\n\n        window.requestAnimationFrame(this._animatePlayhead);\n    }\n\n    private _whenMouseOver = (event: MouseEvent): void => {\n        if (this._mouseOver) return;\n        this._mouseOver = true;\n        this._usingTouch = false;\n    }\n\n    private _whenMouseOut = (event: MouseEvent): void => {\n        if (!this._mouseOver) return;\n        this._mouseOver = false;\n    }\n\n    private _whenMousePressed = (event: MouseEvent): void => {\n        event.preventDefault();\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._usingTouch = false;\n        this._shiftHeld = event.shiftKey;\n        this._dragConfirmed = false;\n        this._whenCursorPressed();\n    }\n\n    private _whenTouchPressed = (event: TouchEvent): void => {\n        event.preventDefault();\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._usingTouch = true;\n        this._shiftHeld = event.shiftKey;\n        this._dragConfirmed = false;\n        this._touchTime = performance.now();\n        this._whenCursorPressed();\n    }\n\n    public stopEditingModLabel(discardChanges: boolean) {\n        if (this.editingModLabel) {\n            this.editingModLabel = false;\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n\n            if (window.getSelection) {\n                let sel: Selection | null = window.getSelection();\n                if (sel != null)\n                    sel.removeAllRanges();\n            }\n            // Return pin to its state before text editing\n            if (discardChanges) {\n                this._modDragPin.size = this._modDragStartValue;\n\n                let presValue: number = this._modDragStartValue + Config.modulators[this._modDragSetting].convertRealFactor;\n\n                // This is me being too lazy to fiddle with the css to get it to align center.\n                let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\n                this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\n                this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\n\n                const sequence: ChangeSequence = new ChangeSequence();\n                this._dragChange = sequence;\n                this._doc.setProspectiveChange(this._dragChange);\n\n                sequence.append(new ChangeSizeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\n\n                this._dragChange = null;\n            }\n\n            const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\n            if (continuousState) {\n                if (this._dragChange != null) {\n                    this._doc.record(this._dragChange);\n                    this._dragChange = null;\n                }\n            }\n        }\n    }\n\n    private _whenCursorPressed(): void {\n        // Check for click on mod value label\n        if (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\n            this._mouseX > +this._modDragValueLabelLeft - 6 &&\n            this._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\n            this._mouseY > +this._modDragValueLabelTop - 8 &&\n            this._mouseY < +this._modDragValueLabelTop + 11) {\n            // Mod value label clicked, select it\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\n            this.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\n            if (window.getSelection) {\n                let sel: Selection | null = window.getSelection();\n                if (sel != null)\n                    sel.selectAllChildren(this.modDragValueLabel);\n            }\n\n            window.setTimeout(() => { this.modDragValueLabel.focus(); });\n            this.editingModLabel = true;\n        } else {\n            this.stopEditingModLabel(false);\n            if (this._doc.prefs.enableNotePreview) this._doc.synth.maintainLiveInput();\n            this._mouseDown = true;\n            this._mouseXStart = this._mouseX;\n            this._mouseYStart = this._mouseY;\n            this._updateCursorStatus();\n            this._updatePreview();\n            const sequence: ChangeSequence = new ChangeSequence();\n            this._dragChange = sequence;\n            this._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\n            this._doc.setProspectiveChange(this._dragChange);\n\n            if (this._cursorAtStartOfSelection()) {\n                this._draggingStartOfSelection = true;\n            } else if (this._cursorAtEndOfSelection()) {\n                this._draggingEndOfSelection = true;\n            } else if (this._shiftHeld) {\n                if ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n                } else {\n                    if (this._cursor.curNote != null) {\n                        sequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\n                    } else {\n                        const start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\n                        const end: number = start + Config.partsPerBeat;\n                        sequence.append(new ChangePatternSelection(this._doc, start, end));\n                    }\n                }\n            } else if (this._cursorIsInSelection()) {\n                this._draggingSelectionContents = true;\n            } else if (this._cursor.valid && this._cursor.curNote == null) {\n                sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                // If clicking in empty space, the result will be adding a note,\n                // so we can safely add it immediately. Note that if clicking on\n                // or near an existing note, the result will depend on whether\n                // a drag follows, so we couldn't add the note yet without being\n                // confusing.\n\n                const note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.channel));\n                note.pins = [];\n                for (const oldPin of this._cursor.pins) {\n                    note.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\n                }\n                sequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\n                const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                if (pattern == null) throw new Error();\n                sequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\n\n                if (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\n                    // Play the new note out loud if enabled.\n                    const duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\n                    this._doc.performance.setTemporaryPitches([this._cursor.pitch], duration);\n                }\n            }\n            this._updateSelection();\n        }\n    }\n\n    private _whenMouseMoved = (event: MouseEvent): void => {\n        this.controlMode = event.ctrlKey;\n        this.shiftMode = event.shiftKey;\n\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._usingTouch = false;\n        this._whenCursorMoved();\n    }\n\n    private _whenTouchMoved = (event: TouchEvent): void => {\n        if (!this._mouseDown) return;\n        event.preventDefault();\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._whenCursorMoved();\n    }\n\n    private _whenCursorMoved(): void {\n        if (this._doc.prefs.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\n\n        // HACK: Undoable pattern changes rely on persistent instance\n        // references. Loading song from hash via undo/redo breaks that,\n        // so changes are no longer undoable and the cursor status may be\n        // invalid. Abort further drag changes until the mouse is released.\n        const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\n\n        if (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\n            const dx: number = this._mouseX - this._mouseXStart;\n            const dy: number = this._mouseY - this._mouseYStart;\n            if (Math.sqrt(dx * dx + dy * dy) > 5) {\n                this._mouseDragging = true;\n                this._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\n            }\n        }\n\n        if (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\n            this._dragConfirmed = true;\n        }\n\n        if (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\n            this._dragChange!.undo();\n            const sequence: ChangeSequence = new ChangeSequence();\n            this._dragChange = sequence;\n            this._doc.setProspectiveChange(this._dragChange);\n\n            const minDivision: number = this._getMinDivision();\n            const currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\n            if (this._draggingStartOfSelection) {\n                sequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\n                this._updateSelection();\n            } else if (this._draggingEndOfSelection) {\n                sequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\n                this._updateSelection();\n            } else if (this._draggingSelectionContents) {\n                const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                if (this._mouseDragging && pattern != null) {\n                    this._dragChange!.undo();\n                    const sequence: ChangeSequence = new ChangeSequence();\n                    this._dragChange = sequence;\n                    this._doc.setProspectiveChange(this._dragChange);\n\n                    let scale = this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\n                    const notesInScale: number = scale.filter(x => x).length;\n                    const pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\n                    const draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\n                    const draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\n                    sequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\n                }\n\n            } else if (this._shiftHeld && this._dragConfirmed) {\n\n                if (this._mouseDragging) {\n                    let start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\n                    let end: number = start + Config.partsPerBeat;\n                    if (this._cursor.curNote != null) {\n                        start = Math.max(start, this._cursor.curNote.start);\n                        end = Math.min(end, this._cursor.curNote.end);\n                    }\n\n                    // Todo: The following two conditional blocks could maybe be refactored.\n                    if (currentPart < start) {\n                        start = 0;\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                        if (pattern != null) {\n                            for (let i: number = 0; i < pattern.notes.length; i++) {\n                                if (pattern.notes[i].start <= currentPart) {\n                                    start = pattern.notes[i].start;\n                                }\n                                if (pattern.notes[i].end <= currentPart) {\n                                    start = pattern.notes[i].end;\n                                }\n                            }\n                        }\n                        for (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\n                            const part: number = beat * Config.partsPerBeat;\n                            if (start <= part && part <= currentPart) {\n                                start = part;\n                            }\n                        }\n                    }\n\n                    if (currentPart > end) {\n                        end = Config.partsPerBeat * this._doc.song.beatsPerBar;\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                        if (pattern != null) {\n                            for (let i: number = 0; i < pattern.notes.length; i++) {\n                                if (pattern.notes[i].start >= currentPart) {\n                                    end = pattern.notes[i].start;\n                                    break;\n                                }\n                                if (pattern.notes[i].end >= currentPart) {\n                                    end = pattern.notes[i].end;\n                                    break;\n                                }\n                            }\n                        }\n                        for (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\n                            const part: number = beat * Config.partsPerBeat;\n                            if (currentPart < part && part < end) {\n                                end = part;\n                            }\n                        }\n                    }\n\n                    sequence.append(new ChangePatternSelection(this._doc, start, end));\n                    this._updateSelection();\n                }\n            } else {\n\n                if (this._cursor.curNote == null) {\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n\n                    let backwards: boolean;\n                    let directLength: number;\n                    if (currentPart < this._cursor.start) {\n                        backwards = true;\n                        directLength = this._cursor.start - currentPart;\n                    } else {\n                        backwards = false;\n                        directLength = currentPart - this._cursor.start + minDivision;\n                    }\n\n                    let defaultLength: number = minDivision;\n                    for (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\n                        if (minDivision == 1) {\n                            if (i < 5) {\n                                // Allow small lengths.\n                            } else if (i <= Config.partsPerBeat / 2.0) {\n                                if (i % 3 != 0 && i % 4 != 0) {\n                                    continue;\n                                }\n                            } else if (i <= Config.partsPerBeat * 1.5) {\n                                if (i % 6 != 0 && i % 8 != 0) {\n                                    continue;\n                                }\n                            } else if (i % Config.partsPerBeat != 0) {\n                                continue;\n                            }\n                        } else {\n                            if (i >= 5 * minDivision &&\n                                i % Config.partsPerBeat != 0 &&\n                                i != Config.partsPerBeat * 3.0 / 4.0 &&\n                                i != Config.partsPerBeat * 3.0 / 2.0 &&\n                                i != Config.partsPerBeat * 4.0 / 3.0) {\n                                continue;\n                            }\n                        }\n\n                        const blessedLength: number = i;\n                        if (blessedLength == directLength) {\n                            defaultLength = blessedLength;\n                            break;\n                        }\n                        if (blessedLength < directLength) {\n                            defaultLength = blessedLength;\n                        }\n\n                        if (blessedLength > directLength) {\n                            if (defaultLength < directLength - minDivision) {\n                                defaultLength = blessedLength;\n                            }\n                            break;\n                        }\n                    }\n\n                    let start: number;\n                    let end: number;\n\n                    if (backwards) {\n                        end = this._cursor.start;\n                        start = end - defaultLength;\n                    } else {\n                        start = this._cursor.start;\n                        end = start + defaultLength;\n                    }\n                    const continuesLastPattern: boolean = (start < 0 && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\n                    if (start < 0) start = 0;\n                    if (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\n                    if (start < end) {\n                        sequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                        if (pattern == null) throw new Error();\n                        // Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\n                        sequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\n                        let i: number;\n                        for (i = 0; i < pattern.notes.length; i++) {\n                            if (pattern.notes[i].start >= end) break;\n                        }\n                        const theNote: Note = new Note(this._cursor.pitch, start, end,\n                            this._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\n                            this._doc.song.getChannelIsNoise(this._doc.channel));\n                        theNote.continuesLastPattern = continuesLastPattern;\n                        sequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\n                        this._copyPins(theNote);\n\n                        this._dragTime = backwards ? start : end;\n                        this._dragPitch = this._cursor.pitch;\n                        this._dragSize = theNote.pins[backwards ? 0 : 1].size;\n                        this._dragVisible = true;\n                    }\n\n                    let prevPattern: Pattern | null = this._pattern;\n\n                    this._pattern = this._doc.getCurrentPattern(this._barOffset);\n\n                    if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\n                        // Need to re-sort the notes by start time as they might change order if user drags them around.\n                        this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                    }\n\n                } else if (this._mouseHorizontal) {\n\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                    const shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\n\n                    const shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\n                    let shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\n                    const continuesLastPattern: boolean = (shiftedTime < 0.0 && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\n                    if (shiftedTime < 0) shiftedTime = 0;\n                    if (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\n                    if (this._pattern == null) throw new Error();\n\n                    if (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\n                        shiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\n\n                        sequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\n\n                        this._dragVisible = false;\n                    } else {\n                        const start: number = Math.min(this._cursor.curNote.start, shiftedTime);\n                        const end: number = Math.max(this._cursor.curNote.end, shiftedTime);\n\n                        this._dragTime = shiftedTime;\n                        this._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\n                        this._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\n                        this._dragVisible = true;\n\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\n                        sequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime, continuesLastPattern));\n                        this._copyPins(this._cursor.curNote);\n                    }\n                } else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\n\n                    if (!this._mouseDragging)\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                    const bendPart: number =\n                        Math.max(this._cursor.curNote.start,\n                            Math.min(this._cursor.curNote.end,\n                                Math.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\n                            )\n                        ) - this._cursor.curNote.start;\n\n                    let prevPin: NotePin;\n                    let nextPin: NotePin = this._cursor.curNote.pins[0];\n                    let bendSize: number = 0;\n                    let bendInterval: number = 0;\n                    let cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\n\n                    // Dragging gets a bit faster after difference in drag counts is >8.\n                    let dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\n                    let dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\n                    let dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\n                    let dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\n\n                    // Note volume drag overrides attempts to make a pattern selection\n                    if (dragCounts > 0) {\n                        this._shiftHeld = false;\n                    }\n\n                    for (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\n                        prevPin = nextPin;\n                        nextPin = this._cursor.curNote.pins[i];\n                        if (bendPart > nextPin.time) continue;\n                        if (bendPart < prevPin.time) throw new Error();\n                        const sizeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\n                        bendSize = Math.round(prevPin.size * (1.0 - sizeRatio) + nextPin.size * sizeRatio + dragSign * dragCounts);\n                        // If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\n                        if (!this.controlMode && !this._doc.prefs.alwaysFineNoteVol && !this._doc.song.getChannelIsMod(this._doc.channel)) {\n                            bendSize = Math.floor(bendSize / 2) * 2;\n                        }\n                        if (bendSize < 0) bendSize = 0;\n                        if (bendSize > cap) bendSize = cap;\n                        bendInterval = this._snapToPitch(prevPin.interval * (1.0 - sizeRatio) + nextPin.interval * sizeRatio + this._cursor.curNote.pitches[0], 0, Config.maxPitch) - this._cursor.curNote.pitches[0];\n                        break;\n                    }\n                    if (this._doc.song.getChannelIsMod(this._doc.channel) && this.controlMode) {\n                        // Link bend to the next note over\n                        if (bendPart >= this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time) {\n                            if (this._cursor.curNote.start + this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time < this._doc.song.beatsPerBar * Config.partsPerBeat) {\n                                for (const note of this._pattern!.notes) {\n                                    if (note.start == this._cursor.curNote.start + this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time && note.pitches[0] == this._cursor.curNote.pitches[0]) {\n                                        sequence.append(new ChangeSizeBend(this._doc, note, note.pins[0].time, bendSize, bendInterval, this.shiftMode));\n                                    }\n                                }\n                            }\n                            else {\n                                // Try to bend to the next pattern over. Only do this if a note starts at 0, and instrument is identical in next pattern.\n                                const nextPattern: Pattern | null = this._doc.getCurrentPattern(1);\n\n                                if (nextPattern != null && nextPattern.instruments[0] == this._pattern!.instruments[0]) {\n                                    for (const note of nextPattern.notes) {\n                                        if (note.start == 0 && note.pitches[0] == this._cursor.curNote.pitches[0]) {\n                                            sequence.append(new ChangeSizeBend(this._doc, note, note.pins[0].time, bendSize, bendInterval, this.shiftMode));\n                                        }\n                                    }\n                                }\n\n                            }\n                        }\n                        // Link bend to the previous note\n                        else if (bendPart <= this._cursor.curNote.pins[0].time) {\n                            if (this._cursor.curNote.start > 0) {\n                                for (const note of this._pattern!.notes) {\n                                    if (note.end == this._cursor.curNote.start && note.pitches[0] == this._cursor.curNote.pitches[0]) {\n                                        sequence.append(new ChangeSizeBend(this._doc, note, note.pins[note.pins.length - 1].time, bendSize, bendInterval, this.shiftMode));\n                                    }\n                                }\n                            }\n                            else {\n                                // Try to bend to the previous pattern over. Only do this if a note starts at the end, and instrument is identical in previous pattern.\n                                const prevPattern: Pattern | null = this._doc.getCurrentPattern(-1);\n\n                                if (prevPattern != null && prevPattern.instruments[0] == this._pattern!.instruments[0]) {\n                                    for (const note of prevPattern.notes) {\n                                        if (note.end == this._doc.song.beatsPerBar * Config.partsPerBeat && note.pitches[0] == this._cursor.curNote.pitches[0]) {\n                                            sequence.append(new ChangeSizeBend(this._doc, note, note.pins[note.pins.length - 1].time, bendSize, bendInterval, this.shiftMode));\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    this._dragTime = this._cursor.curNote.start + bendPart;\n                    this._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\n                    this._dragSize = bendSize;\n                    this._dragVisible = true;\n\n                    sequence.append(new ChangeSizeBend(this._doc, this._cursor.curNote, bendPart, bendSize, bendInterval, this.shiftMode));\n                    this._copyPins(this._cursor.curNote);\n                } else {\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                    this._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\n\n                    if (this._pattern == null) throw new Error();\n\n                    let bendStart: number;\n                    let bendEnd: number;\n                    if (this._mouseX >= this._mouseXStart) {\n                        bendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\n                        bendEnd = currentPart + minDivision;\n                    } else {\n                        bendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\n                        bendEnd = currentPart;\n                    }\n                    if (bendEnd < 0) bendEnd = 0;\n                    if (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\n                    if (bendEnd > this._cursor.curNote.end) {\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\n                    }\n                    if (bendEnd < this._cursor.curNote.start) {\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\n                    }\n\n                    let minPitch: number = Number.MAX_VALUE;\n                    let maxPitch: number = -Number.MAX_VALUE;\n                    for (const pitch of this._cursor.curNote.pitches) {\n                        if (minPitch > pitch) minPitch = pitch;\n                        if (maxPitch < pitch) maxPitch = pitch;\n                    }\n                    minPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\n                    maxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\n\n                    if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\n                        const bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxPitch);\n                        sequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\n                        this._dragPitch = bendTo;\n                    }\n                    else {\n                        const bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\n                        sequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\n                        this._dragPitch = bendTo;\n                    }\n                    this._copyPins(this._cursor.curNote);\n\n                    this._dragTime = bendEnd;\n                    this._dragVisible = true;\n                }\n            }\n        }\n\n        if (!(this._mouseDown && this._cursor.valid && continuousState)) {\n            this._updateCursorStatus();\n            this._updatePreview();\n        }\n    }\n\n    private _whenCursorReleased = (event: Event | null): void => {\n        if (!this._cursor.valid) return;\n\n        const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\n        if (this._mouseDown && continuousState && this._dragChange != null) {\n\n            if (this._draggingSelectionContents) {\n                this._doc.record(this._dragChange);\n                this._dragChange = null;\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\n                if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n\n            } else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\n                this._setPatternSelection(this._dragChange);\n                this._dragChange = null;\n            } else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\n                this._doc.record(this._dragChange);\n                this._dragChange = null;\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\n                if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n\n            } else {\n\n                if (this._pattern == null) throw new Error();\n\n                const sequence: ChangeSequence = new ChangeSequence();\n                sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                if (this._cursor.pitchIndex == -1) {\n                    if (this._cursor.curNote.pitches.length == Config.maxChordSize) {\n                        sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\n                    }\n                    sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\n                    this._copyPins(this._cursor.curNote);\n\n                    if (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\n                        const duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\n                        this._doc.performance.setTemporaryPitches(this._cursor.curNote.pitches, duration);\n                    }\n                } else {\n                    if (this._cursor.curNote.pitches.length == 1) {\n                        sequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\n                    } else {\n                        sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\n                    }\n                }\n\n                this._doc.record(sequence);\n            }\n        }\n\n        this._mouseDown = false;\n        this._mouseDragging = false;\n        this._draggingStartOfSelection = false;\n        this._draggingEndOfSelection = false;\n        this._draggingSelectionContents = false;\n        this._lastChangeWasPatternSelection = false;\n        this.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\n        this._updateCursorStatus();\n        this._updatePreview();\n    }\n\n    private _setPatternSelection(change: UndoableChange): void {\n        this._changePatternSelection = change;\n        this._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\n    }\n\n\n    private _updatePreview(): void {\n        if (this._usingTouch) {\n            if (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\n                this._svgPreview.setAttribute(\"visibility\", \"hidden\");\n\n                if (!this.editingModLabel) {\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n                }\n\n            } else {\n                this._svgPreview.setAttribute(\"visibility\", \"visible\");\n\n                const x: number = this._partWidth * this._dragTime;\n                const y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\n                const radius: number = (this._pitchHeight - this._pitchBorder) / 2;\n                const width: number = 80;\n                const height: number = 60;\n                const cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\n                //this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\n\n                let pathString: string = \"\";\n\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap) - height) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap) + height) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n\n                this._svgPreview.setAttribute(\"d\", pathString);\n            }\n        } else {\n            if (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\n                this._svgPreview.setAttribute(\"visibility\", \"hidden\");\n                if (!this.editingModLabel) {\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n                }\n            } else {\n                this._svgPreview.setAttribute(\"visibility\", \"visible\");\n\n                if (this._cursorAtStartOfSelection()) {\n                    const center: number = this._partWidth * this._doc.selection.patternSelectionStart;\n                    const left: string = prettyNumber(center - 4);\n                    const right: string = prettyNumber(center + 4);\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n                } else if (this._cursorAtEndOfSelection()) {\n                    const center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\n                    const left: string = prettyNumber(center - 4);\n                    const right: string = prettyNumber(center + 4);\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n                } else if (this._cursorIsInSelection()) {\n                    const left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\n                    const right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n                } else {\n                    this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\n                }\n            }\n        }\n    }\n\n    private _updateSelection(): void {\n        if (this._doc.selection.patternSelectionActive) {\n            this._selectionRect.setAttribute(\"visibility\", \"visible\");\n            this._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\n            this._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\n        } else {\n            this._selectionRect.setAttribute(\"visibility\", \"hidden\");\n        }\n    }\n\n    public render(): void {\n        const nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n\n        if (this._pattern != nextPattern && this._pattern != null) {\n            if (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\n                nextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n            }\n            this._dragChange = null;\n            this._whenCursorReleased(null);\n        }\n        this._pattern = nextPattern;\n\n        this._editorWidth = this.container.clientWidth;\n        this._editorHeight = this.container.clientHeight;\n        this._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\n        this._octaveOffset = (this._doc.channel >= this._doc.song.pitchChannelCount) ? 0 : this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\n\n        if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\n            this._pitchBorder = 0;\n            this._pitchCount = Config.drumCount;\n        }\n        else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n            this._pitchBorder = this._defaultModBorder;\n            this._pitchCount = Config.modCount;\n\n            if (this._pattern != null) {\n                // Force max height of mod channels to conform to settings.\n                for (const note of this._pattern.notes) {\n                    let pitch = note.pitches[0]; // No pitch bend possible in mod channels.\n                    let maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\n                    let maxFoundHeight: number = 0;\n                    for (const pin of note.pins) {\n                        if (pin.size > maxFoundHeight) {\n                            maxFoundHeight = pin.size;\n                        }\n                    }\n                    // Apply scaling if the max height is below any pin setting.\n                    if (maxFoundHeight > maxHeight) {\n                        for (const pin of note.pins) {\n                            pin.size = Math.round(pin.size * (maxHeight / maxFoundHeight));\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._pitchBorder = 0;\n            this._pitchCount = this._doc.getVisiblePitchCount();\n        }\n\n        this._pitchHeight = this._editorHeight / this._pitchCount;\n        this._octaveOffset = (this._doc.channel >= this._doc.song.pitchChannelCount) ? 0 : this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\n        if (this._renderedRhythm != this._doc.song.rhythm ||\n            this._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\n            this._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\n            this._renderedModChannelCount != this._doc.song.modChannelCount) {\n            this._renderedRhythm = this._doc.song.rhythm;\n            this._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\n            this._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\n            this._renderedModChannelCount = this._doc.song.modChannelCount;\n            this.resetCopiedPins();\n        }\n\n        this._copiedPins = this._copiedPinChannels[this._doc.channel];\n\n        if (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\n            this._renderedWidth = this._editorWidth;\n            this._renderedHeight = this._editorHeight;\n            this._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\n            this._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\n            this._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\n            this._selectionRect.setAttribute(\"y\", \"0\");\n            this._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\n        }\n\n        const beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\n        if (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\n            this._renderedBeatWidth = beatWidth;\n            this._renderedPitchHeight = this._pitchHeight;\n            this._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\n            this._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\n            this._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\n            this._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\n            this._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\n            this._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\n            this._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\n            this._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\n            this._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\n            if (this._pitchHeight > this._pitchBorder) {\n                this._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\n                this._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\n            }\n\n\n\n            for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\n                const rectangle: SVGRectElement = this._backgroundPitchRows[j];\n                const y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\n                rectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\n                rectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\n                rectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\n            }\n        }\n\n        if (this._interactive) {\n            if (!this._mouseDown) this._updateCursorStatus();\n            this._updatePreview();\n            this._updateSelection();\n        }\n\n        if (this._renderedFifths != this._doc.prefs.showFifth) {\n            this._renderedFifths = this._doc.prefs.showFifth;\n            this._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.prefs.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\n        }\n\n        for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\n            let scale = this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\n            \n            this._backgroundPitchRows[j].style.visibility = scale[j] ? \"visible\" : \"hidden\";\n        }\n\n        if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\n            if (!this._renderedDrums) {\n                this._renderedDrums = true;\n                this._renderedMod = false;\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\n            }\n        } else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n            if (!this._renderedMod) {\n                this._renderedDrums = false;\n                this._renderedMod = true;\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\n            }\n        } else {\n            if (this._renderedDrums || this._renderedMod) {\n                this._renderedDrums = false;\n                this._renderedMod = false;\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\n            }\n        }\n\n        this._redrawNotePatterns();\n    }\n\n    private _redrawNotePatterns(): void {\n        this._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\n\n        if (this._doc.prefs.showChannels) {\n            if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\n                for (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\n                    if (channel == this._doc.channel) continue;\n                    if (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\n\n                    const pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\n                    if (pattern2 == null) continue;\n\n                    const octaveOffset: number = this._doc.getBaseVisibleOctave(channel) * Config.pitchesPerOctave;\n                    for (const note of pattern2.notes) {\n                        for (const pitch of note.pitches) {\n                            const notePath: SVGPathElement = SVG.path();\n                            notePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\n                            notePath.setAttribute(\"pointer-events\", \"none\");\n                            this._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, octaveOffset);\n                            this._svgNoteContainer.appendChild(notePath);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this._pattern != null) {\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\n            const chord: Chord = instrument.getChord();\n            const transition: Transition = instrument.getTransition();\n            const displayNumberedChords: boolean = chord.customInterval || chord.arpeggiates || chord.strumParts > 0 || transition.slides;\n            for (const note of this._pattern.notes) {\n                let disabled: boolean = false;\n                if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n                    const modIndex: number = instrument.modulators[Config.modCount - 1 - note.pitches[0]];\n                    if ((modIndex == Config.modulators.dictionary[\"none\"].index)\n                    || instrument.invalidModulators[Config.modCount - 1 - note.pitches[0]])\n                        disabled = true;\n                }\n                for (let i: number = 0; i < note.pitches.length; i++) {\n                    const pitch: number = note.pitches[i];\n                    let notePath: SVGPathElement = SVG.path();\n                    let colorPrimary: string = (disabled ? ColorConfig.disabledNotePrimary : ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\n                    let colorSecondary: string = (disabled ? ColorConfig.disabledNoteSecondary : ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\n                    notePath.setAttribute(\"fill\", colorSecondary);\n                    notePath.setAttribute(\"pointer-events\", \"none\");\n                    this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\n                    this._svgNoteContainer.appendChild(notePath);\n                    notePath = SVG.path();\n                    notePath.setAttribute(\"fill\", colorPrimary);\n                    notePath.setAttribute(\"pointer-events\", \"none\");\n                    this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\n                    this._svgNoteContainer.appendChild(notePath);\n\n                    let indicatorOffset: number = 2;\n                    if (note.continuesLastPattern) {\n                        const arrowHeight: number = Math.min(this._pitchHeight, 20);\n                        let arrowPath: string;\n                        arrowPath = \"M \" + prettyNumber(this._partWidth * note.start + indicatorOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.3 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 12) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset));\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.3 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\n                        const arrow: SVGPathElement = SVG.path();\n                        arrow.setAttribute(\"d\", arrowPath);\n                        arrow.setAttribute(\"fill\", ColorConfig.invertedText);\n                        this._svgNoteContainer.appendChild(arrow);\n                        indicatorOffset += 12;\n                    }\n\n                    if (note.pitches.length > 1) {\n                        if (displayNumberedChords) {\n                            const oscillatorLabel: SVGTextElement = SVG.text();\n                            oscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + indicatorOffset));\n                            oscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\n                            oscillatorLabel.setAttribute(\"width\", \"30\");\n                            oscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\n                            oscillatorLabel.setAttribute(\"text-anchor\", \"start\");\n                            oscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\n                            oscillatorLabel.setAttribute(\"pointer-events\", \"none\");\n                            oscillatorLabel.textContent = \"\" + (i + 1);\n                            this._svgNoteContainer.appendChild(oscillatorLabel);\n                        }\n                    }\n                }\n\n\n                if (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\n\n                    this.modDragValueLabel.style.setProperty(\"display\", \"\");\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n                    this.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\n                    let setting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modulators[Config.modCount - 1 - note.pitches[0]];\n                    let presValue: number = this._dragSize + Config.modulators[setting].convertRealFactor;\n\n                    // This is me being too lazy to fiddle with the css to get it to align center.\n                    let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\n\n                    this._modDragValueLabelWidth = 8 + xOffset * 8;\n                    this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\n                    this._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\n\n                    this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\n                    this.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\n                    this.modDragValueLabel.textContent = \"\" + presValue;\n\n                }\n            }\n        }\n\n        this._doc.currentPatternIsDirty = false;\n    }\n\n    private _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showSize: boolean, offset: number): void {\n        const totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\n        const endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\n\n        let nextPin: NotePin = pins[0];\n\n        const cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\n\n        let pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showSize ? nextPin.size / cap : 1.0)) + \" \";\n\n        for (let i: number = 1; i < pins.length; i++) {\n            let prevPin: NotePin = nextPin;\n            nextPin = pins[i];\n            let prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\n            let nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\n            let prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\n            let nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\n            let prevSize: number = showSize ? prevPin.size / cap : 1.0;\n            let nextSize: number = showSize ? nextPin.size / cap : 1.0;\n            pathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\n            if (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\n            if (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\n            pathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\n        }\n        for (let i: number = pins.length - 2; i >= 0; i--) {\n            let prevPin: NotePin = nextPin;\n            nextPin = pins[i];\n            let prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\n            let nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\n            let prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\n            let nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\n            let prevSize: number = showSize ? prevPin.size / cap : 1.0;\n            let nextSize: number = showSize ? nextPin.size / cap : 1.0;\n            pathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\n            if (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\n            if (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\n            pathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\n        }\n        pathString += \"z\";\n\n        svgElement.setAttribute(\"d\", pathString);\n    }\n\n    private _pitchToPixelHeight(pitch: number): number {\n        return this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Instrument } from \"../synth/synth\";\n\nexport class Piano {\n\t\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\n\t\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\n\t\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\n\t\tprivate readonly _preview: HTMLDivElement = HTML.div({style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;`});\n\t\tpublic readonly container: HTMLDivElement = HTML.div({style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\"},\n\t\tthis._pianoContainer,\n\t\tthis._drumContainer,\n\t\tthis._modContainer,\n\t\tthis._preview,\n\t);\n\tprivate readonly _editorHeight: number = 481;\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\n\t\t\n\tprivate _pitchHeight: number;\n\tprivate _pitchCount: number;\n\t//private _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _cursorPitch: number;\n\tprivate _playedPitch: number = -1;\n\tprivate _renderedScale: number = -1;\n\tprivate _renderedDrums: boolean = false;\n\tprivate _renderedMod: boolean = false;\n\tprivate _renderedKey: number = -1;\n\tprivate _renderedPitchCount: number = -1;\n\tprivate readonly _renderedLiveInputPitches: number[] = [];\n\t\n\t\t\n\tpublic forceRender(): void {\n\t\tthis._renderedScale = -1;\n\t\tthis._documentChanged();\n\t}\n\n\tconstructor(private _doc: SongDocument) {\n\t\t\t\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\n\t\t\tthis._drumContainer.appendChild(HTML.div({class: \"drum-button\", style: `background-size: ${scale}% ${scale}%;`}));\n\t\t}\n\t\t\t\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\n\n\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\n\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\n\t\t\t\tfirstRowText,\n\t\t\t]);\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\n\t\t\t\tcountRect,\n\t\t\t\tcountText,\n\t\t\t]);\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\n\t\t\t\tsecondRowText,\n\t\t\t]);\n\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\n\t\t\t\tcountSVG,\n\t\t\t\tfirstRowSVG,\n\t\t\t]);\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\n\t\t\t\tsecondRowSVG,\n\t\t\t]);\n\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\n\t\t\t\tflexRow1,\n\t\t\t\tflexRow2,\n\t\t\t]);\n\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\n\t\t\tthis._modContainer.appendChild(modKey);\n\t\t\tthis._modFirstLabels.push(firstRowText);\n\t\t\tthis._modSecondLabels.push(secondRowText);\n\t\t\tthis._modCountLabels.push(countText);\n\t\t\tthis._modCountRects.push(countRect);\n\t\t}\n\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\n\t\t\t\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\t\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t}\n\t\t\n\tprivate _updateCursorPitch(): void {\n\t\tconst scale: ReadonlyArray<boolean> = this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount-1, this._pitchCount - (this._mouseY / this._pitchHeight)));\n\t\tif (scale[Math.floor(mousePitch) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\n\t\t} else {\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\n\t\t\t\ttopPitch++;\n\t\t\t}\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\n\t\t\t\tbottomPitch--;\n\t\t\t}\n\t\t\tlet topRange: number = topPitch;\n\t\t\tlet bottomRange: number = bottomPitch + 1;\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\n\t\t\t\ttopRange -= 0.5;\n\t\t\t}\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\n\t\t\t\tbottomRange += 0.5;\n\t\t\t}\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\n\t\t}\n\t}\n\t\t\n\tprivate _playLiveInput(): void {\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\t\tconst currentPitch: number = this._cursorPitch + octaveOffset;\n\t\tif (this._playedPitch == currentPitch) return;\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\n\t\tthis._playedPitch = currentPitch;\n\t\tthis._doc.performance.addPerformedPitch(currentPitch);\n\t}\n\t\t\n\tprivate _releaseLiveInput(): void {\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\n\t\tthis._playedPitch = -1;\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tthis._playLiveInput();\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\n\t\tif (this._mouseDown) this._releaseLiveInput();\n\t\tthis._mouseDown = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tthis._playLiveInput();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t}\n\t\t\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = false;\n\t\tthis._releaseLiveInput();\n\t}\n\t\n\tprivate _onAnimationFrame = (): void => {\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t\t\n\t\tlet liveInputChanged: boolean = false;\n\t\tconst liveInputPitchCount: number = !this._doc.performance.pitchesAreTemporary() ? this._doc.synth.liveInputPitches.length : 0;\n\t\tif (this._renderedLiveInputPitches.length != liveInputPitchCount) {\n\t\t\tliveInputChanged = true;\n\t\t}\n\t\tfor (let i: number = 0; i < liveInputPitchCount; i++) {\n\t\t\tif (this._renderedLiveInputPitches[i] != this._doc.synth.liveInputPitches[i]) {\n\t\t\t\tthis._renderedLiveInputPitches[i] = this._doc.synth.liveInputPitches[i];\n\t\t\t\tliveInputChanged = true;\n\t\t\t}\n\t\t}\n\t\tthis._renderedLiveInputPitches.length = liveInputPitchCount;\n\t\t\n\t\tif (liveInputChanged) {\n\t\t\tthis._updatePreview();\n\t\t}\n\t}\n\t\n\tprivate _updatePreview(): void {\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\n\t\t\n\t\tif (this._mouseOver && !this._mouseDown) {\n\t\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\n\t\t\t\n\t\t\tthis._preview.style.left = \"0px\";\n\t\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\n\t\t\tthis._preview.style.height = pitchHeight + \"px\";\n\t\t}\n\t\t\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\t\tconst container: HTMLDivElement = this._doc.song.getChannelIsNoise(this._doc.channel) ? this._drumContainer : this._pianoContainer;\n\t\tconst children: HTMLCollection = container.children;\n\t\tfor (let i: number = 0; i < children.length; i++) {\n\t\t\tconst child: Element = children[i];\n\t\t\tif (this._renderedLiveInputPitches.indexOf(i + octaveOffset) == -1) {\n\t\t\t\tchild.classList.remove(\"pressed\");\n\t\t\t} else {\n\t\t\t\tchild.classList.add(\"pressed\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _documentChanged = (): void => {\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\n\t\tthis._pitchCount = isMod ? Config.modCount : ( isDrum ? Config.drumCount : this._doc.getVisiblePitchCount() );\n\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t\t\n\t\tif (!this._doc.prefs.showLetters) return;\n\t\tif ((this._renderedScale == this._doc.song.scale && this._doc.song.scale != Config.scales.dictionary[\"Custom\"].index) && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod && this._renderedPitchCount == this._pitchCount) return;\n\t\t\n\t\tthis._renderedScale = this._doc.song.scale;\n\t\tthis._renderedKey = this._doc.song.key;\n\t\tthis._renderedDrums = isDrum;\n\t\tthis._renderedMod = isMod;\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\n\t\t\n\t\tif (!isDrum && !isMod) {\n\t\t\tif (this._renderedPitchCount != this._pitchCount) {\n\t\t\t\tthis._pianoContainer.innerHTML = \"\";\n\t\t\t\tfor (let i: number = 0; i < this._pitchCount; i++) {\n\t\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\"});\n\t\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({class: \"piano-button\", style: \"background: gray;\"}, pianoLabel);\n\t\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\n\t\t\t\t\tthis._pianoLabels[i] = pianoLabel;\n\t\t\t\t\tthis._pianoKeys[i] = pianoKey;\n\t\t\t\t}\n\t\t\t\tthis._pianoLabels.length = this._pitchCount;\n\t\t\t\tthis._pianoKeys.length = this._pitchCount;\n\t\t\t\tthis._renderedPitchCount = this._pitchCount;\n\t\t\t}\n\t\t\t\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\n                let scale = this._doc.song.scale == Config.scales.dictionary[\"Custom\"].index ? this._doc.song.scaleCustom : Config.scales[this._doc.song.scale].flags;\n\t\t\t\tif (!scale[j % Config.pitchesPerOctave]) {\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\n\t\t\t\t} else {\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\n\t\t\t\t\t\t\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\n\n\t\t\t\t\tif ((j % 12) == 0) {\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\n\t\t\t\t\t}\n\n\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? ColorConfig.whitePianoKeyText : ColorConfig.blackPianoKeyText;\n\t\t\t\t\tlabel.textContent = Piano.getPitchName(pitchNameIndex, j, this._doc.getBaseVisibleOctave(this._doc.channel) + this._doc.song.octave);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (isMod) {\n\t\t\tlet firstRow: string = \"\";\n\t\t\tlet secondRow: string = \"\";\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\n\n\t\t\t\tlet usingSecondRow: boolean = true;\n\t\t\t\tlet usingMod: boolean = true;\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\n\t\t\t\tlet channelVal: number = instrument.modChannels[Config.modCount - j - 1] + 1;\n\t\t\t\tlet modulator: number = instrument.modulators[Config.modCount - j - 1];\n\t\t\t\tlet status: number = 1 + +(channelVal - 1 >= this._doc.song.pitchChannelCount);\n\t\t\t\tif (instrument.modChannels[Config.modCount - j - 1] == -2)\n\t\t\t\t\tstatus = 0;\n\t\t\t\telse if (instrument.modChannels[Config.modCount - j - 1] == -1)\n\t\t\t\t\tstatus = 3;\n\t\t\t\tlet instrumentsLength: number = this._doc.song.channels[Math.max(0,channelVal - 1)].instruments.length;\n\t\t\t\t// 0 - none\n\t\t\t\t// 1 - pitch\n\t\t\t\t// 2 - noise\n\t\t\t\t// 3 - song\n\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tfirstRow = \"Mod\"\n\t\t\t\t\t\tusingSecondRow = false;\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\n\t\t\t\t\t\tusingMod = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\n\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\n\t\t\t\t\t\t\t\t\tif (instrumentVal-1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Channel name display\n\t\t\t\t\t\t\tlet insText: string;\n\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\tinsText = \" All\";\n\t\t\t\t\t\t\t} else if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\tinsText = \" Act\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinsText = \" I\" + instrumentVal;\n                            }\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + insText;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tconst absoluteChannelVal: number = instrument.modChannels[Config.modCount - j - 1];\n\t\t\t\t\t\tconst relativeChannelVal: number = absoluteChannelVal - this._doc.song.pitchChannelCount;\n\n\t\t\t\t\t\tif (this._doc.song.channels[absoluteChannelVal].name == \"\") {\n\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\n\n\t\t\t\t\t\t\t\tif ((relativeChannelVal + 1) >= 10 || instrumentVal >= 10) {\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + (relativeChannelVal + 1);\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + (relativeChannelVal + 1);\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + (relativeChannelVal + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Channel name display\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\n\t\t\t\t\t\t\t\tlet insText: string;\n\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\tinsText = \" All\";\n\t\t\t\t\t\t\t\t} else if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\tinsText = \" Act\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinsText = \" I\" + instrumentVal;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + (relativeChannelVal + 1) + \" \" + this._doc.song.channels[absoluteChannelVal].name + insText;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + (relativeChannelVal + 1) + \" \" + this._doc.song.channels[absoluteChannelVal].name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tfirstRow = \"Song\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// When unused, show name of mod on second row\n\t\t\t\tif (usingSecondRow) {\n\t\t\t\t\tsecondRow = Config.modulators[modulator].pianoName;\n\t\t\t\t\tif (modulator == Config.modulators.dictionary[\"none\"].index) {\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\n\t\t\t\t\t\tusingMod = false;\n\t\t\t\t\t}\n\t\t\t\t\telse if (modulator == Config.modulators.dictionary[\"eq filter\"].index || modulator == Config.modulators.dictionary[\"note filter\"].index) {\n\t\t\t\t\t\tvar text = \" Morph\";\n\t\t\t\t\t\tvar filterVal = instrument.modFilterTypes[Config.modCount - j - 1];\n\t\t\t\t\t\tif (filterVal > 0 && (filterVal % 2)) {\n\t\t\t\t\t\t\ttext = \" Dot\" + Math.ceil(filterVal / 2) + \"X\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (filterVal > 0) {\n\t\t\t\t\t\t\ttext = \" Dot\" + Math.ceil(filterVal / 2) + \"Y\";\n                        }\n\t\t\t\t\t\t\n\t\t\t\t\t\tsecondRow += text;\n                    }\n\t\t\t\t}\n\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\n\t\t\t\tfirstLabel.textContent = firstRow;\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\n\n\t\t\t\t// Check if text is too long, if name is set\n\t\t\t\tif (this._doc.song.channels[Math.max(0,instrument.modChannels[Config.modCount - j - 1])].name != \"\") {\n\t\t\t\t\tlet scaleFactor: string = \"1\";\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\n\t\t\t\t\tlet squeeze: number = 0;\n\t\t\t\t\tif (length > height - 8) {\n\t\t\t\t\t\tscaleFactor = \"0.65\";\n\t\t\t\t\t\tsqueeze = 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (length > height - 24) {\n\t\t\t\t\t\tscaleFactor = \"0.8\";\n\t\t\t\t\t\tsqueeze = 1;\n\t\t\t\t\t}\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._updatePreview();\n\t}\n\n\tpublic static getPitchName(pitchNameIndex: number, scaleIndex: number, baseVisibleOctave: number): string {\n\t\tlet text: string;\n\n\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\n\t\t\ttext = Config.keys[pitchNameIndex].name;\n\t\t} else {\n\t\t\tconst shiftDir: number = Config.blackKeyNameParents[scaleIndex % Config.pitchesPerOctave];\n\t\t\ttext = Config.keys[(pitchNameIndex + Config.pitchesPerOctave + shiftDir) % Config.pitchesPerOctave].name;\n\t\t\tif (shiftDir == 1) {\n\t\t\t\ttext += \"♭\";\n\t\t\t} else if (shiftDir == -1) {\n\t\t\t\ttext += \"♯\";\n\t\t\t}\n\t\t}\n\n\t\tif (scaleIndex % 12 == 0) {\n\t\t\ttext += Math.floor(scaleIndex / 12) + baseVisibleOctave;\n\t\t}\n\n\t\treturn text;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeGroup } from \"./Change\";\nimport { ChangeBarCount } from \"./changes\";\nimport { ColorConfig } from \"./ColorConfig\";\n\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class SongDurationPrompt implements Prompt {\n\t\tprivate readonly _barsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\t\tprivate readonly _positionSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\t\toption({value: \"end\"},       \"Apply change at end of song.\"),\n\t\t\toption({value: \"beginning\"}, \"Apply change at beginning of song.\"),\n\t);\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\t\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Song Length\"),\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({style: \"display: inline-block; text-align: right;\"},\n\t\t\t\t\"Bars per song:\",\n\t\t\t\tbr(),\n\t\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Multiples of 4 are recommended)\"),\n\n\t\t\t),\n\t\t\tthis._barsStepper,\n\t\t),\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._positionSelect),\n\t\t),\n\t\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\n\t\t\t\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\n\t\tif (lastPosition != null) {\n\t\t\tthis._positionSelect.value = lastPosition;\n\t\t}\n\t\t\t\n\t\tthis._barsStepper.select();\n\t\t\tsetTimeout(()=>this._barsStepper.focus());\n\t\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(SongDurationPrompt._validate(input));\n\t}\n\t\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(group, true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary } from \"../synth/SynthConfig\";\nimport { Song } from \"../synth/synth\";\n\n\t\nexport interface RecoveredVersion {\n\tuid: string;\n\ttime: number;\n\tname: string;\n\twork: number;\n}\n\nexport interface RecoveredSong {\n\tversions: RecoveredVersion[];\n}\n\nconst versionPrefix = \"songVersion: \";\nconst maximumSongCount = 8;\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\n\nfunction keyIsVersion(key: string): boolean {\n\treturn key.indexOf(versionPrefix) == 0;\n}\n\nfunction keyToVersion(key: string): RecoveredVersion {\n\treturn JSON.parse(key.substring(versionPrefix.length));\n}\n\nexport function versionToKey(version: RecoveredVersion): string {\n\treturn versionPrefix + JSON.stringify(version);\n}\n\nexport function generateUid(): string {\n\t// Not especially robust, but simple and effective!\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\n}\n\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\n\treturn b.versions[0].time - a.versions[0].time;\n}\n\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\n\treturn b.time - a.time;\n}\n\t\t\nexport class SongRecovery {\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\n\t\t\n\tprivate _song: Song = new Song();\n\t\t\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\n\t\tconst songs: RecoveredSong[] = [];\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tconst itemKey: string = localStorage.key(i)!;\n\t\t\tif (keyIsVersion(itemKey)) {\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\n\t\t\t\tif (song == undefined) {\n\t\t\t\t\t\tsong = {versions: []};\n\t\t\t\t\tsongsByUid[version.uid] = song;\n\t\t\t\t\tsongs.push(song);\n\t\t\t\t}\n\t\t\t\tsong.versions.push(version);\n\t\t\t}\n\t\t}\n\t\tfor (const song of songs) {\n\t\t\tsong.versions.sort(compareVersions);\n\t\t}\n\t\tsongs.sort(compareSongs);\n\t\treturn songs;\n\t}\n\t\t\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\n\t\tconst newName: string = name;\n\t\tconst newTime: number = Math.round(Date.now());\n\t\t\t\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\n\t\t\ttry {\n\t\t\t\t// Ensure that the song is not corrupted.\n\t\t\t\tthis._song.fromBase64String(songData);\n\t\t\t} catch (error) {\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\t\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\n\t\t\tlet currentSong: RecoveredSong | null = null;\n\t\t\tfor (const song of songs) {\n\t\t\t\tif (song.versions[0].uid == uid) {\n\t\t\t\t\tcurrentSong = song;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (currentSong == null) {\n\t\t\t\t\tcurrentSong = {versions: []};\n\t\t\t\tsongs.unshift(currentSong);\n\t\t\t}\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\n\t\t\t\t\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\n\t\t\tif (versions.length > 0) {\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\n\t\t\t}\n\t\t\t\t\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\n\t\t\tconst newKey: string = versionToKey(newVersion);\n\t\t\tversions.unshift(newVersion);\n\t\t\tlocalStorage.setItem(newKey, songData);\n\t\t\t\t\n\t\t\t// Consider deleting an old version to free up space.\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\n\t\t\t\tconst currentWork: number = versions[i].work;\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\n\t\t\t\tif (currentWork - olderWork < minSpan) {\n\t\t\t\t\tlet indexToDiscard: number = i;\n\t\t\t\t\tif (i < versions.length - 1) {\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\n\t\t\t\t\t\t// thus more memorable.\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tminSpan *= spanMult;\n\t\t\t}\n\t\t\t\t\n\t\t\t// If there are too many songs, discard the least important ones.\n\t\t\t// Songs that are older, or have less work, are less important.\n\t\t\twhile (songs.length > maximumSongCount) {\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\n\t\t\t\t\tif (leastImportance > weight) {\n\t\t\t\t\t\tleastImportance = weight;\n\t\t\t\t\t\tleastImportantSong = song;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\n\t\t\t\t}\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\n\t\t\t}\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { SongDocument } from \"./SongDocument\";\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\nimport { Prompt } from \"./Prompt\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\n\tconst {button, div, h2, p, select, option, iframe} = HTML;\n\nexport class SongRecoveryPrompt implements Prompt {\n\tprivate readonly _songContainer: HTMLDivElement = div();\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\t\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt\", style: \"width: 300px;\"},\n\t\th2(\"Song Recovery\"),\n\t\t\tdiv({style: \"max-height: 385px; overflow-y: auto;\"},\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about! SONGS THAT USE SAMPLES WILL TAKE A WHILE TO LOAD, so be patient!\"),\n\t\t\tthis._songContainer,\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\t\t\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\n\t\t\t\n\t\tif (songs.length == 0) {\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\n\t\t}\n\t\t\t\n\t\tfor (const song of songs) {\n\t\t\t\tconst versionMenu: HTMLSelectElement = select({style: \"width: 100%;\"});\n\t\t\t\t\n\t\t\tfor (const version of song.versions) {\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\n\t\t\t}\n\t\t\t\t\n\t\t\t\tconst player: HTMLIFrameElement = iframe({style: \"width: 100%; height: 60px; border: none; display: block;\"});\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\n\t\t\t\tconst container: HTMLDivElement = div({style: \"margin: 4px 0;\"}, div({class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\"}, versionMenu), player);\n\t\t\tthis._songContainer.appendChild(container);\n\t\t\t\t\n\t\t\tversionMenu.addEventListener(\"change\", () => {\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\n\t\t\t});\n\t\t}\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {EditorConfig} from \"./EditorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {KeyboardLayout} from \"./KeyboardLayout\";\nimport {Piano} from \"./Piano\";\n\nconst {button, label, div, p, a, h2, input, select, option} = HTML;\n\nexport class RecordingSetupPrompt implements Prompt {\n\tprivate readonly _keyboardMode: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"useCapsLockForNotes\"}, \"simple shortcuts, use caps lock to play notes\"),\n\t\toption({value: \"pressControlForShortcuts\"}, \"simple notes, press \" + EditorConfig.ctrlName + \" for shortcuts\"),\n\t);\n\tprivate readonly _keyboardLayout: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"wickiHayden\"}, \"Wicki-Hayden\"),\n\t\toption({value: \"songScale\"}, \"selected song scale\"),\n\t\toption({value: \"pianoAtC\"}, \"piano starting at C :)\"),\n\t\toption({value: \"pianoAtA\"}, \"piano starting at A :(\"),\n\t\toption({value: \"pianoTransposingC\"}, \"piano transposing C :) to song key\"),\n\t\toption({value: \"pianoTransposingA\"}, \"piano transposing A :( to song key\"),\n\t);\n\tprivate readonly _keyboardLayoutPreview: HTMLDivElement = div({style: \"display: grid; row-gap: 4px; margin: 4px auto; font-size: 10px;\"});\n\tprivate readonly _enableMidi: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _showRecordButton: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _snapRecordedNotesToRhythm: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _ignorePerformedNotesNotInScale: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _metronomeCountIn: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _metronomeWhileRecording: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\t\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection recordingSetupPrompt\", style: \"width: 333px; text-align: right; max-height: 90%;\"},\n\t\th2(\"Note Recording Setup\"),\n\t\tdiv({style: \"display: grid; overflow-y: auto; overflow-x: hidden; flex-shrink: 1;\"},\n\t\t\tp(\"BeepBox can record notes as you perform them. You can start recording by pressing Ctrl+Space (or \" + EditorConfig.ctrlSymbol + \"P).\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Add ● record button next to ▶ play button:\",\n\t\t\t\tthis._showRecordButton,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Snap recorded notes to the song's rhythm:\",\n\t\t\t\tthis._snapRecordedNotesToRhythm,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Ignore notes not in the song's scale:\",\n\t\t\t\tthis._ignorePerformedNotesNotInScale,\n\t\t\t),\n\t\t\tp(\"While recording, you can perform notes on your keyboard!\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Keyboard layout:\",\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 65%; margin-left: 1em;\"}, this._keyboardLayout),\n\t\t\t),\n\t\t\tthis._keyboardLayoutPreview,\n\t\t\tp(\"When not recording, you can use the computer keyboard either for shortcuts (like C and V for copy and paste) or for performing notes, depending on this mode:\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._keyboardMode),\n\t\t\t),\n\t\t\tp(\"Performing music takes practice! Try slowing the tempo and using this metronome to help you keep a rhythm.\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Hear metronome while recording:\",\n\t\t\t\tthis._metronomeWhileRecording,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Count-in 1 bar of metronome before recording:\",\n\t\t\t\tthis._metronomeCountIn,\n\t\t\t),\n\t\t\tp(\"If you have a \", a({href: \"https://caniuse.com/midi\", target: \"_blank\"}, \"compatible browser\"), \" on a device connected to a MIDI keyboard, you can use it to perform notes in BeepBox! (Or you could buy \", a({href: \"https://imitone.com/\", target: \"_blank\"}, \"Imitone\"), \" or \", a({href: \"https://vochlea.com/\", target: \"_blank\"}, \"Dubler\"), \" to hum notes into a microphone while wearing headphones!)\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\t\"Enable MIDI performance:\",\n\t\t\t\tthis._enableMidi,\n\t\t\t),\n\t\t\tp(\"Tip: Recorded notes often overlap such that one note ends after the next note already started. In BeepBox, these notes get split into two notes which may sound different when re-played than they did when you were recording. To fix the sound, you can either manually clean up the notes in the pattern editor, or you could try enabling the \\\"transition type\\\" effect on the instrument and setting it to \\\"continue\\\".\"),\n\t\t\tdiv({style: `width: 100%; height: 80px; background: linear-gradient(rgba(0,0,0,0), ${ColorConfig.editorBackground}); position: sticky; bottom: 0; pointer-events: none;`}),\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._keyboardMode.value = this._doc.prefs.pressControlForShortcuts ? \"pressControlForShortcuts\" : \"useCapsLockForNotes\";\n\t\tthis._keyboardLayout.value = this._doc.prefs.keyboardLayout;\n\t\tthis._enableMidi.checked = this._doc.prefs.enableMidi;\n\t\tthis._showRecordButton.checked = this._doc.prefs.showRecordButton;\n\t\tthis._snapRecordedNotesToRhythm.checked = this._doc.prefs.snapRecordedNotesToRhythm;\n\t\tthis._ignorePerformedNotesNotInScale.checked = this._doc.prefs.ignorePerformedNotesNotInScale;\n\t\tthis._metronomeCountIn.checked = this._doc.prefs.metronomeCountIn;\n\t\tthis._metronomeWhileRecording.checked = this._doc.prefs.metronomeWhileRecording;\n\t\t\n\t\tsetTimeout(()=>this._showRecordButton.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\t\n\t\tthis._renderKeyboardLayoutPreview();\n\t\tthis._keyboardLayout.addEventListener(\"change\", this._renderKeyboardLayoutPreview);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._confirm();\n\t\t}\n\t}\n\t\n\tprivate _confirm = (): void => { \n\t\tthis._doc.prefs.pressControlForShortcuts = (this._keyboardMode.value == \"pressControlForShortcuts\");\n\t\tthis._doc.prefs.keyboardLayout = this._keyboardLayout.value;\n\t\tthis._doc.prefs.enableMidi = this._enableMidi.checked;\n\t\tthis._doc.prefs.showRecordButton = this._showRecordButton.checked;\n\t\tthis._doc.prefs.snapRecordedNotesToRhythm = this._snapRecordedNotesToRhythm.checked;\n\t\tthis._doc.prefs.ignorePerformedNotesNotInScale = this._ignorePerformedNotesNotInScale.checked;\n\t\tthis._doc.prefs.metronomeCountIn = this._metronomeCountIn.checked;\n\t\tthis._doc.prefs.metronomeWhileRecording = this._metronomeWhileRecording.checked;\n\t\tthis._doc.prefs.save();\n\t\tthis._close();\n\t}\n\t\n\tprivate _renderKeyboardLayoutPreview = (): void => {\n\t\twhile (this._keyboardLayoutPreview.firstChild) {\n\t\t\tthis._keyboardLayoutPreview.removeChild(this._keyboardLayoutPreview.firstChild);\n\t\t}\n\t\tconst rowLengths: number[] = [12, 12, 11, 10];\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\n\t\tfor (let rowIndex: number = 0; rowIndex < 4; rowIndex++) {\n\t\t\tconst row: HTMLDivElement = div({style: \"display: flex;\"});\n\t\t\tthis._keyboardLayoutPreview.appendChild(row);\n\t\t\tconst spacer: HTMLDivElement = div({style: \"width: \" + (rowIndex * 12) + \"px; height: 20px; flex-shrink: 0;\"});\n\t\t\trow.appendChild(spacer);\n\t\t\tfor (let colIndex: number = 0; colIndex < rowLengths[rowIndex]; colIndex++) {\n\t\t\t\tconst key: HTMLDivElement = div({style: `width: 20px; height: 20px; margin: 0 2px; box-sizing: border-box; flex-shrink: 0; display: flex; justify-content: center; align-items: center;`});\n\t\t\t\trow.appendChild(key);\n\t\t\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, colIndex, 3 - rowIndex, this._keyboardLayout.value);\n\t\t\t\tif (pitch != null) {\n\t\t\t\t\tconst scalePitch: number = pitch % 12;\n\t\t\t\t\tif (scale[scalePitch]) {\n\t\t\t\t\t\tif (scalePitch == 0) {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.tonic;\n\t\t\t\t\t\t} else if (scalePitch == 7 && this._doc.prefs.showFifth) {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.fifthNote;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.pitchBackground;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkey.style.border = \"2px solid \" + ColorConfig.pitchBackground;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst pitchNameIndex: number = (scalePitch + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\n\t\t\t\t\tkey.textContent = Piano.getPitchName(pitchNameIndex, scalePitch, Math.floor(pitch / 12));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeSpectrum } from \"./changes\";\nimport { prettyNumber } from \"./EditorConfig\";\n\nexport class SpectrumEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\t\tprivate readonly _fill: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\n\t\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\t\tprivate readonly _arrow: SVGPathElement = SVG.path({fill: \"currentColor\", \"pointer-events\": \"none\"});\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\n\t\tthis._fill,\n\t\tthis._octaves,\n\t\tthis._fifths,\n\t\tthis._curve,\n\t\tthis._arrow,\n\t);\n\t\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"spectrum\", style: \"height: 100%;\"}, this._svg);\n\t\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _freqPrev: number = 0;\n\tprivate _ampPrev: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _change: ChangeSpectrum | null = null;\n\tprivate _renderedPath: String = \"\";\n\tprivate _renderedFifths: boolean = true;\n\t\t\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\n\t\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\t\n\tprivate _xToFreq(x: number): number {\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\n\t}\n\t\t\n\tprivate _yToAmp(y: number): number {\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t    \n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t    \n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\n\t\t\t\t\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\n\t\t\t\t\n\t\t\tif (freq != this._freqPrev) {\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\n\t\t\t\t\n\t\t\tthis._freqPrev = freq;\n\t\t\tthis._ampPrev = amp;\n\t\t\t\t\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t}\n\t\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._mouseDown) {\n\t\t\tthis._doc.record(this._change!);\n\t\t\tthis._change = null;\n\t\t}\n\t\tthis._mouseDown = false;\n\t}\n\t\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\n\t\tconst controlPointToHeight = (point: number): number => {\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\n\t\t}\n\t\t\t\n\t\tlet lastValue: number = 0;\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\n\t\t\tif (lastValue != 0 || nextValue != 0) {\n\t\t\t\tpath += \"L \";\n\t\t\t} else {\n\t\t\t\tpath += \"M \";\n\t\t\t}\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\tlastValue = nextValue;\n\t\t}\n\t\t\t\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\n\t\tif (lastValue > 0) {\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\n\t\t}\n\t\t\t\n\t\tif (this._renderedPath != path) {\n\t\t\tthis._renderedPath = path;\n\t\t\tthis._curve.setAttribute(\"d\", path);\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\n\t\t\t\t\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\n\t\t}\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\n\t\t}\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\n\nimport { PatternEditor } from \"./PatternEditor\";\n// import { ColorConfig } from \"./ColorConfig\";\n\n//namespace beepbox {\nconst { button, div, h2, input, p} = HTML;\nlet doReload = false;\nexport class CustomPrompt implements Prompt {\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".png,.jpg,.jpeg\", text: \"choose editor background image\"});\n\tprivate readonly _fileInput2: HTMLInputElement = input({ type: \"file\", accept: \".png,.jpg,.jpeg\", text: \"choose website background image\" });\n\tprivate readonly _colorInput: HTMLInputElement = input({ type: \"text\", value: localStorage.getItem(\"customColors\") || `:root {\n\t\t--page-margin: #040410;\n\t\t--editor-background: #040410;\n\t\t--hover-preview: white;\n\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t--primary-text: white;\n\t\t--secondary-text: #84859a;\n\t\t--inverted-text: black;\n\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t--box-selection-fill: #044b94;\n\t\t--loop-accent: #74f;\n\t\t--link-accent: #98f;\n\t\t--ui-widget-background: #393e4f;\n\t\t--ui-widget-focus: #6d6886;\n\t\t--pitch-background: #393e4f99;\n\t\t--tonic: #725491;\n\t\t--fifth-note: #54547a;\n\t\t--white-piano-key: #eee;\n\t\t--black-piano-key: #666;\n\t\t--use-color-formula: true;\n\t\t--track-editor-bg-pitch: #393e4f;\n\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t--track-editor-bg-noise: #3d3535;\n\t\t--track-editor-bg-noise-dim: #161313;\n\t\t--track-editor-bg-mod: #283560;\n\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t--multiplicative-mod-slider: #606c9f;\n\t\t--overwriting-mod-slider: #6850b5;\n\t\t--indicator-primary: #9c64f7;\n\t\t--indicator-secondary: #393e4f;\n\t\t--select2-opt-group: #5d576f;\n\t\t--input-box-outline: #222;\n\t\t--mute-button-normal: #dda85d;\n\t\t--mute-button-mod: #886eae;\n\t\t--mod-label-primary: #282840;\n\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t--mod-label-primary-text: white;\n\t\t--pitch-secondary-channel-hue: 0;\n\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t--pitch-secondary-channel-lum: 40;\n\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t--pitch-primary-channel-hue: 0;\n\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t--pitch-primary-channel-sat: 100;\n\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t--pitch-primary-channel-lum: 67.5;\n\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t--pitch-secondary-note-hue: 0;\n\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t--pitch-secondary-note-sat: 93.9;\n\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t--pitch-secondary-note-lum: 25;\n\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t--pitch-primary-note-hue: 0;\n\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t--pitch-primary-note-sat: 100;\n\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t--pitch-primary-note-lum: 85.6;\n\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t--noise-secondary-channel-hue: 0;\n\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t--noise-secondary-channel-sat: 25;\n\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t--noise-secondary-channel-lum: 42;\n\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t--noise-primary-channel-hue: 0;\n\t\t--noise-primary-channel-hue-scale: 2;\n\t\t--noise-primary-channel-sat: 33;\n\t\t--noise-primary-channel-sat-scale: 0;\n\t\t--noise-primary-channel-lum: 63.5;\n\t\t--noise-primary-channel-lum-scale: 0;\n\t\t--noise-secondary-note-hue: 0;\n\t\t--noise-secondary-note-hue-scale: 2;\n\t\t--noise-secondary-note-sat: 33.5;\n\t\t--noise-secondary-note-sat-scale: 0;\n\t\t--noise-secondary-note-lum: 55;\n\t\t--noise-secondary-note-lum-scale: 0;\n\t\t--noise-primary-note-hue: 0;\n\t\t--noise-primary-note-hue-scale: 2;\n\t\t--noise-primary-note-sat: 46.5;\n\t\t--noise-primary-note-sat-scale: 0;\n\t\t--noise-primary-note-lum: 74;\n\t\t--noise-primary-note-lum-scale: 0;\n\t\t--mod-secondary-channel-hue: 192;\n\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t--mod-secondary-channel-sat: 88;\n\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t--mod-secondary-channel-lum: 50;\n\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t--mod-primary-channel-hue: 192;\n\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t--mod-primary-channel-sat: 96;\n\t\t--mod-primary-channel-sat-scale: 0;\n\t\t--mod-primary-channel-lum: 80;\n\t\t--mod-primary-channel-lum-scale: 0;\n\t\t--mod-secondary-note-hue: 192;\n\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t--mod-secondary-note-sat: 92;\n\t\t--mod-secondary-note-sat-scale: 0;\n\t\t--mod-secondary-note-lum: 45;\n\t\t--mod-secondary-note-lum-scale: 0;\n\t\t--mod-primary-note-hue: 192;\n\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t--mod-primary-note-sat: 96;\n\t\t--mod-primary-note-sat-scale: 0;\n\t\t--mod-primary-note-lum: 85;\n\t\t--mod-primary-note-lum-scale: 0;\n\t}`});\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\" }, \"Reset to defaults\");\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\n\t\th2(\"Import\"),\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\n\t\t\t\"You can upload images to create a custom theme.\",\n\t\t),\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\n\t\t\t\"The first image will become the editor background, and the second image will be tiled across the webpage.\",\n\t\t),\n\t\tdiv(),\n\t\tp({ style: \"text-align: left; margin: 0;\" },\n\t\t\t\"Editor Background Image:\",\n\t\t\tthis._fileInput\n\t\t),\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\"},\n\t\t\t\"Website Background Image:\",\n\t\t\tthis._fileInput2\n\t\t),\n\t\tdiv(),\n\t\tp({ style: \"text-align: left; margin: 0;\"},\n\t\t\t\"If you want to mess with custom color schemes, mess with the hexcodes yourself, I dare you:\",\n\t\t),\n\t\tthis._colorInput,\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._resetButton\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t// private readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\n\n\tconstructor(private _doc: SongDocument, private _pattern: PatternEditor, private _pattern2: HTMLDivElement, private _pattern3: HTMLElement) {\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\n\t\tthis._fileInput2.addEventListener(\"change\", this._whenFileSelected2);\n\t\tthis._colorInput.addEventListener(\"change\", this._whenColorsChanged);\n\t\tthis._okayButton.addEventListener(\"click\", this._close);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._resetButton.addEventListener(\"click\", this._reset);\n\t}\n\n\tprivate _close = (): void => {\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.undo();\n\t\tif(doReload) {\n\t\t\t// The prompt seems to get stuck if reloading is done too quickly.\n\t\t\tsetTimeout(() => { window.location.reload(); }, 50);\n\t\t}\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._close);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\t// this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis._resetButton.removeEventListener(\"click\", this._reset);\n\t}\n\tprivate _reset = (): void => {\n\t\twindow.localStorage.removeItem(\"colorTheme\");\n\t\twindow.localStorage.removeItem(\"customTheme\");\n\t\twindow.localStorage.removeItem(\"customTheme2\");\n\t\twindow.localStorage.removeItem(\"customColors\");\n\t\tthis._pattern._svg.style.backgroundImage = \"\";\n\t\tdocument.body.style.backgroundImage = \"\";\n\t\tthis._pattern2.style.backgroundImage = \"\";\n\t\tthis._pattern3.style.backgroundImage = \"\";\n\t\tconst secondImage: HTMLElement | null = document.getElementById(\"secondImage\");\n\t\tif (secondImage != null) {\n\t\t\tsecondImage.style.backgroundImage = \"\";\n\t\t}\n\t\tdoReload = true;\n\t\tthis._close();\n\t}\n\tprivate _whenColorsChanged = (): void => {\n\t\tlocalStorage.setItem(\"customColors\", this._colorInput.value);\n\t\twindow.localStorage.setItem(\"colorTheme\", \"custom\");\n\t\tthis._doc.colorTheme = \"custom\";\n\t\tdoReload = true;\n\t}\n\tprivate _whenFileSelected = (): void => {\n\t\tconst file: File = this._fileInput.files![0];\n\t\tif (!file) return;\n\t\tconst reader: FileReader = new FileReader();\n\t\treader.addEventListener(\"load\", (event: Event): void => {\n\t\t\t//this._doc.prompt = null;\n\t\t\t//this._doc.goBackToStart();\n\t\t\tlet base64 = <string>reader.result;\n\t\t\twindow.localStorage.setItem(\"customTheme\", base64);\n\t\t\tconst value = `url(\"${window.localStorage.getItem('customTheme')}\")`\n\t\t\tconsole.log('setting', value)\n\t\t\tthis._pattern._svg.style.backgroundImage = value;\n\t\t\tconsole.log('done')\n\t\t});\n\t\treader.readAsDataURL(file);\n\t}\n\tprivate _whenFileSelected2 = (): void => {\n\t\tconst file: File = this._fileInput2.files![0];\n\t\tif (!file) return;\n\t\tconst reader: FileReader = new FileReader();\n\t\treader.addEventListener(\"load\", (event: Event): void => {\n\t\t\t//this._doc.prompt = null;\n\t\t\t//this._doc.goBackToStart();\n\t\t\tlet base64 = <string>reader.result;\n\t\t\twindow.localStorage.setItem(\"customTheme2\", base64);\n\t\t\tconst value = `url(\"${window.localStorage.getItem('customTheme2')}\")`\n\t\t\tdocument.body.style.backgroundImage = `url(${base64})`;\n\t\t\tthis._pattern2.style.backgroundImage = value;\n\t\t\tthis._pattern3.style.backgroundImage = value;\n\t\t\tconst secondImage: HTMLElement | null = document.getElementById(\"secondImage\");\n\t\t\tif (secondImage != null) {\n\t\t\t\tsecondImage.style.backgroundImage = `url(${base64})`;\n\t\t\t}\n\t\t\t// document.body.style.backgroundImage = `url(${newURL})`;\n\t\t\t// window.localStorage.setItem(\"customTheme2\", <string>reader.result);\n\t\t\t// this._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\n\t\t});\n\t\treader.readAsDataURL(file);\n\t}\n\t// private _whenKeyPressed = (event: KeyboardEvent): void => {\n\t// \tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t// \t\tthis._saveChanges();\n\t// \t}\n\t// }\n\n\t// private _previewTheme = (): void => {\n\t// \tColorConfig.setTheme(this._themeSelect.value);\n\t// }\n}\n//}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ColorConfig } from \"./ColorConfig\";\n\n//namespace beepbox {\nconst { button, div, h2, select, option } = HTML;\n\nexport class ThemePrompt implements Prompt {\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\n\t\t\toption({ value: \"AbyssBox Classic\"}, \"AbyssBox Classic\"),\n\t\t\toption({ value: \"AbyssBox Competative\"}, \"AbyssBox Competative\"),\n\t\t\toption({ value: \"AbyssBox Light\"}, \"AbyssBox Light\"),\n\t\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\n\t\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\n\t\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\n\t\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\n\t\t\toption({ value: \"jummbox light\" }, \"Gold Light\"),\n\t\t\toption({ value: \"forest\" }, \"Forest\"),\n\t\t\toption({ value: \"canyon\" }, \"Canyon\"),\n\t\t\toption({ value: \"midnight\" }, \"Midnight\"),\n\t\t\toption({ value: \"beachcombing\" }, \"Beachcombing\"),\n\t\t\toption({ value: \"violet verdant\" }, \"Violet Verdant\"),\n\t\t\toption({ value: \"sunset\" }, \"Sunset\"),\n\t\t\toption({ value: \"autumn\" }, \"Autumn\"),\n\t\t\toption({ value: \"fruit\" }, \"Shadowfruit\"),\n\t\t\toption({ value: \"toxic\" }, \"Toxic\"),\n\t\t\toption({ value: \"roe\" }, \"Roe\"),\n\t\t\toption({ value: \"moonlight\" }, \"Moonlight\"),\n\t\t\toption({ value: \"portal\" }, \"Portal\"),\n\t\t\toption({ value: \"fusion\" }, \"Fusion\"),\n\t\t\toption({ value: \"inverse\" }, \"Inverse\"),\n\t\t\toption({ value: \"nebula\" }, \"Nebula\"),\n\t\t\toption({ value: \"roe light\" }, \"Roe Light\"),\n\t\t\toption({ value: \"amoled dark\" }, \"High Contrast Dark\"),\n\t\t\toption({ value: \"energized\" }, \"Energized\"),\n\t\t\toption({ value: \"neapolitan\" }, \"Neapolitan\"),\n\t\t\toption({ value: \"mono\" }, \"Mono\"),\n\t\t\toption({ value: \"slushie\" }, \"Slushie\"),\n\t\t\toption({ value: \"azur lane\" }, \"Azur Lane\"),\n\t\t\toption({ value: \"modbox classic\" }, \"Modbox\"),\n\t\t\toption({ value: \"sandbox classic\" }, \"Sandbox\"),\n\t\t\toption({ value: \"harrybox\" }, \"Haileybox\"),\n\t\t\toption({ value: \"brucebox\" }, \"Brucebox\"),\n\t\t\toption({ value: \"shitbox 3.0\" }, \"Shitbox 1.0/3.0\"),\n\t\t\toption({ value: \"shitbox 2.0\" }, \"Shitbox 2.0\"),\n\t\t\toption({ value: \"nerdbox\" }, \"NerdBox\"),\n\t\t\toption({ value: \"zefbox\" }, \"Zefbox\"),\n\t\t\toption({ value: \"cardboardbox classic\" }, \"Cardboardbox\"),\n\t\t\toption({ value: \"blubox classic\" }, \"Blubox\"),\n\t\t\toption({ value: \"dogebox classic\" }, \"Dogebox\"),\n\t\t\toption({ value: \"wackybox\" }, \"Wackybox\"),\n\t\t\t// for some reason the todbox theme isn't looping properly. also the \"todbox\" theme is just old beepbox\n\t\t\t// option({ value: \"todbox classic\" }, \"Todbox\"),\n\t\t\toption({ value: \"todbox dark mode\" }, \"Todbox Dark Mode\"),\n\t\t\toption({ value: \"mainbox 1.0\" }, \"Mainbox\"),\n\t\t\toption({ value: \"microbox\" }, \"MicroBox\"),\n\t\t\toption({ value: \"paandorasbox\" }, \"PaandorasBox\"),\n\t\t\toption({ value: \"foxbox\" }, \"FoxBox\"),\n\t\t\toption({ value: \"midbox\" }, \"Midbox\"),\n\t\t\toption({ value: \"dogebox2\" }, \"Dogebox2\"),\n\t\t\toption({ value: \"custom\" }, \"Custom\")\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\n\t\th2(\"Set Theme\"),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\n\n\tconstructor(private _doc: SongDocument) {\n\t\tif (this.lastTheme != null) {\n\t\t\tthis._themeSelect.value = this.lastTheme;\n\t\t}\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\n\t}\n\n\tprivate _close = (): void => {\n\t\tif (this.lastTheme != null) {\n\t\t\tColorConfig.setTheme(this.lastTheme);\n\t\t} else {\n\t\t\tColorConfig.setTheme(\"dark classic\");\n\t\t}\n\t\tthis._doc.undo();\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.prefs.colorTheme = this._themeSelect.value;\n\t\tthis._doc.undo();\n\t}\n\n\tprivate _previewTheme = (): void => {\n\t\tColorConfig.setTheme(this._themeSelect.value);\n\t\tthis._doc.notifier.changed();\n\t}\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Config } from \"../synth/SynthConfig\";\n\nconst { button, div, p, h2, h3 } = HTML;\n\nexport class TipPrompt implements Prompt {\n\t\tprivate readonly _closeButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\t\n\tpublic readonly container: HTMLDivElement;\n\t\t\n\tconstructor(private _doc: SongDocument, type: string) {\n\t\tlet message: HTMLDivElement;\n\t\t\t\n\t\tswitch (type) {\n\t\t\tcase \"scale\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Scale\"),\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available pitches of a scale to get a sense for how it sounds.\"),\n\t\t\t\t\tp(\"The most common scales are major and minor. Assuming your song uses all pitches in the scale and especially \\\"tonic\\\" pitches (the purple rows in the pattern editor) then major scales tend to sound more playful or optimistic, whereas minor scales sound more serious or sad.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"key\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Song Key\"),\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down, keeping the \\\"tonic\\\" pitches (the brown rows in the pattern editor) aligned with the selected \\\"key\\\" pitch.\"),\n\t\t\t\t\tp(\"If you've already placed some notes but they don't emphasize \\\"tonic\\\" pitches then the selected key isn't very meaningful. You can select the \\\"Detect Key\\\" option in the key menu to automatically align the most emphasized notes with \\\"tonic\\\" pitches.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"key_octave\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Octave\"),\n\t\t\t\t\tp(\"This setting can shift the \\\"key\\\" by an octave, allowing you to use a B- or C+ key.\"),\n\t\t\t\t\tp(`This goes from ${Config.octaveMin} to ${Config.octaveMax}.`),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"tempo\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Song Tempo\"),\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute. A \\\"beat\\\" is the duration of the little gray rectangles in the pattern editor. (In conventional music notation, a \\\"quarter note\\\" is usually equivalent to \\\"beat\\\".)\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"reverb\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Reverb\"),\n\t\t\t\t\tp(\"Reverb is like a continuous echo effect. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery, but too much reverb can kinda \\\"smear\\\" sounds so that it's harder to distinguish notes or instruments, especially for lower \\\"bass\\\" notes.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"rhythm\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Rhythm\"),\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\n\t\t\t\t\tp(\"If you've already placed some notes but they don't align with the selected rhythm, you can select the \\\"Snap Notes To Rhythm\\\" option in the rhythm menu to force the notes in the currently selected pattern(s) to align with the selected rhythm.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentIndex\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Number\"),\n\t\t\t\t\tp(\"In the \\\"Channel Settings\\\" option from UltraBox's \\\"File\\\" menu, there are a few ways to enable multiple instruments per channel.\"),\n\t\t\t\t\tp(\"First, you could enable multiple simultaneous instruments per channel. All of the channel's instruments will play all of the notes in the channel at the same time, and you can click an instrument number to view and edit its settings.\"),\n\t\t\t\t\tp(\"Second, you could enable different instruments per pattern. Only one of the instruments will play at any given time, but you can click the instrument number to change which instrument is used for the currently selected pattern(s).\"),\n\t\t\t\t\tp(\"Finally, you can enable them both, in which case you can click an instrument number once to view it, and again to toggle whether the instrument is used for the currently selected pattern(s).\"),\n\t\t\t\t\tp(\"Either way, you can click the + button to add more instruments to a channel, and you can press shift and a number key on your keyboard to select an instrument as if you had clicked the corresponding button here.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Volume\"),\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pan\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Panning\"),\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\n\t\t\t\t\tp(\"As a suggestion, composers often put lead melodies, drums, and basses in the center, and spread other instruments toward either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"panDelay\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Stereo Delay\"),\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"arpeggioSpeed\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"twoNoteArpeggio\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"detune\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Detune\"),\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument. It is in units of 'cents', 100 of which equal a pitch shift of one semitone.\"),\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentType\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Type\"),\n\t\t\t\t\tp(\"UltraBox comes with many instrument presets, try them out! You can also create your own custom instruments!\"),\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"eqFilter\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"EQ Filter\"),\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\n\t\t\t\t\tp(\"You can also enable a \\\"Note Filter\\\" as an effect. EQ and note filters are mostly the same, but have different purposes. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"noteFilter\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Note Filter\"),\n\t\t\t\t\tp(\"Note filters are mostly the same as EQ filters, but have a different purpose. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"fadeInOut\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Fade In/Out\"),\n\t\t\t\t\tp(\"This setting controls how long it takes for notes to reach full volume at the beginning or decay to silence at the end.\"),\n\t\t\t\t\tp(\"An instant fade-in sounds like instruments that are played by hitting or plucking, whereas slower fade-ins sound like instruments that are played by blowing air.\"),\n\t\t\t\t\tp(\"You can also make the fade-out start before the note ends to leave a gap before the next note starts, or after the note ends to allow the sound of the end of the note to overlap with the start of the next note.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"transition\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Transition\"),\n\t\t\t\t\tp(\"Usually, when one note ends at the same time another begins, the old note will fade out and the new note will fade in based on the fade in/out settings, but this setting can override that, connecting the end of one note to the beginning of the next.\"),\n\t\t\t\t\tp(\"The \\\"interrupt\\\" transition makes the wave suddenly change from the old note's frequency to the new note's frequency without any fading, but still restarts envelopes at the beginning of the new note. The \\\"continue\\\" transition is similar but it doesn't even restart envelopes, and can be used to make each of the notes in a chord start or stop at different times!\"),\n\t\t\t\t\tp(\"The \\\"slide\\\" transition makes the pitch shift quickly but not instantaneously from the old note's frequency to the new note's frequency, and softly restarts envelopes. The \\\"slide in pattern\\\" transition is the same except it doesn't connect the last note in a pattern to the first note in the next pattern.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chipWave\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chip Wave\"),\n\t\t\t\t\tp(\"UltraBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves. This is the basic source of the sound of the instrument, which is modified by the other instrument settings.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chipNoise\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Noise\"),\n\t\t\t\t\tp(\"UltraBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pulseWidth\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Pulse Wave Width\"),\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"unison\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Unison\"),\n\t\t\t\t\tp(\"This instrument can play two identical waves at different frequencies. When two waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\n\t\t\t\t\tp(\"The distance between two frequencies is called an \\\"interval\\\", and this setting controls how large it is. If the interval is too wide, then the waves may sound out-of-tune and \\\"dissonant\\\". However, if the interval is even larger, then the two frequencies can even be distinct pitches.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chords\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chords\"),\n\t\t\t\t\tp(\"When multiple different notes occur at the same time, this is called a chord. Chords can be created in UltraBox's pattern editor by adding notes above or below another note.\"),\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"simultaneous\\\" which starts playing all of the pitches in a chord at the same instant. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\n\t\t\t\t\tp(\"Some UltraBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"vibrato\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Vibrato\"),\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"vibratoDepth\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\n\t\t\t\t\t);\n\t\t\t\t} break;\n\t\t\tcase \"vibratoDelay\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\n\t\t\t\t\t);\n\t\t\t\t} break;\n\t\t\tcase \"vibratoSpeed\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"vibratoType\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Vibrato Type\"),\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"algorithm\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"FM Algorithm\"),\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency and volume.'),\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"feedbackType\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Feedback Type\"),\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"feedbackVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Feedback Distortion\"),\n\t\t\t\t\tp(\"This setting controls the amount of feedback distortion based on the feedback type setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"operatorFrequency\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Operator Frequency\"),\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave, relative to the fundamental frequency of the note. The multiplier 1× is the same as the fundamental frequency, whereas 2x would be an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"operatorVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Operator Volume\"),\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"spectrum\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Spectrum\"),\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds.\"),\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft fade in/out, it's also possible to make howling wind sounds or even musical wind instruments.\"),\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"harmonics\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Harmonics\"),\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"effects\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Effects\"),\n\t\t\t\t\tp(\"UltraBox has many different kinds of special effects you can add to instruments. You can turn on multiple effects at once, and they can be configured individually. Try them all out!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"drumsetEnvelope\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Drumset Envelope\"),\n\t\t\t\t\tp(\"This drumset comes with a low-pass filter, and this setting can dynamically change the low-pass filter frequency over time. Each row in the pattern editor can have a different envelope shape.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"drumsetSpectrum\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Drumset Spectrum\"),\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chorus\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chorus\"),\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices. Drag the slider to control how much chorus is added.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"echoSustain\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Echo Volume\"),\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay. Each echo is a little bit quieter than the last, and this setting controls how much quieter.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"echoDelay\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Echo Delay\"),\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay, and this setting controls how long the delay is.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pitchShift\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Pitch Shift\"),\n\t\t\t\t\tp(\"This setting makes instruments play higher or lower pitches than the ones displayed in the pattern editor. Be careful that you don't confuse yourself!\"),\n\t\t\t\t\tp(\"You can combine this with envelopes to bend pitch over time, or play multiple simultaneous instruments with different pitch shifts for interesting layered sounds.\"),\n\t\t\t\t\tp(\"The intervals created by this setting are in \\\"just intonation\\\" which means they stay in phase with the original pitch instead of shifting in and out of phase over time. If you want the shifting, add the detune effect!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"detune\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Detune\"),\n\t\t\t\t\tp(\"This setting slightly adjusts the frequency of notes played by the instrument. You can use a little bit to add a pleasing shifting sound similar to the \\\"unison\\\" feature when combined with other instruments. If you use too much, then the instrument may sound unpleasantly out-of-tune.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"distortion\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Distortion\"),\n\t\t\t\t\tp(\"This is the famous electric guitar effect! However, there are some things to be aware of.\"),\n\t\t\t\t\tp(\"First, most chords don't sound right when combined with heavy distortion. The only chords commonly used with distorted electric guitars are \\\"power chords\\\" which consist of a root note, a \\\"fifth\\\" note above that, and/or any octaves of those two notes.\"),\n\t\t\t\t\tp(\"Second, the distortion sound depends a lot on filtering. In particular, I recommend enabling the note filter effect, and adding both high-pass and low-pass points to the note filter. (Note filters are applied first, then distortion which transforms the sound based on that filtering, then the EQ filter is applied last.)\"),\n\t\t\t\t\tp(\"Finally, I recommend adjusting the fade-out setting to allow the end of each note to overlap a little bit with the beginning of the next, but not too much!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"bitcrusherQuantization\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Bitcrusher Quantization\"),\n\t\t\t\t\tp(\"This effect makes stuff sounds harsher, artificial, and \\\"low quality\\\", which is great if that's what you're going for!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"bitcrusherFreq\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Frequency Quantization\"),\n\t\t\t\t\tp(\"The bitcrusher effect comes with an additional frequency quantization effect! This is a fun one to play with, especially when combined with the note filter effect.\"),\n\t\t\t\t\tp(\"Every other notch on this slider is aligned with the currently selected key of the song, and the in-between notches are aligned with the tritones of the key.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"stringSustain\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"String sustain\"),\n\t\t\t\t\tp(\"This setting controls how quickly the picked string vibration decays.\"),\n\t\t\t\t\tp(\"Unlike most of UltraBox's instrument synthesizer features, a picked string cannot change frequency suddenly while maintaining its decay. If a tone's pitch changes suddenly (e.g. if the chord type is set to \\\"arpeggio\\\" or the transition type is set to \\\"continues\\\") then the string will be re-picked and start decaying from the beginning again, even if the envelopes don't otherwise restart.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"envelopes\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Envelopes\"),\n\t\t\t\t\tp(\"Envelopes are a way to dynamically adjust various other settings over time, usually based on how long the note lasts. Press the + button to add an envelope, then use the menus below to select which setting to control and the curve of the envelope. Try different combinations to see how they sound!\"),\n\t\t\t\t\tp(\"Most envelope curves restart from the beginning every time a new note plays. The \\\"note size\\\" option is based on the note width as drawn in the pattern editor.\"),\n\t\t\t\t\tp(\"Envelope curves move in the range from 0 to 1 (or vice versa), where 0 means as quiet as possible and 1 is the same as the corresponding position selected in the instrument settings above. If multiple envelopes are targetting the same setting, they are multiplied before applying to the setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"usedInstrument\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"usedPattern\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"modChannel\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Modulator Channel\"),\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"modInstrument\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Modulator Instrument\"),\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\n\t\t\t\t\tp(\"If you choose 'all', every instrument in the channel will be affected. If you choose 'active', just the current ones used in this pattern will be instead.\"),\n\t\t\t\t\tp(\"Note that with 'all' or 'active', effects will only be applied to instruments that the effect is applicable on. For example if an instrument does not have panning effects, modulating panning will not affect it.\")\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"modSet\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Modulator Setting\"),\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings. Adding more effects to the instrument causes modulators for them to be available, so be sure to experiment!\"),\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. Click the '?' when you have a setting selected to get more info about it!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"modFilter\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Filter Target\"),\n\t\t\t\t\tp(\"This setting specifies which parameter of your targeted filter you would like to change.\"),\n\t\t\t\t\tp(\"With the 'morph' setting, the note value for your modulator represents the number of a subfilter to 'morph' into over time. For example, dragging a note from 0 to 7 will morph from your main filter to the 7th subfilter. To change how your subfilters are set up, click the '+' button on the target filter.\"),\n\t\t\t\t\tp(\"With a Dot setting, you can fine-tune the exact location of every dot on your filter graph. Note that this is extremely intensive if you want to modulate all dots - a morph is better in that case - but this can come in handy for small adjustments.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"transitionBar\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"clicklessTransition\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Clickless Transition\"),\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\n\t\t\t\t);\n            } break;\n\t\t\tcase \"aliases\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Aliasing\"),\n\t\t\t\t\tp(\"UltraBox applies a technique called 'anti-aliasing' to instruments normally to help them sound cleaner even at high frequencies and low sample rates.\"),\n\t\t\t\t\tp(\"When this setting is ticked that technique is disabled, so you may hear strange audio artifacts especially at high pitches and when bending notes. However, this can lend a grungy sound to an instrument that could be desirable.\"),\n\t\t\t\t);\n\t\t\t} break;\n            case \"operatorWaveform\": {\n                message = div(\n                    h2(\"Operator Waveform\"),\n                    p('This setting controls the what kind of sound wave an individual FM wave uses.'),\n                    p('By defualt the FM synth uses sinewaves.'),\n                );\n            } break;\n\t\t\tcase \"filterType\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Filter Type\"),\n\t\t\t\t\tp('Toggling these buttons lets you choose between a simple filter interface with two sliders, or the more advanced filter graph.'),\n\t\t\t\t\tp('The two-slider version controls a single low-pass filter and was used in legacy versions. It is not as powerful, but if you feel overwhelmed you can start with this.'),\n\t\t\t\t\tp('Note that switching from the simple interface to the advanced interface will convert your current settings, so you can also use it as a basis for later tweaking.'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"filterCutoff\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. UltraBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"filterResonance\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"loopControls\":\n\t\t\t{\n\t\t\t\tmessage = div(h2(\"Loop Controls\"), p(\"This enables the use of parameters that control how a chip wave should repeat.\"));\n\t\t\t}\n\t\t\tbreak;\n\t\t\t\tcase \"loopMode\":\n\t\t\t{\n\t\t\t\tmessage = div(h2(\"Loop Mode\"), p(\"This sets the way the chip wave loops when its ends are reached.\"), p(\"The \\\"Loop\\\" mode is the default: when the end of the loop is reached, it will jump back to the starting point of the loop.\"), p(\"The \\\"Ping-Pong\\\" mode starts playing the chip wave backwards when the end of the loop is reached. Once it reaches the start of the loop, it will start playing forwards again, endlessly going back and forth.\"), p(\"The \\\"Play Once\\\" mode stops the chip wave once the end is reached (or the start of the loop, if it's playing backwards).\"), p(\"The \\\"Play Loop Once\\\" mode stops the chip wave once the end of the loop is reached (or the start of the loop, if it's playing backwards).\"));\n\t\t\t}\n\t\t\tbreak;\n\t\t\tcase \"loopStart\":\n\t\t\t{\n\t\t\t\tmessage = div(h2(\"Loop Start Point\"), p(\"This specifies where the loop region of the chip wave starts. It's measured in \\\"samples\\\", or rather, it refers to a point on a waveform.\"), p(\"Be careful with tiny loop sizes (especially combined with high pitches), they may re-introduce aliasing even if the \\\"Aliasing\\\" checkbox is unchecked.\"));\n\t\t\t}\n\t\t\tbreak;\n\t\t\tcase \"loopEnd\":\n\t\t\t{\n\t\t\t\tmessage = div(h2(\"Loop End Point\"), p(\"This specifies where the loop region of the chip wave ends. It's measured in \\\"samples\\\", or rather, it refers to a point on a waveform.\"), p(\"The button next to the input box sets this to end of the chip wave.\"), p(\"Be careful with tiny loop sizes (especially combined with high pitches), they may re-introduce aliasing even if the \\\"Aliasing\\\" checkbox is unchecked.\"));\n\t\t\t}\n\t\t\tbreak;\n\t\t\t\tcase \"offset\":\n\t\t\t{\n\t\t\t\tmessage = div(h2(\"Offset\"), p(\"This specifies where the chip wave should start playing from. You can use this to chop up a large sample, to say, turn a drum loop into a drum kit! It's measured in \\\"samples\\\", or rather, it refers to a point on a waveform.\"));\n\t\t\t}\n\t\t\tbreak;\n\t\t\t\tcase \"backwards\":\n\t\t\t{\n\t\t\t\tmessage = div(h2(\"Backwards\"), p(\"When set, the chip wave will start playing backwards. After checking this, you may want to adjust the offset to start from a different point that makes sense for this mode.\"));\n\t\t\t}\n\t\t\tbreak;\n\t\t\tcase \"decimalOffset\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Decimal Offset\"),\n\t\t\t\t\tp(\"The decimal offset is subtracted from the pulse width value, enabling the use of numbers such as 12.5 or 6.25. This could be useful if you're trying to recreate the sound of old soundchips.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"unisonVoices\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Unison Voices\"),\n\t\t\t\t\tp(\"This setting controls how many voices there are in a unison.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"unisonSpread\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Unison Spread\"),\n\t\t\t\t\tp(\"This setting controls the distance between the two voices.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"unisonOffset\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Unison Offset\"),\n\t\t\t\t\tp(\"This setting controls the pitch offset.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"unisonExpression\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Unison Expression\"),\n\t\t\t\t\tp(\"This setting controls the unison volume.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"unisonSign\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Unison Sign\"),\n\t\t\t\t\tp(\"This setting is a multiplier applied to the second voice (if applicable).\"),\n\t\t\t\t);\n\t\t\t} break;\n\n\t\t\tdefault:\n\t\t\t\t// Check for modSetinfo#\n\t\t\t\tif (type.indexOf(\"modSetInfo\") >= 0) {\n\t\t\t\t\tlet modNum: number = +type[type.length - 1];\n\t\t\t\t\tlet modulator: number = _doc.song.channels[_doc.channel].instruments[_doc.getCurrentInstrument()].modulators[modNum];\n\t\t\t\t\tlet pList: HTMLParagraphElement[] = [];\n\t\t\t\t\tfor (let s: number = 0; s < Config.modulators[modulator].promptDesc.length; s++) {\n\t\t\t\t\t\tpList.push(p(\n\t\t\t\t\t\t\tConfig.modulators[modulator].promptDesc[s]\n\t\t\t\t\t\t\t\t.replace(\"$LO\", \"\" + Config.modulators[modulator].convertRealFactor)\n\t\t\t\t\t\t\t\t.replace(\"$MID\", \"\" + (Config.modulators[modulator].convertRealFactor + Config.modulators[modulator].maxRawVol / 2))\n\t\t\t\t\t\t\t\t.replace(\"$HI\", \"\" + (Config.modulators[modulator].convertRealFactor + Config.modulators[modulator].maxRawVol))\n\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\t// Last element for mod settings is just some miscellaneous data for nerds like me.\n\t\t\t\t\tpList[pList.length-1].style.setProperty(\"color\", \"var(--secondary-text)\");\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(Config.modulators[modulator].promptName),\n\t\t\t\t\t\tpList,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(\"Unhandled TipPrompt type: \" + type);\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tthis.container = div({class: \"prompt\", style: \"width: 300px;\"},\n\t\t\tmessage,\n\t\t\tthis._closeButton,\n\t\t);\n\t\t\t\n\t\t\tsetTimeout(()=>this._closeButton.focus());\n\t\t\t\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Pattern } from \"../synth/synth\";\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\nimport { Config } from \"../synth/SynthConfig\";\nimport { isMobile } from \"./EditorConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { SongEditor } from \"./SongEditor\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\n\nclass Box {\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\n\t\tprivate readonly _label: SVGTextElement = SVG.text({\"font-family\": \"var(--track-font)\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\"}, this._text);\n\t\tprivate readonly _rect: SVGRectElement = SVG.rect({x: 1, y: 1});\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\n\tprivate _renderedIndex: number = 1;\n\tprivate _renderedDim: boolean = true;\n\tprivate _renderedSelected: boolean = false;\n\tprivate _renderedColor: string = \"\";\n\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\n\t\tthis._label.setAttribute(\"fill\", color);\n\t}\n\t\t\n\tpublic setSize(width: number, height: number): void {\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\n\t}\n\t\t\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\n\t\tif (this._renderedIndex != index) {\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\n\t\t\t\tif (index == 0) {\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (isNoise)\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\n\t\t\t\t\telse if (isMod)\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\n\n\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (index >= 100) {\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\n\t\t\t}\n\n\t\t\tthis._renderedIndex = index;\n\t\t\t\tthis._text.data = \"\"+index;\n\t\t}\n\t\t\t\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\n\t\t\tthis._renderedDim = dim;\n\t\t\tif (selected) {\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\n\t\t\t} else {\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\n\n\t\t\t\tif (this._renderedIndex == 0) {\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\n\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (isNoise)\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\n\t\t\t\t\telse if (isMod)\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\n\t\t\t\t}\n\t\t}\n\t\t}\n\t\t\t\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\n\t\t\tthis._renderedSelected = selected;\n\t\t\tif (selected) {\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\n\t\t\t} else {\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\n\n\t\t\t\tif (this._renderedIndex == 0) {\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\n\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (isNoise)\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\n\t\t\t\t\telse if (isMod)\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\n\t\t\t\t}\n\t\t}\n\t\t}\n\t\t\t\n\t\tthis._renderedColor = color;\n\t}\n}\n\nexport class TrackEditor {\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\n\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\n\t);\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\n\t\tprivate readonly _playhead: SVGRectElement = SVG.rect({fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128});\n\t\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30});\n\t\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\n\t\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128},\n\t\tthis._boxContainer,\n\t\tthis._barEditorPath,\n\t\tthis._selectionRect,\n\t\tthis._barNumberContainer,\n\t\tthis._boxHighlight,\n\t\tthis._upHighlight,\n\t\tthis._downHighlight,\n\t\tthis._playhead,\n\t);\n\t\tprivate readonly _select: HTMLSelectElement = HTML.select({class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\"});\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\n\t\t\n\tprivate readonly _grid: Box[][] = [];\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\t//private _lastScrollTime: number = 0;\n\t//private _selecting: boolean = false;\n\t//private _selectionStartBar: number = 0;\n\t//private _selectionStartChannel: number = 0;\n\t//private _pattern: Pattern | null = null;\n\tprivate _mouseStartBar: number = 0;\n\tprivate _mouseStartChannel: number = 0;\n\tprivate _mouseBar: number = 0;\n\tprivate _mouseChannel: number = 0;\n\tprivate _mouseOver: boolean = false;\n\tprivate _mousePressed: boolean = false;\n\tprivate _mouseDragging = false;\n\tprivate _barWidth: number = 32;\n\tprivate _channelHeight: number = 32;\n\tprivate _renderedChannelCount: number = 0;\n\tprivate _renderedBarCount: number = 0;\n\tprivate _renderedPatternCount: number = 0;\n\tprivate _renderedPlayhead: number = -1;\n\tprivate _renderedBarWidth: number = -1;\n\tprivate _renderedChannelHeight: number = -1;\n\tprivate _touchMode: boolean = isMobile;\n\tprivate _barDropDownBar: number = 0;\n\tprivate _lastScrollTime: number = 0;\n\t\t\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\n\t\t\t\n\t\tlet determinedCursorType: boolean = false;\n\t\tdocument.addEventListener(\"mousedown\", () => {\n\t\t\tif (!determinedCursorType) {\n\t\t\t\tthis._touchMode = false;\n\t\t\t\tthis._updatePreview();\n\t\t\t}\n\t\t\tdeterminedCursorType = true;\n\t\t}, true);\n\t\tdocument.addEventListener(\"touchstart\", () => {\n\t\t\tif (!determinedCursorType) {\n\t\t\t\tthis._touchMode = true;\n\t\t\t\tthis._updatePreview();\n\t\t\t}\n\t\t\tdeterminedCursorType = true;\n\t\t}, true);\n\n\t\tthis._barDropDown.selectedIndex = -1;\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\n\n\t}\n\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\n\t}\n\n\tprivate _barDropDownHandler = (event: Event): void => {\n\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\n\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\n\n\t\t\t//var prevBar = this._doc.bar;\n\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\n\n\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\tthis._doc.selection.insertBars();\n\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\n\n\t\t\t// Adjust song playhead\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\n\t\t\t\tthis._doc.synth.playhead++;\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\n\t\t\t}\n\n\t}\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\n\t\t\n\t\t\t//var prevBar = this._doc.bar;\n\n\t\t\tthis._doc.bar = this._barDropDownBar;\n\n\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\tthis._doc.selection.deleteBars();\n\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\n\n\t\t\t// Adjust song playhead\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\n\t\t\t\tthis._doc.synth.playhead--;\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\n\t\t\t}\n\n\t\t}\n\n\t\tthis._barDropDown.selectedIndex = -1;\n\t}\n\n\tprivate _whenSelectChanged = (): void => {\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\n\t}\n\t\t\n\tprivate _animatePlayhead = (timestamp: number): void => {\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\n\t\tif (this._renderedPlayhead != playhead) {\n\t\t\tthis._renderedPlayhead = playhead;\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\n\t\t}\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\n\t}\n\t\n\tpublic movePlayheadToMouse(): boolean {\n\t\tif (this._mouseOver) {\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate _dragBoxSelection(): void {\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\n\t\tthis._doc.selection.selectionUpdated();\n\t}\n\t\t\n\tprivate _updateSelectPos(event: TouchEvent): void {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\n\t}\n\t\t\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\n\t\tthis._mousePressed = true;\n\t\tthis._mouseDragging = true;\n\t\tthis._updateSelectPos(event);\n\t\tthis._mouseStartBar = this._mouseBar;\n\t\tthis._mouseStartChannel = this._mouseChannel;\n\t}\n\t\t\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\n\t\tthis._updateSelectPos(event);\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tif (this._mousePressed) this._dragBoxSelection();\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\n\t\tthis._mousePressed = false;\n\t\tthis._mouseDragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t}\n\t\t\n\tprivate _updateMousePos(event: MouseEvent): void {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mousePressed = true;\n\t\tthis._updateMousePos(event);\n\t\tthis._mouseStartBar = this._mouseBar;\n\t\tthis._mouseStartChannel = this._mouseChannel;\n\n\t\t// Act on track portion\n\t\tif (this._mouseY >= Config.barEditorHeight) {\n\n\t\tif (event.shiftKey) {\n\t\t\tthis._mouseDragging = true;\n\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\n\t\t\tthis._doc.selection.selectionUpdated();\n\t\t} else {\n\t\t\tthis._mouseDragging = false;\n\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\n\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t}\n\t}\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tthis._updateMousePos(event);\n\t\tif (this._mousePressed) {\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\tthis._dragBoxSelection();\n\t\t}\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\n\t\tif (this._mousePressed && !this._mouseDragging) {\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\n\t\t\t}\n\t\t}\n\t\tthis._mousePressed = false;\n\t\tthis._mouseDragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _updatePreview(): void {\n\t\tlet channel: number = this._mouseChannel;\n\t\tlet bar: number = this._mouseBar;\n\t\t\t\n\t\tif (this._touchMode) {\n\t\t\tbar = this._doc.bar;\n\t\t\tchannel = this._doc.channel;\n\t\t}\n\t\t\t\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\n\t\t\t\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\n\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\n\t\t\tvar timestamp: number = Date.now();\n\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\n\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\n\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\n\t\t\t\t}\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\n\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\n\t\t\t\t}\n\n\t\t\t\tthis._lastScrollTime = timestamp;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\n\t\t} else {\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\n\t\t}\n\t\t\t\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\n\t\t\tconst base: number = this._channelHeight * 0.1;\n\t\t\tconst tip: number = this._channelHeight * 0.4;\n\t\t\tconst width: number = this._channelHeight * 0.175;\n\t\t\t\t\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\n\t\t\t\t\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\n\t\t\t\t\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\n\t\t} else {\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\n\t\t}\n\t\t\t\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\n\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\n\n\t\tthis._select.style.width = this._barWidth + \"px\";\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\n\t\tthis._select.style.height = this._channelHeight + \"px\";\n\t\t\t\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\n\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\n\t\t\t\tthis._select.appendChild(HTML.option({value: i}, i));\n\t\t}\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\n\t\t\t\tthis._select.removeChild(<Node> this._select.lastChild);\n\t\t}\n\t\tthis._renderedPatternCount = patternCount;\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\n\t}\n\t\t\n\tpublic render(): void {\n\n\t\tthis._barWidth = this._doc.getBarWidth();\n\t\tthis._channelHeight = this._doc.getChannelHeight();\n\t\t\t\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\n\n\t\t\t// Add new channel boxes if needed\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tthis._grid[y] = [];\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\n\t\t\t\t\tthis._grid[y][x] = box;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\t// Remove old channel boxes\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\n\t\t\tthis._mousePressed = false;\n\t\t}\n\t\t\t\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\n\t\t\t\t\tthis._grid[y][x] = box;\n\t\t\t\t}\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\n\t\t\t\t}\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\n\t\t\t}\n\n\t\t\t// Update bar editor's SVG\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\n\n\t\t\tvar pathString = \"\";\n\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\n\t\t\t\tvar pathTop = 1;\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\n\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\n\t\t}\n\t\t\t\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\n\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\n\t\t\t\t\tif (pos % 4 == 0) {\n\t\t\t\t\t\t// Highlighting every 4 bars\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\n\t\t\t\t\t}\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\n\t\t\t\t}\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\n\t\t\t}\n\n\t\t\t// Update x of bar editor numbers\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\n\t\t\tthis.container.style.width = editorWidth + \"px\";\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\n\t\t\tthis._mousePressed = false;\n\t\t}\n\t\t\t\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\n\t\t\tthis._renderedBarWidth = this._barWidth;\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._mousePressed = false;\n\t\t}\n\t\t\t\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\n\t\t\tthis.container.style.height = editorHeight + \"px\";\n\t\t}\n\t\t\t\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\n\t\t\t\t\t\n\t\t\t\tconst box: Box = this._grid[j][i];\n\t\t\t\tif (i < this._doc.song.barCount) {\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\n\t\t\t\t} else {\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\t\t\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\n\t\t\n\t\tif (this._doc.selection.boxSelectionActive) {\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\n\t\t\t// editor renders and the selection is visible. Check if anything changed\n\t\t\t// before overwriting the attributes?\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\n\t\t} else {\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\n\t\t}\n\t\t\t\n\t\tthis._updatePreview();\n\t}\n}\n","import { ColorConfig } from \"../editor/ColorConfig\";\nimport { events } from \"./Events\";\n\nexport class oscilascopeCanvas {\n    public _EventUpdateCanvas:Function;\n\n    constructor(public readonly canvas: HTMLCanvasElement, readonly scale: number = 1) {\n        this._EventUpdateCanvas = function(directlinkL: Float32Array, directlinkR ?: Float32Array): void {\n            if(directlinkR) {\n                var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-L\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-L\") : ColorConfig.getComputed(\"--primary-text\");\n                for (let i: number = directlinkL.length - 1; i >= directlinkL.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkL.length - 1) + (canvas.width/scale);\n                    let yl = (directlinkL[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n\n                    ctx.fillRect((x - 1)*scale, (yl - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-R\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-R\") : ColorConfig.getComputed(\"--text-selection\"); //less ctx style calls = less expensive??? also avoiding uncached colors\n                for (let i: number = directlinkR.length - 1; i >= directlinkR.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkR.length - 1) + (canvas.width/scale);\n                    let yr = (directlinkR[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n                    \n                    ctx.fillRect((x - 1)*scale, (yr - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n            }\n        };\n        events.listen(\"oscillascopeUpdate\", this._EventUpdateCanvas);\n    }\n\n    \n}\n","import { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { sampleLoadingState, SampleLoadingStatus, ChipWave, Config } from \"../synth/SynthConfig\";\nimport { Instrument } from \"../synth/synth\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeGroup } from \"./Change\";\nimport { SongDocument } from \"./SongDocument\";\nimport { SongEditor } from \"./SongEditor\";\nimport { ChangeChipWaveLoopMode, ChangeChipWaveStartOffset, ChangeChipWaveLoopStart, ChangeChipWaveLoopEnd, ChangeChipWavePlayBackwards } from \"./changes\";\n\nconst { div, input, button, h2, select, option, canvas } = HTML;\n\n// Some of the code here was adapted from this library:\n// https://github.com/chdh/function-curve-viewer\n// which is MIT licensed (https://github.com/chdh/function-curve-viewer/blob/master/LICENSE.md).\n\ntype HandleValueValidator = (value: number) => number;\ntype HandleValueChangeHandler = (value: number) => void;\ntype ShapeFunction = (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) => void;\n\nconst defaultShapeFunction: ShapeFunction = (cnv, ctx, x, y, w, h) => {\n    ctx.fillRect(x, y, w, h);\n};\n\nclass VisualLoopControlsHandle {\n    private _value: number;\n    private readonly _validator: HandleValueValidator;\n    private readonly _whenValueChanges: HandleValueChangeHandler;\n    private readonly _whenMouseUpHappens: () => void;\n    private readonly _shapeFunction: ShapeFunction;\n    private readonly _handleWidth: number = 40;\n    private _mouseDown: boolean = false;\n    private _viewportX0: number;\n    private _viewportX1: number;\n    private _handleDragOffset: number | null = null;\n    private _canvasWidth: number;\n    private _canvasHeight: number;\n    public canvas: HTMLCanvasElement | null = null;\n    private _context: CanvasRenderingContext2D | null = null;\n\n    constructor(value: number, canvasWidth: number, canvasHeight: number, viewportX0: number, viewportX1: number, validator: HandleValueValidator, whenValueChanges: HandleValueChangeHandler, whenMouseUpHappens: () => void, shapeFunction: ShapeFunction | null) {\n        this._value = value;\n        this._validator = validator;\n        this._whenValueChanges = whenValueChanges;\n        this._whenMouseUpHappens = whenMouseUpHappens;\n        this._shapeFunction = shapeFunction == null ? defaultShapeFunction : shapeFunction;\n        this._viewportX0 = viewportX0;\n        this._viewportX1 = viewportX1;\n        this._canvasWidth = canvasWidth;\n        this._canvasHeight = canvasHeight;\n        this.canvas = canvas({ width: this._canvasWidth, height: this._canvasHeight, style: \"cursor: default; position: static; margin-bottom: 0.5em; margin-left: auto; margin-right: auto; outline: 1px solid var(--ui-widget-background); box-sizing: border-box; width: 100%;\" });\n        this._context = this.canvas.getContext(\"2d\");\n        window.addEventListener(\"mousemove\", this._whenMouseMoves);\n        this.canvas!.addEventListener(\"mousedown\", this._whenMouseIsDown);\n        window.addEventListener(\"mouseup\", this._whenMouseIsUp);\n        this.canvas!.addEventListener(\"touchstart\", this._whenTouchIsDown);\n        this.canvas!.addEventListener(\"touchmove\", this._whenTouchMoves);\n        this.canvas!.addEventListener(\"touchend\", this._whenTouchIsUp);\n        this.canvas!.addEventListener(\"touchcancel\", this._whenTouchIsUp);\n    }\n\n    public update = (newValue: number): void => {\n        this._value = this._validator(newValue);\n    }\n\n    public render = (): void => {\n        const cnv: HTMLCanvasElement = this.canvas!;\n        const ctx: CanvasRenderingContext2D = this._context!;\n        const w: number = cnv.width;\n        const h: number = cnv.height;\n        const vx0: number = this._viewportX0;\n        const vx1: number = this._viewportX1;\n\n        const v: number = this._value;\n\n        ctx.clearRect(0, 0, w, h);\n\n        ctx.fillStyle = ColorConfig.getComputed(\"--loop-accent\");\n        const bw: number = this._handleWidth;\n        const bh: number = h;\n        const bx: number = Math.floor((v - vx0) * w / (vx1 - vx0)) - bw / 2;\n        const by: number = 0;\n        this._shapeFunction(cnv, ctx, bx, by, bw, bh);\n    }\n\n    public updateViewport = (x0: number, x1: number): void => {\n        this._viewportX0 = x0;\n        this._viewportX1 = x1;\n    }\n\n    private _whenMouseMoves = (event: MouseEvent): void => {\n        if (!this._mouseDown) return;\n\n        const w: number = this._canvasWidth;\n        const vx0: number = this._viewportX0;\n        const vx1: number = this._viewportX1;\n\n        const bounds: DOMRect = this.canvas!.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\n\n        const wmx: number = vx0 + mx * (vx1 - vx0) / w;\n\n        this._value = this._validator(wmx - (this._handleDragOffset != null ? this._handleDragOffset : 0));\n        this.render();\n        if (this._whenValueChanges) this._whenValueChanges(this._value);\n    }\n\n    private _whenMouseIsDown = (event: MouseEvent): void => {\n        this._mouseDown = true;\n\n        const w: number = this._canvasWidth;\n        const vx0: number = this._viewportX0;\n        const vx1: number = this._viewportX1;\n\n        const bounds: DOMRect = this.canvas!.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\n\n        const bw: number = this._handleWidth;\n        const bx0: number = ((this._value - vx0) * w / (vx1 - vx0)) - bw / 2;\n        const bx1: number = bx0 + bw;\n        if (mx >= bx0 && mx <= bx1) {\n            this._handleDragOffset = (mx - (bx0 + bw / 2)) * (vx1 - vx0) / w;\n        }\n\n        const wmx: number = vx0 + mx * (vx1 - vx0) / w;\n\n        this._value = this._validator(wmx - (this._handleDragOffset != null ? this._handleDragOffset : 0));\n        this.render();\n        if (this._whenValueChanges) this._whenValueChanges(this._value);\n    };\n\n    private _whenMouseIsUp = (event: MouseEvent): void => {\n        // event.preventDefault();\n        // event.stopPropagation();\n        if (!this._mouseDown) return;\n        this._mouseDown = false;\n        this._handleDragOffset = null;\n        this._whenMouseUpHappens();\n    }\n\n    private _whenTouchMoves = (event: TouchEvent): void => {\n        if (!this._mouseDown) return;\n\n        event.preventDefault();\n\n        const w: number = this._canvasWidth;\n        const vx0: number = this._viewportX0;\n        const vx1: number = this._viewportX1;\n\n        const bounds: DOMRect = this.canvas!.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = (event.touches[0].clientX - bounds.left) * canvasXScale;\n\n        const wmx: number = vx0 + mx * (vx1 - vx0) / w;\n\n        this._value = this._validator(wmx - (this._handleDragOffset != null ? this._handleDragOffset : 0));\n        this.render();\n        if (this._whenValueChanges) this._whenValueChanges(this._value);\n    }\n\n    private _whenTouchIsDown = (event: TouchEvent): void => {\n        event.preventDefault();\n\n        this._mouseDown = true;\n\n        const w: number = this._canvasWidth;\n        const vx0: number = this._viewportX0;\n        const vx1: number = this._viewportX1;\n\n        const bounds: DOMRect = this.canvas!.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = (event.touches[0].clientX - bounds.left) * canvasXScale;\n\n        const bw: number = this._handleWidth;\n        const bx0: number = ((this._value - vx0) * w / (vx1 - vx0)) - bw / 2;\n        const bx1: number = bx0 + bw;\n        if (mx >= bx0 && mx <= bx1) {\n            this._handleDragOffset = (mx - (bx0 + bw / 2)) * (vx1 - vx0) / w;\n        }\n\n        const wmx: number = vx0 + mx * (vx1 - vx0) / w;\n\n        this._value = this._validator(wmx - (this._handleDragOffset != null ? this._handleDragOffset : 0));\n        this.render();\n        if (this._whenValueChanges) this._whenValueChanges(this._value);\n    }\n\n    private _whenTouchIsUp = (event: TouchEvent): void => {\n        event.preventDefault();\n        // event.stopPropagation();\n\n        this._mouseDown = false;\n        this._handleDragOffset = null;\n        this._whenMouseUpHappens();\n    }\n    \n    public cleanUp = (): void => {\n        window.removeEventListener(\"mousemove\", this._whenMouseMoves);\n        this.canvas!.removeEventListener(\"mousedown\", this._whenMouseIsDown);\n        window.removeEventListener(\"mouseup\", this._whenMouseIsUp);\n        this.canvas!.removeEventListener(\"touchstart\", this._whenTouchIsDown);\n        this.canvas!.removeEventListener(\"touchmove\", this._whenTouchMoves);\n        this.canvas!.removeEventListener(\"touchend\", this._whenTouchIsUp);\n        this.canvas!.removeEventListener(\"touchcancel\", this._whenTouchIsUp);\n    }\n}\n\nexport class VisualLoopControlsPrompt {\n    private readonly _waveformCanvasWidth: number = 500;\n    private readonly _waveformCanvasHeight: number = 200;\n    private readonly _handleCanvasHeight: number = 20;\n\n    private readonly _doc: SongDocument;\n    private readonly _songEditor: SongEditor;\n    private _instrument: Instrument | null = null;\n    private _waveformData: Float32Array | null = null;\n    private _waveformDataLength: number | null = null;\n    private _initialChipWaveLoopMode: number | null = null;\n    private _initialChipWaveStartOffset: number | null = null;\n    private _initialChipWaveLoopStart: number | null = null;\n    private _initialChipWaveLoopEnd: number | null = null;\n    private _initialChipWavePlayBackwards: boolean | null = null;\n    private _chipWaveLoopMode: number = 0;\n    private _chipWaveStartOffset: number = 0;\n    private _chipWaveLoopStart: number = 0;\n    private _chipWaveLoopEnd: number = 0;\n    private _chipWavePlayBackwards: boolean = false;\n    private _waveformViewportX0: number = 0;\n    private _waveformViewportX1: number = 1;\n    private _waveformViewportY0: number = -1.01;\n    private _waveformViewportY1: number = 1.01;\n    private _waveformViewportWidth: number = 1;\n    private _waveformViewportOffset: number = 0;\n    private _waveformViewportMaxOffset: number = 0;\n    private _overlayIsMouseDown: boolean = false;\n    private _overlaySelectionX0: number | null = null;\n    private _overlaySelectionX1: number | null = null;\n\n    private _startOffsetValidator = (v: number): number => {\n        return Math.max(0, Math.min(this._waveformDataLength!, Math.floor(v)));\n    }\n\n    private _loopStartValidator = (v: number): number => {\n        return Math.max(0, Math.min(this._waveformDataLength!, Math.min(this._chipWaveLoopEnd - 2, Math.floor(v))));\n    }\n\n    private _loopEndValidator = (v: number): number => {\n        return Math.max(0, Math.min(this._waveformDataLength!, Math.max(this._chipWaveLoopStart + 2, Math.floor(v))));\n    }\n\n    private _startOffsetHandle: VisualLoopControlsHandle = new VisualLoopControlsHandle(\n        this._chipWaveStartOffset,\n        this._waveformCanvasWidth,\n        this._handleCanvasHeight,\n        this._waveformViewportX0,\n        this._waveformViewportX1,\n        this._startOffsetValidator,\n        (v: number): void => {\n            this._chipWaveStartOffset = v;\n            this._instrument!.chipWaveStartOffset = this._chipWaveStartOffset;\n            this._renderOverlay();\n            this._reconfigureLoopControls();\n        },\n        (): void => {\n            this.gotMouseUp = true;\n            setTimeout(() => { this.gotMouseUp = false; }, 10);\n        },\n        (cnv: HTMLCanvasElement, ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void => {\n            const th: number = h / 4;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + w, y);\n            ctx.lineTo(x + w, y + h - th);\n            ctx.lineTo(x + w / 2, y + h);\n            ctx.lineTo(x, y + h - th);\n            ctx.fill();\n        }\n    );\n    private _loopStartHandle: VisualLoopControlsHandle = new VisualLoopControlsHandle(\n        this._chipWaveLoopStart,\n        this._waveformCanvasWidth,\n        this._handleCanvasHeight,\n        this._waveformViewportX0,\n        this._waveformViewportX1,\n        this._loopStartValidator,\n        (v: number): void => {\n            this._chipWaveLoopStart = v;\n            this._instrument!.chipWaveLoopStart = this._chipWaveLoopStart;\n            this._renderOverlay();\n            this._reconfigureLoopControls();\n        },\n        (): void => {\n            this.gotMouseUp = true;\n            setTimeout(() => { this.gotMouseUp = false; }, 10);\n        },\n        (cnv: HTMLCanvasElement, ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void => {\n            const tw: number = w / 4;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + w - tw, y);\n            ctx.lineTo(x + w, y + h / 2);\n            ctx.lineTo(x + w - tw, y + h);\n            ctx.lineTo(x, y + h);\n            ctx.fill();\n        }\n    );\n    private _loopEndHandle: VisualLoopControlsHandle = new VisualLoopControlsHandle(\n        this._chipWaveLoopEnd,\n        this._waveformCanvasWidth,\n        this._handleCanvasHeight,\n        this._waveformViewportX0,\n        this._waveformViewportX1,\n        this._loopEndValidator,\n        (v: number): void => {\n            this._chipWaveLoopEnd = v;\n            this._instrument!.chipWaveLoopEnd = this._chipWaveLoopEnd;\n            this._renderOverlay();\n            this._reconfigureLoopControls();\n        },\n        (): void => {\n            this.gotMouseUp = true;\n            setTimeout(() => { this.gotMouseUp = false; }, 10);\n        },\n        (cnv: HTMLCanvasElement, ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void => {\n            const tw: number = w / 4;\n            ctx.beginPath();\n            ctx.moveTo(x + w, y);\n            ctx.lineTo(x + w, y + h);\n            ctx.lineTo(x + tw, y + h);\n            ctx.lineTo(x, y + h / 2);\n            ctx.lineTo(x + tw, y);\n            ctx.fill();\n        }\n    );\n    private _chipWaveIsUnavailable: boolean = true;\n\n    private _waveformCanvas: HTMLCanvasElement = canvas({ width: this._waveformCanvasWidth, height: this._waveformCanvasHeight, style: \"cursor: default; position: static; width: 100%;\" });\n    private _waveformContext: CanvasRenderingContext2D | null = null;\n    private _overlayCanvas: HTMLCanvasElement = canvas({ width: this._waveformCanvasWidth, height: this._waveformCanvasHeight, style: \"cursor: default; position: absolute; top: 0; left: 0; width: 100%;\" });\n    private _overlayContext: CanvasRenderingContext2D | null = null;\n    private _waveformContainer: HTMLDivElement = div({ style: `position: relative; margin-bottom: 0.5em; margin-left: auto; margin-right: auto; width: 100%; outline: 1px solid ${ColorConfig.uiWidgetBackground};` },\n        this._waveformCanvas,\n        this._overlayCanvas\n    );\n    private _viewportOffsetSlider: HTMLInputElement = input({ style: \"width: 100%; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"1\", value: \"0\", step: \"0.00001\" });\n    private _zoomInButton: HTMLButtonElement = button({ type: \"button\", title: \"Zoom In\", style: \"height: var(--button-size); margin-left: 0.5em;\" },\n        SVG.svg({ width: \"20\", height: \"20\", viewBox: \"-10 -10 20 20\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.circle({ cx: -1, cy: -1, r: 6, \"stroke-width\": 2, stroke: ColorConfig.primaryText, fill: \"none\" }), SVG.path({ stroke: ColorConfig.primaryText, \"stroke-width\": 2, d: \"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\", fill: \"none\" }))\n    );\n    private _zoomOutButton: HTMLButtonElement = button({ type: \"button\", title: \"Zoom Out\", style: \"height: var(--button-size); margin-left: 0.5em;\" },\n        SVG.svg({ width: \"20\", height: \"20\", viewBox: \"-10 -10 20 20\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.circle({ cx: -1, cy: -1, r: 6, \"stroke-width\": 2, stroke: ColorConfig.primaryText, fill: \"none\" }), SVG.path({ stroke: ColorConfig.primaryText, \"stroke-width\": 2, d: \"M 3 3 L 7 7 M -4 -1 L 2 -1\", fill: \"none\" }))\n    );\n    private _zoom100Button: HTMLButtonElement = button({ type: \"button\", title: \"Zoom 100%\", style: \"height: var(--button-size); margin-left: 0.5em;\" }, \"100%\");\n    private readonly _loopModeSelect: HTMLSelectElement = select({ style: \"width: 100%; flex-grow: 1; margin-left: 0.5em;\" },\n        option({ value: 0 }, \"Loop\"),\n        option({ value: 1 }, \"Ping-Pong\"),\n        option({ value: 2 }, \"Play Once\"),\n        option({ value: 3 }, \"Play Loop Once\")\n    );\n    private _startOffsetStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: this._chipWaveStartOffset, min: \"0\", step: \"1\" });\n    private _loopStartStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: this._chipWaveLoopStart, min: \"0\", step: \"1\" });\n    private _loopEndStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: this._chipWaveLoopEnd, min: \"0\", step: \"1\" });\n    private _playBackwardsBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: auto; margin-right: auto;\" });\n    private _playSongButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\n    private _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n    private _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width: 25%;\" }, \"Okay\");\n    private _sampleIsLoadingMessage: HTMLDivElement = div({ style: \"margin-bottom: 0.5em; display: none;\" },\n        \"Sample is loading\"\n    );\n    private _loopControlsContainer: HTMLDivElement = div(\n        div({ style: \"display: flex; flex-direction: column; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\n            div({ style: `width: 100%; margin-bottom: 0.5em; text-align: center; color: ${ColorConfig.secondaryText};` },\n                \"You can also zoom by dragging horizontally on the waveform.\"\n            )\n        ),\n        this._startOffsetHandle.canvas,\n        this._waveformContainer,\n        this._loopStartHandle.canvas,\n        this._loopEndHandle.canvas,\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\n            this._viewportOffsetSlider,\n            this._zoomInButton,\n            this._zoomOutButton,\n            this._zoom100Button\n        ),\n        div({ style: \"display: flex; flex-direction: column; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\n                div({ style: `flex-shrink: 0; text-align: right: color: ${ColorConfig.primaryText}; align-self: center;` }, \"Loop Mode\"),\n                this._loopModeSelect\n            ),\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\n                div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText}; align-self: center;` }, \"Offset\"),\n                this._startOffsetStepper\n            ),\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\n                div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText}; align-self: center;` }, \"Loop Start\"),\n                this._loopStartStepper\n            ),\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\n                div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText}; align-self: center;` }, \"Loop End\"),\n                this._loopEndStepper\n            ),\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em;\" },\n                div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText}; align-self: center;` }, \"Backwards\"),\n                this._playBackwardsBox\n            ),\n            div({ style: \"width: 100%; display: flex; flex-direction: row; margin-bottom: 0.5em; justify-content: center;\" },\n                this._playSongButton\n            )\n        )\n    );\n    public container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 500px;\" },\n        div(\n            h2({ style: \"margin-bottom: 0.5em;\" }, \"Loop Controls\"),\n            this._sampleIsLoadingMessage,\n            this._loopControlsContainer,\n            div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" }, this._okayButton)\n        ),\n        this._cancelButton\n    );\n\n    public gotMouseUp: boolean = false;\n\n    constructor(_doc: SongDocument, _songEditor: SongEditor) {\n        this._doc = _doc;\n        this._songEditor = _songEditor;\n        this._waveformContext = this._waveformCanvas.getContext(\"2d\");\n        this._overlayContext = this._overlayCanvas.getContext(\"2d\");\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        const rawChipWave: ChipWave = Config.rawRawChipWaves[this._instrument.chipWave];\n        const customSampleIsLoading: boolean = (rawChipWave.isCustomSampled === true || rawChipWave.isSampled == true) && sampleLoadingState.statusTable[this._instrument.chipWave] !== SampleLoadingStatus.loaded;\n        if (customSampleIsLoading) {\n            this._sampleIsLoadingMessage.style.display = \"\";\n            this._loopControlsContainer.style.display = \"none\";\n            this._chipWaveIsUnavailable = true;\n        } else {\n            this._sampleIsLoadingMessage.style.display = \"none\";\n            this._loopControlsContainer.style.display = \"\";\n            this._chipWaveIsUnavailable = false;\n            this._waveformData = rawChipWave.samples;\n            this._waveformDataLength = this._waveformData.length - 1;\n            this._initialChipWaveLoopMode = this._instrument.chipWaveLoopMode;\n            this._initialChipWaveStartOffset = this._instrument.chipWaveStartOffset;\n            this._initialChipWaveLoopStart = this._instrument.chipWaveLoopStart;\n            this._initialChipWaveLoopEnd = this._instrument.chipWaveLoopEnd;\n            this._initialChipWavePlayBackwards = this._instrument.chipWavePlayBackwards;\n            this._chipWaveLoopMode = this._initialChipWaveLoopMode;\n            this._chipWaveStartOffset = this._initialChipWaveStartOffset;\n            this._chipWaveLoopStart = this._initialChipWaveLoopStart;\n            this._chipWaveLoopEnd = this._initialChipWaveLoopEnd;\n            this._chipWavePlayBackwards = this._initialChipWavePlayBackwards;\n            const verticalBounds: [number, number] = this._waveformSamplesLookup(0, this._waveformDataLength);\n            const maxVerticalBound: number = Math.max(Math.abs(verticalBounds[0]), Math.abs(verticalBounds[1])) + 0.01;\n            verticalBounds[0] = -maxVerticalBound;\n            verticalBounds[1] = maxVerticalBound;\n            this._waveformViewportX0 = 0;\n            this._waveformViewportX1 = this._waveformDataLength;\n            this._waveformViewportY0 = verticalBounds[0];\n            this._waveformViewportY1 = verticalBounds[1];\n            this._waveformViewportWidth = this._waveformViewportX1 - this._waveformViewportX0;\n            this._waveformViewportOffset = 0;\n            this._waveformViewportMaxOffset = this._waveformDataLength - this._waveformViewportWidth;\n            this._startOffsetHandle.update(this._chipWaveStartOffset);\n            this._loopStartHandle.update(this._chipWaveLoopStart);\n            this._loopEndHandle.update(this._chipWaveLoopEnd);\n            this._propagateViewportUpdate();\n        }\n        this._updatePlaySongButton();\n        this._render();\n        this._reconfigureLoopControls();\n        this.container.addEventListener(\"keydown\", this._whenKeyPressed);\n        this._okayButton.addEventListener(\"click\", this._saveChanges);\n        this._cancelButton.addEventListener(\"click\", this._close);\n        this._viewportOffsetSlider.addEventListener(\"input\", this._whenViewportOffsetSliderChanges);\n        this._zoomInButton.addEventListener(\"click\", this._whenZoomInClicked);\n        this._zoomOutButton.addEventListener(\"click\", this._whenZoomOutClicked);\n        this._zoom100Button.addEventListener(\"click\", this._whenZoom100Clicked);\n        this._loopModeSelect.addEventListener(\"change\", this._whenLoopModeSelectChanges);\n        this._startOffsetStepper.addEventListener(\"change\", this._whenStartOffsetStepperChanges);\n        this._loopStartStepper.addEventListener(\"change\", this._whenLoopStartStepperChanges);\n        this._loopEndStepper.addEventListener(\"change\", this._whenLoopEndStepperChanges);\n        this._playBackwardsBox.addEventListener(\"input\", this._whenPlayBackwardsBoxChanges);\n        this._playSongButton.addEventListener(\"click\", this._togglePlaySong);\n        window.addEventListener(\"mousemove\", this._whenOverlayMouseMoves);\n        this._overlayCanvas.addEventListener(\"mousedown\", this._whenOverlayMouseIsDown);\n        window.addEventListener(\"mouseup\", this._whenOverlayMouseIsUp);\n        this._overlayCanvas.addEventListener(\"touchstart\", this._whenOverlayTouchIsDown);\n        this._overlayCanvas.addEventListener(\"touchmove\", this._whenOverlayTouchMoves);\n        this._overlayCanvas.addEventListener(\"touchend\", this._whenOverlayTouchIsUp);\n        this._overlayCanvas.addEventListener(\"touchcancel\", this._whenOverlayTouchIsUp);\n    }\n\n    private _waveformSampleLookup = (x: number): number => {\n        const n: number = this._waveformDataLength!;\n        if (x >= 0 && x < n) {\n            return this._waveformData![Math.floor(x)];\n        } else {\n            return 0;\n        }\n    }\n\n    private _waveformSamplesLookup = (x0: number, x1: number): [number, number] => {\n        const n: number = this._waveformDataLength!;\n        const a: number = Math.max(0, Math.min(n, Math.ceil(x0)));\n        const b: number = Math.max(0, Math.min(n, Math.ceil(x1)));\n        if (a >= b) return [0, 0];\n        let y0: number = this._waveformData![a];\n        let y1: number = y0;\n        for (let i: number = a + 1; i < b; i++) {\n            const v: number = this._waveformData![i];\n            y0 = Math.min(y0, v);\n            y1 = Math.max(y1, v);\n        }\n        return [y0, y1];\n    }\n\n    public cleanUp = (): void => {\n        this._startOffsetHandle.cleanUp();\n        this._loopStartHandle.cleanUp();\n        this._loopEndHandle.cleanUp();\n        this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n        this._okayButton.removeEventListener(\"click\", this._saveChanges);\n        this._cancelButton.removeEventListener(\"click\", this._close);\n        this._viewportOffsetSlider.removeEventListener(\"input\", this._whenViewportOffsetSliderChanges);\n        this._zoomInButton.removeEventListener(\"click\", this._whenZoomInClicked);\n        this._zoomOutButton.removeEventListener(\"click\", this._whenZoomOutClicked);\n        this._zoom100Button.removeEventListener(\"click\", this._whenZoom100Clicked);\n        this._loopModeSelect.removeEventListener(\"change\", this._whenLoopModeSelectChanges);\n        this._startOffsetStepper.removeEventListener(\"change\", this._whenStartOffsetStepperChanges);\n        this._loopStartStepper.removeEventListener(\"change\", this._whenLoopStartStepperChanges);\n        this._loopEndStepper.removeEventListener(\"change\", this._whenLoopEndStepperChanges);\n        this._playBackwardsBox.removeEventListener(\"input\", this._whenPlayBackwardsBoxChanges);\n        this._playSongButton.removeEventListener(\"click\", this._togglePlaySong);\n        this._overlayCanvas.removeEventListener(\"mousemove\", this._whenOverlayMouseMoves);\n        this._overlayCanvas.removeEventListener(\"mousedown\", this._whenOverlayMouseIsDown);\n        this._overlayCanvas.removeEventListener(\"mouseup\", this._whenOverlayMouseIsUp);\n        this._overlayCanvas.removeEventListener(\"touchstart\", this._whenOverlayTouchIsDown);\n        this._overlayCanvas.removeEventListener(\"touchmove\", this._whenOverlayTouchMoves);\n        this._overlayCanvas.removeEventListener(\"touchend\", this._whenOverlayTouchIsUp);\n        this._overlayCanvas.removeEventListener(\"touchcancel\", this._whenOverlayTouchIsUp);\n    }\n\n    private _close = (): void => {\n        this._doc.prompt = null;\n        this._doc.undo();\n    }\n\n    private _saveChanges = (): void => {\n        if (!this._chipWaveIsUnavailable) {\n            this._doc.prompt = null;\n            this._instrument!.chipWaveLoopMode = this._initialChipWaveLoopMode!;\n            this._instrument!.chipWaveStartOffset = this._initialChipWaveStartOffset!;\n            this._instrument!.chipWaveLoopStart = this._initialChipWaveLoopStart!;\n            this._instrument!.chipWaveLoopEnd = this._initialChipWaveLoopEnd!;\n            this._instrument!.chipWavePlayBackwards = this._initialChipWavePlayBackwards!;\n            const group: ChangeGroup = new ChangeGroup();\n            group.append(new ChangeChipWaveLoopMode(this._doc, this._chipWaveLoopMode));\n            group.append(new ChangeChipWaveStartOffset(this._doc, this._chipWaveStartOffset));\n            group.append(new ChangeChipWaveLoopStart(this._doc, this._chipWaveLoopStart));\n            group.append(new ChangeChipWaveLoopEnd(this._doc, this._chipWaveLoopEnd));\n            group.append(new ChangeChipWavePlayBackwards(this._doc, this._chipWavePlayBackwards));\n            this._doc.record(group, true);\n        } else {\n            this._doc.prompt = null;\n            this._doc.undo();\n        }\n    }\n\n    private _togglePlaySong = (): void => {\n        this._songEditor.togglePlay();\n        this._updatePlaySongButton();\n    }\n\n    private _renderWaveform = (): void => {\n        if (this._chipWaveIsUnavailable) return;\n\n        const cnv: HTMLCanvasElement = this._waveformCanvas;\n        const ctx: CanvasRenderingContext2D = this._waveformContext!;\n        const w: number = cnv.width;\n        const h: number = cnv.height;\n        const vx0: number = this._waveformViewportX0;\n        const vx1: number = this._waveformViewportX1;\n        const vy0: number = this._waveformViewportY0;\n        const vy1: number = this._waveformViewportY1;\n\n        const sampleWidth: number = (vx1 - vx0) / w;\n\n        ctx.clearRect(0, 0, w, h);\n\n        // Line going through 0.\n        ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\n        ctx.fillRect(0, h / 2, w, 1);\n\n        const waveformColor: string = ColorConfig.getComputed(\"--primary-text\");\n        if (sampleWidth < 1) {\n            // Very zoomed in.\n            ctx.strokeStyle = waveformColor;\n            ctx.lineWidth = 1;\n            let firstMove: boolean = true;\n            ctx.beginPath();\n            for (let cx: number = 0; cx < w; cx++) {\n                const wx: number = vx0 + cx * sampleWidth;\n                const wy: number = this._waveformSampleLookup(wx);\n                const cy: number = h - (wy - vy0) * h / (vy1 - vy0);\n                if (firstMove) {\n                    ctx.moveTo(cx, cy);\n                    firstMove = false;\n                } else {\n                    ctx.lineTo(cx, cy);\n                }\n            }\n            ctx.stroke();\n        } else {\n            // Zoomed out.\n            ctx.fillStyle = waveformColor;\n            let pcy0: number | null = null;\n            let pcy1: number | null = null;\n            for (let cx: number = 0; cx < w; cx++) {\n                const wx: number = vx0 + cx * sampleWidth;\n                const [wy0, wy1]: [number, number] = this._waveformSamplesLookup(\n                    wx - sampleWidth / 2, wx + sampleWidth / 2\n                );\n                const cy0: number = Math.max(-1, Math.min(h, h - (wy1 - vy0) * h / (vy1 - vy0)));\n                const cy1: number = Math.max(-1, Math.min(h, h - (wy0 - vy0) * h / (vy1 - vy0)));\n                const cy0i: number = Math.floor(cy0);\n                const cy1i: number = Math.max(Math.ceil(cy1), cy0i + 1);\n                const ocy0: number = pcy1 == null ? cy0i : Math.min(cy0i, pcy1);\n                const ocy1: number = pcy0 == null ? cy1i : Math.max(cy1i, pcy0);\n                const bh: number = Math.max(1, ocy1 - ocy0);\n                ctx.fillRect(cx, ocy0, 1, bh);\n                pcy0 = ocy0;\n                pcy1 = ocy1;\n            }\n        }\n    }\n\n    private _renderOverlay = (): void => {\n        const cnv: HTMLCanvasElement = this._overlayCanvas;\n        const ctx: CanvasRenderingContext2D = this._overlayContext!;\n        const w: number = cnv.width;\n        const h: number = cnv.height;\n        const vx0: number = this._waveformViewportX0;\n        const vx1: number = this._waveformViewportX1;\n\n        const so: number = this._chipWaveStartOffset;\n        const ls: number = this._chipWaveLoopStart;\n        const le: number = this._chipWaveLoopEnd;\n\n        ctx.clearRect(0, 0, w, h);\n\n        ctx.fillStyle = ColorConfig.getComputed(\"--loop-accent\");\n        const obx: number = Math.floor((so - vx0) * w / (vx1 - vx0));\n        const oby: number = 0;\n        const obw: number = 1;\n        const obh: number = h;\n        ctx.fillRect(obx, oby, obw, obh);\n\n        ctx.fillStyle = ColorConfig.getComputed(\"--loop-accent\");\n        ctx.globalAlpha = 0.5;\n        const lbx0: number = Math.floor((ls - vx0) * w / (vx1 - vx0));\n        const lbx1: number = Math.floor((le - vx0) * w / (vx1 - vx0));\n        const lbx: number = lbx0;\n        const lby: number = 0;\n        const lbw: number = lbx1 - lbx0;\n        const lbh: number = h;\n        ctx.fillRect(lbx, lby, lbw, lbh);\n        ctx.globalAlpha = 1;\n\n        if (this._overlaySelectionX0 != null && this._overlaySelectionX1 != null) {\n            ctx.fillStyle = ColorConfig.getComputed(\"--box-selection-fill\");\n            ctx.globalAlpha = 0.5;\n            ctx.fillRect(this._overlaySelectionX0, 0, this._overlaySelectionX1 - this._overlaySelectionX0, h);\n            ctx.globalAlpha = 1;\n        }\n    }\n\n    private _reconfigureLoopControls = (): void => {\n        this._loopModeSelect.value = \"\" + this._chipWaveLoopMode;\n        this._startOffsetStepper.value = \"\" + this._chipWaveStartOffset;\n        this._loopStartStepper.value = \"\" + this._chipWaveLoopStart;\n        this._loopEndStepper.value = \"\" + this._chipWaveLoopEnd;\n        this._playBackwardsBox.checked = this._chipWavePlayBackwards;\n    }\n\n    private _whenViewportOffsetSliderChanges = (event: Event): void => {\n        const rawOffset: number = Math.max(0, Math.min(1, +(<HTMLInputElement>event.target).value));\n        const newViewportOffset: number = Math.max(0, Math.min(this._waveformViewportMaxOffset, rawOffset * this._waveformViewportMaxOffset));\n        this._waveformViewportOffset = Math.min(this._waveformViewportMaxOffset, newViewportOffset);\n        this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\n        this._waveformViewportX0 = 0 + this._waveformViewportOffset;\n        this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\n        this._propagateViewportUpdate();\n        this._render();\n    }\n\n    private _whenZoomInClicked = (event: Event): void => {\n        const newViewportWidth: number = Math.max(1, Math.min(this._waveformDataLength!, this._waveformViewportWidth / 2));\n        this._waveformViewportWidth = newViewportWidth;\n        this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\n        const centerX: number = this._waveformViewportX0 + (this._waveformCanvasWidth / 2) * (this._waveformViewportX1 - this._waveformViewportX0) / this._waveformCanvasWidth;\n        this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, centerX - (this._waveformCanvasWidth / 2) * this._waveformViewportWidth / this._waveformCanvasWidth));\n        this._waveformViewportX0 = 0 + this._waveformViewportOffset;\n        this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\n        this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\n        this._propagateViewportUpdate();\n        this._render();\n    }\n\n    private _whenZoomOutClicked = (event: Event): void => {\n        const newViewportWidth: number = Math.max(1, Math.min(this._waveformDataLength!, this._waveformViewportWidth * 2));\n        this._waveformViewportWidth = newViewportWidth;\n        this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\n        const centerX: number = this._waveformViewportX0 + (this._waveformCanvasWidth / 2) * (this._waveformViewportX1 - this._waveformViewportX0) / this._waveformCanvasWidth;\n        this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, centerX - (this._waveformCanvas.width / 2) * this._waveformViewportWidth / this._waveformCanvasWidth));\n        this._waveformViewportX0 = 0 + this._waveformViewportOffset;\n        this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\n        if (this._waveformViewportWidth === this._waveformDataLength!) {\n            this._viewportOffsetSlider.value = \"0\";\n        } else {\n            this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\n        }\n        this._propagateViewportUpdate();\n        this._render();\n    }\n\n    private _whenZoom100Clicked = (event: Event): void => {\n        const newViewportWidth: number = this._waveformDataLength!;\n        this._waveformViewportWidth = newViewportWidth;\n        this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\n        this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, 0));\n        this._waveformViewportX0 = 0 + this._waveformViewportOffset;\n        this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\n        if (this._waveformViewportWidth === this._waveformDataLength!) {\n            this._viewportOffsetSlider.value = \"0\";\n        } else {\n            this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\n        }\n        this._propagateViewportUpdate();\n        this._render();\n    }\n\n    private _whenLoopModeSelectChanges = (event: Event): void => {\n        const element: HTMLSelectElement = <HTMLSelectElement>event.target;\n        const newValue: number = +element.value;\n        this._chipWaveLoopMode = newValue;\n        this._instrument!.chipWaveLoopMode = this._chipWaveLoopMode;\n    }\n\n    private _whenStartOffsetStepperChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const newValue: number = this._startOffsetValidator(+element.value);\n        this._chipWaveStartOffset = newValue;\n        this._instrument!.chipWaveStartOffset = this._chipWaveStartOffset;\n        element.value = \"\" + newValue;\n        this._startOffsetHandle.update(newValue);\n        this._startOffsetHandle.render();\n        this._renderOverlay();\n    }\n\n    private _whenLoopStartStepperChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const newValue: number = this._loopStartValidator(+element.value);\n        this._chipWaveLoopStart = newValue;\n        this._instrument!.chipWaveLoopStart = this._chipWaveLoopStart;\n        element.value = \"\" + newValue;\n        this._loopStartHandle.update(newValue);\n        this._loopStartHandle.render();\n        this._renderOverlay();\n    }\n\n    private _whenLoopEndStepperChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const newValue: number = this._loopEndValidator(+element.value);\n        this._chipWaveLoopEnd = newValue;\n        this._instrument!.chipWaveLoopEnd = this._chipWaveLoopEnd;\n        element.value = \"\" + newValue;\n        this._loopEndHandle.update(newValue);\n        this._loopEndHandle.render();\n        this._renderOverlay();\n    }\n\n    private _whenPlayBackwardsBoxChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const newValue: boolean = element.checked;\n        this._chipWavePlayBackwards = newValue;\n        this._instrument!.chipWavePlayBackwards = this._chipWavePlayBackwards;\n    };\n\n    private _whenOverlayMouseMoves = (event: MouseEvent): void => {\n        if (!this._overlayIsMouseDown) return;\n\n        const w: number = this._overlayCanvas.width;\n\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\n\n        this._overlaySelectionX1 = mx;\n\n        this._renderOverlay();\n    }\n\n    private _whenOverlayMouseIsDown = (event: MouseEvent): void => {\n        this._overlayIsMouseDown = true;\n\n        const w: number = this._overlayCanvas.width;\n\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\n\n        this._overlaySelectionX0 = mx;\n        this._overlaySelectionX1 = mx;\n\n        this._renderOverlay();\n    }\n\n    private _whenOverlayMouseIsUp = (event: MouseEvent): void => {\n        // event.preventDefault();\n        // event.stopPropagation();\n        if (!this._overlayIsMouseDown) return;\n        this.gotMouseUp = true;\n        setTimeout(() => { this.gotMouseUp = false; }, 10);\n        this._overlayIsMouseDown = false;\n\n        const w: number = this._overlayCanvas.width;\n        const vx0: number = this._waveformViewportX0;\n        const vx1: number = this._waveformViewportX1;\n\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = ((event.clientX || event.pageX) - bounds.left) * canvasXScale;\n\n        this._overlaySelectionX1 = mx;\n\n        this._overlaySelectionX0 = Math.max(0, Math.min(w, this._overlaySelectionX0!));\n        this._overlaySelectionX1 = Math.max(0, Math.min(w, this._overlaySelectionX1!));\n\n        if (this._overlaySelectionX0 > this._overlaySelectionX1) {\n            const t: number = this._overlaySelectionX0;\n            this._overlaySelectionX0 = this._overlaySelectionX1;\n            this._overlaySelectionX1 = t;\n        }\n\n        let zoomAreaIsTooSmall: boolean = false;\n        if (this._overlaySelectionX1 - this._overlaySelectionX0 > 2) {\n            const wosx0: number = vx0 + this._overlaySelectionX0 * (vx1 - vx0) / w;\n            const wosx1: number = vx0 + this._overlaySelectionX1 * (vx1 - vx0) / w;\n            const newViewportWidth: number = Math.max(1, Math.min(this._waveformDataLength!, wosx1 - wosx0));\n            this._waveformViewportWidth = newViewportWidth;\n            this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\n            const centerX: number = vx0 + (this._overlaySelectionX0) * (this._waveformViewportX1 - this._waveformViewportX0) / this._waveformCanvasWidth;\n            this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, centerX));\n            this._waveformViewportX0 = 0 + this._waveformViewportOffset;\n            this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\n            if (this._waveformViewportWidth === this._waveformDataLength!) {\n                this._viewportOffsetSlider.value = \"0\";\n            } else {\n                this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\n            }\n        } else {\n            zoomAreaIsTooSmall = true;\n        }\n\n        this._overlaySelectionX0 = null;\n        this._overlaySelectionX1 = null;\n\n        if (!zoomAreaIsTooSmall) {\n            this._propagateViewportUpdate();\n            this._render();\n        }\n        this._renderOverlay();\n    }\n\n    private _whenOverlayTouchIsDown = (event: TouchEvent): void => {\n        event.preventDefault();\n\n        this._overlayIsMouseDown = true;\n\n        const w: number = this._overlayCanvas.width;\n\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = (event.touches[0].clientX - bounds.left) * canvasXScale;\n\n        this._overlaySelectionX0 = mx;\n        this._overlaySelectionX1 = mx;\n\n        this._renderOverlay();\n    }\n\n    private _whenOverlayTouchMoves = (event: TouchEvent): void => {\n        if (!this._overlayIsMouseDown) return;\n\n        event.preventDefault();\n\n        const w: number = this._overlayCanvas.width;\n\n        const bounds: DOMRect = this._overlayCanvas.getBoundingClientRect();\n        const canvasXScale: number = w / bounds.width;\n\n        const mx: number = (event.touches[0].clientX - bounds.left) * canvasXScale;\n\n        this._overlaySelectionX1 = mx;\n\n        this._renderOverlay();\n    }\n\n    private _whenOverlayTouchIsUp = (event: TouchEvent): void => {\n        event.preventDefault();\n        // event.stopPropagation();\n\n        if (!this._overlayIsMouseDown) return;\n        this.gotMouseUp = true;\n        setTimeout(() => { this.gotMouseUp = false; }, 10);\n\n        this._overlayIsMouseDown = false;\n\n        const w: number = this._overlayCanvas.width;\n        const vx0: number = this._waveformViewportX0;\n        const vx1: number = this._waveformViewportX1;\n\n        this._overlaySelectionX0 = Math.max(0, Math.min(w, this._overlaySelectionX0!));\n        this._overlaySelectionX1 = Math.max(0, Math.min(w, this._overlaySelectionX1!));\n\n        if (this._overlaySelectionX0 > this._overlaySelectionX1) {\n            const t: number = this._overlaySelectionX0;\n            this._overlaySelectionX0 = this._overlaySelectionX1;\n            this._overlaySelectionX1 = t;\n        }\n\n        let zoomAreaIsTooSmall: boolean = false;\n        if (this._overlaySelectionX1 - this._overlaySelectionX0 > 2) {\n            const wosx0: number = vx0 + this._overlaySelectionX0 * (vx1 - vx0) / w;\n            const wosx1: number = vx0 + this._overlaySelectionX1 * (vx1 - vx0) / w;\n            const newViewportWidth: number = Math.max(1, Math.min(this._waveformDataLength!, wosx1 - wosx0));\n            this._waveformViewportWidth = newViewportWidth;\n            this._waveformViewportMaxOffset = this._waveformDataLength! - this._waveformViewportWidth;\n            const centerX: number = vx0 + (this._overlaySelectionX0) * (this._waveformViewportX1 - this._waveformViewportX0) / this._waveformCanvasWidth;\n            this._waveformViewportOffset = Math.max(0, Math.min(this._waveformViewportMaxOffset, centerX));\n            this._waveformViewportX0 = 0 + this._waveformViewportOffset;\n            this._waveformViewportX1 = this._waveformViewportWidth + this._waveformViewportOffset;\n            if (this._waveformViewportWidth === this._waveformDataLength!) {\n                this._viewportOffsetSlider.value = \"0\";\n            } else {\n                this._viewportOffsetSlider.value = \"\" + (this._waveformViewportOffset / this._waveformViewportMaxOffset);\n            }\n        } else {\n            zoomAreaIsTooSmall = true;\n        }\n\n        this._overlaySelectionX0 = null;\n        this._overlaySelectionX1 = null;\n\n        if (!zoomAreaIsTooSmall) {\n            this._propagateViewportUpdate();\n            this._render();\n        }\n        this._renderOverlay();\n    }\n\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) {\n            this._saveChanges();\n        }\n        if (event.keyCode == 32) {\n            this._togglePlaySong();\n            event.preventDefault();\n        }\n    }\n\n    private _updatePlaySongButton = (): void => {\n        if (this._doc.synth.playing) {\n            this._playSongButton.classList.remove(\"playButton\");\n            this._playSongButton.classList.add(\"pauseButton\");\n            this._playSongButton.title = \"Pause (Space)\";\n            this._playSongButton.innerText = \"Pause\";\n        }\n        else {\n            this._playSongButton.classList.remove(\"pauseButton\");\n            this._playSongButton.classList.add(\"playButton\");\n            this._playSongButton.title = \"Play (Space)\";\n            this._playSongButton.innerText = \"Play\";\n        }\n    }\n\n    private _propagateViewportUpdate = (): void => {\n        this._startOffsetHandle.updateViewport(this._waveformViewportX0, this._waveformViewportX1);\n        this._loopStartHandle.updateViewport(this._waveformViewportX0, this._waveformViewportX1);\n        this._loopEndHandle.updateViewport(this._waveformViewportX0, this._waveformViewportX1);\n    };\n\n    private _render = (): void => {\n        if (this._chipWaveIsUnavailable) return;\n\n        this._renderWaveform();\n        this._startOffsetHandle.render();\n        this._loopStartHandle.render();\n        this._loopEndHandle.render();\n        this._renderOverlay();\n    }\n}\n","import { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { sampleLoadingState, SampleLoadingStatus, getSampleLoadingStatusName, ChipWave, Config } from \"../synth/SynthConfig\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { EditorConfig } from \"./EditorConfig\";\nimport { SongDocument } from \"./SongDocument\";\n\nconst { div, h2, span, input, button } = HTML;\n\nexport class SampleLoadingStatusPrompt {\n    private readonly _intervalDuration: number = 2000;\n\n    private readonly _doc: SongDocument;\n    private _interval: ReturnType<typeof setInterval> | null = null;\n    private _renderedWhenAllHaveStoppedChanging: boolean = false;\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n    private _statusesContainer: HTMLDivElement = div();\n    private _noSamplesMessage: HTMLDivElement = div({ style: \"margin-top: 0.5em; display: none;\" }, \"There's no custom samples in this song.\");\n    public container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 350px;\" },\n        div(\n            h2(\"Sample Loading Status\"),\n            div({ style: \"display: flex; flex-direction: column; align-items: center; margin-bottom: 0.5em;\" },\n                this._noSamplesMessage,\n                div({ style: \"width: 100%; max-height: 350px; overflow-y: scroll;\" }, this._statusesContainer),\n            )\n        ),\n        this._cancelButton\n    );\n\n    constructor(_doc: SongDocument) {\n        this._doc = _doc;\n        this._interval = setInterval(() => this._render(), this._intervalDuration);\n        this._render();\n        this._cancelButton.addEventListener(\"click\", this._close);\n    }\n\n    private _close = (): void => {\n        this._doc.prompt = null;\n        this._doc.undo();\n    }\n\n    public cleanUp = (): void => {\n        while (this._statusesContainer.firstChild !== null) {\n            this._statusesContainer.removeChild(this._statusesContainer.firstChild);\n        }\n\n        this._cancelButton.removeEventListener(\"click\", this._close);\n        clearInterval(this._interval!);\n    }\n\n    private _render = (): void => {\n        const hasNoCustomSamples: boolean = EditorConfig.customSamples == null;\n\n        if (hasNoCustomSamples) {\n            this._noSamplesMessage.style.display = \"\";\n        }\n\n        if (hasNoCustomSamples || this._renderedWhenAllHaveStoppedChanging) {\n            clearInterval(this._interval!);\n            return;\n        }\n\n        let allHaveStoppedChanging: boolean = true;\n        for (let chipWaveIndex: number = 0; chipWaveIndex < Config.chipWaves.length; chipWaveIndex++) {\n            const chipWave: ChipWave = Config.chipWaves[chipWaveIndex];\n            if (chipWave.isCustomSampled !== true && chipWave.isSampled !== true) continue;\n            const loadingStatus: SampleLoadingStatus = sampleLoadingState.statusTable[chipWaveIndex];\n            if (loadingStatus === SampleLoadingStatus.loading) {\n                allHaveStoppedChanging = false;\n                break;\n            }\n        }\n\n        // @TODO: This is very much not efficient. The slowness here\n        // isn't harmless if more samples are to be allowed.\n\n        while (this._statusesContainer.firstChild !== null) {\n            this._statusesContainer.removeChild(this._statusesContainer.firstChild);\n        }\n\n        for (let chipWaveIndex: number = 0; chipWaveIndex < Config.chipWaves.length; chipWaveIndex++) {\n            const chipWave: ChipWave = Config.chipWaves[chipWaveIndex];\n            if (chipWave.isCustomSampled !== true && chipWave.isSampled !== true) continue;\n            const sampleName: string = chipWave.name;\n            const url: string = sampleLoadingState.urlTable[chipWaveIndex];\n            const loadingStatus: string = getSampleLoadingStatusName(sampleLoadingState.statusTable[chipWaveIndex]);\n            const urlDisplay: HTMLInputElement = input({ style: `margin-left: 0.5em; color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.editorBackground}; width: 100%; border: 1px solid ${ColorConfig.uiWidgetBackground}; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none;`, value: url, title: url, disabled: true });\n            const loadingStatusColor: string = loadingStatus === \"loaded\" ? ColorConfig.indicatorPrimary : ColorConfig.secondaryText;\n            const loadingStatusDisplay: HTMLSpanElement = span({ style: `margin-left: 0.5em; color: ${loadingStatusColor}` }, loadingStatus);\n            const chipWaveElement: HTMLDivElement = div({ style: `padding: 0.6em; margin: 0.4em; border: 1px solid ${ColorConfig.uiWidgetBackground}; border-radius: 4px;` },\n                div({\n                    class: \"add-sample-prompt-sample-name\",\n                    style: `margin-bottom: 0.5em; color: ${ColorConfig.secondaryText}; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;`,\n                    title: sampleName,\n                },\n                    sampleName\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText};` }, \"URL\"),\n                    urlDisplay\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center; margin-bottom: 0.5em;\" },\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText};` }, \"Status\"),\n                    loadingStatusDisplay\n                )\n            );\n            this._statusesContainer.appendChild(chipWaveElement);\n        }\n\n        if (allHaveStoppedChanging) {\n            this._renderedWhenAllHaveStoppedChanging = true;\n        }\n    }\n}\n","import { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\nimport { clamp, parseFloatWithDefault, parseIntWithDefault } from \"../synth/synth\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { EditorConfig } from \"./EditorConfig\";\nimport { SongDocument } from \"./SongDocument\";\n\nconst { div, input, button, a, code, textarea, details, summary, span, ul, li, select, option, h2 } = HTML;\n\ninterface SampleEntry {\n    url: string;\n    sampleRate: number;\n    rootKey: number;\n    percussion: boolean;\n    chipWaveLoopStart: number | null;\n    chipWaveLoopEnd: number | null;\n    chipWaveStartOffset: number | null;\n    chipWaveLoopMode: number | null;\n    chipWavePlayBackwards: boolean;\n}\n\ninterface ParsedEntries {\n    entries: SampleEntry[];\n}\n\n// @TODO:\n// - Check for duplicate sample URLs and names.\n// - Maybe the Backwards checkbox should be a select as well? Right now though,\n//   assuming that false is the same as if it wasn't actually set should work\n//   fine.\n// - Use constants or an enum for the key-value pairs.\n\nexport class AddSamplesPrompt {\n    private readonly _maxSamples: number = 64;\n\n    private _doc: SongDocument;\n    private readonly _entries: SampleEntry[] = [];\n    private readonly _entryOptionsDisplayStates: Dictionary<boolean> = {};\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n    private readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width: 45%;\" }, \"Okay\");\n    private readonly _addSampleButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\" }, \"Add sample\");\n    private readonly _entryContainer: HTMLDivElement = div();\n    private readonly _addMultipleSamplesButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 0.5em;\" }, \"Add multiple samples\");\n    private readonly _addSamplesAreaBottom: HTMLDivElement = div({ style: \"margin-top: 0.5em;\" },\n        this._addSampleButton,\n        this._addMultipleSamplesButton\n    );\n    private readonly _instructionsLink: HTMLAnchorElement = a({ href: \"#\" }, \"Wanna add your own samples? Click here!\");\n    private readonly _description: HTMLDivElement = div(\n        div({ style: \"margin-bottom: 0.5em; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text; cursor: text;\" },\n            \"Before you ask: \",\n        ),\n\tdiv({ style: \"margin-bottom: 0.5em; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text; cursor: text;\" },\n            \"legacySamples\",\n            \" = Pandoras Box's Samples \"\n        ),\n\tdiv({ style: \"margin-bottom: 0.5em; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text; cursor: text;\" },\n            \"nintariboxSamples\",\n            \" = nintaribox's Samples \"\n        ),\n\tdiv({ style: \"margin-bottom: 0.5em; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text; cursor: text;\" },\n            \"marioPaintboxSamples\",\n            \" = MarioPaintBox's Samples.\"\n        ),\n        div({ style: \"margin-bottom: 0.5em;\" },\n            \"The order of these samples is important - if you change it you'll break your song!\",\n\t    \"Since they're sorted by which ones you added first, changing the position of the sample in the list will\",\n            \"change your instruments' sample to a different sample!\"\n\t),\n        div({ style: \"margin-bottom: 0.5em;\" },\n            this._instructionsLink,\n        ),\n    );\n    private readonly _closeInstructionsButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); width: 100%;\" }, \"Close instructions\");\n    private readonly _instructionsArea: HTMLDivElement = div(\n        { style: \"display: none; margin-top: 0; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text; user-select: text; cursor: text; overflow-y: auto;\" },\n        h2(\"Add Samples\"),\n        div({ style: \"margin-top: 0.5em; margin-bottom: 0.5em;\" },\n            \"In UB and in turn AB, custom samples are loaded from arbitrary URLs.\",\n        ),\n        div({ style: `margin-top: 0.5em; margin-bottom: 0.5em; color: ${ColorConfig.secondaryText};` },\n            \"(Technically, the web server behind the URL needs to support \",\n              a({ href: \"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\", target: \"_blank\", }, \"CORS\"),\n              \", but you don't need to know about that: \",\n              \" the sample just won't load if that's not the case)\",\n        ),\n        div({ style: \"margin-top: 0.5em; margin-bottom: 0.5em;\" },\n            details(\n                summary(\"Why arbitrary URLs?\"),\n                a({ href: \"https://pandoras-box-archive.neptendo.repl.co/\" }, \"A certain BeepBox mod\"),\n                \" did this with one central server, but it went down, taking down\",\n                \" the samples with it, though thankfully it got archived.\",\n                \" This is always an issue with servers: it may run out of space,\",\n                \" stop working, and so on. With arbitrary URLs, you can always \",\n                \" change them to different ones if they stop working.\"\n            )\n        ),\n        div({ style: \"margin-top: 0.5em; margin-bottom: 0.5em;\" },\n            \"As for where to upload your samples, here are some suggestions:\",\n            ul({ style: \"text-align: left;\" },\n                li(a({ href: \"https://filegarden.com\" }, \"File Garden\")),\n                li(a({ href: \"https://catbox.moe/\" }, \"Catbox\")),\n                li(a({ href: \"https://www.dropbox.com\" }, \"Dropbox\"), \" (domain needs to be \", code(\"https://dl.dropboxusercontent.com\"), \")\"),\n                //li(a({ href: \"https://discord.com\" }, \"Discord\"), \" (domain needs to be \", code(\"https://media.discordapp.net\"), \")\")\n            )\n        ),\n        div({ style: \"margin-top: 0.5em; margin-bottom: 0.5em;\" },\n            \"Static website hosting services may also work (such as \", a({ href: \"https://pages.github.com\" }, \"GitHub Pages\"), \")\",\n            \" but those require a bit more setup.\"\n        ),\n        div({ style: \"margin-top: 0.5em; margin-bottom: 1em;\" },\n            \"Finally, if have a soundfont you'd like to get samples from, consider using this \",\n            a({ href: \"./sample_extractor.html\", target: \"_blank\" }, \"sample extractor\"),\n            \"!\"\n        ),\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between; margin-top: 0.5em;\" }, this._closeInstructionsButton)\n    );\n    private readonly _addSamplesArea: HTMLDivElement = div({ style: \"overflow-y: auto;\" },\n        h2(\"Add Samples\"),\n        div({ style: \"display: flex; flex-direction: column; align-items: center; margin-bottom: 0.5em;\" },\n            this._description,\n            div({ style: \"width: 100%; max-height: 450px; overflow-y: scroll;\" }, this._entryContainer),\n            this._addSamplesAreaBottom\n        ),\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" }, this._okayButton)\n    );\n    private readonly _bulkAddTextarea: HTMLTextAreaElement = textarea({\n        style: \"width: 100%; height: 100%; resize: none; box-sizing: border-box;\",\n    });\n    private readonly _bulkAddConfirmButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); width: 100%;\" }, \"Add\");\n    private readonly _bulkAddArea: HTMLDivElement = div(\n        { style: \"display: none; overflow-y: auto;\" },\n        h2({ style: \"margin-bottom: 0.5em;\" }, \"Add Multiple Samples\"),\n        div({ style: \"display: flex; flex-direction: column; align-items: center;\" },\n            div(`Add one URL per line. Remember that you can only have ${this._maxSamples} samples!`),\n            div({ style: `color: ${ColorConfig.secondaryText}` }, \"(This supports the syntax used to store samples in the song URLs as well)\"),\n            div({ style: \"width: 100%; height: 250px; margin-top: 0.5em; margin-bottom: 0.5em;\" }, this._bulkAddTextarea),\n        ),\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" }, this._bulkAddConfirmButton),\n    );\n    public container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 450px; max-height: calc(100% - 100px);\" },\n        this._addSamplesArea,\n        this._bulkAddArea,\n        this._instructionsArea,\n        this._cancelButton\n    );\n\n    constructor(_doc: SongDocument) {\n        this._doc = _doc;\n        if (EditorConfig.customSamples != null) {\n            // In this case, `EditorConfig.customSamples` should have the URLs\n            // with the new syntax, as we only use that when saving, and we\n            // also force the new syntax on load, in `Song._parseAndConfigureCustomSample`.\n            const parsed = this._parseURLs(EditorConfig.customSamples, false);\n            this._entries = parsed.entries;\n        }\n        this._addSampleButton.addEventListener(\"click\", this._whenAddSampleClicked);\n        this._addMultipleSamplesButton.addEventListener(\"click\", this._whenAddMultipleSamplesClicked);\n        this._bulkAddConfirmButton.addEventListener(\"click\", this._whenBulkAddConfirmClicked);\n        this._okayButton.addEventListener(\"click\", this._saveChanges);\n        this._cancelButton.addEventListener(\"click\", this._close);\n        this._instructionsLink.addEventListener(\"click\", this._whenInstructionsLinkClicked);\n        this._closeInstructionsButton.addEventListener(\"click\", this._whenCloseInstructionsButtonClicked);\n        this._reconfigureAddSampleButton();\n        this._render(false);\n    }\n\n    public cleanUp = (): void => {\n        while (this._entryContainer.firstChild !== null) {\n            this._entryContainer.removeChild(this._entryContainer.firstChild);\n        }\n        this._addSampleButton.removeEventListener(\"click\", this._whenAddSampleClicked);\n        this._addMultipleSamplesButton.removeEventListener(\"click\", this._whenAddMultipleSamplesClicked);\n        this._bulkAddConfirmButton.removeEventListener(\"click\", this._whenBulkAddConfirmClicked);\n        this._okayButton.removeEventListener(\"click\", this._saveChanges);\n        this._cancelButton.removeEventListener(\"click\", this._close);\n        this._instructionsLink.removeEventListener(\"click\", this._whenInstructionsLinkClicked);\n        this._closeInstructionsButton.removeEventListener(\"click\", this._whenCloseInstructionsButtonClicked);\n    }\n\n    private _close = (): void => {\n        this._doc.prompt = null;\n        this._doc.undo();\n        this._saveChanges();\n    }\n\n    private _saveChanges = (): void => {\n        const urlData: string = this._generateURLData();\n        EditorConfig.customSamples = urlData.split(\"|\").filter(x => x !== \"\");\n        Config.willReloadForCustomSamples = true;\n        window.location.hash = this._doc.song.toBase64String();\n        // The prompt seems to get stuck if reloading is done too quickly.\n        setTimeout(() => { location.reload(); }, 50);\n    }\n\n    private _whenAddSampleClicked = (event: Event): void => {\n        const entryIndex: number = this._entries.length;\n        this._entries.push({\n            url: \"\",\n            sampleRate: 44100,\n            rootKey: 60,\n            percussion: false,\n            chipWaveLoopStart: null,\n            chipWaveLoopEnd: null,\n            chipWaveStartOffset: null,\n            chipWaveLoopMode: null,\n            chipWavePlayBackwards: false,\n        });\n        this._entryOptionsDisplayStates[entryIndex] = false;\n        this._reconfigureAddSampleButton();\n        this._render(true);\n    }\n\n    private _whenAddMultipleSamplesClicked = (event: Event): void => {\n        this._addSamplesArea.style.display = \"none\";\n        this._bulkAddArea.style.display = \"\";\n        this._bulkAddTextarea.value = \"\";\n    }\n\n    private _whenInstructionsLinkClicked = (event: Event): void => {\n        event.preventDefault();\n        this._addSamplesArea.style.display = \"none\";\n        this._instructionsArea.style.display = \"\";\n    }\n\n    private _whenCloseInstructionsButtonClicked = (event: Event): void => {\n        this._addSamplesArea.style.display = \"\";\n        this._instructionsArea.style.display = \"none\";\n    }\n\n    private _whenBulkAddConfirmClicked = (event: Event): void => {\n        this._addSamplesArea.style.display = \"\";\n        this._bulkAddArea.style.display = \"none\";\n        // In this case, we shouldn't really bother supporting the old syntax,\n        // as people are only really sharing URLs with the new one.\n        const parsed: ParsedEntries = this._parseURLs(\n            this._bulkAddTextarea.value\n                .replace(/\\n/g, \"|\")\n                .split(\"|\")\n                .map((x: string) => decodeURIComponent(x.trim()))\n                .filter((x: string) => x !== \"\"),\n            false\n        );\n        const seen: Map<string, boolean> = new Map();\n        for (const entry of this._entries) {\n            seen.set(entry.url, true);\n        }\n        for (const entry of parsed.entries) {\n            if (this._entries.length >= this._maxSamples) break;\n            if (seen.has(entry.url)) continue;\n            seen.set(entry.url, true);\n            const entryIndex: number = this._entries.length;\n            this._entries.push(entry);\n            this._entryOptionsDisplayStates[entryIndex] = false;\n        }\n        this._reconfigureAddSampleButton();\n        this._render(false);\n    }\n\n    private _whenOptionsAreToggled = (event: Event): void => {\n        const element: HTMLDetailsElement = <HTMLDetailsElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        if (element.open) {\n            this._entryOptionsDisplayStates[entryIndex] = true;\n        } else {\n            this._entryOptionsDisplayStates[entryIndex] = false;\n        }\n    }\n\n    private _whenURLChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        this._entries[entryIndex].url = element.value;\n        const sampleNameElement: HTMLDivElement | null | undefined = element.parentNode?.parentNode?.querySelector(\".add-sample-prompt-sample-name\");\n        if (sampleNameElement != null) {\n            const sampleName: string = this._getSampleName(this._entries[entryIndex]);\n            sampleNameElement.innerText = sampleName;\n            sampleNameElement.title = sampleName;\n        }\n    }\n\n    private _whenSampleRateChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const value: number = clamp(8000, 96000 + 1, parseFloatWithDefault(element.value, 44100));\n        this._entries[entryIndex].sampleRate = value;\n    }\n\n    private _whenRootKeyChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const value: number = parseFloatWithDefault(element.value, 60);\n        this._entries[entryIndex].rootKey = value;\n        const rootKeyDisplay: HTMLSpanElement | null | undefined = element.parentNode?.parentNode?.querySelector(\".add-sample-prompt-root-key-display\");\n        if (rootKeyDisplay != null) {\n            const noteName: string = this._noteNameFromPitchNumber(this._entries[entryIndex].rootKey);\n            if (noteName !== \"\") {\n                rootKeyDisplay.innerText = `(${noteName})`;\n            }\n        }\n    }\n\n    private _whenPercussionChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        this._entries[entryIndex].percussion = element.checked ? true : false;\n    }\n\n    private _whenChipWaveLoopStartChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const value: number | null = parseIntWithDefault(element.value, null);\n        this._entries[entryIndex].chipWaveLoopStart = value;\n    }\n\n    private _whenChipWaveLoopEndChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const value: number | null = parseIntWithDefault(element.value, null);\n        this._entries[entryIndex].chipWaveLoopEnd = value;\n    }\n\n    private _whenChipWaveStartOffsetChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const value: number | null = parseIntWithDefault(element.value, null);\n        this._entries[entryIndex].chipWaveStartOffset = value;\n    }\n\n    private _whenChipWaveLoopModeChanges = (event: Event): void => {\n        const element: HTMLSelectElement = <HTMLSelectElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const newValue: number = +element.value;\n        if (newValue === -1) {\n            this._entries[entryIndex].chipWaveLoopMode = null;\n        } else {\n            this._entries[entryIndex].chipWaveLoopMode = newValue;\n        }\n    }\n\n    private _whenChipWavePlayBackwardsChanges = (event: Event): void => {\n        const element: HTMLInputElement = <HTMLInputElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const newValue: boolean = element.checked;\n        this._entries[entryIndex].chipWavePlayBackwards = newValue;\n    }\n\n    // @TODO: This is copy pasted from SongEditor, should probably be moved to\n    //        somewhere else that can be imported from both places.\n    private _copyTextToClipboard(text: string): void {\n        // Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\n        let nav: any;\n        nav = navigator;\n\n        if (nav.clipboard && nav.clipboard.writeText) {\n            nav.clipboard.writeText(text).catch(() => {\n                window.prompt(\"Copy to clipboard:\", text);\n            });\n            return;\n        }\n        const textField: HTMLTextAreaElement = document.createElement(\"textarea\");\n        textField.textContent = text;\n        document.body.appendChild(textField);\n        textField.select();\n        const succeeded: boolean = document.execCommand(\"copy\");\n        textField.remove();\n        this.container.focus({ preventScroll: true });\n        if (!succeeded) window.prompt(\"Copy this:\", text);\n    }\n\n    private _whenCopyLinkPresetClicked = (event: Event): void => {\n        const element: HTMLButtonElement = <HTMLButtonElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        this._copyTextToClipboard(this._generateURLDataForEntry(this._entries[entryIndex]));\n    }\n\n    private _whenRemoveSampleClicked = (event: Event): void => {\n        const element: HTMLButtonElement = <HTMLButtonElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        this._entryOptionsDisplayStates[entryIndex] = false;\n        this._entries.splice(entryIndex, 1);\n        this._reconfigureAddSampleButton();\n        this._render(false);\n    }\n\n    private _whenMoveSampleUpClicked = (event: Event): void => {\n        const element: HTMLButtonElement = <HTMLButtonElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const upEntryIndex: number = entryIndex - 1;\n        if (this._entries.length >= 2 && upEntryIndex >= 0) {\n            const upEntry: SampleEntry = this._entries[upEntryIndex];\n            const entry: SampleEntry = this._entries[entryIndex];\n            const upEntryOptionsVisibility: boolean = this._entryOptionsDisplayStates[upEntryIndex];\n            const entryOptionsVisibility: boolean = this._entryOptionsDisplayStates[entryIndex];\n            this._entries[upEntryIndex] = entry;\n            this._entries[entryIndex] = upEntry;\n            this._entryOptionsDisplayStates[upEntryIndex] = entryOptionsVisibility;\n            this._entryOptionsDisplayStates[entryIndex] = upEntryOptionsVisibility;\n            this._render(false);\n        }\n    }\n\n    private _whenMoveSampleDownClicked = (event: Event): void => {\n        const element: HTMLButtonElement = <HTMLButtonElement>event.target;\n        const entryIndex: number = +(element.dataset.index!);\n        const downEntryIndex: number = entryIndex + 1;\n        if (this._entries.length >= 2 && downEntryIndex < this._entries.length) {\n            const downEntry: SampleEntry = this._entries[downEntryIndex];\n            const entry: SampleEntry = this._entries[entryIndex];\n            const downEntryOptionsVisibility: boolean = this._entryOptionsDisplayStates[downEntryIndex];\n            const entryOptionsVisibility: boolean = this._entryOptionsDisplayStates[entryIndex];\n            this._entries[downEntryIndex] = entry;\n            this._entries[entryIndex] = downEntry;\n            this._entryOptionsDisplayStates[downEntryIndex] = entryOptionsVisibility;\n            this._entryOptionsDisplayStates[entryIndex] = downEntryOptionsVisibility;\n            this._render(false);\n        }\n    }\n\n    private _reconfigureAddSampleButton = (): void => {\n        if (this._entries.length >= this._maxSamples) {\n            this._addSampleButton.style.display = \"none\";\n        } else {\n            this._addSampleButton.style.display = \"\";\n        }\n    }\n\n    private _parseURLs = (urls: string[], parseOldSyntax: boolean): ParsedEntries => {\n        // @TODO: Duplicated code like this isn't great (in this case coming from Song.fromBase64String).\n        function sliceForSampleRate(url: string): [string, number] {\n            const newUrl = url.slice(0, url.indexOf(\",\"));\n            const sampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\n            return [newUrl, sampleRate];\n        }\n        function sliceForRootKey(url: string): [string, number] {\n            const newUrl = url.slice(0, url.indexOf(\"!\"));\n            const rootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\n            return [newUrl, rootKey];\n        }\n        let useLegacySamples: boolean = false;\n        let useNintariboxSamples: boolean = false;\n        let useMarioPaintboxSamples: boolean = false;\n        const parsedEntries: SampleEntry[] = [];\n        for (const url of urls) {\n            if (url === \"\") continue;\n            if (url.toLowerCase() === \"legacysamples\") {\n                if (!useLegacySamples) {\n                    parsedEntries.push({\n                        url: \"legacySamples\",\n                        sampleRate: 44100,\n                        rootKey: 60,\n                        percussion: false,\n                        chipWaveLoopStart: null,\n                        chipWaveLoopEnd: null,\n                        chipWaveStartOffset: null,\n                        chipWaveLoopMode: null,\n                        chipWavePlayBackwards: false,\n                    });\n                }\n                useLegacySamples = true;\n            } else if (url.toLowerCase() === \"nintariboxsamples\") {\n                if (!useNintariboxSamples) {\n                    parsedEntries.push({\n                        url: \"nintariboxSamples\",\n                        sampleRate: 44100,\n                        rootKey: 60,\n                        percussion: false,\n                        chipWaveLoopStart: null,\n                        chipWaveLoopEnd: null,\n                        chipWaveStartOffset: null,\n                        chipWaveLoopMode: null,\n                        chipWavePlayBackwards: false,\n                    });\n                }\n                useNintariboxSamples = true;\n            } else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                if (!useMarioPaintboxSamples) {\n                    parsedEntries.push({\n                        url: \"marioPaintboxSamples\",\n                        sampleRate: 44100,\n                        rootKey: 60,\n                        percussion: false,\n                        chipWaveLoopStart: null,\n                        chipWaveLoopEnd: null,\n                        chipWaveStartOffset: null,\n                        chipWaveLoopMode: null,\n                        chipWavePlayBackwards: false,\n                    });\n                }\n                useMarioPaintboxSamples = true;\n            } else {\n                let urlSliced: string = url;\n                let sampleRate: number = 44100;\n                let rootKey: number = 60;\n                let percussion: boolean = false;\n                let chipWaveLoopStart: number | null = null;\n                let chipWaveLoopEnd: number | null = null;\n                let chipWaveStartOffset: number | null = null;\n                let chipWaveLoopMode: number | null = null;\n                let chipWavePlayBackwards: boolean = false;\n                let optionsStartIndex: number = url.indexOf(\"!\");\n                let optionsEndIndex: number = -1;\n                let parsedSampleOptions: boolean = false;\n                if (optionsStartIndex === 0) {\n                    optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\n                    if (optionsEndIndex !== -1) {\n                        const rawOptions: string[] = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\n                        for (const rawOption of rawOptions) {\n                            const optionCode: string = rawOption.charAt(0);\n                            const optionData: string = rawOption.slice(1, rawOption.length);\n                            if (optionCode === \"s\") {\n                                sampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\n                            } else if (optionCode === \"r\") {\n                                rootKey = parseFloatWithDefault(optionData, 60);\n                            } else if (optionCode === \"p\") {\n                                percussion = true;\n                            } else if (optionCode === \"a\") {\n                                chipWaveLoopStart = parseIntWithDefault(optionData, null);\n                            } else if (optionCode === \"b\") {\n                                chipWaveLoopEnd = parseIntWithDefault(optionData, null);\n                            } else if (optionCode === \"c\") {\n                                chipWaveStartOffset = parseIntWithDefault(optionData, null);\n                            } else if (optionCode === \"d\") {\n                                chipWaveLoopMode = parseIntWithDefault(optionData, null);\n                                if (chipWaveLoopMode != null) {\n                                    // @TODO: Error-prone. This should be\n                                    // automatically derived from the list of\n                                    // available loop modes.\n                                    chipWaveLoopMode = clamp(0, 3 + 1, chipWaveLoopMode);\n                                }\n                            } else if (optionCode === \"e\") {\n                                chipWavePlayBackwards = true;\n                            }\n                        }\n                        urlSliced = url.slice(optionsEndIndex + 1, url.length);\n                        parsedSampleOptions = true;\n                    }\n                }\n                if (parseOldSyntax) {\n                    if (!parsedSampleOptions) {\n                        if (url.indexOf(\"@\") != -1) {\n                            urlSliced = url.replaceAll(\"@\", \"\");\n                            percussion = true;\n                        }\n                        if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\n                            if (url.indexOf(\",\") < url.indexOf(\"!\")) {\n                                [urlSliced, rootKey] = sliceForRootKey(urlSliced);\n                                [urlSliced, sampleRate] = sliceForSampleRate(urlSliced);\n                            }\n                            else {\n                                [urlSliced, sampleRate] = sliceForSampleRate(urlSliced);\n                                [urlSliced, rootKey] = sliceForRootKey(urlSliced);\n                            }\n                        }\n                        else {\n                            if (url.indexOf(\",\") != -1) {\n                                [urlSliced, sampleRate] = sliceForSampleRate(urlSliced);\n                            }\n                            if (url.indexOf(\"!\") != -1) {\n                                [urlSliced, rootKey] = sliceForRootKey(urlSliced);\n                            }\n                        }\n                    }\n                }\n                parsedEntries.push({\n                    url: urlSliced,\n                    sampleRate: sampleRate,\n                    rootKey: rootKey,\n                    percussion: percussion,\n                    chipWaveLoopStart: chipWaveLoopStart,\n                    chipWaveLoopEnd: chipWaveLoopEnd,\n                    chipWaveStartOffset: chipWaveStartOffset,\n                    chipWaveLoopMode: chipWaveLoopMode,\n                    chipWavePlayBackwards: chipWavePlayBackwards,\n                });\n            }\n        }\n        return { entries: parsedEntries };\n    }\n\n    private _generateURLDataForEntry = (entry: SampleEntry): string => {\n        const url: string = entry.url.trim();\n        const sampleRate: number = entry.sampleRate;\n        const rootKey: number = entry.rootKey;\n        const percussion: boolean = entry.percussion;\n        const chipWaveLoopStart: number | null = entry.chipWaveLoopStart;\n        const chipWaveLoopEnd: number | null = entry.chipWaveLoopEnd;\n        const chipWaveStartOffset: number | null = entry.chipWaveStartOffset;\n        const chipWaveLoopMode: number | null = entry.chipWaveLoopMode;\n        const chipWavePlayBackwards: boolean = entry.chipWavePlayBackwards;\n        const urlInLowerCase: string = url.toLowerCase();\n        const isBundledSamplePack: boolean = (\n            urlInLowerCase === \"legacysamples\"\n            || urlInLowerCase === \"nintariboxsamples\"\n            || urlInLowerCase === \"mariopaintboxsamples\"\n        );\n        const options: string[] = [];\n        if (sampleRate !== 44100) options.push(\"s\" + sampleRate);\n        if (rootKey !== 60) options.push(\"r\" + rootKey);\n        if (percussion) options.push(\"p\");\n        if (chipWaveLoopStart != null) options.push(\"a\" + chipWaveLoopStart);\n        if (chipWaveLoopEnd != null) options.push(\"b\" + chipWaveLoopEnd);\n        if (chipWaveStartOffset != null) options.push(\"c\" + chipWaveStartOffset);\n        if (chipWaveLoopMode != null) options.push(\"d\" + chipWaveLoopMode);\n        if (chipWavePlayBackwards) options.push(\"e\");\n        if (isBundledSamplePack || options.length <= 0) {\n            return url;\n        } else {\n            return \"!\" + options.join(\",\") + \"!\" + url;\n        }\n    }\n\n    private _generateURLData = (): string => {\n        let output = \"\";\n        for (const entry of this._entries) {\n            const url: string = entry.url.trim();\n            if (url === \"\") continue;\n            output += \"|\" + this._generateURLDataForEntry(entry);\n        }\n        return output;\n    }\n\n    private _getSampleName = (entry: SampleEntry): string => {\n        try {\n            const parsedUrl: URL = new URL(entry.url);\n            return decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\n        } catch (error) {\n            return entry.url;\n        }\n    }\n\n    private _noteNameFromPitchNumber = (n: number): string => {\n        function wrap(x: number, b: number): number {\n            return (x % b + b) % b;\n        }\n        n = Math.floor(n) - 12;\n        const pitchNameIndex: number = wrap(n + Config.keys[this._doc.song.key].basePitch, Config.pitchesPerOctave);\n        let pitch: string = \"\";\n        if (Config.keys[pitchNameIndex].isWhiteKey) {\n            pitch = Config.keys[pitchNameIndex].name;\n        }\n        else {\n            const shiftDir: number = Config.blackKeyNameParents[wrap(n, Config.pitchesPerOctave)];\n            pitch = Config.keys[wrap(pitchNameIndex + Config.pitchesPerOctave + shiftDir, Config.pitchesPerOctave)].name;\n            if (shiftDir == 1) {\n                pitch += \"♭\";\n            }\n            else if (shiftDir == -1) {\n                pitch += \"♯\";\n            }\n        }\n        pitch += Math.floor(n / Config.pitchesPerOctave);\n        return pitch;\n    }\n\n    private _render = (scrollToBottom: boolean): void => {\n        // @TODO: This is very much not efficient. The slowness here\n        // isn't harmless if more samples are to be allowed.\n        while (this._entryContainer.firstChild !== null) {\n            this._entryContainer.removeChild(this._entryContainer.firstChild);\n        }\n        for (let entryIndex: number = 0; entryIndex < this._entries.length; entryIndex++) {\n            const canMoveUp: boolean = this._entries.length >= 2 && entryIndex > 0;\n            const canMoveDown: boolean = this._entries.length >= 2 && entryIndex < this._entries.length - 1;\n            const entry: SampleEntry = this._entries[entryIndex];\n            const optionsVisible: boolean = Boolean(this._entryOptionsDisplayStates[entryIndex]);\n            const urlInput: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", value: entry.url });\n            const sampleRateStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + entry.sampleRate, min: \"8000\", max: \"96000\", step: \"1\" });\n            const rootKeyStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + entry.rootKey, min: \"0\", max: Config.maxPitch + Config.pitchesPerOctave, step: \"1\" });\n            const rootKeyDisplay: HTMLSpanElement = span({ class: \"add-sample-prompt-root-key-display\", style: \"margin-left: 0.4em; width: 3em; text-align: left; text-overflow: ellipsis; overflow: hidden; flex-shrink: 0;\" }, `(${this._noteNameFromPitchNumber(entry.rootKey)})`);\n            const percussionBox: HTMLInputElement = input({ style: \"width: 1em; margin-left: 1em;\", type: \"checkbox\" });\n            const chipWaveLoopStartStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + (entry.chipWaveLoopStart != null ? entry.chipWaveLoopStart : \"\"), min: \"0\", step: \"1\" });\n            const chipWaveLoopEndStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + (entry.chipWaveLoopEnd != null ? entry.chipWaveLoopEnd : \"\"), min: \"0\", step: \"1\" });\n            const chipWaveStartOffsetStepper: HTMLInputElement = input({ style: \"flex-grow: 1; margin-left: 1em; width: 100%;\", type: \"number\", value: \"\" + (entry.chipWaveStartOffset != null ? entry.chipWaveStartOffset : \"\"), min: \"0\", step: \"1\" });\n            const chipWaveLoopModeSelect: HTMLSelectElement = select({ style: \"width: 100%; flex-grow: 1; margin-left: 0.5em;\" },\n                option({ value: -1 }, \"\"),\n                option({ value: 0 }, \"Loop\"),\n                option({ value: 1 }, \"Ping-Pong\"),\n                option({ value: 2 }, \"Play Once\"),\n                option({ value: 3 }, \"Play Loop Once\"),\n            );\n            if (entry.chipWaveLoopMode != null) {\n                chipWaveLoopModeSelect.value = \"\" + entry.chipWaveLoopMode;\n            }\n            const chipWavePlayBackwardsBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: auto; margin-right: auto;\" });\n            chipWavePlayBackwardsBox.checked = entry.chipWavePlayBackwards;\n            const sampleName: string = this._getSampleName(entry);\n            percussionBox.checked = entry.percussion;\n            const copyLinkPresetButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size);\", title: \"For use with \\\"Add multiple samples\\\"\" }, \"Copy link preset\");\n            const removeButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 0.5em;\" }, \"Remove\");\n            const moveUpButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 0.5em;\" }, SVG.svg({ width: \"16\", height: \"16\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.path({ d: \"M -6 6 L 0 -6 L 6 6 z\", fill: ColorConfig.primaryText })));\n            const moveDownButton: HTMLButtonElement = button({ style: \"height: auto; min-height: var(--button-size); margin-left: 0.5em;\" }, SVG.svg({ width: \"16\", height: \"16\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.path({ d: \"M -6 -6 L 6 -6 L 0 6 z\", fill: ColorConfig.primaryText })));\n            const optionsContainer: HTMLDetailsElement = details(\n                { open: optionsVisible, style: \"margin-bottom: 2em; margin-top: 1em;\" },\n                summary({ style: \"margin-bottom: 1em;\" }, \"Options\"),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\n                    div({ style: `flex-shrink: 0; :text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"What rate to resample to\" }, \"Sample rate\")),\n                    sampleRateStepper\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText}; flex-shrink: 0;` }, span({ title: \"Pitch where the sample is played as-is\" }, \"Root key\")),\n                    rootKeyDisplay,\n                    rootKeyStepper\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between; margin-bottom: 0.5em;\" },\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText};` }, \"Percussion (pitch doesn't change with key)\"),\n                    percussionBox\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Loop Start\\\" loop control option of the preset created for this sample\" }, \"Loop Start\")),\n                    chipWaveLoopStartStepper\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Loop End\\\" loop control option of the preset created for this sample\" }, \"Loop End\")),\n                    chipWaveLoopEndStepper\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Offset\\\" loop control option of the preset created for this sample\" }, \"Sample Start Offset\")),\n                    chipWaveStartOffsetStepper\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Loop Mode\\\" loop control option of the preset created for this sample\" }, \"Loop Mode\")),\n                    chipWaveLoopModeSelect\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\n                    div({ style: `flex-shrink: 0; text-align: right; color: ${ColorConfig.primaryText};` }, span({ title: \"Applies to the \\\"Backwards\\\" loop control option of the preset created for this sample\" }, \"Backwards\")),\n                    chipWavePlayBackwardsBox\n                ),\n            );\n            urlInput.dataset.index = \"\" + entryIndex;\n            sampleRateStepper.dataset.index = \"\" + entryIndex;\n            rootKeyStepper.dataset.index = \"\" + entryIndex;\n            percussionBox.dataset.index = \"\" + entryIndex;\n            chipWaveLoopStartStepper.dataset.index = \"\" + entryIndex;\n            chipWaveLoopEndStepper.dataset.index = \"\" + entryIndex;\n            chipWaveStartOffsetStepper.dataset.index = \"\" + entryIndex;\n            chipWaveLoopModeSelect.dataset.index = \"\" + entryIndex;\n            chipWavePlayBackwardsBox.dataset.index = \"\" + entryIndex;\n            copyLinkPresetButton.dataset.index = \"\" + entryIndex;\n            removeButton.dataset.index = \"\" + entryIndex;\n            moveUpButton.dataset.index = \"\" + entryIndex;\n            moveDownButton.dataset.index = \"\" + entryIndex;\n            optionsContainer.dataset.index = \"\" + entryIndex;\n            const bottomButtons: HTMLDivElement = div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end;\" }, copyLinkPresetButton, removeButton);\n            if (canMoveUp) {\n                bottomButtons.appendChild(moveUpButton);\n            }\n            if (canMoveDown) {\n                bottomButtons.appendChild(moveDownButton);\n            }\n            const entryElement: HTMLDivElement = div({ style: `padding: 0.6em; margin: 0.4em; border: 1px solid ${ColorConfig.uiWidgetBackground}; border-radius: 4px;` },\n                div({\n                    class: \"add-sample-prompt-sample-name\",\n                    style: `margin-bottom: 0.5em; color: ${ColorConfig.secondaryText}; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;`,\n                    title: sampleName,\n                },\n                    sampleName\n                ),\n                div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: flex-end; margin-bottom: 0.5em;\" },\n                    div({ style: `text-align: right; color: ${ColorConfig.primaryText};` }, \"URL\"),\n                    urlInput\n                ),\n                optionsContainer,\n                bottomButtons\n            );\n            optionsContainer.addEventListener(\"toggle\", this._whenOptionsAreToggled);\n            urlInput.addEventListener(\"change\", this._whenURLChanges);\n            sampleRateStepper.addEventListener(\"change\", this._whenSampleRateChanges);\n            rootKeyStepper.addEventListener(\"change\", this._whenRootKeyChanges);\n            percussionBox.addEventListener(\"change\", this._whenPercussionChanges);\n            chipWaveLoopStartStepper.addEventListener(\"change\", this._whenChipWaveLoopStartChanges);\n            chipWaveLoopEndStepper.addEventListener(\"change\", this._whenChipWaveLoopEndChanges);\n            chipWaveStartOffsetStepper.addEventListener(\"change\", this._whenChipWaveStartOffsetChanges);\n            chipWaveLoopModeSelect.addEventListener(\"change\", this._whenChipWaveLoopModeChanges);\n            chipWavePlayBackwardsBox.addEventListener(\"change\", this._whenChipWavePlayBackwardsChanges);\n            copyLinkPresetButton.addEventListener(\"click\", this._whenCopyLinkPresetClicked);\n            removeButton.addEventListener(\"click\", this._whenRemoveSampleClicked);\n            if (canMoveUp) {\n                moveUpButton.addEventListener(\"click\", this._whenMoveSampleUpClicked);\n            }\n            if (canMoveDown) {\n                moveDownButton.addEventListener(\"click\", this._whenMoveSampleDownClicked);\n            }\n            this._entryContainer.appendChild(entryElement);\n            const thisIsTheLastElement: boolean = entryIndex === this._entries.length - 1;\n            if (scrollToBottom && thisIsTheLastElement) {\n                entryElement.scrollIntoView({ \"block\": \"nearest\", \"inline\": \"nearest\" });\n            }\n        }\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n//import {Layout} from \"./Layout\";\nimport { sampleLoadEvents, SampleLoadedEvent, InstrumentType, EffectType, Config, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, DropdownID } from \"../synth/SynthConfig\";\nimport { BarScrollBar } from \"./BarScrollBar\";\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\nimport { Change, ChangeGroup } from \"./Change\";\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\nimport { CustomFilterPrompt } from \"./CustomFilterPrompt\";\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\nimport { EuclideanRhythmPrompt } from \"./EuclidgenRhythmPrompt\";\nimport { ExportPrompt } from \"./ExportPrompt\";\nimport \"./Layout\"; // Imported here for the sake of ensuring this code is transpiled early.\nimport { Instrument, Channel, Synth } from \"../synth/synth\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Preferences } from \"./Preferences\";\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\nimport { InputBox, Slider } from \"./HTMLWrapper\";\nimport { ImportPrompt } from \"./ImportPrompt\";\nimport { LayoutPrompt } from \"./LayoutPrompt\";\nimport { EnvelopeEditor } from \"./EnvelopeEditor\";\nimport { FadeInOutEditor } from \"./FadeInOutEditor\";\nimport { FilterEditor } from \"./FilterEditor\";\nimport { LimiterPrompt } from \"./LimiterPrompt\";\nimport { CustomScalePrompt } from \"./CustomScalePrompt\";\nimport { LoopEditor } from \"./LoopEditor\";\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\nimport { MuteEditor } from \"./MuteEditor\";\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\nimport { MidiInputHandler } from \"./MidiInput\";\nimport { KeyboardLayout } from \"./KeyboardLayout\";\nimport { PatternEditor } from \"./PatternEditor\";\nimport { Piano } from \"./Piano\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\nimport { RecordingSetupPrompt } from \"./RecordingSetupPrompt\";\nimport { SpectrumEditor } from \"./SpectrumEditor\";\nimport { CustomPrompt } from \"./CustomPrompt\";\nimport { ThemePrompt } from \"./ThemePrompt\";\nimport { TipPrompt } from \"./TipPrompt\";\nimport { ChangeTempo, ChangeKeyOctave, ChangeChorus, ChangeEchoDelay, ChangeEchoSustain, ChangeReverb, ChangeVolume, ChangePan, ChangePatternSelection, ChangePatternsPerChannel, ChangePatternNumbers, ChangePulseWidth, ChangeFeedbackAmplitude, ChangeOperatorAmplitude, ChangeOperatorFrequency, ChangeDrumsetEnvelope, ChangePasteInstrument, ChangePreset, pickRandomPresetValue, ChangeRandomGeneratedInstrument, ChangeEQFilterType, ChangeNoteFilterType, ChangeEQFilterSimpleCut, ChangeEQFilterSimplePeak, ChangeNoteFilterSimpleCut, ChangeNoteFilterSimplePeak, ChangeScale, ChangeDetectKey, ChangeKey, ChangeRhythm, ChangeFeedbackType, ChangeAlgorithm, ChangeChipWave, ChangeNoiseWave, ChangeTransition, ChangeToggleEffects, ChangeVibrato, ChangeUnison, ChangeChord, ChangeSong, ChangePitchShift, ChangeDetune, ChangeDistortion, ChangeStringSustain, ChangeBitcrusherFreq, ChangeBitcrusherQuantization, ChangeAddEnvelope, ChangeAddChannelInstrument, ChangeRemoveChannelInstrument, ChangeCustomWave, ChangeOperatorWaveform, ChangeOperatorPulseWidth, ChangeSongTitle, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangeVibratoType, ChangePanDelay, ChangeArpeggioSpeed, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeAliasing, ChangeChipWavePlayBackwards, ChangeChipWaveStartOffset, ChangeChipWaveLoopEnd, ChangeChipWaveLoopStart, ChangeChipWaveLoopMode, ChangeChipWaveUseAdvancedLoopControls, ChangeDecimalOffset, ChangeUnisonVoices, ChangeUnisonSpread, ChangeUnisonOffset, ChangeUnisonExpression, ChangeUnisonSign } from \"./changes\";\nimport { Change6OpFeedbackType, Change6OpAlgorithm, ChangeCustomAlgorythmorFeedback} from \"./changes\"\n\nimport { TrackEditor } from \"./TrackEditor\";\nimport {oscilascopeCanvas} from \"../global/Oscilascope\";\nimport { VisualLoopControlsPrompt } from \"./VisualLoopControlsPrompt\";\nimport { SampleLoadingStatusPrompt } from \"./SampleLoadingStatusPrompt\";\nimport { AddSamplesPrompt } from \"./AddSamplesPrompt\";\n\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\n\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\n    for (let index: number = 0; index < items.length; index++) {\n        menu.appendChild(option({ value: index }, items[index]));\n    }\n    return menu;\n}\n\n// Similar to the above, but adds a non-interactive header to the list.\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\n\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\n    menu.appendChild(option({ selected: true, disabled: true, value: header }, header));\n\n    for (const item of items) {\n        menu.appendChild(option({ value: item }, item));\n    }\n    return menu;\n}\n\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\n    const menu: HTMLSelectElement = select({ id: idSet });\n\n\n    // Show the \"spectrum\" custom type in both pitched and noise channels.\n    //const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\n    if (isNoise) {\n        menu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\n        menu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\n        menu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\n    } else {\n        menu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\n        menu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\n        menu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\n        menu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\n        menu.appendChild(option({ value: InstrumentType.fm6op }, EditorConfig.instrumentToPreset(InstrumentType.fm6op)!.name));\n        menu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\n        menu.appendChild(option({ value: InstrumentType.pickedString }, EditorConfig.valueToPreset(InstrumentType.pickedString)!.name));\n        menu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\n        menu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\n    }\n\n    const randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\n    randomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\n    randomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\n    menu.appendChild(randomGroup);\n\n    let firstCategoryGroup: HTMLElement | null = null;\n    let customSampleCategoryGroup: HTMLElement | null = null;\n\n    for (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n        const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n        const group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\n        let foundAny: boolean = false;\n        for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n            const preset: Preset = category.presets[presetIndex];\n            if ((preset.isNoise == true) == isNoise) {\n                group.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\n                foundAny = true;\n            }\n        }\n\n        if (categoryIndex === 1 && foundAny) {\n            firstCategoryGroup = group;\n        } else if (category.name === \"Custom Sample Presets\" && foundAny) {\n            customSampleCategoryGroup = group;\n        }\n\n        // Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\n        if (category.name == \"String Presets\" && foundAny) {\n\n            // Put violin 2 after violin 1\n            let moveViolin2 = group.removeChild(group.children[11]);\n            group.insertBefore(moveViolin2, group.children[1]);\n        }\n\n        if (category.name == \"Flute Presets\" && foundAny) {\n\n            // Put flute 2 after flute 1\n            let moveFlute2 = group.removeChild(group.children[11]);\n            group.insertBefore(moveFlute2, group.children[1]);\n        }\n\n        if (category.name == \"Keyboard Presets\" && foundAny) {\n\n            // Put grand piano 2 after grand piano 1\n            let moveGrandPiano2 = group.removeChild(group.children[9]);\n            group.insertBefore(moveGrandPiano2, group.children[1]);\n        }\n\n        if (foundAny) menu.appendChild(group);\n    }\n\n    if (firstCategoryGroup != null && customSampleCategoryGroup != null) {\n        // Put the custom sample presets at the top.\n        const parent: HTMLSelectElement = <HTMLSelectElement>customSampleCategoryGroup.parentNode;\n        parent.removeChild(customSampleCategoryGroup);\n        parent.insertBefore(customSampleCategoryGroup, firstCategoryGroup);\n    }\n\n    return menu;\n}\n\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\n    const stringValue = value.toString();\n    if (menu.value != stringValue) menu.value = stringValue;\n\n    // Change select2 value, if this select is a member of that class.\n    if ($(menu).data('select2')) {\n        $(menu).val(value).trigger('change.select2');\n    }\n}\n\nclass CustomChipCanvas {\n    private mouseDown: boolean;\n    private continuousEdit: boolean;\n    private lastX: number;\n    private lastY: number;\n    public newArray: Float32Array;\n\n    private _change: Change | null = null;\n\n    constructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float32Array) => Change) {\n        //canvas.addEventListener(\"input\", this._whenInput);\n        //canvas.addEventListener(\"change\", this._whenChange);\n        canvas.addEventListener(\"mousemove\", this._onMouseMove);\n        canvas.addEventListener(\"mousedown\", this._onMouseDown);\n        canvas.addEventListener(\"mouseup\", this._onMouseUp);\n        canvas.addEventListener(\"mouseleave\", this._onMouseUp);\n\n        this.mouseDown = false;\n        this.continuousEdit = false;\n        this.lastX = 0;\n        this.lastY = 0;\n\n        this.newArray = new Float32Array(64);\n\n        // Init waveform\n        this.redrawCanvas();\n\n    }\n\n    public redrawCanvas(): void {\n        var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n        // Black BG\n        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n        ctx.fillRect(0, 0, 128, 52);\n\n        // Mid-bar\n        ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\n        ctx.fillRect(0, 25, 128, 2);\n\n        // 25-75 bars\n        ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\n        ctx.fillRect(0, 13, 128, 1);\n        ctx.fillRect(0, 39, 128, 1);\n\n        // Waveform\n        ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n        for (let x: number = 0; x < 64; x++) {\n            var y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\n            ctx.fillRect(x * 2, y - 2, 2, 4);\n\n            this.newArray[x] = y - 26;\n        }\n    }\n\n    private _onMouseMove = (event: MouseEvent): void => {\n        if (this.mouseDown) {\n\n            var x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\n            var y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\n\n            if (y < 2) y = 2;\n            if (y > 50) y = 50;\n\n            var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n            if (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\n\n                var lowerBound = (x < this.lastX) ? x : this.lastX;\n                var upperBound = (x < this.lastX) ? this.lastX : x;\n\n                for (let i = lowerBound; i <= upperBound; i += 2) {\n\n                    var progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\n                        1.0 - ((i - lowerBound) / (upperBound - lowerBound))\n                        : ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\n                    var j = Math.round(y + (this.lastY - y) * progress);\n\n                    ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                    ctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\n                    ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\n                    ctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\n                    ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\n                    ctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\n                    ctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\n                    ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n                    ctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\n\n                    // Actually update current instrument's custom waveform\n                    this.newArray[Math.floor(i / 2)] = (j - 26);\n                }\n\n            }\n            else {\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\n                ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\n                ctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\n                ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\n                ctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\n                ctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\n                ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n                ctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\n\n                // Actually update current instrument's custom waveform\n                this.newArray[Math.floor(x / 2)] = (y - 26);\n\n            }\n\n            this.continuousEdit = true;\n            this.lastX = x;\n            this.lastY = y;\n\n            // Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\n            let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\n            let sum: number = 0.0;\n            for (let i: number = 0; i < this.newArray.length; i++) {\n                sum += this.newArray[i];\n            }\n            const average: number = sum / this.newArray.length;\n\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n            let cumulative: number = 0;\n            let wavePrev: number = 0;\n            for (let i: number = 0; i < this.newArray.length; i++) {\n                cumulative += wavePrev;\n                wavePrev = this.newArray[i] - average;\n                instrument.customChipWaveIntegral[i] = cumulative;\n            }\n\n            instrument.customChipWaveIntegral[64] = 0.0;\n        }\n\n    }\n\n    private _onMouseDown = (event: MouseEvent): void => {\n        this.mouseDown = true;\n\n        // Allow single-click edit\n        this._onMouseMove(event);\n    }\n    private _onMouseUp = (): void => {\n        this.mouseDown = false;\n        this.continuousEdit = false;\n\n        this._whenChange();\n    }\n\n    private _whenChange = (): void => {\n        this._change = this._getChange(this.newArray);\n\n        this._doc.record(this._change!);\n\n        this._change = null;\n    };\n\n}\n\n\nclass CustomAlgorythmCanvas {\n    private mouseDown: boolean;\n    //private continuousEdit: boolean;\n    //private lastX: number;\n    //private lastY: number;\n    public newMods: number[][];\n    public lookUpArray: number[][];\n    public selected: number;\n    public inverseModulation: number[][];\n    public feedback: number[][];\n    public inverseFeedback: number[][];\n    public carriers: number;\n    public drawArray: number[][];\n    public mode: string;\n\n    private _change: Change | null = null;\n\n    constructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: number[][], carry: number, mode: string) => Change) {\n        //canvas.addEventListener(\"input\", this._whenInput);\n        //canvas.addEventListener(\"change\", this._whenChange);\n        canvas.addEventListener(\"mousemove\", this._onMouseMove);\n        canvas.addEventListener(\"mousedown\", this._onMouseDown);\n        canvas.addEventListener(\"mouseup\", this._onMouseUp);\n        canvas.addEventListener(\"mouseleave\", this._onMouseUp);\n\n        this.mouseDown = false;\n        //this.continuousEdit = false;\n        //this.lastX = 0;\n        //this.lastY = 0;\n        this.drawArray = [[], [], [], [], [], []];\n        this.lookUpArray = [[], [], [], [], [], []];\n        this.carriers = 1;\n        this.selected = -1;\n        this.newMods = [[], [], [], [], [], []];\n        this.inverseModulation = [[], [], [], [], [], []];\n        this.feedback = [[], [], [], [], [], []];\n        this.inverseFeedback = [[], [], [], [], [], []];\n        this.mode = \"algorithm\";\n\n        this.redrawCanvas();\n\n    }\n\n    public reset(): void {\n        this.redrawCanvas(false);\n        this.selected = -1;\n    }\n\n    public fillDrawArray(noReset: boolean = false): void {\n        if (noReset) {\n            this.drawArray = [];\n            this.drawArray = [[], [], [], [], [], []];\n            this.inverseModulation = [[], [], [], [], [], []];\n            this.lookUpArray = [[], [], [], [], [], []];\n            for (let i: number = 0; i < this.newMods.length; i++) {\n                for (let o: number = 0; o < this.newMods[i].length; o++) {\n                    this.inverseModulation[this.newMods[i][o] - 1].push(i + 1);\n                }\n            }\n            if (this.mode == \"feedback\") {\n                this.inverseFeedback = [[], [], [], [], [], []];\n                for (let i: number = 0; i < this.feedback.length; i++) {\n                    for (let o: number = 0; o < this.feedback[i].length; o++) {\n                        this.inverseFeedback[this.feedback[i][o] - 1].push(i + 1);\n                    }\n                }\n            }\n        } else {\n            this.drawArray = [];\n            this.drawArray = [[], [], [], [], [], []];\n            this.carriers = 1;\n            this.newMods = [[], [], [], [], [], []];\n            this.inverseModulation = [[], [], [], [], [], []];\n            this.lookUpArray = [[], [], [], [], [], []];\n\n            var oldMods = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customAlgorithm;\n            this.carriers = oldMods.carrierCount;\n            for (let i: number = 0; i < oldMods.modulatedBy.length; i++) {\n                for (let o: number = 0; o < oldMods.modulatedBy[i].length; o++) {\n                    this.inverseModulation[oldMods.modulatedBy[i][o] - 1].push(i + 1);\n                    this.newMods[i][o] = oldMods.modulatedBy[i][o];\n                }\n            }\n            if (this.mode == \"feedback\") {\n                this.feedback = [[], [], [], [], [], []];\n                this.inverseFeedback = [[], [], [], [], [], []];\n\n                var oldfeed = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customFeedbackType.indices;\n                for (let i: number = 0; i < oldfeed.length; i++) {\n                    for (let o: number = 0; o < oldfeed[i].length; o++) {\n                        this.inverseFeedback[oldfeed[i][o] - 1].push(i + 1);\n                        this.feedback[i][o] = oldfeed[i][o];\n                    }\n                }\n            }\n        }\n        for (let i: number = 0; i < this.inverseModulation.length; i++) {\n            if (i < this.carriers) {\n                this.drawArray[this.drawArray.length - 1][i] = i + 1;\n                this.lookUpArray[i] = [0, i];\n            } else {\n                if (this.inverseModulation[i][0] != undefined) {\n                    let testPos = [this.drawArray.length - (this.lookUpArray[this.inverseModulation[i][this.inverseModulation[i].length - 1] - 1][0] + 2), this.lookUpArray[this.inverseModulation[i][this.inverseModulation[i].length - 1] - 1][1]];\n                    if (this.drawArray[testPos[0]][testPos[1]] != undefined) {\n                        while (this.drawArray[testPos[0]][testPos[1]] != undefined && testPos[1] < 6) {\n                            testPos[1]++;\n                            if (this.drawArray[testPos[0]][testPos[1]] == undefined) {\n                                this.drawArray[testPos[0]][testPos[1]] = i + 1;\n                                this.lookUpArray[i] = [this.drawArray.length - (testPos[0] + 1), testPos[1]];\n                                break;\n                            }\n                            console.log(testPos[1])\n                        }\n                    } else {\n                        this.drawArray[testPos[0] ][testPos[1]] = i + 1;\n                        this.lookUpArray[i] = [this.drawArray.length - (testPos[0] + 1), testPos[1]];\n                    }\n                } else {\n                    let testPos = [5, 0];\n                    while (this.drawArray[testPos[0]][testPos[1]] != undefined && testPos[1] < 6) {\n                        testPos[1]++;\n                        if (this.drawArray[testPos[0]][testPos[1]] == undefined) {\n                            this.drawArray[testPos[0]][testPos[1]] = i + 1;\n                            this.lookUpArray[i] = [this.drawArray.length - (testPos[0] + 1), testPos[1]];\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    private drawLines(ctx:CanvasRenderingContext2D):void {\n        if (this.mode == \"feedback\") {\n            for (let off: number = 0; off < 6; off++) {\n                ctx.strokeStyle = ColorConfig.getArbitaryChannelColor(\"pitch\", off).primaryChannel;\n                const set = off * 2  + 0.5;\n                for (let i: number = 0; i < this.inverseFeedback[off].length; i++) {\n                    let tar: number = this.inverseFeedback[off][i] - 1;\n\t\t\t\t\tlet srtpos:number[] = this.lookUpArray[off];\n\t\t\t\t\tlet tarpos:number[] = this.lookUpArray[tar];\n                    ctx.beginPath();\n                    ctx.moveTo(srtpos[1] * 24 + 12 + set, (6 - srtpos[0] - 1) * 24 + 12);\n                    ctx.lineTo(srtpos[1] * 24 + 12 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\n                    if (tarpos[1] != srtpos[1]) {\n\t\t\t\t\t\tlet side:number =0;\n\t\t\t\t\t\tif(tarpos[0] >= srtpos[0]){\n\t\t\t\t\t\t\tside = 24;\n\t\t\t\t\t\t}\n                        ctx.lineTo(srtpos[1] * 24 + side + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\n                        if ((tarpos[1] == (srtpos[1] - 1)) && (tarpos[0] <= (srtpos[0] - 1))) {\n                        } else {\n\t\t\t\t\t\t\tif(tarpos[0] >= srtpos[0]){\n\t\t\t\t\t\t\t\tctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\n\t\t\t\t\t\t\t\tctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\n\t\t\t\t\t\t\t\tctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\n\t\t\t\t\t\t\t}\n                        }\n                        ctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n                        ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n                        ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\n                    } else {\n                        if (srtpos[0] - tarpos[0] == 1) {\n                            ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\n                        } else {\n\t\t\t\t\t\t\tif(tarpos[0] >= srtpos[0]){\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n\t\t\t\t\t\t\t\tctx.lineTo(tarpos[1] * 24 + set + 12, (6 - tarpos[0] - 1) * 24 + set - 12);\n\t\t\t\t\t\t\t\tctx.lineTo(tarpos[1] * 24 + set + 12, (6 - tarpos[0] - 1) * 24);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\n\t\t\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n\t\t\t\t\t\t\t\tctx.lineTo(tarpos[1] * 24 + 12 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n\t\t\t\t\t\t\t\tctx.lineTo(tarpos[1] * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\n\t\t\t\t\t\t\t}\n                        }\n                    }\n                    ctx.lineWidth = 1;\n                    ctx.stroke();\n                }\n            }\n            return;\n        };\n\n        for (let off: number = 0; off < 6; off++) {\n            ctx.strokeStyle = ColorConfig.getArbitaryChannelColor(\"pitch\", off).primaryChannel;\n            const set = off * 2 - 1 + 0.5;\n            for (let i: number = 0; i < this.inverseModulation[off].length; i++) {\n                let tar: number = this.inverseModulation[off][i] - 1;\n\t\t\t\tlet srtpos:number[] = this.lookUpArray[off];\n\t\t\t\tlet tarpos:number[] = this.lookUpArray[tar];\n                ctx.beginPath();\n                ctx.moveTo(srtpos[1] * 24 + 12 + set, (6 - srtpos[0] - 1) * 24 + 12);\n                ctx.lineTo(srtpos[1] * 24 + 12 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\n                if ((tarpos[1]) != srtpos[1]) {\n                    ctx.lineTo(srtpos[1] * 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\n                    if ((tarpos[1] == (srtpos[1] - 1)) && (tarpos[0] <= (srtpos[0] - 1))) {\n                    } else {\n                        ctx.lineTo(srtpos[1] * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\n                        ctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + 12 + set);\n                    }\n                    ctx.lineTo((tarpos[1] + 1) * 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n                    ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n                    ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\n                } else {\n                    if (Math.abs(tarpos[0] - srtpos[0]) == 1) {\n                        ctx.lineTo((tarpos[1]) * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\n                    } else {\n\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - srtpos[0] - 1) * 24 + 12 + set);\n\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + 12 + set, (6 - tarpos[0] - 1) * 24 + set - 12);\n\t\t\t\t\t\tctx.lineTo(srtpos[1] * 24 + 12 + set, (6 - tarpos[0] - 1) * 24);\n                    }\n                }\n                ctx.lineWidth = 1;\n                ctx.stroke();\n            }\n        }\n    }\n\n    public redrawCanvas(noReset:boolean = false): void {\n        this.fillDrawArray(noReset);\n        var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n        // Black BG\n        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n        ctx.fillRect(0, 0, 144, 144);\n        \n        for (let x: number = 0; x < 6; x++) {\n            for (let y: number = 0; y < 6; y++) {\n                ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\n                ctx.fillRect(x * 24 + 12, ((y) * 24), 12, 12);\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(x * 24 + 13, ((y) * 24)+1, 10, 10);\n                if (this.drawArray[y][x] != undefined) {\n                    if (this.drawArray[y][x] <= this.carriers) {\n                        ctx.fillStyle = ColorConfig.getComputed(\"--primary-text\");\n                        ctx.fillRect(x * 24 + 12, ((y) * 24), 12, 12);\n                        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                        ctx.fillRect(x * 24 + 13, ((y) * 24) + 1, 10, 10);\n                        ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n                        ctx.fillText(this.drawArray[y][x] + \"\", x * 24 + 14, y * 24+10);\n                    }\n                    else {\n                        ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n                        ctx.fillRect(x * 24 + 12, (y * 24), 12, 12);\n                        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                        ctx.fillRect(x * 24 + 13, ((y) * 24) + 1, 10, 10);\n                        ctx.fillStyle = ColorConfig.getComputed(\"--primary-text\");\n                        ctx.fillText(this.drawArray[y][x] + \"\", x * 24 + 14, y * 24+10);\n                    }\n                }\n            }\n        }\n        this.drawLines(ctx);\n        \n        //console.log(\"draw complete\")\n    }\n\n    private _onMouseMove = (event: MouseEvent): void => {\n        if (this.mouseDown) {//todo rework to handle draging and single clicks differently\n\n            var x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\n            var y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\n\n            var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n            ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n            var yindex = Math.ceil(y / 12)\n            var xindex = Math.ceil(x / 12)\n            yindex = (yindex/2)-Math.floor(yindex / 2) >= 0.5 ? Math.floor(yindex / 2) : -1;\n            xindex = (xindex / 2)+0.5 - Math.floor(xindex / 2) <= 0.5 ? Math.floor(xindex / 2)-1 : -1;\n            yindex = yindex >= 0 && yindex <= 5 ? yindex : -1;\n            xindex = xindex >= 0 && xindex <= 5 ? xindex : -1;\n            ctx.fillRect(xindex * 24+12, yindex * 24, 2, 2);\n\n            if (this.selected == -1) {\n                if (this.drawArray ?.[yindex] ?.[xindex] != undefined) {\n                    this.selected = this.drawArray[yindex][xindex];\n                    ctx.fillRect(xindex * 24 + 12, yindex * 24, 12, 12);\n                    ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                    ctx.fillText(this.drawArray[yindex][xindex] + \"\", xindex * 24 + 14, yindex * 24 + 10);\n                    this.mouseDown = false;\n                }\n            } else {\n                if (this.drawArray ?.[yindex] ?.[xindex] != undefined) {\n\t\t\t\t\tif(this.mode == \"feedback\"){\n                        const newmod = this.drawArray[yindex][xindex]\n\t\t\t\t\t\tlet check = this.feedback[newmod - 1].indexOf(this.selected);\n\t\t\t\t\t\tif (check != -1) {\n\t\t\t\t\t\t\tthis.feedback[newmod - 1].splice(check, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.feedback[newmod - 1].push(this.selected);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.drawArray[yindex][xindex] == this.selected) {\n\t\t\t\t\t\t\tif (this.selected == this.carriers) {\n\t\t\t\t\t\t\t\tif (this.selected > 1) {\n\t\t\t\t\t\t\t\t\tthis.carriers--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (this.selected - 1 == this.carriers) {\n\t\t\t\t\t\t\t\tthis.carriers++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst newmod = this.drawArray[yindex][xindex]\n\t\t\t\t\t\t\tif (this.selected > newmod) { //todo try to rebalence then do this in algorithm mode otherwise input as needed\n\t\t\t\t\t\t\t\tlet check = this.newMods[newmod - 1].indexOf(this.selected);\n\t\t\t\t\t\t\t\tif (check != -1) {\n\t\t\t\t\t\t\t\t\tthis.newMods[newmod - 1].splice(check, 1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.newMods[newmod - 1].push(this.selected);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet check = this.newMods[this.selected - 1].indexOf(newmod);\n\t\t\t\t\t\t\t\tif (check != -1) {\n\t\t\t\t\t\t\t\t\tthis.newMods[this.selected - 1].splice(check, 1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.newMods[this.selected - 1].push(newmod);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                    this.selected = -1;\n                    this.redrawCanvas(true);\n                    this.mouseDown = false;\n                } else {\n                    this.selected = -1;\n                    this.redrawCanvas(true);\n                    this.mouseDown = false;\n                }\n            }\n\n\n        }\n\n    }\n\n    private _onMouseDown = (event: MouseEvent): void => {\n        this.mouseDown = true;\n\n        // Allow single-click edit\n        this._onMouseMove(event);\n    }\n    private _onMouseUp = (): void => {\n        this.mouseDown = false;\n        //this.continuousEdit = false;\n\n        this._whenChange();\n    }\n\n    private _whenChange = (): void => {\n        this._change = this._getChange(this.mode == \"algorithm\" ? this.newMods : this.feedback, this.carriers, this.mode);\n\n        this._doc.record(this._change!);\n\n        this._change = null;\n    };\n\n}\n\nexport class SongEditor {\n    public prompt: Prompt | null = null;\n\n    private readonly _keyboardLayout: KeyboardLayout = new KeyboardLayout(this._doc);\n    private readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\n    private readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\n    private readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\n    private readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\n    private readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\n    private readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\n    private readonly _piano: Piano = new Piano(this._doc);\n    private readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\n    private readonly _playButton: HTMLButtonElement = button({ class: \"playButton\", type: \"button\", title: \"Play (Space)\" }, span(\"Play\"));\n    private readonly _pauseButton: HTMLButtonElement = button({ class: \"pauseButton\", style: \"display: none;\", type: \"button\", title: \"Pause (Space)\" }, \"Pause\");\n    private readonly _recordButton: HTMLButtonElement = button({ class: \"recordButton\", style: \"display: none;\", type: \"button\", title: \"Record (Ctrl+Space)\" }, span(\"Record\"));\n    private readonly _stopButton: HTMLButtonElement = button({ class: \"stopButton\", style: \"display: none;\", type: \"button\", title: \"Stop Recording (Space)\" }, \"Stop Recording\");\n    private readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", type: \"button\", title: \"Previous Bar (left bracket)\" });\n    private readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", type: \"button\", title: \"Next Bar (right bracket)\" });\n    private readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\n    private readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\n    private readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\n    private readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\n    private readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\n    private readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\n    private readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\n    private readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\n    private readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\n    private readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\n        this._defs,\n        this._outVolumeBarBg,\n        this._outVolumeBar,\n        this._outVolumeCap,\n    );\n    private readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\n        this._volumeBarContainer,\n    );\n    private readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\n        option({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n        option({ value: \"new\" }, \"+ New Blank Song\"),\n        option({ value: \"import\" }, \"↑ Import Song... (\" + EditorConfig.ctrlSymbol + \"O)\"),\n        option({ value: \"export\" }, \"↓ Export Song... (\" + EditorConfig.ctrlSymbol + \"S)\"),\n        option({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\n        option({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\n        option({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\n        option({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\n        option({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\n        option({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\n    );\n    private readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\n        option({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n        option({ value: \"undo\" }, \"Undo (Z)\"),\n        option({ value: \"redo\" }, \"Redo (Y)\"),\n        option({ value: \"copy\" }, \"Copy Pattern (C)\"),\n        option({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\n        option({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (\" + EditorConfig.ctrlSymbol + \"⇧V)\"),\n        option({ value: \"insertBars\" }, \"Insert Bar (⏎)\"),\n        option({ value: \"deleteBars\" }, \"Delete Selected Bars (⌫)\"),\n        option({ value: \"insertChannel\" }, \"Insert Channel (\" + EditorConfig.ctrlSymbol + \"⏎)\"),\n        option({ value: \"deleteChannel\" }, \"Delete Selected Channels (\" + EditorConfig.ctrlSymbol + \"⌫)\"),\n        option({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\n        option({ value: \"selectAll\" }, \"Select All (A)\"),\n        option({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\n        option({ value: \"transposeUp\" }, \"Move Notes Up (+ or ⇧+)\"),\n        option({ value: \"transposeDown\" }, \"Move Notes Down (- or ⇧-)\"),\n        option({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\n\toption({ value: \"generateEuclideanRhythm\" }, \"Generate Euclidean Rhythm... (E)\"),\n        option({ value: \"beatsPerBar\" }, \"Change Beats Per Bar... (B)\"),\n        option({ value: \"barCount\" }, \"Change Song Length... (L)\"),\n        option({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\n        option({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\n\toption({ value: \"addExternal\" }, \"Add Custom Samples... (⇧Q)\"),\n    );\n    private readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\n        option({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n        option({ value: \"autoPlay\" }, \"Auto Play on Load\"),\n        option({ value: \"autoFollow\" }, \"Keep Current Pattern Selected\"),\n        option({ value: \"enableNotePreview\" }, \"Hear Preview of Added Notes\"),\n        option({ value: \"showLetters\" }, \"Show Piano Keys\"),\n        option({ value: \"showFifth\" }, 'Highlight \"Fifth\" of Song Key'),\n        option({ value: \"notesOutsideScale\" }, \"Allow Adding Notes Not in Scale\"),\n        option({ value: \"setDefaultScale\" }, \"Use Current Scale as Default\"),\n        option({ value: \"showChannels\" }, \"Show Notes From All Channels\"),\n        option({ value: \"showScrollBar\" }, \"Show Octave Scroll Bar\"),\n        option({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Volume\"),\n        option({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\n        option({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\n        option({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\n        option({ value: \"showOscilloscope\" }, \"Show Oscilloscope\"),\n        option({ value: \"showSampleLoadingStatus\" }, \"Show Sample Loading Status\"),\n        option({ value: \"layout\" }, \"Set Layout...\"),\n        option({ value: \"colorTheme\" }, \"Set Theme...\"),\n\toption({ value: \"customTheme\" }, \"Custom Theme...\"),\n        option({ value: \"recordingSetup\" }, \"Set Up Note Recording...\"),\n    );\n    private readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\n    private readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\n    private readonly _octaveStepper: HTMLInputElement = input({ type: \"number\", min: Config.octaveMin, max: Config.octaveMax, value: \"0\" });\n    private readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"1\", max: \"500\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\n    private readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\n    private readonly _chorusSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.chorusRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeChorus(this._doc, oldValue, newValue), false);\n    private readonly _chorusRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chorus\") }, \"Chorus:\"), this._chorusSlider.container);\n    private readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky,\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\n    private readonly _reverbRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb:\"), this._reverbSlider.container);\n    private readonly _echoSustainSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoSustainRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEchoSustain(this._doc, oldValue, newValue), false);\n    private readonly _echoSustainRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"echoSustain\") }, \"Echo:\"), this._echoSustainSlider.container);\n    private readonly _echoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoDelayRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEchoDelay(this._doc, oldValue, newValue), false);\n    private readonly _echoDelayRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"echoDelay\") }, \"Echo Delay:\"), this._echoDelaySlider.container);\n    private readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\n    private readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\n    private readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\n    private readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\n    private readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\n    private readonly _instrumentButtons: HTMLButtonElement[] = [];\n    private readonly _instrumentAddButton: HTMLButtonElement = button({ type: \"button\", class: \"add-instrument last-button\" });\n    private readonly _instrumentRemoveButton: HTMLButtonElement = button({ type: \"button\", class: \"remove-instrument\" });\n    private readonly _instrumentsButtonBar: HTMLDivElement = div({ class: \"instrument-bar\" }, this._instrumentRemoveButton, this._instrumentAddButton);\n    private readonly _instrumentsButtonRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument:\"), this._instrumentsButtonBar);\n    private readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\n    private readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\n    private readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\n    private readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        div({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\n    ), this._instrumentVolumeSlider.container);\n    private readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\n    private readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Pan) }, \"▼\");\n    private readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\n    private readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\n    ), this._panDropdown, this._panSlider.container);\n    private readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"pan delay\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\n    private readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\n    private readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._panDelayRow);\n    private readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\n    private readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\n    // advloop addition\n    // @TODO: Add a dropdown for these. Or maybe this checkbox is fine?\n    private readonly _useChipWaveAdvancedLoopControlsBox = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: 0.4em; margin-right: 4em;\" });\n    private readonly _chipWaveLoopModeSelect = buildOptions(select(), [\"Loop\", \"Ping-Pong\", \"Play Once\", \"Play Loop Once\"]);\n    private readonly _chipWaveLoopStartStepper = input({ type: \"number\", min: \"0\", step: \"1\", value: \"0\", style: \"width: 100%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\" });\n    private readonly _chipWaveLoopEndStepper = input({ type: \"number\", min: \"0\", step: \"1\", value: \"0\", style: \"width: 100%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\" });\n    private readonly _setChipWaveLoopEndToEndButton = button({ type: \"button\", style: \"width: 1.5em; height: 1.5em; padding: 0; margin-left: 0.5em;\" }, SVG.svg({ width: \"16\", height: \"16\", viewBox: \"-13 -14 26 26\", \"pointer-events\": \"none\", style: \"width: 100%; height: 100%;\" }, SVG.rect({ x: \"4\", y: \"-6\", width: \"2\", height: \"12\", fill: ColorConfig.primaryText }), SVG.path({ d: \"M -6 -6 L -6 6 L 3 0 z\", fill: ColorConfig.primaryText })));\n    private readonly _chipWaveStartOffsetStepper = input({ type: \"number\", min: \"0\", step: \"1\", value: \"0\", style: \"width: 100%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\" });\n    private readonly _chipWavePlayBackwardsBox = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-left: 0.4em; margin-right: 4em;\" });\n    // advloop addition\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\n    private readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\n    private readonly _visualLoopControlsButton: HTMLButtonElement = button({ style: \"margin-left: 0em; padding-left: 0.2em; height: 1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"visualLoopControls\") }, \"+\");\n    private readonly _useChipWaveAdvancedLoopControlsRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"flex-shrink: 0;\", onclick: () => this._openPrompt(\"loopControls\") }, \"Loop Controls: \"), this._useChipWaveAdvancedLoopControlsBox);\n    private readonly _chipWaveLoopModeSelectRow = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"font-size: x-small;\", onclick: () => this._openPrompt(\"loopMode\") }, \"Loop Mode: \"), div({ class: \"selectContainer\" }, this._chipWaveLoopModeSelect));\n    private readonly _chipWaveLoopStartRow = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"font-size: x-small;\", onclick: () => this._openPrompt(\"loopStart\") }, \"Loop Start: \"), this._visualLoopControlsButton, span({ style: \"display: flex;\" }, this._chipWaveLoopStartStepper));\n    private readonly _chipWaveLoopEndRow = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"font-size: x-small;\", onclick: () => this._openPrompt(\"loopEnd\") }, \"Loop End: \"), span({ style: \"display: flex;\" }, this._chipWaveLoopEndStepper, this._setChipWaveLoopEndToEndButton));\n    private readonly _chipWaveStartOffsetRow = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"offset\") }, \"Offset: \"), span({ style: \"display: flex;\" }, this._chipWaveStartOffsetStepper));\n    private readonly _chipWavePlayBackwardsRow = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"backwards\") }, \"Backwards: \"), this._chipWavePlayBackwardsBox);\n    private readonly _fadeInOutEditor: FadeInOutEditor = new FadeInOutEditor(this._doc);\n    private readonly _fadeInOutRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"fadeInOut\") }, \"Fade:\"), this._fadeInOutEditor.container);\n    private readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\n    private readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Transition) }, \"▼\");\n    private readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\", style: \"width: 52.5%;\" }, this._transitionSelect));\n    private readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\n    private readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\n    private readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._clicklessTransitionRow);\n\n    private readonly _effectsSelect: HTMLSelectElement = select(option({ selected: true, disabled: true, hidden: false })); // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n    private readonly _eqFilterSimpleButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"no-underline\", onclick: () => this._switchEQFilterType(true) }, \"simple\");\n    private readonly _eqFilterAdvancedButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"last-button no-underline\", onclick: () => this._switchEQFilterType(false) }, \"advanced\");\n    private readonly _eqFilterTypeRow: HTMLElement = div({ class: \"selectRow\", style: \"padding-top: 4px; margin-bottom: 0px;\" }, span({ style: \"font-size: x-small;\", class: \"tip\", onclick: () => this._openPrompt(\"filterType\") }, \"EQ Filt.Type:\"), div({ class: \"instrument-bar\" }, this._eqFilterSimpleButton, this._eqFilterAdvancedButton));\n    private readonly _eqFilterEditor: FilterEditor = new FilterEditor(this._doc);\n    private readonly _eqFilterZoom: HTMLButtonElement = button({ style: \"margin-left:0em; padding-left:0.2em; height:1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"customEQFilterSettings\") }, \"+\");\n    private readonly _eqFilterRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"eqFilter\") }, \"EQ Filt:\"), this._eqFilterZoom, this._eqFilterEditor.container);\n    private readonly _eqFilterSimpleCutSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimpleCutRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEQFilterSimpleCut(this._doc, oldValue, newValue), false);\n    private _eqFilterSimpleCutRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._eqFilterSimpleCutSlider.container);\n    private readonly _eqFilterSimplePeakSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimplePeakRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEQFilterSimplePeak(this._doc, oldValue, newValue), false);\n    private _eqFilterSimplePeakRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._eqFilterSimplePeakSlider.container);\n\n    private readonly _noteFilterSimpleButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"no-underline\", onclick: () => this._switchNoteFilterType(true) }, \"simple\");\n    private readonly _noteFilterAdvancedButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"last-button no-underline\", onclick: () => this._switchNoteFilterType(false) }, \"advanced\");\n    private readonly _noteFilterTypeRow: HTMLElement = div({ class: \"selectRow\", style: \"padding-top: 4px; margin-bottom: 0px;\" }, span({ style: \"font-size: x-small;\", class: \"tip\", onclick: () => this._openPrompt(\"filterType\") }, \"Note Filt.Type:\"), div({ class: \"instrument-bar\" }, this._noteFilterSimpleButton, this._noteFilterAdvancedButton));\n    private readonly _noteFilterEditor: FilterEditor = new FilterEditor(this._doc, true);\n    private readonly _noteFilterZoom: HTMLButtonElement = button({ style: \"margin-left:0em; padding-left:0.2em; height:1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"customNoteFilterSettings\") }, \"+\");\n    private readonly _noteFilterRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"noteFilter\") }, \"Note Filt:\"), this._noteFilterZoom, this._noteFilterEditor.container);\n    private readonly _noteFilterSimpleCutSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimpleCutRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeNoteFilterSimpleCut(this._doc, oldValue, newValue), false);\n    private _noteFilterSimpleCutRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._noteFilterSimpleCutSlider.container);\n    private readonly _noteFilterSimplePeakSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimplePeakRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeNoteFilterSimplePeak(this._doc, oldValue, newValue), false);\n    private _noteFilterSimplePeakRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._noteFilterSimplePeakSlider.container);\n\n    private readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"1\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\n    private readonly _pulseWidthDropdown: HTMLButtonElement = button({ style: \"margin-right:10px; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.PulseWidth) }, \"▼\");\n    private readonly _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthDropdown, this._pulseWidthSlider.container);\n    private readonly _decimalOffsetSlider: Slider = new Slider(input({ style: \"margin: 0; transform: scaleX(-1);\", type: \"range\", min: \"0\", max: \"99\", value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDecimalOffset(this._doc, oldValue, newValue), false);\n    private readonly _decimalOffsetRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"decimalOffset\") }, \"Offset:\"), this._decimalOffsetSlider.container);\n    private readonly _pulseWidthDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._decimalOffsetRow);\n\n    private readonly _pitchShiftSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.pitchShiftRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePitchShift(this._doc, oldValue, newValue), true);\n    private readonly _pitchShiftTonicMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic, left: \"50%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic, left: \"100%\" } })];\n    private readonly _pitchShiftFifthMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.fifthNote, left: (100 * 7 / 24) + \"%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.fifthNote, left: (100 * 19 / 24) + \"%\" } })];\n    private readonly _pitchShiftMarkerContainer: HTMLDivElement = div({ style: \"display: flex; position: relative;\" }, this._pitchShiftSlider.container, div({ class: \"pitchShiftMarkerContainer\" }, this._pitchShiftTonicMarkers, this._pitchShiftFifthMarkers));\n    private readonly _pitchShiftRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pitchShift\") }, \"Pitch Shift:\"), this._pitchShiftMarkerContainer);\n    private readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin - Config.detuneCenter, max: Config.detuneMax - Config.detuneCenter, value: 0, step: \"4\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\n    private readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: Config.detuneMin - Config.detuneCenter, max: Config.detuneMax - Config.detuneCenter, value: 0 });\n    private readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\n    ), this._detuneSlider.container);\n    private readonly _distortionSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: \"0\", max: Config.distortionRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDistortion(this._doc, oldValue, newValue), false);\n    private readonly _distortionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"distortion\") }, \"Distortion:\"), this._distortionSlider.container);\n    private readonly _aliasingBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\n    private readonly _aliasingRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"aliases\") }, \"Aliasing:\"), this._aliasingBox);\n    private readonly _bitcrusherQuantizationSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherQuantizationRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherQuantization(this._doc, oldValue, newValue), false);\n    private readonly _bitcrusherQuantizationRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"bitcrusherQuantization\") }, \"Bit Crush:\"), this._bitcrusherQuantizationSlider.container);\n    private readonly _bitcrusherFreqSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherFreqRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherFreq(this._doc, oldValue, newValue), false);\n    private readonly _bitcrusherFreqRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"bitcrusherFreq\") }, \"Freq Crush:\"), this._bitcrusherFreqSlider.container);\n    private readonly _stringSustainSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.stringSustainRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeStringSustain(this._doc, oldValue, newValue), false);\n    private readonly _stringSustainRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"stringSustain\") }, \"Sustain:\"), this._stringSustainSlider.container);\n    \n    private readonly _unisonDropdown:  HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Unison) }, \"▼\");\n\n    private readonly _unisonSelect: HTMLSelectElement = buildOptions(select(), Config.unisons.map(unison => unison.name));\n    private readonly _unisonSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"unison\") }, \"Unison:\"), this._unisonDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._unisonSelect));\n    \n    // consider adding a config value for the min/max values of these? eg. Config.unisonRange = 24\n    private readonly _unisonVoicesInputBox: HTMLInputElement = input({ style: \"width: 150%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", id: \"unisonVoicesInputBox\", type: \"number\", step: \"1\", min: 1, max: 2, value: 1 });\n    private readonly _unisonVoicesRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"unisonVoices\") }, \"Voices: \"),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._unisonVoicesInputBox),\n    ));\n    private readonly _unisonSpreadInputBox: HTMLInputElement = input({ style: \"width: 150%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", id: \"unisonSpreadInputBox\", type: \"number\", step: \"0.001\", min: -96, max: 96, value: 0.0 });\n    private readonly _unisonSpreadRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"unisonSpread\") }, \"Spread: \"),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._unisonSpreadInputBox),\n    ));\n    \n    private readonly _unisonOffsetInputBox: HTMLInputElement = input({ style: \"width: 150%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", id: \"unisonOffsetInputBox\", type: \"number\", step: \"0.001\", min: -96, max: 96, value: 0.0 });\n    private readonly _unisonOffsetRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"unisonOffset\") }, \"Offset: \"),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._unisonOffsetInputBox),\n    ));\n    private readonly _unisonExpressionInputBox: HTMLInputElement = input({ style: \"width: 150%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", id: \"unisonExpressionInputBox\", type: \"number\", step: \"0.001\", min: -2, max: 2, value: 1.4 });\n    private readonly _unisonExpressionRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"unisonExpression\") }, \"Expression: \"),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._unisonExpressionInputBox),\n    ));\n    private readonly _unisonSignInputBox: HTMLInputElement = input({ style: \"width: 150%; height: 1.5em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", id: \"unisonSignInputBox\", type: \"number\", step: \"0.001\", min: -2, max: 2, value: 1.0 });\n    private readonly _unisonSignRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"unisonSign\") }, \"Sign: \"),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._unisonSignInputBox),\n    ));\n    \n    \n    private readonly _unisonDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._unisonVoicesRow, this._unisonSpreadRow, this._unisonOffsetRow, this._unisonExpressionRow, this._unisonSignRow);\n   \n    private readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\n    private readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Chord) }, \"▼\");\n\n    private readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\" }, this._chordSelect));\n    private readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"arp speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\n    private readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\n    private readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\n    private readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\n    private readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\n\n    private readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\n    private readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Vibrato) }, \"▼\");\n    private readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\n    private readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato depth\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\n    private readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\n    private readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\n    private readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\n    private readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato delay\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\n    private readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\n    private readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\n    private readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\n    private readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\n    private readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\n    private readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\n    private readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\n    private readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\n    private readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\n    private readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\n    private readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\n    private readonly _envelopeEditor: EnvelopeEditor = new EnvelopeEditor(this._doc);\n    private readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\n    private readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\n    private readonly _modNameRows: HTMLElement[];\n    private readonly _modChannelBoxes: HTMLSelectElement[];\n    private readonly _modInstrumentBoxes: HTMLSelectElement[];\n    private readonly _modSetRows: HTMLElement[];\n    private readonly _modSetBoxes: HTMLSelectElement[];\n    private readonly _modFilterRows: HTMLElement[];\n    private readonly _modFilterBoxes: HTMLSelectElement[];\n    private readonly _modTargetIndicators: SVGElement[];\n\n    private readonly _feedback6OpTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks6Op.map(feedback => feedback.name));\n    private readonly _feedback6OpRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedback6OpTypeSelect));\n\n    private readonly _algorithmCanvasSwitch: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: (e:Event) => this._toggleAlgorithmCanvas(e) }, \"F\");\n    private readonly _customAlgorithmCanvas: CustomAlgorythmCanvas = new CustomAlgorythmCanvas(canvas({ width: 144, height: 144, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customAlgorithmCanvas\" }), this._doc, (newArray: number[][], carry: number, mode: string) => new ChangeCustomAlgorythmorFeedback(this._doc, newArray, carry, mode));\n    private readonly _algorithm6OpSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms6Op.map(algorithm => algorithm.name));\n    private readonly _algorithm6OpSelectRow: HTMLDivElement = div(div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithm6OpSelect))\n        , div({ style: \"height:144px; display:flex; flex-direction: row; align-items:center; justify-content:center;\" }, div({style:\"display:block; width:10px; margin-right: 0.2em\"},this._algorithmCanvasSwitch), div({style: \"width:144px; height:144px;\"},this._customAlgorithmCanvas.canvas)));//temp\n\n    private readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px; width: 86px;\", class: \"copyButton\" }, [\n        \"Copy\",\n        // Copy icon:\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\n            SVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\n        ]),\n    ]);\n    private readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\n        \"Paste\",\n        // Paste icon:\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\n            SVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\n            SVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\n        ]),\n    ]);\n\n    public readonly _globalOscscope: oscilascopeCanvas = new oscilascopeCanvas(canvas({ width: 144, height: 32, style: `border: 2px solid ${ColorConfig.uiWidgetBackground}; position: static;`, id: \"oscilascopeAll\" }), 1);\n    private readonly _globalOscscopeContainer: HTMLDivElement = div({ style: \"height: 38px; margin-left: auto; margin-right: auto;\" },\n        this._globalOscscope.canvas\n    );\n    private readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float32Array) => new ChangeCustomWave(this._doc, newArray));\n    private readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\n        Config.chipWaves.map(wave => wave.name)\n    );\n    private readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\n\n    private readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\n        div({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\n        div({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\n    ]);\n\n    private readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\n\n\n    private readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\n    private readonly _feedbackRow2: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackVolume\") }, \"Fdback Vol:\"), this._feedbackAmplitudeSlider.container);\n    /*\n     * @jummbus - my very real, valid reason for cutting this button: I don't like it.\n     * \n    private readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\n\n        \"Customize Instrument\",\n    );\n    */\n    private readonly _addEnvelopeButton: HTMLButtonElement = button({ type: \"button\", class: \"add-envelope\" });\n    private readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\n        this._panSliderRow,\n        this._panDropdownGroup,\n        this._chipWaveSelectRow,\n        this._chipNoiseSelectRow,\n\tthis._useChipWaveAdvancedLoopControlsRow,\n\tthis._chipWaveLoopModeSelectRow,\n\tthis._chipWaveLoopStartRow,\n\tthis._chipWaveLoopEndRow,\n\tthis._chipWaveStartOffsetRow,\n\tthis._chipWavePlayBackwardsRow,\n        this._customWaveDraw,\n        this._eqFilterTypeRow,\n        this._eqFilterRow,\n        this._eqFilterSimpleCutRow,\n        this._eqFilterSimplePeakRow,\n        this._fadeInOutRow,\n        this._algorithmSelectRow,\n\t\tthis._algorithm6OpSelectRow,\n        this._phaseModGroup,\n        this._feedbackRow1,\n\t\tthis._feedback6OpRow1,\n        this._feedbackRow2,\n        this._spectrumRow,\n        this._harmonicsRow,\n        this._drumsetGroup,\n        this._pulseWidthRow,\n        // this._decimalOffsetRow,\n        this._pulseWidthDropdownGroup,\n        this._stringSustainRow,\n        this._unisonSelectRow,\n        this._unisonDropdownGroup,\n        div({ style: `padding: 2px 0; margin-left: 2em; display: flex; align-items: center;` },\n            span({ style: `flex-grow: 1; text-align: center;` }, span({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects\")),\n            div({ class: \"effects-menu\" }, this._effectsSelect),\n        ),\n        this._transitionRow,\n        this._transitionDropdownGroup,\n        this._chordSelectRow,\n        this._chordDropdownGroup,\n        this._pitchShiftRow,\n        this._detuneSliderRow,\n        this._vibratoSelectRow,\n        this._vibratoDropdownGroup,\n        this._noteFilterTypeRow,\n        this._noteFilterRow,\n        this._noteFilterSimpleCutRow,\n        this._noteFilterSimplePeakRow,\n        this._distortionRow,\n        this._aliasingRow,\n        this._bitcrusherQuantizationRow,\n        this._bitcrusherFreqRow,\n        this._chorusRow,\n        this._echoSustainRow,\n        this._echoDelayRow,\n        this._reverbRow,\n        div({ style: `padding: 2px 0; margin-left: 2em; display: flex; align-items: center;` },\n            span({ style: `flex-grow: 1; text-align: center;` }, span({ class: \"tip\", onclick: () => this._openPrompt(\"envelopes\") }, \"Envelopes\")),\n            this._addEnvelopeButton,\n        ),\n        this._envelopeEditor.container,\n    );\n    private readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\n        div({ class: \"selectRow\" },\n            this._instrumentCopyButton,\n            this._instrumentPasteButton,\n        ),\n    );\n    private readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `padding: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\n        \"Instrument Settings\"\n    );\n    private readonly _instrumentTypeSelectRow: HTMLDivElement = div({ class: \"selectRow\", id: \"typeSelectRow\" },\n        span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type:\"),\n        div(\n            div({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\n            div({ class: \"drumSelect\" }, this._drumPresetSelect)\n        ),\n    );\n    private readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\n        this._instrumentSettingsTextRow,\n        this._instrumentsButtonRow,\n        this._instrumentTypeSelectRow,\n        this._instrumentVolumeSliderRow,\n        //this._customizeInstrumentButton,\n        this._customInstrumentSettingsGroup,\n    );\n    private readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\n    private readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\n    private readonly _jumpToModIndicator: SVGElement = SVG.svg({ style: \"width: 92%; height: 1.3em; flex-shrink: 0; position: absolute;\", viewBox: \"0 0 200 200\" }, [\n        SVG.path({ d: \"M90 155 l0 -45 -45 0 c-25 0 -45 -4 -45 -10 0 -5 20 -10 45 -10 l45 0 0 -45 c0 -25 5 -45 10 -45 6 0 10 20 10 45 l0 45 45 0 c25 0 45 5 45 10 0 6 -20 10 -45 10 l -45 0 0 45 c0 25 -4 45 -10 45 -5 0 -10 -20 -10 -45z\" }),\n        SVG.path({ d: \"M42 158 c-15 -15 -16 -38 -2 -38 6 0 10 7 10 15 0 8 7 15 15 15 8 0 15 5 15 10 0 14 -23 13 -38 -2z\" }),\n        SVG.path({ d: \"M120 160 c0 -5 7 -10 15 -10 8 0 15 -7 15 -15 0 -8 5 -15 10 -15 14 0 13 23 -2 38 -15 15 -38 16 -38 2z\" }),\n        SVG.path({ d: \"M32 58 c3 -23 48 -40 48 -19 0 6 -7 11 -15 11 -8 0 -15 7 -15 15 0 8 -5 15 -11 15 -6 0 -9 -10 -7 -22z\" }),\n        SVG.path({ d: \"M150 65 c0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -14 23 -13 38 2 15 15 16 38 2 38 -5 0 -10 -7 -10 -15z\" })]);\n\n    private readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\n    private readonly _zoomInButton: HTMLButtonElement = button({ class: \"zoomInButton\", type: \"button\", title: \"Zoom In\" });\n    private readonly _zoomOutButton: HTMLButtonElement = button({ class: \"zoomOutButton\", type: \"button\", title: \"Zoom Out\" });\n    private readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\n        this._patternEditorPrev.container,\n        this._patternEditor.container,\n        this._patternEditorNext.container,\n    );\n    private readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\n        this._piano.container,\n        this._patternEditorRow,\n        this._octaveScrollBar.container,\n        this._zoomInButton,\n        this._zoomOutButton,\n    );\n    private readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\n        this._trackEditor.container,\n        this._loopEditor.container,\n    );\n    private readonly _trackVisibleArea: HTMLDivElement = div({ style: \"position: absolute; width: 100%; height: 100%; pointer-events: none;\" });\n    private readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\n        this._muteEditor.container,\n        this._trackContainer,\n        this._trackVisibleArea,\n    );\n    public readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackAndMuteContainer);\n    private readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\n        this._trackAndMuteContainer,\n        this._barScrollBar.container,\n    );\n\n    private readonly _menuArea: HTMLDivElement = div({ class: \"menu-area\" },\n        div({ class: \"selectContainer menu file\" },\n            this._fileMenu,\n        ),\n        div({ class: \"selectContainer menu edit\" },\n            this._editMenu,\n        ),\n        div({ class: \"selectContainer menu preferences\" },\n            this._optionsMenu,\n        ),\n    );\n\n    private readonly _sampleLoadingBar: HTMLDivElement = div({ style: `width: 0%; height: 100%; background-color: ${ColorConfig.indicatorPrimary};` });\n    private readonly _sampleLoadingBarContainer: HTMLDivElement = div({ style: `width: 80%; height: 4px; overflow: hidden; margin-left: auto; margin-right: auto; margin-top: 0.5em; cursor: pointer; background-color: ${ColorConfig.indicatorSecondary};` }, this._sampleLoadingBar);\n    private readonly _sampleLoadingStatusContainer: HTMLDivElement = div({ style: \"cursor: pointer;\" },\n        div({ style: `margin-top: 0.5em; text-align: center; color: ${ColorConfig.secondaryText};` }, \"Sample Loading Status\"),\n        div({ class: \"selectRow\", style: \"height: 6px; margin-bottom: 0.5em;\" },\n            this._sampleLoadingBarContainer,\n        ),\n    );\n\n    private readonly _songSettingsArea: HTMLDivElement = div({ class: \"song-settings-area\" },\n        div({ class: \"editor-controls\" },\n            div({ class: \"editor-song-settings\" },\n                div({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\n                    div({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\n                        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\n                            this._usedPatternIndicator,\n                        ),\n                    ),\n                    div({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\n                        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\n                            this._usedInstrumentIndicator,\n                        ),\n                    ),\n                    \"Song Settings\",\n                    div({ style: \"width: 100%; left: 0; top: -1px; position:absolute; overflow-x:clip;\" }, this._jumpToModIndicator),\n                ),\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\n                div({ class: \"selectContainer\" }, this._scaleSelect),\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\n                div({ class: \"selectContainer\" }, this._keySelect),\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"key_octave\") }, \"Octave: \"),\n                this._octaveStepper,\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\n                span({ style: \"display: flex;\" },\n                    this._tempoSlider.container,\n                    this._tempoStepper,\n                ),\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\n                div({ class: \"selectContainer\" }, this._rhythmSelect),\n            ),\n            this._sampleLoadingStatusContainer,\n        ),\n    );\n    private readonly _instrumentSettingsArea: HTMLDivElement = div({ class: \"instrument-settings-area\" },\n        this._instrumentSettingsGroup,\n        this._modulatorGroup);\n    public readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\n        div({ class: \"version-area\" },\n            div({ style: `text-align: center; margin: 3px 0; color: ${ColorConfig.secondaryText};` },\n                this._songTitleInputBox.input,\n            ),\n        ),\n        div({ class: \"play-pause-area\" },\n            this._volumeBarBox,\n            div({ class: \"playback-bar-controls\" },\n                this._playButton,\n                this._pauseButton,\n                this._recordButton,\n                this._stopButton,\n                this._prevBarButton,\n                this._nextBarButton,\n            ),\n            div({ class: \"playback-volume-controls\" },\n                span({ class: \"volume-speaker\" }),\n                this._volumeSlider.container,\n            ),\n            this._globalOscscopeContainer,\n        ),\n        this._menuArea,\n        this._songSettingsArea,\n        this._instrumentSettingsArea,\n    );\n\n    public readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\n        this._patternArea,\n        this._trackArea,\n        this._settingsArea,\n        this._promptContainer,\n    );\n\n    private _wasPlaying: boolean = false;\n    private _currentPromptName: string | null = null;\n    private _highlightedInstrumentIndex: number = -1;\n    private _renderedInstrumentCount: number = 0;\n    private _renderedIsPlaying: boolean = false;\n    private _renderedIsRecording: boolean = false;\n    private _renderedShowRecordButton: boolean = false;\n    private _renderedCtrlHeld: boolean = false;\n    private _ctrlHeld: boolean = false;\n    private _deactivatedInstruments: boolean = false;\n    private readonly _operatorRows: HTMLDivElement[] = [];\n    private readonly _operatorAmplitudeSliders: Slider[] = [];\n    private readonly _operatorFrequencySelects: HTMLSelectElement[] = [];\n    private readonly _operatorDropdowns: HTMLButtonElement[] = [];\n    private readonly _operatorWaveformSelects: HTMLSelectElement[] = [];\n    private readonly _operatorWaveformHints: HTMLSpanElement[] = [];\n    private readonly _operatorWaveformPulsewidthSliders: Slider[] = [];\n    private readonly _operatorDropdownRows: HTMLElement[] = []\n    private readonly _operatorDropdownGroups: HTMLDivElement[] = [];\n    private readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\n    private readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\n    private _showModSliders: boolean[] = [];\n    private _newShowModSliders: boolean[] = [];\n    private _modSliderValues: number[] = [];\n    private _hasActiveModSliders: boolean = false;\n\n    private _openPanDropdown: boolean = false;\n    private _openVibratoDropdown: boolean = false;\n    private _openChordDropdown: boolean = false;\n    private _openTransitionDropdown: boolean = false;\n    private _openOperatorDropdowns: boolean[] = [];\n    private _openPulseWidthDropdown: boolean = false;\n    private _openUnisonDropdown: boolean = false;\n\n    private outVolumeHistoricTimer: number = 0;\n    private outVolumeHistoricCap: number = 0;\n    private lastOutVolumeCap: number = 0;\n\n    constructor(private _doc: SongDocument) {\n\n        this._doc.notifier.watch(this.whenUpdated);\n        new MidiInputHandler(this._doc);\n        window.addEventListener(\"resize\", this.whenUpdated);\n        window.requestAnimationFrame(this.updatePlayButton);\n        window.requestAnimationFrame(this._animate);\n\n        if (!(\"share\" in navigator)) {\n            this._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\n        }\n\n        this._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\n            option({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\n            option({ value: \"customize\" }, \"Edit Custom Scale\"),\n        ));\n        this._keySelect.appendChild(optgroup({ label: \"Edit\" },\n            option({ value: \"detectKey\" }, \"Detect Key\"),\n        ));\n        this._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\n            option({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\n        ));\n\n        this._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\n\n        //this._unisonSelect.appendChild(option({ hidden: true, value: 28 }, \"custom\"));\n        \n        this._unisonSelect.appendChild(option({ hidden: true, value: Config.unisons.length }, \"custom\"));\n\n        this._showModSliders = new Array<boolean>(Config.modulators.length);\n        this._modSliderValues = new Array<number>(Config.modulators.length);\n\n        this._phaseModGroup.appendChild(div({ class: \"selectRow\", style: `color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;` },\n            div({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\n            div({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\n            div({ class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\n        ));\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {\n            const operatorIndex: number = i;\n            const operatorNumber: HTMLDivElement = div({ style: \"margin-right: 0px; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \"\");\n            const frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\n            const amplitudeSlider: Slider = new Slider(input({ type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\n            const waveformSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Waveform\" }), Config.operatorWaves.map(wave => wave.name));\n            const waveformDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; margin-right: 2px; height:1.5em; width: 8px; max-width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.FM, i) }, \"▼\");\n            const waveformDropdownHint: HTMLSpanElement = span({ class: \"tip\", style: \"margin-left: 10px;\", onclick: () => this._openPrompt(\"operatorWaveform\") }, \"Wave:\");\n            const waveformPulsewidthSlider: Slider = new Slider(input({ style: \"margin-left: 10px; width: 85%;\", type: \"range\", min: \"0\", max: Config.pwmOperatorWaves.length - 1, value: \"0\", step: \"1\", title: \"Pulse Width\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorPulseWidth(this._doc, operatorIndex, oldValue, newValue), true);\n            const waveformDropdownRow: HTMLElement = div({ class: \"selectRow\" }, waveformDropdownHint, waveformPulsewidthSlider.container,\n                div({ class: \"selectContainer\", style: \"width: 6em; margin-left: .3em;\" }, waveformSelect));\n            const waveformDropdownGroup: HTMLDivElement = div({ class: \"operatorRow\" }, waveformDropdownRow);\n            const row: HTMLDivElement = div({ class: \"selectRow\" },\n                operatorNumber,\n                waveformDropdown,\n                div({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\n                amplitudeSlider.container,\n            );\n            this._phaseModGroup.appendChild(row);\n            this._operatorRows[i] = row;\n            this._operatorAmplitudeSliders[i] = amplitudeSlider;\n            this._operatorFrequencySelects[i] = frequencySelect;\n            this._operatorDropdowns[i] = waveformDropdown;\n            this._operatorWaveformHints[i] = waveformDropdownHint;\n            this._operatorWaveformSelects[i] = waveformSelect;\n            this._operatorWaveformPulsewidthSliders[i] = waveformPulsewidthSlider;\n            this._operatorDropdownRows[i] = waveformDropdownRow;\n            this._phaseModGroup.appendChild(waveformDropdownGroup);\n            this._operatorDropdownGroups[i] = waveformDropdownGroup;\n            this._openOperatorDropdowns[i] = false;\n\n            waveformSelect.addEventListener(\"change\", () => {\n                this._doc.record(new ChangeOperatorWaveform(this._doc, operatorIndex, waveformSelect.selectedIndex));\n            });\n\n            frequencySelect.addEventListener(\"change\", () => {\n                this._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\n            });\n        }\n\n        this._drumsetGroup.appendChild(\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\n            ),\n        );\n        for (let i: number = Config.drumCount - 1; i >= 0; i--) {\n            const drumIndex: number = i;\n            const spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\n            spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n            this._drumsetSpectrumEditors[i] = spectrumEditor;\n\n            const envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\n            this._drumsetEnvelopeSelects[i] = envelopeSelect;\n            envelopeSelect.addEventListener(\"change\", () => {\n                this._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\n            });\n\n            const row: HTMLDivElement = div({ class: \"selectRow\" },\n                div({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\n                this._drumsetSpectrumEditors[i].container,\n            );\n            this._drumsetGroup.appendChild(row);\n        }\n\n        this._modNameRows = [];\n        this._modChannelBoxes = [];\n        this._modInstrumentBoxes = [];\n        this._modSetRows = [];\n        this._modSetBoxes = [];\n        this._modFilterRows = [];\n        this._modFilterBoxes = [];\n        this._modTargetIndicators = [];\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n            let modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\n            let modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\n\n            let modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\n                div({ class: \"tip\", style: \"width: 10%; max-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\n                div({ class: \"selectContainer\", style: 'width: 35%;' }, modChannelBox),\n                div({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\n                div({ class: \"selectContainer\", style: \"width: 10%;\" }, modInstrumentBox),\n            );\n\n            let modSetBox: HTMLSelectElement = select();\n            let modFilterBox: HTMLSelectElement = select();\n            let modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), span({ class: \"tip\", style: \"font-size:x-small;\", onclick: () => this._openPrompt(\"modSetInfo\" + mod) }, \"?\"), div({ class: \"selectContainer\" }, modSetBox));\n            let modFilterRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modFilterText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modFilter\" + mod) }, \"Target: \"), div({ class: \"selectContainer\" }, modFilterBox));\n\n            // @jummbus: I could template this up above and simply create from the template, especially since I also reuse it in song settings, but unsure how to do that with imperative-html :P\n            let modTarget: SVGElement = SVG.svg({ style: \"transform: translate(0px, 1px);\", width: \"1.5em\", height: \"1em\", viewBox: \"0 0 200 200\" }, [\n                SVG.path({ d: \"M90 155 l0 -45 -45 0 c-25 0 -45 -4 -45 -10 0 -5 20 -10 45 -10 l45 0 0 -45 c0 -25 5 -45 10 -45 6 0 10 20 10 45 l0 45 45 0 c25 0 45 5 45 10 0 6 -20 10 -45 10 l -45 0 0 45 c0 25 -4 45 -10 45 -5 0 -10 -20 -10 -45z\" }),\n                SVG.path({ d: \"M42 158 c-15 -15 -16 -38 -2 -38 6 0 10 7 10 15 0 8 7 15 15 15 8 0 15 5 15 10 0 14 -23 13 -38 -2z\" }),\n                SVG.path({ d: \"M120 160 c0 -5 7 -10 15 -10 8 0 15 -7 15 -15 0 -8 5 -15 10 -15 14 0 13 23 -2 38 -15 15 -38 16 -38 2z\" }),\n                SVG.path({ d: \"M32 58 c3 -23 48 -40 48 -19 0 6 -7 11 -15 11 -8 0 -15 7 -15 15 0 8 -5 15 -11 15 -6 0 -9 -10 -7 -22z\" }),\n                SVG.path({ d: \"M150 65 c0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -14 23 -13 38 2 15 15 16 38 2 38 -5 0 -10 -7 -10 -15z\" })]);\n\n            this._modNameRows.push(modNameRow);\n            this._modChannelBoxes.push(modChannelBox);\n            this._modInstrumentBoxes.push(modInstrumentBox);\n            this._modSetRows.push(modSetRow);\n            this._modSetBoxes.push(modSetBox);\n            this._modFilterRows.push(modFilterRow);\n            this._modFilterBoxes.push(modFilterBox);\n            this._modTargetIndicators.push(modTarget);\n\n            this._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, [\"Modulator \" + (mod + 1), modTarget]));\n            this._modulatorGroup.appendChild(modNameRow);\n            this._modulatorGroup.appendChild(modSetRow);\n            this._modulatorGroup.appendChild(modFilterRow);\n\n        }\n\n        // @jummbus - Unsure why this hack is needed for alignment, but I've never been a css wiz...\n        this._pitchShiftSlider.container.style.setProperty(\"transform\", \"translate(0px, 3px)\");\n        this._pitchShiftSlider.container.style.setProperty(\"width\", \"100%\");\n\n        this._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\n        this._editMenu.addEventListener(\"change\", this._editMenuHandler);\n        this._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\n        this._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\n        this._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\n        this._scaleSelect.addEventListener(\"change\", this._whenSetScale);\n        this._keySelect.addEventListener(\"change\", this._whenSetKey);\n        this._octaveStepper.addEventListener(\"change\", this._whenSetOctave);\n        this._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\n        //this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\n        //this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\n        this._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\n        this._instrumentsButtonBar.addEventListener(\"click\", this._whenSelectInstrument);\n        //this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\n        this._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\n        this._algorithm6OpSelect.addEventListener(\"change\", this._whenSet6OpAlgorithm);\n        this._feedback6OpTypeSelect.addEventListener(\"change\", this._whenSet6OpFeedbackType);\n        this._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\n        \t\t\t // advloop addition\n            this._useChipWaveAdvancedLoopControlsBox.addEventListener(\"input\", this._whenSetUseChipWaveAdvancedLoopControls);\n            this._chipWaveLoopModeSelect.addEventListener(\"change\", this._whenSetChipWaveLoopMode);\n            this._chipWaveLoopStartStepper.addEventListener(\"change\", this._whenSetChipWaveLoopStart);\n            this._chipWaveLoopEndStepper.addEventListener(\"change\", this._whenSetChipWaveLoopEnd);\n            this._setChipWaveLoopEndToEndButton.addEventListener(\"click\", this._whenSetChipWaveLoopEndToEnd);\n            this._chipWaveStartOffsetStepper.addEventListener(\"change\", this._whenSetChipWaveStartOffset);\n            this._chipWavePlayBackwardsBox.addEventListener(\"input\", this._whenSetChipWavePlayBackwards);\n            // advloop addition\n        this._sampleLoadingStatusContainer.addEventListener(\"click\", this._whenSampleLoadingStatusClicked);\n\t    this._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\n        this._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\n        this._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\n        this._unisonSelect.addEventListener(\"change\", this._whenSetUnison);\n        this._chordSelect.addEventListener(\"change\", this._whenSetChord);\n        this._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\n        this._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\n        this._playButton.addEventListener(\"click\", this.togglePlay);\n        this._pauseButton.addEventListener(\"click\", this.togglePlay);\n        this._recordButton.addEventListener(\"click\", this._toggleRecord);\n        this._stopButton.addEventListener(\"click\", this._toggleRecord);\n        // Start recording instead of opening context menu when control-clicking the record button on a Mac.\n        this._recordButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\n            if (event.ctrlKey) {\n                event.preventDefault();\n                this._toggleRecord();\n            }\n        });\n        this._stopButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\n            if (event.ctrlKey) {\n                event.preventDefault();\n                this._toggleRecord();\n            }\n        });\n        this._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\n        this._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\n        this._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\n        this._zoomInButton.addEventListener(\"click\", this._zoomIn);\n        this._zoomOutButton.addEventListener(\"click\", this._zoomOut);\n        this._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\n        this._trackArea.addEventListener(\"mousedown\", this.refocusStage);\n\n        // The song volume slider is styled slightly different than the class' default.\n        this._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\n        this._volumeSlider.container.style.setProperty(\"display\", \"flex\");\n\n        this._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\n        this._volumeBarContainer.style.setProperty(\"display\", \"flex\");\n\n        // Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\n        this._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\n        this._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\n        this._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\n        this._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\n        this._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\n        this._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {\n            this._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\n            this._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\n        }\n\n        let thisRef: SongEditor = this;\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\n            this._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\n            this._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\n            this._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\n            this._modFilterBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModFilter(mod); });\n            this._modTargetIndicators[mod].addEventListener(\"click\", function () { thisRef._whenClickModTarget(mod); });\n        }\n\n        this._jumpToModIndicator.addEventListener(\"click\", function () { thisRef._whenClickJumpToModTarget() });\n\n        this._patternArea.addEventListener(\"mousedown\", this.refocusStage);\n        this._fadeInOutEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._eqFilterEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._noteFilterEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\n        this._addEnvelopeButton.addEventListener(\"click\", this._addNewEnvelope);\n        this._patternArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\n        this._trackArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\n        this.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\n        this.mainLayer.addEventListener(\"keyup\", this._whenKeyReleased);\n        this.mainLayer.addEventListener(\"focusin\", this._onFocusIn);\n        this._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\n        this._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\n\n        sampleLoadEvents.addEventListener(\"sampleloaded\", this._updateSampleLoadingBar.bind(this));\n\n        this._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\n        this._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\n        this._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax - Config.detuneCenter, Math.max(Config.detuneMin - Config.detuneCenter, Math.round(+this._detuneSliderInputBox.value))))) });\n        \n        this._unisonVoicesInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeUnisonVoices(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].unisonVoices, Math.min(2.0, Math.max(1.0, Math.round(+this._unisonVoicesInputBox.value))))) });\n        this._unisonSpreadInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeUnisonSpread(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].unisonSpread, Math.min(96.0, Math.max(-96.0, +this._unisonSpreadInputBox.value)))) });\n        this._unisonOffsetInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeUnisonOffset(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].unisonOffset, Math.min(96.0, Math.max(-96.0, +this._unisonOffsetInputBox.value)))) });\n        this._unisonExpressionInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeUnisonExpression(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].unisonExpression, Math.min(2.0, Math.max(-2.0, +this._unisonExpressionInputBox.value)))) });\n        this._unisonSignInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeUnisonSign(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].unisonSign, Math.min(2.0, Math.max(-2.0, +this._unisonSignInputBox.value)))) });\n        \n        this._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\n        this._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\n        this._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\n        this._aliasingBox.addEventListener(\"input\", () => { this._doc.record(new ChangeAliasing(this._doc, this._aliasingBox.checked)) });\n\n        this._promptContainer.addEventListener(\"click\", (event) => {\n            if (this.prompt != null && this.prompt.gotMouseUp === true) return;\n            if (event.target == this._promptContainer) {\n                this._doc.undo();\n            }\n        });\n\n        if (isMobile) {\n            const autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\n            autoPlayOption.disabled = true;\n            autoPlayOption.setAttribute(\"hidden\", \"\");\n        }\n\n        // Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\n        if (window.screen.availWidth < 710 /*|| window.screen.availHeight < 710*/) {\n            const layoutOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=layout]\");\n            layoutOption.disabled = true;\n            layoutOption.setAttribute(\"hidden\", \"\");\n        }\n    }\n\n    private _whenSampleLoadingStatusClicked = (): void => {\n        this._openPrompt(\"sampleLoadingStatus\");\n    }\n\n    private _updateSampleLoadingBar(_e: Event): void {\n        // @TODO: Avoid this cast and type EventTarget/Event properly.\n        const e: SampleLoadedEvent = <SampleLoadedEvent>_e;\n        const percent: number = (\n            e.totalSamples === 0\n            ? 0\n            : Math.floor((e.samplesLoaded / e.totalSamples) * 100)\n        );\n        this._sampleLoadingBar.style.width = `${percent}%`;\n    }\n\n    private _toggleAlgorithmCanvas(e:Event):void {\n        if (this._customAlgorithmCanvas.mode != \"feedback\") {\n            this._customAlgorithmCanvas.mode = \"feedback\";\n            (e.target as Element).textContent = \"A\";\n            this._algorithmCanvasSwitch.value = \"feedback\";\n        } else {\n            this._customAlgorithmCanvas.mode = \"algorithm\";\n            (e.target as Element).textContent = \"F\";\n        }\n        this._customAlgorithmCanvas.redrawCanvas();\n    }\n\n    private _toggleDropdownMenu(dropdown: DropdownID, submenu: number = 0): void {\n        let target: HTMLButtonElement = this._vibratoDropdown;\n        let group: HTMLElement = this._vibratoDropdownGroup;\n        switch (dropdown) {\n            case DropdownID.Vibrato:\n                target = this._vibratoDropdown;\n                this._openVibratoDropdown = this._openVibratoDropdown ? false : true;\n                group = this._vibratoDropdownGroup;\n                break;\n            case DropdownID.Pan:\n                target = this._panDropdown;\n                this._openPanDropdown = this._openPanDropdown ? false : true;\n                group = this._panDropdownGroup;\n                break;\n            case DropdownID.Chord:\n                target = this._chordDropdown;\n                this._openChordDropdown = this._openChordDropdown ? false : true;\n                group = this._chordDropdownGroup;\n                break;\n            case DropdownID.Transition:\n                target = this._transitionDropdown;\n                this._openTransitionDropdown = this._openTransitionDropdown ? false : true;\n                group = this._transitionDropdownGroup;\n                break;\n            case DropdownID.FM:\n                target = this._operatorDropdowns[submenu];\n                this._openOperatorDropdowns[submenu] = this._openOperatorDropdowns[submenu] ? false : true;\n                group = this._operatorDropdownGroups[submenu];\n                break;\n            case DropdownID.PulseWidth:\n                target = this._pulseWidthDropdown;\n                this._openPulseWidthDropdown = this._openPulseWidthDropdown ? false : true;\n                group = this._pulseWidthDropdownGroup;\n                break;\n            case DropdownID.Unison:\n                target = this._unisonDropdown;\n                this._openUnisonDropdown = this._openUnisonDropdown ? false : true;\n                group = this._unisonDropdownGroup;\n                break;\n        }\n\n        if (target.textContent == \"▼\") {\n            let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n            target.textContent = \"▲\";\n            if (group != this._chordDropdownGroup) {\n                group.style.display = \"\";\n            } // Only show arpeggio dropdown if chord arpeggiates\n            else if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\n                group.style.display = \"\";\n            }\n\n        }\n        else {\n            target.textContent = \"▼\";\n            group.style.display = \"none\";\n        }\n    }\n\n    private _modSliderUpdate(): void {\n\n        if (!this._doc.synth.playing) {\n            this._hasActiveModSliders = false;\n\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                if (this._showModSliders[setting] == true) {\n                    this._showModSliders[setting] = false;\n                    this._newShowModSliders[setting] = false;\n                    let slider: Slider | null = this._getSliderForModSetting(setting);\n\n                    if (slider != null) {\n                        slider.container.classList.remove(\"modSlider\");\n\n                    }\n                }\n            }\n        }\n        else {\n\n            let instrument: number = this._doc.getCurrentInstrument();\n            const anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\n\n            // Check and update mod values on sliders\n            if (anyModActive) {\n\n                let instrument: number = this._doc.getCurrentInstrument();\n\n                function updateModSlider(editor: SongEditor, slider: Slider, setting: number, channel: number, instrument: number): boolean {\n                    if (editor._doc.synth.isModActive(setting, channel, instrument)) {\n                        let currentVal: number = (editor._doc.synth.getModValue(setting, channel, instrument, false) - Config.modulators[setting].convertRealFactor) / Config.modulators[setting].maxRawVol;\n                        if (currentVal != editor._modSliderValues[setting]) {\n                            editor._modSliderValues[setting] = currentVal;\n                            slider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\n                        }\n                        return true;\n                    }\n                    return false;\n                }\n\n                // Set mod sliders to present values\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                    // Set to last value\n                    this._newShowModSliders[setting] = this._showModSliders[setting];\n\n                    // Check for newer value\n                    let slider: Slider | null = this._getSliderForModSetting(setting);\n                    if (slider != null) {\n                        this._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\n                    }\n                }\n\n            }\n            else if (this._hasActiveModSliders) {\n                // Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                    this._newShowModSliders[setting] = false;\n                }\n            }\n\n            // Class or unclass mod sliders based on present status\n            if (anyModActive || this._hasActiveModSliders) {\n\n                let anySliderActive: boolean = false;\n\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                    if (this._newShowModSliders[setting] != this._showModSliders[setting]) {\n                        this._showModSliders[setting] = this._newShowModSliders[setting];\n                        let slider: Slider | null = this._getSliderForModSetting(setting);\n\n                        if (slider != null) {\n\n                            if (this._showModSliders[setting] == true) {\n                                slider.container.classList.add(\"modSlider\");\n                            }\n                            else {\n                                slider.container.classList.remove(\"modSlider\");\n                            }\n\n                        }\n                    }\n\n                    if (this._newShowModSliders[setting] == true)\n                        anySliderActive = true;\n                }\n\n                this._hasActiveModSliders = anySliderActive;\n\n            }\n\n        }\n\n    }\n\n    private _getSliderForModSetting(setting: number): Slider | null {\n        switch (setting) {\n            case Config.modulators.dictionary[\"pan\"].index:\n                return this._panSlider;\n            case Config.modulators.dictionary[\"detune\"].index:\n                return this._detuneSlider;\n            case Config.modulators.dictionary[\"fm slider 1\"].index:\n                return this._operatorAmplitudeSliders[0];\n            case Config.modulators.dictionary[\"fm slider 2\"].index:\n                return this._operatorAmplitudeSliders[1];\n            case Config.modulators.dictionary[\"fm slider 3\"].index:\n                return this._operatorAmplitudeSliders[2];\n            case Config.modulators.dictionary[\"fm slider 4\"].index:\n                return this._operatorAmplitudeSliders[3];\n            case Config.modulators.dictionary[\"fm feedback\"].index:\n                return this._feedbackAmplitudeSlider;\n            case Config.modulators.dictionary[\"pulse width\"].index:\n                return this._pulseWidthSlider;\n            case Config.modulators.dictionary[\"decimal offset\"].index:\n                return this._decimalOffsetSlider;\n            case Config.modulators.dictionary[\"reverb\"].index:\n                return this._reverbSlider;\n            case Config.modulators.dictionary[\"distortion\"].index:\n                return this._distortionSlider;\n            case Config.modulators.dictionary[\"note volume\"].index:\n                // So, this should technically not affect this slider, but it will look better as legacy songs used this mod as 'volume'.\n                // In the case that mix volume is used as well, they'd fight for the display, so just don't use this.\n                if (!this._showModSliders[Config.modulators.dictionary[\"mix volume\"].index])\n                    return this._instrumentVolumeSlider;\n                return null;\n            case Config.modulators.dictionary[\"mix volume\"].index:\n                return this._instrumentVolumeSlider;\n            case Config.modulators.dictionary[\"vibrato depth\"].index:\n                return this._vibratoDepthSlider;\n            case Config.modulators.dictionary[\"vibrato speed\"].index:\n                return this._vibratoSpeedSlider;\n            case Config.modulators.dictionary[\"vibrato delay\"].index:\n                return this._vibratoDelaySlider;\n            case Config.modulators.dictionary[\"arp speed\"].index:\n                return this._arpeggioSpeedSlider;\n            case Config.modulators.dictionary[\"pan delay\"].index:\n                return this._panDelaySlider;\n            case Config.modulators.dictionary[\"tempo\"].index:\n                return this._tempoSlider;\n            case Config.modulators.dictionary[\"song volume\"].index:\n                return this._volumeSlider;\n            case Config.modulators.dictionary[\"eq filt cut\"].index:\n                return this._eqFilterSimpleCutSlider;\n            case Config.modulators.dictionary[\"eq filt peak\"].index:\n                return this._eqFilterSimplePeakSlider;\n            case Config.modulators.dictionary[\"note filt cut\"].index:\n                return this._noteFilterSimpleCutSlider;\n            case Config.modulators.dictionary[\"note filt peak\"].index:\n                return this._noteFilterSimplePeakSlider;\n            case Config.modulators.dictionary[\"bit crush\"].index:\n                return this._bitcrusherQuantizationSlider;\n            case Config.modulators.dictionary[\"freq crush\"].index:\n                return this._bitcrusherFreqSlider;\n            case Config.modulators.dictionary[\"pitch shift\"].index:\n                return this._pitchShiftSlider;\n            case Config.modulators.dictionary[\"chorus\"].index:\n                return this._chorusSlider;\n            case Config.modulators.dictionary[\"echo\"].index:\n                return this._echoSustainSlider;\n            case Config.modulators.dictionary[\"echo delay\"].index:\n                return this._echoDelaySlider;\n            case Config.modulators.dictionary[\"sustain\"].index:\n                return this._stringSustainSlider;\n            case Config.modulators.dictionary[\"fm slider 5\"].index:\n                return this._operatorAmplitudeSliders[4];\n            case Config.modulators.dictionary[\"fm slider 6\"].index:\n                return this._operatorAmplitudeSliders[5];\n            default:\n                return null;\n        }\n\n    }\n\n    private _openPrompt(promptName: string): void {\n        this._doc.openPrompt(promptName);\n        this._setPrompt(promptName);\n    }\n\n    private _setPrompt(promptName: string | null): void {\n        if (this._currentPromptName == promptName) return;\n        this._currentPromptName = promptName;\n\n        if (this.prompt) {\n            if (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomScalePrompt || this.prompt instanceof CustomChipPrompt || this.prompt instanceof CustomFilterPrompt || this.prompt instanceof VisualLoopControlsPrompt)) {\n                this._doc.performance.play();\n            }\n            this._wasPlaying = false;\n            this._promptContainer.style.display = \"none\";\n            this._promptContainer.removeChild(this.prompt.container);\n            this.prompt.cleanUp();\n            this.prompt = null;\n            this.refocusStage();\n        }\n\n        if (promptName) {\n            switch (promptName) {\n                case \"export\":\n                    this.prompt = new ExportPrompt(this._doc);\n                    break;\n                case \"import\":\n                    this.prompt = new ImportPrompt(this._doc);\n                    break;\n                case \"songRecovery\":\n                    this.prompt = new SongRecoveryPrompt(this._doc);\n                    break;\n                case \"barCount\":\n                    this.prompt = new SongDurationPrompt(this._doc);\n                    break;\n                case \"beatsPerBar\":\n                    this.prompt = new BeatsPerBarPrompt(this._doc);\n                    break;\n                case \"moveNotesSideways\":\n                    this.prompt = new MoveNotesSidewaysPrompt(this._doc);\n                    break;\n                case \"channelSettings\":\n                    this.prompt = new ChannelSettingsPrompt(this._doc);\n                    break;\n                case \"limiterSettings\":\n                    this.prompt = new LimiterPrompt(this._doc, this);\n                    break;\n                case \"customScale\":\n                    this.prompt = new CustomScalePrompt(this._doc);\n                    break;\n                case \"customChipSettings\":\n                    this.prompt = new CustomChipPrompt(this._doc, this);\n                    break;\n                case \"customEQFilterSettings\":\n                    this.prompt = new CustomFilterPrompt(this._doc, this, false);\n                    break;\n                case \"customNoteFilterSettings\":\n                    this.prompt = new CustomFilterPrompt(this._doc, this, true);\n                    break;\n                case \"theme\":\n                    this.prompt = new ThemePrompt(this._doc);\n                    break;\n                case \"layout\":\n                    this.prompt = new LayoutPrompt(this._doc);\n                    break;\n                case \"recordingSetup\":\n                    this.prompt = new RecordingSetupPrompt(this._doc);\n                    break;\n\t\tcase \"addExternal\":\n                        this.prompt = new AddSamplesPrompt(this._doc);\n                        break;\n\t\tcase \"generateEuclideanRhythm\":\n                        this.prompt = new EuclideanRhythmPrompt(this._doc);\n                        break;\n\t\tcase \"custom\":\n                        this.prompt = new CustomPrompt(this._doc, this._patternEditor, this._trackArea, document.getElementById(\"beepboxEditorContainer\")!);\n                        break;\n                case \"visualLoopControls\":\n                    this.prompt = new VisualLoopControlsPrompt(this._doc, this);\n                    break;\n                case \"sampleLoadingStatus\":\n                    this.prompt = new SampleLoadingStatusPrompt(this._doc);\n                    break;\n                default:\n                    this.prompt = new TipPrompt(this._doc, promptName);\n                    break;\n            }\n\n            if (this.prompt) {\n                if (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt || this.prompt instanceof CustomFilterPrompt || this.prompt instanceof VisualLoopControlsPrompt)) {\n                    this._wasPlaying = this._doc.synth.playing;\n                    this._doc.performance.pause();\n                }\n                this._promptContainer.style.display = \"\";\n                this._promptContainer.appendChild(this.prompt.container);\n            }\n        }\n    }\n\n    public refocusStage = (): void => {\n        this.mainLayer.focus({ preventScroll: true });\n    }\n\n    private _onFocusIn = (event: Event): void => {\n        if (this._doc.synth.recording && event.target != this.mainLayer && event.target != this._stopButton && event.target != this._volumeSlider.input) {\n            // Don't allow using tab to focus on the song settings while recording,\n            // since interacting with them while recording would mess up the recording.\n            this.refocusStage();\n        }\n    }\n\n    // Refocus stage if a sub-element that needs focus isn't being edited.\n    private _refocusStageNotEditing = (): void => {\n        if (!this._patternEditor.editingModLabel)\n            this.mainLayer.focus({ preventScroll: true });\n    }\n\n    public changeBarScrollPos(offset: number) {\n        this._barScrollBar.changePos(offset);\n    }\n\n    public whenUpdated = (): void => {\n        const prefs: Preferences = this._doc.prefs;\n        this._muteEditor.container.style.display = prefs.enableChannelMuting ? \"\" : \"none\";\n        const trackBounds: DOMRect = this._trackVisibleArea.getBoundingClientRect();\n        this._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left - (prefs.enableChannelMuting ? 32 : 0)) / this._doc.getBarWidth());\n        this._doc.trackVisibleChannels = Math.floor((trackBounds.bottom - trackBounds.top - 30) / this._doc.getChannelHeight());\n        for (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.channels.length; i++) {\n            const channel: Channel = this._doc.song.channels[i];\n            for (let j: number = 0; j < channel.instruments.length; j++) {\n                this._doc.synth.determineInvalidModulators(channel.instruments[j]);\n            }\n        }\n        this._barScrollBar.render();\n        this._muteEditor.render();\n        this._trackEditor.render();\n\n        if (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\n            this._patternEditor.stopEditingModLabel(false);\n        }\n\n        this._piano.container.style.display = prefs.showLetters ? \"\" : \"none\";\n        this._octaveScrollBar.container.style.display = prefs.showScrollBar ? \"\" : \"none\";\n        this._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\n        this._volumeBarBox.style.display = this._doc.prefs.displayVolumeBar ? \"\" : \"none\";\n        this._globalOscscopeContainer.style.display = this._doc.prefs.showOscilloscope ? \"\" : \"none\";\n        this._doc.synth.oscEnabled = this._doc.prefs.showOscilloscope;\n        this._sampleLoadingStatusContainer.style.display = this._doc.prefs.showSampleLoadingStatus ? \"\" : \"none\";\n\n        if (this._doc.getFullScreen()) {\n            const semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.getVisiblePitchCount();\n            const targetBeatWidth: number = semitoneHeight * 5;\n            const minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\n            const maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\n            const beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\n            const patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\n\n            this._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\n            this._patternEditor.container.style.width = patternEditorWidth + \"px\";\n            this._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\n            this._patternEditorPrev.container.style.flexShrink = \"0\";\n            this._patternEditor.container.style.flexShrink = \"0\";\n            this._patternEditorNext.container.style.flexShrink = \"0\";\n            this._patternEditorPrev.container.style.display = \"\";\n            this._patternEditorNext.container.style.display = \"\";\n            this._patternEditorPrev.render();\n            this._patternEditorNext.render();\n            this._zoomInButton.style.display = (this._doc.channel < this._doc.song.pitchChannelCount) ? \"\" : \"none\";\n            this._zoomOutButton.style.display = (this._doc.channel < this._doc.song.pitchChannelCount) ? \"\" : \"none\";\n            this._zoomInButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\n            this._zoomOutButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\n        } else {\n            this._patternEditor.container.style.width = \"\";\n            this._patternEditor.container.style.flexShrink = \"\";\n            this._patternEditorPrev.container.style.display = \"none\";\n            this._patternEditorNext.container.style.display = \"none\";\n            this._zoomInButton.style.display = \"none\";\n            this._zoomOutButton.style.display = \"none\";\n        }\n        this._patternEditor.render();\n\n        const optionCommands: ReadonlyArray<string> = [\n            (prefs.autoPlay ? \"✓ \" : \"　\") + \"Auto Play on Load\",\n            (prefs.autoFollow ? \"✓ \" : \"　\") + \"Keep Current Pattern Selected\",\n            (prefs.enableNotePreview ? \"✓ \" : \"　\") + \"Hear Preview of Added Notes\",\n            (prefs.showLetters ? \"✓ \" : \"　\") + \"Show Piano Keys\",\n            (prefs.showFifth ? \"✓ \" : \"　\") + 'Highlight \"Fifth\" of Song Key',\n            (prefs.notesOutsideScale ? \"✓ \" : \"　\") + \"Allow Adding Notes Not in Scale\",\n            (prefs.defaultScale == this._doc.song.scale ? \"✓ \" : \"　\") + \"Use Current Scale as Default\",\n            (prefs.showChannels ? \"✓ \" : \"　\") + \"Show Notes From All Channels\",\n            (prefs.showScrollBar ? \"✓ \" : \"　\") + \"Show Octave Scroll Bar\",\n            (prefs.alwaysFineNoteVol ? \"✓ \" : \"　\") + \"Always Fine Note Volume\",\n            (prefs.enableChannelMuting ? \"✓ \" : \"　\") + \"Enable Channel Muting\",\n            (prefs.displayBrowserUrl ? \"✓ \" : \"　\") + \"Display Song Data in URL\",\n            (prefs.displayVolumeBar ? \"✓ \" : \"　\") + \"Show Playback Volume\",\n            (prefs.showOscilloscope ? \"✓ \" : \"　\") + \"Show Oscilloscope\",\n            (prefs.showSampleLoadingStatus ? \"✓ \" : \"　\") + \"Show Sample Loading Status\",\n            \"　Set Layout...\",\n            \"　Set Theme...\",\n\t    \"　Custom Theme...\",\n            \"　Set Up Note Recording...\",\n        ];\n        for (let i: number = 0; i < optionCommands.length; i++) {\n            const option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\n            if (option.textContent != optionCommands[i]) option.textContent = optionCommands[i];\n        }\n\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrumentIndex: number = this._doc.getCurrentInstrument();\n        const instrument: Instrument = channel.instruments[instrumentIndex];\n        const wasActive: boolean = this.mainLayer.contains(document.activeElement);\n        const activeElement: Element | null = document.activeElement;\n        const colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\n\n        for (let i: number = this._effectsSelect.childElementCount - 1; i < Config.effectOrder.length; i++) {\n            this._effectsSelect.appendChild(option({ value: i }));\n        }\n        this._effectsSelect.selectedIndex = -1;\n        for (let i: number = 0; i < Config.effectOrder.length; i++) {\n            let effectFlag: number = Config.effectOrder[i];\n            const selected: boolean = ((instrument.effects & (1 << effectFlag)) != 0);\n            const label: string = (selected ? \"✓ \" : \"　\") + Config.effectNames[effectFlag];\n            const option: HTMLOptionElement = <HTMLOptionElement>this._effectsSelect.children[i + 1];\n            if (option.textContent != label) option.textContent = label;\n        }\n\n        setSelectedValue(this._scaleSelect, this._doc.song.scale);\n        this._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\n        setSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\n        this._octaveStepper.value = Math.round(this._doc.song.octave).toString();\n        this._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\n        this._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\n        this._songTitleInputBox.updateValue(this._doc.song.title);\n\n        this._eqFilterTypeRow.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n        this._eqFilterTypeRow.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n        this._eqFilterTypeRow.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n        this._eqFilterTypeRow.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n\n        if (instrument.eqFilterType) {\n            this._eqFilterSimpleButton.classList.remove(\"deactivated\");\n            this._eqFilterAdvancedButton.classList.add(\"deactivated\");\n            this._eqFilterRow.style.display = \"none\";\n            this._eqFilterSimpleCutRow.style.display = \"\";\n            this._eqFilterSimplePeakRow.style.display = \"\";\n        } else {\n            this._eqFilterSimpleButton.classList.add(\"deactivated\");\n            this._eqFilterAdvancedButton.classList.remove(\"deactivated\");\n            this._eqFilterRow.style.display = \"\";\n            this._eqFilterSimpleCutRow.style.display = \"none\";\n            this._eqFilterSimplePeakRow.style.display = \"none\";\n        }\n\n        setSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\n\n        if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\n\n            this._customInstrumentSettingsGroup.style.display = \"\";\n            this._panSliderRow.style.display = \"\";\n            this._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\n            this._detuneSliderRow.style.display = \"\";\n            this._instrumentVolumeSliderRow.style.display = \"\";\n            this._instrumentTypeSelectRow.style.setProperty(\"display\", \"\");\n            this._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\n            this._instrumentSettingsGroup.insertBefore(this._instrumentsButtonRow, this._instrumentSettingsGroup.firstChild);\n            this._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\n\n            if (this._doc.song.channels[this._doc.channel].name == \"\") {\n                this._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\n            }\n            else {\n                this._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\n            }\n\n            this._modulatorGroup.style.display = \"none\";\n\n            // Check if current viewed pattern on channel is used anywhere\n            // + Check if current instrument on channel is used anywhere\n            // + Check if a mod targets this\n            this._usageCheck(this._doc.channel, instrumentIndex);\n\n            if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\n                this._pitchedPresetSelect.style.display = \"none\";\n                this._drumPresetSelect.style.display = \"\";\n                // Also hide select2\n                $(\"#pitchPresetSelect\").parent().hide();\n                $(\"#drumPresetSelect\").parent().show();\n\n                setSelectedValue(this._drumPresetSelect, instrument.preset);\n            } else {\n                this._pitchedPresetSelect.style.display = \"\";\n                this._drumPresetSelect.style.display = \"none\";\n\n                // Also hide select2\n                $(\"#pitchPresetSelect\").parent().show();\n                $(\"#drumPresetSelect\").parent().hide();\n\n                setSelectedValue(this._pitchedPresetSelect, instrument.preset);\n            }\n\n            if (instrument.type == InstrumentType.noise) {\n                this._chipWaveSelectRow.style.display = \"none\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                        this._chipWaveLoopStartRow.style.display = \"none\";\n                        this._chipWaveLoopEndRow.style.display = \"none\";\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        // advloop addition\n                this._chipNoiseSelectRow.style.display = \"\";\n                setSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\n            } else {\n                this._chipNoiseSelectRow.style.display = \"none\";\n            }\n            if (instrument.type == InstrumentType.spectrum) {\n                this._chipWaveSelectRow.style.display = \"none\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                        this._chipWaveLoopStartRow.style.display = \"none\";\n                        this._chipWaveLoopEndRow.style.display = \"none\";\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        // advloop addition\n                this._spectrumRow.style.display = \"\";\n                this._spectrumEditor.render();\n            } else {\n                this._spectrumRow.style.display = \"none\";\n            }\n            if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                this._chipWaveSelectRow.style.display = \"none\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                        this._chipWaveLoopStartRow.style.display = \"none\";\n                        this._chipWaveLoopEndRow.style.display = \"none\";\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        // advloop addition\n                this._harmonicsRow.style.display = \"\";\n                this._harmonicsEditor.render();\n            } else {\n                this._harmonicsRow.style.display = \"none\";\n            }\n            if (instrument.type == InstrumentType.pickedString) {\n                this._chipWaveSelectRow.style.display = \"none\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                        this._chipWaveLoopStartRow.style.display = \"none\";\n                        this._chipWaveLoopEndRow.style.display = \"none\";\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        // advloop addition\n                this._stringSustainRow.style.display = \"\";\n                this._stringSustainSlider.updateValue(instrument.stringSustain);\n            } else {\n                this._stringSustainRow.style.display = \"none\";\n            }\n            if (instrument.type == InstrumentType.drumset) {\n                this._drumsetGroup.style.display = \"\";\n                this._chipWaveSelectRow.style.display = \"none\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                        this._chipWaveLoopStartRow.style.display = \"none\";\n                        this._chipWaveLoopEndRow.style.display = \"none\";\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        // advloop addition\n                this._fadeInOutRow.style.display = \"none\";\n                for (let i: number = 0; i < Config.drumCount; i++) {\n                    setSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\n                    this._drumsetSpectrumEditors[i].render();\n                }\n            } else {\n                this._drumsetGroup.style.display = \"none\";\n                this._fadeInOutRow.style.display = \"\";\n                this._fadeInOutEditor.render();\n            }\n\n            if (instrument.type == InstrumentType.chip) {\n                this._chipWaveSelectRow.style.display = \"\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"\";\n                        if (instrument.isUsingAdvancedLoopControls) {\n                            this._chipWaveLoopModeSelectRow.style.display = \"\";\n                            this._chipWaveLoopStartRow.style.display = \"\";\n                            this._chipWaveLoopEndRow.style.display = \"\";\n                            this._chipWaveStartOffsetRow.style.display = \"\";\n                            this._chipWavePlayBackwardsRow.style.display = \"\";\n                        } else {\n                            this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                            this._chipWaveLoopStartRow.style.display = \"none\";\n                            this._chipWaveLoopEndRow.style.display = \"none\";\n                            this._chipWaveStartOffsetRow.style.display = \"none\";\n                            this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        }\n                        // advloop addition\n                setSelectedValue(this._chipWaveSelect, instrument.chipWave);\n\t\t    \t\t\t\t\t\t // advloop addition\n                        this._useChipWaveAdvancedLoopControlsBox.checked = instrument.isUsingAdvancedLoopControls ? true : false;\n                        setSelectedValue(this._chipWaveLoopModeSelect, instrument.chipWaveLoopMode);\n                        this._chipWaveLoopStartStepper.value = instrument.chipWaveLoopStart + \"\";\n                        // this._chipWaveLoopStartStepper.max = (chipWaveLength - 1) + \"\";\n                        this._chipWaveLoopEndStepper.value = instrument.chipWaveLoopEnd + \"\";\n                        // this._chipWaveLoopEndStepper.max = (chipWaveLength - 1) + \"\";\n                        this._chipWaveStartOffsetStepper.value = instrument.chipWaveStartOffset + \"\";\n                        // this._chipWaveStartOffsetStepper.max = (chipWaveLength - 1) + \"\";\n                        this._chipWavePlayBackwardsBox.checked = instrument.chipWavePlayBackwards ? true : false;\n                        // advloop addition\n            }\n\n            if (instrument.type == InstrumentType.customChipWave) {\n                this._customWaveDraw.style.display = \"\";\n                this._chipWaveSelectRow.style.display = \"none\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                        this._chipWaveLoopStartRow.style.display = \"none\";\n                        this._chipWaveLoopEndRow.style.display = \"none\";\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        // advloop addition\n            }\n            else {\n                this._customWaveDraw.style.display = \"none\";\n            }\n\n            if (instrument.type == InstrumentType.pwm) {\n                this._chipWaveSelectRow.style.display = \"none\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                        this._chipWaveLoopStartRow.style.display = \"none\";\n                        this._chipWaveLoopEndRow.style.display = \"none\";\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        // advloop addition\n                this._pulseWidthRow.style.display = \"\";\n                this._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\n                this._pulseWidthSlider.updateValue(instrument.pulseWidth);\n\n                // this._decimalOffsetRow.style.display = \"\";\n                this._decimalOffsetSlider.input.title = (Number(prettyNumber(instrument.decimalOffset)) / 100) <= 0 ? \"none\" : \"-\" + (Number(prettyNumber(instrument.decimalOffset)) / 100) + \"%\";\n                this._decimalOffsetSlider.updateValue(instrument.decimalOffset);\n\n                // this._pulseWidthDropdownGroup.style.display = \"\";\n                this._pulseWidthDropdownGroup.style.display = (this._openPulseWidthDropdown ? \"\" : \"none\");\n            } else {\n                this._pulseWidthRow.style.display = \"none\";\n                // this._decimalOffsetRow.style.display = \"none\";\n                this._pulseWidthDropdownGroup.style.display = \"none\";\n            }\n\n\n            if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n                this._phaseModGroup.style.display = \"\";\n                this._feedbackRow2.style.display = \"\";\n                this._chipWaveSelectRow.style.display = \"none\";\n\t\t    \t\t\t\t\t\t// advloop addition\n                        this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                        this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                        this._chipWaveLoopStartRow.style.display = \"none\";\n                        this._chipWaveLoopEndRow.style.display = \"none\";\n                        this._chipWaveStartOffsetRow.style.display = \"none\";\n                        this._chipWavePlayBackwardsRow.style.display = \"none\";\n                        // advloop addition\n                setSelectedValue(this._algorithmSelect, instrument.algorithm);\n                setSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\n                this._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\n                for (let i: number = 0; i < Config.operatorCount + (instrument.type == InstrumentType.fm6op? 2 : 0); i++) {\n                    const isCarrier: boolean = instrument.type == InstrumentType.fm ? (i < Config.algorithms[instrument.algorithm].carrierCount): (i < instrument.customAlgorithm.carrierCount);\n                    this._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\n                    setSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\n                    this._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\n                    setSelectedValue(this._operatorWaveformSelects[i], instrument.operators[i].waveform);\n                    this._operatorWaveformPulsewidthSliders[i].updateValue(instrument.operators[i].pulseWidth);\n                    this._operatorWaveformPulsewidthSliders[i].input.title = \"\" + Config.pwmOperatorWaves[instrument.operators[i].pulseWidth].name;\n                    this._operatorDropdownGroups[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\n                    const operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\n                    this._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\n                    this._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\n                    this._operatorDropdownGroups[i].style.display = (this._openOperatorDropdowns[i] ? \"\" : \"none\");\n                    if (instrument.operators[i].waveform == 2) {\n                        this._operatorWaveformPulsewidthSliders[i].container.style.display = \"\";\n                        this._operatorWaveformHints[i].style.display = \"none\";\n                    } else {\n                        this._operatorWaveformPulsewidthSliders[i].container.style.display = \"none\";\n                        this._operatorWaveformHints[i].style.display = \"\";\n                    }\n                }\n                if (instrument.type == InstrumentType.fm6op){\n                    setSelectedValue(this._algorithm6OpSelect, instrument.algorithm6Op);\n                    setSelectedValue(this._feedback6OpTypeSelect, instrument.feedbackType6Op);\n                    this._customAlgorithmCanvas.redrawCanvas();\n                    this._algorithm6OpSelectRow.style.display = \"\";\n                    this._feedback6OpRow1.style.display = \"\";\n                    this._operatorRows[4].style.display = \"\";\n                    this._operatorRows[5].style.display = \"\";\n                    this._operatorDropdownGroups[4].style.display = (this._openOperatorDropdowns[4] ? \"\" : \"none\");\n                    this._operatorDropdownGroups[5].style.display = (this._openOperatorDropdowns[5] ? \"\" : \"none\");\n                    this._algorithmSelectRow.style.display = \"none\";\n                    this._feedbackRow1.style.display = \"none\";\n                }else{\n                    this._algorithm6OpSelectRow.style.display = \"none\";\n                    this._feedback6OpRow1.style.display = \"none\";\n                    this._operatorRows[4].style.display = \"none\";\n                    this._operatorRows[5].style.display = \"none\";\n                    this._operatorDropdownGroups[4].style.display = \"none\";\n                    this._operatorDropdownGroups[5].style.display = \"none\";\n                    this._feedbackRow1.style.display = \"\";\n                    this._algorithmSelectRow.style.display = \"\";\n                }\n            }\n            else {\n                this._algorithm6OpSelectRow.style.display = \"none\";\n                this._feedback6OpRow1.style.display = \"none\";\n                this._algorithmSelectRow.style.display = \"none\";\n                this._phaseModGroup.style.display = \"none\";\n                this._feedbackRow1.style.display = \"none\";\n                this._feedbackRow2.style.display = \"none\";\n            }\n            this._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\n\n\n            if (effectsIncludeTransition(instrument.effects)) {\n                this._transitionRow.style.display = \"\";\n                if (this._openTransitionDropdown)\n                    this._transitionDropdownGroup.style.display = \"\";\n                setSelectedValue(this._transitionSelect, instrument.transition);\n            } else {\n                this._transitionDropdownGroup.style.display = \"none\";\n                this._transitionRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeChord(instrument.effects)) {\n                this._chordSelectRow.style.display = \"\";\n                this._chordDropdown.style.display = (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) ? \"\" : \"none\";\n                this._chordDropdownGroup.style.display = (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && this._openChordDropdown) ? \"\" : \"none\";\n                setSelectedValue(this._chordSelect, instrument.chord);\n            } else {\n                this._chordSelectRow.style.display = \"none\";\n                this._chordDropdown.style.display = \"none\";\n                this._chordDropdownGroup.style.display = \"none\";\n            }\n\n            if (effectsIncludePitchShift(instrument.effects)) {\n                this._pitchShiftRow.style.display = \"\";\n                this._pitchShiftSlider.updateValue(instrument.pitchShift);\n                this._pitchShiftSlider.input.title = (instrument.pitchShift - Config.pitchShiftCenter) + \" semitone(s)\";\n                for (const marker of this._pitchShiftFifthMarkers) {\n                    marker.style.display = prefs.showFifth ? \"\" : \"none\";\n                }\n            } else {\n                this._pitchShiftRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeDetune(instrument.effects)) {\n                this._detuneSliderRow.style.display = \"\";\n                this._detuneSlider.updateValue(instrument.detune - Config.detuneCenter);\n                this._detuneSlider.input.title = (Synth.detuneToCents(instrument.detune)) + \" cent(s)\";\n            } else {\n                this._detuneSliderRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeVibrato(instrument.effects)) {\n                this._vibratoSelectRow.style.display = \"\";\n                if (this._openVibratoDropdown)\n                    this._vibratoDropdownGroup.style.display = \"\";\n                setSelectedValue(this._vibratoSelect, instrument.vibrato);\n            } else {\n                this._vibratoDropdownGroup.style.display = \"none\";\n                this._vibratoSelectRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeNoteFilter(instrument.effects)) {\n\n                this._noteFilterTypeRow.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n                this._noteFilterTypeRow.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n                this._noteFilterTypeRow.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n                this._noteFilterTypeRow.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n                this._noteFilterTypeRow.style.display = \"\";\n\n                this._noteFilterEditor.render();\n\n                if (instrument.noteFilterType) {\n                    this._noteFilterSimpleButton.classList.remove(\"deactivated\");\n                    this._noteFilterAdvancedButton.classList.add(\"deactivated\");\n                    this._noteFilterRow.style.display = \"none\";\n                    this._noteFilterSimpleCutRow.style.display = \"\";\n                    this._noteFilterSimplePeakRow.style.display = \"\";\n                } else {\n                    this._noteFilterSimpleButton.classList.add(\"deactivated\");\n                    this._noteFilterAdvancedButton.classList.remove(\"deactivated\");\n                    this._noteFilterRow.style.display = \"\";\n                    this._noteFilterSimpleCutRow.style.display = \"none\";\n                    this._noteFilterSimplePeakRow.style.display = \"none\";\n                }\n            } else {\n                this._noteFilterRow.style.display = \"none\";\n                this._noteFilterSimpleCutRow.style.display = \"none\";\n                this._noteFilterSimplePeakRow.style.display = \"none\";\n                this._noteFilterTypeRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeDistortion(instrument.effects)) {\n                this._distortionRow.style.display = \"\";\n                if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.pwm)\n                    this._aliasingRow.style.display = \"\";\n                else\n                    this._aliasingRow.style.display = \"none\";\n                this._distortionSlider.updateValue(instrument.distortion);\n            } else {\n                this._distortionRow.style.display = \"none\";\n                this._aliasingRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeBitcrusher(instrument.effects)) {\n                this._bitcrusherQuantizationRow.style.display = \"\";\n                this._bitcrusherFreqRow.style.display = \"\";\n                this._bitcrusherQuantizationSlider.updateValue(instrument.bitcrusherQuantization);\n                this._bitcrusherFreqSlider.updateValue(instrument.bitcrusherFreq);\n            } else {\n                this._bitcrusherQuantizationRow.style.display = \"none\";\n                this._bitcrusherFreqRow.style.display = \"none\";\n            }\n\n            if (effectsIncludePanning(instrument.effects)) {\n                this._panSliderRow.style.display = \"\";\n                if (this._openPanDropdown)\n                    this._panDropdownGroup.style.display = \"\";\n                this._panSlider.updateValue(instrument.pan);\n            } else {\n                this._panSliderRow.style.display = \"none\";\n                this._panDropdownGroup.style.display = \"none\";\n            }\n\n            if (effectsIncludeChorus(instrument.effects)) {\n                this._chorusRow.style.display = \"\";\n                this._chorusSlider.updateValue(instrument.chorus);\n            } else {\n                this._chorusRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeEcho(instrument.effects)) {\n                this._echoSustainRow.style.display = \"\";\n                this._echoSustainSlider.updateValue(instrument.echoSustain);\n                this._echoDelayRow.style.display = \"\";\n                this._echoDelaySlider.updateValue(instrument.echoDelay);\n                this._echoDelaySlider.input.title = (Math.round((instrument.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat) * 1000) / 1000) + \" beat(s)\";\n            } else {\n                this._echoSustainRow.style.display = \"none\";\n                this._echoDelayRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeReverb(instrument.effects)) {\n                this._reverbRow.style.display = \"\";\n                this._reverbSlider.updateValue(instrument.reverb);\n            } else {\n                this._reverbRow.style.display = \"none\";\n            }\n\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                this._unisonSelectRow.style.display = \"\";\n                setSelectedValue(this._unisonSelect, instrument.unison);\n                this._unisonVoicesInputBox.value = instrument.unisonVoices + \"\";\n                this._unisonSpreadInputBox.value = instrument.unisonSpread + \"\";\n                this._unisonOffsetInputBox.value = instrument.unisonOffset + \"\";\n                this._unisonExpressionInputBox.value = instrument.unisonExpression + \"\";\n                this._unisonSignInputBox.value = instrument.unisonSign + \"\";\n                this._unisonDropdownGroup.style.display = (this._openUnisonDropdown ? \"\" : \"none\");\n            } else {\n                this._unisonSelectRow.style.display = \"none\";\n                this._unisonDropdownGroup.style.display = \"none\";\n            }\n\n            this._envelopeEditor.render();\n\n            for (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\n                let hidden: boolean = (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[chordIndex].customInterval);\n                const option: Element = this._chordSelect.children[chordIndex];\n                if (hidden) {\n                    if (!option.hasAttribute(\"hidden\")) {\n                        option.setAttribute(\"hidden\", \"\");\n                    }\n                } else {\n                    option.removeAttribute(\"hidden\");\n                }\n            }\n\n            this._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n            setSelectedValue(this._transitionSelect, instrument.transition);\n            setSelectedValue(this._vibratoSelect, instrument.vibrato);\n            setSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\n            setSelectedValue(this._chordSelect, instrument.chord);\n            this._panSliderInputBox.value = instrument.pan + \"\";\n            this._detuneSliderInputBox.value = (instrument.detune - Config.detuneCenter) + \"\";\n            this._instrumentVolumeSlider.updateValue(instrument.volume);\n            this._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\n            this._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\n            this._vibratoDelaySlider.updateValue(Math.round(instrument.vibratoDelay));\n            this._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\n            setSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\n            this._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\n            this._panDelaySlider.updateValue(instrument.panDelay);\n            this._vibratoDelaySlider.input.title = \"\" + Math.round(instrument.vibratoDelay);\n            this._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\n            this._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\n            this._panDelaySlider.input.title = \"\" + instrument.panDelay;\n            this._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\n            this._eqFilterSimpleCutSlider.updateValue(instrument.eqFilterSimpleCut);\n            this._eqFilterSimplePeakSlider.updateValue(instrument.eqFilterSimplePeak);\n            this._noteFilterSimpleCutSlider.updateValue(instrument.noteFilterSimpleCut);\n            this._noteFilterSimplePeakSlider.updateValue(instrument.noteFilterSimplePeak);\n\n            if (instrument.type == InstrumentType.customChipWave) {\n                this._customWaveDrawCanvas.redrawCanvas();\n\n                if (this.prompt instanceof CustomChipPrompt) {\n                    this.prompt.customChipCanvas.render();\n                }\n            }\n\n            this._renderInstrumentBar(channel, instrumentIndex, colors);\n        }\n        // Options for mod channel\n        else {\n            this._usageCheck(this._doc.channel, instrumentIndex);\n\n            this._pitchedPresetSelect.style.display = \"none\";\n            this._drumPresetSelect.style.display = \"none\";\n            $(\"#pitchPresetSelect\").parent().hide();\n            $(\"#drumPresetSelect\").parent().hide();\n            this._modulatorGroup.appendChild(this._instrumentCopyGroup);\n\n            this._modulatorGroup.insertBefore(this._instrumentsButtonRow, this._modulatorGroup.firstChild);\n            this._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\n            if (this._doc.song.channels[this._doc.channel].name == \"\") {\n                this._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\n            }\n            else {\n                this._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\n            }\n\n            this._chipNoiseSelectRow.style.display = \"none\";\n            this._chipWaveSelectRow.style.display = \"none\";\n\t\t\t\t\t\t\t // advloop addition\n                    this._useChipWaveAdvancedLoopControlsRow.style.display = \"none\";\n                    this._chipWaveLoopModeSelectRow.style.display = \"none\";\n                    this._chipWaveLoopStartRow.style.display = \"none\";\n                    this._chipWaveLoopEndRow.style.display = \"none\";\n                    this._chipWaveStartOffsetRow.style.display = \"none\";\n                    this._chipWavePlayBackwardsRow.style.display = \"none\";\n                    // advloop addition\n            this._spectrumRow.style.display = \"none\";\n            this._harmonicsRow.style.display = \"none\";\n            this._transitionRow.style.display = \"none\";\n            this._chordSelectRow.style.display = \"none\";\n            this._chordDropdownGroup.style.display = \"none\";\n            //this._filterCutoffRow.style.display = \"none\";\n            //this._filterResonanceRow.style.display = \"none\";\n            //this._filterEnvelopeRow.style.display = \"none\";\n            this._drumsetGroup.style.display = \"none\";\n            this._customWaveDraw.style.display = \"none\";\n            this._algorithmSelectRow.style.display = \"none\";\n            this._phaseModGroup.style.display = \"none\";\n            this._feedbackRow1.style.display = \"none\";\n            this._feedbackRow2.style.display = \"none\";\n            //this._pulseEnvelopeRow.style.display = \"none\";\n            this._pulseWidthRow.style.display = \"none\";\n            // this._decimalOffsetRow.style.display = \"none\";\n            this._vibratoSelectRow.style.display = \"none\";\n            this._vibratoDropdownGroup.style.display = \"none\";\n            //this._intervalSelectRow.style.display = \"none\";\n            this._detuneSliderRow.style.display = \"none\";\n            this._panSliderRow.style.display = \"none\";\n            this._panDropdownGroup.style.display = \"none\";\n            this._pulseWidthDropdownGroup.style.display = \"none\";\n            this._unisonDropdownGroup.style.display = \"none\";\n\n            this._modulatorGroup.style.display = \"\";\n            this._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n                let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                let modChannel: number = Math.max(0, instrument.modChannels[mod]);\n                let modInstrument: number = instrument.modInstruments[mod];\n\n                // Boundary checking\n                if (modInstrument >= this._doc.song.channels[modChannel].instruments.length + 2 || (modInstrument > 0 && this._doc.song.channels[modChannel].instruments.length <= 1)) {\n                    modInstrument = 0;\n                    instrument.modInstruments[mod] = 0;\n                    instrument.modulators[mod] = 0;\n                }\n                if (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                    instrument.modInstruments[mod] = 0;\n                    instrument.modulators[mod] = 0;\n                }\n\n                // Build options for modulator channels (make sure it has the right number).\n                if (this._doc.recalcChannelNames || (this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\n                    while (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\n                    const channelList: string[] = [];\n                    channelList.push(\"none\");\n                    channelList.push(\"song\");\n                    for (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\n                        if (this._doc.song.channels[i].name == \"\") {\n                            channelList.push(\"pitch \" + (i + 1));\n                        }\n                        else {\n                            channelList.push(this._doc.song.channels[i].name);\n                        }\n                    }\n                    for (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\n                        if (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\n                            channelList.push(\"noise \" + (i + 1));\n                        }\n                        else {\n                            channelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\n                        }\n                    }\n                    buildOptions(this._modChannelBoxes[mod], channelList);\n                }\n\n                // Set selected index based on channel info.\n\n                this._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\n\n                let channel: Channel = this._doc.song.channels[modChannel];\n\n                // Build options for modulator instruments (make sure it has the right number).\n                if (this._modInstrumentBoxes[mod].children.length != channel.instruments.length + 2) {\n                    while (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\n                    const instrumentList: string[] = [];\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\n                        instrumentList.push(\"\" + i + 1);\n                    }\n                    instrumentList.push(\"all\");\n                    instrumentList.push(\"active\");\n                    buildOptions(this._modInstrumentBoxes[mod], instrumentList);\n                }\n\n                // If non-zero pattern, point to which instrument(s) is/are the current\n                if (channel.bars[this._doc.bar] > 0) {\n\n                    let usedInstruments: number[] = channel.patterns[channel.bars[this._doc.bar] - 1].instruments;\n\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\n\n                        if (usedInstruments.includes(i)) {\n                            this._modInstrumentBoxes[mod].options[i].label = \"🢒\" + (i + 1);\n                        }\n                        else {\n                            this._modInstrumentBoxes[mod].options[i].label = \"\" + (i + 1);\n                        }\n                    }\n                }\n                else {\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\n                        this._modInstrumentBoxes[mod].options[i].label = \"\" + (i + 1);\n                    }\n                }\n\n                // Set selected index based on instrument info.\n                this._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\n\n                // Build options for modulator settings (based on channel settings)\n\n                if (instrument.modChannels[mod] != -2) {\n                    while (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\n                    const settingList: string[] = [];\n                    const unusedSettingList: string[] = [];\n\n                    // Make sure these names match the names declared for modulators in SynthConfig.ts.\n\n                    settingList.push(\"none\");\n\n                    // Populate mod setting options for the song scope.\n                    if (instrument.modChannels[mod] == -1) {\n                        settingList.push(\"song volume\");\n                        settingList.push(\"tempo\");\n                        settingList.push(\"song reverb\");\n                        settingList.push(\"next bar\");\n                        settingList.push(\"song detune\");\n                    }\n                    // Populate mod setting options for instrument scope.\n                    else {\n\n                        settingList.push(\"note volume\");\n                        settingList.push(\"mix volume\");\n\n                        // Build a list of target instrument indices, types and other info. It will be a single type for a single instrument, but with \"all\" and \"active\" it could be more.\n                        // All or active are included together. Active allows any to be set, just in case the user fiddles with which are active later.\n                        let tgtInstrumentTypes: InstrumentType[] = [];\n                        let anyInstrumentAdvancedEQ:   boolean = false,\n                            anyInstrumentSimpleEQ:     boolean = false,\n                            anyInstrumentAdvancedNote: boolean = false,\n                            anyInstrumentSimpleNote:   boolean = false,\n                            anyInstrumentArps:         boolean = false,\n                            anyInstrumentPitchShifts:  boolean = false,\n                            anyInstrumentDetunes:      boolean = false,\n                            anyInstrumentVibratos:     boolean = false,\n                            anyInstrumentNoteFilters:  boolean = false,\n                            anyInstrumentDistorts:     boolean = false,\n                            anyInstrumentBitcrushes:   boolean = false,\n                            anyInstrumentPans:         boolean = false,\n                            anyInstrumentChorus:       boolean = false,\n                            anyInstrumentEchoes:       boolean = false,\n                            anyInstrumentReverbs:      boolean = false;\n                        let allInstrumentPitchShifts:  boolean = true,\n                            allInstrumentNoteFilters:  boolean = true,\n                            allInstrumentDetunes:      boolean = true,\n                            allInstrumentVibratos:     boolean = true,\n                            allInstrumentDistorts:     boolean = true,\n                            allInstrumentBitcrushes:   boolean = true,\n                            allInstrumentPans:         boolean = true,\n                            allInstrumentChorus:       boolean = true,\n                            allInstrumentEchoes:       boolean = true,\n                            allInstrumentReverbs:      boolean = true;\n                        let instrumentCandidates: number[] = [];\n                        if (modInstrument >= channel.instruments.length) {\n                            for (let i: number = 0; i < channel.instruments.length; i++) {\n                                instrumentCandidates.push(i);\n                            }\n                        } else {\n                            instrumentCandidates.push(modInstrument);\n                        }\n                        for (let i: number = 0; i < instrumentCandidates.length; i++) {\n                            let instrumentIndex = instrumentCandidates[i];\n\n                            if (!tgtInstrumentTypes.includes(channel.instruments[instrumentIndex].type))\n                                tgtInstrumentTypes.push(channel.instruments[instrumentIndex].type);\n                            if (channel.instruments[instrumentIndex].eqFilterType)\n                                anyInstrumentSimpleEQ = true;\n                            else\n                                anyInstrumentAdvancedEQ = true;\n                            if (effectsIncludeChord(channel.instruments[instrumentIndex].effects) && channel.instruments[instrumentIndex].getChord().arpeggiates) {\n                                anyInstrumentArps = true;\n                            }\n                            if (effectsIncludePitchShift(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentPitchShifts = true;\n                            }\n                            if (effectsIncludeDetune(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentDetunes = true;\n                            }\n                            else {\n                                allInstrumentDetunes = false;\n                            }\n                            if (effectsIncludeVibrato(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentVibratos = true;\n                            }\n                            else {\n                                allInstrumentVibratos = false;\n                            }\n                            if (effectsIncludeNoteFilter(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentNoteFilters = true;\n                                if (channel.instruments[instrumentIndex].noteFilterType)\n                                    anyInstrumentSimpleNote = true;\n                                else\n                                    anyInstrumentAdvancedNote = true;\n                            }\n                            else {\n                                allInstrumentNoteFilters = false;\n                            }\n                            if (effectsIncludeDistortion(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentDistorts = true;\n                            }\n                            else {\n                                allInstrumentDistorts = false;\n                            }\n                            if (effectsIncludeBitcrusher(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentBitcrushes = true;\n                            }\n                            else {\n                                allInstrumentBitcrushes = false;\n                            }\n                            if (effectsIncludePanning(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentPans = true;\n                            }\n                            else {\n                                allInstrumentPans = false;\n                            }\n                            if (effectsIncludeChorus(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentChorus = true;\n                            }\n                            else {\n                                allInstrumentChorus = false;\n                            }\n                            if (effectsIncludeEcho(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentEchoes = true;\n                            }\n                            else {\n                                allInstrumentEchoes = false;\n                            }\n                            if (effectsIncludeReverb(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentReverbs = true;\n                            }\n                            else {\n                                allInstrumentReverbs = false;\n                            }\n\n                        }\n                        if (anyInstrumentAdvancedEQ) {\n                            settingList.push(\"eq filter\");\n                        }\n                        if (anyInstrumentSimpleEQ) {\n                            settingList.push(\"eq filt cut\");\n                            settingList.push(\"eq filt peak\");\n                        }\n                        if (tgtInstrumentTypes.includes(InstrumentType.fm)) {\n                            settingList.push(\"fm slider 1\");\n                            settingList.push(\"fm slider 2\");\n                            settingList.push(\"fm slider 3\");\n                            settingList.push(\"fm slider 4\");\n                            settingList.push(\"fm feedback\");\n                        }\n                        if (tgtInstrumentTypes.includes(InstrumentType.fm6op)) {\n                            settingList.push(\"fm slider 1\");\n                            settingList.push(\"fm slider 2\");\n                            settingList.push(\"fm slider 3\");\n                            settingList.push(\"fm slider 4\");\n                            settingList.push(\"fm slider 5\");\n                            settingList.push(\"fm slider 6\");\n                            settingList.push(\"fm feedback\");\n                        }\n                        if (tgtInstrumentTypes.includes(InstrumentType.pwm)) {\n                            settingList.push(\"pulse width\");\n                            settingList.push(\"decimal offset\");\n                        }\n                        if (tgtInstrumentTypes.includes(InstrumentType.pickedString)) {\n                            settingList.push(\"sustain\");\n                        }\n                        if (anyInstrumentArps) {\n                            settingList.push(\"arp speed\");\n                            settingList.push(\"reset arp\");\n                        }\n                        if (anyInstrumentPitchShifts) {\n                            settingList.push(\"pitch shift\");\n                        }\n                        if (!allInstrumentPitchShifts) {\n                            unusedSettingList.push(\"+ pitch shift\");\n                        }\n                        if (anyInstrumentDetunes) {\n                            settingList.push(\"detune\");\n                        }\n                        if (!allInstrumentDetunes) {\n                            unusedSettingList.push(\"+ detune\");\n                        }\n                        if (anyInstrumentVibratos) {\n                            settingList.push(\"vibrato depth\");\n                            settingList.push(\"vibrato speed\");\n                            settingList.push(\"vibrato delay\");\n                        }\n                        if (!allInstrumentVibratos) {\n                            unusedSettingList.push(\"+ vibrato depth\");\n                            unusedSettingList.push(\"+ vibrato speed\");\n                            unusedSettingList.push(\"+ vibrato delay\");\n                        }\n                        if (anyInstrumentNoteFilters) {\n                            if (anyInstrumentAdvancedNote) {\n                                settingList.push(\"note filter\");\n                            }\n                            if (anyInstrumentSimpleNote) {\n                                settingList.push(\"note filt cut\");\n                                settingList.push(\"note filt peak\");\n                            }\n                        }\n                        if (!allInstrumentNoteFilters) {\n                            unusedSettingList.push(\"+ note filter\");\n                        }\n                        if (anyInstrumentDistorts) {\n                            settingList.push(\"distortion\");\n                        }\n                        if (!allInstrumentDistorts) {\n                            unusedSettingList.push(\"+ distortion\");\n                        }\n                        if (anyInstrumentBitcrushes) {\n                            settingList.push(\"bit crush\");\n                            settingList.push(\"freq crush\");\n                        }\n                        if (!allInstrumentBitcrushes) {\n                            unusedSettingList.push(\"+ bit crush\");\n                            unusedSettingList.push(\"+ freq crush\");\n                        }\n                        if (anyInstrumentPans) {\n                            settingList.push(\"pan\");\n                            settingList.push(\"pan delay\");\n                        }\n                        if (!allInstrumentPans) {\n                            unusedSettingList.push(\"+ pan\");\n                            unusedSettingList.push(\"+ pan delay\");\n                        }\n                        if (anyInstrumentChorus) {\n                            settingList.push(\"chorus\");\n                        }\n                        if (!allInstrumentChorus) {\n                            unusedSettingList.push(\"+ chorus\");\n                        }\n                        if (anyInstrumentEchoes) {\n                            settingList.push(\"echo\");\n                            // Disabled currently!\n                            //settingList.push(\"echo delay\");\n                        }\n                        if (!allInstrumentEchoes) {\n                            unusedSettingList.push(\"+ echo\");\n                            //unusedSettingList.push(\"echo delay\");\n                        }\n                        if (anyInstrumentReverbs) {\n                            settingList.push(\"reverb\");\n                        }\n                        if (!allInstrumentReverbs) {\n                            unusedSettingList.push(\"+ reverb\");\n                        }\n\n                    }\n\n                    buildOptions(this._modSetBoxes[mod], settingList);\n                    if (unusedSettingList.length > 0) {\n                        this._modSetBoxes[mod].appendChild(option({ selected: false, disabled: true, value: \"Add Effect\" }, \"Add Effect\"));\n                        buildOptions(this._modSetBoxes[mod], unusedSettingList);\n                    }\n\n                    let setIndex: number = settingList.indexOf(Config.modulators[instrument.modulators[mod]].name);\n\n                    // Catch instances where invalid set forced setting to \"none\"\n                    if (setIndex == -1) {\n                        this._modSetBoxes[mod].insertBefore(option({ value: Config.modulators[instrument.modulators[mod]].name, style: \"color: red;\" }, Config.modulators[instrument.modulators[mod]].name), this._modSetBoxes[mod].children[0]);\n                        this._modSetBoxes[mod].selectedIndex = 0;\n                        //instrument.modulators[mod] = 0;\n                        //instrument.modInstruments[mod] = 0;\n                        this._whenSetModSetting(mod, true);\n                    }\n                    else {\n                        this._modSetBoxes[mod].selectedIndex = setIndex;\n                        this._modSetBoxes[mod].classList.remove(\"invalidSetting\");\n                        instrument.invalidModulators[mod] = false;\n                    }\n\n                } else if (this._modSetBoxes[mod].selectedIndex > 0) {\n                    this._modSetBoxes[mod].selectedIndex = 0;\n                    this._whenSetModSetting(mod);\n                }\n\n                //Hide instrument select if channel is \"none\" or \"song\"\n                if (instrument.modChannels[mod] < 0) {\n                    ((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\n                    $(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\n                    $(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\n\n                    //Hide setting select if channel is \"none\"\n                    if (instrument.modChannels[mod] == -2) {\n                        $(\"#modSettingText\" + mod).get(0).style.display = \"none\";\n                        ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\n                    }\n                    else {\n                        $(\"#modSettingText\" + mod).get(0).style.display = \"\";\n                        ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\n                    }\n\n                    this._modTargetIndicators[mod].style.setProperty(\"fill\", ColorConfig.uiWidgetFocus);\n                    this._modTargetIndicators[mod].classList.remove(\"modTarget\");\n\n                }\n                else {\n                    ((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (channel.instruments.length > 1) ? \"\" : \"none\";\n                    $(\"#modInstrumentText\" + mod).get(0).style.display = (channel.instruments.length > 1) ? \"\" : \"none\";\n                    $(\"#modChannelText\" + mod).get(0).innerText = (channel.instruments.length > 1) ? \"Ch:\" : \"Channel:\";\n                    $(\"#modSettingText\" + mod).get(0).style.display = \"\";\n                    ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\n\n                    this._modTargetIndicators[mod].style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\n                    this._modTargetIndicators[mod].classList.add(\"modTarget\");\n                }\n\n                let filterType: string = Config.modulators[instrument.modulators[mod]].name;\n                if (filterType == \"eq filter\" || filterType == \"note filter\") {\n                    $(\"#modFilterText\" + mod).get(0).style.display = \"\";\n                    $(\"#modSettingText\" + mod).get(0).style.setProperty(\"margin-bottom\", \"2px\");\n\n                    let useInstrument: number = instrument.modInstruments[mod];\n                    let modChannel: Channel = this._doc.song.channels[Math.max(0, instrument.modChannels[mod])];\n                    let tmpCount: number = -1;\n                    if (useInstrument >= modChannel.instruments.length) {\n                        // Use greatest number of dots among all instruments if setting is 'all' or 'active'. If it won't have an effect on one, no worry.\n                        for (let i: number = 0; i < modChannel.instruments.length; i++) {\n                            if (filterType == \"eq filter\") {\n                                if (modChannel.instruments[i].eqFilter.controlPointCount > tmpCount) {\n                                    tmpCount = modChannel.instruments[i].eqFilter.controlPointCount;\n                                    useInstrument = i;\n                                }\n                            } else {\n                                if (modChannel.instruments[i].noteFilter.controlPointCount > tmpCount) {\n                                    tmpCount = modChannel.instruments[i].noteFilter.controlPointCount;\n                                    useInstrument = i;\n                                }\n                            }\n                        }\n                    }\n\n                    // Build options for modulator filters (make sure it has the right number of filter dots).\n                    let dotCount: number = (filterType == \"eq filter\")\n                        ? channel.instruments[useInstrument].eqFilter.controlPointCount\n                        : channel.instruments[useInstrument].noteFilter.controlPointCount;\n\n                    const isSimple: boolean = (filterType == \"eq filter\" ? channel.instruments[useInstrument].eqFilterType : channel.instruments[useInstrument].noteFilterType);\n                    if (isSimple)\n                        dotCount = 0;\n\n                    if (isSimple || this._modFilterBoxes[mod].children.length != 1 + dotCount * 2) {\n                        while (this._modFilterBoxes[mod].firstChild) this._modFilterBoxes[mod].remove(0);\n                        const dotList: string[] = [];\n                        if (!isSimple)\n                            dotList.push(\"morph\");\n                        for (let i: number = 0; i < dotCount; i++) {\n                            dotList.push(\"dot \" + (i + 1) + \" x\");\n                            dotList.push(\"dot \" + (i + 1) + \" y\");\n                        }\n                        buildOptions(this._modFilterBoxes[mod], dotList);\n                    }\n\n                    if (isSimple || instrument.modFilterTypes[mod] >= this._modFilterBoxes[mod].length) {\n                        this._modFilterBoxes[mod].classList.add(\"invalidSetting\");\n                        instrument.invalidModulators[mod] = true;\n                        let useName: string = ((instrument.modFilterTypes[mod] - 1) % 2 == 1) ?\n                            \"dot \" + (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) + 1) + \" y\"\n                            : \"dot \" + (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) + 1) + \" x\";\n                        if (instrument.modFilterTypes[mod] == 0)\n                            useName = \"morph\";\n                        this._modFilterBoxes[mod].insertBefore(option({ value: useName, style: \"color: red;\" }, useName), this._modFilterBoxes[mod].children[0]);\n                        this._modFilterBoxes[mod].selectedIndex = 0;\n\n                    }\n                    else {\n                        this._modFilterBoxes[mod].classList.remove(\"invalidSetting\");\n                        instrument.invalidModulators[mod] = false;\n                        this._modFilterBoxes[mod].selectedIndex = instrument.modFilterTypes[mod];\n                    }\n\n\n\n                } else {\n                    $(\"#modFilterText\" + mod).get(0).style.display = \"none\";\n                    $(\"#modSettingText\" + mod).get(0).style.setProperty(\"margin-bottom\", \"0.9em\");\n\n                }\n            }\n\n            this._doc.recalcChannelNames = false;\n\n            for (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\n                const option: Element = this._chordSelect.children[chordIndex];\n                if (!option.hasAttribute(\"hidden\")) {\n                    option.setAttribute(\"hidden\", \"\");\n                }\n\n            }\n\n            //this._instrumentSelectRow.style.display = \"none\";\n\n            this._customInstrumentSettingsGroup.style.display = \"none\";\n            this._panSliderRow.style.display = \"none\";\n            this._panDropdownGroup.style.display = \"none\";\n            this._instrumentVolumeSliderRow.style.display = \"none\";\n            this._instrumentTypeSelectRow.style.setProperty(\"display\", \"none\");\n\n            this._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n            // Force piano to re-show, if channel is modulator\n            if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                this._piano.forceRender();\n            }\n\n            this._renderInstrumentBar(channel, instrumentIndex, colors);\n\n        }\n\n        this._instrumentSettingsGroup.style.color = colors.primaryNote;\n\n        this._eqFilterEditor.render();\n        this._instrumentVolumeSlider.updateValue(instrument.volume);\n        this._detuneSlider.updateValue(instrument.detune - Config.detuneCenter);\n        this._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\n        this._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\n        this._aliasingBox.checked = instrument.aliases ? true : false;\n        this._addEnvelopeButton.disabled = (instrument.envelopeCount >= Config.maxEnvelopeCount);\n\n        this._volumeSlider.updateValue(prefs.volume);\n\n        // If an interface element was selected, but becomes invisible (e.g. an instrument\n        // select menu) just select the editor container so keyboard commands still work.\n        if (wasActive && activeElement != null && activeElement.clientWidth == 0) {\n            this.refocusStage();\n        }\n\n        this._setPrompt(this._doc.prompt);\n\n        if (prefs.autoFollow && !this._doc.synth.playing) {\n            this._doc.synth.goToBar(this._doc.bar);\n        }\n\n        // When adding effects or envelopes to an instrument in fullscreen modes,\n        // auto-scroll the settings areas to ensure the new settings are visible.\n        if (this._doc.addedEffect) {\n            const envButtonRect: DOMRect = this._addEnvelopeButton.getBoundingClientRect();\n            const instSettingsRect: DOMRect = this._instrumentSettingsArea.getBoundingClientRect();\n            const settingsRect: DOMRect = this._settingsArea.getBoundingClientRect();\n            this._instrumentSettingsArea.scrollTop += Math.max(0, envButtonRect.top - (instSettingsRect.top + instSettingsRect.height));\n            this._settingsArea.scrollTop += Math.max(0, envButtonRect.top - (settingsRect.top + settingsRect.height));\n            this._doc.addedEffect = false;\n        }\n        if (this._doc.addedEnvelope) {\n            this._instrumentSettingsArea.scrollTop = this._instrumentSettingsArea.scrollHeight;\n            this._settingsArea.scrollTop = this._settingsArea.scrollHeight;\n            this._doc.addedEnvelope = false;\n        }\n    }\n\n    private _renderInstrumentBar(channel: Channel, instrumentIndex: number, colors: ChannelColors) {\n        if (this._doc.song.layeredInstruments || this._doc.song.patternInstruments) {\n            this._instrumentsButtonRow.style.display = \"\";\n            this._instrumentsButtonBar.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n            this._instrumentsButtonBar.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n            this._instrumentsButtonBar.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n            this._instrumentsButtonBar.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n\n            const maxInstrumentsPerChannel = this._doc.song.getMaxInstrumentsPerChannel();\n            while (this._instrumentButtons.length < channel.instruments.length) {\n                const instrumentButton: HTMLButtonElement = button(String(this._instrumentButtons.length + 1));\n                this._instrumentButtons.push(instrumentButton);\n                this._instrumentsButtonBar.insertBefore(instrumentButton, this._instrumentRemoveButton);\n            }\n            for (let i: number = this._renderedInstrumentCount; i < channel.instruments.length; i++) {\n                this._instrumentButtons[i].style.display = \"\";\n            }\n            for (let i: number = channel.instruments.length; i < this._renderedInstrumentCount; i++) {\n                this._instrumentButtons[i].style.display = \"none\";\n            }\n            this._renderedInstrumentCount = channel.instruments.length;\n            while (this._instrumentButtons.length > maxInstrumentsPerChannel) {\n                this._instrumentsButtonBar.removeChild(this._instrumentButtons.pop()!);\n            }\n\n            this._instrumentRemoveButton.style.display = (channel.instruments.length > Config.instrumentCountMin) ? \"\" : \"none\";\n            this._instrumentAddButton.style.display = (channel.instruments.length < maxInstrumentsPerChannel) ? \"\" : \"none\";\n            if (channel.instruments.length < maxInstrumentsPerChannel) {\n                this._instrumentRemoveButton.classList.remove(\"last-button\");\n            } else {\n                this._instrumentRemoveButton.classList.add(\"last-button\");\n            }\n            if (channel.instruments.length > 1) {\n                if (this._highlightedInstrumentIndex != instrumentIndex) {\n                    const oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\n                    if (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\n                    const newButton: HTMLButtonElement = this._instrumentButtons[instrumentIndex];\n                    newButton.classList.add(\"selected-instrument\");\n                    this._highlightedInstrumentIndex = instrumentIndex;\n                }\n            } else {\n                const oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\n                if (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\n                this._highlightedInstrumentIndex = -1;\n            }\n\n            if (this._doc.song.layeredInstruments && this._doc.song.patternInstruments && (this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\n                //const pattern: Pattern | null = this._doc.getCurrentPattern();\n                for (let i: number = 0; i < channel.instruments.length; i++) {\n                    if (this._doc.recentPatternInstruments[this._doc.channel].indexOf(i) != -1) {\n                        this._instrumentButtons[i].classList.remove(\"deactivated\");\n                    } else {\n                        this._instrumentButtons[i].classList.add(\"deactivated\");\n                    }\n                }\n                this._deactivatedInstruments = true;\n            } else if (this._deactivatedInstruments || (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\n                for (let i: number = 0; i < channel.instruments.length; i++) {\n\n                    this._instrumentButtons[i].classList.remove(\"deactivated\");\n                }\n                this._deactivatedInstruments = false;\n            }\n\n            if ((this._doc.song.layeredInstruments && this._doc.song.patternInstruments) && channel.instruments.length > 1 && (this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\n                for (let i: number = 0; i < channel.instruments.length; i++) {\n                    this._instrumentButtons[i].classList.remove(\"no-underline\");\n                }\n            }\n            else {\n                for (let i: number = 0; i < channel.instruments.length; i++) {\n                    this._instrumentButtons[i].classList.add(\"no-underline\");\n                }\n            }\n        } else {\n            this._instrumentsButtonRow.style.display = \"none\";\n        }\n    }\n\n    public updatePlayButton = (): void => {\n        if (this._renderedIsPlaying != this._doc.synth.playing || this._renderedIsRecording != this._doc.synth.recording || this._renderedShowRecordButton != this._doc.prefs.showRecordButton || this._renderedCtrlHeld != this._ctrlHeld) {\n            this._renderedIsPlaying = this._doc.synth.playing;\n            this._renderedIsRecording = this._doc.synth.recording;\n            this._renderedShowRecordButton = this._doc.prefs.showRecordButton;\n            this._renderedCtrlHeld = this._ctrlHeld;\n\n            if (document.activeElement == this._playButton || document.activeElement == this._pauseButton || document.activeElement == this._recordButton || document.activeElement == this._stopButton) {\n                // When a focused element is hidden, focus is transferred to the document, so let's refocus the editor instead to make sure we can still capture keyboard input.\n                this.refocusStage();\n            }\n\n            this._playButton.style.display = \"none\";\n            this._pauseButton.style.display = \"none\";\n            this._recordButton.style.display = \"none\";\n            this._stopButton.style.display = \"none\";\n            this._prevBarButton.style.display = \"\";\n            this._nextBarButton.style.display = \"\";\n            this._playButton.classList.remove(\"shrunk\");\n            this._recordButton.classList.remove(\"shrunk\");\n            this._patternEditorRow.style.pointerEvents = \"\";\n            this._octaveScrollBar.container.style.pointerEvents = \"\";\n            this._octaveScrollBar.container.style.opacity = \"\";\n            this._trackContainer.style.pointerEvents = \"\";\n            this._loopEditor.container.style.opacity = \"\";\n            this._instrumentSettingsArea.style.pointerEvents = \"\";\n            this._instrumentSettingsArea.style.opacity = \"\";\n            this._menuArea.style.pointerEvents = \"\";\n            this._menuArea.style.opacity = \"\";\n            this._songSettingsArea.style.pointerEvents = \"\";\n            this._songSettingsArea.style.opacity = \"\";\n\n            if (this._doc.synth.recording) {\n                this._stopButton.style.display = \"\";\n                this._prevBarButton.style.display = \"none\";\n                this._nextBarButton.style.display = \"none\";\n                this._patternEditorRow.style.pointerEvents = \"none\";\n                this._octaveScrollBar.container.style.pointerEvents = \"none\";\n                this._octaveScrollBar.container.style.opacity = \"0.5\";\n                this._trackContainer.style.pointerEvents = \"none\";\n                this._loopEditor.container.style.opacity = \"0.5\";\n                this._instrumentSettingsArea.style.pointerEvents = \"none\";\n                this._instrumentSettingsArea.style.opacity = \"0.5\";\n                this._menuArea.style.pointerEvents = \"none\";\n                this._menuArea.style.opacity = \"0.5\";\n                this._songSettingsArea.style.pointerEvents = \"none\";\n                this._songSettingsArea.style.opacity = \"0.5\";\n            } else if (this._doc.synth.playing) {\n                this._pauseButton.style.display = \"\";\n            } else if (this._doc.prefs.showRecordButton) {\n                this._playButton.style.display = \"\";\n                this._recordButton.style.display = \"\";\n                this._playButton.classList.add(\"shrunk\");\n                this._recordButton.classList.add(\"shrunk\");\n            } else if (this._ctrlHeld) {\n                this._recordButton.style.display = \"\";\n            } else {\n                this._playButton.style.display = \"\";\n            }\n        }\n        window.requestAnimationFrame(this.updatePlayButton);\n    }\n\n    private _disableCtrlContextMenu = (event: MouseEvent): boolean => {\n        // On a Mac, clicking while holding control opens the right-click context menu.\n        // But in the pattern and track editors I'd rather prevent that and instead allow\n        // custom behaviors such as setting the volume of a note.\n        if (event.ctrlKey) {\n            event.preventDefault();\n            return false;\n        }\n        return true;\n    }\n\n    private _usageCheck(channelIndex: number, instrumentIndex: number): void {\n        var instrumentUsed = false;\n        var patternUsed = false;\n        var modUsed = false;\n        const channel: Channel = this._doc.song.channels[channelIndex];\n\n        if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n            for (let modChannelIdx: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; modChannelIdx < this._doc.song.channels.length; modChannelIdx++) {\n                const modChannel: Channel = this._doc.song.channels[modChannelIdx];\n                const patternIdx = modChannel.bars[this._doc.bar];\n                if (patternIdx > 0) {\n                    const modInstrumentIdx: number = modChannel.patterns[patternIdx - 1].instruments[0];\n                    const modInstrument: Instrument = modChannel.instruments[modInstrumentIdx];\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        if (modInstrument.modChannels[mod] == channelIndex && (modInstrument.modInstruments[mod] == instrumentIndex || modInstrument.modInstruments[mod] >= channel.instruments.length)) {\n                            modUsed = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        if (channel.bars[this._doc.bar] != 0) {\n\n            let lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\n            let highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\n            let lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\n            let highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\n\n            for (let i: number = 0; i < this._doc.song.barCount; i++) {\n                // Check for this exact bar in another place, but only count it if it's not within the selection\n                if (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\n                    (i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\n\n                    patternUsed = true;\n                    i = this._doc.song.barCount;\n                }\n            }\n\n            for (let i: number = 0; i < this._doc.song.barCount; i++) {\n                // Check for this exact instrument in another place, but only count it if it's not within the selection\n                if (channel.bars[i] != 0 && channel.bars[i] != channel.bars[this._doc.bar] &&\n                    channel.patterns[channel.bars[i] - 1].instruments.includes(instrumentIndex) && i != this._doc.bar &&\n                    (i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\n\n                    instrumentUsed = true;\n                    i = this._doc.song.barCount;\n                }\n            }\n\n        }\n\n        if (patternUsed) {\n            this._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\n        }\n        else {\n            this._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\n        }\n        if (instrumentUsed) {\n            this._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\n        }\n        else {\n            this._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\n        }\n        if (modUsed) {\n            this._jumpToModIndicator.style.setProperty(\"display\", \"\");\n            this._jumpToModIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\n            this._jumpToModIndicator.classList.add(\"modTarget\");\n        }\n        else if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n            this._jumpToModIndicator.style.setProperty(\"display\", \"\");\n            this._jumpToModIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\n            this._jumpToModIndicator.classList.remove(\"modTarget\");\n        } else {\n            this._jumpToModIndicator.style.setProperty(\"display\", \"none\");\n        }\n\n    }\n\n    private _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\n        // When the number input is in focus, allow some keyboard events to\n        // edit the input without accidentally editing the song otherwise.\n        switch (event.keyCode) {\n            case 8: // backspace/delete\n            case 13: // enter/return\n            case 38: // up\n            case 40: // down\n            case 37: // left\n            case 39: // right\n            case 48: // 0\n            case 49: // 1\n            case 50: // 2\n            case 51: // 3\n            case 52: // 4\n            case 53: // 5\n            case 54: // 6\n            case 55: // 7\n            case 56: // 8\n            case 57: // 9\n                event.stopPropagation();\n                break;\n        }\n    }\n\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\n        this._ctrlHeld = event.ctrlKey;\n\n        if (this.prompt) {\n            if (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomScalePrompt || this.prompt instanceof CustomFilterPrompt) {\n                this.prompt.whenKeyPressed(event);\n            }\n            if (event.keyCode == 27) { // ESC key\n                // close prompt.\n                this._doc.undo();\n            }\n            return;\n        }\n\n        // Defer to actively editing song title, channel name, or mod label\n        if (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\n            // Enter/esc returns focus to form\n            if (event.keyCode == 13 || event.keyCode == 27) {\n                this.mainLayer.focus();\n                this._patternEditor.stopEditingModLabel(event.keyCode == 27);\n            }\n\n            return;\n        }\n\n        // Defer to actively editing volume/pan rows\n        if (\n                   document.activeElement == this._panSliderInputBox\n                    || document.activeElement == this._detuneSliderInputBox\n                    || document.activeElement == this._instrumentVolumeSliderInputBox\n                    // advloop addition\n                    || document.activeElement == this._chipWaveLoopStartStepper\n                    || document.activeElement == this._chipWaveLoopEndStepper\n                    || document.activeElement == this._chipWaveStartOffsetStepper\n                    // advloop addition\n                    || document.activeElement == this._octaveStepper\n                    || document.activeElement == this._unisonVoicesInputBox\n                    || document.activeElement == this._unisonSpreadInputBox\n                    || document.activeElement == this._unisonOffsetInputBox\n                    || document.activeElement == this._unisonExpressionInputBox\n                    || document.activeElement == this._unisonSignInputBox\n\n                ) {\n            // Enter/esc returns focus to form\n            if (event.keyCode == 13 || event.keyCode == 27) {\n                this.mainLayer.focus();\n            }\n\n            return;\n        }\n\n        if (this._doc.synth.recording) {\n            // The only valid keyboard interactions when recording are playing notes or pressing space OR P to stop.\n            if (!event.ctrlKey && !event.metaKey) {\n                this._keyboardLayout.handleKeyEvent(event, true);\n            }\n            if (event.keyCode == 32) { // space\n                this._toggleRecord();\n                event.preventDefault();\n                this.refocusStage();\n            } else if (event.keyCode == 80 && (event.ctrlKey || event.metaKey)) { // p\n                this._toggleRecord();\n                event.preventDefault();\n                this.refocusStage();\n            }\n            return;\n        }\n\n        const needControlForShortcuts: boolean = (this._doc.prefs.pressControlForShortcuts != event.getModifierState(\"CapsLock\"));\n        const canPlayNotes: boolean = (!event.ctrlKey && !event.metaKey && needControlForShortcuts);\n        if (canPlayNotes) this._keyboardLayout.handleKeyEvent(event, true);\n\n        //this._trackEditor.onKeyPressed(event);\n        switch (event.keyCode) {\n            case 27: // ESC key\n                if (!event.ctrlKey && !event.metaKey) {\n                    new ChangePatternSelection(this._doc, 0, 0);\n                    this._doc.selection.resetBoxSelection();\n                }\n                break;\n            case 16: // Shift\n                this._patternEditor.shiftMode = true;\n                break;\n            case 17: // Ctrl\n                this._patternEditor.controlMode = true;\n                break;\n            case 32: // space\n                if (event.ctrlKey) {\n                    this._toggleRecord();\n                } else if (event.shiftKey) {\n                    // Jump to mouse\n                    if (this._trackEditor.movePlayheadToMouse() || this._patternEditor.movePlayheadToMouse()) {\n                        if (!this._doc.synth.playing) this._doc.performance.play();\n                    }\n                } else {\n                    this.togglePlay();\n                }\n                event.preventDefault();\n                this.refocusStage();\n                break;\n            case 80: // p\n                if (canPlayNotes) break;\n                if (event.ctrlKey || event.metaKey) {\n                    this._toggleRecord();\n                    event.preventDefault();\n                    this.refocusStage();\n                } else if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey) && event.shiftKey) {\n                    location.href = \"player/#song=\" + this._doc.song.toBase64String();\n                    event.preventDefault();\n                }\n                break;\n            case 192: // `/~\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._doc.goBackToStart();\n                    this._doc.song.restoreLimiterDefaults();\n                    for (const channel of this._doc.song.channels) {\n                        channel.muted = false;\n                        channel.name = \"\";\n                    }\n                    this._doc.record(new ChangeSong(this._doc, \"\"), false, true);\n                } else {\n                    if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                        this._openPrompt(\"songRecovery\");\n                    }\n                }\n                event.preventDefault();\n                break;\n            case 90: // z\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._doc.redo();\n                } else {\n                    this._doc.undo();\n                }\n                event.preventDefault();\n                break;\n            case 88: // x\n                if (canPlayNotes) break;\n                this._doc.selection.cutNotes();\n                event.preventDefault();\n                break;\n            case 89: // y\n                if (canPlayNotes) break;\n                this._doc.redo();\n                event.preventDefault();\n                break;\n            case 67: // c\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._copyInstrument();\n                } else {\n                    this._doc.selection.copy();\n                    this._doc.selection.resetBoxSelection();\n                    this._doc.selection.selectionUpdated();\n                }\n                event.preventDefault();\n                break;\n            case 13: // enter/return\n                if (event.ctrlKey || event.metaKey) {\n                    this._doc.selection.insertChannel();\n                } else {\n                    this._doc.selection.insertBars();\n                }\n                event.preventDefault();\n                break;\n            case 8: // backspace/delete\n                if (event.ctrlKey || event.metaKey) {\n                    this._doc.selection.deleteChannel();\n                } else {\n                    this._doc.selection.deleteBars();\n                }\n                this._barScrollBar.animatePlayhead();\n                event.preventDefault();\n                break;\n            case 65: // a\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._doc.selection.selectChannel();\n                } else {\n                    this._doc.selection.selectAll();\n                }\n                event.preventDefault();\n                break;\n            case 68: // d\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.selection.duplicatePatterns();\n                    event.preventDefault();\n                }\n                break;\n            case 69: // e (+shift: eq filter settings)\n                if (event.shiftKey) {\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                    if (!instrument.eqFilterType && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n                        this._openPrompt(\"customEQFilterSettings\");\n                }\n\t\t\telse if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\t\tthis._openPrompt(\"generateEuclideanRhythm\");\n\t\t\t\tbreak;\n\t\t\t\t//EUCLEDIAN RHYTHM SHORTCUT (E)\n\t\t\t}\n                break;\n            case 70: // f\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.synth.snapToStart();\n                    this._doc.synth.computeLatestModValues();\n                    if (this._doc.prefs.autoFollow) {\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 72: // h\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.synth.goToBar(this._doc.bar);\n                    this._doc.synth.snapToBar();\n                    this._doc.synth.computeLatestModValues();\n                    if (this._doc.prefs.autoFollow) {\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 74: // j\n                if (canPlayNotes) break;\n                // Ctrl Alt Shift J: Jummbify - set all prefs to my preferred ones lol\n                if (event.shiftKey && event.ctrlKey && event.altKey) {\n                    this._doc.prefs.autoPlay = false;\n                    this._doc.prefs.autoFollow = false;\n                    this._doc.prefs.enableNotePreview = true;\n                    this._doc.prefs.showFifth = true;\n                    this._doc.prefs.notesOutsideScale = false;\n                    this._doc.prefs.defaultScale = 0;\n                    this._doc.prefs.showLetters = true;\n                    this._doc.prefs.showChannels = true;\n                    this._doc.prefs.showScrollBar = true;\n                    this._doc.prefs.alwaysFineNoteVol = false;\n                    this._doc.prefs.enableChannelMuting = true;\n                    this._doc.prefs.displayBrowserUrl = true;\n                    this._doc.prefs.displayVolumeBar = true;\n                    this._doc.prefs.layout = \"wide\";\n                    this._doc.prefs.visibleOctaves = 5;\n                    this._doc.prefs.save();\n                    event.preventDefault();\n                    location.reload();\n                }\n                break;\n            case 76: // l\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._openPrompt(\"limiterSettings\");\n                }\n                else {\n                    this._openPrompt(\"barCount\");\n                }\n                break;\n            case 77: // m\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    if (this._doc.prefs.enableChannelMuting) {\n                        this._doc.selection.muteChannels(event.shiftKey);\n                        event.preventDefault();\n                    }\n                }\n                break;\n            case 78: // n\n                if (canPlayNotes) break;\n                // Find lowest-index unused pattern for current channel\n                // Ctrl+n - lowest-index completely empty pattern\n                // Shift+n - note filter settings\n\n                const group: ChangeGroup = new ChangeGroup();\n\n                if (event.shiftKey) {\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                    if (effectsIncludeNoteFilter(instrument.effects) && !instrument.noteFilterType && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n                        this._openPrompt(\"customNoteFilterSettings\");\n                    break;\n                }\n                else if (event.ctrlKey) {\n                    let nextEmpty: number = 0;\n                    while (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\n                        nextEmpty++;\n\n                    nextEmpty++; // The next empty pattern is actually the one after the found one\n\n                    // Can't set anything if we're at the absolute limit.\n                    if (nextEmpty <= Config.barCountMax) {\n\n                        if (nextEmpty > this._doc.song.patternsPerChannel) {\n\n                            // Add extra empty pattern, if all the rest have something in them.\n                            group.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\n                        }\n\n                        // Change pattern number to lowest-index unused\n                        group.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\n\n\n                    }\n                }\n                else {\n                    let nextUnused: number = 1;\n                    while (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\n                        && nextUnused <= this._doc.song.patternsPerChannel)\n                        nextUnused++;\n\n                    // Can't set anything if we're at the absolute limit.\n                    if (nextUnused <= Config.barCountMax) {\n\n                        if (nextUnused > this._doc.song.patternsPerChannel) {\n\n                            // Add extra empty pattern, if all the rest are used.\n                            group.append(new ChangePatternsPerChannel(this._doc, nextUnused));\n                        }\n\n                        // Change pattern number to lowest-index unused\n                        group.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\n\n                    }\n                }\n\n                this._doc.record(group);\n\n                event.preventDefault();\n                break;\n            case 81: // q\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\t\t\tif (event.shiftKey) {\n\t\t\t\tthis._openPrompt(\"addExternal\");\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._openPrompt(\"channelSettings\");\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n                }\n                break;\n            case 83: // s\n                if (canPlayNotes) break;\n                if (event.ctrlKey || event.metaKey) {\n                    this._openPrompt(\"export\");\n                    event.preventDefault();\n                } else {\n                    if (this._doc.prefs.enableChannelMuting) {\n                        // JummBox deviation: I like shift+s as just another mute toggle personally.\n                        // Easier to reach than M and the shift+s invert functionality I am overwriting could be \n                        // obtained with M anyway. Useability-wise you very often want to 'add' channels on to a solo as you work.\n                        if (event.shiftKey) {\n                            this._doc.selection.muteChannels(false);\n                        } else {\n                            this._doc.selection.soloChannels(false);\n                        }\n                        event.preventDefault();\n                    }\n                }\n                break;\n            case 79: // o\n                if (canPlayNotes) break;\n                if (event.ctrlKey || event.metaKey) {\n                    this._openPrompt(\"import\");\n                    event.preventDefault();\n                }\n                break;\n            case 86: // v\n                if (canPlayNotes) break;\n                if ((event.ctrlKey || event.metaKey) && event.shiftKey && !needControlForShortcuts) {\n                    this._doc.selection.pasteNumbers();\n                } else if (event.shiftKey) {\n                    this._pasteInstrument();\n                } else {\n                    this._doc.selection.pasteNotes();\n                }\n                event.preventDefault();\n                break;\n            case 87: // w\n                if (canPlayNotes) break;\n                this._openPrompt(\"moveNotesSideways\");\n                break;\n            case 73: // i\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey) && event.shiftKey) {\n                    // Copy the current instrument as a preset to the clipboard.\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                    const instrumentObject: any = instrument.toJsonObject();\n                    delete instrumentObject[\"preset\"];\n                    // Volume and the panning effect are not included in presets.\n                    delete instrumentObject[\"volume\"];\n                    delete instrumentObject[\"pan\"];\n                    const panningEffectIndex: number = instrumentObject[\"effects\"].indexOf(Config.effectNames[EffectType.panning]);\n                    if (panningEffectIndex != -1) instrumentObject[\"effects\"].splice(panningEffectIndex, 1);\n                    for (let i: number = 0; i < instrumentObject[\"envelopes\"].length; i++) {\n                        const envelope: any = instrumentObject[\"envelopes\"][i];\n                        // If there are any envelopes targeting panning or none, remove those too.\n                        if (envelope[\"target\"] == \"panning\" || envelope[\"target\"] == \"none\" || envelope[\"envelope\"] == \"none\") {\n                            instrumentObject[\"envelopes\"].splice(i, 1);\n                            i--;\n                        }\n                    }\n                    this._copyTextToClipboard(JSON.stringify(instrumentObject));\n                    event.preventDefault();\n                }\n                break;\n            case 82: // r\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    if (event.shiftKey) {\n                        this._randomGenerated();\n                    } else {\n                        this._randomPreset();\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 219: // left brace\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.synth.goToPrevBar();\n                    if (this._doc.prefs.autoFollow) {\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 221: // right brace\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.synth.goToNextBar();\n                    if (this._doc.prefs.autoFollow) {\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 189: // -\n            case 173: // Firefox -\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.selection.transpose(false, event.shiftKey);\n                    event.preventDefault();\n                }\n                break;\n            case 187: // +\n            case 61: // Firefox +\n            case 171: // Some users have this as +? Hmm.\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.selection.transpose(true, event.shiftKey);\n                    event.preventDefault();\n                }\n                break;\n            case 38: // up\n                if (event.ctrlKey || event.metaKey) {\n                    this._doc.selection.swapChannels(-1);\n                } else if (event.shiftKey) {\n                    this._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\n                    this._doc.selection.scrollToEndOfSelection();\n                    this._doc.selection.selectionUpdated();\n                } else {\n                    this._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\n                    this._doc.selection.resetBoxSelection();\n                }\n                event.preventDefault();\n                break;\n            case 40: // down\n                if (event.ctrlKey || event.metaKey) {\n                    this._doc.selection.swapChannels(1);\n                } else if (event.shiftKey) {\n                    this._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\n                    this._doc.selection.scrollToEndOfSelection();\n                    this._doc.selection.selectionUpdated();\n                } else {\n                    this._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\n                    this._doc.selection.resetBoxSelection();\n                }\n                event.preventDefault();\n                break;\n            case 37: // left\n                if (event.shiftKey) {\n                    this._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\n                    this._doc.selection.scrollToEndOfSelection();\n                    this._doc.selection.selectionUpdated();\n                } else {\n                    this._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\n                    this._doc.selection.resetBoxSelection();\n                }\n                event.preventDefault();\n                break;\n            case 39: // right\n                if (event.shiftKey) {\n                    this._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\n                    this._doc.selection.scrollToEndOfSelection();\n                    this._doc.selection.selectionUpdated();\n                } else {\n                    this._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\n                    this._doc.selection.resetBoxSelection();\n                }\n                event.preventDefault();\n                break;\n            case 46: // Delete\n                this._doc.selection.digits = \"\";\n                this._doc.selection.nextDigit(\"0\", false, false);\n                break;\n            case 48: // 0\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"0\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 49: // 1\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"1\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 50: // 2\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"2\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 51: // 3\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"3\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n               this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 52: // 4\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"4\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 53: // 5\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"5\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n               this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 54: // 6\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"6\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n               this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 55: // 7\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"7\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n               this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 56: // 8\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"8\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n            case 57: // 9\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"9\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n\t\t\tevent.preventDefault();\n                break;\n\tcase 66: //b\n                if (canPlayNotes) break;\n                this._openPrompt(\"beatsPerBar\");\n                break;\n            default:\n                this._doc.selection.digits = \"\";\n                this._doc.selection.instrumentDigits = \"\";\n                break;\n        }\n\n        if (canPlayNotes) {\n            this._doc.selection.digits = \"\";\n            this._doc.selection.instrumentDigits = \"\";\n        }\n    }\n\n\n    private _whenKeyReleased = (event: KeyboardEvent): void => {\n        this._muteEditor.onKeyUp(event);\n        if (!event.ctrlKey) { // Ctrl\n            this._patternEditor.controlMode = false;\n        }\n        if (!event.shiftKey) { // Shift\n            this._patternEditor.shiftMode = false;\n        }\n\n        this._ctrlHeld = event.ctrlKey;\n        // Release live pitches regardless of control or caps lock so that any pitches played before will get released even if the modifier keys changed.\n        this._keyboardLayout.handleKeyEvent(event, false);\n    }\n\n    private _copyTextToClipboard(text: string): void {\n        // Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\n        let nav: any;\n        nav = navigator;\n\n        if (nav.clipboard && nav.clipboard.writeText) {\n            nav.clipboard.writeText(text).catch(() => {\n                window.prompt(\"Copy to clipboard:\", text);\n            });\n            return;\n        }\n        const textField: HTMLTextAreaElement = document.createElement(\"textarea\");\n        textField.textContent = text;\n        document.body.appendChild(textField);\n        textField.select();\n        const succeeded: boolean = document.execCommand(\"copy\");\n        textField.remove();\n        this.refocusStage();\n        if (!succeeded) window.prompt(\"Copy this:\", text);\n    }\n\n    private _whenPrevBarPressed = (): void => {\n        this._doc.synth.goToPrevBar();\n        this._barScrollBar.animatePlayhead();\n    }\n\n    private _whenNextBarPressed = (): void => {\n        this._doc.synth.goToNextBar();\n        this._barScrollBar.animatePlayhead();\n    }\n\n    public togglePlay = (): void => {\n        if (this._doc.synth.playing) {\n            this._doc.performance.pause();\n            this.outVolumeHistoricCap = 0;\n        } else {\n            this._doc.synth.snapToBar();\n            this._doc.performance.play();\n        }\n    }\n\n    private _toggleRecord = (): void => {\n        if (this._doc.synth.playing) {\n            this._doc.performance.pause();\n        } else {\n            this._doc.performance.record();\n        }\n    }\n\n    public _animate = (): void => {\n        // Need to update mods once more to clear the slider display\n        this._modSliderUpdate();\n        // Same for volume display\n        if (this._doc.prefs.displayVolumeBar) {\n            this._volumeUpdate();\n        }\n        // ...and barscrollbar playhead\n        this._barScrollBar.animatePlayhead();\n        // ...and filters\n        if (this._doc.synth.isFilterModActive(false, this._doc.channel, this._doc.getCurrentInstrument())) {\n            this._eqFilterEditor.render(true);\n        }\n        if (this._doc.synth.isFilterModActive(true, this._doc.channel, this._doc.getCurrentInstrument())) {\n            this._noteFilterEditor.render(true);\n        }\n\n\n        window.requestAnimationFrame(this._animate);\n    }\n\n    public _volumeUpdate = (): void => {\n        this.outVolumeHistoricTimer--;\n        if (this.outVolumeHistoricTimer <= 0) {\n            this.outVolumeHistoricCap -= 0.03;\n        }\n        if (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\n            this.outVolumeHistoricCap = this._doc.song.outVolumeCap;\n            this.outVolumeHistoricTimer = 50;\n        }\n\n        if (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\n            this.lastOutVolumeCap = this._doc.song.outVolumeCap;\n            this._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\n        }\n    }\n\n    private _animateVolume(outVolumeCap: number, historicOutCap: number): void {\n        this._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\n        this._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\n    }\n\n    private _setVolumeSlider = (): void => {\n        this._doc.setVolume(Number(this._volumeSlider.input.value));\n    }\n\n    private _copyInstrument = (): void => {\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n        const instrumentCopy: any = instrument.toJsonObject();\n        instrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\n        window.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\n        this.refocusStage();\n    }\n\n    private _pasteInstrument = (): void => {\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n        const instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\n        if (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\n            this._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\n        }\n        this.refocusStage();\n    }\n\n    private _switchEQFilterType(toSimple: boolean) {\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n        if (instrument.eqFilterType != toSimple) {\n            this._doc.record(new ChangeEQFilterType(this._doc, instrument, toSimple));\n        }\n    }\n\n    private _switchNoteFilterType(toSimple: boolean) {\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n        if (instrument.noteFilterType != toSimple) {\n            this._doc.record(new ChangeNoteFilterType(this._doc, instrument, toSimple));\n        }\n    }\n\n    private _randomPreset(): void {\n        const isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n        this._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\n    }\n\n    private _randomGenerated(): void {\n        this._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\n    }\n\n\n    private _whenSetTempo = (): void => {\n        this._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\n    }\n\n    private _whenSetOctave = (): void => {\n        this._doc.record(new ChangeKeyOctave(this._doc, this._doc.song.octave, parseInt(this._octaveStepper.value) | 0));\n        this._piano.forceRender();\n    }\n\n    private _whenSetScale = (): void => {\n        if (isNaN(<number><unknown>this._scaleSelect.value)) {\n            switch (this._scaleSelect.value) {\n                case \"forceScale\":\n                    this._doc.selection.forceScale();\n                    break;\n                case \"customize\":\n                    this._openPrompt(\"customScale\")\n                    break;\n            }\n            this._doc.notifier.changed();\n        } else {\n            this._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\n        }\n    }\n\n    private _whenSetKey = (): void => {\n        if (isNaN(<number><unknown>this._keySelect.value)) {\n            switch (this._keySelect.value) {\n                case \"detectKey\":\n                    this._doc.record(new ChangeDetectKey(this._doc));\n                    break;\n            }\n            this._doc.notifier.changed();\n        } else {\n            this._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\n        }\n    }\n\n    private _whenSetRhythm = (): void => {\n        if (isNaN(<number><unknown>this._rhythmSelect.value)) {\n            switch (this._rhythmSelect.value) {\n                case \"forceRhythm\":\n                    this._doc.selection.forceRhythm();\n                    break;\n            }\n            this._doc.notifier.changed();\n        } else {\n            this._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\n        }\n    }\n\n    public _refocus = (): void => {\n        // Waits a bit because select2 \"steals\" back focus even after the close event fires.\n        var selfRef = this;\n        setTimeout(function () { selfRef.mainLayer.focus(); }, 20);\n    }\n\n    public _whenSetPitchedPreset = (): void => {\n        this._setPreset($('#pitchPresetSelect').val() + \"\");\n    }\n\n    public _whenSetDrumPreset = (): void => {\n        this._setPreset($('#drumPresetSelect').val() + \"\");\n    }\n\n    private _setPreset(preset: string): void {\n        if (isNaN(<number><unknown>preset)) {\n            switch (preset) {\n                case \"copyInstrument\":\n                    this._copyInstrument();\n                    break;\n                case \"pasteInstrument\":\n                    this._pasteInstrument();\n                    break;\n                case \"randomPreset\":\n                    this._randomPreset();\n                    break;\n                case \"randomGenerated\":\n                    this._randomGenerated();\n                    break;\n            }\n            this._doc.notifier.changed();\n        } else {\n            this._doc.record(new ChangePreset(this._doc, parseInt(preset)));\n        }\n    }\n\n    private _whenSetFeedbackType = (): void => {\n        this._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\n    }\n\n\n    private _whenSetAlgorithm = (): void => {\n        this._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\n    }\n\n    private _whenSet6OpFeedbackType = (): void => {\n        this._doc.record(new Change6OpFeedbackType(this._doc, this._feedback6OpTypeSelect.selectedIndex));\n        this._customAlgorithmCanvas.reset()\n    }\n    private _whenSet6OpAlgorithm = (): void => {\n        this._doc.record(new Change6OpAlgorithm(this._doc, this._algorithm6OpSelect.selectedIndex));\n        this._customAlgorithmCanvas.reset()\n    }\n    \n    private _whenSelectInstrument = (event: MouseEvent): void => {\n        if (event.target == this._instrumentAddButton) {\n            this._doc.record(new ChangeAddChannelInstrument(this._doc));\n        } else if (event.target == this._instrumentRemoveButton) {\n            this._doc.record(new ChangeRemoveChannelInstrument(this._doc));\n        } else {\n            const index: number = this._instrumentButtons.indexOf(<any>event.target);\n            if (index != -1) {\n                this._doc.selection.selectInstrument(index);\n            }\n            // Force piano to re-show, if channel is modulator\n            if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                this._piano.forceRender();\n            }\n\t\tthis._renderInstrumentBar(this._doc.song.channels[this._doc.channel], index, ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n        }\n\n        this.refocusStage();\n    }\n\n    private _whenSetModChannel = (mod: number): void => {\n\n        let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        let previouslyUnset: boolean = (instrument.modulators[mod] == 0 || Config.modulators[instrument.modulators[mod]].forSong);\n\n        this._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\n\n        const modChannel: number = Math.max(0, instrument.modChannels[mod]);\n\n        // Check if setting was 'song' or 'none' and is changing to a channel number, in which case suggested instrument to mod will auto-set to the current one.\n        if (this._doc.song.channels[modChannel].instruments.length > 1 && previouslyUnset && this._modChannelBoxes[mod].selectedIndex >= 2) {\n            if (this._doc.song.channels[modChannel].bars[this._doc.bar] > 0) {\n                this._doc.selection.setModInstrument(mod, this._doc.song.channels[modChannel].patterns[this._doc.song.channels[modChannel].bars[this._doc.bar] - 1].instruments[0]);\n            }\n        }\n\n        // Force piano to re-show\n        this._piano.forceRender();\n    }\n\n    private _whenSetModInstrument = (mod: number): void => {\n        this._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\n\n        // Force piano to re-show\n        this._piano.forceRender();\n    }\n\n    private _whenSetModSetting = (mod: number, invalidIndex: boolean = false): void => {\n        let text: string = \"none\";\n        if (this._modSetBoxes[mod].selectedIndex != -1) {\n            text = this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string;\n\n            if (invalidIndex) {\n                // A setting is invalid (not in instrument's effects). It will be the first index. Allow it, but mark it as red.\n                this._modSetBoxes[mod].selectedOptions.item(0)!.style.setProperty(\"color\", \"red\");\n                this._modSetBoxes[mod].classList.add(\"invalidSetting\");\n                this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].invalidModulators[mod] = true;\n            } else {\n                this._modSetBoxes[mod].classList.remove(\"invalidSetting\");\n                this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].invalidModulators[mod] = false;\n            }\n        }\n        if (!invalidIndex) // Invalid index means a set is actually not occurring, just the same index and a warning.\n            this._doc.selection.setModSetting(mod, text);\n\n        // Force piano to re-show if channel is modulator, as text shown on it needs to update\n        this._piano.forceRender();\n\n    }\n\n    private _whenClickModTarget = (mod: number): void => {\n        if (this._modChannelBoxes[mod].selectedIndex >= 2) {\n            this._doc.selection.setChannelBar(this._modChannelBoxes[mod].selectedIndex - 2, this._doc.bar);\n        }\n    }\n\n    private _whenClickJumpToModTarget = (): void => {\n        const channelIndex: number = this._doc.channel;\n        const instrumentIndex: number = this._doc.getCurrentInstrument();\n        if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n            for (let modChannelIdx: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; modChannelIdx < this._doc.song.channels.length; modChannelIdx++) {\n                const modChannel: Channel = this._doc.song.channels[modChannelIdx];\n                const patternIdx = modChannel.bars[this._doc.bar];\n                if (patternIdx > 0) {\n                    const modInstrumentIdx: number = modChannel.patterns[patternIdx - 1].instruments[0];\n                    const modInstrument: Instrument = modChannel.instruments[modInstrumentIdx];\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        if (modInstrument.modChannels[mod] == channelIndex && (modInstrument.modInstruments[mod] == instrumentIndex || modInstrument.modInstruments[mod] >= this._doc.song.channels[channelIndex].instruments.length)) {\n                            this._doc.selection.setChannelBar(modChannelIdx, this._doc.bar);\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private _whenSetModFilter = (mod: number): void => {\n        this._doc.selection.setModFilter(mod, this._modFilterBoxes[mod].selectedIndex);\n    }\n\n    private _whenSetChipWave = (): void => {\n        this._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\n    }\n\n\t\t\t\t // advloop addition\n            private _whenSetUseChipWaveAdvancedLoopControls = (): void => {\n                this._doc.record(new ChangeChipWaveUseAdvancedLoopControls(this._doc, this._useChipWaveAdvancedLoopControlsBox.checked ? true : false));\n            }\n            private _whenSetChipWaveLoopMode = (): void => {\n                this._doc.record(new ChangeChipWaveLoopMode(this._doc, this._chipWaveLoopModeSelect.selectedIndex));\n            }\n           private _whenSetChipWaveLoopStart = (): void => {\n                // this._doc.record(new ChangeChipWaveLoopStart(this._doc, Math.max(0, Math.min(chipWaveLoopEnd - 1, parseInt(this._chipWaveLoopStartStepper.value)))));\n                this._doc.record(new ChangeChipWaveLoopStart(this._doc, parseInt(this._chipWaveLoopStartStepper.value) | 0));\n            }\n            private _whenSetChipWaveLoopEnd = (): void => {\n                // this._doc.record(new ChangeChipWaveLoopEnd(this._doc, Math.max(0, Math.min(chipWaveLength - 1, parseInt(this._chipWaveLoopEndStepper.value)))));\n                this._doc.record(new ChangeChipWaveLoopEnd(this._doc, parseInt(this._chipWaveLoopEndStepper.value) | 0));\n            }\n            private _whenSetChipWaveLoopEndToEnd = (): void => {\n                const channel = this._doc.song.channels[this._doc.channel];\n                const instrument = channel.instruments[this._doc.getCurrentInstrument()];\n                const chipWave = Config.rawRawChipWaves[instrument.chipWave];\n                const chipWaveLength = chipWave.samples.length;\n                this._doc.record(new ChangeChipWaveLoopEnd(this._doc, chipWaveLength - 1));\n            }\n            private _whenSetChipWaveStartOffset = (): void => {\n                // this._doc.record(new ChangeChipWaveStartOffset(this._doc, Math.max(0, Math.min(chipWaveLength - 1, parseInt(this._chipWaveStartOffsetStepper.value)))));\n                this._doc.record(new ChangeChipWaveStartOffset(this._doc, parseInt(this._chipWaveStartOffsetStepper.value) | 0));\n            }\n            private _whenSetChipWavePlayBackwards = (): void => {\n                this._doc.record(new ChangeChipWavePlayBackwards(this._doc, this._chipWavePlayBackwardsBox.checked));\n            }\n            // advloop addition\n\n    private _whenSetNoiseWave = (): void => {\n        this._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\n    }\n\n\n\n    private _whenSetTransition = (): void => {\n        this._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\n    }\n\n    private _whenSetEffects = (): void => {\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        const oldValue: number = instrument.effects;\n        const toggleFlag: number = Config.effectOrder[this._effectsSelect.selectedIndex - 1];\n        this._doc.record(new ChangeToggleEffects(this._doc, toggleFlag, null));\n        this._effectsSelect.selectedIndex = 0;\n        if (instrument.effects > oldValue) {\n            this._doc.addedEffect = true;\n        }\n        this._doc.notifier.changed();\n    }\n\n    private _whenSetVibrato = (): void => {\n        this._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\n    }\n\n    private _whenSetVibratoType = (): void => {\n        this._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\n    }\n\n    private _whenSetUnison = (): void => {\n        this._doc.record(new ChangeUnison(this._doc, this._unisonSelect.selectedIndex));\n    }\n\n    private _whenSetChord = (): void => {\n        this._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\n    }\n\n    private _addNewEnvelope = (): void => {\n        this._doc.record(new ChangeAddEnvelope(this._doc));\n        this.refocusStage();\n        this._doc.addedEnvelope = true;\n    }\n\n    private _zoomIn = (): void => {\n        this._doc.prefs.visibleOctaves = Math.max(1, this._doc.prefs.visibleOctaves - 1);\n        this._doc.prefs.save();\n        this._doc.notifier.changed();\n        this.refocusStage();\n    }\n\n    private _zoomOut = (): void => {\n        this._doc.prefs.visibleOctaves = Math.min(Config.pitchOctaves, this._doc.prefs.visibleOctaves + 1);\n        this._doc.prefs.save();\n        this._doc.notifier.changed();\n        this.refocusStage();\n    }\n\n    private _fileMenuHandler = (event: Event): void => {\n        switch (this._fileMenu.value) {\n            case \"new\":\n                this._doc.goBackToStart();\n                this._doc.song.restoreLimiterDefaults();\n                for (const channel of this._doc.song.channels) {\n                    channel.muted = false;\n                    channel.name = \"\";\n                }\n                this._doc.record(new ChangeSong(this._doc, \"\"), false, true);\n                break;\n            case \"export\":\n                this._openPrompt(\"export\");\n                break;\n            case \"import\":\n                this._openPrompt(\"import\");\n                break;\n            case \"copyUrl\":\n                this._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\n                break;\n            case \"shareUrl\":\n                (<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\n                break;\n            case \"shortenUrl\":\n                window.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\n                break;\n            case \"viewPlayer\":\n                location.href = \"player/#song=\" + this._doc.song.toBase64String();\n                break;\n            case \"copyEmbed\":\n                this._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\n                break;\n            case \"songRecovery\":\n                this._openPrompt(\"songRecovery\");\n                break;\n        }\n        this._fileMenu.selectedIndex = 0;\n    }\n\n    private _editMenuHandler = (event: Event): void => {\n        switch (this._editMenu.value) {\n            case \"undo\":\n                this._doc.undo();\n                break;\n            case \"redo\":\n                this._doc.redo();\n                break;\n            case \"copy\":\n                this._doc.selection.copy();\n                break;\n            case \"insertBars\":\n                this._doc.selection.insertBars();\n                break;\n            case \"deleteBars\":\n                this._doc.selection.deleteBars();\n                break;\n            case \"insertChannel\":\n                this._doc.selection.insertChannel();\n                break;\n            case \"deleteChannel\":\n                this._doc.selection.deleteChannel();\n                break;\n            case \"pasteNotes\":\n                this._doc.selection.pasteNotes();\n                break;\n            case \"pasteNumbers\":\n                this._doc.selection.pasteNumbers();\n                break;\n            case \"transposeUp\":\n                this._doc.selection.transpose(true, false);\n                break;\n            case \"transposeDown\":\n                this._doc.selection.transpose(false, false);\n                break;\n            case \"selectAll\":\n                this._doc.selection.selectAll();\n                break;\n            case \"selectChannel\":\n                this._doc.selection.selectChannel();\n                break;\n            case \"duplicatePatterns\":\n                this._doc.selection.duplicatePatterns();\n                break;\n            case \"barCount\":\n                this._openPrompt(\"barCount\");\n                break;\n            case \"beatsPerBar\":\n                this._openPrompt(\"beatsPerBar\");\n                break;\n            case \"moveNotesSideways\":\n                this._openPrompt(\"moveNotesSideways\");\n                break;\n            case \"channelSettings\":\n                this._openPrompt(\"channelSettings\");\n                break;\n            case \"limiterSettings\":\n                this._openPrompt(\"limiterSettings\");\n                break;\n            case \"generateEuclideanRhythm\":\n                this._openPrompt(\"generateEuclideanRhythm\");\n                break;\n            case \"addExternal\":\n                this._openPrompt(\"addExternal\");\n                break;\n        }\n        this._editMenu.selectedIndex = 0;\n    }\n\n    private _optionsMenuHandler = (event: Event): void => {\n        switch (this._optionsMenu.value) {\n            case \"autoPlay\":\n                this._doc.prefs.autoPlay = !this._doc.prefs.autoPlay;\n                break;\n            case \"autoFollow\":\n                this._doc.prefs.autoFollow = !this._doc.prefs.autoFollow;\n                break;\n            case \"enableNotePreview\":\n                this._doc.prefs.enableNotePreview = !this._doc.prefs.enableNotePreview;\n                break;\n            case \"showLetters\":\n                this._doc.prefs.showLetters = !this._doc.prefs.showLetters;\n                break;\n            case \"showFifth\":\n                this._doc.prefs.showFifth = !this._doc.prefs.showFifth;\n                break;\n            case \"notesOutsideScale\":\n                this._doc.prefs.notesOutsideScale = !this._doc.prefs.notesOutsideScale;\n                break;\n            case \"setDefaultScale\":\n                this._doc.prefs.defaultScale = this._doc.song.scale;\n                break;\n            case \"showChannels\":\n                this._doc.prefs.showChannels = !this._doc.prefs.showChannels;\n                break;\n            case \"showScrollBar\":\n                this._doc.prefs.showScrollBar = !this._doc.prefs.showScrollBar;\n                break;\n            case \"alwaysFineNoteVol\":\n                this._doc.prefs.alwaysFineNoteVol = !this._doc.prefs.alwaysFineNoteVol;\n                break;\n            case \"enableChannelMuting\":\n                this._doc.prefs.enableChannelMuting = !this._doc.prefs.enableChannelMuting;\n                for (const channel of this._doc.song.channels) channel.muted = false;\n                break;\n            case \"displayBrowserUrl\":\n                this._doc.toggleDisplayBrowserUrl();\n                break;\n            case \"displayVolumeBar\":\n                this._doc.prefs.displayVolumeBar = !this._doc.prefs.displayVolumeBar;\n                break;\n            case \"layout\":\n                this._openPrompt(\"layout\");\n                break;\n            case \"colorTheme\":\n                this._openPrompt(\"theme\");\n                break;\n\tcase \"customTheme\":\n\t\tthis._openPrompt(\"custom\");\n\t\tbreak;\n            case \"recordingSetup\":\n                this._openPrompt(\"recordingSetup\");\n                break;\n            case \"showOscilloscope\":\n                this._doc.prefs.showOscilloscope = !this._doc.prefs.showOscilloscope;\n                break;\n            case \"showSampleLoadingStatus\":\n                this._doc.prefs.showSampleLoadingStatus = !this._doc.prefs.showSampleLoadingStatus;\n                break;\n        }\n        this._optionsMenu.selectedIndex = 0;\n        this._doc.notifier.changed();\n        this._doc.prefs.save();\n    }\n\n    private _customWavePresetHandler = (event: Event): void => {\n\n        // Update custom wave value\n        let customWaveArray: Float32Array = new Float32Array(64);\n        let index: number = this._customWavePresetDrop.selectedIndex - 1;\n        let maxValue: number = Number.MIN_VALUE;\n        let minValue: number = Number.MAX_VALUE;\n        let arrayPoint: number = 0;\n        let arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\n\n        for (let i: number = 0; i < 64; i++) {\n            // Compute derivative to get original wave.\n            customWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\n\n            if (customWaveArray[i] < minValue)\n                minValue = customWaveArray[i];\n\n            if (customWaveArray[i] > maxValue)\n                maxValue = customWaveArray[i];\n\n            // Scale an any-size array to 64 elements\n            arrayPoint += arrayStep;\n        }\n\n        for (let i: number = 0; i < 64; i++) {\n            // Change array range from Min~Max to 0~(Max-Min)\n            customWaveArray[i] -= minValue;\n            // Divide by (Max-Min) to get a range of 0~1,\n            customWaveArray[i] /= (maxValue - minValue);\n            //then multiply by 48 to get 0~48,\n            customWaveArray[i] *= 48.0;\n            //then subtract 24 to get - 24~24\n            customWaveArray[i] -= 24.0;\n            //need to force integers\n            customWaveArray[i] = Math.ceil(customWaveArray[i]);\n\n            // Copy back data to canvas\n            this._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\n        }\n\n        //this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\n\n        this._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\n        this._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].expression) * Config.volumeRange / 2)));\n\n        this._customWavePresetDrop.selectedIndex = 0;\n        this._doc.notifier.changed();\n        this._doc.prefs.save();\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {Note, Pattern} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ChangeGroup} from \"./Change\";\nimport {ChangeChannelBar, ChangePinTime, ChangeEnsurePatternExists, ChangeNoteAdded, ChangeInsertBars, ChangeDeleteBars, ChangeNoteLength} from \"./changes\";\n\nexport class SongPerformance {\n\tprivate _channelIsDrum: boolean = false;\n\tprivate _channelOctave: number = -1;\n\tprivate _songKey: number = -1;\n\tprivate _pitchesAreTemporary: boolean = false;\n\tprivate readonly _recentlyAddedPitches: number[] = []; // Pitches that are rapidly added then removed within a minimum rhythm duration wouldn't get recorded until I explicitly track recently added notes and check if any are no longer held.\n\t\n\tprivate _songLengthWhenRecordingStarted: number = -1;\n\tprivate _playheadPart: number = -1;\n\tprivate _playheadPattern: Pattern | null = null;\n\tprivate _pitchesChanged: boolean = false;\n\tprivate _lastNote: Note | null = null;\n\tprivate _recordingChange: ChangeGroup | null = null;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t}\n\t\n\tpublic play(): void {\n\t\tthis._doc.synth.play();\n\t\tthis._doc.synth.enableMetronome = false;\n\t\tthis._doc.synth.countInMetronome = false\n\t\tthis._doc.synth.maintainLiveInput();\n\t}\n\t\n\tpublic pause(): void {\n\t\tthis.clearAllPitches();\n\t\tif (this._recordingChange != null) {\n\t\t\tif (this._doc.song.barCount > this._songLengthWhenRecordingStarted && !this._lastBarHasPatterns()) {\n\t\t\t\t// If an extra empty bar was added in case it was needed for recording, but it didn't end up getting used, delete it now.\n\t\t\t\tnew ChangeDeleteBars(this._doc, this._doc.song.barCount - 1, 1);\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, this._doc.song.barCount - 1);\n\t\t\t}\n\t\t\tif (!this._recordingChange.isNoop()) {\n\t\t\t\tthis._doc.record(this._recordingChange);\n\t\t\t\tthis._recordingChange = null;\n\t\t\t}\n\t\t\tthis._lastNote = null;\n\t\t}\n\t\tthis._doc.synth.pause();\n\t\tthis._doc.synth.resetEffects();\n\t\tthis._doc.synth.enableMetronome = false;\n\t\tthis._doc.synth.countInMetronome = false\n\t\tif (this._doc.prefs.autoFollow) {\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\n\t\t}\n\t\tthis._doc.synth.snapToBar();\n\t}\n\t\n\tpublic record(): void {\n\t\tthis._doc.synth.snapToBar();\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\n\t\tif (playheadBar != this._doc.bar) {\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\n\t\t}\n\t\tif (this._pitchesAreTemporary) {\n\t\t\tthis.clearAllPitches();\n\t\t\tthis._pitchesAreTemporary = false;\n\t\t}\n\t\tthis._doc.synth.enableMetronome = this._doc.prefs.metronomeWhileRecording;\n\t\tthis._doc.synth.countInMetronome = this._doc.prefs.metronomeCountIn;\n\t\tthis._doc.synth.startRecording();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._songLengthWhenRecordingStarted = this._doc.song.barCount;\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\n\t\tthis._playheadPattern = null;\n\t\tthis._pitchesChanged = false;\n\t\tthis._lastNote = null;\n\t\tthis._recentlyAddedPitches.length = 0;\n\t\tthis._recordingChange = new ChangeGroup();\n\t\tthis._doc.setProspectiveChange(this._recordingChange);\n\t}\n\t\n\tpublic abortRecording(): void {\n\t\tthis._recordingChange = null;\n\t\tthis.pause();\n\t}\n\t\n\tpublic pitchesAreTemporary(): boolean {\n\t\treturn this._pitchesAreTemporary;\n\t}\n\t\n\tprivate _getMinDivision(): number {\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\n\t\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\t\n\tprivate _getCurrentPlayheadPart(): number {\n\t\tconst currentPart: number = this._doc.synth.playhead * this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\n\t\t\tconst minDivision: number = this._getMinDivision();\n\t\t\treturn Math.round(currentPart / minDivision) * minDivision;\n\t\t}\n\t\treturn Math.round(currentPart);\n\t}\n\t\n\tprivate _lastBarHasPatterns(): boolean {\n\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\n\t\t\tif (this._doc.song.channels[channelIndex].bars[this._doc.song.barCount - 1] != 0) return true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate _onAnimationFrame = (): void => {\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t\tif (this._doc.synth.recording) {\n\t\t\tconst dirty = this._updateRecordedNotes();\n\t\t\tif (dirty) {\n\t\t\t\t// The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n\t\t\t\tthis._doc.notifier.notifyWatchers();\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Returns true if the full interface needs to be rerendered.\n\tprivate _updateRecordedNotes(): boolean {\n\t\tif (this._recordingChange == null) return false;\n\t\tif (!this._doc.lastChangeWas(this._recordingChange)) {\n\t\t\tthis.abortRecording();\n\t\t\treturn false;\n\t\t}\n\t\tif (this._doc.synth.countInMetronome) {\n\t\t\t// If the synth is still counting in before recording, discard any recently added pitches.\n\t\t\tthis._recentlyAddedPitches.length = 0;\n\t\t\tthis._pitchesChanged = false;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tconst partsPerBar: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\tconst oldPart: number = this._playheadPart % partsPerBar;\n\t\tconst oldBar: number = Math.floor(this._playheadPart / partsPerBar);\n\t\tconst oldPlayheadPart: number = this._playheadPart;\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\n\t\tconst newPart: number = this._playheadPart % partsPerBar;\n\t\tconst newBar: number = Math.floor(this._playheadPart / partsPerBar);\n\t\tif (oldPart == newPart && oldBar == newBar) return false;\n\t\tif (this._playheadPart < oldPlayheadPart) {\n\t\t\tthis._lastNote = null;\n\t\t\tthis._playheadPattern = null;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tlet dirty = false;\n\t\tfor (let bar: number = oldBar; bar <= newBar; bar++) {\n\t\t\tif (bar != oldBar) this._playheadPattern = null;\n\t\t\tconst startPart: number = (bar == oldBar) ? oldPart : 0;\n\t\t\tconst endPart: number = (bar == newBar) ? newPart : partsPerBar;\n\t\t\tif (startPart == endPart) break;\n\t\t\tif (this._lastNote != null && !this._pitchesChanged && startPart > 0 && this._doc.synth.liveInputPitches.length > 0) {\n\t\t\t\tthis._recordingChange.append(new ChangePinTime(this._doc, this._lastNote, 1, endPart, this._lastNote.continuesLastPattern));\n\t\t\t\t// Instead of updating the entire interface when extending the last note, just update the current pattern as a special case to avoid doing too much work every frame since performance is important while recording.\n\t\t\t\tthis._doc.currentPatternIsDirty = true;\n\t\t\t} else {\n\t\t\t\tif (this._lastNote != null) {\n\t\t\t\t\t// End the last note.\n\t\t\t\t\tthis._lastNote = null;\n\t\t\t\t}\n\t\t\t\t// All current pitches will usually fill the time span from startPart to endPart, but\n\t\t\t\t// if any recent pitches were released before being recorded, they'll get recorded here\n\t\t\t\t// as short as possible and then any remaining time will be dedicated to pitches that\n\t\t\t\t// haven't been released yet.\n\t\t\t\tlet noteStartPart: number = startPart;\n\t\t\t\tlet noteEndPart: number = endPart;\n\t\t\t\twhile (noteStartPart < endPart) {\n\t\t\t\t\tlet addedAlreadyReleasedPitch: boolean = false;\n\t\t\t\t\tif (this._recentlyAddedPitches.length > 0 || this._doc.synth.liveInputPitches.length > 0) {\n\t\t\t\t\t\tif (this._playheadPattern == null) {\n\t\t\t\t\t\t\tthis._doc.selection.erasePatternInBar(this._recordingChange, this._doc.synth.liveInputChannel, bar);\n\t\t\t\t\t\t\tthis._recordingChange.append(new ChangeEnsurePatternExists(this._doc, this._doc.synth.liveInputChannel, bar));\n\t\t\t\t\t\t\tthis._playheadPattern = this._doc.song.getPattern(this._doc.synth.liveInputChannel, bar);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._playheadPattern == null) throw new Error();\n\t\t\t\t\t\tthis._lastNote = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.synth.liveInputChannel));\n\t\t\t\t\t\tthis._lastNote.continuesLastPattern = (noteStartPart == 0 && !this._pitchesChanged);\n\t\t\t\t\t\tthis._lastNote.pitches.length = 0;\n\t\t\t\t\t\twhile (this._recentlyAddedPitches.length > 0) {\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t\t\t\tconst recentPitch: number = this._recentlyAddedPitches.shift()!;\n\t\t\t\t\t\t\tif (this._doc.synth.liveInputPitches.indexOf(recentPitch) == -1) {\n\t\t\t\t\t\t\t\tthis._lastNote.pitches.push(recentPitch);\n\t\t\t\t\t\t\t\taddedAlreadyReleasedPitch = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t\t\t\tthis._lastNote.pitches.push(this._doc.synth.liveInputPitches[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._recordingChange.append(new ChangeNoteAdded(this._doc, this._playheadPattern, this._lastNote, this._playheadPattern.notes.length));\n\t\t\t\t\t\tif (addedAlreadyReleasedPitch) {\n\t\t\t\t\t\t\t// If this note contains pitches that were already released, shorten it and start a new note.\n\t\t\t\t\t\t\tnoteEndPart = noteStartPart + this._getMinDivision();\n\t\t\t\t\t\t\tnew ChangeNoteLength(this._doc, this._lastNote, this._lastNote.start, noteEndPart);\n\t\t\t\t\t\t\tthis._lastNote = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirty = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._pitchesChanged = addedAlreadyReleasedPitch;\n\t\t\t\t\tnoteStartPart = noteEndPart;\n\t\t\t\t\tnoteEndPart = endPart;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (bar == this._doc.song.barCount - 1) {\n\t\t\t\tif (this._lastBarHasPatterns()) {\n\t\t\t\t\tnew ChangeInsertBars(this._doc, this._doc.song.barCount, 1);\n\t\t\t\t\tthis._doc.bar--; // To counteract it increasing in ChangeInsertBars.\n\t\t\t\t\tdirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dirty;\n\t}\n\t\n\tpublic setTemporaryPitches(pitches: number[], duration: number): void {\n\t\tthis._updateRecordedNotes();\n\t\tfor (let i: number = 0; i < pitches.length; i++) {\n\t\t\tthis._doc.synth.liveInputPitches[i] = pitches[i];\n\t\t}\n\t\tthis._doc.synth.liveInputPitches.length = Math.min(pitches.length, Config.maxChordSize);\n\t\tthis._doc.synth.liveInputDuration = duration;\n\t\tthis._doc.synth.liveInputStarted = true;\n\t\tthis._pitchesAreTemporary = true;\n\t\tthis._pitchesChanged = true;\n\t}\n\t\n\tpublic addPerformedPitch(pitch: number): void {\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._updateRecordedNotes();\n\t\tif (this._pitchesAreTemporary) {\n\t\t\tthis.clearAllPitches();\n\t\t\tthis._pitchesAreTemporary = false;\n\t\t}\n\t\tif (this._doc.prefs.ignorePerformedNotesNotInScale && !Config.scales[this._doc.song.scale].flags[pitch % Config.pitchesPerOctave]) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._doc.synth.liveInputPitches.indexOf(pitch) == -1) {\n\t\t\tthis._doc.synth.liveInputPitches.push(pitch);\n\t\t\tthis._pitchesChanged = true;\n\t\t\twhile (this._doc.synth.liveInputPitches.length > Config.maxChordSize) {\n\t\t\t\tthis._doc.synth.liveInputPitches.shift();\n\t\t\t}\n\t\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\n\t\t\t\n\t\t\tif (this._recordingChange != null) {\n\t\t\t\tconst recentIndex: number = this._recentlyAddedPitches.indexOf(pitch);\n\t\t\t\tif (recentIndex != -1) {\n\t\t\t\t\t// If the latest pitch is already in _recentlyAddedPitches, remove it before adding it back at the end.\n\t\t\t\t\tthis._recentlyAddedPitches.splice(recentIndex, 1);\n\t\t\t\t}\n\t\t\t\tthis._recentlyAddedPitches.push(pitch);\n\t\t\t\twhile (this._recentlyAddedPitches.length > Config.maxChordSize * 4) {\n\t\t\t\t\tthis._recentlyAddedPitches.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic removePerformedPitch(pitch: number): void {\n\t\tthis._updateRecordedNotes();\n\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\n\t\t\tif (this._doc.synth.liveInputPitches[i] == pitch) {\n\t\t\t\tthis._doc.synth.liveInputPitches.splice(i, 1);\n\t\t\t\tthis._pitchesChanged = true;\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic clearAllPitches(): void {\n\t\tthis._updateRecordedNotes();\n\t\tthis._doc.synth.liveInputPitches.length = 0;\n\t\tthis._pitchesChanged = true;\n\t}\n\t\n\tprivate _documentChanged = (): void => {\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tconst octave: number = this._doc.song.channels[this._doc.channel].octave;\n\t\tif (this._doc.synth.liveInputChannel != this._doc.channel || this._channelIsDrum != isDrum || this._channelOctave != octave || this._songKey != this._doc.song.key) {\n\t\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\n\t\t\tthis._channelIsDrum = isDrum;\n\t\t\tthis._channelOctave = octave;\n\t\t\tthis._songKey = this._doc.song.key;\n\t\t\tthis.clearAllPitches();\n\t\t}\n\t\tthis._doc.synth.liveInputInstruments = this._doc.recentPatternInstruments[this._doc.channel];\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\nimport { Note, NotePin, Pattern } from \"../synth/synth\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ChangeGroup } from \"./Change\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeTrackSelection, ChangeChannelBar, ChangeAddChannel, ChangeRemoveChannel, ChangeChannelOrder, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangeSetPatternInstruments, ChangeViewInstrument, ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeModFilter, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, ChangeRhythm, comparePatternNotes, unionOfUsedNotes, generateScaleMap, discardInvalidPatternInstruments, patternsContainSameInstruments } from \"./changes\";\n\ninterface PatternCopy {\n    instruments: number[];\n    notes: any[];\n}\n\ninterface ChannelCopy {\n    isNoise: boolean;\n    isMod: boolean;\n    patterns: Dictionary<PatternCopy>;\n    bars: number[];\n}\n\ninterface SelectionCopy {\n    partDuration: number;\n    channels: ChannelCopy[];\n}\n\nexport class Selection {\n    public boxSelectionX0: number = 0;\n    public boxSelectionY0: number = 0;\n    public boxSelectionX1: number = 0;\n    public boxSelectionY1: number = 0;\n    public digits: string = \"\";\n    public instrumentDigits: string = \"\";\n    public patternSelectionStart: number = 0;\n    public patternSelectionEnd: number = 0;\n    public patternSelectionActive: boolean = false;\n\n    private _changeTranspose: ChangeGroup | null = null;\n    private _changeTrack: ChangeGroup | null = null;\n    private _changeInstrument: ChangeGroup | null = null;\n    private _changeReorder: ChangeGroup | null = null;\n\n    constructor(private _doc: SongDocument) { }\n\n    public toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\n        return {\n            \"x0\": this.boxSelectionX0,\n            \"x1\": this.boxSelectionX1,\n            \"y0\": this.boxSelectionY0,\n            \"y1\": this.boxSelectionY1,\n            \"start\": this.patternSelectionStart,\n            \"end\": this.patternSelectionEnd,\n        };\n    }\n\n    public fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\n        if (json == null) return;\n        this.boxSelectionX0 = +json[\"x0\"];\n        this.boxSelectionX1 = +json[\"x1\"];\n        this.boxSelectionY0 = +json[\"y0\"];\n        this.boxSelectionY1 = +json[\"y1\"];\n        this.patternSelectionStart = +json[\"start\"];\n        this.patternSelectionEnd = +json[\"end\"];\n        this.digits = \"\";\n        this.instrumentDigits = \"\";\n        this.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\n    }\n\n    public selectionUpdated(): void {\n        this._doc.notifier.changed();\n        this.digits = \"\";\n        this.instrumentDigits = \"\";\n    }\n\n    public get boxSelectionBar(): number {\n        return Math.min(this.boxSelectionX0, this.boxSelectionX1);\n    }\n    public get boxSelectionChannel(): number {\n        return Math.min(this.boxSelectionY0, this.boxSelectionY1);\n    }\n    public get boxSelectionWidth(): number {\n        return Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\n    }\n    public get boxSelectionHeight(): number {\n        return Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\n    }\n    public get boxSelectionActive(): boolean {\n        return this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1;\n    }\n    public scrollToSelectedPattern(): void {\n        this._doc.barScrollPos = Math.min(this._doc.bar, Math.max(this._doc.bar - (this._doc.trackVisibleBars - 1), this._doc.barScrollPos));\n        this._doc.channelScrollPos = Math.min(this._doc.channel, Math.max(this._doc.channel - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\n    }\n    public scrollToEndOfSelection(): void {\n        this._doc.barScrollPos = Math.min(this.boxSelectionX1, Math.max(this.boxSelectionX1 - (this._doc.trackVisibleBars - 1), this._doc.barScrollPos));\n        this._doc.channelScrollPos = Math.min(this.boxSelectionY1, Math.max(this.boxSelectionY1 - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\n    }\n\n    public setChannelBar(channelIndex: number, bar: number): void {\n        if (channelIndex == this._doc.channel && bar == this._doc.bar) return;\n        const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTrack);\n        this._changeTrack = new ChangeGroup();\n        this._changeTrack.append(new ChangeChannelBar(this._doc, channelIndex, bar));\n        // @jummbus - changing current viewed instrument to the first for the current pattern if the viewedInstrument is not in the pattern\n        const pattern: Pattern | null = this._doc.getCurrentPattern(0);\n        if (pattern != null) {\n            if (pattern.instruments.indexOf(this._doc.viewedInstrument[this._doc.channel]) < 0) {\n                this._doc.viewedInstrument[this._doc.channel] = pattern.instruments[0];\n            }\n        }\n        // Don't erase existing redo history just to look at highlighted pattern.\n        if (!this._doc.hasRedoHistory()) {\n            this._doc.record(this._changeTrack, canReplaceLastChange);\n        }\n        this.selectionUpdated();\n\n    }\n\n    public setPattern(pattern: number): void {\n        this._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\n    }\n\n    public nextDigit(digit: string, forInstrument: boolean, forRhythms: boolean): void {\n        if (forRhythms) {\n            if (digit == \"3\") {\n                this._doc.record(new ChangeRhythm(this._doc, 0));\n            }\n            else if (digit == \"4\") {\n                this._doc.record(new ChangeRhythm(this._doc, 1));\n            }\n            else if (digit == \"6\") {\n                this._doc.record(new ChangeRhythm(this._doc, 2));\n            }\n            else if (digit == \"8\") {\n                this._doc.record(new ChangeRhythm(this._doc, 3));\n            }\n            else if (digit == \"0\" || digit == \"1\") {\n                this._doc.record(new ChangeRhythm(this._doc, 4));\n            }\n        } else if (forInstrument) {\n            // Treat \"0\" as meaning instrument 10\n            if (digit == \"0\") digit = \"10\";\n            this.instrumentDigits += digit;\n            var parsed = parseInt(this.instrumentDigits);\n            //var pattern: Pattern | null = this._doc.getCurrentPattern();\n           if (parsed != 0 && parsed <= this._doc.song.channels[this._doc.channel].instruments.length) {\n                this.selectInstrument(parsed - 1);\n                return;\n            }\n            this.instrumentDigits = digit;\n            parsed = parseInt(this.instrumentDigits);\n           if (parsed != 0 && parsed <= this._doc.song.channels[this._doc.channel].instruments.length) {\n                this.selectInstrument(parsed - 1);\n                return;\n            }\n            this.instrumentDigits = \"\";\n        }\n        else {\n            this.digits += digit;\n            let parsed: number = parseInt(this.digits);\n            if (parsed <= this._doc.song.patternsPerChannel) {\n\n                this.setPattern(parsed);\n\n                return;\n            }\n\n            this.digits = digit;\n            parsed = parseInt(this.digits);\n            if (parsed <= this._doc.song.patternsPerChannel) {\n\n                this.setPattern(parsed);\n\n                return;\n            }\n\n            this.digits = \"\";\n        }\n    }\n\n    public setModChannel(mod: number, index: number): void {\n        this._doc.record(new ChangeModChannel(this._doc, mod, index));\n    }\n\n    public setModInstrument(mod: number, instrument: number): void {\n        this._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\n    }\n\n    public setModSetting(mod: number, text: string): void {\n        this._doc.record(new ChangeModSetting(this._doc, mod, text));\n    }\n\n    public setModFilter(mod: number, type: number): void {\n        this._doc.record(new ChangeModFilter(this._doc, mod, type));\n    }\n\n    public insertBars(): void {\n        this._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\n        const width: number = this.boxSelectionWidth;\n        this.boxSelectionX0 += width;\n        this.boxSelectionX1 += width;\n    }\n\n    public insertChannel(): void {\n        const group: ChangeGroup = new ChangeGroup();\n        const insertIndex: number = this.boxSelectionChannel + this.boxSelectionHeight;\n        const isNoise: boolean = this._doc.song.getChannelIsNoise(insertIndex - 1);\n        const isMod: boolean = this._doc.song.getChannelIsMod(insertIndex - 1)\n        group.append(new ChangeAddChannel(this._doc, insertIndex, isNoise, isMod));\n        if (!group.isNoop()) {\n            this.boxSelectionY0 = this.boxSelectionY1 = insertIndex;\n            group.append(new ChangeChannelBar(this._doc, insertIndex, this._doc.bar));\n            this._doc.record(group);\n        }\n    }\n\n    public deleteBars(): void {\n        const group: ChangeGroup = new ChangeGroup();\n        if (this._doc.selection.patternSelectionActive) {\n\n            if (this.boxSelectionActive) {\n                group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n            }\n\n            for (const channelIndex of this._eachSelectedChannel()) {\n                for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                    group.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\n                }\n            }\n            group.append(new ChangePatternSelection(this._doc, 0, 0));\n        } else {\n            group.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\n            const width: number = this.boxSelectionWidth;\n            this.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\n            this.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\n        }\n        this._doc.record(group);\n    }\n\n    public deleteChannel(): void {\n        this._doc.record(new ChangeRemoveChannel(this._doc, this.boxSelectionChannel, this.boxSelectionChannel + this.boxSelectionHeight - 1));\n        this.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\n        ColorConfig.resetColors();\n    }\n\n    private * _eachSelectedChannel(): IterableIterator<number> {\n        for (let channelIndex: number = this.boxSelectionChannel; channelIndex < this.boxSelectionChannel + this.boxSelectionHeight; channelIndex++) {\n            yield channelIndex;\n        }\n    }\n\n    private * _eachSelectedBar(): IterableIterator<number> {\n        for (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\n            yield bar;\n        }\n    }\n\n    private *_eachSelectedPattern(channelIndex: number): IterableIterator<Pattern> {\n        const handledPatterns: Dictionary<boolean> = {};\n        for (const bar of this._eachSelectedBar()) {\n            const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n            if (currentPatternIndex == 0) continue;\n            if (handledPatterns[String(currentPatternIndex)]) continue;\n            handledPatterns[String(currentPatternIndex)] = true;\n            const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n            if (pattern == null) throw new Error();\n            yield pattern;\n        }\n    }\n\n    private _parseCopiedInstrumentArray(patternCopy: any, channelIndex: number): number[] {\n        const instruments: number[] = Array.from(patternCopy[\"instruments\"]).map(i => (<any>i) >>> 0);\n        discardInvalidPatternInstruments(instruments, this._doc.song, channelIndex);\n        return instruments;\n    }\n\n    private _patternIndexIsUnused(channelIndex: number, patternIndex: number): boolean {\n        for (let i: number = 0; i < this._doc.song.barCount; i++) {\n            if (this._doc.song.channels[channelIndex].bars[i] == patternIndex) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public copy(): void {\n        const channels: ChannelCopy[] = [];\n\n        for (const channelIndex of this._eachSelectedChannel()) {\n            const patterns: Dictionary<PatternCopy> = {};\n            const bars: number[] = [];\n\n            for (const bar of this._eachSelectedBar()) {\n                const patternNumber: number = this._doc.song.channels[channelIndex].bars[bar];\n                bars.push(patternNumber);\n                if (patterns[String(patternNumber)] == undefined) {\n                    const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                    let instruments: number[] = this._doc.recentPatternInstruments[channelIndex];\n                    let notes: Note[] = [];\n                    if (pattern != null) {\n                        instruments = pattern.instruments.concat();\n\n                        if (this.patternSelectionActive) {\n                            for (const note of pattern.cloneNotes()) {\n                                if (note.end <= this.patternSelectionStart) continue;\n                                if (note.start >= this.patternSelectionEnd) continue;\n                                note.start -= this.patternSelectionStart;\n                                note.end -= this.patternSelectionStart;\n                                if (note.start < 0 || note.end > this.patternSelectionEnd - this.patternSelectionStart) {\n                                    new ChangeNoteLength(null, note, Math.max(note.start, 0), Math.min(this.patternSelectionEnd - this.patternSelectionStart, note.end));\n                                }\n                                notes.push(note);\n                            }\n                        } else {\n                            notes = pattern.notes;\n                        }\n                    }\n                    patterns[String(patternNumber)] = { \"instruments\": instruments, \"notes\": notes };\n                }\n            }\n\n            const channelCopy: ChannelCopy = {\n                \"isNoise\": this._doc.song.getChannelIsNoise(channelIndex),\n                \"isMod\": this._doc.song.getChannelIsMod(channelIndex),\n                \"patterns\": patterns,\n                \"bars\": bars,\n            };\n            channels.push(channelCopy);\n        }\n\n        const selectionCopy: SelectionCopy = {\n            \"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\n            \"channels\": channels,\n        };\n        window.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\n        // Clear selection after copy\n        new ChangePatternSelection(this._doc, 0, 0);\n    }\n\n\t\tprivate _remapToNoisePitches(oldPitches: number[]): number[] {\n          let newPitches: number[] = oldPitches.slice();\n            // There may be some very \"pleasing\" way to place these,\n           // but I'm not sure it's worth the effort.\n            newPitches.sort(function (a: number, b: number): number { return a - b; });\n            let lowestPitch: number = newPitches[0] % Config.drumCount;\n            const numberOfPitches: number = newPitches.length;\n            let highestPitch: number = lowestPitch + (numberOfPitches - 1);\n            while (highestPitch >= Config.drumCount) {\n                lowestPitch--;\n                highestPitch--;\n            }\n            for (let notePitchIndex: number = 0; notePitchIndex < newPitches.length; notePitchIndex++) {\n                newPitches[notePitchIndex] = notePitchIndex + lowestPitch;\n           }\n           return newPitches;\n        }\n        private _convertCopiedPitchNotesToNoiseNotes(oldNotes: Note[]): Note[] {\n            // When pasting from a pitch channel to a noise channel,\n            // we may have pitches beyond what a noise channel supports.\n            let newNotes: Note[] = [];\n            for (let noteIndex: number = 0; noteIndex < oldNotes.length; noteIndex++) {\n                const oldNote: Note = oldNotes[noteIndex];\n                const newNotePitches: number[] = this._remapToNoisePitches(oldNote[\"pitches\"].slice());\n                const oldNotePins: NotePin[] = oldNote.pins;\n                let newNotePins: NotePin[] = [];\n                for (let notePinIndex: number = 0; notePinIndex < oldNotePins.length; notePinIndex++) {\n                    const oldPin: NotePin = oldNotePins[notePinIndex];\n                   newNotePins.push({\n                       interval: oldPin.interval,\n                        time: oldPin.time,\n                        size: oldPin.size,\n                    });\n                }\n                const newNoteStart: number = oldNote[\"start\"];\n                const newNoteEnd: number = oldNote[\"end\"];\n                const newNoteContinuesLastPattern: boolean = oldNote[\"continuesLastPattern\"];\n                const newNote = new Note(0, newNoteStart, newNoteEnd, 0, false);\n                newNote.pitches = newNotePitches;\n                newNote.pins = newNotePins;\n                newNote.continuesLastPattern = newNoteContinuesLastPattern;\n                newNotes.push(newNote);\n            }\n            return newNotes;\n        }\n\t\n        public cutNotes(): void {\n            const group: ChangeGroup = new ChangeGroup();\n            const channelIndex: number = this.boxSelectionChannel;\n            const barIndex: number = this.boxSelectionBar;\n            const cutHeight: number = this.boxSelectionHeight;\n            const cutWidth: number = this.boxSelectionWidth;\n            this.copy();\n            for (let channel = channelIndex; channel < channelIndex + cutHeight; channel++) {\n                for (let bar = barIndex; bar < barIndex + cutWidth; bar++) {\n                    const patternNumber: number = this._doc.song.channels[channel].bars[bar];\n                    if (patternNumber != 0) {\n                        const pattern: Pattern = this._doc.song.channels[channel].patterns[patternNumber - 1];\n                        group.append(new ChangeNoteTruncate(this._doc, pattern, 0, Config.partsPerBeat * this._doc.song.beatsPerBar));\n                    }\n                }\n            }\n            this._doc.record(group);\n        }\n\n    // I'm sorry this function is so complicated!\n    // Basically I'm trying to avoid accidentally modifying patterns that are used\n    // elsewhere in the song (unless we're just pasting a single pattern) but I'm\n    // also trying to reuse patterns where it makes sense to do so, especially \n    // in the same channel it was copied from.\n    public pasteNotes(): void {\n        const selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\n        if (selectionCopy == null) return;\n        const channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\n        const copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\n\n        const group: ChangeGroup = new ChangeGroup();\n        const fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\n\n        const pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\n        for (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\n            const channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\n            const channelIndex: number = this.boxSelectionChannel + pasteChannel;\n               const channelIsNoise = this._doc.song.getChannelIsNoise(channelIndex);\n\t\t\n            const isNoise: boolean = !!channelCopy[\"isNoise\"];\n            const isMod: boolean = !!channelCopy[\"isMod\"];\n\t\tconst isPitch = !isNoise && !isMod;\n            const patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\n            const copiedBars: number[] = channelCopy[\"bars\"] || [];\n            if (copiedBars.length == 0) continue;\n\t\t// Allow pasting from a pitch channel to a noise channel (and the opposite).\n            if (isNoise && this._doc.song.getChannelIsMod(channelIndex)) continue;\n            if (isMod != this._doc.song.getChannelIsMod(channelIndex)) continue;\n                // if (isNoise != this._doc.song.getChannelIsNoise(channelIndex))\n                //     continue;\n\n            const pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\n            if (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\n                // Special case: if there's just one pattern being copied, try to insert it\n                // into whatever pattern is already selected.\n                const copiedPatternIndex: number = copiedBars[0] >>> 0;\n                const bar: number = this.boxSelectionBar;\n                const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n                if (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\n\n                const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n\n                const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n\n                 let pastedNotes: Note[] = patternCopy[\"notes\"];\n                   if (isPitch && channelIsNoise) {\n                       pastedNotes = this._convertCopiedPitchNotesToNoiseNotes(pastedNotes);\n                    }\n\t\t    \n                if (currentPatternIndex == 0) {\n                    const existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\n                    if (existingPattern != undefined &&\n                        !this.patternSelectionActive &&\n                        ((comparePatternNotes(pastedNotes, existingPattern.notes) && patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) ||\n                            this._patternIndexIsUnused(channelIndex, copiedPatternIndex))) {\n                        group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n                    } else {\n                        group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n                    }\n                }\n\n                const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                if (pattern == null) throw new Error();\n                group.append(new ChangePaste(this._doc, pattern, pastedNotes, this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\n                // @jummbus - I actually like it better if instruments copy over, unless it's not a mod and there are notes in the pattern.\n                if (currentPatternIndex == 0 || patternCopy.notes.length == 0 || channelIndex >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                    this.selectInstrument(instrumentsCopy[0]);\n                    group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n                }\n            } else if (this.patternSelectionActive) {\n                const reusablePatterns: Dictionary<number> = {};\n                const usedPatterns: Dictionary<boolean> = {};\n\n                group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\n\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n                    const bar: number = this.boxSelectionBar + pasteBar;\n                    const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n                    const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n                    const reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\n                    if (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\n                    if (reusablePatterns[reusedIndex] != undefined) {\n                        group.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\n                        continue;\n                    }\n\n                    if (currentPatternIndex == 0) {\n                        group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n                        const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n                        const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n                        const pattern: Pattern = this._doc.song.getPattern(channelIndex, bar)!;\n                        group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n                    } else {\n                        const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                        if (pattern == null) throw new Error();\n\n                        if (!usedPatterns[String(currentPatternIndex)]) {\n                            usedPatterns[String(currentPatternIndex)] = true;\n                        } else {\n                            // If this pattern is used here and elsewhere, it's not safe to modify it directly, so\n                            // make a duplicate of it and modify that instead.\n                            group.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\n                            group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n                            const newPattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                            if (newPattern == null) throw new Error();\n                            for (const note of pattern.cloneNotes()) {\n                                   if (isPitch && channelIsNoise) {\n                                        note.pitches = this._remapToNoisePitches(note.pitches);\n                                    }\n\t\t\t\t    group.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\n                            }\n                            // Don't overwrite the existing pattern's instruments if only part of the pattern content is being replaced.\n                            //group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, pattern.instruments, newPattern));\n                        }\n                    }\n\n                    const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                    if (pattern == null) throw new Error();\n                    if (copiedPatternIndex == 0) {\n                        group.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\n                    } else {\n                        const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n                        let pastedNotes: Note[] = patternCopy[\"notes\"];\n                        if (isPitch && channelIsNoise) {\n                            pastedNotes = this._convertCopiedPitchNotesToNoiseNotes(pastedNotes);\n                        }\n                        group.append(new ChangePaste(this._doc, pattern, pastedNotes, this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\n                    }\n\n                    reusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\n                }\n            } else {\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n                    // When a pattern becomes unused when replaced by rectangular selection pasting,\n                    // remove all the notes from the pattern so that it may be reused.\n                    this.erasePatternInBar(group, channelIndex, this.boxSelectionBar + pasteBar);\n                }\n\n                const reusablePatterns: Dictionary<number> = {};\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n                    const bar: number = this.boxSelectionBar + pasteBar;\n                    const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n                    const reusedIndex: string = String(copiedPatternIndex);\n                    if (copiedPatternIndex == 0) continue;\n                    if (reusablePatterns[reusedIndex] != undefined) {\n                        group.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\n                        continue;\n                    }\n                    const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n                    const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n                    const existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\n\n                 let pastedNotes: Note[] = patternCopy[\"notes\"];\n                        if (isPitch && channelIsNoise) {\n                            pastedNotes = this._convertCopiedPitchNotesToNoiseNotes(pastedNotes);\n                        }\n\t\t\t\n\t\tif (existingPattern != undefined &&\n                        copiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\n                        comparePatternNotes(pastedNotes, existingPattern.notes) &&\n                        patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) {\n                        group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n                    } else {\n                        if (existingPattern != undefined && this._patternIndexIsUnused(channelIndex, copiedPatternIndex)) {\n                            group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n                        } else {\n                            group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n                        }\n                        const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                        if (pattern == null) throw new Error();\n                        group.append(new ChangePaste(this._doc, pattern, pastedNotes, this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\n                        group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n                    }\n\n                    reusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\n\n                }\n            }\n        }\n\n        this._doc.record(group);\n    }\n\n    // Set a bar's pattern number to zero, and if that pattern was not used\n    // elsewhere in the channel, erase all notes in it as well.\n    public erasePatternInBar(group: ChangeGroup, channelIndex: number, bar: number): void {\n        const removedPattern: number = this._doc.song.channels[channelIndex].bars[bar];\n        if (removedPattern != 0) {\n            group.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\n            if (this._patternIndexIsUnused(channelIndex, removedPattern)) {\n                // When a pattern becomes unused when replaced by rectangular selection pasting,\n                // remove all the notes from the pattern so that it may be reused.\n                this._doc.song.channels[channelIndex].patterns[removedPattern - 1].notes.length = 0;\n            }\n        }\n    }\n\n    public pasteNumbers(): void {\n        const selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\n        if (selectionCopy == null) return;\n        const channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\n\n        const group: ChangeGroup = new ChangeGroup();\n        const fillSelection: boolean = this.boxSelectionActive;\n\n        const pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\n        for (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\n            const channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\n            const channelIndex: number = this.boxSelectionChannel + pasteChannel;\n\n            const copiedBars: number[] = channelCopy[\"bars\"] || [];\n            if (copiedBars.length == 0) continue;\n\n            const pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\n            for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n                const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n                const bar: number = this.boxSelectionBar + pasteBar;\n\n                if (copiedPatternIndex > this._doc.song.patternsPerChannel) {\n                    group.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\n                }\n\n                group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n            }\n        }\n\n        this._doc.record(group);\n    }\n\n    public selectAll(): void {\n        new ChangePatternSelection(this._doc, 0, 0);\n        if (this.boxSelectionBar == 0 &&\n            this.boxSelectionChannel == 0 &&\n            this.boxSelectionWidth == this._doc.song.barCount &&\n            this.boxSelectionHeight == this._doc.song.getChannelCount()) {\n            this.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\n        } else {\n            this.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\n        }\n        this.selectionUpdated();\n    }\n\n    public selectChannel(): void {\n        new ChangePatternSelection(this._doc, 0, 0);\n        if (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\n            this.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\n        } else {\n            this.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\n        }\n        this.selectionUpdated();\n    }\n\n    public duplicatePatterns(): void {\n        this._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n    }\n\n    public muteChannels(allChannels: boolean): void {\n        if (allChannels) {\n            let anyMuted: boolean = false;\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n                if (this._doc.song.channels[channelIndex].muted) {\n                    anyMuted = true;\n                    break;\n                }\n            }\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n                this._doc.song.channels[channelIndex].muted = !anyMuted;\n            }\n        } else {\n            let anyUnmuted: boolean = false;\n            for (const channelIndex of this._eachSelectedChannel()) {\n                if (!this._doc.song.channels[channelIndex].muted) {\n                    anyUnmuted = true;\n                    break;\n                }\n            }\n            for (const channelIndex of this._eachSelectedChannel()) {\n                this._doc.song.channels[channelIndex].muted = anyUnmuted;\n            }\n        }\n\n        this._doc.notifier.changed();\n    }\n\n    public soloChannels(invert: boolean): void {\n        let alreadySoloed: boolean = true;\n\n        // Soloing mod channels - solo all channels affected by the mod, instead\n        if (this.boxSelectionChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\n            const currentChannel = this._doc.song.channels[this.boxSelectionChannel];\n            const bar: number = currentChannel.bars[this._doc.bar] - 1;\n            const modInstrument = (bar >= 0) ? currentChannel.instruments[currentChannel.patterns[bar].instruments[0]] : currentChannel.instruments[this._doc.viewedInstrument[this.boxSelectionChannel]];\n            const soloPattern: boolean[] = [];\n            let matchesSoloPattern: boolean = !invert;\n\n            // First pass: determine solo pattern\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                soloPattern[channelIndex] = false;\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    if (modInstrument.modChannels[mod] == channelIndex) {\n                        soloPattern[channelIndex] = true;\n                    }\n                }\n            }\n\n            // Second pass: determine if channels match solo pattern, overall\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                if (this._doc.song.channels[channelIndex].muted == soloPattern[channelIndex]) {\n                    matchesSoloPattern = invert;\n                    break;\n                }\n            }\n\n            // Third pass: Actually apply solo pattern or unmute all\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                if (matchesSoloPattern) {\n                    this._doc.song.channels[channelIndex].muted = false;\n                }\n                else {\n                    this._doc.song.channels[channelIndex].muted = !soloPattern[channelIndex];\n                }\n            }\n\n        }\n        else {\n\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                const shouldBeMuted: boolean = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\n                if (this._doc.song.channels[channelIndex].muted != shouldBeMuted) {\n                    alreadySoloed = false;\n                    break;\n                }\n            }\n\n            if (alreadySoloed) {\n                for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n                    this._doc.song.channels[channelIndex].muted = false;\n                }\n            } else {\n                for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                    this._doc.song.channels[channelIndex].muted = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\n                }\n            }\n\n        }\n\n        this._doc.notifier.changed();\n    }\n\n    public forceRhythm(): void {\n        const group: ChangeGroup = new ChangeGroup();\n\n        if (this.boxSelectionActive) {\n\t\t    group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n        }\n\n        for (const channelIndex of this._eachSelectedChannel()) {\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                group.append(new ChangePatternRhythm(this._doc, pattern));\n            }\n        }\n\n        this._doc.record(group);\n    }\n\n    public forceScale(): void {\n        const group: ChangeGroup = new ChangeGroup();\n\n        if (this.boxSelectionActive) {\n\t\t    group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n        }\n\n        const scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\n        for (const channelIndex of this._eachSelectedChannel()) {\n            if (this._doc.song.getChannelIsNoise(channelIndex) || this._doc.song.getChannelIsMod(channelIndex)) continue;\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                unionOfUsedNotes(pattern, scaleFlags);\n            }\n        }\n\n        const scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale, this._doc.song.scaleCustom);\n\n        for (const channelIndex of this._eachSelectedChannel()) {\n            if (this._doc.song.getChannelIsNoise(channelIndex) || this._doc.song.getChannelIsMod(channelIndex)) continue;\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                group.append(new ChangePatternScale(this._doc, pattern, scaleMap));\n            }\n        }\n\n        this._doc.record(group);\n    }\n\n    public setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\n        const canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\n        this._changeTrack = new ChangeGroup();\n        this._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\n        this._doc.record(this._changeTrack, canReplaceLastChange);\n    }\n\n    public transpose(upward: boolean, octave: boolean): void {\n        const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\n        this._changeTranspose = new ChangeGroup();\n\n        if (this.boxSelectionActive) {\n\t\t    this._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n        }\n\n        for (const channelIndex of this._eachSelectedChannel()) {\n\t\t    // Can't transpose mod channels.\n\t\t    if (channelIndex >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n                continue;\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                this._changeTranspose.append(new ChangeTranspose(this._doc, channelIndex, pattern, upward, this._doc.prefs.notesOutsideScale, octave));\n\t\t\t}\n        }\n\n        this._doc.record(this._changeTranspose, canReplaceLastChange);\n    }\n\n    public swapChannels(offset: number): void {\n        const possibleSectionBoundaries: number[] = [\n            this._doc.song.pitchChannelCount,\n            this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount,\n            this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount + this._doc.song.modChannelCount,\n            this._doc.song.getChannelCount(),\n        ];\n        let channelSectionMin: number = 0;\n        let channelSectionMax: number = 0;\n        for (const nextBoundary of possibleSectionBoundaries) {\n            if ((this.boxSelectionChannel < nextBoundary && offset < 0) || (this.boxSelectionChannel + this.boxSelectionHeight <= nextBoundary)) {\n                channelSectionMax = nextBoundary - 1;\n                break;\n            }\n            channelSectionMin = nextBoundary;\n        }\n        const newSelectionMin: number = Math.max(this.boxSelectionChannel, channelSectionMin);\n        const newSelectionMax: number = Math.min(this.boxSelectionChannel + this.boxSelectionHeight - 1, channelSectionMax);\n        offset = Math.max(offset, channelSectionMin - newSelectionMin);\n        offset = Math.min(offset, channelSectionMax - newSelectionMax);\n\n        if (offset != 0) {\n            const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeReorder);\n            this._changeReorder = new ChangeGroup();\n            this.boxSelectionY0 = newSelectionMin + offset;\n            this.boxSelectionY1 = newSelectionMax + offset;\n            this._changeReorder.append(new ChangeChannelOrder(this._doc, newSelectionMin, newSelectionMax, offset));\n            this._changeReorder.append(new ChangeChannelBar(this._doc, Math.max(this.boxSelectionY0, Math.min(this.boxSelectionY1, this._doc.channel + offset)), this._doc.bar));\n            this.selectionUpdated();\n            this._doc.record(this._changeReorder, canReplaceLastChange);\n        }\n    }\n\n    public selectInstrument(instrument: number): void {\n        if (this._doc.viewedInstrument[this._doc.channel] == instrument) {\n            // Multi-selection is not possible for mods... that would not make much sense.\n            if (this._doc.song.layeredInstruments && this._doc.song.patternInstruments && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\n                this._changeInstrument = new ChangeGroup();\n                const instruments: number[] = this._doc.recentPatternInstruments[this._doc.channel];\n                if (instruments.indexOf(instrument) == -1) {\n                    instruments.push(instrument);\n                    const maxLayers: number = this._doc.song.getMaxInstrumentsPerPattern(this._doc.channel);\n                    if (instruments.length > maxLayers) {\n                        instruments.splice(0, instruments.length - maxLayers);\n                    }\n                } else {\n                    instruments.splice(instruments.indexOf(instrument), 1);\n                    if (instruments.length == 0) instruments[0] = 0;\n                }\n\n                if (this.boxSelectionActive) {\n                    this._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n                }\n                for (const channelIndex of this._eachSelectedChannel()) {\n                    for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                        this._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\n                    }\n                }\n                if (!this._changeInstrument.isNoop())\n\t\t    this._doc.record(this._changeInstrument, canReplaceLastChange);\n            }\n        } else {\n            const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\n            this._changeInstrument = new ChangeGroup();\n            this._changeInstrument.append(new ChangeViewInstrument(this._doc, instrument));\n\n            if (!(this._doc.song.layeredInstruments && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) && this._doc.song.patternInstruments) {\n                if (this.boxSelectionActive) {\n                    this._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n                }\n                const instruments: number[] = [instrument];\n                for (const channelIndex of this._eachSelectedChannel()) {\n                    for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                        this._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\n                    }\n                }\n                this._doc.record(this._changeInstrument, canReplaceLastChange);\n            } else if (!this._doc.hasRedoHistory()) {\n                // Don't erase existing redo history just to look at highlighted pattern.\n                this._doc.record(this._changeInstrument, canReplaceLastChange);\n            }\n        }\n    }\n\n    public resetBoxSelection(): void {\n        this.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\n        this.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Scale, Config} from \"../synth/SynthConfig\";\n\nexport class Preferences {\n\tpublic static readonly defaultVisibleOctaves: number = 3;\n\t\n\tpublic customTheme: string | null;\n\tpublic customTheme2: string | null;\n\tpublic autoPlay: boolean;\n\tpublic autoFollow: boolean;\n\tpublic enableNotePreview: boolean;\n\tpublic showFifth: boolean;\n\tpublic notesOutsideScale: boolean;\n\tpublic defaultScale: number;\n\tpublic showLetters: boolean;\n\tpublic showChannels: boolean;\n\tpublic showScrollBar: boolean;\n\tpublic alwaysFineNoteVol: boolean;\n\tpublic displayVolumeBar: boolean;\n\tpublic instrumentCopyPaste: boolean;\n\tpublic enableChannelMuting: boolean;\n\tpublic colorTheme: string;\n\tpublic layout: string;\n\tpublic displayBrowserUrl: boolean;\n\tpublic volume: number = 75;\n\tpublic visibleOctaves: number = Preferences.defaultVisibleOctaves;\n\tpublic pressControlForShortcuts: boolean;\n\tpublic keyboardLayout: string;\n\tpublic enableMidi: boolean;\n\tpublic showRecordButton: boolean;\n\tpublic snapRecordedNotesToRhythm: boolean;\n\tpublic ignorePerformedNotesNotInScale: boolean;\n\tpublic metronomeCountIn: boolean;\n\tpublic metronomeWhileRecording: boolean;\n\tpublic showOscilloscope: boolean;\n\tpublic showSampleLoadingStatus: boolean;\n\t\n\tconstructor() {\n\t\tthis.reload();\n\t}\n\t\n\tpublic reload(): void {\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") != \"false\";\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") != \"false\";\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\n\t\tthis.notesOutsideScale = window.localStorage.getItem(\"notesOutsideScale\") == \"true\";\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") == \"true\";\n\t\tthis.instrumentCopyPaste = window.localStorage.getItem(\"instrumentCopyPaste\") == \"true\";\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\n\t\tthis.pressControlForShortcuts = window.localStorage.getItem(\"pressControlForShortcuts\") == \"true\";\n\t\tthis.enableMidi = window.localStorage.getItem(\"enableMidi\") != \"false\";\n\t\tthis.showRecordButton = window.localStorage.getItem(\"showRecordButton\") == \"true\";\n\t\tthis.snapRecordedNotesToRhythm = window.localStorage.getItem(\"snapRecordedNotesToRhythm\") == \"true\";\n\t\tthis.ignorePerformedNotesNotInScale = window.localStorage.getItem(\"ignorePerformedNotesNotInScale\") == \"true\";\n\t\tthis.metronomeCountIn = window.localStorage.getItem(\"metronomeCountIn\") != \"false\";\n\t\tthis.metronomeWhileRecording = window.localStorage.getItem(\"metronomeWhileRecording\") != \"false\";\n\t\tthis.showOscilloscope = window.localStorage.getItem(\"showOscilloscope\") != \"false\";\n\t\tthis.showSampleLoadingStatus = window.localStorage.getItem(\"showSampleLoadingStatus\") != \"false\";\n\t\tthis.keyboardLayout = window.localStorage.getItem(\"keyboardLayout\") || \"wickiHayden\";\n\t\tthis.layout = window.localStorage.getItem(\"layout\") || \"small\";\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"AbyssBox Classic\";\n\t\tthis.customTheme = window.localStorage.getItem(\"customTheme\");\n                this.customTheme2 = window.localStorage.getItem(\"customTheme2\");\n\t\tthis.visibleOctaves = ((<any>window.localStorage.getItem(\"visibleOctaves\")) >>> 0) || Preferences.defaultVisibleOctaves;\n\t\t\n\t\tconst defaultScale: Scale | undefined = Config.scales.dictionary[window.localStorage.getItem(\"defaultScale\")!];\n\t\tthis.defaultScale = (defaultScale != undefined) ? defaultScale.index : 0;\n\t\t\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\n\t\t}\n\t\t\n\t\tif (window.localStorage.getItem(\"fullScreen\") != null) {\n\t\t\tif (window.localStorage.getItem(\"fullScreen\") == \"true\") this.layout = \"long\";\n\t\t\twindow.localStorage.removeItem(\"fullScreen\");\n\t\t}\n\t}\n\t\n\tpublic save(): void {\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"notesOutsideScale\", this.notesOutsideScale ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"defaultScale\", Config.scales[this.defaultScale].name);\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"instrumentCopyPaste\", this.instrumentCopyPaste ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"pressControlForShortcuts\", this.pressControlForShortcuts ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableMidi\", this.enableMidi ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showRecordButton\", this.showRecordButton ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"snapRecordedNotesToRhythm\", this.snapRecordedNotesToRhythm ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"ignorePerformedNotesNotInScale\", this.ignorePerformedNotesNotInScale ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"metronomeCountIn\", this.metronomeCountIn ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"metronomeWhileRecording\", this.metronomeWhileRecording ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showOscilloscope\", this.showOscilloscope ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showSampleLoadingStatus\", this.showSampleLoadingStatus ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"keyboardLayout\", this.keyboardLayout);\n\t\twindow.localStorage.setItem(\"layout\", this.layout);\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\n\t\twindow.localStorage.setItem(\"customTheme\", this.customTheme!);\n                window.localStorage.setItem(\"customTheme2\", this.customTheme2!);\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\n\t\twindow.localStorage.setItem(\"visibleOctaves\", String(this.visibleOctaves));\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class ChangeNotifier {\n\tprivate _watchers: (() => void)[] = [];\n\tprivate _dirty: boolean = false;\n\n\tpublic watch(watcher: () => void): void {\n\t\tif (this._watchers.indexOf(watcher) == -1) {\n\t\t\tthis._watchers.push(watcher);\n\t\t}\n\t}\n\n\tpublic unwatch(watcher: () => void): void {\n\t\tconst index: number = this._watchers.indexOf(watcher);\n\t\tif (index != -1) {\n\t\t\tthis._watchers.splice(index, 1);\n\t\t}\n\t}\n\n\tpublic changed(): void {\n\t\tthis._dirty = true;\n\t}\n\n\tpublic notifyWatchers(): void {\n\t\tif (!this._dirty) return;\n\t\tthis._dirty = false;\n\t\tfor (const watcher of this._watchers.concat()) {\n\t\t\twatcher();\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {isMobile} from \"./EditorConfig\";\nimport {Pattern, Channel, Song, Synth} from \"../synth/synth\";\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Layout } from \"./Layout\";\nimport { SongPerformance } from \"./SongPerformance\";\nimport { Selection } from \"./Selection\";\nimport { Preferences } from \"./Preferences\";\nimport { Change } from \"./Change\";\nimport { ChangeNotifier } from \"./ChangeNotifier\";\nimport {ChangeSong, setDefaultInstruments, discardInvalidPatternInstruments} from \"./changes\";\n\ninterface HistoryState {\n\tcanUndo: boolean;\n\tsequenceNumber: number;\n\tbar: number;\n\tchannel: number;\n\tinstrument: number;\n\trecoveryUid: string;\n\tprompt: string | null;\n\t\tselection: {x0: number, x1: number, y0: number, y1: number, start: number, end: number};\n}\n\nexport class SongDocument {\n\tpublic colorTheme: string;\n\tpublic song: Song;\n\tpublic synth: Synth;\n\tpublic performance: SongPerformance;\n\tpublic readonly notifier: ChangeNotifier = new ChangeNotifier();\n\tpublic readonly selection: Selection = new Selection(this);\n\tpublic readonly prefs: Preferences = new Preferences();\n\tpublic channel: number = 0;\n\tpublic muteEditorChannel: number = 0;\n\tpublic bar: number = 0;\n\tpublic recalcChannelNames: boolean;\n\tpublic recentPatternInstruments: number[][] = [];\n\tpublic viewedInstrument: number[] = [];\n\t\n\tpublic trackVisibleBars: number = 16;\n\tpublic trackVisibleChannels: number = 4;\n\tpublic barScrollPos: number = 0;\n\tpublic channelScrollPos: number = 0;\n\tpublic prompt: string | null = null;\n\t\n\tpublic addedEffect: boolean = false;\n\tpublic addedEnvelope: boolean = false;\n\tpublic currentPatternIsDirty: boolean = false;\n\t\n\tprivate static readonly _maximumUndoHistory: number = 300;\n\tprivate _recovery: SongRecovery = new SongRecovery();\n\tprivate _recoveryUid: string;\n\tprivate _recentChange: Change | null = null;\n\tprivate _sequenceNumber: number = 0;\n\tprivate _lastSequenceNumber: number = 0;\n\tprivate _stateShouldBePushed: boolean = false;\n\tprivate _recordedNewSong: boolean = false;\n\tpublic _waitingToUpdateState: boolean = false;\n\t\t\n\tconstructor() {\n\t\tthis.notifier.watch(this._validateDocState);\n\t\t\n\t\tColorConfig.setTheme(this.prefs.colorTheme);\n\t\tLayout.setLayout(this.prefs.layout);\n\t\t\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\n\t\t}\n\t\t\t\n\t\tlet songString: string = window.location.hash;\n\t\tif (songString == \"\") {\n\t\t\tsongString = this._getHash();\n\t\t}\n\t\tthis.song = new Song(songString);\n\t\tif (songString == \"\" || songString == undefined) {\n\t\t\tsetDefaultInstruments(this.song);\n\t\t\tthis.song.scale = this.prefs.defaultScale;\n\t\t}\n\t\tsongString = this.song.toBase64String();\n\t\tthis.synth = new Synth(this.song);\n\t\tthis.synth.volume = this._calcVolume();\n\t\tthis.synth.anticipatePoorPerformance = isMobile;\n\t\t\n\t\tlet state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null) {\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\n\t\t\tstate = {canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, instrument: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON()};\n\t\t}\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\n\t\tthis._replaceState(state, songString);\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\n\t\t\t\n\t\tthis.bar = state.bar | 0;\n\t\tthis.channel = state.channel | 0;\n\t\tfor (let i: number = 0; i <= this.channel; i++) this.viewedInstrument[i] = 0;\n\t\tthis.viewedInstrument[this.channel] = state.instrument | 0;\n\t\tthis._recoveryUid = state.recoveryUid;\n\t\t//this.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\n\t\tthis.prompt = state.prompt;\n\t\tthis.selection.fromJSON(state.selection);\n\t\t\t\n\t\t// For all input events, catch them when they are about to finish bubbling,\n\t\t// presumably after all handlers are done updating the model, then update the\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\n\t\t// but they are immediately followed by mousemove which does. \n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\n\t\t}\n\t\t\n\t\tthis._validateDocState();\n\t\tthis.performance = new SongPerformance(this);\n\t}\n\t\t\n\tpublic toggleDisplayBrowserUrl() {\n\t\tconst state: HistoryState = this._getHistoryState()!;\n\t\tthis.prefs.displayBrowserUrl = !this.prefs.displayBrowserUrl;\n\t\tthis._replaceState(state, this.song.toBase64String());\n\t}\n\t\t\n\tprivate _getHistoryState(): HistoryState | null {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\treturn window.history.state;\n\t\t} else {\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\n\t\t\treturn json == null ? null : json.state;\n\t\t}\n\t}\n\t\t\n\tprivate _getHash(): string {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\treturn window.location.hash;\n\t\t} else {\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\n\t\t\treturn json == null ? \"\" : json.hash;\n\t\t}\n\t}\n\t\t\n\tprivate _replaceState(state: HistoryState, hash: string): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\n\t\t} else {\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({state, hash}));\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\n\t\t}\n\t}\n\t\t\n\tprivate _pushState(state: HistoryState, hash: string): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\n\t\t\tif (currentIndex == oldestIndex) {\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\n\t\t\t}\n\t\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({state, hash}));\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\n\t\t}\n\t\tthis._lastSequenceNumber = state.sequenceNumber;\n\t}\n\n\tpublic hasRedoHistory(): boolean {\n\t\treturn this._lastSequenceNumber > this._sequenceNumber;\n\t}\t\n\t\t\n\tprivate _forward(): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.forward();\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\n\t\t\tif (currentIndex != newestIndex) {\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tprivate _back(): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.back();\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\n\t\t\tif (currentIndex != oldestIndex) {\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tprivate _whenHistoryStateChanged = (): void => {\n\t\tif (this.synth.recording) {\n\t\t\t// Changes to the song while it's recording to could mess up the recording so just abort the recording.\n\t\t\tthis.performance.abortRecording();\n\t\t}\n\t\t\n\t\tif (window.history.state == null && window.location.hash != \"\") {\n\t\t\t// The user changed the hash directly.\n\t\t\tthis._sequenceNumber++;\n\t\t\tthis._resetSongRecoveryUid();\n\t\t\tconst state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON()};\n\t\t\tnew ChangeSong(this, window.location.hash);\n\t\t\tthis.prompt = state.prompt;\n\t\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\n\t\t\t} else {\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\n\t\t\t}\n\t\t\tthis.forgetLastChange();\n\t\t\tthis.notifier.notifyWatchers();\n\t\t\t// Stop playing, and go to start when pasting new song in.\n\t\t\tthis.synth.pause();\n\t\t\tthis.synth.goToBar(0);\n\t\t\treturn;\n\t\t}\n\t\t\t\n\t\tconst state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null) throw new Error(\"History state is null.\");\n\t\t\t\n\t\t// Abort if we've already handled the current state. \n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\n\t\t\t\n\t\tthis.bar = state.bar;\n\t\tthis.channel = state.channel;\n\t\tthis.viewedInstrument[this.channel] = state.instrument;\n\t\tthis._sequenceNumber = state.sequenceNumber;\n\t\tthis.prompt = state.prompt;\n\t\tnew ChangeSong(this, this._getHash());\n\t\t\t\n\t\tthis._recoveryUid = state.recoveryUid;\n\t\tthis.selection.fromJSON(state.selection);\n\t\t\t\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\n\t\t\t\n\t\tthis.forgetLastChange();\n\t\tthis.notifier.notifyWatchers();\n\t}\n\t\t\n\tprivate _cleanDocument = (): void => {\n\t\tthis.notifier.notifyWatchers();\n\t}\n\t\n\tprivate _validateDocState = (): void => {\n\t\tconst channelCount: number = this.song.getChannelCount();\n\t\tfor (let i: number = this.recentPatternInstruments.length; i < channelCount; i++) {\n\t\t\tthis.recentPatternInstruments[i] = [0];\n\t}\n\t\tthis.recentPatternInstruments.length = channelCount;\n\t\tfor (let i: number = 0; i < channelCount; i++) {\n\t\t\tif (i == this.channel) {\n\t\t\t\tif (this.song.patternInstruments) {\n\t\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\n\t\t\t\t\tif (pattern != null) {\n\t\t\t\t\t\tthis.recentPatternInstruments[i] = pattern.instruments.concat();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst channel: Channel = this.song.channels[this.channel];\n\t\t\t\t\tfor (let j: number = 0; j < channel.instruments.length; j++) {\n\t\t\t\t\t\tthis.recentPatternInstruments[i][j] = j;\n\t\t\t\t\t}\n\t\t\t\t\tthis.recentPatternInstruments[i].length = channel.instruments.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdiscardInvalidPatternInstruments(this.recentPatternInstruments[i], this.song, i);\n\t\t}\n\n\t\tfor (let i: number = this.viewedInstrument.length; i < channelCount; i++) {\n\t\t\tthis.viewedInstrument[i] = 0;\n\t\t}\n\t\tthis.viewedInstrument.length = channelCount;\n\t\tfor (let i: number = 0; i < channelCount; i++) {\n\t\t\tif (this.song.patternInstruments && !this.song.layeredInstruments && i == this.channel) {\n\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\n\t\t\t\tif (pattern != null) {\n\t\t\t\t\tthis.viewedInstrument[i] = pattern.instruments[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.viewedInstrument[i] = Math.min(this.viewedInstrument[i] | 0, this.song.channels[i].instruments.length - 1);\n\t\t}\n\t\t\n\t\tconst highlightedPattern: Pattern | null = this.getCurrentPattern();\n\t\tif (highlightedPattern != null && this.song.patternInstruments) {\n\t\t\tthis.recentPatternInstruments[this.channel] = highlightedPattern.instruments.concat();\n\t\t}\n\t\t\n\t\t// Normalize selection.\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\n\t\t// because it may auto-follow the playhead outside the selection but it would\n\t\t// be annoying to lose your selection just because the song is playing.\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\n\t\t\tchannelCount < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\n\t\t\tthis.selection.resetBoxSelection();\n\t\t}\n\t}\n\t\t\n\tprivate _updateHistoryState = (): void => {\n\t\tthis._waitingToUpdateState = false;\n\t\tlet hash: string;\n\t\ttry {\n\t\t\t// Ensure that the song is not corrupted before saving it.\n\t\t\thash = this.song.toBase64String();\n\t\t} catch (error) {\n\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\n\t\t\treturn;\n\t\t}\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\n\t\tif (this._recordedNewSong) {\n\t\t\tthis._resetSongRecoveryUid();\n\t\t} else {\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\n\t\t}\n\t\tlet state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\n\t\tif (this._stateShouldBePushed) {\n\t\t\tthis._pushState(state, hash);\n\t\t} else {\n\t\t\tthis._replaceState(state, hash);\n\t\t}\n\t\tthis._stateShouldBePushed = false;\n\t\tthis._recordedNewSong = false;\n\t}\n\t\t\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\n\t\tif (change.isNoop()) {\n\t\t\tthis._recentChange = null;\n\t\t\tif (replace) this._back();\n\t\t} else {\n\t\t\tchange.commit();\n\t\t\tthis._recentChange = change;\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\n\t\t\tif (!this._waitingToUpdateState) {\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\n\t\t\t\t// committed and the interface has rendered the latest changes to\n\t\t\t\t// improve perceived responsiveness.\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\n\t\t\t\tthis._waitingToUpdateState = true;\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tprivate _resetSongRecoveryUid(): void {\n\t\tthis._recoveryUid = generateUid();\n\t}\n\t\t\n\tpublic openPrompt(prompt: string): void {\n\t\tthis.prompt = prompt;\n\t\tconst hash: string = this.song.toBase64String();\n\t\tthis._sequenceNumber++;\n\t\tconst state = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\n\t\tthis._pushState(state, hash);\n\t}\n\t\t\n\tpublic undo(): void {\n\t\tconst state: HistoryState = this._getHistoryState()!;\n\t\tif (state.canUndo) this._back();\n\t}\n\t\t\n\tpublic redo(): void {\n\t\tthis._forward();\n\t}\n\t\t\n\tpublic setProspectiveChange(change: Change | null): void {\n\t\tthis._recentChange = change;\n\t}\n\t\t\n\tpublic forgetLastChange(): void {\n\t\tthis._recentChange = null;\n\t}\n\t\t\n\tpublic lastChangeWas(change: Change | null): boolean {\n\t\treturn change != null && change == this._recentChange;\n\t}\n\t\t\n\tpublic goBackToStart(): void {\n\t\tthis.bar = 0;\n\t\tthis.channel = 0;\n\t\tthis.barScrollPos = 0;\n\t\tthis.channelScrollPos = 0;\n\t\tthis.synth.snapToStart();\n\t\tthis.notifier.changed();\n\t}\n\t\n\tpublic setVolume(val: number): void {\n\t\tthis.prefs.volume = val;\n\t\tthis.prefs.save();\n\t\tthis.synth.volume = this._calcVolume();\n\t}\n\t\t\n\tprivate _calcVolume(): number {\n\t\treturn Math.min(1.0, Math.pow(this.prefs.volume / 50.0, 0.5)) * Math.pow(2.0, (this.prefs.volume - 75.0) / 25.0);\n\t}\n\t\t\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\n\t}\n\t\t\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\n\t\tif (barOffset == 0) {\n\t\t\treturn this.viewedInstrument[this.channel];\n\t\t} else {\n\t\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\n\t\t\treturn pattern == null ? 0 : pattern.instruments[0];\n        }\n\t}\n\t\t\n\tpublic getMobileLayout(): boolean {\n\t\treturn (this.prefs.layout == \"wide\") ? window.innerWidth <= 1000 : window.innerWidth <= 710;\n\t}\n\t\t\n\tpublic getBarWidth(): number {\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\n\t\treturn (!this.getMobileLayout() && this.prefs.enableChannelMuting && (!this.getFullScreen() || this.prefs.layout == \"wide\")) ? 30 : 32;\n\t}\n\t\t\n\tpublic getChannelHeight(): number {\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.prefs.layout != \"wide\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\n\t}\n\t\t\n\tpublic getFullScreen(): boolean {\n\t\treturn !this.getMobileLayout() && (this.prefs.layout != \"small\");\n\t}\n\t\n\tpublic getVisibleOctaveCount(): number {\n\t\treturn this.getFullScreen() ? this.prefs.visibleOctaves : Preferences.defaultVisibleOctaves;\n}\n\t\n\tpublic getVisiblePitchCount(): number {\n\t\t return this.getVisibleOctaveCount() * Config.pitchesPerOctave + 1;\n\t}\n\t\n\tpublic getBaseVisibleOctave(channel: number): number {\n\t\tconst visibleOctaveCount: number = this.getVisibleOctaveCount();\n\t\treturn Math.max(0, Math.min(Config.pitchOctaves - visibleOctaveCount, Math.ceil(this.song.channels[channel].octave - visibleOctaveCount * 0.5)));\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport \"./style\"; // Import for the side effects, there's no exports.\nimport {SongEditor} from \"./SongEditor\";\nimport {NotePin, Note, Pattern, Instrument, Channel, Song, Synth} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ExportPrompt} from \"./ExportPrompt\";\nimport {ChangePreset} from \"./changes\";\n\n\n//namespace beepbox {\nconst doc: SongDocument = new SongDocument();//debug only\nconst editor: SongEditor = new SongEditor(doc);//same as above\n// const doc: SongDocument = new SongDocument();\n// const editor: SongEditor = new SongEditor(doc);\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\nbeepboxEditorContainer.appendChild(editor.mainLayer);\neditor.whenUpdated();\n\n// Fade-in transitions\neditor.mainLayer.className += \" load\";\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\n\n// Give select2 class to these\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\n\n// Onclick event to expand/collapse optgroups\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\n\t$(this).siblings().toggle();\n});\n\n// Open event to collapse all optgroups by default\n$(\"#pitchPresetSelect\").on('select2:open', function () {\n\t$('.select2-dropdown--below').css('opacity', 0);\n\t$('.select2-dropdown').css('opacity', 1);\n\t$('#pitchPresetSelect')\n\tsetTimeout(() => {\n\t\tlet groups = $('.select2-container--open .select2-results__group');\n\t\tlet options = $('.select2-container--open .select2-results__option');\n\n\t\t$.each(groups, (index, v) => {\n\t\t\t$(v).siblings().hide();\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\n\t\t})\n\t\t$.each(options, (index, v) => {\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\n\t\t})\n\n\t\t$('.select2-dropdown--below').css('opacity', 1);\n\t}, 0);\n});\n\n// Open event to collapse all optgroups by default\n$(\"#drumPresetSelect\").on('select2:open', function () {\n\t$('.select2-dropdown--below').css('opacity', 0);\n\t$('.select2-dropdown').css('opacity', 1);\n\t$('#drumPresetSelect')\n\tsetTimeout(() => {\n\t\tlet groups = $('.select2-container--open .select2-results__group');\n\t\tlet options = $('.select2-container--open .select2-results__option');\n\n\t\t$.each(groups, (index, v) => {\n\t\t\t$(v).siblings().hide();\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\n\t\t})\n\t\t$.each(options, (index, v) => {\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\n\t\t})\n\n\t\t$('.select2-dropdown--below').css('opacity', 1);\n\t}, 0);\n});\n\n// Select2 events\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\n\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\n\n\neditor.mainLayer.focus();\n\n// don't autoplay on mobile devices, wait for input.\nif (!isMobile && doc.prefs.autoPlay) {\n\tfunction autoplay(): void {\n\t\tif (!document.hidden) {\n\t\t\tdoc.synth.play();\n\t\t\teditor.updatePlayButton();\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\n\t\t}\n\t}\n\tif (document.hidden) {\n\t\t// Wait until the tab is visible to autoplay:\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\n\t} else {\n\t\t// Can't call this immediately, as main.ts needs to finish executing for the beepbox namespace to finish being declared.\n\t\twindow.setTimeout(autoplay);\n\t}\n}\n\n// BeepBox uses browser history state as its own undo history. Browsers typically\n// remember scroll position for each history state, but BeepBox users would prefer not \n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\n\neditor.updatePlayButton();\n\nif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.register(\"/service_worker.js\", {updateViaCache: \"all\", scope: \"/\"}).catch(() => {});\n}\n\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\n\texport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Song, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset};\n"],"mappings":"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GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAErB,eAAkB,UAAWqB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,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A2BZ,EAA2B,YAC5D,IAAK,IAAIz8C,EAAY,EAAGA,EAAIq9C,EAAkBrlD,OAAQgI,IAAK,CACvD,MAAM8lC,EAAwBuX,EAAkBr9C,GAChD,GAAiC,SAA7B8lC,EAAuB,KAGvB,SAEJ,GAAgC,MAA5BA,EAAuB,KAGvB,SAEJ,MAAMwX,EAAmBxX,EAAuB,KAE1CyX,EAAkB,CACpB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAqB,CACvB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAyB,CAC3B,OACA,QACA,SACA,MACA,YACA,UACA,YACA,eACA,mBACA,QACA,cACA,UACA,QACA,kBACA,QACA,gBACA,iBACA,aACA,mBACA,kBACA,OACA,gBACA,eACA,gBACA,cACA,YACA,YACA,cACA,UACA,YACA,UACA,YACA,eAEAF,EAAMG,SAASJ,GACfF,GAA0B,EACnBI,EAASE,SAASJ,IACzBF,GAA0B,EAG1BtX,EAAuB,KAAIyX,EAAMC,EAASxV,WAAUj8B,GAAKA,IAAMuxC,MACxDG,EAAaC,SAASJ,KACZ,YAAbA,GAAuC,UAAbA,IAO1BF,GAA0B,EAG1BtX,EAAuB,KAAIyX,EAAME,EAAazV,WAAUj8B,GAAKA,IAAMuxC,MAG9E,CACJ,CACJ,CAEDF,GACA3mD,EAAOqC,4BAA6B,EAEpCw0C,GAAKuH,KAELt7C,EAAmB,GACnBwZ,EAAa8/B,cAAgB,CAAC,kBAII,MAA9B9/B,EAAa8/B,eAAyB9/B,EAAa8/B,cAAc76C,OAAS,IAG1EvB,EAAOqC,4BAA6B,EACpCw0C,GAAK2F,KAGhB,CAGD,GADA99C,KAAKs6C,MAAQ,EACc9sB,MAAvBw6B,EAAkB,MAAgB,CAClC,MAAMQ,EAAoC,CACtC,YAAa,kBACb,YAAa,kBACbC,OAAU,WAERC,EAA2Dl7B,MAAtCg7B,EAAcR,EAAkB,OAAmBQ,EAAcR,EAAkB,OAAKA,EAAkB,MAC/H1N,EAAgBh5C,EAAO4O,OAAO2iC,WAAUyH,GAASA,EAAM91C,MAAQkkD,IAErE,IADc,GAAVpO,IAAat6C,KAAKs6C,MAAQA,GAC1Bt6C,KAAKs6C,OAASh5C,EAAO4O,OAAmB,WAAU,OAAEpL,OACnB0oB,MAA7Bw6B,EAAwB,YACxB,IAAK,IAAIn9C,KAAKm9C,EAAwB,YAAE33C,OACpCrQ,KAAKq4C,YAAYxtC,GAAKm9C,EAAwB,YAAEn9C,EAI/D,CAED,GAAyB2iB,MAArBw6B,EAAgB,IAChB,GAAkC,iBAAtBA,EAAiB,IACzBhoD,KAAKoD,KAAQ4kD,EAAgB,IAAI,OAAU,GAAK1mD,EAAO+O,KAAKxN,YACzD,GAAkC,iBAAtBmlD,EAAiB,IAAe,CAC/C,MAAM5kD,EAAc4kD,EAAgB,IAGpC,GAAY,OAAR5kD,EACApD,KAAKoD,IAAM,EACXpD,KAAKgiC,OAAS,OACX,GAAY,sBAAR5+B,EACPpD,KAAKoD,IAAM,EACXpD,KAAKgiC,QAAU,OACZ,GAAY,OAAR5+B,EACPpD,KAAKoD,IAAM,EACXpD,KAAKgiC,QAAU,OACZ,GAAY,eAAR5+B,EACPpD,KAAKoD,IAAM,EACXpD,KAAKgiC,QAAU,MACZ,CACH,MAAM2mB,EAAiBvlD,EAAI8iD,OAAO,GAAG0C,cAC/BC,EAAiBzlD,EAAI8iD,OAAO,GAAGlG,cAGrC,IAAIl7C,EAF4C,CAAEgkD,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,IAE7DT,GAC1C,MAAMjzC,EAF8C,CAAE,IAAK,EAAG,IAAK,EAAG4mB,GAAM,EAAG,KAAM,GAEpCusB,GACpCr7B,MAAT1oB,IACc0oB,MAAV9X,IAAqB5Q,GAAS4Q,GAC9B5Q,EAAQ,IAAGA,GAAS,IACxBA,GAAgB,GAChB9E,KAAKoD,IAAM0B,EAElB,CACJ,CAG+B0oB,MAAhCw6B,EAA2B,iBAC3BhoD,KAAKs5C,MAAQlZ,GAAM9+B,EAAOmP,SAAUnP,EAAOoP,SAAW,EAAkC,EAA/Bs3C,EAA2B,iBAGzDx6B,MAA3Bw6B,EAAsB,YACtBhoD,KAAKgiC,OAAS5B,GAAM9+B,EAAOqP,UAAWrP,EAAOsP,UAAY,EAA6B,EAA1Bo3C,EAAsB,YAGtF,IAAI1W,EAA6B,EACL9jB,MAAxBw6B,EAAmB,SACnB1W,EAAqBlR,GAAM,EAAG,GAA2B,EAAvB4nB,EAAmB,SAGxBx6B,MAA7Bw6B,EAAwB,cACxBhoD,KAAK2mC,YAAcx7B,KAAK2L,IAAIxV,EAAOiQ,eAAgBpG,KAAKoC,IAAIjM,EAAOkQ,eAA4C,EAA5Bw2C,EAAwB,eAG/G,IAAI1hB,EAA+B,EACD9Y,MAA9Bw6B,EAAyB,eACzB1hB,EAAqD,EAA7B0hB,EAAyB,cAAU,EAC3DhoD,KAAK8lC,OAASxkC,EAAO2Q,QAAQ4gC,WAAU/M,GAAUA,EAAO5zB,cAAgBo0B,KACpD,GAAhBtmC,KAAK8lC,SACL9lC,KAAK8lC,OAAS,IAMUtY,MAA5Bw6B,EAAuB,WACvBhoD,KAAK64C,WAAa1tC,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,EAAKy6C,EAAuB,YAAK,IAE1EhoD,KAAK64C,WAAa,EAGcrrB,MAAhCw6B,EAA2B,eAC3BhoD,KAAK04C,eAAiBvtC,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,EAAKy6C,EAA2B,gBAAK,IAGlFhoD,KAAK04C,eAAiB,EAGgBlrB,MAAtCw6B,EAAiC,qBACjChoD,KAAKy4C,qBAAuBttC,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,IAAKy6C,EAAiC,sBAAK,IAG9FhoD,KAAKy4C,qBAAuB,EAGDjrB,MAA3Bw6B,EAAsB,UACtBhoD,KAAKw4C,UAAYrtC,KAAK2L,IAAI,IAAQ3L,KAAKoC,IAAI,IAASy6C,EAAsB,WAAK,IAG/EhoD,KAAKw4C,UAAY,IAGWhrB,MAA5Bw6B,EAAuB,WACvBhoD,KAAKu4C,WAAaptC,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,GAAMy6C,EAAuB,YAAK,IAG3EhoD,KAAKu4C,WAAa,EAGU/qB,MAA5Bw6B,EAAuB,WACvBhoD,KAAK44C,WAAaztC,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,GAAMy6C,EAAuB,YAAK,IAG3EhoD,KAAK44C,WAAa,EAGgBprB,MAAlCw6B,EAA6B,iBAC7BhoD,KAAK24C,iBAAmBxtC,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,MAAOy6C,EAA6B,kBAAK,IAGxFhoD,KAAK24C,iBAAmB,EAG5B,IAAI0Q,EAAyB,EACzBC,EAAsB,EACtBC,EAAkB,EACtB,GAA8B/7B,MAA1Bw6B,EAAqB,SACrB,IAAK,MAAMV,KAAiBU,EAAqB,SACzCV,EAA2B,cAAG+B,EAAiBl+C,KAAK2L,IAAIuyC,EAAsD,EAAtC/B,EAA2B,YAAEzkD,SACrGykD,EAAwB,WAAGgC,EAAcn+C,KAAK2L,IAAIwyC,EAAgD,EAAnChC,EAAwB,SAAEzkD,SACzFykD,EAAwB,WAAGiC,EAAUp+C,KAAK2L,IAAIyyC,EAA4C,EAAnCjC,EAAwB,SAAEzkD,SAIrD2qB,MAApCw6B,EAA+B,mBAC/BhoD,KAAKg6C,qBAAuBgO,EAA+B,mBAE3DhoD,KAAKg6C,oBAAqB,EAEUxsB,MAApCw6B,EAA+B,mBAC/BhoD,KAAKomC,qBAAuB4hB,EAA+B,mBAE3DhoD,KAAKomC,mBAAsBijB,EAAiB,EAEhDrpD,KAAKy6C,mBAAqBtvC,KAAKoC,IAAI+7C,EAAahoD,EAAOoQ,aACvD1R,KAAKm2B,SAAWhrB,KAAKoC,IAAIg8C,EAASjoD,EAAOoQ,aAEV8b,MAA3Bw6B,EAAsB,YACtBhoD,KAAKu6C,UAAYna,GAAM,EAAGpgC,KAAKm2B,SAAoC,EAA1B6xB,EAAsB,YAErCx6B,MAA1Bw6B,EAAqB,WACrBhoD,KAAKw6C,WAAapa,GAAM,EAAGpgC,KAAKm2B,SAAWn2B,KAAKu6C,UAAY,EAA4B,EAAzByN,EAAqB,WAGxF,MAAMwB,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA4B,GAClC,GAA8Bl8B,MAA1Bw6B,EAAqB,SACrB,IAAK,IAAI9N,EAAuB,EAAGA,EAAe8N,EAAqB,SAAEnlD,OAAQq3C,IAAgB,CAC7F,IAAIoN,EAAqBU,EAAqB,SAAE9N,GAEhD,MAAM/yB,EAAmB,IAAI4wB,GAE7B,IAAIxR,GAA0B,EAC1BlB,GAAwB,EA6B5B,GA5B6B7X,MAAzB85B,EAAoB,MACpB/gB,EAA2C,QAAzB+gB,EAAoB,KACtCjiB,EAAyC,OAAzBiiB,EAAoB,MAGpC/gB,EAAkB2T,GAAgB,EAElC3T,EACAkjB,EAAiB1+C,KAAKoc,GACfke,EACPqkB,EAAe3+C,KAAKoc,GAGpBqiC,EAAiBz+C,KAAKoc,GAGcqG,MAApC85B,EAA+B,kBAC/BngC,EAAQ6a,OAAS5B,GAAM,EAAG9+B,EAAOwY,aAAuD,GAAL,EAAnCwtC,EAA+B,kBAC3E/gB,IAAgBpf,EAAQ6a,OAAS,IAGZxU,MAAzB85B,EAAoB,KACpBngC,EAAQ3iB,KAAO8iD,EAAoB,KAGnCngC,EAAQ3iB,KAAO,GAGfhC,MAAM8hB,QAAQgjC,EAA2B,aAAI,CAC7C,MAAMY,EAA2BZ,EAA2B,YAC5D,IAAK,IAAIz8C,EAAY,EAAGA,EAAIq9C,EAAkBrlD,UACtCgI,GAAK7K,KAAK+5C,+BADoClvC,IAAK,CAEvD,MAAM+T,EAAyB,IAAI8uB,GAAWnH,EAAgBlB,GAC9Dle,EAAQ6d,YAAYn6B,GAAK+T,EACzBA,EAAWynB,eAAe6hB,EAAkBr9C,GAAI07B,EAAgBlB,GAAc,GAAO,EAAOiM,EAC/F,CAEJ,CAED,IAAK,IAAIzmC,EAAY,EAAGA,EAAI7K,KAAKy6C,mBAAoB5vC,IAAK,CACtD,MAAM8vC,EAAmB,IAAI7V,GAG7B,IAAIqB,EAFJhf,EAAQ6wB,SAASntC,GAAK8vC,EAGlB2M,EAAwB,WAAGnhB,EAAgBmhB,EAAwB,SAAEz8C,IACpD2iB,MAAjB2Y,GAEJwU,EAAQtU,eAAeF,EAAenmC,KAAMmnB,EAASmf,EAAsBC,EAAgBlB,EAC9F,CACDle,EAAQ6wB,SAASn1C,OAAS7C,KAAKy6C,mBAE/B,IAAK,IAAI5vC,EAAY,EAAGA,EAAI7K,KAAKm2B,SAAUtrB,IACvCsc,EAAQ8wB,KAAKptC,GAAmC2iB,MAA7B85B,EAAwB,SAAkBn8C,KAAKoC,IAAIvN,KAAKy6C,mBAAoB6M,EAAwB,SAAEz8C,KAAO,GAAK,EAEzIsc,EAAQ8wB,KAAKp1C,OAAS7C,KAAKm2B,QAC9B,CAGDqzB,EAAiB3mD,OAASvB,EAAOgY,uBAAsBkwC,EAAiB3mD,OAASvB,EAAOgY,sBACxFmwC,EAAiB5mD,OAASvB,EAAOkY,uBAAsBiwC,EAAiB5mD,OAASvB,EAAOkY,sBACxFkwC,EAAe7mD,OAASvB,EAAOoY,qBAAoBgwC,EAAe7mD,OAASvB,EAAOoY,oBACtF1Z,KAAKitB,kBAAoBu8B,EAAiB3mD,OAC1C7C,KAAKktB,kBAAoBu8B,EAAiB5mD,OAC1C7C,KAAK85C,gBAAkB4P,EAAe7mD,OACtC7C,KAAKs4C,SAASz1C,OAAS,EACvBL,MAAM+6C,UAAUxyC,KAAKgyC,MAAM/8C,KAAKs4C,SAAUkR,GAC1ChnD,MAAM+6C,UAAUxyC,KAAKgyC,MAAM/8C,KAAKs4C,SAAUmR,GAC1CjnD,MAAM+6C,UAAUxyC,KAAKgyC,MAAM/8C,KAAKs4C,SAAUoR,GAEtCpoD,EAAOqC,6BACPkhD,OAAOC,SAASpd,KAAO1nC,KAAK66C,iBAE5BkK,YAAW,KAAQD,SAASE,QAAQ,GAAK,I,CAI1C,UAAA2E,CAAWzP,EAAsBU,GACpC,GAAIA,EAAM,GAAKA,GAAO56C,KAAKm2B,SAAU,OAAO,KAC5C,MAAMuuB,EAAuB1kD,KAAKs4C,SAAS4B,GAAcjC,KAAK2C,GAC9D,OAAoB,GAAhB8J,EAA0B,KACvB1kD,KAAKs4C,SAAS4B,GAAclC,SAAS0M,EAAe,E,CAGxD,iBAAAkF,GACH,OAAO5pD,KAAKs5C,K,CAGT,oBAAOsC,CAAciO,GACxB,OAAO,GAAK1+C,KAAKkB,MAAMlB,KAAKgS,KAAK0sC,EAAW,GAAK,E,CAG9C,sBAAArH,GACHxiD,KAAK24C,iBAAmB,EACxB34C,KAAK44C,WAAa,EAClB54C,KAAKw4C,UAAY,IACjBx4C,KAAKu4C,WAAa,EAClBv4C,KAAK04C,eAAiB,EACtB14C,KAAKy4C,qBAAuB,EAC5Bz4C,KAAK64C,WAAa,C,EApuHEV,GAAOsP,GAAW,WAClBtP,GAAqBqG,GAAW,EAChCrG,GAAqBoG,GAAW,EAChCpG,GAAqBuG,GAAW,EAChCvG,GAAqBsG,GAAW,EAChCtG,GAAqByG,GAAW,EAChCzG,GAAqBwG,GAAW,EAChCxG,GAAsB0G,GAAW,EACjC1G,GAAsB6C,GAAW,EAGjC7C,GAAQ4C,GAAG,IA6tHvC,MAAM+O,GAqBF,WAAA/pD,GApBOC,KAAS+pD,UAAwB,KAWjC/pD,KAAQgqD,SAAW,EACnBhqD,KAAaiqD,cAAW,EACxBjqD,KAAOkqD,QAAW,EAClBlqD,KAAYmqD,aAAW,EACvBnqD,KAAOoqD,QAAW,EAClBpqD,KAAYqqD,aAAW,EACvBrqD,KAAOsqD,QAAW,EAClBtqD,KAAYuqD,aAAW,EAG1BvqD,KAAKmlC,O,CAGF,KAAAA,GACHnlC,KAAKwqD,YAAc,EACnBxqD,KAAKyqD,cAAgB,EACrBzqD,KAAK0qD,iBAAmB,EACxB1qD,KAAK2qD,YAAc,EACnB3qD,KAAK4qD,eAAiB,EACtB5qD,KAAK6qD,sBAAwB,EAC7B7qD,KAAK8qD,iBAAmB,EACxB9qD,KAAK+qD,iBAAmB,C,CAGrB,MAAAC,CAAOt2B,EAAcu2B,EAAkCC,EAAYC,EAAqBC,EAA+BC,EAA0BC,GACpJ,MAAMC,EAAwB,EAAMpgD,KAAK2C,GAAKxM,EAAOwZ,iCAAmC4Z,EAAM82B,iBACxFC,EAAuB,EAAMtgD,KAAK2C,GAAKxM,EAAO2Z,oBAAsByZ,EAAM82B,iBAC1EE,GAA2BvgD,KAAKiB,IAAI,IAAOi/C,GAAoB,GAAO,GACtEM,GAAyBxgD,KAAKiB,IAAI,IAAOk/C,GAAkB,GAAO,GAElER,EAA0B9qD,KAAK8qD,gBAE/Bc,EAA0BV,EAAKW,YAAYV,GAC3CW,EAA0BZ,EAAKa,iBAAiBZ,GAChDa,EAAwBJ,EAAkBzgD,KAAKiB,IAAI0/C,EAAiBV,GAEpEa,EAA0C,EAAV9gD,KAAK2C,GAAW89C,EAChDM,EAAwC,EAAV/gD,KAAK2C,GAAWk+C,EAE9CG,EAAsD,EAAxBF,EAC9BG,EAAkD,EAAtBF,EAE5BG,EAA8BlhD,KAAKoC,IAAIpC,KAAK2C,GAAIm+C,EAAwB3qD,EAAO0Z,+BAAiC7P,KAAKiB,IAAIm/C,EAAgBU,EAAuB3qD,EAAOyZ,kCACvKuxC,EAA4BnhD,KAAKoC,IAAIpC,KAAK2C,GAAIo+C,EAAsB5qD,EAAO0Z,+BAAiC7P,KAAKiB,IAAIm/C,EAAgBW,EAAqB5qD,EAAOyZ,kCAEjKwxC,EAAyBphD,KAAKiB,IAAI,GAAKs/C,EAAkBD,EAAeQ,GACxEO,EAAuBrhD,KAAKiB,IAAI,GAAKu/C,EAAgBF,EAAeS,GACpEO,EAAyBthD,KAAKiB,IAAImgD,EAAgBjrD,EAAO8Z,iBACzDsxC,EAAuBvhD,KAAKiB,IAAIogD,EAAclrD,EAAO8Z,iBACrDuxC,EAA+BxhD,KAAKiB,IAAImgD,EAAgB,MACxDK,EAA6BzhD,KAAKiB,IAAIogD,EAAc,MAE1D1kB,GAAM+kB,4BAA4B1vB,gCAAgCkvB,GAClE33B,EAAMo4B,sBAAsB3uB,QAAQ2J,GAAM+kB,4BAA6BV,GACvE,MAAMY,EAAwBjlB,GAAM+kB,4BAA4BvwB,EAAE,GAC5D0wB,GAAkCt4B,EAAMo4B,sBAAsB7tB,QAAUktB,EAE9ErkB,GAAMmlB,0BAA0B9vB,gCAAgCmvB,GAChE53B,EAAMo4B,sBAAsB3uB,QAAQ2J,GAAMmlB,0BAA2Bb,GACrE,MAAMc,EAAsBplB,GAAMmlB,0BAA0B3wB,EAAE,GACxD6wB,GAAgCz4B,EAAMo4B,sBAAsB7tB,QAAUmtB,EAE5EtkB,GAAM+kB,4BAA4B7vB,kBAAkByuB,EAAcgB,GAClE/3B,EAAMo4B,sBAAsB3uB,QAAQ2J,GAAM+kB,4BAA6BV,GACvE,MAAMiB,EAAuBtlB,GAAM+kB,4BAA4BxwB,EAAE,GAC3DgxB,EAAuBvlB,GAAM+kB,4BAA4BvwB,EAAE,GAAKqwB,EAChEW,EAAuBxlB,GAAM+kB,4BAA4BvwB,EAAE,GAAKqwB,EAChEY,GAAgC74B,EAAMo4B,sBAAsB7tB,QAAUktB,EAE5ErkB,GAAMmlB,0BAA0BjwB,kBAAkByuB,EAAciB,GAChEh4B,EAAMo4B,sBAAsB3uB,QAAQ2J,GAAMmlB,0BAA2Bb,GACrE,MAAMoB,EAAqB1lB,GAAMmlB,0BAA0B5wB,EAAE,GACvDoxB,EAAqB3lB,GAAMmlB,0BAA0B3wB,EAAE,GAAKswB,EAC5Dc,EAAqB5lB,GAAMmlB,0BAA0B3wB,EAAE,GAAKswB,EAC5De,GAA8Bj5B,EAAMo4B,sBAAsB7tB,QAAUmtB,EAEpEwB,EAA4B,EAAMhC,EAClCiC,EAA0B,EAAM7B,EAChC8B,EAA0B3iD,KAAKgS,KAAoD,EAA/ChS,KAAK2L,IAAI82C,EAAmBC,IAChEE,EAAsBH,EAAoBZ,EAAyBO,EACnES,EAAyBH,EAAkBV,EAAuBQ,EAExE3tD,KAAK8qD,gBAAkBiD,EACvB/tD,KAAKiuD,kBAAoBD,EAAiBD,GAAe3C,EACzDprD,KAAKgqD,SAAW+C,EAChB/sD,KAAKkqD,QAAUkD,EACfptD,KAAKoqD,QAAUiD,EACfrtD,KAAKsqD,QAAUgD,EACfttD,KAAKiqD,eAAiBiD,EAAcH,GAAiB3B,EACrDprD,KAAKmqD,cAAgBqD,EAAaJ,GAAgBhC,EAClDprD,KAAKqqD,cAAgBoD,EAAaJ,GAAgBjC,EAClDprD,KAAKuqD,cAAgBmD,EAAaJ,GAAgBlC,EAElD,MAAM8C,EAAwB/iD,KAAKC,IAAID,KAAKwC,KAAKogD,EAAcjD,IAAoB,IAE7EqD,GAAoD,GAApBnuD,KAAKwqD,YAAoB0D,EAC/D,GAAsB,MAAlBluD,KAAK+pD,WAAqB/pD,KAAK+pD,UAAUlnD,QAAUirD,EAAiB,CAGpE,MAAMM,EAA8BjjD,KAAKgS,KAAK,EAAIuX,EAAM82B,iBAAmB9d,GAAW0J,mBAAmB,KACnGiX,EAA6B,IAAIrjD,aAAa88B,GAAMC,kBAAkB58B,KAAK2L,IAAIs3C,EAAqBN,KAC1G,IAAKK,GAAyC,MAAlBnuD,KAAK+pD,UAAmB,CAGhD,MAAMuE,EAA8BtuD,KAAK+pD,UAAUlnD,OAAS,GAAM,EAC5D0rD,EAAgCvuD,KAAKwqD,WAAaxqD,KAAK+qD,iBAC7D/qD,KAAKwqD,WAAaxqD,KAAK+pD,UAAUlnD,OAAS7C,KAAK+qD,iBAC/C,IAAK,IAAIlgD,EAAY,EAAGA,EAAI7K,KAAK+pD,UAAUlnD,OAAQgI,IAC/CwjD,EAAaxjD,GAAK7K,KAAK+pD,UAAWwE,EAAwB1jD,EAAKyjD,EAEtE,CACDtuD,KAAK+pD,UAAYsE,CACpB,CACD,MAAMtE,EAA0B/pD,KAAK+pD,UAC/ByE,EAA2BzE,EAAUlnD,OAAS,GAAM,EAE1D,GAAIsrD,EAAqB,CAIrBnuD,KAAKwqD,WAAa,EAClBxqD,KAAKyqD,cAAgB,EACrBzqD,KAAK0qD,iBAAmB,EACxB1qD,KAAK2qD,YAAc,EACnB3qD,KAAK4qD,eAAiB,EACtB5qD,KAAK6qD,sBAAwB,EAG7B,MAAM4D,GAA4BV,EAC5BW,EAAyBvjD,KAAK0hB,MAAM4hC,EAAmBb,EAAoB,GAC3Ee,EAAsBxjD,KAAKgS,KAAKuxC,EAAqC,EAApBd,GACvD5tD,KAAK+qD,iBAAmB4D,EACxB,IAAK,IAAI9jD,EAAY6jD,EAAgB7jD,GAAK8jD,EAAa9jD,IACnDk/C,EAAUl/C,EAAI2jD,GAAmB,EAGrC,MAAMI,EAA4B3D,EAAgBtgD,KAC5CkkD,EAA4BD,EAAY/rD,OAAS,EACjDisD,EAA4BD,EAAoBjB,EAEhDmB,EAAuB5jD,KAAKoC,IAAwB,GAApBqgD,EAAkD,KAAzBl5B,EAAM82B,kBAC/DwD,EAAiC7jD,KAAKgS,KAAKsxC,GAC3CQ,EAAwBR,EAAmBb,EAAoBmB,EAC/DG,EAA8BD,EACpC,IAAIE,GAAwBH,EAAyBP,GAAoBK,EACrEM,EAA2B,EAC/B,IAAK,IAAIvkD,EAAYmkD,EAAwBnkD,GAAKqkD,EAAqBrkD,IAAK,CACxE,MAAMwkD,EAAyC,EAAfF,EAC1BrqD,EAAgBuqD,EAAkBR,EACxC,IAAIS,EAA2BV,EAAY9pD,GAC3C,MAAMyqD,EAAqBJ,EAAeE,EAC1CC,IAAqBV,EAAY9pD,EAAQ,GAAKwqD,GAAoBC,EAClE,MAAMC,GAAkBF,EAAmBF,GAAoBN,EAGzDW,EAFiBtkD,KAAKoC,IAAI,GAAM1C,EAAI4jD,GAAoBM,GACtC5jD,KAAKoC,IAAI,GAAM0hD,EAAgBpkD,GAAKkkD,GAEtDW,EAAqBD,EAAeA,GAAgB,EAAM,EAAMA,GACtE1F,EAAUl/C,EAAI2jD,IAAoBgB,EAASE,EAC3CN,EAAmBE,EACnBH,GAAgBL,CACnB,CACJ,C,EAIT,MAAMa,GA+BF,WAAA5vD,GA9BOC,KAAgB4vD,iBAAW,EAC3B5vD,KAAc6vD,eAAW,EACzB7vD,KAAc8vD,eAAW,EACzB9vD,KAAY+vD,aAAW,EACvB/vD,KAAAgwD,cAAwB1uD,EAAOwU,YAC/B9V,KAAAiwD,YAAsB3uD,EAAOwU,YAC7B9V,KAAAkwD,aAAuB5uD,EAAOwU,YAC9B9V,KAAAmwD,aAAuB7uD,EAAOwU,YAC7B9V,KAAAowD,GAAyB9uD,EAAOwU,YACjC9V,KAAoBqwD,qBAAW,EAC/BrwD,KAAkBswD,mBAAW,EAC7BtwD,KAAkBuwD,mBAAW,EAC7BvwD,KAAgBwwD,iBAAW,EAC1BxwD,KAAAywD,GAA6BnvD,EAAOwU,YAErC9V,KAAc0wD,gBAAY,EAC1B1wD,KAAY2wD,cAAY,EACxB3wD,KAAc4wD,gBAAY,EAC1B5wD,KAAY6wD,cAAY,EACxB7wD,KAAmB8wD,oBAAW,EAC9B9wD,KAAiB+wD,kBAAW,EAC5B/wD,KAAmBgxD,oBAAW,EAC9BhxD,KAAiBixD,kBAAW,EAEnBjxD,KAAckxD,eAAa,GAC3BlxD,KAAYmxD,aAAa,GACxBnxD,KAAwBoxD,GAAa,GAC9CpxD,KAAsBqxD,GAAW,EAClCrxD,KAAoCsxD,qCAAW,EAKlD,IAAK,IAAIzmD,EAAY,EAAGA,EADZ,GACwBA,IAChC7K,KAAKkxD,eAAermD,GAAK,EACzB7K,KAAKmxD,aAAatmD,GAAK,EAG3B7K,KAAKmlC,O,CAGF,KAAAA,GACHnlC,KAAK6vD,eAAiB,EACtB7vD,KAAK+vD,aAAe,EACpB/vD,KAAKowD,GAAiB9uD,EAAOwU,YAC7B9V,KAAKswD,mBAAqB,EAC1BtwD,KAAKwwD,iBAAmB,EACxBxwD,KAAKywD,GAAqBnvD,EAAOwU,YACjC9V,KAAKqxD,GAAyB,C,CAG3B,gBAAAE,CAAiB3yC,EAAwB4yC,EAAqBC,EAAuBC,EAAwBxG,GAChH,MAAM1rC,EAAyBZ,EAAWg5B,gBAC9B,MAARsT,IAAgBA,EAAKyG,aAAgBnyC,EAAW5K,WAAcs2C,EAAK0G,uBACnE5xD,KAAKswD,mBAAqBtwD,KAAK6vD,eAC/B7vD,KAAKwwD,iBAAmBxwD,KAAK+vD,aAC7B/vD,KAAKywD,GAAqBzwD,KAAKowD,GAC/BpwD,KAAK6vD,eAAiB,EACtB7vD,KAAK+vD,aAAe,GAEZ,MAAR7E,IACiB,MAAbA,EAAKhmB,KACLllC,KAAKowD,GAAiBlF,EAAKhmB,KAAKpB,KAAKonB,EAAKhmB,KAAKpB,KAAKjhC,OAAS,GAAGu4B,KAEhEp7B,KAAKowD,GAAiB9uD,EAAOwU,aAIrC,MAAM+7C,EAAsBJ,EAAgB,EACtC7B,EAA2B5vD,KAAK6vD,eAChCA,EAAyBD,EAAmB8B,EAC5C5B,EAAyB9vD,KAAK+vD,aAC9BA,EAAuBD,EAAiB,EACxCO,EAA+BrwD,KAAKswD,mBACpCA,EAA6BD,EAAuBqB,EACpDnB,EAA6BvwD,KAAKwwD,iBAClCA,EAA2BD,EAAqB,EAEhDuB,EAAuB,GAAOxwD,EAAOyQ,aAAezQ,EAAOwQ,cAC3DigD,EAAwBD,EAAeL,EACvCO,EAAsBF,EAAeD,EAE3C,IAAI7B,EAAwBhwD,KAAKowD,GAC7BH,EAAsBjwD,KAAKowD,GAC3BF,EAAuBlwD,KAAKywD,GAC5BN,EAAuB,EACvBO,GAA0B,EAC1BC,GAAwB,EACxBC,GAA0B,EAC1BC,GAAwB,EACxBC,EAA8B,EAC9BC,EAA4B,EAC5BC,EAA8B,EAC9BC,EAA4B,EAChC,GAAY,MAAR/F,GAA6B,MAAbA,EAAKhmB,OAAiBgmB,EAAK+G,gBAAiB,CAC5D,MAAMptB,EAAsBqmB,EAAKhmB,KAAKP,eAAe6sB,GAC/CU,EAAoBhH,EAAKhmB,KAAKpB,KAAKe,EAAc,GACjDstB,EAAkBjH,EAAKhmB,KAAKpB,KAAKe,GACjCutB,GAAwBlH,EAAKhmB,KAAKlF,MAAQkyB,EAASzuB,MAAQniC,EAAOyQ,aAClEsgD,GAAsBnH,EAAKhmB,KAAKlF,MAAQmyB,EAAO1uB,MAAQniC,EAAOyQ,aAC9DugD,GAAsBb,EAAgBW,IAAiBC,EAAaD,GACpEG,GAAoBV,EAAcO,IAAiBC,EAAaD,GAItE,GAHApC,EAAgBkC,EAAS92B,MAAQ+2B,EAAO/2B,KAAO82B,EAAS92B,MAAQk3B,EAChErC,EAAciC,EAAS92B,MAAQ+2B,EAAO/2B,KAAO82B,EAAS92B,MAAQm3B,EAE1D/yC,EAAW3K,OAAQ,CACnB,MAAM29C,EAAwBtH,EAAKuH,cAAgBnxD,EAAOyQ,aACpD2gD,EAAsBxH,EAAKyH,YAAcrxD,EAAOyQ,aAEhD6gD,EAA8C,IADpBF,EAAcF,GAExC19C,EAAqB3J,KAAKoC,IAAIqlD,EAAmBpzC,EAAW1K,YAC7C,MAAjBo2C,EAAK2H,UAAqB3H,EAAK0G,uBAC3BH,EAAgBe,EAAgB19C,IAChC47C,GAAiB,EACjBI,EAAsB,IAAO,GAAOW,EAAgBe,GAAiB19C,IAErE+8C,EAAcW,EAAgB19C,IAC9B67C,GAAe,EACfI,EAAoB,IAAO,GAAOc,EAAcW,GAAiB19C,KAGpD,MAAjBo2C,EAAK4H,UAAqB5H,EAAK6H,qBAC/B5C,EAAejF,EAAK4H,SAAShvB,KAAK,GAAG1I,KACjCs3B,EAAcjB,EAAgB38C,IAC9B87C,GAAiB,EACjBI,EAAsB,IAAO,GAAO0B,EAAcjB,GAAiB38C,IAEnE49C,EAAcb,EAAc/8C,IAC5B+7C,GAAe,EACfI,EAAoB,IAAO,GAAOyB,EAAcb,GAAe/8C,IAG1E,CACJ,CAED,IAAIw8C,EAA+C,EAC/C0B,GAAwB,EAC5B,IAAK,IAAIrb,EAAwB,EAAGA,GAAiB/4B,EAAWwvB,cAAeuJ,IAAiB,CAC5F,IAAIH,EACAyb,EACAxyC,EACJ,GAAIk3B,GAAiB/4B,EAAWwvB,cAAe,CAC3C,GAAI4kB,EAAoC,MAExCxb,EAAmBl2C,EAAOoa,4BAA4B1W,WAAuB,WAC7EiuD,EAAc,EACdxyC,EAAWnf,EAAO4W,UAAUlT,WAAW,YAC1C,KAAM,CACH,IAAIuyC,EAAqC34B,EAAW1G,UAAUy/B,GAC9DH,EAAmBl2C,EAAOoa,4BAA4B67B,EAAiB/2B,QACvEyyC,EAAc1b,EAAiBzyC,MAC/B2b,EAAWnf,EAAO4W,UAAUq/B,EAAiB92B,UACH,GAAtCA,EAASxL,OAA+B+9C,GAAe,EAC9D,CACD,GAAsF,MAAjCxb,EAAiB77B,aAAsB,CACxF,MAAMA,EAAuB67B,EAAiB77B,aAAes3C,EAC7D,IAAIC,EAAwBvD,GAAiBwD,gBAAgB1yC,EAAUmvC,EAAkBmC,EAAe/B,GACpGoD,EAAsBzD,GAAiBwD,gBAAgB1yC,EAAUovC,EAAgBmC,EAAa/B,GAElG,GAAIS,EAAgB,CAEhBwC,IADsBvD,GAAiBwD,gBAAgB1yC,EAAU4vC,EAAsB0B,EAAe7B,GAC5EgD,GAAiBpC,CAC9C,CACD,GAAIH,EAAc,CAEdyC,IADsBzD,GAAiBwD,gBAAgB1yC,EAAU6vC,EAAoB0B,EAAa9B,GAC1EkD,GAAerC,CAC1C,CACD,GAAIH,EAAgB,CAEhBsC,IADsBvD,GAAiBwD,gBAAgB1yC,EAAU,EAAKsxC,EAAe5B,GAC3D+C,GAAiBlC,CAC9C,CACD,GAAIH,EAAc,CAEduC,IADsBzD,GAAiBwD,gBAAgB1yC,EAAU,EAAKuxC,EAAa7B,GAC3DiD,GAAenC,CAC1C,CAMD,GAJAjxD,KAAKkxD,eAAev1C,IAAiBu3C,EACrClzD,KAAKmxD,aAAax1C,IAAiBy3C,EACnCpzD,KAAKoxD,GAAyBpxD,KAAKqxD,MAA4B11C,EAE3D67B,EAAiB17B,SAAU,CAC3B,MAAMu3C,EAAuF,MAAjCz0C,EAAW00C,mBAA8B10C,EAAW00C,mBAAqB10C,EAAWgC,WAC5IyyC,EAAeroB,kBAAoBioB,GAA6D,GAA9CI,EAAetoB,cAAckoB,GAAah+C,OAC5Fq8C,EAAuCnmD,KAAK2L,IAAIw6C,EAAsC3B,GAAiB4D,wCAAwC9yC,IAEtJ,CACJ,CACJ,CAEDzgB,KAAK4vD,iBAAmBA,EACxB5vD,KAAK6vD,eAAiBA,EACtB7vD,KAAK8vD,eAAiBA,EACtB9vD,KAAK+vD,aAAeA,EACpB/vD,KAAKqwD,qBAAuBA,EAC5BrwD,KAAKswD,mBAAqBA,EAC1BtwD,KAAKuwD,mBAAqBA,EAC1BvwD,KAAKwwD,iBAAmBA,EACxBxwD,KAAKkwD,aAAeA,EACpBlwD,KAAKmwD,aAAeA,EACpBnwD,KAAKgwD,cAAgBA,EACrBhwD,KAAKiwD,YAAcA,EACnBjwD,KAAK0wD,eAAiBA,EACtB1wD,KAAK2wD,aAAeA,EACpB3wD,KAAK4wD,eAAiBA,EACtB5wD,KAAK6wD,aAAeA,EACpB7wD,KAAK8wD,oBAAsBA,EAC3B9wD,KAAK+wD,kBAAoBA,EACzB/wD,KAAKgxD,oBAAsBA,EAC3BhxD,KAAKixD,kBAAoBA,EACzBjxD,KAAKsxD,qCAAuCA,C,CAGzC,cAAAkC,GACH,IAAK,IAAI7b,EAAwB,EAAGA,EAAgB33C,KAAKqxD,GAAwB1Z,IAAiB,CAC9F,MAAMh8B,EAAuB3b,KAAKoxD,GAAyBzZ,GAC3D33C,KAAKkxD,eAAev1C,GAAgB,EACpC3b,KAAKmxD,aAAax1C,GAAgB,CACrC,CACD3b,KAAKqxD,GAAyB,C,CAG3B,sBAAO8B,CAAgB1yC,EAAoBgjB,EAAcgwB,EAAeC,GAC3E,OAAQjzC,EAASxL,MACb,KAA0B,EAAE,OAAO6yB,GAAM6rB,qBAAqBD,GAC9D,OAAwB,OAAO,EAC/B,OAAyB,OAAO,GAAO,EAAMjwB,EAAOhjB,EAAStI,OAC7D,OAAyB,OAAO,EAAM,GAAO,EAAMsrB,EAAOhjB,EAAStI,OACnE,KAAyB,EAAE,MAAO,GAAyD,GAAnDhN,KAAK4C,IAAY,EAAR0lD,EAActoD,KAAK2C,GAAK2S,EAAStI,OAClF,KAA0B,EAAE,MAAO,IAA0D,IAAnDhN,KAAK4C,IAAY,EAAR0lD,EAActoD,KAAK2C,GAAK2S,EAAStI,OACpF,OAAyB,OAAOhN,KAAK2L,IAAI,EAAK,EAAa,GAAP2sB,GACpD,OAAyB,MAAMmwB,EAAiB,IAAOzoD,KAAKc,KAAKwU,EAAStI,OAAQ,OAAOsrB,EAAOmwB,EAASnwB,EAAOmwB,EAAS,GAAO,GAAOnwB,EAAOmwB,GAAUnzC,EAAStI,OACjK,OAAyB,OAAOhN,KAAKiB,IAAI,GAAIqU,EAAStI,MAAQsrB,GAC9D,OACI,IAAIvJ,EAAO,GAAyC,GAAnC/uB,KAAK4C,IAAI0lD,EAAQhzC,EAAStI,OAG3C,OAFA+hB,EAAO,GAAO,EAAMuJ,GAAQhjB,EAAStI,MAAS+hB,GAAQ,IAAMzZ,EAAStI,SACrE+hB,EAAOA,EAAO,EAAMA,EAAO,EACpBA,EACX,QAA0B,CACtB,IAAI25B,EAAO,EAAOpwB,GAAQ,GAAKhjB,EAAStI,OAExC,OADA07C,EAAMA,EAAM,EAAMA,EAAM,EACjBA,CACV,CACD,QAAwB,CACpB,IAAIA,EAAOpwB,GAAQ,GAAKhjB,EAAStI,OAEjC,OADA07C,EAAMA,EAAM,EAAMA,EAAM,EACjBA,CACV,CACD,QAAS,MAAM,IAAI1xD,MAAM,wC,CAK1B,8CAAOoxD,CAAwC9yC,GAKlD,OAAuC,GAAnCA,EAASxL,KAAmC,KAAO,KAAQwL,EAAStI,MACjC,GAAnCsI,EAASxL,KAAmC,EAAM,IAAOwL,EAAStI,MAC/D,C,EAIf,MAAM27C,GAuEF,WAAA/zD,GArEgBC,KAAA6jC,QAAoBrhC,MAAMlB,EAAO8V,aAAa,GAAG+b,KAAK,GAC/DnzB,KAAUwO,WAAW,EACrBxO,KAAS+zD,UAAW,EACpB/zD,KAAYg0D,aAAkB,KAC9Bh0D,KAAIklC,KAAgB,KACpBllC,KAAQ6yD,SAAgB,KACxB7yD,KAAQ8yD,SAAgB,KACxB9yD,KAAkBi0D,mBAAW,EAC7Bj0D,KAAkBk0D,mBAAW,EAC7Bl0D,KAAgBm0D,kBAAY,EAC5Bn0D,KAAW2xD,aAAY,EACvB3xD,KAAYo0D,cAAY,EACxBp0D,KAAeiyD,iBAAY,EAC3BjyD,KAAoB4xD,sBAAY,EAChC5xD,KAAkB+yD,oBAAY,EAC9B/yD,KAAayyD,cAAW,EACxBzyD,KAAW2yD,YAAW,EACtB3yD,KAAkBq0D,mBAAW,EAC7Br0D,KAAoBs0D,qBAAW,EAC/Bt0D,KAAYu0D,aAAW,EACvBv0D,KAAWw0D,YAAW,EACtBx0D,KAAkBy0D,mBAAW,EAC7Bz0D,KAAgB00D,iBAAW,EAClB10D,KAAM20D,OAAa,GACnB30D,KAAakc,cAAmB,GAChClc,KAAW6rD,YAAa,GAE7B7rD,KAAU40D,WAAa,GACvB50D,KAAmB60D,oBAAa,GAChC70D,KAAiB80D,kBAAa,GAC9B90D,KAA2B+0D,4BAAa,GAEnC/0D,KAAgB+rD,iBAAa,GACtC/rD,KAAUyE,WAAW,EACrBzE,KAAeg1D,gBAAW,EACjBh1D,KAAmBi1D,oBAAa,GAChCj1D,KAAwBk1D,yBAAa,GACrCl1D,KAAAm1D,qBAA6C3yD,MAAMlB,EAAOgW,yBAAyB6b,KAAK,MACjGnzB,KAAWo1D,YAAkB,KAC7Bp1D,KAAeq1D,gBAAkB,KACjCr1D,KAAUqhB,WAAW,EACrBrhB,KAAes1D,gBAAW,EAC1Bt1D,KAAa6uC,cAAW,EACf7uC,KAAau1D,cAAmB,GAEhCv1D,KAAWw1D,YAA0B,GAC9Cx1D,KAAey1D,gBAAW,EAC1Bz1D,KAAuB01D,wBAAW,EAClC11D,KAAuB21D,wBAAW,EAElC31D,KAA6B41D,8BAAW,EAC/B51D,KAAe61D,gBAAa,GACrC71D,KAAY81D,aAAW,EACvB91D,KAAa+1D,cAAW,EACxB/1D,KAAkBg2D,mBAAW,EAC7Bh2D,KAAkBi2D,mBAAW,EAC7Bj2D,KAAkBk2D,mBAAW,EAC7Bl2D,KAAkBm2D,mBAAW,EAC7Bn2D,KAAgBo2D,iBAAW,EAC3Bp2D,KAAcq2D,eAAW,EACzBr2D,KAAgBs2D,iBAAW,EAC3Bt2D,KAAiBu2D,kBAAW,EAC5Bv2D,KAAew2D,gBAAW,EAC1Bx2D,KAAoBy2D,qBAAW,EAC/Bz2D,KAAoB02D,qBAAW,EAC/B12D,KAAY22D,cAAY,EAEf32D,KAAA42D,iBAAqC,IAAIjH,GAGrD3vD,KAAKmlC,O,CAGF,KAAAA,GACHnlC,KAAKw0D,YAAc,EACnB,IAAK,IAAI3pD,EAAY,EAAGA,EAAIvJ,EAAOgW,wBAAyBzM,IACxD7K,KAAK20D,OAAO9pD,GAAK,EAEb7K,KAAK40D,WAAW/pD,GAAK,EACrB7K,KAAK60D,oBAAoBhqD,GAAK,EAC9B7K,KAAK80D,kBAAkBjqD,GAAK,EAC5B7K,KAAK+0D,4BAA4BlqD,GAAK,EAE1C7K,KAAKkc,cAAcrR,GAAKvJ,EAAO4a,cAAc,GAC7Clc,KAAK61D,gBAAgBhrD,GAAK,EAC1B7K,KAAKm1D,qBAAqBtqD,GAAK,KAEnC,IAAK,IAAIA,EAAY,EAAGA,EAAI7K,KAAKy1D,gBAAiB5qD,IAC9C7K,KAAKw1D,YAAY3qD,GAAGi1B,cAExB9/B,KAAKy1D,gBAAkB,EACvBz1D,KAAK01D,wBAA0B,EAC/B11D,KAAK21D,wBAA0B,EAC/B31D,KAAKs0D,qBAAuB,EAC5B,IAAK,MAAMuC,KAAgB72D,KAAKu1D,cAC5BsB,EAAa1xB,QAEjBnlC,KAAK42D,iBAAiBzxB,QACtBnlC,KAAKo1D,YAAc,KACnBp1D,KAAKq1D,gBAAkB,KACvBr1D,KAAKg0D,aAAe,I,EAI5B,MAAM8C,GAqIF,WAAA/2D,GAlIOC,KAAK+2D,OAAY,EACjB/2D,KAAQg3D,UAAY,EACpBh3D,KAAoBi3D,sBAAY,EAChCj3D,KAAkBk3D,oBAAY,EAC9Bl3D,KAAuBm3D,yBAAY,EACnCn3D,KAAoBo3D,qBAAW,EAC/Bp3D,KAAcq3D,eAAW,EAChBr3D,KAAAs3D,YAA2B,IAAIl9B,GAC/Bp6B,KAAAu3D,eAA8B,IAAIn9B,GAClCp6B,KAAAw3D,cAA6B,IAAIp9B,GACjCp6B,KAAAy3D,eAA8B,IAAIr9B,GAE3Cp6B,KAAAiV,KAA2C,EAC3CjV,KAAW03D,YAAoB,KAC/B13D,KAAI2K,KAAwB,KAEpB3K,KAA2BqjB,6BAAG,EAC9BrjB,KAAiBsjB,kBAAG,EACpBtjB,KAAeujB,gBAAG,EAClBvjB,KAAgBwjB,iBAAG,EACnBxjB,KAAqByjB,uBAAG,EACxBzjB,KAAmB0jB,oBAAG,EAE9B1jB,KAAoB23D,qBAAW,EAC/B33D,KAAM2f,OAAkB,KACxB3f,KAAYuuC,aAAW,EACvBvuC,KAAYwuC,aAAW,EACvBxuC,KAAYyuC,aAAW,EACvBzuC,KAAgB0uC,iBAAW,IAC3B1uC,KAAU2uC,WAAW,EACrB3uC,KAAK0f,MAAiB,KACtB1f,KAAOiP,QAAW,EAElBjP,KAAW43D,YAAW,EACtB53D,KAAOojB,SAAY,EAEnBpjB,KAAc63D,eAAW,EACzB73D,KAAmB83D,oBAAW,EAC9B93D,KAAS+3D,UAAW,EACpB/3D,KAAcg4D,eAAW,EACzBh4D,KAAci4D,eAAW,EACzBj4D,KAAmBk4D,oBAAW,EAE9Bl4D,KAAUohB,WAAW,EACrBphB,KAAem4D,gBAAW,EAC1Bn4D,KAAeo4D,gBAAW,EAC1Bp4D,KAAoBq4D,qBAAW,EAC/Br4D,KAA0Bs4D,2BAAW,EACrCt4D,KAA0Bu4D,2BAAW,EACrCv4D,KAA0Bw4D,2BAAW,EACrCx4D,KAAmBy4D,oBAAW,EAC9Bz4D,KAAoB04D,qBAAW,EAE/B14D,KAAmB24D,oBAAW,EAC9B34D,KAAuB44D,wBAAW,EAClC54D,KAAe64D,gBAAW,EAC1B74D,KAAoB84D,qBAAW,EAC/B94D,KAAyB+4D,0BAAW,EACpC/4D,KAAeg5D,gBAAW,EAC1Bh5D,KAAoBi5D,qBAAW,EAC/Bj5D,KAAmBk5D,oBAAW,EAC9Bl5D,KAAwBm5D,yBAAW,EAE1Bn5D,KAASo5D,UAA0B,GAC5Cp5D,KAAaq5D,cAAW,EACxBr5D,KAAqBs5D,sBAAW,EAChCt5D,KAAqBu5D,sBAAW,EAEhCv5D,KAAgBw5D,iBAAwB,KACxCx5D,KAAey5D,gBAAW,EAC1Bz5D,KAAc05D,eAAW,EACzB15D,KAAc25D,eAAW,EACzB35D,KAAmB45D,oBAAW,EAC9B55D,KAAmB65D,oBAAW,EAC9B75D,KAAc85D,eAAW,EACzB95D,KAAc+5D,eAAW,EACzB/5D,KAAmBg6D,oBAAW,EAC9Bh6D,KAAmBi6D,oBAAW,EAE9Bj6D,KAAgBk6D,iBAAwB,KACxCl6D,KAAgBm6D,iBAAwB,KACxCn6D,KAAoBo6D,sBAAY,EAChCp6D,KAAcq6D,eAAW,EACzBr6D,KAAWs6D,YAAW,EACtBt6D,KAAeu6D,gBAAW,EAC1Bv6D,KAAoBw6D,qBAAW,EAC/Bx6D,KAAkBy6D,mBAAW,EAC7Bz6D,KAAuB06D,wBAAW,EAElC16D,KAAc26D,eAAwB,KACtC36D,KAAc46D,eAAwB,KACtC56D,KAAkB66D,oBAAY,EAC9B76D,KAAY86D,aAAW,EACvB96D,KAAoB+6D,qBAAW,EAC/B/6D,KAAkBg7D,mBAAkB,KACpCh7D,KAAoBi7D,qBAAW,EAC/Bj7D,KAAyBk7D,0BAAW,EACpCl7D,KAAQm7D,SAAW,EACnBn7D,KAAao7D,cAAW,EACxBp7D,KAAWq7D,YAAW,EACtBr7D,KAAWs7D,YAAW,EACtBt7D,KAAWu7D,YAAW,EACtBv7D,KAAgBw7D,iBAAW,EAC3Bx7D,KAAgBy7D,iBAAW,EAC3Bz7D,KAAmB07D,oBAAW,EAC9B17D,KAAmB27D,oBAAW,EAE9B37D,KAAe47D,gBAAwB,KACvC57D,KAAoB67D,sBAAY,EAChC77D,KAAc87D,eAAW,EACzB97D,KAAU+7D,WAAW,EACrB/7D,KAAeg8D,gBAAW,EAC1Bh8D,KAAai8D,cAAW,EACxBj8D,KAAak8D,cAAW,EACxBl8D,KAAam8D,cAAW,EACxBn8D,KAAkBo8D,mBAAW,EAC7Bp8D,KAAkBq8D,mBAAW,EAC7Br8D,KAAkBs8D,mBAAW,EAC7Bt8D,KAAkBu8D,mBAAW,EAC7Bv8D,KAAqBw8D,sBAAW,EAChCx8D,KAAqBy8D,sBAAW,EAChCz8D,KAAqB08D,sBAAW,EAChC18D,KAAqB28D,sBAAW,EAIvB38D,KAAA4vC,aAAkC,IAAI3H,GACtCjoC,KAAAuvC,cAAoC,IAAI3G,GACxC5oC,KAAoByvC,qBAAwB,GAGxD,IAAK,IAAI5kC,EAAY,EAAGA,EAAIvJ,EAAOuY,UAAWhP,IAC1C7K,KAAKyvC,qBAAqB5kC,GAAK,IAAIo9B,E,CAKpC,wBAAA20B,CAAyBloC,EAAc9V,EAAwBi+C,GAclE,GAbIptD,EAAsBmP,EAAW3P,WACJ,MAAzBjP,KAAKw5D,kBAA4Bx5D,KAAKw5D,iBAAiB32D,OAAS6xB,EAAMooC,0BACtE98D,KAAKw5D,iBAAmB,IAAIxuD,aAAa0pB,EAAMooC,yBAGnDptD,EAAqBkP,EAAW3P,YACH,MAAzBjP,KAAKk6D,kBAA4Bl6D,KAAKk6D,iBAAiBr3D,OAAS6xB,EAAMqoC,yBACtE/8D,KAAKk6D,iBAAmB,IAAIlvD,aAAa0pB,EAAMqoC,yBAEtB,MAAzB/8D,KAAKm6D,kBAA4Bn6D,KAAKm6D,iBAAiBt3D,OAAS6xB,EAAMqoC,yBACtE/8D,KAAKm6D,iBAAmB,IAAInvD,aAAa0pB,EAAMqoC,yBAGnDptD,EAAmBiP,EAAW3P,SAAU,CAExC,MAAM+tD,EAA6B7xD,KAAK2L,IAAIxV,EAAOuP,gBAAkB,EAAI+N,EAAWmwB,UAAY,GAE1FkuB,EAA4D,EAD1Bn1B,GAAMC,kBAAkBi1B,EAAqB17D,EAAOwP,mBAAqB+rD,GAGjH,GAA2B,MAAvB78D,KAAK26D,gBAAiD,MAAvB36D,KAAK46D,eACpC56D,KAAK26D,eAAiB,IAAI3vD,aAAaiyD,GACvCj9D,KAAK46D,eAAiB,IAAI5vD,aAAaiyD,QACpC,GAAIj9D,KAAK26D,eAAe93D,OAASo6D,GAA2Bj9D,KAAK46D,eAAe/3D,OAASo6D,EAAyB,CAIrH,MAAMC,EAA8B,IAAIlyD,aAAaiyD,GAC/CE,EAA8B,IAAInyD,aAAaiyD,GAC/CG,EAAkBp9D,KAAK26D,eAAe93D,OAAS,EAErD,IAAK,IAAIgI,EAAI,EAAGA,EAAI7K,KAAK26D,eAAe93D,OAAQgI,IAC5CqyD,EAAcryD,GAAK7K,KAAK26D,eAAgB36D,KAAK86D,aAAejwD,EAAKuyD,GACjED,EAActyD,GAAK7K,KAAK26D,eAAgB36D,KAAK86D,aAAejwD,EAAKuyD,GAGrEp9D,KAAK86D,aAAe96D,KAAK26D,eAAe93D,OACxC7C,KAAK26D,eAAiBuC,EACtBl9D,KAAK46D,eAAiBuC,CACzB,CACJ,CACGvtD,EAAqBgP,EAAW3P,UAEJ,MAAxBjP,KAAK47D,kBACL57D,KAAK47D,gBAAkB,IAAI5wD,aAAa1J,EAAO+P,uB,CAKpD,UAAAgsD,GACHr9D,KAAK24D,oBAAsB,EAC3B34D,KAAK44D,wBAA0B,EAC/B54D,KAAK64D,gBAAkB,EACvB,IAAK,IAAIhuD,EAAY,EAAGA,EAAI7K,KAAKq5D,cAAexuD,IAC5C7K,KAAKo5D,UAAUvuD,GAAGi1B,cAWtB,GATA9/B,KAAKq5D,cAAgB,EACrBr5D,KAAKs5D,sBAAwB,EAC7Bt5D,KAAKu5D,sBAAwB,EAC7Bv5D,KAAKs4D,2BAA6B,EAClCt4D,KAAKu4D,2BAA6B,EAClCv4D,KAAKw4D,2BAA6B,EAClCx4D,KAAKy4D,oBAAsB,EAC3Bz4D,KAAK04D,qBAAuB,EAC5B14D,KAAKy5D,gBAAkB,EACM,MAAzBz5D,KAAKw5D,iBAA0B,IAAK,IAAI3uD,EAAY,EAAGA,EAAI7K,KAAKw5D,iBAAiB32D,OAAQgI,IAAK7K,KAAKw5D,iBAAiB3uD,GAAK,EAC7H7K,KAAKg7D,mBAAqB,KAC1Bh7D,KAAKw7D,iBAAmB,EACxBx7D,KAAKy7D,iBAAmB,EACxBz7D,KAAK07D,oBAAsB,EAC3B17D,KAAK27D,oBAAsB,EAC3B37D,KAAKo8D,mBAAqB,EAC1Bp8D,KAAKq8D,mBAAqB,EAC1Br8D,KAAKs8D,mBAAqB,EAC1Bt8D,KAAKu8D,mBAAqB,EAC1Bv8D,KAAKw8D,sBAAwB,EAC7Bx8D,KAAKy8D,sBAAwB,EAC7Bz8D,KAAK08D,sBAAwB,EAC7B18D,KAAK28D,sBAAwB,EAE7B38D,KAAK43D,YAAc,EACnB53D,KAAKojB,SAAU,EAEfpjB,KAAK+2D,OAAQ,EACb/2D,KAAKk3D,oBAAqB,EAC1Bl3D,KAAKm3D,yBAA0B,EAC/Bn3D,KAAKo3D,qBAAuB,EAC5Bp3D,KAAKq3D,eAAiB,C,CAGnB,eAAAiG,GAGH,GAFAt9D,KAAKq9D,aAEDr9D,KAAKo6D,qBAAsB,CAC3B,IAAK,IAAIvvD,EAAY,EAAGA,EAAI7K,KAAKk6D,iBAAkBr3D,OAAQgI,IAAK7K,KAAKk6D,iBAAkBrvD,GAAK,EAC5F,IAAK,IAAIA,EAAY,EAAGA,EAAI7K,KAAKm6D,iBAAkBt3D,OAAQgI,IAAK7K,KAAKm6D,iBAAkBtvD,GAAK,CAC/F,CACD,GAAI7K,KAAK66D,mBAAoB,CACzB,IAAK,IAAIhwD,EAAY,EAAGA,EAAI7K,KAAK26D,eAAgB93D,OAAQgI,IAAK7K,KAAK26D,eAAgB9vD,GAAK,EACxF,IAAK,IAAIA,EAAY,EAAGA,EAAI7K,KAAK46D,eAAgB/3D,OAAQgI,IAAK7K,KAAK46D,eAAgB/vD,GAAK,CAC3F,CACD,GAAI7K,KAAK67D,qBACL,IAAK,IAAIhxD,EAAY,EAAGA,EAAI7K,KAAK47D,gBAAiB/4D,OAAQgI,IAAK7K,KAAK47D,gBAAiB/wD,GAAK,EAG9F7K,KAAKs6D,YAAc,C,CAGhB,OAAAiD,CAAQ7oC,EAAc9V,EAAwBi+C,EAAwBzR,EAA+BF,EAAmBhR,EAAsB+B,GACjJj8C,KAAKg3D,UAAW,EAEhBh3D,KAAKiV,KAAO2J,EAAW3J,KACvBjV,KAAK03D,YAAc5vB,GAAM01B,2BAA2B5+C,GACpD5e,KAAK2f,OAASre,EAAOiU,QAAQqJ,EAAWe,QACxC3f,KAAK0f,MAAQd,EAAWgyB,WACxB5wC,KAAK23D,qBAAuBr2D,EAAOqK,WAAWiT,EAAW+uB,WAAWr6B,gBACpEtT,KAAKiP,QAAU2P,EAAW3P,QAE1BjP,KAAKojB,QAAUxE,EAAWwE,QAC1BpjB,KAAK43D,YAAc,EAEnB53D,KAAK48D,yBAAyBloC,EAAO9V,EAAYi+C,GAEjD,MAAMrR,EAA2B92B,EAAM82B,iBACvCxrD,KAAKy9D,YAAY7+C,EAAY4sC,GAW7B,MAAMkS,EAA0BnuD,EAAyBvP,KAAKiP,SACxD0uD,EAA0BnuD,EAAyBxP,KAAKiP,SACxD2uD,EAAuBnuD,EAAsBzP,KAAKiP,SAClD4uD,EAAsBnuD,EAAqB1P,KAAKiP,SAChD6uD,EAAoBnuD,EAAmB3P,KAAKiP,SAC5C8uD,EAAsBnuD,EAAqB5P,KAAKiP,SAEtD,GAAIyuD,EAAgB,CAChB,IAAIM,EAA6Bp/C,EAAWwC,WACxC68C,EAA2Br/C,EAAWwC,WAGtCsT,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAuB,WAAEF,MAAOo1C,EAAc+B,KAClF+hB,EAAqBtpC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAuB,WAAEF,MAAOo1C,EAAc+B,GAAiB,GACxHgiB,EAAmBvpC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAuB,WAAEF,MAAOo1C,EAAc+B,GAAiB,IAG1H,MAAMmiB,EAAwBjzD,KAAKoC,IAAI,EAAgEywD,GAAsB18D,EAAO4Z,gBAAkB,IAChJmjD,EAAsBlzD,KAAKoC,IAAI,EAAgE0wD,GAAoB38D,EAAO4Z,gBAAkB,IAC5IojD,EAA0BnzD,KAAKiB,IAAI,EAAM,MAASjB,KAAKiB,IAAI,GAAMgyD,GAAyB,GAAO,GAAM,GACvGG,EAAwBpzD,KAAKiB,IAAI,EAAM,MAASjB,KAAKiB,IAAI,GAAMiyD,GAAuB,GAAO,GAAM,GACnGG,GAAgC,EAAM,EAAMJ,GAAyB98D,EAAOwR,qBAC5E2rD,GAA8B,EAAM,EAAMJ,GAAuB/8D,EAAOwR,qBAC9E9S,KAAKohB,WAAak9C,EAClBt+D,KAAKm4D,iBAAmBoG,EAAgBD,GAAmBlT,EAC3DprD,KAAKo4D,gBAAkBoG,EACvBx+D,KAAKq4D,sBAAwBoG,EAAqBD,GAAwBpT,CAC7E,CAED,GAAIuS,EAAgB,CAChB,IAAIe,EAA2B9/C,EAAWkwB,eACtC6vB,EAAyB//C,EAAWkwB,eAGpCpa,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,KAClFyiB,EAAmBhqC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,GAAiB,GACtH0iB,EAAiBjqC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,GAAiB,IAGxH,IAAI2iB,EAAmChgD,EAAWuC,uBAC9C09C,EAAiCjgD,EAAWuC,uBAG5CuT,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,aAAaF,MAAOo1C,EAAc+B,KACjF2iB,EAA2BlqC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,aAAaF,MAAOo1C,EAAc+B,GAAiB,GAC7H4iB,EAAyBnqC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,aAAaF,MAAOo1C,EAAc+B,GAAiB,IAG/H,MAAM1rC,EAAoBjP,EAAO+O,KAAKqkB,EAAM3H,KAAM3pB,KAAKmN,UAAajP,EAAOsY,iBAAmB8a,EAAM3H,KAAMiV,OACpG88B,EAAoBpxB,GAAW0J,mBAAmB7mC,EAAY,IAAMpF,KAAKiB,IAAI,GAAM9K,EAAO+Z,oBAAsB,EAAIqjD,GAAoBp9D,EAAOga,sBAC/IyjD,EAAkBrxB,GAAW0J,mBAAmB7mC,EAAY,IAAMpF,KAAKiB,IAAI,GAAM9K,EAAO+Z,oBAAsB,EAAIsjD,GAAkBr9D,EAAOga,sBAC3IswC,EAA0BzgD,KAAKoC,IAAI,EAAKuxD,EAAYtT,GACpDQ,EAAwB7gD,KAAKoC,IAAI,EAAKwxD,EAAUvT,GACtDxrD,KAAK84D,qBAAuBlN,EAC5B5rD,KAAK+4D,0BAA4B5tD,KAAKiB,IAAI4/C,EAAgBJ,EAAiB,EAAMR,GAEjF,MAAM4T,EAAqB,EAAM19D,EAAOyR,qBAAuB5H,KAAKiB,IAAI,EAAK,EAAMjB,KAAKiB,IAAI,EAA2E,IAArE9K,EAAOia,4BAA8B,EAAIqjD,KACrIK,EAAmB,EAAM39D,EAAOyR,qBAAuB5H,KAAKiB,IAAI,EAAK,EAAMjB,KAAKiB,IAAI,EAAyE,IAAnE9K,EAAOia,4BAA8B,EAAIsjD,KACzI7+D,KAAKg5D,gBAAkBgG,EACvBh/D,KAAKi5D,qBAAuB9tD,KAAKiB,IAAI6yD,EAAWD,EAAY,EAAM5T,GAElE,MAAM8T,EAAyB,EAAM59D,EAAOyR,qBAAuB5H,KAAKiB,IAAI,IAAK9K,EAAOia,4BAA8B,EAAIqjD,GACpHO,EAAuB,EAAM79D,EAAOyR,qBAAuB5H,KAAKiB,IAAI,IAAK9K,EAAOia,4BAA8B,EAAIsjD,GACxH7+D,KAAKk5D,oBAAsBgG,EAC3Bl/D,KAAKm5D,yBAA2BhuD,KAAKiB,IAAI+yD,EAAeD,EAAgB,EAAM9T,EACjF,CAED,IAAIyM,EAAyB,EAC7B,GAAIj5C,EAAWgD,aAAc,CAEzB,MAAMw9C,EAAwCxgD,EAAWW,SACvB,MAA9BX,EAAWovB,aAAa,KACxBpvB,EAAWovB,aAAa,GAAK,IAAIlD,IACrC,MAAMu0B,EAAsCzgD,EAAWovB,aAAa,GAGpE,IAkBIsxB,EAlBAC,EAA0B3gD,EAAWgvB,kBACrC4xB,EAA0B5gD,EAAWivB,mBACrC4xB,EAAwB7gD,EAAWgvB,kBACnC8xB,EAAwB9gD,EAAWivB,mBAEnC8xB,GAAyB,EAe7B,GAbIjrC,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAc+B,KACnFsjB,EAAkB7qC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAc+B,GAAiB,GACtHwjB,EAAgB/qC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAc+B,GAAiB,GACpH0jB,GAAgB,GAEhBjrC,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,gBAAgBF,MAAOo1C,EAAc+B,KACpFujB,EAAkB9qC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,gBAAgBF,MAAOo1C,EAAc+B,GAAiB,GACvHyjB,EAAgBhrC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,gBAAgBF,MAAOo1C,EAAc+B,GAAiB,GACrH0jB,GAAgB,GAKhBA,EAAe,CACfP,EAAsB9xB,8BAA8BiyB,EAAiBC,GACrEH,EAAoB/xB,8BAA8BmyB,EAAeC,GAEjEJ,EAAaF,EAAsBr0B,cAAc,GACjD,IAAI60B,EAA+BP,EAAoBt0B,cAAc,GAErEu0B,EAAWj1B,eAAevC,GAAM+kB,4BAA6BrB,EAAkB,EAAK,GACpFoU,EAASv1B,eAAevC,GAAMmlB,0BAA2BzB,EAAkB,EAAK,GAE5ExrD,KAAKo5D,UAAUv2D,OAAS,IAAG7C,KAAKo5D,UAAU,GAAK,IAAIj6B,IACvDn/B,KAAKo5D,UAAU,GAAGr5B,6BAA6B+H,GAAM+kB,4BAA6B/kB,GAAMmlB,0BAA2B,EAAM7B,EAA4D,GAArCkU,EAAWrqD,KAE9J,MACGmqD,EAAsB9xB,8BAA8BiyB,EAAiBC,GAAiB,GAEtFF,EAAaF,EAAsBr0B,cAAc,GAEjDu0B,EAAWj1B,eAAevC,GAAM+kB,4BAA6BrB,EAAkB,EAAK,GAEhFxrD,KAAKo5D,UAAUv2D,OAAS,IAAG7C,KAAKo5D,UAAU,GAAK,IAAIj6B,IACvDn/B,KAAKo5D,UAAU,GAAGr5B,6BAA6B+H,GAAM+kB,4BAA6B/kB,GAAM+kB,4BAA6B,EAAMzB,EAA4D,GAArCkU,EAAWrqD,MAIjK4iD,GAAkByH,EAAW/0B,4BAE7BvqC,KAAKq5D,cAAgB,EACrBxB,EAAiB1sD,KAAKoC,IAAI,EAAKsqD,EAClC,KACI,CACD,MAAMgI,EAAmE,MAA/BjhD,EAAWkhD,iBAA4BlhD,EAAWkhD,iBAAmBlhD,EAAWW,SAG1H,IAAK,IAAI1U,EAAY,EAAGA,EAAIg1D,EAAiB70B,kBAAmBngC,IAAK,CAKjE,IAAIy0D,EAAiCO,EAAiB90B,cAAclgC,GAChE+0D,EAA6D,MAA7BhhD,EAAWmhD,gBAAwE,MAA9CnhD,EAAWmhD,eAAeh1B,cAAclgC,GAAc+T,EAAWmhD,eAAeh1B,cAAclgC,GAAKg1D,EAAiB90B,cAAclgC,GAGvMy0D,EAAWrqD,MAAQ2qD,EAAS3qD,OAC5BqqD,EAAaM,GAGjBN,EAAWj1B,eAAevC,GAAM+kB,4BAA6BrB,EAAoE,EAA6B,GAC9JoU,EAASv1B,eAAevC,GAAMmlB,0BAA2BzB,EAAoE,EAA6B,GACtJxrD,KAAKo5D,UAAUv2D,QAAUgI,IAAG7K,KAAKo5D,UAAUvuD,GAAK,IAAIs0B,IACxDn/B,KAAKo5D,UAAUvuD,GAAGk1B,6BAA6B+H,GAAM+kB,4BAA6B/kB,GAAMmlB,0BAA2B,EAAM7B,EAA4D,GAArCkU,EAAWrqD,MAC3J4iD,GAAkByH,EAAW/0B,2BAEhC,CACDvqC,KAAKq5D,cAAgBwG,EAAiB70B,kBACtC6sB,EAAiB1sD,KAAKoC,IAAI,EAAKsqD,EAClC,CAED,MAAMmI,EAA+Bl4B,GAAMm4B,6BAA6BrhD,EAAW+C,QACnF3hB,KAAK+3D,UAAYiI,EACjB,IAAIE,EAAuBF,EAG3B,GAAItrC,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,GAAkB,CAEpG,MAAMkkB,EAAmBzrC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,GAAiB,GACtHmkB,EAAiB1rC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,GAAiB,GAC1Hj8C,KAAK+3D,WAAeoI,GAAY,GAAOA,EAAW7+D,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM+xB,GAAMm4B,6BAA6BE,GAC3ID,GAAkBE,GAAU,GAAOA,EAAS9+D,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM+xB,GAAMm4B,6BAA6BG,EACxI,CAGG1rC,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,SAC9D9E,KAAK+3D,WAAcrjC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,WAAO0oB,OAAWA,GAAW,GAAU,IACxH0yC,GAAiBxrC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,WAAO0oB,OAAWA,GAAW,GAAS,KAGzHxtB,KAAKg4D,gBAAkBkI,EAAelgE,KAAK+3D,WAAa3M,EAExD,IAAIiV,EAA8BxI,EAC9ByI,EAA4BzI,EAC5B0I,EAA8B,EAC9BC,EAA4B,EAEhC,GAAI5C,EAAa,CAIb,IAAI6C,EAAsB7hD,EAAW4D,IACjCk+C,EAAoB9hD,EAAW4D,IAE/BkS,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAgB,IAAEF,MAAOo1C,EAAc+B,KAC3EwkB,EAAc/rC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAgB,IAAEF,MAAOo1C,EAAc+B,GAAiB,GAC1GykB,EAAYhsC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAgB,IAAEF,MAAOo1C,EAAc+B,GAAiB,IAG5G,IAAI0kB,EAAmBx1D,KAAK2L,KAAK,EAAK3L,KAAKoC,IAAI,GAAMkzD,EAAcn/D,EAAO2U,WAAa3U,EAAO2U,YAC1F2qD,EAAiBz1D,KAAK2L,KAAK,EAAK3L,KAAKoC,IAAI,GAAMmzD,EAAYp/D,EAAO2U,WAAa3U,EAAO2U,YAE1F,MAAM4qD,EAAmE,MAA5C11D,KAAK4C,KAAK,EAAI4yD,GAAYx1D,KAAK2C,GAAK,KAC3DgzD,EAAmE,MAA5C31D,KAAK4C,KAAK,EAAI4yD,GAAYx1D,KAAK2C,GAAK,KAC3DizD,EAA+D,MAA1C51D,KAAK4C,KAAK,EAAI6yD,GAAUz1D,KAAK2C,GAAK,KACvDkzD,EAA+D,MAA1C71D,KAAK4C,KAAK,EAAI6yD,GAAUz1D,KAAK2C,GAAK,KACvDmzD,EAA0BzV,EAAmBlqD,EAAO6U,mBAE1D,IAAI+qD,EAA2BtiD,EAAW6D,SACtC0+C,EAAyBviD,EAAW6D,SAEpCiS,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,aAAaF,MAAOo1C,EAAc+B,KACjFilB,EAAmBxsC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,aAAaF,MAAOo1C,EAAc+B,GAAiB,GACrHklB,EAAiBzsC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,aAAaF,MAAOo1C,EAAc+B,GAAiB,IAGvH,MAAMmlB,EAAqBT,EAAWO,EAAmBD,EAAkB,GACrEI,EAAmBT,EAASO,EAAiBF,EAAkB,GAC/DK,EAAsBn2D,KAAK2L,IAAI,EAAKsqD,GACpCG,EAAsBp2D,KAAK2L,IAAI,GAAMsqD,GACrCI,EAAoBr2D,KAAK2L,IAAI,EAAKuqD,GAClCI,EAAoBt2D,KAAK2L,IAAI,GAAMuqD,GAEzCrhE,KAAK05D,eAAiBmH,EACtB7gE,KAAK25D,eAAiBmH,EACtB9gE,KAAK45D,qBAAuBmH,EAAaF,GAAgBzV,EACzDprD,KAAK65D,qBAAuBmH,EAAaF,GAAgB1V,EACzDprD,KAAK85D,eAAiB95D,KAAKy5D,gBAAkB6H,EAAc5sC,EAAMooC,uBACjE98D,KAAK+5D,eAAiB/5D,KAAKy5D,gBAAkB8H,EAAc7sC,EAAMooC,uBACjE98D,KAAKg6D,qBAAuBwH,EAAYF,GAAelW,EACvDprD,KAAKi6D,qBAAuBwH,EAAYF,GAAenW,CAC1D,CAED,GAAIyS,EAAY,CAGZ,IAAI6D,EAAyB9iD,EAAW0C,OACpCqgD,EAAuB/iD,EAAW0C,OAElCoT,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAc+B,KAC9EylB,EAAiBhtC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAc+B,GAAiB,GAChH0lB,EAAejtC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAc+B,GAAiB,IAGlH,IAAI2lB,EAAsBz2D,KAAKoC,IAAI,EAA+Bm0D,GAAkBpgE,EAAO8U,YAAc,IACrGyrD,EAAoB12D,KAAKoC,IAAI,EAA+Bo0D,GAAgBrgE,EAAO8U,YAAc,IACrGwrD,EAA4B,GAAdA,EAAmD,GAA9Bz2D,KAAKiB,IAAIw1D,EAAa,GACzDC,EAAwB,GAAZA,EAA+C,GAA5B12D,KAAKiB,IAAIy1D,EAAW,GACnD,MAAMC,EAA0B,EAAM32D,KAAKc,KAAK,EAAM21D,EAAcA,EAAc,GAC5EG,EAAwB,EAAM52D,KAAKc,KAAK,EAAM41D,EAAYA,EAAY,GAC5E7hE,KAAKu6D,gBAAkBqH,EACvB5hE,KAAKw6D,sBAAwBqH,EAAYD,GAAexW,EACxDprD,KAAKy6D,mBAAqBqH,EAC1B9hE,KAAK06D,yBAA2BqH,EAAwBD,GAA2B1W,CACtF,CAED,IAAI4W,EAAc,EACdC,EAAkC,EACtC,GAAInE,EAAU,CAGV,IAAIoE,EAA8BtjD,EAAWoE,YACzCm/C,EAA4BvjD,EAAWoE,YAEvC0R,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAiB,KAAEF,MAAOo1C,EAAc+B,KAC5EimB,EAAsB/2D,KAAK2L,IAAK,EAAK4d,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAiB,KAAEF,MAAOo1C,EAAc+B,GAAiB,IAClIkmB,EAAoBh3D,KAAK2L,IAAK,EAAK4d,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAiB,KAAEF,MAAOo1C,EAAc+B,GAAiB,KAEpI,MAAMmmB,EAAqI,GAA7Gj3D,KAAKoC,IAAI,EAAKpC,KAAKiB,IAAmC81D,EAAsB5gE,EAAOyP,iBAAkB,MAC7HsxD,EAAiI,GAA3Gl3D,KAAKoC,IAAI,EAAKpC,KAAKiB,IAAmC+1D,EAAoB7gE,EAAOyP,iBAAkB,MAC/H/Q,KAAKm7D,SAAWiH,EAChBpiE,KAAKo7D,cAAgBjwD,KAAK2L,IAAI,GAAMurD,EAAcD,GAAiBhX,GACnE4W,EAAc72D,KAAK2L,IAAIsrD,EAAeC,GAOtC,IAAIC,EAA4B1jD,EAAWmwB,UACvCwzB,EAA0B3jD,EAAWmwB,UACrCyzB,GAAuB,EAEvB9tC,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,KAClFqmB,EAAoB5tC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,GAAiB,GACvHsmB,EAAkB7tC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,cAAcF,MAAOo1C,EAAc+B,GAAiB,GACrHumB,GAAc,GAGlB,MAAMC,EAAkCt3D,KAAKe,OAAOo2D,EAAoB,GAAKhhE,EAAOwP,mBAAqB+rD,GACnG6F,EAAgCv3D,KAAKe,OAAOq2D,EAAkB,GAAKjhE,EAAOwP,mBAAqB+rD,GACtE,MAA3B78D,KAAKg7D,oBAA+BwH,EAGpCxiE,KAAK+6D,qBAAuB0H,EAF5BziE,KAAK+6D,qBAAuB/6D,KAAKg7D,mBAKrCh7D,KAAKg7D,mBAAqB0H,EAC1BT,EAAkF,IAAvDjiE,KAAK+6D,qBAAuB/6D,KAAKg7D,oBAA4BxP,EAExFxrD,KAAKi7D,qBAAuB,EAC5Bj7D,KAAKk7D,0BAA4B,EAAM9P,EAEvC,MAAMK,EAAuB,EAAMtgD,KAAK2C,GAAKxM,EAAO0P,YAAc0jB,EAAM82B,iBACxE1jB,GAAM+kB,4BAA4B7vB,kBAAkByuB,EAAcnqD,EAAO2P,eACzEjR,KAAKq7D,YAAcvzB,GAAM+kB,4BAA4BxwB,EAAE,GACvDr8B,KAAKs7D,YAAcxzB,GAAM+kB,4BAA4BvwB,EAAE,GACvDt8B,KAAKu7D,YAAczzB,GAAM+kB,4BAA4BvwB,EAAE,EAC1D,CAED,IAAIqmC,EAAgB,EACpB,GAAI5E,EAAY,CAIZ,IAAI6E,EAAyBhkD,EAAWiC,OACpCgiD,EAAuBjkD,EAAWiC,OAGlC6T,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAc+B,KAC9E2mB,EAAiBluC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAc+B,GAAiB,GAChH4mB,EAAenuC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAc+B,GAAiB,IAG9GvnB,EAAMwpC,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAc+B,KACnF2mB,IAAmBluC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,WAAO0oB,OAAWA,GAAW,GAASlsB,EAAOob,WAAW1X,WAAW,eAAe+X,mBAAqBzb,EAAO8P,YAC/LyxD,IAAiBnuC,EAAMypC,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,WAAO0oB,OAAWA,GAAW,GAAQlsB,EAAOob,WAAW1X,WAAW,eAAe+X,mBAAqBzb,EAAO8P,aAGhM,MAAM0xD,EAAsH,KAAhG33D,KAAKoC,IAAI,EAAKpC,KAAKiB,IAA8Bw2D,EAAiBthE,EAAO8P,YAAa,OAC5G2xD,EAAkH,KAA9F53D,KAAKoC,IAAI,EAAKpC,KAAKiB,IAA8By2D,EAAevhE,EAAO8P,YAAa,OAE9GpR,KAAK+7D,WAAa+G,EAClB9iE,KAAKg8D,iBAAmB+G,EAAYD,GAAe1X,EACnDuX,EAAgBx3D,KAAK2L,IAAIgsD,EAAaC,GAEtC,MAAMtX,EAAuB,EAAMtgD,KAAK2C,GAAKxM,EAAO4P,cAAgBwjB,EAAM82B,iBAC1E1jB,GAAM+kB,4BAA4B7vB,kBAAkByuB,EAAcnqD,EAAO6P,iBACzEnR,KAAKi8D,cAAgBn0B,GAAM+kB,4BAA4BxwB,EAAE,GACzDr8B,KAAKk8D,cAAgBp0B,GAAM+kB,4BAA4BvwB,EAAE,GACzDt8B,KAAKm8D,cAAgBr0B,GAAM+kB,4BAA4BvwB,EAAE,EAC5D,CAED,GAAIt8B,KAAKi3D,qBACLj3D,KAAKo3D,qBAAuB,EAC5Bp3D,KAAKq3D,eAAiB,EACtBr3D,KAAKk3D,oBAAqB,OACvB,GAAKl3D,KAAKk3D,mBA+CV,CAEHmJ,EAAsB,EACtBC,EAAoB,EACpBC,EAAsB,EACtBC,EAAoB,EAEpB,IAAIwC,EAA4B,EAC5BnF,IAAYmF,GAAqBtuC,EAAMqoC,uBACvCe,IAAUkF,GAAqBhjE,KAAK26D,eAAgB93D,QACpDk7D,IAAYiF,GAAqB1hE,EAAO+P,uBAE5CrR,KAAKq3D,gBAAkBjM,EACnBprD,KAAKq3D,gBAAkB2L,IACvBhjE,KAAKm3D,yBAA0B,EAEtC,KA/DoC,CAKA,GAA7Bn3D,KAAKo3D,uBAGLiJ,EAAsB,GAFtBC,EAAoB,EAMxB,MAAM2C,EAA+B,EAAM,IACrCC,GAAwB/3D,KAAKwC,KAAKs1D,GACxC,IAAIE,EAAwB,EAM5B,GAJItF,IACAsF,GAAiB7hE,EAAOmV,gBAGxBqnD,EAAU,CACV,MAAMsF,EAA+Bj4D,KAAKiB,IAAI41D,EAAa,EAAMC,GAGjEkB,IAF0B,EAAMh4D,KAAKwC,KAAKy1D,GACFF,CAE3C,CAED,GAAInF,EAAY,CACZ,MAAMsF,EAAsC,EAAhBV,EACtBW,EAAqChiE,EAAO+P,sBAAwB,EAAOm6C,EAC3E4X,EAA+Bj4D,KAAKiB,IAAIi3D,EAAa,EAAMC,GAGjEH,IAF0B,EAAMh4D,KAAKwC,KAAKy1D,GACAF,CAE7C,CAED,MACMK,EADwB1G,EAAiBrR,EACA2X,EACzCK,EAA8BxjE,KAAKo3D,qBAAuBmM,EAC5DC,GAAuB,IACvBhD,EAAoB,GAGxBxgE,KAAKo3D,qBAAuBoM,EACxBxjE,KAAKo3D,sBAAwB,IAC7Bp3D,KAAKk3D,oBAAqB,EAEjC,CAkBDl3D,KAAK63D,eAAiBwI,EACtBrgE,KAAK83D,qBAAuBwI,EAAoBD,GAAuBjV,EACvEprD,KAAKi4D,eAAiBsI,EACtBvgE,KAAKk4D,qBAAuBsI,EAAoBD,GAAuBnV,C,CAGpE,WAAAqS,CAAY7+C,EAAwB4sC,GAEvC,GADAxrD,KAAK43D,YAAc,EACA,GAAfh5C,EAAW3J,KACXjV,KAAK2K,KAAQ3K,KAAY,QAAIsB,EAAOG,aAAamd,EAAWvd,UAAUiB,QAAUhB,EAAOC,UAAUqd,EAAWvd,UAAUiB,QAElHtC,KAAKqjB,4BAA8BzE,EAAWyE,4BAC9CrjB,KAAKsjB,kBAAoB1E,EAAW0E,kBACpCtjB,KAAKujB,gBAAkB3E,EAAW2E,gBAClCvjB,KAAKwjB,iBAAmB5E,EAAW4E,iBACnCxjB,KAAKyjB,sBAAwB7E,EAAW6E,sBACxCzjB,KAAK0jB,oBAAsB9E,EAAW8E,oBAGvC1jB,KAAKuuC,aAAe3vB,EAAW2vB,aAClCvuC,KAAKwuC,aAAe5vB,EAAW4vB,aAC/BxuC,KAAKyuC,aAAe7vB,EAAW6vB,aAC/BzuC,KAAK0uC,iBAAmB9vB,EAAW8vB,iBACnC1uC,KAAK2uC,WAAa/vB,EAAW+vB,gBAC1B,GAAmB,GAAf/vB,EAAW3J,KAClBjV,KAAK2K,KAAQ3K,KAAY,QAAI4e,EAAW8B,eAAkB9B,EAAW8D,uBACrE1iB,KAAK43D,YAAc,IACnB53D,KAAKuuC,aAAe3vB,EAAW2vB,aAC/BvuC,KAAKwuC,aAAe5vB,EAAW4vB,aAC/BxuC,KAAKyuC,aAAe7vB,EAAW6vB,aAC/BzuC,KAAK0uC,iBAAmB9vB,EAAW8vB,iBACnC1uC,KAAK2uC,WAAa/vB,EAAW+vB,gBAC1B,GAAmB,GAAf/vB,EAAW3J,KAClBjV,KAAK2K,KAAOa,EAAYoT,EAAW+uB,UAAWliC,GAA6BC,SACxE,GAAmB,GAAfkT,EAAW3J,KAClBjV,KAAK2K,KAAO3K,KAAKuvC,cAAcpH,cAAcvpB,EAAW2wB,cAAe3wB,EAAW3J,MAClFjV,KAAKuuC,aAAe3vB,EAAW2vB,aAC/BvuC,KAAKwuC,aAAe5vB,EAAW4vB,aAC/BxuC,KAAKyuC,aAAe7vB,EAAW6vB,aAC/BzuC,KAAK0uC,iBAAmB9vB,EAAW8vB,iBACnC1uC,KAAK2uC,WAAa/vB,EAAW+vB,gBAC1B,GAAmB,GAAf/vB,EAAW3J,KAClBjV,KAAK2K,KAAO3K,KAAKuvC,cAAcpH,cAAcvpB,EAAW2wB,cAAe3wB,EAAW3J,MAClFjV,KAAKuuC,aAAe3vB,EAAW2vB,aAC/BvuC,KAAKwuC,aAAe5vB,EAAW4vB,aAC/BxuC,KAAKyuC,aAAe7vB,EAAW6vB,aAC/BzuC,KAAK0uC,iBAAmB9vB,EAAW8vB,iBACnC1uC,KAAK2uC,WAAa/vB,EAAW+vB,gBAC1B,GAAmB,GAAf/vB,EAAW3J,KAClBjV,KAAK2K,KAAO3K,KAAK4vC,aAAazH,cAAcvpB,EAAWgxB,aAAc,QAClE,GAAmB,GAAfhxB,EAAW3J,KAAgC,CAClD,IAAK,IAAIpK,EAAY,EAAGA,EAAIvJ,EAAOuY,UAAWhP,IAC1C7K,KAAKyvC,qBAAqB5kC,GAAGs9B,cAAcvpB,EAAW6wB,qBAAqB5kC,GAAIisD,GAAgB2M,GAA8B54D,IAEjI7K,KAAK2K,KAAO,IACf,MACG3K,KAAK2K,KAAO,I,CAIb,cAAA+4D,CAAe//B,GAClB,GAAa,GAAT3jC,KAAKiV,KACL,OAAOjV,KAAKyvC,qBAAqB9L,GAAOh5B,KAExC,MAAM,IAAIxI,MAAM,8C,CAIjB,iCAAOwhE,CAA2B7+D,GACrC,OAAO4oC,GAAW0J,mBAAmB91C,EAAOkX,kBAA4B,EAAR1T,GAAa,K,CAGzE,SAAO2+D,CAA8B3+D,GACzC,OAAO,GAAKqG,KAAKwC,KAAKmpD,GAAgB6M,2BAA2B7+D,G,EAIzE,MAAM8+D,GAAN,WAAA7jE,GACoBC,KAAWglC,YAAsB,GAC1ChlC,KAAKk4C,OAAY,EACjBl4C,KAAwB6jE,yBAAkB,I,QAGxC/7B,GAED,aAAAg8B,GACJ,MAAMnjB,EAAuB3gD,KAAK+sB,KAAMiK,kBACxC,IAAK,IAAInsB,EAAY7K,KAAKs4C,SAASz1C,OAAQgI,EAAI81C,EAAc91C,IACzD7K,KAAKs4C,SAASztC,GAAK,IAAI+4D,GAE3B5jE,KAAKs4C,SAASz1C,OAAS89C,EACvB,IAAK,IAAI91C,EAAY,EAAGA,EAAI81C,EAAc91C,IAAK,CAC3C,MAAMsc,EAAmBnnB,KAAK+sB,KAAMurB,SAASztC,GACvCk5D,EAA6B/jE,KAAKs4C,SAASztC,GACjD,IAAK,IAAIovB,EAAY8pC,EAAa/+B,YAAYniC,OAAQo3B,EAAI9S,EAAQ6d,YAAYniC,OAAQo3B,IAClF8pC,EAAa/+B,YAAY/K,GAAK,IAAI68B,GAItC,GAFAiN,EAAa/+B,YAAYniC,OAASskB,EAAQ6d,YAAYniC,OAElDkhE,EAAa7rB,OAAS/wB,EAAQ+wB,QAC9B6rB,EAAa7rB,MAAQ/wB,EAAQ+wB,MACzB6rB,EAAa7rB,OACb,IAAK,MAAM+S,KAAmB8Y,EAAa/+B,YACvCimB,EAAgBqS,iBAI/B,C,CAGE,iBAAA0G,CAAkBj3C,GAGrB,GAAY,MAARA,EAAc,CACd/sB,KAAK8jE,gBACL,MAAMjH,EAAyB78D,KAAKikE,oBACpC,IAAK,IAAI/pB,EAAuB,EAAGA,EAAentB,EAAKiK,kBAAmBkjB,IACtE,IAAK,IAAI+B,EAA0B,EAAGA,EAAkBlvB,EAAKurB,SAAS4B,GAAclV,YAAYniC,OAAQo5C,IAAmB,CACvH,MAAMr9B,EAAyBmO,EAAKurB,SAAS4B,GAAclV,YAAYiX,GACjEgP,EAAmCjrD,KAAKs4C,SAAS4B,GAAclV,YAAYiX,GACjFnU,GAAM01B,2BAA2B5+C,GACjCA,EAAWwwB,QAAU,EACrBxwB,EAAWywB,YAAc,EACzBzwB,EAAW0wB,QAAU,EACrB1wB,EAAWkhD,iBAAmBlhD,EAAWW,SACzCX,EAAWmhD,eAAiB,KAC5BnhD,EAAW00C,mBAAqB10C,EAAWgC,WAC3ChC,EAAWslD,iBAAmB,KAC9BjZ,EAAgBwS,YAAY7+C,EAAY5e,KAAKwrD,kBAC7CP,EAAgB2R,yBAAyB58D,KAAM4e,EAAYi+C,EAC9D,CAGR,CACA,IAAIsH,EAAa,IAAIn5D,aAAa,GACnChL,KAAKokE,eAAgB,EACrBpkE,KAAKqkE,WAAWF,EAAYA,EAAY,GAAG,GAC3CnkE,KAAKokE,eAAgB,C,CAIlB,sBAAAE,GAEH,GAAiB,MAAbtkE,KAAK+sB,MAAgB/sB,KAAK+sB,KAAK+sB,gBAAkB,EAAG,CAGpD,IAAIyqB,EAAoC,GACpCC,EAA2C,GAC/CxkE,KAAKykE,UAAY,GACjBzkE,KAAK0kE,cAAgB,GACrB1kE,KAAK2kE,aAAe,GACpB3kE,KAAK4kE,iBAAmB,GACxB,IAAK,IAAIz9C,EAAkB,EAAGA,EAAUnnB,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmB/F,IAAW,CAC1Gq9C,EAAkBr9C,GAAW,GAC7BnnB,KAAK2kE,aAAax9C,GAAW,GAC7BnnB,KAAK4kE,iBAAiBz9C,GAAW,GAEjC,IAAK,IAAIvI,EAAqB,EAAGA,EAAa5e,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAYniC,OAAQ+b,IAC1F5e,KAAK2kE,aAAax9C,GAASvI,GAAc,GACzC5e,KAAK4kE,iBAAiBz9C,GAASvI,GAAc,GAC7C4lD,EAAkBr9C,GAASvI,GAAc,EAEhD,CAGD,IAAI4yC,EAAsBxxD,KAAK6kE,KAAOvjE,EAAOwQ,aAAe9R,KAAK4kC,KAGjE,IAAK,IAAIsV,EAAuBl6C,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmBgtB,EAAel6C,KAAK+sB,KAAKiK,kBAAmBkjB,IACnI,IAAMl6C,KAAK+sB,KAAKurB,SAAS4B,GAAmB,MAAG,CAE3C,IAAIS,EAEJ,IAAK,IAAImqB,EAAqB9kE,KAAK46C,IAAKkqB,GAAc,EAAGA,IAGrD,GAFAnqB,EAAU36C,KAAK+sB,KAAK48B,WAAWzP,EAAc4qB,GAE9B,MAAXnqB,EAAiB,CACjB,IAAIoqB,EAAwBpqB,EAAQ3V,YAAY,GAC5CpmB,EAAyB5e,KAAK+sB,KAAKurB,SAAS4B,GAAclV,YAAY+/B,GACtEC,EAA2B,GAC3BC,EAA4B,GAE5BC,EAAsBJ,GAAc9kE,KAAK46C,IACvC4W,EACAxxD,KAAKmlE,eAAeL,GAE1B,IAAK,MAAM5/B,KAAQyV,EAAQ5V,MACvB,GAAIG,EAAKlF,MAAQklC,IAAwE,MAAzDF,EAAe1jE,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,KAAeqB,EAAKjF,IAAM+kC,EAAe1jE,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,KAC1J,GAAIqB,EAAKjF,KAAOilC,EACZF,EAAe1jE,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,IAAMqB,EAAKjF,IAC7DglC,EAAgB3jE,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,IAAMqB,EAAKpB,KAAKoB,EAAKpB,KAAKjhC,OAAS,GAAGu4B,SAExF,CACD4pC,EAAe1jE,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,IAAMqhC,EAExD,IAAK,IAAIE,EAAS,EAAGA,EAASlgC,EAAKpB,KAAKjhC,OAAQuiE,IAC5C,GAAIlgC,EAAKpB,KAAKshC,GAAQ3hC,KAAOyB,EAAKlF,MAAQklC,EAAY,CAClD,MAAMG,EAA2BngC,EAAKpB,KAAKshC,GAAQ3hC,KAAOyB,EAAKpB,KAAKshC,EAAS,GAAG3hC,KAC1E6hC,EAA0BJ,EAAahgC,EAAKlF,MAAQkF,EAAKpB,KAAKshC,EAAS,GAAG3hC,KAC1E8hC,EAAsBrgC,EAAKpB,KAAKshC,GAAQhqC,KAAO8J,EAAKpB,KAAKshC,EAAS,GAAGhqC,KAE3E6pC,EAAgB3jE,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,IAAM14B,KAAKe,MAAMg5B,EAAKpB,KAAKshC,EAAS,GAAGhqC,KAAOmqC,EAAcD,EAAkBD,GACjID,EAASlgC,EAAKpB,KAAKjhC,MACtB,CAER,CAKT,IAAK,IAAI0iC,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAC7C,GAA2B,MAAvBy/B,EAAez/B,GACf,GAAIjkC,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAMzoB,SACI,MAA9CynD,EAAe3lD,EAAWlC,WAAW6oB,KAAiBu/B,EAAaxjE,EAAOwQ,aAAe9R,KAAK+sB,KAAK4Z,YAAcq+B,EAAez/B,GAAQg/B,EAAe3lD,EAAWlC,WAAW6oB,OAC7KvlC,KAAKwlE,YAAYP,EAAgB1/B,GAAM0/B,EAAgB1/B,GAAMA,EAAK3mB,EAAWgJ,YAAY2d,GAAM3mB,EAAW8wB,eAAenK,GAAM3mB,EAAWlC,WAAW6oB,IACrJg/B,EAAe3lD,EAAWlC,WAAW6oB,IAAQu/B,EAAaxjE,EAAOwQ,aAAe9R,KAAK+sB,KAAK4Z,YAAcq+B,EAAez/B,QAG1H,CAED,IAAIkgC,EAA4B,GAEhC,GAAI7mD,EAAW8wB,eAAenK,IAAQvlC,KAAK+sB,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYniC,OAC9F,IAAK,IAAIgI,EAAY,EAAGA,EAAI7K,KAAK+sB,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYniC,OAAQgI,IAC5F46D,EAAgB16D,KAAKF,QAIxB,GAAI+T,EAAW8wB,eAAenK,GAAOvlC,KAAK+sB,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYniC,OAAQ,CAC1G,MAAM6iE,EAA6B1lE,KAAK+sB,KAAK48B,WAAW/qC,EAAWgJ,YAAY2d,GAAMu/B,GACnE,MAAdY,IACAD,EAAkBC,EAAW1gC,YACpC,MACGygC,EAAgB16D,KAAK6T,EAAW8wB,eAAenK,IAEnD,IAAK,IAAI0W,EAA0B,EAAGA,EAAkBwpB,EAAgB5iE,OAAQo5C,IAAmB,CAG/F,MAAM0pB,EAAyB/mD,EAAWlC,WAAW6oB,IAAQjkC,EAAOob,WAAW1X,WAAW,aAAaF,MACjG8gE,EAA2BhnD,EAAWlC,WAAW6oB,IAAQjkC,EAAOob,WAAW1X,WAAW,eAAeF,MAC3G,IAAI+gE,EAA0BjnD,EAAWlC,WAAW6oB,GAQpD,GAPIogC,EACAE,EAAkBvkE,EAAOob,WAAW7Z,OAAS+b,EAAW8mB,eAAeH,GAChEqgC,IAEPC,EAAkBvkE,EAAOob,WAAW7Z,OAAS,EAAK,EAAIvB,EAAO2S,gBAAmB2K,EAAW8mB,eAAeH,IAGL,MAArGi/B,EAAkB5lD,EAAWgJ,YAAY2d,IAAMkgC,EAAgBxpB,IAAkB4pB,IAC9Ef,EAAaxjE,EAAOwQ,aAAe9R,KAAK+sB,KAAK4Z,YAAcq+B,EAAez/B,GAAOi/B,EAAkB5lD,EAAWgJ,YAAY2d,IAAMkgC,EAAgBxpB,IAAkB4pB,GAAmB,CAExL,GAAIF,EAAe,CACf,IAAIG,EAA4B9lE,KAAK+sB,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYygC,EAAgBxpB,IAC5G,GAAsC,GAAlCr9B,EAAW8mB,eAAeH,GAC1BugC,EAAchG,iBAAmBgG,EAAc93B,aAAai3B,EAAgB1/B,QACzE,CACH,IAAK,IAAI16B,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IAC7Ci7D,EAAchG,kBAAoBgG,EAAc93B,aAAanjC,KAC7Di7D,EAAchG,iBAAmB,IAAIh1B,GACrCg7B,EAAchG,iBAAiBz5B,eAAey/B,EAAc93B,aAAanjC,GAAIu6B,gBAC7Ev6B,EAAIvJ,EAAO6S,kBAGfhJ,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,GAAKugC,EAAchG,iBAAkB90B,oBACnFpsB,EAAW8mB,eAAeH,GAAO,EACjCugC,EAAchG,iBAAkB/0B,cAAc5/B,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,IAAI+D,KAAO27B,EAAgB1/B,GAE3HugC,EAAchG,iBAAkB/0B,cAAc5/B,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,IAAIgE,KAAO07B,EAAgB1/B,GAEtI,CACDugC,EAAc/F,eAAiB+F,EAAchG,gBAChD,MAAM,GAAI8F,EAAiB,CACxB,IAAIE,EAA4B9lE,KAAK+sB,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYygC,EAAgBxpB,IAC5G,GAAsC,GAAlCr9B,EAAW8mB,eAAeH,GAC1BugC,EAAcxS,mBAAqBwS,EAAc73B,eAAeg3B,EAAgB1/B,QAC7E,CACH,IAAK,IAAI16B,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IAC7Ci7D,EAAcxS,oBAAsBwS,EAAc73B,eAAepjC,KACjEi7D,EAAcxS,mBAAqB,IAAIxoB,GACvCg7B,EAAcxS,mBAAmBjtB,eAAey/B,EAAc73B,eAAepjC,GAAIu6B,gBACjFv6B,EAAIvJ,EAAO6S,kBAGfhJ,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,GAAKugC,EAAcxS,mBAAoBtoB,oBACrFpsB,EAAW8mB,eAAeH,GAAO,EACjCugC,EAAcxS,mBAAoBvoB,cAAc5/B,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,IAAI+D,KAAO27B,EAAgB1/B,GAE7HugC,EAAcxS,mBAAoBvoB,cAAc5/B,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,IAAIgE,KAAO07B,EAAgB1/B,GAExI,CACDugC,EAAc5B,iBAAmB4B,EAAcxS,kBAClD,MACItzD,KAAKwlE,YAAYP,EAAgB1/B,GAAM0/B,EAAgB1/B,GAAMA,EAAK3mB,EAAWgJ,YAAY2d,GAAMkgC,EAAgBxpB,GAAkB4pB,GAEtIrB,EAAkB5lD,EAAWgJ,YAAY2d,IAAMkgC,EAAgBxpB,IAAkB4pB,GAAmBf,EAAaxjE,EAAOwQ,aAAe9R,KAAK+sB,KAAK4Z,YAAcq+B,EAAez/B,EACjL,CACJ,CACJ,CAGZ,CAER,CAER,C,CAME,0BAAAwgC,CAA2BnnD,GAC9B,GAAiB,MAAb5e,KAAK+sB,KAET,IAAK,IAAIwY,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAAO,CAGpD,GAFA3mB,EAAW+wB,kBAAkBpK,IAAO,GAEA,GAAhC3mB,EAAWgJ,YAAY2d,GAAY,CACD,GAA9B3mB,EAAWlC,WAAW6oB,KACtB3mB,EAAW+wB,kBAAkBpK,IAAO,GACxC,QACH,CACD,MAAMpe,EAA0BnnB,KAAK+sB,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAC1E,GAAe,MAAXpe,EAAiB,SACrB,IAAI6+C,EAAkC,GAElCA,EADApnD,EAAW8wB,eAAenK,IAAQpe,EAAQ6d,YAAYniC,OAClCskB,EAAQ6d,YAER,CAAC7d,EAAQ6d,YAAYpmB,EAAW8wB,eAAenK,KAEvE,IAAK,IAAI16B,EAAY,EAAGA,EAAIm7D,EAAkBnjE,OAAQgI,IAAK,CACvD,MAAMi7D,EAAmCE,EAAkBn7D,GAC3D,GAAqB,MAAjBi7D,EAAuB,SAC3B,MAAMG,EAAc3kE,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAM/gC,KAEwB,IAAnFlD,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAMvoB,oBAA2C8oD,EAAc72D,QAAW,GAAK3N,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAMvoB,mBAEjJ,GAAlB8oD,EAAc7wD,MAAuE,IAA1C6wD,EAAc7wD,OAAyC,eAAPgxD,GAA+B,eAAPA,GAA+B,eAAPA,GAA+B,eAAPA,GAA+B,eAAPA,IACnJ,IAA1CH,EAAc7wD,OAAwC,eAAPgxD,GAA+B,eAAPA,IAC9B,GAAxCH,EAAc7wD,MAAsC,eAAPgxD,IAE5CH,EAAcl1B,WAAW35B,cAAuB,aAAPgvD,GAA6B,aAAPA,IAEhEH,EAAclkD,cAAuB,aAAPqkD,IAC7BH,EAAclkD,eAAwB,eAAPqkD,GAA+B,gBAAPA,IACjD,aAAPA,GAAsB96D,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,GAAKugC,EAAcvmD,SAASyrB,mBAEpG86B,EAAcljD,gBAAyB,eAAPqjD,IAC/BH,EAAcljD,iBAA0B,iBAAPqjD,GAAiC,kBAAPA,IACrD,eAAPA,GAAwB96D,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,GAAKugC,EAAcllD,WAAWoqB,oBAE5GpsB,EAAW+wB,kBAAkBpK,IAAO,EACpC16B,EAAIm7D,EAAkBnjE,OAE7B,CAEJ,C,CAGG,6BAAOqjE,CAAuBt4D,GAClC,OAAQzC,KAAKiB,IAAI,GAAMwB,EAAY,IAAQ,GAAO,E,CAwEtD,WAAWu4D,GACP,OAAOnmE,KAAKokE,a,CAGhB,aAAWgC,GACP,OAAOpmE,KAAKqmE,W,CAGhB,YAAWx2C,GACP,OAAO7vB,KAAKsmE,gB,CAGhB,YAAWz2C,CAASvsB,GAChB,GAAiB,MAAbtD,KAAK+sB,KAAc,CACnB/sB,KAAKsmE,iBAAmBn7D,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK+sB,KAAKoJ,SAAU7yB,IACjE,IAAIijE,EAAoBvmE,KAAKsmE,iBAC7BtmE,KAAK46C,IAAMzvC,KAAK0hB,MAAM05C,GACtBA,EAAYvmE,KAAK+sB,KAAK4Z,aAAe4/B,EAAYvmE,KAAK46C,KACtD56C,KAAK6kE,KAAO15D,KAAK0hB,MAAM05C,GACvBA,EAAYjlE,EAAOwQ,cAAgBy0D,EAAYvmE,KAAK6kE,MACpD7kE,KAAK4kC,KAAOz5B,KAAK0hB,MAAM05C,GACvBA,EAAYjlE,EAAOyQ,cAAgBw0D,EAAYvmE,KAAK4kC,MACpD5kC,KAAK6lC,KAAO16B,KAAK0hB,MAAM05C,GACvBvmE,KAAKwmE,oBAAsB,EAC3BxmE,KAAKymE,iBAAkB,EACvBzmE,KAAK0mE,QAAU,IAClB,C,CAGE,gBAAAC,GACH,GAAiB,MAAb3mE,KAAK+sB,KAAc,MAAM,IAAI5qB,MACjC,OAAOnC,KAAKikE,oBAAsB3iE,EAAOyQ,aAAezQ,EAAOwQ,aAAe9R,KAAK+sB,KAAK4Z,W,CAGrF,eAAAigC,GACH,OAAQ5mE,KAAK6kE,KAAOvjE,EAAOwQ,aAAe9R,KAAK4kC,MAAQtjC,EAAOyQ,aAAe/R,KAAK6lC,I,CAE/E,cAAAghC,GACH,OAAQ7mE,KAAK6kE,KAAOvjE,EAAOwQ,aAAe9R,KAAK4kC,I,CAG3C,cAAAugC,CAAevqB,GACnB,GAAiB,MAAb56C,KAAK+sB,KAAc,OAAO,EAC9B,IAAIm4C,EAAqB5jE,EAAOwQ,aAAe9R,KAAK+sB,KAAK4Z,YACzD,IAAK,IAAIxf,EAAkBnnB,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmB/F,EAAUnnB,KAAK+sB,KAAKiK,kBAAmB7P,IAAW,CACpI,IAAIwzB,EAA0B36C,KAAK+sB,KAAK48B,WAAWxiC,EAASyzB,GAC5D,GAAe,MAAXD,EAAiB,CACjB,IAAI/7B,EAAyB5e,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAY2V,EAAQ3V,YAAY,IACzF,IAAK,IAAIO,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAC7C,GAAI3mB,EAAWlC,WAAW6oB,IAAQjkC,EAAOob,WAAW1X,WAAW,YAAYF,MACvE,IAAK,MAAMogC,KAAQyV,EAAQ5V,MACnBG,EAAKrB,QAAQ,IAAOviC,EAAOyY,SAAW,EAAIwrB,GAEtC2/B,EAAahgC,EAAKlF,QAClBklC,EAAahgC,EAAKlF,MAKzC,CACJ,CACD,OAAOklC,C,CAIJ,eAAA4B,CAAgBhgB,EAAsBE,EAAsB+f,GAC/D,GAAiB,MAAb/mE,KAAK+sB,KACL,OAAQ,EAGZ,IAAIi6C,EAAmBlgB,EAAc,EAAI9mD,KAAK+sB,KAAKwtB,UAC/C0sB,EAAiBjgB,EAAchnD,KAAK+sB,KAAKoJ,SAAYn2B,KAAK+sB,KAAKwtB,UAAYv6C,KAAK+sB,KAAKytB,WACrF0sB,GAAwB,EACxBC,GAA0B,EAC1BC,EAAoBpnE,KAAK+sB,KAAKusB,MAGlC,IAAK,IAAInyB,EAAkBnnB,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmB/F,EAAUnnB,KAAK+sB,KAAKiK,kBAAmB7P,IACzH,IAAK,IAAIyzB,EAAcosB,EAAUpsB,EAAMqsB,EAAQrsB,IAAO,CAClD,IAAID,EAA0B36C,KAAK+sB,KAAK48B,WAAWxiC,EAASyzB,GAC5D,GAAe,MAAXD,EAAiB,CACjB,IAAI/7B,EAAyB5e,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAY2V,EAAQ3V,YAAY,IACzF,IAAK,IAAIO,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IACzC3mB,EAAWlC,WAAW6oB,IAAQjkC,EAAOob,WAAW1X,WAAkB,MAAEF,QACpEoiE,GAAe,GAEftoD,EAAWlC,WAAW6oB,IAAQjkC,EAAOob,WAAW1X,WAAW,YAAYF,QACvEqiE,GAAiB,EAG5B,CACJ,CAIL,GAAIH,EAAW,EAAG,CACd,IAAIK,EAAgC,KAChCC,EAA2B,EAE/B,IAAK,IAAI1sB,EAAcosB,EAAW,EAAGpsB,GAAO,EAAGA,IAAO,CAClD,IAAK,IAAIzzB,EAAkBnnB,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmB/F,EAAUnnB,KAAK+sB,KAAKiK,kBAAmB7P,IAAW,CACpI,IAAIwzB,EAAU36C,KAAK+sB,KAAK48B,WAAWxiC,EAASyzB,GAE5C,GAAe,MAAXD,EAAiB,CACjB,IAAIoqB,EAAwBpqB,EAAQ3V,YAAY,GAC5CpmB,EAAyB5e,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAY+/B,GAEjEG,EAAqBllE,KAAKmlE,eAAevqB,GAE7C,IAAK,MAAM1V,KAAQyV,EAAQ5V,MACvB,GAAInmB,EAAWlC,WAAWpb,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,KAAOviC,EAAOob,WAAW1X,WAAkB,MAAEF,OAClGogC,EAAKlF,MAAQklC,IAAiC,MAAlBmC,GAA0BniC,EAAKjF,IAAMonC,GACjE,GAAIniC,EAAKjF,KAAOilC,EACZmC,EAAiBniC,EAAKjF,IACtBqnC,EAAmBpiC,EAAKpB,KAAKoB,EAAKpB,KAAKjhC,OAAS,GAAGu4B,SAElD,CACDisC,EAAiBnC,EAEjB,IAAK,IAAIE,EAAS,EAAGA,EAASlgC,EAAKpB,KAAKjhC,OAAQuiE,IAC5C,GAAIlgC,EAAKpB,KAAKshC,GAAQ3hC,KAAOyB,EAAKlF,MAAQklC,EAAY,CAClD,MAAMG,EAA2BngC,EAAKpB,KAAKshC,GAAQ3hC,KAAOyB,EAAKpB,KAAKshC,EAAS,GAAG3hC,KAC1E6hC,EAA0BJ,EAAahgC,EAAKlF,MAAQkF,EAAKpB,KAAKshC,EAAS,GAAG3hC,KAC1E8hC,EAAsBrgC,EAAKpB,KAAKshC,GAAQhqC,KAAO8J,EAAKpB,KAAKshC,EAAS,GAAGhqC,KAE3EksC,EAAmBn8D,KAAKe,MAAMg5B,EAAKpB,KAAKshC,EAAS,GAAGhqC,KAAOmqC,EAAcD,EAAkBD,GAC3FD,EAASlgC,EAAKpB,KAAKjhC,MACtB,CAER,CAIhB,CACJ,CAGqB,MAAlBwkE,IACAD,EAAYE,EAAmBhmE,EAAOob,WAAW1X,WAAkB,MAAE+X,kBACrE69B,GAAO,EAEd,CACJ,CAED,GAAIssB,GAAgBC,EAAgB,CAEhC,IAAIvsB,EAAcosB,EACdO,GAAiB,EACjBpnE,EAAuB,EAE3B,MAAQonE,GAAO,CAEX,IAAIrC,EAAqB5jE,EAAOwQ,aAAe9R,KAAK+sB,KAAK4Z,YACrD6qB,EAAsB,EAO1B,GALI2V,IACAjC,EAAallE,KAAKmlE,eAAevqB,IAIjCssB,EAAc,CACd,IAAIM,GAAoB,EACxB,IAAK,IAAIrgD,EAAkBnnB,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmB/F,EAAUnnB,KAAK+sB,KAAKiK,kBAAmB7P,IACzH,GAAgB,GAAZqgD,EAAmB,CACnB,IAAI7sB,EAA0B36C,KAAK+sB,KAAK48B,WAAWxiC,EAASyzB,GAC5D,GAAe,MAAXD,EAAiB,CACjB,IAAI/7B,EAAyB5e,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAY2V,EAAQ3V,YAAY,IACzF,IAAK,IAAIO,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAC7C,GAAgB,GAAZiiC,GAAqB5oD,EAAWlC,WAAW6oB,IAAQjkC,EAAOob,WAAW1X,WAAkB,MAAEF,OACtF61C,EAAQ5V,MAAM0iC,MAAKlwC,GAAKA,EAAEsM,QAAQ,IAAOviC,EAAOyY,SAAW,EAAIwrB,IAAO,CAEzEiiC,GAAW,EAEX7sB,EAAQ5V,MAAM2iC,MAAK,SAAUrrC,EAAGC,GAAK,OAAQD,EAAE2D,OAAS1D,EAAE0D,MAAS3D,EAAEwH,QAAQ,GAAKvH,EAAEuH,QAAQ,GAAKxH,EAAE2D,MAAQ1D,EAAE0D,KAAM,IACnH,IAAK,MAAMkF,KAAQyV,EAAQ5V,MACvB,GAAIG,EAAKrB,QAAQ,IAAOviC,EAAOyY,SAAW,EAAIwrB,IAE1CplC,GAAiBgL,KAAKoC,IAAI23D,EAAa1T,EAAatsB,EAAKlF,MAAQwxB,GAAgBlwD,EAAOyQ,aAAe/R,KAAK2nE,6BAA6BP,GAErIliC,EAAKlF,MAAQklC,GACb,IAAK,IAAIE,EAAiB,EAAGA,EAASlgC,EAAKpB,KAAKjhC,OAAQuiE,IAAU,CAE9D,GAAIlgC,EAAKpB,KAAKshC,EAAS,GAAG3hC,KAAOyB,EAAKlF,OAASklC,EAAY,CACvD,MAAM0C,EAAqBtmE,EAAOyQ,aAAe5G,KAAKoC,IAAI23D,GAAchgC,EAAKlF,MAAQkF,EAAKpB,KAAKshC,EAAS,GAAG3hC,MAAOyB,EAAKpB,KAAKshC,GAAQ3hC,KAAOyB,EAAKpB,KAAKshC,EAAS,GAAG3hC,MAC3JokC,EAAuB3iC,EAAKpB,KAAKshC,EAAS,GAAGhqC,KAAO95B,EAAOob,WAAW1X,WAAkB,MAAE+X,kBAChG,IAAI+qD,EAAuB5iC,EAAKpB,KAAKshC,GAAQhqC,KAAO95B,EAAOob,WAAW1X,WAAkB,MAAE+X,kBACtFmoB,EAAKpB,KAAKshC,GAAQ3hC,KAAOyB,EAAKlF,MAAQklC,IAEtC4C,EAAe5iC,EAAKpB,KAAKshC,EAAS,GAAGhqC,MAAQ8J,EAAKpB,KAAKshC,GAAQhqC,KAAO8J,EAAKpB,KAAKshC,EAAS,GAAGhqC,OAAS8pC,GAAchgC,EAAKlF,MAAQkF,EAAKpB,KAAKshC,EAAS,GAAG3hC,QAAUyB,EAAKpB,KAAKshC,GAAQ3hC,KAAOyB,EAAKpB,KAAKshC,EAAS,GAAG3hC,MAAQniC,EAAOob,WAAW1X,WAAkB,MAAE+X,mBAEjQ,IAAIgrD,EAAoBzmE,EAAOwQ,aAAexQ,EAAOyQ,aAAe,GAiBhE5R,GAfA2nE,GAAgBD,GAeE7nE,KAAKwrD,iBAAmBoc,GAAcz8D,KAAKT,IAAIq9D,EAAYD,EAAeF,GAAcz8D,KAAKT,IAAIq9D,EAAYF,EAAeD,KAAgBG,GAAaF,EAAeC,IAM1KF,EAAa5nE,KAAK2nE,6BAA6BG,GAGnEV,EAAYU,CACf,CACDtW,EAAcrmD,KAAKoC,IAAI23B,EAAKlF,MAAQkF,EAAKpB,KAAKshC,GAAQ3hC,KAAMyhC,EAC/D,CAIhB,CAER,CACJ,CAER,CAGD/kE,IAAiB+kE,EAAa1T,GAAelwD,EAAOyQ,aAAe/R,KAAK2nE,6BAA6BP,GAErGxsB,IACY,GAARmsB,GAAansB,GAAO56C,KAAK+sB,KAAKwtB,UAAYv6C,KAAK+sB,KAAKytB,aACpDI,EAAM56C,KAAK+sB,KAAKwtB,UACZwsB,EAAO,GAAGA,KAEdnsB,GAAOqsB,IACPM,GAAQ,EAEf,CAED,OAAOp8D,KAAKgS,KAAKhd,EACpB,CAGG,OAAOH,KAAK2mE,mBAAqB3mE,KAAKgoE,aAAalhB,EAAaE,EAAa+f,E,CAI9E,YAAAiB,CAAalhB,EAAsBE,EAAsBihB,EAAuBjoE,KAAKkoE,iBACxF,GAAiB,MAAbloE,KAAK+sB,KAAc,MAAM,IAAI5qB,MACjC,IAAI81C,EAAej4C,KAAK+sB,KAAKytB,YAAcytB,EAAe,GAG1D,OAFInhB,IAAa7O,GAAQj4C,KAAK+sB,KAAKwtB,WAC/ByM,IAAa/O,GAAQj4C,KAAK+sB,KAAKoJ,UAAYn2B,KAAK+sB,KAAKwtB,UAAYv6C,KAAK+sB,KAAKytB,aACxEvC,C,CAGX,WAAAl4C,CAAYgtB,EAA6B,MAxUlC/sB,KAAgBwrD,iBAAW,MAO3BxrD,KAAI+sB,KAAgB,KACpB/sB,KAAkBmoE,oBAAY,EAC9BnoE,KAAyBooE,2BAAY,EACrCpoE,KAAiBqoE,kBAAW,EAC5BroE,KAAgBsoE,kBAAY,EAC5BtoE,KAAgBuoE,iBAAa,GAC7BvoE,KAAgBwoE,iBAAW,EAC3BxoE,KAAoByoE,qBAAa,GACjCzoE,KAAekoE,iBAAY,EAC3BloE,KAAM2hB,OAAW,EACjB3hB,KAAoB0oE,qBAAW,EAC/B1oE,KAAU2oE,YAAY,EACtB3oE,KAAe4oE,iBAAY,EAC3B5oE,KAAgB6oE,kBAAY,EAC5B7oE,KAAa8oE,eAAY,EAExB9oE,KAAU+oE,YAAY,EACtB/oE,KAAgBsmE,iBAAW,EAC3BtmE,KAAG46C,IAAW,EACd56C,KAAO0mE,QAAkB,KACzB1mE,KAAOgpE,QAAkB,KACzBhpE,KAAI6kE,KAAW,EACf7kE,KAAI4kC,KAAW,EACf5kC,KAAI6lC,KAAW,EAChB7lC,KAAeymE,iBAAY,EAC3BzmE,KAAaipE,eAAY,EACzBjpE,KAAmBwmE,oBAAW,EAC7BxmE,KAASykE,UAAsB,GAC/BzkE,KAAY2kE,aAA0B,GACtC3kE,KAAa0kE,cAAsB,GACnC1kE,KAAgB4kE,iBAA0B,GAC1C5kE,KAAaokE,eAAY,EACzBpkE,KAAWqmE,aAAY,EACvBrmE,KAAgBkpE,iBAAW,EAC3BlpE,KAAqCmpE,uCAAY,EAIjDnpE,KAAAopE,wBAA8C,IAAI//B,GACnDrpC,KAAA8sD,sBAA2C,IAAI/uB,GAOrC/9B,KAAQs4C,SAAmB,GAC3Bt4C,KAAAqpE,SAAwB,IAAIjvC,GAC5Bp6B,KAAAspE,sBAA4C9mE,MAAMlB,EAAO8V,cAAc+b,KAAK,MAErFnzB,KAAgBupE,kBAAY,EAC5BvpE,KAAyBwpE,2BAAY,EACrCxpE,KAAkBypE,mBAAW,EAC7BzpE,KAAsB0pE,uBAAW,EACjC1pE,KAAe2pE,gBAAW,EAC1B3pE,KAAK4pE,MAAW,EAEhB5pE,KAA8B6pE,+BAAwB,KAEtD7pE,KAAQ8pE,SAAe,KACvB9pE,KAAU+pE,WAAe,KA8hBzB/pE,KAAAgqE,qBAAwBC,IAC5B,MAAMC,EAAeD,EAAqBC,aACpCC,EAA4BD,EAAaxnE,eAAe,GACxD0nE,EAA4BF,EAAaxnE,eAAe,GAM9D,IAJI1C,KAAKmpE,uCAA4D,GAAlBgB,EAAY,IAA+B,GAAlBC,EAAY,IAAqD,GAAxCD,EAAYD,EAAarnE,OAAS,IAAqD,GAAxCunE,EAAYF,EAAarnE,OAAS,KAElL7C,KAAKmpE,uCAAwC,IAE5CnpE,KAAKmpE,sCAAuC,CAE7C,MAAMtmE,EAAiBqnE,EAAarnE,OACpC,IAAK,IAAIgI,EAAY,EAAGA,EAAIhI,EAAQgI,IAChCs/D,EAAYt/D,GAAK,EACjBu/D,EAAYv/D,GAAK,CAExB,EAEI7K,KAAKokE,eAAiBiG,YAAYC,OAAStqE,KAAKkpE,iBACjDlpE,KAAKuqE,mBAELvqE,KAAKqkE,WAAW8F,EAAaC,EAAaF,EAAarnE,OAAQ7C,KAAKokE,eAEhEpkE,KAAK2oE,aACD3oE,KAAK0oE,sBAAwB,GAC7BrtC,GAAOG,MAAM,qBAAsB2uC,EAAaC,GAChDpqE,KAAK0oE,qBAAuB,GAE5B1oE,KAAK0oE,wBAGhB,EAvTD1oE,KAAKwqE,0BACO,MAARz9C,GAAc/sB,KAAKyqE,QAAQ19C,E,CAG5B,OAAA09C,CAAQ19C,GACU,iBAAjB,EACA/sB,KAAK+sB,KAAO,IAAIorB,GAAKprB,GACdA,aAAgBorB,KACvBn4C,KAAK+sB,KAAOA,GAEhB/sB,KAAK0mE,QAAU,I,CAGX,uBAAA8D,GACJxqE,KAAK88D,uBAAyBh1B,GAAMC,kBAAkB/nC,KAAKwrD,iBAAmBlqD,EAAO6U,oBACrFnW,KAAK0qE,uBAAyB1qE,KAAK88D,uBAAyB,EAC5D98D,KAAK+8D,sBAAwBj1B,GAAMC,kBAAkB/nC,KAAKwrD,iBAAmBlqD,EAAOmV,gBACpFzW,KAAK2qE,sBAAwB3qE,KAAK+8D,sBAAwB,C,CAGtD,aAAA6N,GACJ,MAAMC,EAAqB7qE,KAAKooE,0BAA6BpoE,KAAKmoE,mBAAqB,KAAO,KAASnoE,KAAKmoE,mBAAqB,IAAM,KACvI,GAAqB,MAAjBnoE,KAAK8pE,UAAuC,MAAnB9pE,KAAK+pE,YAAsB/pE,KAAK+pE,WAAWc,YAAcA,EAAY,CACvE,MAAnB7qE,KAAK+pE,YAAoB/pE,KAAKuqE,kBAClC,MAAMO,EAAsB9qE,KAAKooE,0BAA6BpoE,KAAKmoE,mBAAqB,WAAa,WAAenoE,KAAKmoE,mBAAqB,cAAgB,WAC9JnoE,KAAK8pE,SAAW9pE,KAAK8pE,UAAY,IAAKjlB,OAAO3jD,cAAgB2jD,OAAOkmB,oBAAoB,CAAED,YAAaA,IACvG9qE,KAAKwrD,iBAAmBxrD,KAAK8pE,SAAS3oE,WACtCnB,KAAK+pE,WAAa/pE,KAAK8pE,SAASkB,sBAAwBhrE,KAAK8pE,SAASkB,sBAAsBH,EAAY,EAAG,GAAK7qE,KAAK8pE,SAASmB,qBAAqBJ,EAAY,EAAG,GAClK7qE,KAAK+pE,WAAWmB,eAAiBlrE,KAAKgqE,qBACtChqE,KAAK+pE,WAAWoB,iBAAmB,WACnCnrE,KAAK+pE,WAAWqB,sBAAwB,WACxCprE,KAAK+pE,WAAWsB,QAAQrrE,KAAK8pE,SAASwB,aAEtCtrE,KAAKwqE,yBACR,CACDxqE,KAAK8pE,SAASyB,Q,CAGV,eAAAhB,GACiB,MAAjBvqE,KAAK8pE,UAAuC,MAAnB9pE,KAAK+pE,aAC9B/pE,KAAK+pE,WAAWyB,WAAWxrE,KAAK8pE,SAASwB,aACzCtrE,KAAK+pE,WAAa,KACd/pE,KAAK8pE,SAAS/mE,OAAO/C,KAAK8pE,SAAS/mE,QACvC/C,KAAK8pE,SAAW,K,CAIjB,iBAAA2B,GACHzrE,KAAK4qE,gBACL5qE,KAAKkpE,iBAAmBmB,YAAYC,MAAQ,G,CAGzC,IAAAoB,GACC1rE,KAAKokE,gBACRpkE,KAAKskE,yBACNtkE,KAAKgkE,kBAAkBhkE,KAAK+sB,MAE5B/sB,KAAKokE,eAAgB,EACrBpkE,KAAK4qE,gB,CAKF,KAAAe,GACH,GAAK3rE,KAAKokE,gBACVpkE,KAAKokE,eAAgB,EACrBpkE,KAAKqmE,aAAc,EACnBrmE,KAAKykE,UAAY,GACjBzkE,KAAK0kE,cAAgB,GACJ,MAAb1kE,KAAK+sB,MAAc,CACnB/sB,KAAK+sB,KAAK+rB,YAAc,EACxB94C,KAAK+sB,KAAKgsB,aAAe,EACzB,IAAK,IAAImB,EAAuB,EAAGA,EAAel6C,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmBgtB,IACzGl6C,KAAK2kE,aAAazqB,GAAgB,GAClCl6C,KAAK4kE,iBAAiB1qB,GAAgB,EAE7C,C,CAGE,cAAA0xB,GACH5rE,KAAKmoE,oBAAqB,EAC1BnoE,KAAKqmE,aAAc,EACnBrmE,KAAK0rE,M,CAGF,YAAAG,GAGH,GAFA7rE,KAAK4pE,MAAQ,EACb5pE,KAAK8rE,eACY,MAAb9rE,KAAK+sB,KACL,IAAK,MAAMg3C,KAAgB/jE,KAAKs4C,SAC5B,IAAK,MAAM2S,KAAmB8Y,EAAa/+B,YACvCimB,EAAgBqS,iB,CAMzB,WAAAkI,CAAYuG,EAAqBC,EAAmBzmC,EAAa2U,EAAsB+B,EAAyBgwB,GACnH,IAAI5rC,EAAc0rC,EAAczqE,EAAOob,WAAWuvD,GAASlvD,kBACvDmvD,EAAkBF,EAAY1qE,EAAOob,WAAWuvD,GAASlvD,kBAwB7D,MAvBiD,gBAA7Czb,EAAOob,WAAWuvD,GAAS7uD,iBAC3BijB,EAAM,GAAKA,EACX6rC,EAAU,GAAKA,GAE8B,gBAA7C5qE,EAAOob,WAAWuvD,GAAS7uD,iBAC3BijB,EAAM,GAAKA,EACX6rC,EAAU,GAAKA,GAGf5qE,EAAOob,WAAWuvD,GAASnvD,QACI,MAA3B9c,KAAKykE,UAAUwH,IAAoBjsE,KAAKykE,UAAUwH,IAAY5rC,GAAOrgC,KAAK0kE,cAAcuH,IAAYC,IACpGlsE,KAAKykE,UAAUwH,GAAW5rC,EAC1BrgC,KAAK0kE,cAAcuH,GAAWC,GAG+B,MAA7DlsE,KAAK2kE,aAAazqB,GAAc+B,GAAiBgwB,IAC9CjsE,KAAK2kE,aAAazqB,GAAc+B,GAAiBgwB,IAAY5rC,GAC7DrgC,KAAK4kE,iBAAiB1qB,GAAc+B,GAAiBgwB,IAAYC,IACpElsE,KAAK2kE,aAAazqB,GAAc+B,GAAiBgwB,GAAW5rC,EAC5DrgC,KAAK4kE,iBAAiB1qB,GAAc+B,GAAiBgwB,GAAWC,GAIjE7rC,C,CAGJ,WAAA89B,CAAY8N,EAAiB9kD,EAAyBvI,EAA4BstD,GAErF,GADyB5qE,EAAOob,WAAWuvD,GAASnvD,SAEhD,GAA+B,MAA3B9c,KAAKykE,UAAUwH,IAAmD,MAA/BjsE,KAAK0kE,cAAcuH,GACtD,OAAOC,EAAUlsE,KAAK0kE,cAAcuH,GAAYjsE,KAAKykE,UAAUwH,QAEhE,GAAez+C,MAAXrG,GAAsCqG,MAAd5O,GACwB,MAAnD5e,KAAK2kE,aAAax9C,GAASvI,GAAYqtD,IAA2E,MAAvDjsE,KAAK4kE,iBAAiBz9C,GAASvI,GAAYqtD,GACtG,OAAOC,EAAUlsE,KAAK4kE,iBAAiBz9C,GAASvI,GAAYqtD,GAAYjsE,KAAK2kE,aAAax9C,GAASvI,GAAYqtD,GAGvH,OAAQ,C,CAIL,cAAAE,CAAehlD,EAAiBvI,GACnC,IAAK,IAAIqtD,EAAkB,EAAGA,EAAU3qE,EAAOob,WAAW7Z,OAAQopE,IAC9D,GAAuBz+C,MAAlBxtB,KAAKykE,WAAqD,MAA3BzkE,KAAKykE,UAAUwH,IACtBz+C,MAArBxtB,KAAK2kE,cAA2Dn3C,MAA9BxtB,KAAK2kE,aAAax9C,IAAmEqG,MAA1CxtB,KAAK2kE,aAAax9C,GAASvI,IAA+E,MAAnD5e,KAAK2kE,aAAax9C,GAASvI,GAAYqtD,GAC/K,OAAO,EAGf,OAAO,C,CAGJ,QAAAG,CAASH,EAAiB9kD,EAAkBvI,IAC3C5e,KAAKk+D,YAAY+N,IAAwBz+C,MAAXrG,GAAsCqG,MAAd5O,GAA2B5e,KAAKk+D,YAAY+N,EAAS9kD,EAASvI,MACpH5e,KAAKykE,UAAUwH,GAAW,KAC1BjsE,KAAK0kE,cAAcuH,GAAW,KACfz+C,MAAXrG,GAAsCqG,MAAd5O,IACxB5e,KAAK2kE,aAAax9C,GAASvI,GAAYqtD,GAAW,KAClDjsE,KAAK4kE,iBAAiBz9C,GAASvI,GAAYqtD,GAAW,M,CAK3D,iBAAAI,CAAkBzoB,EAAwB0oB,EAAoBvH,GACjE,MAAMnmD,EAAyB5e,KAAK+sB,KAAMurB,SAASg0B,GAAYtnC,YAAY+/B,GAE3E,GAAInhB,EAAe,CACf,GAAIhlC,EAAWgE,eACX,OAAO,EACX,GAAmC,MAA/BhE,EAAWslD,iBACX,OAAO,CACd,KACI,CACD,GAAItlD,EAAWgD,aACX,OAAO,EACX,GAAiC,MAA7BhD,EAAWmhD,eACX,OAAO,CACd,CACD,OAAO,C,CAGJ,WAAA7B,CAAY+N,EAAiB9kD,EAAkBvI,GAElD,OADyBtd,EAAOob,WAAWuvD,GAASnvD,QAEtB0Q,MAAlBxtB,KAAKykE,WAAqD,MAA3BzkE,KAAKykE,UAAUwH,GACpCz+C,MAAXrG,GAAsCqG,MAAd5O,GAAgD4O,MAArBxtB,KAAK2kE,cAA2D,MAA9B3kE,KAAK2kE,aAAax9C,IAA8D,MAA1CnnB,KAAK2kE,aAAax9C,GAASvI,IAClG,MAAnD5e,KAAK2kE,aAAax9C,GAASvI,GAAYqtD,E,CAKhD,WAAAM,GACHvsE,KAAK46C,IAAM,EACX56C,KAAK6rE,eACL7rE,KAAKwsE,W,CAGF,OAAAC,CAAQ7xB,GACX56C,KAAK46C,IAAMA,EACX56C,KAAK6rE,eACL7rE,KAAKsmE,iBAAmBtmE,KAAK46C,G,CAG1B,SAAA4xB,GACHxsE,KAAKsmE,iBAAmBtmE,KAAK46C,IAC7B56C,KAAK6kE,KAAO,EACZ7kE,KAAK4kC,KAAO,EACZ5kC,KAAK6lC,KAAO,EACZ7lC,KAAKwmE,oBAAsB,C,CAGxB,YAAAkG,GACH,GAAK1sE,KAAK+sB,OACN/sB,KAAK46C,IAAM56C,KAAK+sB,KAAKwtB,WAAav6C,KAAK46C,KAAO56C,KAAK+sB,KAAKwtB,UAAYv6C,KAAK+sB,KAAKytB,YAAY,CAC1F,MAAMmyB,EAAiB3sE,KAAK46C,IAC5B56C,KAAK46C,IAAM56C,KAAK+sB,KAAKwtB,UACrBv6C,KAAKsmE,kBAAoBtmE,KAAK46C,IAAM+xB,EAEhC3sE,KAAKmmE,SACLnmE,KAAKskE,wBACZ,C,CAGE,WAAAsI,GACH,IAAK5sE,KAAK+sB,KAAM,OAChB/sB,KAAK0mE,QAAU1mE,KAAK46C,IACpB,MAAM+xB,EAAiB3sE,KAAK46C,IAC5B56C,KAAK46C,MACD56C,KAAK46C,KAAO56C,KAAK+sB,KAAKoJ,WACtBn2B,KAAK46C,IAAM,GAEf56C,KAAKsmE,kBAAoBtmE,KAAK46C,IAAM+xB,EAEhC3sE,KAAKmmE,SACLnmE,KAAKskE,wB,CAGN,WAAAuI,GACH,IAAK7sE,KAAK+sB,KAAM,OAChB/sB,KAAK0mE,QAAU,KACf,MAAMiG,EAAiB3sE,KAAK46C,IAC5B56C,KAAK46C,OACD56C,KAAK46C,IAAM,GAAK56C,KAAK46C,KAAO56C,KAAK+sB,KAAKoJ,YACtCn2B,KAAK46C,IAAM56C,KAAK+sB,KAAKoJ,SAAW,GAEpCn2B,KAAKsmE,kBAAoBtmE,KAAK46C,IAAM+xB,EAEhC3sE,KAAKmmE,SACLnmE,KAAKskE,wB,CAGL,UAAAwI,GACJ,IAAI9D,EAAkBhpE,KAAK46C,IAAM,EAQjC,OAPI56C,KAAKqmE,YACD2C,GAAWhpE,KAAK+sB,KAAMoJ,WACtB6yC,EAAUhpE,KAAK+sB,KAAMoJ,SAAW,GAEL,GAAxBn2B,KAAKkoE,iBAAwBc,GAAWhpE,KAAK+sB,KAAMwtB,UAAYv6C,KAAK+sB,KAAMytB,aACjFwuB,EAAUhpE,KAAK+sB,KAAMwtB,WAElByuB,C,CAGJ,OAAA+D,GACH,IAAK/sE,KAAK+sB,KAAM,OAChB,MAAM8vC,EAAyB78D,KAAKikE,oBACpCjkE,KAAK46C,MACL56C,KAAK6kE,KAAO,EACZ7kE,KAAK4kC,KAAO,EACZ5kC,KAAK6lC,KAAO,EACZ7lC,KAAKwmE,oBAAsB3J,EAC3B78D,KAAKymE,iBAAkB,EAGK,GAAxBzmE,KAAKkoE,iBAAwBloE,KAAK46C,KAAO56C,KAAK+sB,KAAKwtB,UAAYv6C,KAAK+sB,KAAKytB,aACzEx6C,KAAK46C,IAAM56C,KAAK+sB,KAAKwtB,UACjBv6C,KAAKkoE,gBAAkB,GAAGloE,KAAKkoE,kB,CAuCpC,UAAA7D,CAAW8F,EAA2BC,EAA2B4C,EAA4BC,GAAoB,GACpH,GAAiB,MAAbjtE,KAAK+sB,KAAc,CACnB,IAAK,IAAIliB,EAAY,EAAGA,EAAImiE,EAAoBniE,IAC5Cs/D,EAAYt/D,GAAK,EACjBu/D,EAAYv/D,GAAK,EAGrB,YADA7K,KAAKuqE,iBAER,CAED,MAAMx9C,EAAa/sB,KAAK+sB,KACxB/sB,KAAK+sB,KAAK+rB,YAAc,EACxB94C,KAAK+sB,KAAKgsB,aAAe,EAEzB,IAAI8jB,EAAyB78D,KAAKikE,oBAC9BsD,GAAiB,GAGjBvnE,KAAKwmE,qBAAuB,GAAKxmE,KAAKwmE,oBAAsB3J,KAC5D78D,KAAKwmE,oBAAsB3J,EAC3B78D,KAAKymE,iBAAkB,GAEvBwG,IACIjtE,KAAK6kE,MAAQ93C,EAAK4Z,cAClB3mC,KAAK6kE,KAAO,EACZ7kE,KAAK4kC,KAAO,EACZ5kC,KAAK6lC,KAAO,EACZ7lC,KAAKwmE,oBAAsB3J,EAC3B78D,KAAKymE,iBAAkB,EAEvBzmE,KAAK0mE,QAAU1mE,KAAK46C,IACpB56C,KAAK46C,IAAM56C,KAAK8sE,aACZ9sE,KAAK46C,KAAO56C,KAAK0mE,SAAW1mE,KAAKkoE,gBAAkB,GAAGloE,KAAKkoE,mBAG/DloE,KAAK46C,KAAO7tB,EAAKoJ,WACjBn2B,KAAK46C,IAAM,GACkB,GAAzB56C,KAAKkoE,kBACLX,GAAQ,EACRvnE,KAAK2rE,WAOjB3rE,KAAK8jE,iBAEsC,MAAvC9jE,KAAK6pE,gCAA0C7pE,KAAK6pE,+BAA+BhnE,OAASmqE,KAC5FhtE,KAAK6pE,+BAAiC,IAAI7+D,aAAagiE,IAI3D,MAAMrrD,GAAkB3hB,KAAK2hB,OACvB42B,EAAqB,EAAMptC,KAAKiB,IAAI,GAAK,EAAMpM,KAAKwrD,kBACpDhT,EAAoB,EAAMrtC,KAAKiB,IAAI,GAAK,IAASpM,KAAKwrD,kBAC5D,IAAIoe,GAAiB5pE,KAAK4pE,MACtBsD,EAAc,GACdC,GAA2B,EAG3BC,EAAsB,EAC1B,KAAOA,EAAcJ,IAAuBzF,GAAO,CAE/CvnE,KAAKgpE,QAAUhpE,KAAK8sE,aAChB9sE,KAAKgpE,SAAWj8C,EAAKoJ,WAAUn2B,KAAKgpE,QAAU,MAElD,MAAMqE,EAA8BL,EAAqBI,EACnDE,EAA4BniE,KAAKgS,KAAKnd,KAAKwmE,qBAC3C+G,EAAoBpiE,KAAKoC,IAAI+/D,EAAmBD,GAChDG,EAAiBJ,EAAcG,EAGrC,GAAIvtE,KAAKokE,eAAiBpkE,KAAK8oE,cAC3B,IAAK,IAAI5uB,EAAuBntB,EAAKE,kBAAoBF,EAAKG,kBAAmBgtB,EAAentB,EAAKiK,kBAAmBkjB,IAAgB,CACpI,MAAM/yB,EAAmB4F,EAAKurB,SAAS4B,GACjC6pB,EAA6B/jE,KAAKs4C,SAAS4B,GAEjDl6C,KAAKytE,4BAA4B1gD,EAAMmtB,EAAc2iB,EAAgBoQ,GAErE,IAAK,IAAIhxB,EAA0B,EAAGA,EAAkB90B,EAAQ6d,YAAYniC,OAAQo5C,IAAmB,CACnG,MAAMgP,EAAmC8Y,EAAa/+B,YAAYiX,GAElE,IAAK,IAAIpxC,EAAY,EAAGA,EAAIogD,EAAgBsM,eAAet8B,QAASpwB,IAAK,CACrE,MAAMqgD,EAAaD,EAAgBsM,eAAenqC,IAAIviB,GACtD7K,KAAK0tE,YAAY3gD,EAAMmtB,EAAc2iB,EAAgBuQ,EAAaG,EAAWriB,GAAM,GAAO,EAC7F,CACJ,CACJ,CAIL,GAAIlrD,KAAK+oE,WAAT,CAGI,IAAI4E,EAAaT,EAAY3kB,SAASvoD,KAAK46C,KAC3C,GAAI+yB,GAAcP,GAAeD,EAC7B,QAC4B,GAA5BA,IACAA,EAA0BC,GAEzBO,GACDT,EAAYniE,KAAK/K,KAAK46C,KAE1B56C,KAAK+oE,YAAa,EAClB/oE,KAAK+sE,SAGR,KAhBD,CAkBA,IAAK,IAAI7yB,EAAuB,EAAGA,EAAentB,EAAKE,kBAAoBF,EAAKG,kBAAmBgtB,IAAgB,CAC/G,MAAM/yB,EAAmB4F,EAAKurB,SAAS4B,GACjC6pB,EAA6B/jE,KAAKs4C,SAAS4B,GAE7Cl6C,KAAKymE,kBACLzmE,KAAKytE,4BAA4B1gD,EAAMmtB,EAAc2iB,EAAgBoQ,IAAajtE,KAAK6oE,kBACvF7oE,KAAK4tE,wBAAwB7gD,EAAMmtB,EAAc2iB,IAErD,IAAK,IAAI5gB,EAA0B,EAAGA,EAAkB90B,EAAQ6d,YAAYniC,OAAQo5C,IAAmB,CACnG,MAAMr9B,EAAyBuI,EAAQ6d,YAAYiX,GAC7CgP,EAAmC8Y,EAAa/+B,YAAYiX,GAElE,GAAIj8C,KAAKymE,gBAAiB,CACtB,IAAIoH,EAAsC5iB,EAAgBqM,YAAYr8B,QAAUgwB,EAAgBwM,eAAex8B,QAE/G,IAAK,IAAIpwB,EAAY,EAAGA,EAAIogD,EAAgBuM,cAAcv8B,QAASpwB,IAAK,CACpE,MAAMqgD,EAAaD,EAAgBuM,cAAcpqC,IAAIviB,GACrD,GAAIqgD,EAAKmJ,oBAAsBlpD,KAAKC,IAAIwT,EAAWk5B,mBAAoB,CACnE93C,KAAK8tE,iBAAiB7iB,EAAiBpgD,GACvCA,IACA,QACH,CACD,MAAMkjE,EAA8BF,GAA+BvsE,EAAO2Y,uBAC1Eja,KAAKguE,YAAYjhD,EAAMmtB,EAAc2iB,EAAgB3R,GAAM,EAAM6iB,GACjEF,GACH,CAEG5iB,EAAgB8L,QACX9L,EAAgB+L,UACjB/L,EAAgBsS,QAAQv9D,KAAM4e,EAAYi+C,EAAgB1xD,KAAKgS,KAAK0/C,GAAiB,KAAM3iB,EAAc+B,GAG7GgP,EAAgB+L,UAAW,EAGlC,CAED,IAAK,IAAInsD,EAAY,EAAGA,EAAIogD,EAAgBqM,YAAYr8B,QAASpwB,IAAK,CAClE,MAAMqgD,EAAaD,EAAgBqM,YAAYlqC,IAAIviB,GACnD7K,KAAKiuE,SAAS/zB,EAAckzB,EAAaG,EAAWriB,EACvD,CAED,IAAK,IAAIrgD,EAAY,EAAGA,EAAIogD,EAAgBwM,eAAex8B,QAASpwB,IAAK,CACrE,MAAMqgD,EAAaD,EAAgBwM,eAAerqC,IAAIviB,GACtD7K,KAAKiuE,SAAS/zB,EAAckzB,EAAaG,EAAWriB,EACvD,CAED,IAAK,IAAIrgD,EAAY,EAAGA,EAAIogD,EAAgBuM,cAAcv8B,QAASpwB,IAAK,CACpE,MAAMqgD,EAAaD,EAAgBuM,cAAcpqC,IAAIviB,GACrD7K,KAAKiuE,SAAS/zB,EAAckzB,EAAaG,EAAWriB,EACvD,CAEGD,EAAgB8L,OAChBjvB,GAAMomC,aAAaluE,KAAMmqE,EAAaC,EAAagD,EAAaG,EAAWtiB,GAK/E,MAAMub,EAA8BxmE,KAAKwmE,oBACnC2H,EAAqB,EAAM,EAAwBtR,EACnDuR,EAAmB,GAAO5H,EAAsB+G,GAAa1Q,EAC7DwR,GAAwBruE,KAAK6kE,KAAOvjE,EAAOwQ,aAAe9R,KAAK4kC,MAAQtjC,EAAOyQ,aAAe/R,KAAK6lC,KAClGyoC,EAA4B,EAAiBhtE,EAAOyQ,aACpDw8D,GAA2BF,EAAe,GAAK/sE,EAAOyQ,aACtDy8D,EAAwBF,GAAqBC,EAAkBD,GAAqBH,EACpFM,EAAsBH,GAAqBC,EAAkBD,GAAqBF,EACxF,IAAIM,EAA0B9vD,EAAW0D,aAEzC1D,EAAWwwB,QAAUxwB,EAAWywB,YAE5BrvC,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAc+B,KACpFyyB,EAAkB1uE,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAc+B,IAGnF,GAAnByyB,GACA9vD,EAAWwwB,QAAU,EACrBxwB,EAAWywB,YAAc,GAGzBzwB,EAAWywB,aAAiC,GAAlBq/B,GAAyBD,EAAcD,EAExE,CACJ,CAED,GAAIxuE,KAAK4oE,iBAAmB5oE,KAAK6oE,iBAC7B,GAAiB,GAAb7oE,KAAK4kC,KAAW,CAChB,IAAK5kC,KAAKupE,iBAAkB,CACxB,MAAMoF,EAAoB5hD,EAAK4Z,YAAc,GAAM5Z,EAAK4Z,YAAc,GAAK,GAAM3mC,KAAK6kE,MAAQ93C,EAAK4Z,YAAc,EAC3GioC,EAAgC,GAAb5uE,KAAK6kE,KAAa,EAAI8J,EAAU,EAAI,EACvD9kC,EAA2B,GAAb7pC,KAAK6kE,KAAa,KAAO8J,EAAU,KAAO,IACxD/gE,EAAkC,GAAb5N,KAAK6kE,KAAa,IAAO8J,EAAU,IAAO,IAC/DE,EAA2B7uE,KAAKwrD,iBAAmB3hB,EACnDxL,EAAqC,EAAVlzB,KAAK2C,GAAW+gE,EACjD7uE,KAAKwpE,0BAA4Br+D,KAAK0hB,MAAMgiD,EAAmBD,GAC/D5uE,KAAK2pE,gBAAkB,EAAMx+D,KAAK4C,IAAIswB,GACtCr+B,KAAKypE,mBAAqB77D,EAAYzC,KAAK6C,IAAIqwB,GAC/Cr+B,KAAK0pE,uBAAyB,EAE9B1pE,KAAKupE,kBAAmB,CAC3B,CACD,GAAIvpE,KAAKwpE,0BAA4B,EAAG,CACpC,MAAMjxC,EAAoBptB,KAAKoC,IAAIigE,EAAQJ,EAAcptE,KAAKwpE,2BAC9DxpE,KAAKwpE,2BAA6BjxC,EAAY60C,EAC9C,IAAK,IAAIviE,EAAYuiE,EAAaviE,EAAI0tB,EAAW1tB,IAAK,CAClDs/D,EAAYt/D,IAAM7K,KAAKypE,mBACvBW,EAAYv/D,IAAM7K,KAAKypE,mBACvB,MAAMqF,EAAwB9uE,KAAK2pE,gBAAkB3pE,KAAKypE,mBAAqBzpE,KAAK0pE,uBACpF1pE,KAAK0pE,uBAAyB1pE,KAAKypE,mBACnCzpE,KAAKypE,mBAAqBqF,CAC7B,CACJ,CACJ,MACG9uE,KAAKupE,kBAAmB,EAKhC,IAAK,IAAI1+D,EAAYuiE,EAAaviE,EAAI2iE,EAAQ3iE,IAAK,CAE/C,MAAMkkE,EAAU5E,EAAYt/D,GAAKkiB,EAAK8rB,WAAa9rB,EAAK8rB,WAClDm2B,EAAU5E,EAAYv/D,GAAKkiB,EAAK8rB,WAAa9rB,EAAK8rB,WAClDo2B,EAAeF,EAAU,GAAOA,EAAUA,EAC1CG,EAAeF,EAAU,GAAOA,EAAUA,EAC1C5jE,EAAc6jE,EAAOC,EAAOD,EAAOC,EACzClvE,KAAK+sB,KAAK+rB,YAAe94C,KAAK+sB,KAAK+rB,YAAc1tC,EAAMpL,KAAK+sB,KAAK+rB,YAAc1tC,EAE/E,MAAM+jE,IAAwB/jE,EAAM2hB,EAAK0rB,yBAA4BrtC,EAAM2hB,EAAK2rB,gBAE1E02B,IACe,GAAdD,KAA8D,IAAvC/jE,EAAM,EAAI2hB,EAAK0rB,sBAA8B,KAAQ1rB,EAAK4rB,iBAAmB,MAAQ,EAAI5rB,EAAK4rB,mBACnG,OAAF,GAAdw2B,MACc,GAAdA,IAAqB,OAAS/jE,EAAM,EAAI2hB,EAAK2rB,gBAAkB3rB,EAAK6rB,YAAc,EAAI7rB,EAAK2rB,kBAEpGkxB,IAAWwF,EAAcxF,IAAUA,EAAQwF,EAAc52B,EAAYD,GACrE,MAAM82B,EAAgB1tD,GAAUioD,GAAS,EAAY,KAARA,EAAuB,GAARA,EAAc,KAC1EO,EAAYt/D,GAAKkkE,EAAUM,EAC3BjF,EAAYv/D,GAAKmkE,EAAUK,EAE3BrvE,KAAK+sB,KAAKgsB,aAAgB/4C,KAAK+sB,KAAKgsB,aAAe3tC,EAAMikE,EAAgBrvE,KAAK+sB,KAAKgsB,aAAe3tC,EAAMikE,CAC3G,CAMD,GAJAjC,GAAeG,EAEfvtE,KAAKymE,iBAAkB,EACvBzmE,KAAKwmE,qBAAuB+G,EACxBvtE,KAAKwmE,qBAAuB,EAAG,CAC/BxmE,KAAKymE,iBAAkB,EAIvB,IAAK,MAAM1C,KAAgB/jE,KAAKs4C,SAC5B,IAAK,MAAM2S,KAAmB8Y,EAAa/+B,YAAa,CACpD,IAAK,IAAIn6B,EAAY,EAAGA,EAAIogD,EAAgBuM,cAAcv8B,QAASpwB,IAAK,CACpE,MAAMqgD,EAAaD,EAAgBuM,cAAcpqC,IAAIviB,GACjDqgD,EAAKkJ,cACLp0D,KAAK8tE,iBAAiB7iB,EAAiBpgD,GACvCA,KAEAqgD,EAAKmJ,oBAEZ,CACGpJ,EAAgBkM,yBAChBlM,EAAgBoS,aAEpBpS,EAAgBgM,sBAAuB,CAC1C,CAIL,IAAK,IAAI9vC,EAAkB,EAAGA,EAAUnnB,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmB/F,IAC/F,IAAK,IAAI49C,EAAwB,EAAGA,EAAgB/kE,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAYniC,OAAQkiE,IAAiB,CACjH,IAAInmD,EAAyB5e,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAY+/B,GACjEuK,EAA2B1wD,EAAWsD,cACtCliB,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,aAAaF,MAAOqiB,EAAS49C,IAC3EuK,EAAmBtvE,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,aAAaF,MAAOqiB,EAAS49C,GAAe,GACzGp9C,OAAO4nD,UAAUD,GACjB1wD,EAAW0wB,SAAWhuC,EAAOgU,cAAcg6D,GAG3C1wD,EAAW0wB,UAAY,EAAKggC,EAAmB,GAAMhuE,EAAOgU,cAAcnK,KAAK0hB,MAAMyiD,IAAsBA,EAAmB,EAAKhuE,EAAOgU,cAAcnK,KAAKgS,KAAKmyD,KAItK1wD,EAAW0wB,SAAWhuC,EAAOgU,cAAcg6D,EAElD,CAIL,IAAK,IAAInoD,EAAkB,EAAGA,EAAUnnB,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmB/F,IAC/F,IAAK,IAAI49C,EAAwB,EAAGA,EAAgB/kE,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAYniC,OAAQkiE,IAAiB,CACjH,IAAInmD,EAAyB5e,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAAY+/B,GACpC,MAA7BnmD,EAAWmhD,eACXnhD,EAAWkhD,iBAAmBlhD,EAAWmhD,eAEzCnhD,EAAWkhD,iBAAmBlhD,EAAWW,SAEV,MAA/BX,EAAWslD,iBACXtlD,EAAW00C,mBAAqB10C,EAAWslD,iBAE3CtlD,EAAW00C,mBAAqB10C,EAAWgC,UAElD,CAGL5gB,KAAK6lC,OACL7lC,KAAKwmE,qBAAuB3J,EACxB78D,KAAK6lC,MAAQvkC,EAAOyQ,eACpB/R,KAAK6lC,KAAO,EACZ7lC,KAAK4kC,OACL5kC,KAAKqoE,oBAEDroE,KAAK4kC,MAAQtjC,EAAOwQ,eACpB9R,KAAK4kC,KAAO,EAERqoC,IACAjtE,KAAK6kE,OACD7kE,KAAK6kE,MAAQ93C,EAAK4Z,cAElB3mC,KAAK6kE,KAAO,EAER7kE,KAAK6oE,iBACL7oE,KAAK6oE,kBAAmB,GAExB7oE,KAAK0mE,QAAU1mE,KAAK46C,IACpB56C,KAAK46C,IAAM56C,KAAK8sE,aACZ9sE,KAAK46C,KAAO56C,KAAK0mE,SAAW1mE,KAAKkoE,gBAAkB,GAAGloE,KAAKkoE,kBAE3DloE,KAAK46C,KAAO7tB,EAAKoJ,WACjBn2B,KAAK46C,IAAM,GACkB,GAAzB56C,KAAKkoE,kBACLX,GAAQ,EACRvnE,KAAK6rE,eACL7rE,KAAK2rE,cAQpC,CAGD,IAAK,IAAIM,EAAkB,EAAGA,EAAU3qE,EAAOob,WAAW7Z,OAAQopE,IACpC,MAAtBjsE,KAAK0kE,eAAwD,MAA/B1kE,KAAK0kE,cAAcuH,KACjDjsE,KAAKykE,UAAUwH,GAAWjsE,KAAK0kE,cAAcuH,IAIjDjsE,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAkB,MAAEF,SACvD+3D,EAAiB78D,KAAKikE,oBACtBjkE,KAAKwmE,oBAAsBr7D,KAAKoC,IAAIvN,KAAKwmE,oBAAqB3J,IAKlE,IAAK,IAAI11C,EAAkB,EAAGA,EAAUnnB,KAAK+sB,KAAKE,kBAAmB9F,IACjE,IAAK,IAAIvI,KAAc5e,KAAK+sB,KAAKurB,SAASnxB,GAAS6d,YAC/CpmB,EAAWywB,YAAezwB,EAAWywB,aAAe/tC,EAAO6T,aAAayJ,EAAW2D,aAAalN,QAAU/T,EAAOyQ,aAAe8qD,EAAiB78D,KAAKwrD,mBACtJ5sC,EAAW0wB,QAAW1wB,EAAW0wB,SAAW,KAAOhuC,EAAO0Q,kBAIlE,IAAK,IAAIi6D,EAAkB,EAAGA,EAAU3qE,EAAOob,WAAW7Z,OAAQopE,IAC9D,IAAK,IAAI9kD,EAAkB,EAAGA,EAAUnnB,KAAK+sB,KAAKE,kBAAoBjtB,KAAK+sB,KAAKG,kBAAmB/F,IAC/F,IAAK,IAAIvI,EAAqB,EAAGA,EAAa5e,KAAK+sB,KAAKgtB,8BAA+Bn7B,IACtD,MAAzB5e,KAAK4kE,kBAA8D,MAAlC5kE,KAAK4kE,iBAAiBz9C,IAAkE,MAA9CnnB,KAAK4kE,iBAAiBz9C,GAASvI,IAA8E,MAAvD5e,KAAK4kE,iBAAiBz9C,GAASvI,GAAYqtD,KAC5KjsE,KAAK2kE,aAAax9C,GAASvI,GAAYqtD,GAAWjsE,KAAK4kE,iBAAiBz9C,GAASvI,GAAYqtD,GA9Q5G,CAmRJ,GAGItkD,OAAO6nD,SAAS5F,IAAUz+D,KAAKC,IAAIw+D,GAASzpC,MAASypC,EAAQ,GAClE5pE,KAAK4pE,MAAQA,EAETqD,IAAajtE,KAAK6oE,mBAClB7oE,KAAKsmE,oBAAsBtmE,KAAK6lC,KAAO,EAAM7lC,KAAKwmE,oBAAsB3J,GAAkB,EAAM78D,KAAK4kC,MAAQtjC,EAAOwQ,aAAe9R,KAAK6kE,MAAQ93C,EAAK4Z,YAAc3mC,KAAK46C,I,CAoBxK,QAAA60B,CAASvkB,GACblrD,KAAKqpE,SAASzuC,SAASswB,E,CAGnB,OAAAwkB,GACJ,GAAI1vE,KAAKqpE,SAASpuC,QAAU,EAAG,CAC3B,MAAMiwB,EAAalrD,KAAKqpE,SAASvuC,UAEjC,OADAowB,EAAKiJ,kBAAmB,EACjBjJ,CACV,CACD,OAAO,IAAI4I,E,CAGP,WAAA6b,CAAY1kB,EAAkCC,GAClDD,EAAgBuM,cAAc98B,UAAUwwB,GACxCA,EAAKyG,aAAc,EACnBzG,EAAK+G,iBAAkB,C,CAGnB,gBAAA6b,CAAiB7iB,EAAkC2kB,GACvD5vE,KAAKyvE,SAASxkB,EAAgBuM,cAAcpqC,IAAIwiD,IAChD3kB,EAAgBuM,cAAct8B,OAAO00C,E,CAGlC,YAAA9D,GACH,IAAK,MAAM/H,KAAgB/jE,KAAKs4C,SAC5B,IAAK,MAAM2S,KAAmB8Y,EAAa/+B,YAAa,CACpD,KAAOimB,EAAgBqM,YAAYr8B,QAAU,GAAGj7B,KAAKyvE,SAASxkB,EAAgBqM,YAAYx8B,WAC1F,KAAOmwB,EAAgBsM,eAAet8B,QAAU,GAAGj7B,KAAKyvE,SAASxkB,EAAgBsM,eAAez8B,WAChG,KAAOmwB,EAAgBuM,cAAcv8B,QAAU,GAAGj7B,KAAKyvE,SAASxkB,EAAgBuM,cAAc18B,WAC9F,KAAOmwB,EAAgBwM,eAAex8B,QAAU,GAAGj7B,KAAKyvE,SAASxkB,EAAgBwM,eAAe38B,UACnG,C,CAID,uBAAA8yC,CAAwB7gD,EAAYmtB,EAAsB2iB,GAC9D,MAAM11C,EAAmB4F,EAAKurB,SAAS4B,GACjC6pB,EAA6B/jE,KAAKs4C,SAAS4B,GAC3CrW,EAAoB7jC,KAAKuoE,iBAE/B,IAAK,IAAItsB,EAA0B,EAAGA,EAAkB90B,EAAQ6d,YAAYniC,OAAQo5C,IAAmB,CACnG,MAAMgP,EAAmC8Y,EAAa/+B,YAAYiX,GAC5D4zB,EAAwB5kB,EAAgBwM,eAC9C,IAAIqY,EAAoB,EACxB,GAAI9vE,KAAKqoE,kBAAoB,GAAKnuB,GAAgBl6C,KAAKwoE,kBAAoB3kC,EAAQhhC,OAAS,IAA4D,GAAvD7C,KAAKyoE,qBAAqBxsC,QAAQggB,GAAwB,CACvJ,MAAMr9B,EAAyBuI,EAAQ6d,YAAYiX,GAEnD,GAAIr9B,EAAWgyB,WAAWz5B,WAAY,CAClC,IAAI+zC,EACA2kB,EAAS50C,SAAW60C,GACpB5kB,EAAOlrD,KAAK0vE,UACZG,EAASj1C,SAASswB,KACVtsC,EAAWg5B,gBAAgBjjC,YAAc3U,KAAKsoE,kBACtDtoE,KAAK2vE,YAAY1kB,EAAiB4kB,EAASziD,IAAI0iD,IAC/C5kB,EAAOlrD,KAAK0vE,UACZG,EAASxrE,IAAIyrE,EAAW5kB,IAExBA,EAAO2kB,EAASziD,IAAI0iD,GAExBA,IAEA,IAAK,IAAIjlE,EAAY,EAAGA,EAAIg5B,EAAQhhC,OAAQgI,IACxCqgD,EAAKrnB,QAAQh5B,GAAKg5B,EAAQh5B,GAE9BqgD,EAAK18C,WAAaq1B,EAAQhhC,OAC1BqoD,EAAK6I,UAAY,EACjB7I,EAAKjP,gBAAkBA,EACvBiP,EAAKhmB,KAAOgmB,EAAK2H,SAAW3H,EAAK4H,SAAW,KAC5C5H,EAAKyG,YAAc3xD,KAAKsoE,iBACxBpd,EAAK0G,sBAAuB,EAC5B1G,EAAK6H,oBAAqB,EAC1B/yD,KAAKguE,YAAYjhD,EAAMmtB,EAAc2iB,EAAgB3R,GAAM,GAAO,EACrE,KAAM,CAGHlrD,KAAK+vE,oCAAoCF,EAAUhsC,GAEnD,IAAK,IAAIh5B,EAAY,EAAGA,EAAIg5B,EAAQhhC,OAAQgI,IAAK,CAG7C,IAAIqgD,EACyC,MAAzClrD,KAAKspE,sBAAsBwG,IAC3B5kB,EAAOlrD,KAAKspE,sBAAsBwG,GAClC9vE,KAAKspE,sBAAsBwG,GAAa,KACjB,GAAnB5kB,EAAK18C,YAAmB08C,EAAKrnB,QAAQ,IAAMA,EAAQh5B,KACnD7K,KAAK2vE,YAAY1kB,EAAiBC,GAClCA,EAAOlrD,KAAK0vE,WAEhBG,EAASj1C,SAASswB,KAElBA,EAAOlrD,KAAK0vE,UACZG,EAASj1C,SAASswB,IAEtB4kB,IAEA5kB,EAAKrnB,QAAQ,GAAKA,EAAQh5B,GAC1BqgD,EAAK18C,WAAa,EAClB08C,EAAK6I,UAAYlwB,EAAQhhC,OACzBqoD,EAAKjP,gBAAkBA,EACvBiP,EAAKhmB,KAAOgmB,EAAK2H,SAAW3H,EAAK4H,SAAW,KAC5C5H,EAAKyG,YAAc3xD,KAAKsoE,iBACxBpd,EAAK0G,sBAAuB,EAC5B1G,EAAK6H,oBAAqB,EAC1B/yD,KAAKguE,YAAYjhD,EAAMmtB,EAAc2iB,EAAgB3R,GAAM,GAAO,EACrE,CACJ,CACJ,CAED,KAAO2kB,EAAS50C,QAAU60C,GACtB9vE,KAAK2vE,YAAY1kB,EAAiB4kB,EAAS/0C,WAG/C96B,KAAKgwE,2BAA2BF,EAAW7kB,EAC9C,CAEDjrD,KAAKsoE,kBAAmB,C,CAKpB,gDAAA2H,CAAiDljD,EAAY5F,EAAkBwzB,EAAkBu1B,EAAuBj0B,EAAyBz8B,EAAwBE,EAAcwlB,EAAYirC,EAAiBC,GACxN,GAAIrjD,EAAKqZ,qBAA4E,GAAtD8pC,EAAalrC,YAAY/I,QAAQggB,GAAwB,CAGpF,GAAItB,EAAQ3V,YAAYniC,OAAS,GAAKqtE,EAAalrC,YAAYniC,OAAS,EAGpE,OAAO,KAIX,MAAMwtE,EAA8BlpD,EAAQ6d,YAAYkrC,EAAalrC,YAAY,IAEjF,GAAIorC,EAEA,OAAOC,EAAgBz/B,WAI3B,MAAM0/B,EAA8BD,EAAgBz4B,gBACpD,OAAIp4B,EAAWzK,yBAA2Bu7D,EAAgBv7D,yBAA2Bu7D,EAAgBz7D,QAAU2K,EAAW3K,OAC/Gw7D,EAAgBz/B,WAEhB,IAEd,CAEG,OAAQw/B,GAAiB5wD,EAAWzK,wBAA2B2K,EAAQ,I,CAIxE,uCAAO6wD,CAAiCC,EAAiBC,GAC5D,GAAID,EAAU3sC,QAAQhhC,QAAU4tE,EAAW5sC,QAAQhhC,OAAQ,OAAO,EAClE,MAAM6tE,EAA4BF,EAAU1sC,KAAK0sC,EAAU1sC,KAAKjhC,OAAS,GAAGoe,SAC5E,IAAK,MAAM0iB,KAAS6sC,EAAU3sC,QAC1B,IAA8D,GAA1D4sC,EAAW5sC,QAAQ5H,QAAQ0H,EAAQ+sC,GAA0B,OAAO,EAE5E,OAAO,C,CAGH,mCAAAX,CAAoCF,EAAuBc,GAO/D,IAAK,IAAI9lE,EAAY,EAAGA,EAAIglE,EAAS50C,QAASpwB,IAAK,CAC/C,MAAMqgD,EAAa2kB,EAASziD,IAAIviB,GAC1B84B,EAAgBunB,EAAKrnB,QAAQ,GAAKqnB,EAAKqJ,aAC7C,IAAK,IAAIt6B,EAAY,EAAGA,EAAI02C,EAAY9tE,OAAQo3B,IAC5C,GAAI02C,EAAY12C,IAAM0J,EAAO,CACzB3jC,KAAKspE,sBAAsBrvC,GAAKixB,EAChC2kB,EAAS30C,OAAOrwB,GAChBA,IACA,KACH,CAER,CAGD,KAAOglE,EAAS50C,QAAU,GAAG,CACzB,MAAMiwB,EAAa2kB,EAASh1C,WAC5B,IAAK,IAAIZ,EAAY,EAAGA,EAAIj6B,KAAKspE,sBAAsBzmE,OAAQo3B,IAC3D,GAAqC,MAAjCj6B,KAAKspE,sBAAsBrvC,GAAY,CACvCj6B,KAAKspE,sBAAsBrvC,GAAKixB,EAChC,KACH,CAER,C,CAGG,2BAAAuiB,CAA4B1gD,EAAYmtB,EAAsB2iB,EAAwBoQ,GAC1F,MAAM9lD,EAAmB4F,EAAKurB,SAAS4B,GACjC6pB,EAA6B/jE,KAAKs4C,SAAS4B,GAC3CS,EAA0B5tB,EAAK48B,WAAWzP,EAAcl6C,KAAK46C,KAC7D4W,EAAsBxxD,KAAK6mE,iBAC3B+J,EAAsB5wE,KAAK6lC,KAAOvkC,EAAOyQ,aAAey/C,EAE9D,GAAIyb,GAAYlgD,EAAKqtB,gBAAgBF,GAAe,CAIhD,IAAInV,EAAyB,GACzB8rC,EAA6B,GAC7BC,EAA6B,GAC7BC,EAAoBzvE,EAAOyY,SAC/B,KAAOg3D,KACHhsC,EAAMh6B,KAAK,MACX8lE,EAAU9lE,KAAK,MACf+lE,EAAU/lE,KAAK,MAGnB,GAAe,MAAX4vC,IAAoBxzB,EAAQ+wB,MAC5B,IAAK,IAAIrtC,EAAY,EAAGA,EAAI8vC,EAAQ5V,MAAMliC,OAAQgI,IAC1C8vC,EAAQ5V,MAAMl6B,GAAGo1B,KAAOuxB,GAEsB,MAA1Cqf,EAAUl2B,EAAQ5V,MAAMl6B,GAAGg5B,QAAQ,KAAe8W,EAAQ5V,MAAMl6B,GAAGo1B,IAAO4wC,EAAUl2B,EAAQ5V,MAAMl6B,GAAGg5B,QAAQ,IAAa7D,SAC1H6wC,EAAUl2B,EAAQ5V,MAAMl6B,GAAGg5B,QAAQ,IAAM8W,EAAQ5V,MAAMl6B,IAGtD8vC,EAAQ5V,MAAMl6B,GAAGm1B,OAASwxB,GAAe7W,EAAQ5V,MAAMl6B,GAAGo1B,IAAMuxB,EACrEzsB,EAAM4V,EAAQ5V,MAAMl6B,GAAGg5B,QAAQ,IAAM8W,EAAQ5V,MAAMl6B,GAE9C8vC,EAAQ5V,MAAMl6B,GAAGm1B,MAAQwxB,IAEgB,MAA1Csf,EAAUn2B,EAAQ5V,MAAMl6B,GAAGg5B,QAAQ,KAAe8W,EAAQ5V,MAAMl6B,GAAGm1B,MAAS8wC,EAAUn2B,EAAQ5V,MAAMl6B,GAAGg5B,QAAQ,IAAa7D,SAC5H8wC,EAAUn2B,EAAQ5V,MAAMl6B,GAAGg5B,QAAQ,IAAM8W,EAAQ5V,MAAMl6B,IAMvE,IAAImmE,EAAuB,EAC3B,MAAMC,EAA8BlkD,EAAKqZ,oBAAkC,MAAXuU,EAAoBA,EAAS3V,YAAY,GAAK,EACxGimB,EAAmC8Y,EAAa/+B,YAAYisC,GAC5DpB,EAAwB5kB,EAAgBsM,eAC9C,IAAK,IAAIhyB,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAAO,CAOpD,GANkB,MAAdR,EAAMQ,KACgB,MAAlBsrC,EAAUtrC,IAAiBsrC,EAAUtrC,GAActF,KAAQ8E,EAAMQ,GAAcvF,QAAO6wC,EAAUtrC,GAAO,MACrF,MAAlBurC,EAAUvrC,IAAiBurC,EAAUvrC,GAAcvF,OAAU+E,EAAMQ,GAActF,MAAK6wC,EAAUvrC,GAAO,OAIlE,MAAzCw+B,EAAaF,0BAAoCE,EAAaF,0BAA4BoN,GAAsBlN,EAAaF,yBAA2BE,EAAa/+B,YAAYniC,OAAQ,CACzL,MAAMquE,EAAyCnN,EAAa/+B,YAAY++B,EAAaF,0BAC/EsN,EAAuCpN,EAAa/+B,YAAYisC,GACtE,KAAOC,EAAsB3Z,eAAet8B,QAAU,GAClDk2C,EAAoB5Z,eAAe78B,UAAUw2C,EAAsB3Z,eAAez8B,UAEzF,CAGD,GAFAipC,EAAaF,yBAA2BoN,EAEtB,MAAdlsC,EAAMQ,GAAc,CACpB,IAAI6rC,EAAyCP,EAAUtrC,GACnD8rC,EAAyCP,EAAUvrC,GAEnDqsB,GAAgC,EAChCmB,GAA8B,EAClC,MAAMpB,EAAwBrwD,EAAOyQ,aAAegzB,EAAMQ,GAAMvF,OAAS4wC,GAAgB5wE,KAAKymE,gBAC9F,IAAIvb,EACJ,GAAI2kB,EAAS50C,SAAW+1C,EACpB9lB,EAAOlrD,KAAK0vE,UACZG,EAASj1C,SAASswB,QACf,GAAIyG,GAA6C,MAA7Byf,EAAoC,CAC3D,MAAME,EAAgBzB,EAASziD,IAAI4jD,GAC/BM,EAAQld,aACRp0D,KAAKyvE,SAAS6B,GAEdtxE,KAAK2vE,YAAY1kB,EAAiBqmB,GAEtCpmB,EAAOlrD,KAAK0vE,UACZG,EAASxrE,IAAI2sE,EAAc9lB,EAC9B,MACGA,EAAO2kB,EAASziD,IAAI4jD,GAExBA,IAEA,IAAK,IAAInmE,EAAY,EAAGA,EAAIk6B,EAAMQ,GAAM1B,QAAQhhC,OAAQgI,IACpDqgD,EAAKrnB,QAAQh5B,GAAKk6B,EAAMQ,GAAM1B,QAAQh5B,GAE1CqgD,EAAK18C,WAAau2B,EAAMQ,GAAM1B,QAAQhhC,OACtCqoD,EAAK6I,UAAY,EACjB7I,EAAKjP,gBAAkBg1B,EACvB/lB,EAAKhmB,KAAOH,EAAMQ,GAClB2lB,EAAKuH,cAAgB1tB,EAAMQ,GAAMvF,MACjCkrB,EAAKyH,YAAc5tB,EAAMQ,GAAMtF,IAC/BirB,EAAK2H,SAAWue,EAChBlmB,EAAK4H,SAAWue,EAChBnmB,EAAK+I,mBAAqB,EAC1B/I,EAAKgJ,mBAAqB,EAC1BhJ,EAAKyG,YAAcA,EACnBzG,EAAK+G,iBAAkB,EACvB/G,EAAK0G,qBAAuBA,EAC5B1G,EAAK6H,mBAAqBA,CAC7B,CACJ,CAED,KAAO8c,EAAS50C,QAAU+1C,GAAc,CACpC,MAAM9lB,EAAa2kB,EAAS/0C,UACtB3T,EAAmB4F,EAAKurB,SAAS4B,GACvC,GAAIgR,EAAKjP,gBAAkB90B,EAAQ6d,YAAYniC,SAAWqoD,EAAKkJ,aAAc,CACzE,MAAMnJ,EAAmCjrD,KAAKs4C,SAAS4B,GAAclV,YAAYkmB,EAAKjP,iBACtFj8C,KAAK2vE,YAAY1kB,EAAiBC,EACrC,MACGlrD,KAAKyvE,SAASvkB,EAErB,CAEJ,MACI,IAAKn+B,EAAKqtB,gBAAgBF,GAAe,CAE1C,IAAIhV,EAAoB,KACpB2tB,EAAwB,KACxBC,EAAwB,KAE5B,GAAIma,GAAuB,MAAXtyB,IAAoBxzB,EAAQ+wB,SAAWl4C,KAAKqmE,aAAermE,KAAKwoE,kBAAoBtuB,GAAe,CAC/G,IAAK,IAAIrvC,EAAY,EAAGA,EAAI8vC,EAAQ5V,MAAMliC,OAAQgI,IAC9C,GAAI8vC,EAAQ5V,MAAMl6B,GAAGo1B,KAAOuxB,EACxBqB,EAAWlY,EAAQ5V,MAAMl6B,QACtB,GAAI8vC,EAAQ5V,MAAMl6B,GAAGm1B,OAASwxB,GAAe7W,EAAQ5V,MAAMl6B,GAAGo1B,IAAMuxB,EACvEtsB,EAAOyV,EAAQ5V,MAAMl6B,QAClB,GAAI8vC,EAAQ5V,MAAMl6B,GAAGm1B,MAAQwxB,EAAa,CAC7CsB,EAAWnY,EAAQ5V,MAAMl6B,GACzB,KACH,CAGO,MAARq6B,IACgB,MAAZ2tB,GAAoBA,EAAS5yB,KAAOiF,EAAKlF,QAAO6yB,EAAW,MAC/C,MAAZC,GAAoBA,EAAS9yB,OAASkF,EAAKjF,MAAK6yB,EAAW,MAEtE,CAGD,GAAe,MAAXnY,KAAqB5tB,EAAKitB,oBAAoD,GAA9B7yB,EAAQ6d,YAAYniC,QAAgBkqB,EAAKqZ,oBAAoD,GAA9BuU,EAAQ3V,YAAYniC,QAAe,CAClJ,MAAMouE,EAA6BlkD,EAAKqZ,mBAAqBuU,EAAQ3V,YAAY,GAAK,EACtF,GAA6C,MAAzC++B,EAAaF,0BAAoCE,EAAaF,0BAA4BoN,GAAsBlN,EAAaF,yBAA2BE,EAAa/+B,YAAYniC,OAAQ,CACzL,MAAMquE,EAAyCnN,EAAa/+B,YAAY++B,EAAaF,0BAC/EsN,EAAuCpN,EAAa/+B,YAAYisC,GACtE,KAAOC,EAAsB5Z,YAAYr8B,QAAU,GAC/Ck2C,EAAoB7Z,YAAY58B,UAAUw2C,EAAsB5Z,YAAYx8B,UAEnF,CACDipC,EAAaF,yBAA2BoN,CAC3C,MACGlN,EAAaF,yBAA2B,KAG5C,IAAK,IAAI5nB,EAA0B,EAAGA,EAAkB90B,EAAQ6d,YAAYniC,OAAQo5C,IAAmB,CACnG,MAAMgP,EAAmC8Y,EAAa/+B,YAAYiX,GAC5D4zB,EAAwB5kB,EAAgBqM,YAC9C,IAAIwY,EAAoB,EACxB,GAAa,MAAR5qC,KAAmBnY,EAAKqZ,qBAAyE,GAAlDuU,EAAS3V,YAAY/I,QAAQggB,IAA0B,CACvG,MAAMr9B,EAAyBuI,EAAQ6d,YAAYiX,GACnD,IAAIm1B,EAAyCve,EACzCwe,EAAyCve,EAE7C,MAAMye,EAAsBjwE,EAAOwQ,aAAeib,EAAK4Z,YACjDnnB,EAAyBZ,EAAWg5B,gBACpCl4B,EAAed,EAAWgyB,WAChC,IAAIghB,GAAgC,EAChCmB,GAA8B,EAC9Bye,EAA0B,EAC1BC,EAA0B,EAC9B,GAAkB,GAAdvsC,EAAKlF,MAAY,CAEjB,IAAI0xC,EAA+C,MAAhB1xE,KAAK0mE,QAAmB,KAAO35C,EAAK48B,WAAWzP,EAAcl6C,KAAK0mE,SACrG,GAAmB,MAAfgL,EAAqB,CACrB,MAAMC,EAAyBD,EAAY3sC,MAAMliC,QAAU,EAAK,KAAO6uE,EAAY3sC,MAAM2sC,EAAY3sC,MAAMliC,OAAS,GACpH,GAAgB,MAAZ8uE,GAAoBA,EAAS1xC,KAAOsxC,EAAa,CACjD,MAAMK,EAAwC1sC,EAAKnB,sBAAwB+D,GAAMyoC,iCAAiCoB,EAAUzsC,GACtH2sC,EAA4C7xE,KAAKiwE,iDAAiDljD,EAAM5F,EAASwzB,EAAU+2B,EAAaz1B,EAAiBz8B,EAAYE,EAAOwlB,EAAMysC,EAAUC,GAC/J,MAA/BC,IACAT,EAA4BO,EAC5BH,EAAkBK,EAA4B16D,WAAa,EAAIi6D,EAA0BvtC,QAAQhhC,OACjG+uD,EAAuBggB,EAE9B,CACJ,CACJ,MAAuC,MAA7BR,IACPI,EAAkB9xD,EAAMvI,WAAa,EAAIi6D,EAA0BvtC,QAAQhhC,QAE/E,GAAIqiC,EAAKjF,KAAOsxC,EAAa,CAGzB,IAAIO,EAA+C,MAAhB9xE,KAAKgpE,QAAmB,KAAOj8C,EAAK48B,WAAWzP,EAAcl6C,KAAKgpE,SACrG,GAAmB,MAAf8I,EAAqB,CACrB,MAAMtB,EAA0BsB,EAAY/sC,MAAMliC,QAAU,EAAK,KAAOivE,EAAY/sC,MAAM,GAC1F,GAAiB,MAAbyrC,GAAwC,GAAnBA,EAAUxwC,MAAY,CAC3C,MAAM+xC,EAA4CvB,EAAUzsC,sBAAwB+D,GAAMyoC,iCAAiCrrC,EAAMsrC,GAC3HqB,EAA4C7xE,KAAKiwE,iDAAiDljD,EAAM5F,EAASwzB,EAAUm3B,EAAa71B,EAAiBz8B,EAAYE,EAAOwlB,EAAMsrC,EAAWuB,GAChK,MAA/BF,IACAR,EAA4Bb,EAC5BiB,EAAkBI,EAA4B16D,WAAa,EAAIk6D,EAA0BxtC,QAAQhhC,OACjGkwD,EAAqBgf,EAE5B,CACJ,CACJ,MAAuC,MAA7BV,IACPI,EAAkB/xD,EAAMvI,WAAa,EAAIk6D,EAA0BxtC,QAAQhhC,QAG/E,GAAI6c,EAAMvI,WAAY,CAClB,MAAMw6C,EAAwBrwD,EAAOyQ,aAAemzB,EAAKlF,OAAS4wC,EAClE,IAAI1lB,EACJ,GAAI2kB,EAAS50C,SAAW60C,EACpB5kB,EAAOlrD,KAAK0vE,UACZG,EAASj1C,SAASswB,QACf,IAAIyG,IAAmBnyC,EAAW7K,YAAciK,EAAWoD,qBAAyB4vC,IAAsD,MAA7Bwf,EAUhHlmB,EAAO2kB,EAASziD,IAAI0iD,OAVgI,CACpJ,MAAMwB,EAAgBzB,EAASziD,IAAI0iD,GAC/BwB,EAAQld,aACRp0D,KAAKyvE,SAAS6B,GAEdtxE,KAAK2vE,YAAY1kB,EAAiBqmB,GAEtCpmB,EAAOlrD,KAAK0vE,UACZG,EAASxrE,IAAIyrE,EAAW5kB,EAC3B,CAGD4kB,IAEA,IAAK,IAAIjlE,EAAY,EAAGA,EAAIq6B,EAAKrB,QAAQhhC,OAAQgI,IAC7CqgD,EAAKrnB,QAAQh5B,GAAKq6B,EAAKrB,QAAQh5B,GAEnCqgD,EAAK18C,WAAa02B,EAAKrB,QAAQhhC,OAC/BqoD,EAAK6I,UAAY,EACjB7I,EAAKjP,gBAAkBA,EACvBiP,EAAKhmB,KAAOA,EACZgmB,EAAKuH,cAAgBvtB,EAAKlF,MAC1BkrB,EAAKyH,YAAcztB,EAAKjF,IACxBirB,EAAK2H,SAAWue,EAChBlmB,EAAK4H,SAAWue,EAChBnmB,EAAK+I,mBAAqB,EAC1B/I,EAAKgJ,mBAAqB,EAC1BhJ,EAAKyG,YAAcA,EACnBzG,EAAK+G,iBAAkB,EACvB/G,EAAK0G,qBAAuBA,EAC5B1G,EAAK6H,mBAAqBA,EAC1B/yD,KAAKguE,YAAYjhD,EAAMmtB,EAAc2iB,EAAgB3R,GAAM,GAAO,EACrE,KAAM,CACH,MAAM1rC,EAAyBZ,EAAWg5B,iBAEpCp4B,EAAW7K,aAAe6K,EAAW3K,QAA8B,GAApB6K,EAAMxI,YAAoB06C,IAA0BtwD,EAAOyQ,aAAemzB,EAAKlF,OAAS4wC,GAA6C,MAA7BQ,GACzJpxE,KAAK+vE,oCAAoCF,EAAU3qC,EAAKrB,SAG5D,IAAImuC,EAA2B,EAC/B,IAAK,IAAInnE,EAAY,EAAGA,EAAIq6B,EAAKrB,QAAQhhC,OAAQgI,IAAK,CAElD,IAAIonE,EAAoCT,EAAkB3mE,EAAKumE,EAA4B,KACvFc,EAAwBhtC,EACxBitC,EAAoCV,EAAkB5mE,EAAKwmE,EAA4B,KACvF5e,EAAwByf,EAAgBlyC,MAAQgyC,EAChD/f,GAA2B,EAM/B,GAAIQ,EAAgBjB,EAAa,CAC7B,KAAIqe,EAAS50C,QAAUpwB,IAAM2U,EAAW7K,YAAci9C,IAAgD,MAAvBqgB,GAS3E,MAPAE,EAAsBD,EACtBA,EAAkBD,EAClBA,EAAsB,KACtBxf,EAAgByf,EAAgBlyC,MAAQgyC,EACxC/f,GAAkB,CAKzB,CAED,IAAIU,EAAsBuf,EAAgBjyC,KACrCzgB,EAAW7K,YAAci9C,IAAgD,MAAvBugB,IACnDxf,EAAcxnD,KAAKoC,IAAIjM,EAAOwQ,aAAe9R,KAAK+sB,KAAM4Z,YAAagsB,EAAcqf,KAEjFxyD,EAAW5K,WAAcg9C,IAAgD,MAAvBqgB,IACpDD,GAAoBtyD,EAAMxI,YAG9B,MAAMy6C,EAAwBrwD,EAAOyQ,aAAe0gD,GAAiBme,EACrE,IAAI1lB,EACJ,GAA6C,MAAzClrD,KAAKspE,sBAAsBwG,GAC3B5kB,EAAOlrD,KAAKspE,sBAAsBwG,GAClC9vE,KAAKspE,sBAAsBwG,GAAa,KACxCD,EAASj1C,SAASswB,QACf,GAAI2kB,EAAS50C,SAAW60C,EAC3B5kB,EAAOlrD,KAAK0vE,UACZG,EAASj1C,SAASswB,QACf,IAAIyG,IAAkBnyC,EAAW7K,YAAei9C,IAAgD,MAAvBqgB,EAU5E/mB,EAAO2kB,EAASziD,IAAI0iD,OAVsF,CAC1G,MAAMwB,EAAgBzB,EAASziD,IAAI0iD,GAC/BwB,EAAQld,aACRp0D,KAAKyvE,SAAS6B,GAEdtxE,KAAK2vE,YAAY1kB,EAAiBqmB,GAEtCpmB,EAAOlrD,KAAK0vE,UACZG,EAASxrE,IAAIyrE,EAAW5kB,EAC3B,CAGD4kB,IAEA5kB,EAAKrnB,QAAQ,GAAKquC,EAAgBruC,QAAQh5B,GAC1CqgD,EAAK18C,WAAa,EAClB08C,EAAK6I,UAAYme,EAAgBruC,QAAQhhC,OACzCqoD,EAAKjP,gBAAkBA,EACvBiP,EAAKhmB,KAAOgtC,EACZhnB,EAAKuH,cAAgBA,EACrBvH,EAAKyH,YAAcA,EACnBzH,EAAK2H,SAAWof,EAChB/mB,EAAK4H,SAAWqf,EAChBjnB,EAAK+I,mBAAqBppD,EAC1BqgD,EAAKgJ,mBAAqBrpD,EAC1BqgD,EAAKyG,YAAcA,EACnBzG,EAAK+G,gBAAkBA,EACvB/G,EAAK0G,qBAAuBA,GAA+C,MAAvBqgB,EACpD/mB,EAAK6H,mBAAqBA,GAA6C,MAAvBof,EAChDnyE,KAAKguE,YAAYjhD,EAAMmtB,EAAc2iB,EAAgB3R,GAAM,GAAO,EACrE,CACJ,CACJ,CAED,KAAO2kB,EAAS50C,QAAU60C,GAAW,CACjC,MAAM5kB,EAAa2kB,EAAS/0C,UACtB3T,EAAmB4F,EAAKurB,SAAS4B,GACvC,GAAIgR,EAAKjP,gBAAkB90B,EAAQ6d,YAAYniC,SAAWqoD,EAAKkJ,aAAc,CACzE,MAAMnJ,EAAmC8Y,EAAa/+B,YAAYkmB,EAAKjP,iBACvEj8C,KAAK2vE,YAAY1kB,EAAiBC,EACrC,MACGlrD,KAAKyvE,SAASvkB,EAErB,CAEDlrD,KAAKgwE,2BAA2BF,EAAW7kB,EAC9C,CACJ,C,CAGG,0BAAA+kB,CAA2BF,EAAmB7kB,GAClD,IAAK,IAAIpgD,EAAYilE,EAAWjlE,EAAI7K,KAAKspE,sBAAsBzmE,OAAQgI,IAAK,CACxE,MAAMymE,EAAuBtxE,KAAKspE,sBAAsBz+D,GACzC,MAAXymE,IACIA,EAAQld,aACRp0D,KAAKyvE,SAAS6B,GAEdtxE,KAAK2vE,YAAY1kB,EAAiBqmB,GAEtCtxE,KAAKspE,sBAAsBz+D,GAAK,KAEvC,C,CAIG,QAAAojE,CAAS/zB,EAAsBkzB,EAAqBG,EAAmBriB,GAC3E,MACMD,EAD6BjrD,KAAKs4C,SAAS4B,GACKlV,YAAYkmB,EAAKjP,iBAEpC,MAA/BgP,EAAgByM,aAAqBzM,EAAgByM,YAAa13D,KAAMotE,EAAaG,EAAWriB,EAAMD,GAC1GC,EAAK0L,iBAAiBpD,gB,CAIlB,WAAAka,CAAY3gD,EAAYmtB,EAAsB2iB,EAAwBuQ,EAAqBhiB,EAA+BF,EAAYknB,EAAmBrE,GAC7J,MACMnvD,EADmBmO,EAAKurB,SAAS4B,GACAlV,YAAYkmB,EAAKjP,iBAExD,GAAiB,MAAbiP,EAAKhmB,KAAc,CACnB,MAAMmpC,EAAuBruE,KAAK4mE,kBAC5B0H,EAA4B,EAAiBhtE,EAAOyQ,aACpDw8D,GAA2BF,EAAe,GAAK/sE,EAAOyQ,aACtDy0D,EAA8BxmE,KAAKwmE,oBAGnCgI,EAAwBF,GAAqBC,EAAkBD,IAF1C,EAAM,EAAwBzR,GAGnD4R,EAAsBH,GAAqBC,EAAkBD,IAF1C,GAAO9H,EAAsBpb,GAAyByR,GAGzEpL,EAAwBnwD,EAAOyQ,aAAey8D,EAC9C3c,EAAsBvwD,EAAOyQ,aAAe08D,EAC5C5pC,EAAsBqmB,EAAKhmB,KAAKP,eAAe3kC,KAAK6mE,kBACpD3U,EAAoBhH,EAAKhmB,KAAKpB,KAAKe,EAAc,GACjDstB,EAAkBjH,EAAKhmB,KAAKpB,KAAKe,GACjCutB,GAAwBlH,EAAKhmB,KAAKlF,MAAQkyB,EAASzuB,MAAQniC,EAAOyQ,aAClEsgD,GAAsBnH,EAAKhmB,KAAKlF,MAAQmyB,EAAO1uB,MAAQniC,EAAOyQ,aAC9DugD,GAAsBb,EAAgBW,IAAiBC,EAAaD,GACpEG,GAAoBV,EAAcO,IAAiBC,EAAaD,GACtElH,EAAKzmD,WAAaytD,EAAS92B,MAAQ+2B,EAAO/2B,KAAO82B,EAAS92B,MAAQk3B,EAClEpH,EAAK8J,gBAAmB9C,EAAS92B,MAAQ+2B,EAAO/2B,KAAO82B,EAAS92B,MAAQm3B,EAAYrH,EAAKzmD,WAEzFqjC,GAAMuqC,SAASryE,KAAMotE,EAAahiB,EAAuBF,EAAMtsC,EAClE,C,CAGG,6BAAO0zD,CAAuBve,GAClC,OAAO,GAAyB,KAAjBA,EAAY,GAAY,E,CAGnC,WAAAia,CAAYjhD,EAAYmtB,EAAsB2iB,EAAwB3R,EAAYknB,EAAmBrE,GACzG,MAAM3iB,EAAgCjgD,KAAKgS,KAAK0/C,GAC1C11C,EAAmB4F,EAAKurB,SAAS4B,GACjC6pB,EAA6B/jE,KAAKs4C,SAAS4B,GAC3Ct7B,EAAyBuI,EAAQ6d,YAAYkmB,EAAKjP,iBAClDgP,EAAmC8Y,EAAa/+B,YAAYkmB,EAAKjP,iBACvEgP,EAAgB8L,OAAQ,EACxB9L,EAAgBgM,sBAAuB,EAClChM,EAAgB+L,UACjB/L,EAAgBsS,QAAQv9D,KAAM4e,EAAYi+C,EAAgBzR,EAAuBF,EAAMhR,EAAcgR,EAAKjP,iBAE9G,MAAMz8B,EAAyBZ,EAAWg5B,gBACpCl4B,EAAed,EAAWgyB,WAC1B2hC,EAA0B7yD,EAAMvI,WAAa,EAAM2wB,GAAMwqC,uBAAuBpnB,EAAK6I,WACrFxtB,EAA0BxZ,EAAKotB,kBAAkBD,GACjDs4B,EAAwBjsC,EAAiBjlC,EAAOqY,cAAgB,EAChE84D,EAAyBnxE,EAAOyQ,aAAe8qD,EAAiB78D,KAAKwrD,iBACrEknB,EAAqB,EAAM1yE,KAAKwrD,iBAChCmnB,EAAuB,EAAMrxE,EAAOwQ,aACpCu8D,EAAuBruE,KAAK4mE,kBAC5B4H,EAAwB,EAAiBltE,EAAOyQ,aAChD08D,GAAuBJ,EAAe,GAAO/sE,EAAOyQ,aACpDy/C,EAAsBxxD,KAAK6mE,iBAEjC,IAAI+L,EAA8B,EAClC1nB,EAAK0K,8BAAgC,EAOrC,IAAIid,EAA4B9E,EAC5B+E,EAAwB,EACxBC,EAAsB,EACtBC,EAA8B,EAC9BC,EAA4B,EAC5BC,EAA+BX,EAC/BY,EAA6BZ,EAE7Ba,EAAmC,GACnC7iE,EAAoBjP,EAAO+O,KAAK0c,EAAK3pB,KAAKmN,UAAajP,EAAOsY,iBAAmBmT,EAAKiV,OACtFqxC,EAAyB,EACzBC,EAAuB,GAC3B,GAAmB,GAAf10D,EAAW3J,KACXo+D,EAAiB/xE,EAAOmR,uBACpB8zB,IACAh2B,EAAYjP,EAAOkX,kBACnB66D,GAAkB,GAEtBD,EAA2B9xE,EAAOkX,kBAClC86D,EAAe,QACZ,GAAmB,GAAf10D,EAAW3J,KAClB1E,EAAYjP,EAAOkX,kBACnB66D,EAAiB/xE,EAAOoR,sBACxB0gE,EAA2B7iE,OACxB,GAAmB,GAAfqO,EAAW3J,KAElB1E,EAAYg2B,EAAiBjlC,EAAOqK,WAAWiT,EAAW+uB,WAAWp9B,UAAYA,EAAYjP,EAAOqK,WAAWiT,EAAW+uB,WAAWp9B,UAAY,GAEjJ8iE,EAAiB/xE,EAAOkR,oBACxB4gE,EAA2B7iE,EAC3B+iE,EAAehyE,EAAOqK,WAAWiT,EAAW+uB,WAAWp6B,OAAS,GAAO,QACpE,GAAmB,GAAfqL,EAAW3J,MAA4C,IAAf2J,EAAW3J,KAC1Do+D,EAAiB/xE,EAAOiR,sBACrB,GAAmB,GAAfqM,EAAW3J,KACdo+D,EAAiB/xE,EAAOgR,mBAChChR,EAAOC,UAAUqd,EAAWvd,UAAUqlD,gBACrCplD,EAAOC,UAAUqd,EAAWvd,UAAUsD,aACzC4L,GAA0I,GAArHpF,KAAKwC,KAAKrM,EAAOC,UAAUqd,EAAWvd,UAAUiB,QAAQO,OAAOvB,EAAOC,UAAUqd,EAAWvd,UAAUF,YAA7G,QAAoI,GAAKG,EAAOC,UAAUqd,EAAWvd,UAAUslD,SAI5Lp2C,IAA2I,GAArHpF,KAAKwC,KAAKrM,EAAOC,UAAUqd,EAAWvd,UAAUiB,QAAQO,OAAOvB,EAAOC,UAAUqd,EAAWvd,UAAUF,YAA7G,QAAoI,GAAKG,EAAOC,UAAUqd,EAAWvd,UAAUslD,SAI1LrlD,EAAOC,UAAUqd,EAAWvd,UAAUqD,YAAcpD,EAAOC,UAAUqd,EAAWvd,UAAUsD,aAC7F4L,EAAYA,EAAY,GAAKjP,EAAOC,UAAUqd,EAAWvd,UAAUuD,kBAE3DtD,EAAOC,UAAUqd,EAAWvd,UAAUqD,WAAapD,EAAOC,UAAUqd,EAAWvd,UAAUsD,eAClG4L,GAAa,GAAKjP,EAAOC,UAAUqd,EAAWvd,UAAUuD,wBAG1C,GAAmB,GAAfga,EAAW3J,KACtBo+D,EAAiB/xE,EAAOgR,wBACrB,GAAmB,GAAfsM,EAAW3J,KAClBo+D,EAAiB/xE,EAAOqR,6BACrB,GAAmB,GAAfiM,EAAW3J,KAClBo+D,EAAiB/xE,EAAOsR,uBACrB,GAAmB,GAAfgM,EAAW3J,KAClBo+D,EAAiB/xE,EAAOuR,+BACrB,IAAmB,GAAf+L,EAAW3J,KAMlB,MAAM,IAAI9S,MAAM,2CALhBkxE,EAAiB,EACjBD,EAA2B,EAC3BE,EAAe,EACf/iE,EAAY,CAGf,CAED,GAAK26C,EAAKyG,cAAgBnyC,EAAW7K,aAAeu2C,EAAK0G,sBAAyB1G,EAAKiJ,iBAAkB,CACrGjJ,EAAK/lB,QAED,MAAMouC,EAAiBjyE,EAAOK,gBAAgBid,EAAWvd,UAAUiB,QAAQO,OAAS,EAC9E2wE,EAAc50D,EAAW8E,oBAAsB6vD,EAK/CE,EAAa,iBACnB,IAAK,IAAI5oE,EAAI,EAAGA,EAAIvJ,EAAOgW,wBAAyBzM,IAChDqgD,EAAKyJ,OAAO9pD,GAAK+T,EAAW6E,sBAAwBtY,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIkmE,EAAYD,IAAgBroE,KAAK2L,IAAI,EAAG08D,GACjHtoB,EAAK0J,WAAW/pD,GAAK+T,EAAW6E,uBAAyB,EAAI,EAC7DynC,EAAK2J,oBAAoBhqD,GAAK,EAC9BqgD,EAAK4J,kBAAkBjqD,GAAK,EAC5BqgD,EAAK6J,4BAA4BlqD,GAAK,CAIjD,CACDqgD,EAAKiJ,kBAAmB,EAExB,IAAK,IAAItpD,EAAY,EAAGA,EAAIvJ,EAAOgW,wBAAyBzM,IACxDqgD,EAAKW,YAAYhhD,GAAK,EACtBqgD,EAAKa,iBAAiBlhD,GAAK,EAC3BqgD,EAAK+J,oBAAoBpqD,GAAK,EAC9BqgD,EAAKgK,yBAAyBrqD,GAAK,EAEvCqgD,EAAKzmD,WAAa,EAClBymD,EAAK8J,gBAAkB,EACvB,IAAK,IAAInqD,EAAY,EAAGA,EAAIvJ,EAAO+V,cAAexM,IAC9CqgD,EAAKhvC,cAAcrR,GAAKi9B,GAAM4rC,gBAAgB90D,EAAW0B,UAAUzV,GAAGqY,SAAUtE,EAAW0B,UAAUzV,GAAGwW,YAG5G,GAAI+wD,EAAU,CACV,MAAMuB,EAAkCzoB,EAAKmJ,mBACvCuf,EAAgC1oB,EAAKmJ,mBAAqB,EAChEye,EAAgBC,EAAc7nB,EAAKqJ,aACnC,MAAMhgD,EAAuBpJ,KAAKC,IAAIwT,EAAWk5B,mBACjDk7B,EAAsBlrC,GAAM6rB,sBAAsB,EAAMggB,EAA0Bp/D,GAAgBjT,EAAOwU,aACzGm9D,EAAoBnrC,GAAM6rB,sBAAsB,EAAMigB,EAAwBr/D,GAAgBjT,EAAOwU,aAEjGi4D,IACAkF,EAAoB,GAGpB/nB,EAAKmJ,mBAAqB,GAAK9/C,IAAcs+D,GAAmB,EACvE,MAAM,GAAiB,MAAb3nB,EAAKhmB,KACZ8tC,EAAsBC,EAAoB,EAC1C/nB,EAAKqJ,aAAe,EACpBrJ,EAAKmJ,mBAAqB,EAC1BnJ,EAAKoJ,sBAAwBlJ,MAC1B,CACH,MAAMlmB,EAAagmB,EAAKhmB,KAClB4tB,EAAwB5H,EAAK4H,SAE7BL,EAAwBvH,EAAKuH,cAC7BE,EAAsBzH,EAAKyH,YAG3B9tB,EAAsBK,EAAKP,eAAe6sB,GAC1CU,EAAoBhtB,EAAKpB,KAAKe,EAAc,GAC5CstB,EAAkBjtB,EAAKpB,KAAKe,GAC5B2tB,EAAwBC,EAAgBnxD,EAAOyQ,aAC/C2gD,EAAsBC,EAAcrxD,EAAOyQ,aAC3C8hE,GAAoB3uC,EAAKlF,MAAQkyB,EAASzuB,MAAQniC,EAAOyQ,aACzD+hE,GAAkB5uC,EAAKlF,MAAQmyB,EAAO1uB,MAAQniC,EAAOyQ,aAE3Dm5C,EAAKmJ,mBAAqB,EAE1B,MAAM5C,EAAwBD,EAAclwD,EAAOyQ,aAAe/R,KAAK6lC,KACjEgsB,EAAsBJ,EAAgB,EACtCsiB,EAAmCtiB,EAAgBe,EACnDwhB,EAAiCniB,EAAcW,EAC/CyhB,EAAwB9oE,KAAKoC,IAAI,GAAMkkD,EAAgBoiB,IAAaC,EAASD,IAC7EK,EAAsB/oE,KAAKoC,IAAI,GAAMskD,EAAcgiB,IAAaC,EAASD,IAO/E,GANAb,EAAsB,EACtBC,EAAoB,EACpBH,EAAgB5gB,EAASjxC,UAAYkxC,EAAOlxC,SAAWixC,EAASjxC,UAAYgzD,EAC5ElB,EAAc7gB,EAASjxC,UAAYkxC,EAAOlxC,SAAWixC,EAASjxC,UAAYizD,EAC1EhpB,EAAKqJ,aAAewe,GAEdvzD,EAAW7K,aAAeu2C,EAAK6H,oBAAmC,MAAZD,EAAkB,CAC1E,MAAMv+C,GAAwBqK,EAAWk5B,kBACzC,GAAIvjC,EAAe,EAAK,CAEpB,MAAM4/D,EAA0BzhB,EAAcF,EAC9CwgB,GAAuB7nE,KAAKoC,IAAI,GAAM4mE,EAAkBJ,GAA4Bx/D,GACpF0+D,GAAqB9nE,KAAKoC,IAAI,GAAM4mE,EAAkBH,GAA0Bz/D,GAC5Es9C,GAAeW,EAAgB2hB,IAAiBtB,GAAmB,EAC1E,CACJ,CAEJ,CAED3nB,EAAKkJ,aAAeye,EAEpB,IACIvT,EACAM,EAFAwU,EAAgCx1D,EAAWgC,WAI/C,GAAIhC,EAAWgE,eAAgB,CAE3B,MAAMyxD,EAA0Cz1D,EAAWgC,WACvB,MAAhChC,EAAWqvB,eAAe,KAC1BrvB,EAAWqvB,eAAe,GAAK,IAAInD,IACvC,MAAMwpC,EAAwC11D,EAAWqvB,eAAe,GAGxE,IAAIsxB,EAA0B3gD,EAAWkvB,oBACrC0xB,EAA0B5gD,EAAWmvB,qBACrC0xB,EAAwB7gD,EAAWkvB,oBACnC4xB,EAAwB9gD,EAAWmvB,qBACnC4xB,GAAyB,EAEzB3/D,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAcgR,EAAKjP,mBACzFsjB,EAAkBv/D,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC5HwjB,EAAgBz/D,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC1H0jB,GAAgB,GAEhB3/D,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,kBAAkBF,MAAOo1C,EAAcgR,EAAKjP,mBAC1FujB,EAAkBx/D,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,kBAAkBF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC7HyjB,EAAgB1/D,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,kBAAkBF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC3H0jB,GAAgB,GAGpB0U,EAAwB/mC,8BAA8BiyB,EAAiBC,GAAkBG,GACzF2U,EAAsBhnC,8BAA8BmyB,EAAeC,GAAgBC,GAEnFL,EAAa+U,EAAwBtpC,cAAc,GACnD60B,EAAW0U,EAAsBvpC,cAAc,GAG/CnsB,EAAWgC,WAAayzD,EACxBz1D,EAAW00C,mBAAqB+gB,CACnC,CAGD,MAAMzd,EAAqC1L,EAAK0L,iBAChDA,EAAiBrF,iBAAiB3yC,EAAY4yC,EAAalwD,EAAOyQ,aAAey8D,EAAe3R,EAAiB78D,KAAKwrD,iBAAkBN,GACxI,MAAMgG,EAA2BhG,EAAK0L,iBAAiB1F,eACjDC,EAAyBjG,EAAK0L,iBAAiBzF,aAGrD,GAFAvyC,EAAWgC,WAAawzD,EAEP,MAAblpB,EAAKhmB,MAAgB1lB,EAAW3K,OAAQ,CAExC,MAAMg+C,EAAwB3H,EAAK2H,SAC7BC,EAAwB5H,EAAK4H,SACnC,GAAgB,MAAZD,EAAkB,CAClB,MAAM0hB,EAAuB1hB,EAAShvB,QAAQqnB,EAAK+I,oBAAsBpB,EAAS/uB,KAAK+uB,EAAS/uB,KAAKjhC,OAAS,GAAGoe,SAAWiqC,EAAKrnB,QAAQ,GAGzI,GAFI+yB,EAAiBlG,iBAAgBoiB,GAAiByB,EAAe3d,EAAiB9F,qBAClF8F,EAAiBjG,eAAcoiB,GAAewB,EAAe3d,EAAiB7F,oBAC7ErxC,EAAMvI,WAAY,CACnB,MAAMq9D,EAAwB3hB,EAAShvB,QAAQhhC,OAASqoD,EAAK6I,UACzD6C,EAAiBlG,iBAAgBwiB,EAAuBprC,GAAMwqC,uBAAuBpnB,EAAK6I,UAAYygB,EAAgB5d,EAAiB9F,sBACvI8F,EAAiBjG,eAAcwiB,EAAqBrrC,GAAMwqC,uBAAuBpnB,EAAK6I,UAAYygB,EAAgB5d,EAAiB7F,mBAC1I,CACJ,CACD,GAAgB,MAAZ+B,EAAkB,CAClB,MAAMyhB,EAAuBzhB,EAASjvB,QAAQqnB,EAAKgJ,qBAAuBhJ,EAAKrnB,QAAQ,GAAKqnB,EAAKhmB,KAAKpB,KAAKonB,EAAKhmB,KAAKpB,KAAKjhC,OAAS,GAAGoe,UAGtI,GAFI21C,EAAiBhG,iBAAgBkiB,GAAiByB,EAAe3d,EAAiB5F,qBAClF4F,EAAiB/F,eAAckiB,GAAewB,EAAe3d,EAAiB3F,oBAC7EvxC,EAAMvI,WAAY,CACnB,MAAMq9D,EAAwB1hB,EAASjvB,QAAQhhC,OAASqoD,EAAK6I,UACzD6C,EAAiBhG,iBAAgBsiB,EAAuBprC,GAAMwqC,uBAAuBpnB,EAAK6I,UAAYygB,EAAgB5d,EAAiB5F,sBACvI4F,EAAiB/F,eAAcsiB,EAAqBrrC,GAAMwqC,uBAAuBpnB,EAAK6I,UAAYygB,EAAgB5d,EAAiB3F,mBAC1I,CACJ,CACJ,CAED,GAAI9hD,EAAyByP,EAAW3P,SAAU,CAC9C,IAAIo/B,EAAqB/sC,EAAO4Y,wBAAwB0E,EAAWyvB,YAAcmkC,EAC7EiC,EAAgC,EAChCC,EAA8B,EAC9B10E,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,mBACvF5N,EAAa/sC,EAAO4Y,wBAAwB5Y,EAAO4Y,wBAAwBrX,OAAS,GACpF4xE,EAAyBz0E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAAW36C,EAAuB,iBACnKozE,EAAuB10E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAAU36C,EAAuB,kBAIpKwxE,GAAiBzkC,EAFa6iB,EAAc,IAEEujB,EAC9C1B,GAAe1kC,EAFa8iB,EAAY,IAEEujB,CAC7C,CACD,GAAItlE,EAAqBwP,EAAW3P,UAAYjP,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAkB,CACrJ,MAAMiX,EAAwBhC,EAAc,IACtCkC,EAAsBjC,EAAY,IACxC,IAAIwjB,EAAyB/1D,EAAW0vB,OACpCsmC,EAAuBh2D,EAAW0vB,OAClCtuC,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAcgR,EAAKjP,mBAClF04B,EAAiB30E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAAS36C,EAAOgZ,aACpIs6D,EAAe50E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAmB,OAAEF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAAQ36C,EAAOgZ,cAEjIta,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,mBACvF04B,GAAkB,EAAI30E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC9H24B,GAAgB,EAAI50E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,IAEhI62B,GAAiBhrC,GAAM+I,cAAc,EAAmBqiB,GAAiB5xD,EAAOsY,iBAAgB,KAChGm5D,GAAejrC,GAAM+I,cAAc,EAAiBuiB,GAAe9xD,EAAOsY,iBAAgB,IAC7F,CAED,GAAIvK,EAAsBuP,EAAW3P,SAAU,CAC3C,IAAIiG,EACA2/D,EACAC,EA+BAC,EACJ,GA9BIn2D,EAAWkB,SAAWxe,EAAO0T,SAASnS,QACtCqS,EAAuC,EAA1B0J,EAAWyD,aAEpBzD,EAAWyD,cAAgB/gB,EAAOob,WAAW1X,WAAW,iBAAiB4X,YACzE1H,EAAayS,OAAOqtD,mBACxBH,EAAwBj2D,EAAWwD,aACnC0yD,EAAsBD,IAEtB3/D,EAAa5T,EAAO0T,SAAS4J,EAAWkB,SAAS5K,WACjD2/D,EAAwBvzE,EAAO0T,SAAS4J,EAAWkB,SAASlS,UAC5DknE,EAAsBD,GAGtB70E,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAcgR,EAAKjP,mBACzF/mC,EAAgI,EAAnHlV,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GACnH/mC,GAAwE,EAA1D5T,EAAOob,WAAW1X,WAAW,iBAAiB4X,YAC5D1H,EAAayS,OAAOqtD,oBAIxBh1E,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAcgR,EAAKjP,mBACzF44B,EAAwB70E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAAS,GAC3I64B,EAAsB90E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAAQ,IAQpH,MAApBiP,EAAKkK,YACL2f,EAAe7pB,EAAKkK,gBACjB,CAIH,GADA2f,EAAeF,EAFQ/sC,GAAMmtC,gBAAgBr2D,EAAY6zD,EAAiB7zD,EAAWwwB,SAC3C8hB,EAAc,IAEpDh8C,EAAa,EAAK,CAClB,MAAMggE,EAAiChgE,EAAa0hD,EAAiB9G,eACrEilB,GAAgB5pE,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,EAAK,EAAM2nE,EAAyB,GAC9E,CACJ,CAED,IAAIC,EAAiBrtC,GAAMmtC,gBAAgBr2D,EAAY6zD,EAAiB7zD,EAAWywB,aACnF,MAAM+lC,EAAkCjkB,EAAY,IACpD,GAAmB,GAAfvyC,EAAW3J,KAA4B,CACvC,IAAIogE,EAAqBP,EAAsBK,EAASC,EACxD,GAAIlgE,EAAa,EAAK,CAClB,MAAMogE,EAA+BpgE,EAAa0hD,EAAiB7G,aACnEslB,GAAclqE,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,EAAK,EAAM+nE,EAAuB,GAC1E,CAEDpqB,EAAKkK,YAAcigB,EAEnBvC,GAAiBiC,EACjBhC,GAAesC,CAClB,CACJ,CAED,IAAM71D,EAAW7K,aAAeu2C,EAAK0G,sBAA0C,MAAjB1G,EAAK2H,SAAkB,CAEjF,MAAMpzC,EAAwBb,EAAWi5B,mBACrCp4B,EAAgB,IAChBuzD,GAAuB7nE,KAAKoC,IAAI,EAAKqpD,EAAiBhH,iBAAmBnwC,GACzEwzD,GAAqB9nE,KAAKoC,IAAI,EAAKqpD,EAAiB/G,eAAiBpwC,GAE5E,CAG4C,GAAzCb,EAAW3J,MAAuD,MAArBi2C,EAAK8I,eAIlD9I,EAAK8I,aAAe9I,EAAKrnB,QAAQ,GAChB,MAAbqnB,EAAKhmB,OAAcgmB,EAAK8I,cAAgB9I,EAAKhmB,KAAKlB,oBACtDknB,EAAK8I,aAAe7oD,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOuY,UAAY,EAAGqxC,EAAK8I,gBAGxE,IAAIuhB,EAA+B3e,EAAiBtF,qCACpD,GAAKhiD,EAAyBsP,EAAW3P,SAElC,CAEH,MAAMumE,EAAoCtkB,EAAc,GAClDukB,EAAkCtkB,EAAY,GAGpD,GAAIvyC,EAAWgE,eAAgB,CAC3B,MAAM8yD,EAAgCxkB,EAAc,IAC9CykB,EAA8BxkB,EAAY,IAC1CykB,EAAgC1kB,EAAc,IAC9C2kB,EAA8B1kB,EAAY,IAEhDmO,EAAYj1B,eAAevC,GAAM+kB,4BAA6B7sD,KAAKwrD,iBAAkBgqB,EAA4BE,EAAuBE,GACxIhW,EAAUv1B,eAAevC,GAAMmlB,0BAA2BjtD,KAAKwrD,iBAAkBiqB,EAA0BE,EAAqBE,GAE5H3qB,EAAKsK,YAAY3yD,OAAS,IAAGqoD,EAAKsK,YAAY,GAAK,IAAIr2B,IAC3D+rB,EAAKsK,YAAY,GAAGz1B,6BAA6B+H,GAAM+kB,4BAA6B/kB,GAAMmlB,0BAA2B,EAAM7B,EAA6D,GAAtCkU,EAAYrqD,MAC9JsgE,GAAwBjW,EAAY/0B,4BAEpC2gB,EAAKuK,gBAAkB,CAC1B,KACI,CACD,MAAMqgB,EAAuE,MAAjCl3D,EAAW00C,mBAA8B10C,EAAW00C,mBAAqB10C,EAAWgC,WAEhI,IAAK,IAAI/V,EAAY,EAAGA,EAAIirE,EAAmB9qC,kBAAmBngC,IAAK,CACnE,MAAM6qE,EAAgCxkB,EAAe,GAAuCrmD,GACtF8qE,EAA8BxkB,EAAa,GAAuCtmD,GAClF+qE,EAAgC1kB,EAAe,GAAuCrmD,GACtFgrE,EAA8B1kB,EAAa,GAAuCtmD,GACxF,IAAIy0D,EAAiCwW,EAAmB/qC,cAAclgC,GACtE,MAAM+0D,EAA+D,MAA/BhhD,EAAWslD,kBAA4E,MAAhDtlD,EAAWslD,iBAAiBn5B,cAAclgC,GAAc+T,EAAWslD,iBAAiBn5B,cAAclgC,GAAKirE,EAAmB/qC,cAAclgC,GAGjNy0D,EAAWrqD,MAAQ2qD,EAAS3qD,OAC5BqqD,EAAaM,GAGjBN,EAAWj1B,eAAevC,GAAM+kB,4BAA6B7sD,KAAKwrD,iBAAkBgqB,EAA4BE,EAAuBE,GACvIhW,EAASv1B,eAAevC,GAAMmlB,0BAA2BjtD,KAAKwrD,iBAAkBiqB,EAA0BE,EAAqBE,GAC3H3qB,EAAKsK,YAAY3yD,QAAUgI,IAAGqgD,EAAKsK,YAAY3qD,GAAK,IAAIs0B,IAC5D+rB,EAAKsK,YAAY3qD,GAAGk1B,6BAA6B+H,GAAM+kB,4BAA6B/kB,GAAMmlB,0BAA2B,EAAM7B,EAA4D,GAArCkU,EAAWrqD,MAC7JsgE,GAAwBjW,EAAW/0B,2BACtC,CACD2gB,EAAKuK,gBAAkBqgB,EAAmB9qC,iBAC7C,CACJ,MA9CGkgB,EAAKuK,gBAAkB,EAgD3B,GAAmB,GAAf72C,EAAW3J,KAAgC,CAC3C,MAAM8gE,EAAkCn3D,EAAWoyB,mBAAmBka,EAAK8I,cAE3EuhB,GAAwB5lB,GAAiB4D,wCAAwCwiB,GAGjF,IAAIC,EAAqCrmB,GAAiBwD,gBAAgB4iB,EAAuBnf,EAAiBhH,iBAAkB+iB,EAAenE,EAAe5X,EAAiB5G,eAC/KimB,EAAmCtmB,GAAiBwD,gBAAgB4iB,EAAuBnf,EAAiB/G,eAAgB8iB,EAAelE,EAAa7X,EAAiB3G,aAG7K,GAAI2G,EAAiBlG,eAAgB,CAEjCslB,IADsBrmB,GAAiBwD,gBAAgB4iB,EAAuBnf,EAAiBvG,qBAAsBsiB,EAAenE,EAAe5X,EAAiB1G,cAC7H8lB,GAA8Bpf,EAAiB9F,mBACzF,CACD,GAAI8F,EAAiBjG,aAAc,CAE/BslB,IADsBtmB,GAAiBwD,gBAAgB4iB,EAAuBnf,EAAiBtG,mBAAoBqiB,EAAelE,EAAa7X,EAAiB1G,cAC3H+lB,GAA4Brf,EAAiB7F,iBACrF,CACD,GAAI6F,EAAiBhG,eAAgB,CAEjColB,IADsBrmB,GAAiBwD,gBAAgB4iB,EAAuB,EAAKpD,EAAenE,EAAe5X,EAAiBzG,cAC3F6lB,GAA8Bpf,EAAiB5F,mBACzF,CACD,GAAI4F,EAAiB/F,aAAc,CAE/BolB,IADsBtmB,GAAiBwD,gBAAgB4iB,EAAuB,EAAKpD,EAAelE,EAAa7X,EAAiBzG,cAC3F8lB,GAA4Brf,EAAiB3F,iBACrF,CAED,MAAMjpB,EAA4BhoC,KAAKopE,wBACvCphC,EAAM/yB,KAAI,EACV+yB,EAAMuB,KAAOF,GAAmBe,qCAAqC,IACrEpC,EAAMsB,KAAOD,GAAmBS,6BAA6B,KAE7D9B,EAAMqC,eAAevC,GAAM+kB,4BAA6B7sD,KAAKwrD,iBAAkBwqB,GAA8B,EAAMA,GAA6B,GAChJhuC,EAAMqC,eAAevC,GAAMmlB,0BAA2BjtD,KAAKwrD,iBAAkByqB,GAA4B,EAAMA,GAA2B,GACtI/qB,EAAKsK,YAAY3yD,QAAUqoD,EAAKuK,kBAAiBvK,EAAKsK,YAAYtK,EAAKuK,iBAAmB,IAAIt2B,IAClG+rB,EAAKsK,YAAYtK,EAAKuK,iBAAiB11B,6BAA6B+H,GAAM+kB,4BAA6B/kB,GAAMmlB,0BAA2B,EAAM7B,GAAuB,GACrKF,EAAKuK,iBACR,CAID,GAFA8f,EAAuBpqE,KAAKoC,IAAI,EAAKgoE,GAElB,GAAf32D,EAAW3J,MAA4C,IAAf2J,EAAW3J,KAA8B,CAGjF,IAAIihE,EAA8B,EAC9BC,EAAiC,EAEjCC,EAA2B,EAC/B,MAAMn/D,EAAuByI,EAAMzI,YACnC,GAAIi0C,EAAK18C,WAAa,GAAKyI,EAAa,CACpC,MAAMvI,EAAmBvD,KAAK0hB,MAAMjO,EAAW0wB,QAAUhuC,EAAO0Q,kBAChEokE,EAAmBlrB,EAAKrnB,QAAQt1B,EAAsB28C,EAAK18C,WAAYoQ,EAAWqD,eAAgBvT,IAAaw8C,EAAKrnB,QAAQ,EAC/H,CAGD,MAAMrsB,EAA+D,IAAvCoH,EAAW3J,KAA+B2J,EAAWswB,gBAAgB13B,aAAelW,EAAOiW,WAAWqH,EAAWuB,WAAW3I,aAC1J,IAAK,IAAI3M,EAAY,EAAGA,GAA4C,IAAvC+T,EAAW3J,KAA8B,EAAI3T,EAAO+V,eAAgBxM,IAAK,CAElG,MAAMwrE,EAAyE,IAAvCz3D,EAAW3J,KAA+B2J,EAAWswB,gBAAgBz3B,kBAAkB5M,GAAG,EAAEvJ,EAAOiW,WAAWqH,EAAWuB,WAAW1I,kBAAkB5M,GAAK,EAC7L84B,EAAgBunB,EAAKrnB,QAAQ5sB,EAAc,EAAMpM,EAAIqgD,EAAK18C,WAAc3D,EAAMwrE,EAAyBnrB,EAAK18C,WAAc6nE,EAAyB,GACnJ/rC,EAAWhpC,EAAOwW,oBAAoB8G,EAAW0B,UAAUzV,GAAG0V,WAAWxI,KACzEkJ,EAAW3f,EAAOsW,wBAAwBy+D,GAA0BD,EACpEE,EAAqB/lE,GAAaozB,EAAQmvC,GAAiBN,EAAgBvxD,EAC3Es1D,EAAmBhmE,GAAaozB,EAAQovC,GAAeP,EAAgBvxD,EACvEu1D,EAAwB9oC,GAAW0J,mBAAmBk/B,GACtDG,EAAsB/oC,GAAW0J,mBAAmBm/B,GACpDv+D,EAAmB1W,EAAOwW,oBAAoB8G,EAAW0B,UAAUzV,GAAG0V,WAAWvI,SACjF0+D,EAA0BpsC,EAAWksC,EAAgBx+D,EACrD2+D,EAAwBrsC,EAAWmsC,EAAcz+D,EAGjD4+D,EAA4B1lB,EAAe,EAA0CrmD,GACrFgsE,EAA0B1lB,EAAa,EAA0CtmD,GACvF,IAAIi0D,EACAC,EACqB,GAArB6X,GAA+C,GAAnBC,GAC5B/X,EAAY3zD,KAAKiB,IAAI,EAAKjB,KAAKwC,KAAK+oE,EAAkBF,GAAiBI,GAAqBJ,EAC5FzX,EAAU5zD,KAAKiB,IAAI,EAAKjB,KAAKwC,KAAKgpE,EAAgBF,GAAeI,GAAmBJ,IAEpF3X,EAAY4X,EACZ3X,EAAU4X,GAEdzrB,EAAKW,YAAYhhD,GAAKi0D,EAAY4T,EAClCxnB,EAAKa,iBAAiBlhD,GAAKM,KAAKiB,IAAI2yD,EAAUD,EAAW,EAAM1T,GAE/D,IAAI0rB,EAAyBl4D,EAAW0B,UAAUzV,GAAG+C,UACjDmpE,EAAuBn4D,EAAW0B,UAAUzV,GAAG+C,UAC/C/C,EAAI,EACA7K,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAQ+F,EAAGqvC,EAAcgR,EAAKjP,mBAC3F66B,GAAkB92E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAQ+F,EAAGqvC,EAAcgR,EAAKjP,iBAAiB,GAAS,GACvI86B,GAAgB/2E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAQ+F,EAAGqvC,EAAcgR,EAAKjP,iBAAiB,GAAQ,IAGpIj8C,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAQ+F,EAAE,EAAGqvC,EAAcgR,EAAKjP,mBAC7F66B,GAAkB92E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAQ+F,EAAE,EAAGqvC,EAAcgR,EAAKjP,iBAAiB,GAAS,GACzI86B,GAAgB/2E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAQ+F,EAAE,EAAGqvC,EAAcgR,EAAKjP,iBAAiB,GAAQ,IAI9I,MAAM+6B,EAA8BlvC,GAAMo+B,uBAAuB4Q,GAC3DG,EAA4BnvC,GAAMo+B,uBAAuB6Q,GAI/D,IAAIG,EAH+BF,EAAsB11E,EAAOwW,oBAAoB8G,EAAW0B,UAAUzV,GAAG0V,WAAWtI,cAInHk/D,EAH6BF,EAAoB31E,EAAOwW,oBAAoB8G,EAAW0B,UAAUzV,GAAG0V,WAAWtI,cAMnH,GAAIpN,EAAI2M,EAAc,CAElB,IAAI4/D,EAEAA,EADgC,MAAhClsB,EAAKiK,qBAAqBtqD,GACHqgD,EAAKiK,qBAAqBtqD,GAE1BM,KAAKiB,IAAI,IAAOkqE,EAAalD,GAA4BE,GAEpF,MAAM+D,EAA6BlsE,KAAKiB,IAAI,IAAOmqE,EAAWnD,GAA4BE,GAC1FpoB,EAAKiK,qBAAqBtqD,GAAKwsE,EAC/BH,GAAmBE,EACnBD,GAAiBE,EAEjBlB,GAA0Bc,CAC7B,MAEGC,GAA2C,IAAxB51E,EAAO6M,eAC1BgpE,GAAyC,IAAxB71E,EAAO6M,eAExB+nE,GAAuB,EAAM/qE,KAAKoC,IAAI,EAAKqR,EAAW0B,UAAUzV,GAAG+C,UAAY,IAWnF,GARAspE,GAAmBhmB,EAAe,GAA0CrmD,GAC5EssE,GAAiBhmB,EAAa,GAA0CtmD,GAOpE7K,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAkB,CAEzG,MAAMkkB,EAAmBngE,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC3HmkB,EAAiBpgE,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC/Hi7B,GAAqB/W,GAAY,GAAOA,EAAW7+D,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM+xB,GAAMm4B,6BAA6BE,GAC5IgX,GAAmB/W,GAAU,GAAOA,EAAS9+D,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM+xB,GAAMm4B,6BAA6BG,EACzI,CAEDlV,EAAK+J,oBAAoBpqD,GAAKqsE,EAC9BhsB,EAAKgK,yBAAyBrqD,IAAMssE,EAAgBD,GAAmB9rB,CAE1E,CAED8qB,IAAwB/qE,KAAKiB,IAAI,EAAM,EAAM,IAAMwS,EAAWyB,kBAAoB,IAAS,GAAO,EAClG61D,GAAuB,EAAM/qE,KAAKoC,IAAI,EAAKpC,KAAK2L,IAAI,EAAKq/D,EAAyB,GAAK,GACvFD,EAAsB,EAA4B,EAAtBA,EAC5B,MAAMgB,EAA0B7D,EAAiB6C,EAAsBX,EAAuBvC,EAAsBE,EAAuBhiB,EAAc,GACnJimB,EAAwB9D,EAAiB6C,EAAsBX,EAAuBtC,EAAoBE,EAAqBhiB,EAAY,GACjJjG,EAAKzmD,WAAayyE,EAClBhsB,EAAK8J,iBAAmBmiB,EAAgBD,GAAmB9rB,EAG3D,IAAIksB,EAAoC14D,EAAWyB,kBAC/Ck3D,EAAkC34D,EAAWyB,kBAC7CrgB,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,mBACvFq7B,GAA6Bt3E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAAS,GAC9Is7B,GAA2Bv3E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAAQ,IAG/I,IAAIu7B,EAAyD,GAAxBl2E,EAAO6M,eAAuBmpE,EAA4B,GAC/F,MAAMG,EAAuD,GAAxBn2E,EAAO6M,eAAuBopE,EAA0B,GAE7F,IAAIG,EAAwBF,EAAyBtmB,EAAc,IAC/DymB,EAAsBF,EAAuBtmB,EAAY,IAC7DjG,EAAK4K,aAAe4hB,EACpBxsB,EAAK6K,eAAiB4hB,EAAcD,GAAiBtsB,CAGxD,KAAM,CACH,MAAMwsB,EAA8BzsE,KAAKiB,IAAI,GAAO2mE,EAAcD,GAAiBN,EAAgB,GAAQpnB,GAE3G,IAAIznB,EAAgBunB,EAAKrnB,QAAQ,GACjC,GAAIqnB,EAAK18C,WAAa,IAAMkR,EAAMzI,aAAeyI,EAAM1I,gBAAiB,CACpE,MAAMtI,EAAmBvD,KAAK0hB,MAAMjO,EAAW0wB,QAAUhuC,EAAO0Q,kBAChE,GAAI0N,EAAM1I,eAAgB,CACtB,MAAM6gE,EAAyB3sB,EAAKrnB,QAAQ,EAAIt1B,EAAsB28C,EAAK18C,WAAa,EAAGoQ,EAAWqD,eAAgBvT,IAAaw8C,EAAKrnB,QAAQ,GAChJ+uC,EAAsBznE,KAAKiB,IAAI,EAAKyrE,EAAiB,IACrD3sB,EAAK0K,8BAAgCzqD,KAAKiB,IAAI,GAAMyrE,EAAiBvE,EACxE,MACG3vC,EAAQunB,EAAKrnB,QAAQt1B,EAAsB28C,EAAK18C,WAAYoQ,EAAWqD,eAAgBvT,GAE9F,CAED,MAAM+tC,EAAqBlsC,GAAaozB,EAAQmvC,GAAiBN,EAC3DsF,EAAmBvnE,GAAaozB,EAAQovC,GAAeP,EAC7D,IAAI4E,EAGAA,EADgC,MAAhClsB,EAAKiK,qBAAqB,GACHjK,EAAKiK,qBAAqB,GAE1BhqD,KAAKiB,IAAI,IAAOqwC,EAAa22B,GAA4BE,GAEpF,MAAM+D,EAA6BlsE,KAAKiB,IAAI,IAAO0rE,EAAW1E,GAA4BE,GAC1FpoB,EAAKiK,qBAAqB,GAAKkiB,EAC/B,IAAIU,EAAiC1E,EAAiBkC,EAQtD,GANmB,GAAf32D,EAAW3J,OACX8iE,GAA0Bz2E,EAAOqK,WAAWiT,EAAW+uB,WAAWlpC,YAEnD,GAAfma,EAAW3J,OACX8iE,GAA0Bz2E,EAAOC,UAAUqd,EAAWvd,UAAUoD,YAEjD,GAAfma,EAAW3J,KAA4B,CACvC,MAAM+iE,EAA4Cp5D,EAAWyC,YXh+Q3B,EAAzB/f,EAAO6X,iBWm+QhB,IAAI8+D,EAA6BD,EAC7BE,EAA2BF,EAC3Bh4E,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,mBACvFg8B,EAAsBj4E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,IAAoC,EAAzB36C,EAAO6X,iBAChJ++D,EAAoBl4E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,IAAmC,EAAzB36C,EAAO6X,kBAGjJ,MAAMg/D,EAA0BF,EAAqB/mB,EAAc,GAC7DknB,EAAwBF,EAAmB/mB,EAAY,GAC7DjG,EAAK7pC,WAAa82D,EAClBjtB,EAAKoK,iBAAmB8iB,EAAgBD,GAAmB/sB,EAG3D,IAAIitB,EAAgCz5D,EAAWiwB,cAC3C7uC,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,kBAAkBF,MAAOo1C,EAAcgR,EAAKjP,mBAC1Fo8B,EAAwBr4E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,kBAAkBF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,IAGvI,MAAMq8B,EAA6BD,EAAwBnnB,EAAc,IACzEhG,EAAKrc,cAAgBypC,EAErBptB,EAAK7pC,YAAe6pC,EAAkB,cAAI,GAC7C,CACD,GAAmB,GAAftsC,EAAW3J,KAAqC,CAEhD,IAAIsjE,EAA0B35D,EAAWmC,cACrCy3D,EAAwB55D,EAAWmC,cACnC/gB,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAoB,QAAEF,MAAOo1C,EAAcgR,EAAKjP,mBACnFs8B,EAAkBv4E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAoB,QAAEF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GACtHu8B,EAAgBx4E,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAoB,QAAEF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,IAGxHiP,EAAKuJ,mBAAqB8jB,EAC1BrtB,EAAKwJ,iBAAmB8jB,EAGxBT,GAA0B5sE,KAAKiB,IAAI,EAAK,IAAO,EAAMmsE,GAAmBj3E,EAAO6Z,mBAAqB,IAEvG,CAED,MAAMs9D,EAAoB/qC,GAAW0J,mBAAmBqF,GACxD,GAAmB,GAAf79B,EAAW3J,MAA8C,GAAf2J,EAAW3J,MAAoF,GAA3C2J,EAAW3J,MAAmD,GAAf2J,EAAW3J,KAAqC,CAG7L,MAAMs5B,EAAuB3vB,EAAW2vB,aAClCC,EAAuB5vB,EAAW4vB,aAClCC,EAAuB7vB,EAAW6vB,aAKxCspC,GAJiCn5D,EAAW8vB,kBAGS,GAAf9vB,EAAW3J,KAAuC,EAAIs5B,EAAe,GAE3G,MAAMmqC,EAAsBxnB,EAAc,GACpCynB,EAAoBxnB,EAAY,GAChCynB,EAAuBztE,KAAKiB,IAAI,GAAMqiC,EAAeD,GAAgBkqC,EAAsB,IAC3FG,EAAqB1tE,KAAKiB,IAAI,GAAMqiC,EAAeD,GAAgBmqC,EAAoB,IACvFG,EAAuB3tE,KAAKiB,IAAI,GAAMqiC,EAAeD,GAAgBkqC,EAAsB,IAAQ9F,EACnGmG,EAAqB5tE,KAAKiB,IAAI,GAAMqiC,EAAcD,GAAgBmqC,EAAoB,IAAQ/F,EACpG1nB,EAAKW,YAAY,GAAK4sB,EAAY/F,EAAakG,EAC/C1tB,EAAKW,YAAY,GAAK4sB,EAAY/F,EAAaoG,EAC/C5tB,EAAKa,iBAAiB,GAAK6rB,EAAsBzsE,KAAKiB,IAAIysE,EAAaD,EAAc,EAAMxtB,GAC3FF,EAAKa,iBAAiB,GAAK6rB,EAAsBzsE,KAAKiB,IAAI2sE,EAAaD,EAAc,EAAM1tB,EAC9F,MACGF,EAAKW,YAAY,GAAK4sB,EAAY/F,EAClCxnB,EAAKa,iBAAiB,GAAK6rB,EAG/B,IAAIV,EAA0Ba,EAAyB/E,EAAsBE,EAAuBkE,EAAuBlmB,EAAc,GACrIimB,EAAwBY,EAAyB9E,EAAoBE,EAAqBkE,EAAqBlmB,EAAY,GAG/H,GAAInxD,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAkB,CAEzG,MAAMkkB,EAAmBngE,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC3HmkB,EAAiBpgE,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAW,eAAeF,MAAOo1C,EAAcgR,EAAKjP,iBAAiB,GAC/Hi7B,GAAqB/W,GAAY,GAAOA,EAAW7+D,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM+xB,GAAMm4B,6BAA6BE,GAC5IgX,GAAmB/W,GAAU,GAAOA,EAAS9+D,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM+xB,GAAMm4B,6BAA6BG,EACzI,CAMD,GAJAlV,EAAKzmD,WAAayyE,EAClBhsB,EAAK8J,iBAAmBmiB,EAAgBD,GAAmB9rB,EAGxC,GAAfxsC,EAAW3J,KAAqC,CAChD,IAAIo2C,EACJ,GAA4B,MAAxBH,EAAKmK,gBACLhK,EAAmBH,EAAKmK,oBACrB,CACH,MAAM2jB,EAA+B9tB,EAAK0L,iBAAiB1F,eAAc,GACzE7F,EAAmB,EAAMlgD,KAAKoC,IAAI,EAAKyrE,EAAuB9tB,EAAKuJ,oBAAsBnzD,EAAO6Z,mBAAqB,GACxH,CACD,MAAM89D,EAA6B/tB,EAAK0L,iBAAiBzF,aAAY,GACrE,IAAI7F,EAAyB,EAAMngD,KAAKoC,IAAI,EAAK0rE,EAAqB/tB,EAAKwJ,kBAAoBpzD,EAAO6Z,mBAAqB,IAC3H+vC,EAAKmK,gBAAkB/J,EAGvB,MAAM/c,EAAuB3vB,EAAW2vB,aACxC,IAAK,IAAI1jC,EAAYqgD,EAAKqK,cAAc1yD,OAAQgI,EAAI0jC,EAAc1jC,IAC9DqgD,EAAKqK,cAAc1qD,GAAK,IAAIi/C,GAGhC,GAAIoB,EAAKyG,cAAgBnyC,EAAW5K,YAAcs2C,EAAK0G,qBACnD,IAAK,MAAMiF,KAAgB3L,EAAKqK,cAE5BsB,EAAarM,YAAc,EAInC,IAAK,IAAI3/C,EAAY,EAAGA,EAAI0jC,EAAc1jC,IACtCqgD,EAAKqK,cAAc1qD,GAAGmgD,OAAOhrD,KAAMirD,EAAiBC,EAAMrgD,EAAGugD,EAAuBC,EAAkBC,EAE7G,CACJ,C,CAGE,sBAAO2pB,CAAgBr2D,EAAwBs6D,GAClD,IAAIl9D,EAAiB,EACrB,IAAK,MAAMm9D,KAAwB73E,EAAO6T,aAAayJ,EAAW2D,aAAanN,eAC3E4G,GAAU7Q,KAAK6C,IAAc,EAAV7C,KAAK2C,GAAWorE,EAAiBC,GAExD,OAAOn9D,C,CAIJ,iCAAOwhD,CAA2B5+C,GACrC,GAAmB,GAAfA,EAAW3J,KAA2B,CACtC,MAAMmkE,EAAsBx6D,EAAWuB,UAAY,IAAMvB,EAAWwB,aACpE,GAA+CoN,MAA3Csa,GAAMuxC,qBAAqBD,GAA2B,CACtD,MAAME,EAAwB,GAE9B,IAAK,MAAMC,KAAQzxC,GAAM0xC,iBACrB,IAA2C,GAAvCD,EAAKt9C,QAAQ,sBAA6B,CAC1C,MAAMw9C,EAAoB,GAC1B,IAAK,IAAIx/C,EAAY,EAAGA,EAAI34B,EAAOiW,WAAWqH,EAAWuB,WAAW3I,aAAcyiB,IAC9Ew/C,EAAQ1uE,KAAK,WAAakvB,EAAI,UAElCq/C,EAAYvuE,KAAKwuE,EAAK57D,QAAQ,sBAAuB87D,EAAQ10D,KAAK,QACrE,MAAM,IAA4D,GAAxDw0D,EAAKt9C,QAAQ,uCACpB,IAAK,IAAIhC,EAAY34B,EAAO+V,cAAgB,EAAG4iB,GAAK,EAAGA,IACnD,IAAK,MAAMy/C,KAAgB5xC,GAAM6xC,uBAC7B,IAAuD,GAAnDD,EAAaz9C,QAAQ,0BAAiC,CACtD,IAAIvf,EAAa,GACjB,IAAK,MAAMk9D,KAAmBt4E,EAAOiW,WAAWqH,EAAWuB,WAAWzI,YAAYuiB,GAC9Evd,GAAc,eAAiBk9D,EAAkB,GAAK,SAG1D,MAAMC,EAAyCv4E,EAAO8W,UAAUwG,EAAWwB,cAAc/H,QAAQ4hB,GACjG,GAAI4/C,EAAgBh3E,OAAS,EAAG,CAC5B6Z,GAAc,sBACd,MAAMtE,EAAsB,GAC5B,IAAK,MAAMwhE,KAAmBC,EAC1BzhE,EAAUrN,KAAK,YAAc6uE,EAAkB,GAAK,UAExDl9D,GAActE,EAAU2M,KAAK,OAAS,GACzC,CACDu0D,EAAYvuE,KAAK2uE,EAAa/7D,QAAQ,MAAOsc,EAAI,IAAItc,QAAQ,yBAA0BjB,GAC1F,MACG48D,EAAYvuE,KAAK2uE,EAAa/7D,QAAQ,MAAOsc,EAAI,UAI1D,IAA0B,GAAtBs/C,EAAKt9C,QAAQ,KACpB,IAAK,IAAIhC,EAAY,EAAGA,EAAI34B,EAAO+V,cAAe4iB,IAC9Cq/C,EAAYvuE,KAAKwuE,EAAK57D,QAAQ,MAAOsc,EAAI,UAG7Cq/C,EAAYvuE,KAAKwuE,GAMzBzxC,GAAMuxC,qBAAqBD,GAAe,IAAIU,SAAS,QAAS,cAAe,wBAAyB,OAAQ,kBAAmBR,EAAYv0D,KAAK,MACvJ,CACD,OAAO+iB,GAAMuxC,qBAAqBD,EACrC,CAAM,GAAmB,GAAfx6D,EAAW3J,KAEd,OAAI2J,EAAWyE,4BACJykB,GAAMiyC,kBAGdjyC,GAAMkyC,UACV,GAAmB,GAAfp7D,EAAW3J,KAClB,OAAO6yB,GAAMkyC,UACV,GAAmB,GAAfp7D,EAAW3J,KAClB,OAAO6yB,GAAMmyC,eACV,GAAmB,GAAfr7D,EAAW3J,KAClB,OAAO6yB,GAAMoyC,gBACV,GAAmB,GAAft7D,EAAW3J,KAClB,OAAO6yB,GAAMqyC,kBACV,GAAmB,GAAfv7D,EAAW3J,KAClB,OAAO6yB,GAAMsyC,WACV,GAAmB,GAAfx7D,EAAW3J,KAClB,OAAO6yB,GAAMuyC,cACV,GAAmB,GAAfz7D,EAAW3J,KAClB,OAAO6yB,GAAMwyC,aACV,GAAmB,GAAf17D,EAAW3J,KAClB,OAAO6yB,GAAMuqC,SACV,GAAmB,IAAfzzD,EAAW3J,KAA8B,CAChD,MAAMmkE,EAAsBx6D,EAAWswB,gBAAgB1qC,KAAO,IAAMoa,EAAWuwB,mBAAmB3qC,KAClG,GAAgDgpB,MAA5Csa,GAAMyyC,sBAAsBnB,GAA2B,CACvD,MAAME,EAAwB,GAE9B,IAAK,MAAMC,KAAQzxC,GAAM0xC,iBACrB,IAA2C,GAAvCD,EAAKt9C,QAAQ,sBAA6B,CAC1C,MAAMw9C,EAAoB,GAC1B,IAAK,IAAIx/C,EAAY,EAAGA,EAAIrb,EAAWswB,gBAAgB13B,aAAcyiB,IACjEw/C,EAAQ1uE,KAAK,WAAakvB,EAAI,UAElCq/C,EAAYvuE,KAAKwuE,EAAK57D,QAAQ,sBAAuB87D,EAAQ10D,KAAK,QACrE,MAAM,IAA4D,GAAxDw0D,EAAKt9C,QAAQ,uCACpB,IAAK,IAAIhC,EAAY34B,EAAO+V,cAAc,EAAI,EAAG4iB,GAAK,EAAGA,IACrD,IAAK,MAAMy/C,KAAgB5xC,GAAM6xC,uBAC7B,IAAuD,GAAnDD,EAAaz9C,QAAQ,0BAAiC,CACtD,IAAIvf,EAAa,GACjB,IAAK,MAAMk9D,KAAmBh7D,EAAWswB,gBAAgBx3B,YAAYuiB,GACjEvd,GAAc,eAAiBk9D,EAAkB,GAAK,SAG1D,MAAMC,EAAyCj7D,EAAWuwB,mBAAmB92B,QAAQ4hB,GACrF,GAAI4/C,EAAgBh3E,OAAS,EAAG,CAC5B6Z,GAAc,sBACd,MAAMtE,EAAsB,GAC5B,IAAK,MAAMwhE,KAAmBC,EAC1BzhE,EAAUrN,KAAK,YAAc6uE,EAAkB,GAAK,UAExDl9D,GAActE,EAAU2M,KAAK,OAAS,GACzC,CACDu0D,EAAYvuE,KAAK2uE,EAAa/7D,QAAQ,MAAOsc,EAAI,IAAItc,QAAQ,yBAA0BjB,GAC1F,MACG48D,EAAYvuE,KAAK2uE,EAAa/7D,QAAQ,MAAOsc,EAAI,UAI1D,IAA0B,GAAtBs/C,EAAKt9C,QAAQ,KACpB,IAAK,IAAIhC,EAAI,EAAGA,EAAI34B,EAAO+V,cAAc,EAAG4iB,IACxCq/C,EAAYvuE,KAAKwuE,EAAK57D,QAAQ,MAAOsc,EAAI,UAG7Cq/C,EAAYvuE,KAAKwuE,GAMzBzxC,GAAMyyC,sBAAsBnB,GAAe,IAAIU,SAAS,QAAS,cAAe,wBAAyB,OAAQ,kBAAmBR,EAAYv0D,KAAK,MACxJ,CACD,OAAO+iB,GAAMyyC,sBAAsBnB,EACtC,CACG,MAAM,IAAIj3E,MAAM,iCAAmCyc,EAAW3J,K,CAIlE,WAAOulE,CAAK5jE,EAAW0lB,GACnB,OAAQ1lB,EAAI0lB,EAAIA,GAAKA,C,CAEzB,wBAAOy9C,CAAkBrlD,EAAc04C,EAAqBhiB,EAA+BF,EAAYD,GAMnG,MAAM7nC,EAAoB7T,EAAyB07C,EAAgBh8C,UAAYg8C,EAAgB7nC,QAEzFq3D,EAAqB/lD,EAAMm1C,+BAC3Bl/D,EAAqBsgD,EAAgBtgD,KACrCitD,EAAsB3M,EAAgB2M,YACtC7qD,EAAsBqW,GAAmC,GAAxB6nC,EAAgBh2C,KAAatK,EAAK9H,OAAS8H,EAAK9H,OAAS,EAChG,IAAI0gB,EAA0BpY,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIR,EAAYk+C,EAAgB1nC,kBAC3ED,EAA4BnY,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIgW,EAAkB,EAAG0nC,EAAgB3nC,oBAOtFo3D,EAA6Bn3D,EAAkBD,EACxDo3D,EAAqB,IACZp3D,EAAoB,EACpBC,EAAkBxW,EAClB2tE,EAAqB3tE,GAEzB,MAAMyW,EAA2BynC,EAAgBznC,iBAC3CC,EAAiCwnC,EAAgBxnC,sBACjDkrB,EAAqBuc,EAAK0K,8BAAgC3K,EAAgBtc,WAC5C,GAAhCsc,EAAgB1c,cAAsB0c,EAAgBvrC,MAAO1I,iBAC7Dk0C,EAAKyJ,OAAO,GAAKzJ,EAAKyJ,OAAO,IACjC,IAAIgmB,EAAsBzvB,EAAKW,YAAY,GAAK9+C,EAC5C6tE,EAAsB1vB,EAAKW,YAAY,GAAK9+C,EAC5C8tE,EAAqB3vB,EAAK0J,WAAW,GACrCkmB,EAAqB5vB,EAAK0J,WAAW,GACrCmmB,EAA8B7vB,EAAK2J,oBAAoB,GACvDmmB,EAA8B9vB,EAAK2J,oBAAoB,GAClC,IAArBrxC,GAA+C,IAArBA,GAA+C,IAArBA,IAK/CC,GAIDo3D,GAAc,EACdC,GAAc,IAJdD,EAAa,EACbC,EAAa,IAMI,IAArBt3D,GAA+C,IAArBA,IAK1Bu3D,EAAsB,EACtBC,EAAsB,GAE1B,IAAIC,EAAoB/vB,EAAK6J,4BAA4B,GACrDmmB,EAAoBhwB,EAAK6J,4BAA4B,GACzD,MAAMomB,EAAuC,IACvCC,GAA4BlwB,EAAKa,iBAAiB,GAClDsvB,GAA4BnwB,EAAKa,iBAAiB,GACxD,IAAItnD,GAAsBymD,EAAKzmD,WAC/B,MAAMuwD,GAA2B9J,EAAK8J,gBACtC,IAAIsmB,EAAiBxzC,GAAM0yC,KAAKtvB,EAAKyJ,OAAO,GAAI,GAAK5nD,EACjDwuE,EAAiBzzC,GAAM0yC,KAAKtvB,EAAKyJ,OAAO,GAAI,GAAK5nD,EACjDyuE,EAA4B,EAC5BC,EAA4B,EAChC,IAAKr4D,EAAS,CACV,MAAMs4D,EAAYvwE,KAAK0hB,MAAMyuD,GACvBK,EAAYxwE,KAAK0hB,MAAM0uD,GACvBK,EAAS9zC,GAAM0yC,KAAKkB,EAAW3uE,GAChC8uE,EAAS/zC,GAAM0yC,KAAKmB,EAAW5uE,GAC9B+uE,EAAcR,EAASI,EACvBK,EAAcR,EAASI,EAC7BH,GAAqB7wE,EAAKixE,GAC1BH,GAAqB9wE,EAAKkxE,GAC1BL,IAAsB7wE,EAAKm9B,GAAM0yC,KAAKoB,EAAS,EAAG7uE,IAAeyuE,GAAqBM,EACtFL,IAAsB9wE,EAAKm9B,GAAM0yC,KAAKqB,EAAS,EAAG9uE,IAAe0uE,GAAqBM,CAC1F,CACA,MAAMC,EAAU9wB,EAAKsK,YACfymB,EAA6C,EAAvB/wB,EAAKuK,gBACjC,IAAIymB,GAA+BhxB,EAAKwK,wBACpCymB,GAA+BjxB,EAAKyK,wBACxC,MAAMymB,EAAyBt0C,GAAMs0C,aAC/B7jD,EAAoB60C,EAAchiB,EACxC,IAAIixB,EAAoBnxB,EAAK4J,kBAAkB,GAC3CwnB,EAAoBpxB,EAAK4J,kBAAkB,GAC/C,IAAK,IAAIynB,EAAsBnP,EAAamP,EAAchkD,EAAWgkD,IAAe,CAC5ExB,EAAsB,GAAKA,EAAsBI,GACjDJ,IAEAC,EAAsB,GAAKA,EAAsBG,GACjDH,IAEL,IAAIwB,EAAkB,EACrBlB,GAAUX,EAAcE,EACxBU,GAAUX,EAAcE,EACC,IAArBt3D,GAEmB,IAAfq3D,EACIS,EAASvuE,IACLguE,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,IAES,IAAhB3B,GACHS,EAAS,IACLP,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,GAGC,IAAf1B,EACIS,EAASxuE,IACLiuE,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAES,IAAhB3B,GACHU,EAAS,IACLP,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAGU,IAArBh5D,GAEY,IAAfq3D,EACIS,EAAS/3D,IACLw3D,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,IAES,IAAhB3B,GACHS,EAASh4D,IACLy3D,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,GAGC,IAAf1B,EACIS,EAASh4D,IACLy3D,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAES,IAAhB3B,GACHU,EAASj4D,IACL03D,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAGU,IAArBh5D,GAEY,IAAfq3D,EACIS,EAAS/3D,IACT+3D,EAASh4D,EAAoBwkB,GAAM0yC,KAAKc,EAAS/3D,EAAiBm3D,GAElE8B,EAAU,IAES,IAAhB3B,GACHS,EAASh4D,IACTg4D,EAAS/3D,EAAkBukB,GAAM0yC,KAAKl3D,EAAoBg4D,EAAQZ,GAElE8B,EAAU,GAGC,IAAf1B,EACIS,EAASh4D,IACTg4D,EAASj4D,EAAoBwkB,GAAM0yC,KAAKe,EAASh4D,EAAiBm3D,GAElE8B,EAAU,IAES,IAAhB1B,GACHS,EAASj4D,IACTi4D,EAASh4D,EAAkBukB,GAAM0yC,KAAKl3D,EAAoBi4D,EAAQb,GAElE8B,EAAU,IAGU,IAArBh5D,IAEY,IAAfq3D,EACIS,EAAS/3D,IACT+3D,EAAS/3D,EAAkBukB,GAAM0yC,KAAKc,EAAS/3D,EAAiBm3D,GAEhEG,GAAc,EACf2B,EAAU,IAEU,IAAhB3B,GACHS,EAASh4D,IACTg4D,EAASh4D,EAAoBwkB,GAAM0yC,KAAKl3D,EAAoBg4D,EAAQZ,GAEpEG,EAAa,EACd2B,EAAU,GAGE,IAAf1B,EACIS,EAASh4D,IACTg4D,EAASh4D,EAAkBukB,GAAM0yC,KAAKe,EAASh4D,EAAiBm3D,GAEhEI,GAAc,EACd0B,EAAU,IAES,IAAhB1B,GACHS,EAASj4D,IACTi4D,EAASj4D,EAAoBwkB,GAAM0yC,KAAKl3D,EAAoBi4D,EAAQb,GAEpEI,EAAa,EACb0B,EAAU,IAItB,IAAIC,EAAQ,EACRC,EAAQ,EACRC,EAAc,EAClB,GAAIv5D,EAAS,CACTq5D,EAAQ9xE,EAAKm9B,GAAM0yC,KAAKrvE,KAAK0hB,MAAMyuD,GAASvuE,IAC5C2vE,EAAQ/xE,EAAKm9B,GAAM0yC,KAAKrvE,KAAK0hB,MAAM0uD,GAASxuE,IAC5CsvE,EAAYI,EACZH,EAAYI,EACZ,MAAME,EAA0B7B,EAAsB,GAAMI,EAA+BhwE,KAAKoC,IAAIwtE,EAAqBI,IAAiCA,EAAgC,EACpL0B,EAA0B7B,EAAsB,GAAMG,EAA+BhwE,KAAKoC,IAAIytE,EAAqBG,IAAiCA,EAAgC,EAC1LwB,EAAc,EAEVA,GADA5B,EAAsB,EACPE,EAAY2B,EAEZH,EAGfE,GADA3B,EAAsB,EACPE,EAAY2B,EAEZH,CAEtB,KACI,CACD,MAAMhB,EAAYvwE,KAAK0hB,MAAMyuD,GACvBK,EAAYxwE,KAAK0hB,MAAM0uD,GACvBK,EAAS9zC,GAAM0yC,KAAKkB,EAAW3uE,GAC/B8uE,EAAS/zC,GAAM0yC,KAAKmB,EAAW5uE,GACrC,IAAI+vE,EAAoBnyE,EAAKixE,GACzBmB,EAAoBpyE,EAAKkxE,GAC7B,MAAMC,EAAcR,EAASI,EACvBK,EAAcR,EAASI,EAG7B,GAFAmB,IAAsBnyE,EAAKm9B,GAAM0yC,KAAKoB,EAAS,EAAG7uE,IAAe+vE,GAAqBhB,EACtFiB,IAAsBpyE,EAAKm9B,GAAM0yC,KAAKqB,EAAS,EAAG9uE,IAAegwE,GAAqBhB,GAC3D,IAArBv4D,GAAgD,IAAtBF,GAA2BC,IAAoBxW,IAA2B,IAAZyvE,EAAe,CACzG,IAAIQ,EAAO,EACPC,EAAO,EACX,MAAMC,EAAU/xE,KAAK2L,IAAI,EAAGwkE,EAASX,EAAcE,GAC7CsC,EAAUhyE,KAAK2L,IAAI,EAAGykE,EAASX,EAAcE,GAC7CY,EAAYvwE,KAAK0hB,MAAMqwD,GACvBvB,EAAYxwE,KAAK0hB,MAAMswD,GACvBvB,EAAS9zC,GAAM0yC,KAAKkB,EAAW3uE,GAC/B8uE,EAAS/zC,GAAM0yC,KAAKmB,EAAW5uE,GACrCiwE,EAAOryE,EAAKixE,GACZqB,EAAOtyE,EAAKkxE,GACZmB,IAASryE,EAAKm9B,GAAM0yC,KAAKoB,EAAS,EAAG7uE,IAAeiwE,IAASE,EAAUxB,GAAab,EACpFoC,IAAStyE,EAAKm9B,GAAM0yC,KAAKqB,EAAS,EAAG9uE,IAAekwE,IAASE,EAAUxB,GAAab,EACpFU,EAAoBwB,EACpBvB,EAAoBwB,CACpC,CACoC,IAArBz5D,GAAsC,IAAZg5D,GAC1BC,EAAQJ,EACRK,EAAQJ,IAERG,GAASK,EAAoBtB,IAAsBb,EAAcE,GACjE6B,GAASK,EAAoBtB,IAAsBb,EAAcE,IAErEuB,EAAYI,EACZH,EAAYI,EACxBlB,EAAoBsB,EACpBrB,EAAoBsB,EACP,MAAMH,EAAkB7B,EAAsB,GAAMI,EAA+BhwE,KAAKoC,IAAIwtE,EAAqBI,IAAiCA,EAAgC,EAC5K0B,EAAkB7B,EAAsB,GAAMG,EAA+BhwE,KAAKoC,IAAIytE,EAAqBG,IAAiCA,EAAgC,EAE9KwB,GADA5B,EAAsB,EACPE,EAAY2B,EAEZH,EAGfE,GADA3B,EAAsB,EACPE,EAAY2B,EAEZH,EAAQ/tC,CAE9B,CACD,MAAM6gB,EAAS4sB,EAAaO,EAAc/kB,EAAaskB,EAAqBC,EAAqBF,EAAaD,GAC9GG,EAAsBD,EACtBA,EAAsBS,EAAc/kB,EACpC+iB,GAAeS,EACfR,GAAeS,EACf,MAAM+B,EAAS5tB,EAAS/qD,EACxBA,GAAcuwD,EACdylB,EAAK8B,IAAgBa,CACxB,CACDlyB,EAAKyJ,OAAO,GAAK2mB,EAASvuE,EAC1Bm+C,EAAKyJ,OAAO,GAAK4mB,EAASxuE,EAC1Bm+C,EAAKW,YAAY,GAAK8uB,EAAc5tE,EACpCm+C,EAAKW,YAAY,GAAK+uB,EAAc7tE,EACpCm+C,EAAK0J,WAAW,GAAKimB,EACrB3vB,EAAK0J,WAAW,GAAKkmB,EACrB5vB,EAAK2J,oBAAoB,GAAKkmB,EAC9B7vB,EAAK2J,oBAAoB,GAAKmmB,EAC9B9vB,EAAK4J,kBAAkB,GAAKunB,EAC5BnxB,EAAK4J,kBAAkB,GAAKwnB,EAC5BpxB,EAAK6J,4BAA4B,GAAKkmB,EACtC/vB,EAAK6J,4BAA4B,GAAKmmB,EACtChwB,EAAKzmD,WAAaA,EAClBiwB,EAAM2oD,gBAAgBrB,GACtB9wB,EAAKwK,wBAA0BwmB,EAC/BhxB,EAAKyK,wBAA0BwmB,C,CAG/B,gBAAOnC,CAAUtlD,EAAc04C,EAAqBhiB,EAA+BF,EAAYD,GACnG,MAAM7nC,EAAoB7T,EAAyB07C,EAAgBh8C,UAAYg8C,EAAgB7nC,QACzFq3D,EAAqB/lD,EAAMm1C,+BAC3Bl/D,EAAqBsgD,EAAgBtgD,KACrCitD,EAAc3M,EAAgB2M,YAE9B7qD,EAAcqW,GAAmC,GAAxB6nC,EAAgBh2C,KAAatK,EAAK9H,OAAS8H,EAAK9H,OAAS,EAGlF8rC,EAAqBuc,EAAK0K,8BAAgC3K,EAAgBtc,WAC5C,GAAhCsc,EAAgB1c,cAAsB0c,EAAgBvrC,MAAO1I,iBAAgBk0C,EAAKyJ,OAAO,GAAKzJ,EAAKyJ,OAAO,IAC9G,IAAIgmB,EAAsBzvB,EAAKW,YAAY,GAAK9+C,EAC5C6tE,EAAsB1vB,EAAKW,YAAY,GAAK9+C,EAChD,MAAMquE,GAA4BlwB,EAAKa,iBAAiB,GAClDsvB,GAA4BnwB,EAAKa,iBAAiB,GACxD,IAAItnD,GAAsBymD,EAAKzmD,WAC/B,MAAMuwD,GAA2B9J,EAAK8J,gBACtC,IAAIsmB,EAAkBpwB,EAAKyJ,OAAO,GAAK,EAAK5nD,EACxCwuE,EAAkBrwB,EAAKyJ,OAAO,GAAK,EAAK5nD,EAE5C,MAAMivE,EAAiC9wB,EAAKsK,YACtCymB,EAA6C,EAAvB/wB,EAAKuK,gBACjC,IAAIymB,GAA+BhxB,EAAKwK,wBACpCymB,GAA+BjxB,EAAKyK,wBACxC,MAAMymB,EAAyBt0C,GAAMs0C,aACrC,IAAIZ,EAA4B,EAC5BC,EAA4B,EAEhC,IAAKr4D,EAAS,CACV,MAAMs4D,EAA6B,EAATJ,EACpBK,EAA6B,EAATJ,EACpBK,EAAiBF,EAAY3uE,EAC7B8uE,EAAiBF,EAAY5uE,EAC7B+uE,EAAsBR,EAASI,EAC/BK,EAAsBR,EAASI,EACrCH,GAAqB7wE,EAAKixE,GAC1BH,GAAqB9wE,EAAKkxE,GAC1BL,IAAsB7wE,EAAKixE,EAAS,GAAKJ,GAAqBM,EAC9DL,IAAsB9wE,EAAKkxE,EAAS,GAAKJ,GAAqBM,CACjE,CAED,MAAMxjD,EAAoB60C,EAAchiB,EACxC,IAAK,IAAImxB,EAAsBnP,EAAamP,EAAchkD,EAAWgkD,IAAe,CAKhF,IAAIE,EACAC,EACAC,EAEJ,GAPArB,GAAUX,EACVY,GAAUX,EAMNx3D,EACAq5D,EAAQ9xE,GAAM,EAAI2wE,GAAUvuE,GAC5B2vE,EAAQ/xE,GAAM,EAAI4wE,GAAUxuE,GAC5B4vE,EAAcF,EAAQC,MACnB,CACH,MAAMhB,EAA6B,EAATJ,EACpBK,EAA6B,EAATJ,EACpBK,EAAiBF,EAAY3uE,EAC7B8uE,EAAiBF,EAAY5uE,EACnC,IAAI+vE,EAA4BnyE,EAAKixE,GACjCmB,EAA4BpyE,EAAKkxE,GACrC,MAAMC,EAAsBR,EAASI,EAC/BK,EAAsBR,EAASI,EACrCmB,IAAsBnyE,EAAKixE,EAAS,GAAKkB,GAAqBhB,EAC9DiB,IAAsBpyE,EAAKkxE,EAAS,GAAKkB,GAAqBhB,EAC9DU,GAASK,EAAoBtB,GAAqBb,EAClD+B,GAASK,EAAoBtB,GAAqBb,EAClDY,EAAoBsB,EACpBrB,EAAoBsB,EACpBJ,EAAcF,EAAQC,EAAQ/tC,CACjC,CAED,MAAM6gB,EAAiB4sB,EAAaO,EAAc/kB,EAAaskB,EAAqBC,EAAqBF,EAAaD,GAEtHG,EAAsBD,EACtBA,EAAsBS,EAAc/kB,EAEpC+iB,GAAeS,EACfR,GAAeS,EAEf,MAAM+B,EAAiB5tB,EAAS/qD,EAEhCA,GAAcuwD,EAEdylB,EAAK8B,IAAgBa,CACxB,CAEDlyB,EAAKyJ,OAAO,GAAK2mB,EAASvuE,EAC1Bm+C,EAAKyJ,OAAO,GAAK4mB,EAASxuE,EAC1Bm+C,EAAKW,YAAY,GAAK8uB,EAAc5tE,EACpCm+C,EAAKW,YAAY,GAAK+uB,EAAc7tE,EACpCm+C,EAAKzmD,WAAaA,EAElBiwB,EAAM2oD,gBAAgBrB,GACtB9wB,EAAKwK,wBAA0BwmB,EAC/BhxB,EAAKyK,wBAA0BwmB,C,CAG3B,qBAAOlC,CAAevlD,EAAc04C,EAAqBhiB,EAA+BF,EAAYD,GACxG,MAAMwvB,EAAqB/lD,EAAMm1C,+BAC3Bl/D,EAAqBsgD,EAAgBtgD,KACrCoC,EAAqBpC,EAAK9H,OAAS,EAEnC8rC,EAAqBuc,EAAK0K,8BAAgC3K,EAAgBtc,WAC5C,GAAhCsc,EAAgB1c,cAAsB0c,EAAgBvrC,MAAO1I,iBAAgBk0C,EAAKyJ,OAAO,GAAKzJ,EAAKyJ,OAAO,IAC9G,IAAIgmB,EAAsBzvB,EAAKW,YAAY,GAAK9+C,EAC5C6tE,EAAsB1vB,EAAKW,YAAY,GAAK9+C,EAChD,MAAMquE,GAA4BlwB,EAAKa,iBAAiB,GAClDsvB,GAA4BnwB,EAAKa,iBAAiB,GACxD,IAAItnD,GAAsBymD,EAAKzmD,WAC/B,MAAMuwD,GAA2B9J,EAAK8J,gBACtC,IAAIsmB,EAAkBpwB,EAAKyJ,OAAO,GAAK,EAAK5nD,EACxCwuE,EAAkBrwB,EAAKyJ,OAAO,GAAK,EAAK5nD,EAE5C,MAAMivE,EAAiC9wB,EAAKsK,YACtCymB,EAA6C,EAAvB/wB,EAAKuK,gBACjC,IAAIymB,GAA+BhxB,EAAKwK,wBACpCymB,GAA+BjxB,EAAKyK,wBACxC,MAAMymB,EAAyBt0C,GAAMs0C,aAE/BV,EAA6B,EAATJ,EACpBK,EAA6B,EAATJ,EACpBK,EAAiBF,EAAY3uE,EAC7B8uE,EAAiBF,EAAY5uE,EAC7B+uE,EAAsBR,EAASI,EAC/BK,EAAsBR,EAASI,EACrC,IAAIH,GAA6B7wE,EAAKixE,GAClCH,GAA6B9wE,EAAKkxE,GACtCL,IAAsB7wE,EAAKixE,EAAS,GAAKJ,GAAqBM,EAC9DL,IAAsB9wE,EAAKkxE,EAAS,GAAKJ,GAAqBM,EAE9D,MAAMxjD,EAAoB60C,EAAchiB,EACxC,IAAK,IAAImxB,EAAsBnP,EAAamP,EAAchkD,EAAWgkD,IAAe,CAEhFjB,GAAUX,EACVY,GAAUX,EAEV,MAAMc,EAA6B,EAATJ,EACpBK,EAA6B,EAATJ,EACpBK,EAAiBF,EAAY3uE,EAC7B8uE,EAAiBF,EAAY5uE,EACnC,IAAI+vE,EAA4BnyE,EAAKixE,GACjCmB,EAA4BpyE,EAAKkxE,GACrC,MAAMC,EAAsBR,EAASI,EAC/BK,EAAsBR,EAASI,EACrCmB,IAAsBnyE,EAAKixE,EAAS,GAAKkB,GAAqBhB,EAC9DiB,IAAsBpyE,EAAKkxE,EAAS,GAAKkB,GAAqBhB,EAC9D,MAAMU,GAAiBK,EAAoBtB,GAAqBb,EAC1D+B,GAAiBK,EAAoBtB,GAAqBb,EAChEY,EAAoBsB,EACpBrB,EAAoBsB,EAEpB,MAAMJ,EAAsBF,EAAQC,EAAQ/tC,EACtC6gB,EAAiB4sB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtBhC,GAAeS,EACfR,GAAeS,EAEf,MAAM+B,EAAiB5tB,EAAS/qD,EAChCA,GAAcuwD,EAEdylB,EAAK8B,IAAgBa,CACxB,CAEDlyB,EAAKyJ,OAAO,GAAK2mB,EAASvuE,EAC1Bm+C,EAAKyJ,OAAO,GAAK4mB,EAASxuE,EAC1Bm+C,EAAKW,YAAY,GAAK8uB,EAAc5tE,EACpCm+C,EAAKW,YAAY,GAAK+uB,EAAc7tE,EACpCm+C,EAAKzmD,WAAaA,EAElBiwB,EAAM2oD,gBAAgBrB,GACtB9wB,EAAKwK,wBAA0BwmB,EAC/BhxB,EAAKyK,wBAA0BwmB,C,CAG3B,wBAAOhC,CAAkBzlD,EAAc04C,EAAqBhiB,EAA+BF,EAAYD,GAU3G,MAAMqyB,EAAqBryB,EAAgB1c,aAC3C,IAAIgvC,EAAiCz1C,GAAM01C,0BAA0BF,GACrE,GAA4B9vD,MAAxB+vD,EAAmC,CACnC,IAAIE,EAA6B,GAEjCA,GAAsB,4yGA6DtB,MAAMC,EAAuB,GAC7B,IAAK,IAAIC,EAAgB,EAAGA,EAAQL,EAAYK,IAC5CD,EAAW3yE,KAAK,wBAA0B4yE,GAAkB,GAATA,EAAa,gBAAkB,KAGtFF,GAAsBC,EAAW34D,KAAK,OAEtC04D,GAAsB,u/DAwCtBA,EAAqBA,EAAmB9/D,QAAQ,cAAc47D,IAC1D,MAAMqE,EAAQ,GACd,IAAK,IAAID,EAAgB,EAAGA,EAAQL,EAAYK,IAC5CC,EAAM7yE,KAAKwuE,EAAK57D,QAAQ,MAAOuZ,OAAOymD,KAE1C,OAAOC,EAAM74D,KAAK,KAAK,IAI3Bw4D,EAAuB,IAAIzD,SAAS,QAAS,cAAe,YAAa,OAAQ,kBAAmB2D,GACpG31C,GAAM01C,0BAA0BF,GAAcC,CACjD,CAEDA,EAAqB7oD,EAAO04C,EAAahiB,EAAuBF,EAAMD,E,CAGlE,mBAAOijB,CAAax5C,EAAcy1C,EAA2BC,EAA2BgD,EAAqBG,EAAmBtiB,GAIpI,MAAMyS,EAA0BnuD,EAAyB07C,EAAgBh8C,SACnE0uD,EAA0BnuD,EAAyBy7C,EAAgBh8C,SACnE4uE,EAAwB5yB,EAAgBoO,cAAgB,EACxDuE,EAAuBnuD,EAAsBw7C,EAAgBh8C,SAC7D4uD,EAAsBnuD,EAAqBu7C,EAAgBh8C,SAC3D6uD,EAAoBnuD,EAAmBs7C,EAAgBh8C,SACvD8uD,EAAsBnuD,EAAqBq7C,EAAgBh8C,SACjE,IAAI6uE,EAAoB,EAAOpgB,IAAgBogB,GAAwB,GACvEA,IAAyB,EAAOngB,IAAgBmgB,GAAwB,GACxEA,IAAyB,EAAOD,IAAcC,GAAwB,GACtEA,IAAyB,EAAOlgB,IAAakgB,GAAwB,GACrEA,IAAyB,EAAOjgB,IAAYigB,GAAwB,GACpEA,IAAyB,EAAOhgB,IAAUggB,GAAwB,GAClEA,IAAyB,EAAO/f,IAAY+f,GAAwB,GAEpE,IAAIC,EAA4Bj2C,GAAMk2C,qBAAqBF,GAC3D,GAAuBtwD,MAAnBuwD,EAA8B,CAC9B,IAAIE,EAAwB,GAE5B,MAAMC,EAAsBrgB,GAAcE,GAAcD,EAExDmgB,GAAiB,iQAObC,IACAD,GAAiB,wJAMjBvgB,IAaAugB,GAAiB,gxEA6BjBtgB,IACAsgB,GAAiB,urBAajBJ,IACAI,GAAiB,8UAUrBA,GAAiB,uJAKbrgB,IACAqgB,GAAiB,+yBAejBpgB,IACAogB,GAAiB,q5HA4CjBngB,IACAmgB,GAAiB,+xCAyBjBlgB,IACAkgB,GAAiB,wsCAuBrBA,GAAiB,2RAObvgB,IACAugB,GAAiB,8vDAoBjBtgB,IACAsgB,GAAiB,60CA4BjBJ,IACAI,GAAiB,0QASrBA,GAAiB,sGAMbA,GADArgB,EACiB,kkCAmBA,iFAMjBC,IACAogB,GAAiB,6pFAyCjBngB,IACAmgB,GAAiB,u5CA0BjBlgB,IACAkgB,GAAiB,utFAuCrBA,GAAiB,+KAMbC,IACAD,GAAiB,kEAKrBA,GAAiB,6QASbC,IACAD,GAAiB,wEAKjBvgB,IACAugB,GAAiB,orCAkBjBtgB,IACAsgB,GAAiB,4kBAajBJ,IACAI,GAAiB,ioBAejBrgB,IACAqgB,GAAiB,4YAUjBpgB,IACAogB,GAAiB,0aAUjBngB,IACAmgB,GAAiB,gkCAkBjBlgB,IACAkgB,GAAiB,ggEA4BrBF,EAAkB,IAAIjE,SAAS,QAAS,cAAe,cAAe,cAAe,YAAa,kBAAmBmE,GACrHn2C,GAAMk2C,qBAAqBF,GAAaC,CAC3C,CAEDA,EAAgBrpD,EAAOy1C,EAAaC,EAAagD,EAAaG,EAAWtiB,E,CAGrE,sBAAOivB,CAAgBxlD,EAAc04C,EAAqBhiB,EAA+BF,EAAYtsC,GACzG,MAAM67D,EAAqB/lD,EAAMm1C,+BAEjC,IAAIsU,EAAqBjzB,EAAKW,YAAY,GAC1C,MAAMC,GAA2BZ,EAAKa,iBAAiB,GACvD,IAAItnD,GAAsBymD,EAAKzmD,WAC/B,MAAMuwD,GAA2B9J,EAAK8J,gBACtC,IAAIopB,EAAiBlzB,EAAKyJ,OAAO,GAAK,EAElCtzC,EAAqB6pC,EAAK7pC,WAC9B,MAAMi0C,EAA0BpK,EAAKoK,gBAE/B0mB,EAAiC9wB,EAAKsK,YACtCymB,EAA6C,EAAvB/wB,EAAKuK,gBACjC,IAAIymB,GAA+BhxB,EAAKwK,wBACpCymB,GAA+BjxB,EAAKyK,wBACxC,MAAMymB,EAAyBt0C,GAAMs0C,aAE/B7jD,EAAoB60C,EAAchiB,EACxC,IAAK,IAAImxB,EAAsBnP,EAAamP,EAAchkD,EAAWgkD,IAAe,CAEhF,MAAM8B,EAAoBD,EAAQ,EAC5BE,GAAqBF,EAAQ/8D,GAAc,EAEjD,IAAIk9D,EAAoBD,EAAYD,EAGpC,IAAKz/D,EAAWwE,QAAS,CACrB,GAAIi7D,EAAYF,EAEZI,GAAmC,KAD/BC,EAAIH,EAAYF,GACFK,EAAIA,EAAIA,EAAI,QAC3B,GAAIH,EAAY,EAAMF,EAAY,CAErCI,GAAmC,KAD/BC,GAAKH,EAAY,GAAOF,GACVK,EAAIA,EAAIA,EAAI,EACjC,CACD,GAAIF,EAAYH,EAEZI,GAAmC,KAD/BC,EAAIF,EAAYH,GACFK,EAAIA,EAAIA,EAAI,QAC3B,GAAIF,EAAY,EAAMH,EAAY,CACrC,IAAIK,EACJD,GAAmC,KAD/BC,GAAKF,EAAY,GAAOH,GACVK,EAAIA,EAAIA,EAAI,EACjC,CACJ,CAED,MAAM7B,EAAsB4B,EACtB/uB,EAAiB4sB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtByB,GAASD,EACTA,GAAcryB,EACdzqC,GAAci0C,EAEd,MAAM8nB,EAAiB5tB,EAAS/qD,EAChCA,GAAcuwD,EAEdylB,EAAK8B,IAAgBa,CACxB,CAEDlyB,EAAKyJ,OAAO,GAAKypB,EACjBlzB,EAAKW,YAAY,GAAKsyB,EACtBjzB,EAAKzmD,WAAaA,EAClBymD,EAAK7pC,WAAaA,EAElBqT,EAAM2oD,gBAAgBrB,GACtB9wB,EAAKwK,wBAA0BwmB,EAC/BhxB,EAAKyK,wBAA0BwmB,C,CAoE3B,iBAAO/B,CAAW1lD,EAAc04C,EAAqBG,EAAmBriB,EAAYD,GACxF,MAAMwvB,EAAqB/lD,EAAMm1C,+BAC3Bl/D,EAAqBsgD,EAAgBtgD,KAC3C,IAAIwzE,GAAsBjzB,EAAKW,YAAY,GAC3C,MAAMC,GAA2BZ,EAAKa,iBAAiB,GACvD,IAAItnD,GAAsBymD,EAAKzmD,WAC/B,MAAMuwD,GAA2B9J,EAAK8J,gBACtC,IAAIopB,EAAiBlzB,EAAKyJ,OAAO,GAAK,EAAKrzD,EAAOsK,gBAC5B,GAAlBs/C,EAAKyJ,OAAO,KAEZypB,EAAQjzE,KAAKY,SAAWzK,EAAOsK,iBAEnC,MAAM6yE,EAAoBn9E,EAAOsK,gBAAkB,EACnD,IAAI4oD,GAAuBtJ,EAAKsJ,YAEhC,MAAMwnB,EAAiC9wB,EAAKsK,YACtCymB,EAA6C,EAAvB/wB,EAAKuK,gBACjC,IAAIymB,GAA+BhxB,EAAKwK,wBACpCymB,GAA+BjxB,EAAKyK,wBACxC,MAAMymB,EAAyBt0C,GAAMs0C,aAI/BsC,EAA8BvzE,KAAKoC,IAAI,EAAK4wE,EAAalzB,EAAgB0M,sBAEzEp/B,EAAoB60C,EAAcG,EACxC,IAAK,IAAIgP,EAAsBnP,EAAamP,EAAchkD,EAAWgkD,IAAe,CAGhF/nB,IAF2B7pD,EAAKyzE,EAAQK,GAEXjqB,GAAekqB,EAE5C,MAAM/B,EAAsBnoB,EACtBhF,EAAiB4sB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtByB,GAASD,EACTA,GAAcryB,EAEd,MAAMsxB,EAAiB5tB,EAAS/qD,EAChCA,GAAcuwD,EAEdylB,EAAK8B,IAAgBa,CACxB,CAEDlyB,EAAKyJ,OAAO,GAAKypB,EAAQ98E,EAAOsK,gBAChCs/C,EAAKW,YAAY,GAAKsyB,EACtBjzB,EAAKzmD,WAAaA,EAClBymD,EAAKsJ,YAAcA,EAEnB9/B,EAAM2oD,gBAAgBrB,GACtB9wB,EAAKwK,wBAA0BwmB,EAC/BhxB,EAAKyK,wBAA0BwmB,C,CAG3B,oBAAO9B,CAAc3lD,EAAc04C,EAAqBG,EAAmBriB,EAAYD,GAC3F,MAAMwvB,EAAqB/lD,EAAMm1C,+BAC3Bl/D,EAAqBsgD,EAAgBtgD,KAE3C,IAAIwzE,EADiB,IACIjzB,EAAKW,YAAY,GAC1C,MAAMC,GAA2BZ,EAAKa,iBAAiB,GACvD,IAAItnD,GAAsBymD,EAAKzmD,WAC/B,MAAMuwD,GAA2B9J,EAAK8J,gBACtC,IAAIR,GAAuBtJ,EAAKsJ,YAEhC,MAAMwnB,EAAiC9wB,EAAKsK,YACtCymB,EAA6C,EAAvB/wB,EAAKuK,gBACjC,IAAIymB,GAA+BhxB,EAAKwK,wBACpCymB,GAA+BjxB,EAAKyK,wBACxC,MAAMymB,EAAyBt0C,GAAMs0C,aAErC,IAAIgC,EAAiBlzB,EAAKyJ,OAAO,GAAK,EAAKrzD,EAAOiX,oBAE5B,GAAlB2yC,EAAKyJ,OAAO,KAASypB,EAAQt2C,GAAM62C,uBAAuBh0E,EAAMrJ,EAAOiX,qBAAuB4lE,GAClG,MAAMM,EAAoBn9E,EAAOiX,oBAAsB,EAIjDmmE,EAA8BvzE,KAAKoC,IAAI,EAAK4wE,GAE5C5lD,EAAoB60C,EAAcG,EACxC,IAAK,IAAIgP,EAAsBnP,EAAamP,EAAchkD,EAAWgkD,IAAe,CAChF,MAAMqC,EAA2B,EAARR,EACnBt5E,EAAgB85E,EAAWH,EACjC,IAAII,EAAqBl0E,EAAK7F,GAC9B,MAAMyqD,EAAqB6uB,EAAQQ,EACnCC,IAAel0E,EAAK7F,EAAQ,GAAK+5E,GAActvB,EAE/CiF,IAAgBqqB,EAAarqB,GAAekqB,EAG5C,MAAM/B,EAAsBnoB,EACtBhF,EAAiB4sB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtByB,GAASD,EACTA,GAAcryB,EAEd,MAAMsxB,EAAiB5tB,EAAS/qD,EAChCA,GAAcuwD,EAEdylB,EAAK8B,IAAgBa,CACxB,CAEDlyB,EAAKyJ,OAAO,GAAKypB,EAAQ98E,EAAOiX,oBAChC2yC,EAAKW,YAAY,GAAKsyB,EAhDD,IAiDrBjzB,EAAKzmD,WAAaA,EAClBymD,EAAKsJ,YAAcA,EAEnB9/B,EAAM2oD,gBAAgBrB,GACtB9wB,EAAKwK,wBAA0BwmB,EAC/BhxB,EAAKyK,wBAA0BwmB,C,CAG3B,mBAAO7B,CAAa5lD,EAAc04C,EAAqBG,EAAmBriB,EAAYD,GAC1F,MAAMwvB,EAAqB/lD,EAAMm1C,+BACjC,IAAIl/D,EAAqBsgD,EAAgByY,eAAexY,EAAK8I,cAC7D,MAAM8qB,EAAyBhoB,GAAgB6M,2BAA2BzY,EAAK8I,cAC/E,IAAImqB,EAAqBjzB,EAAKW,YAAY,GAAKizB,EAC/C,MAAMhzB,GAA2BZ,EAAKa,iBAAiB,GACvD,IAAItnD,GAAsBymD,EAAKzmD,WAC/B,MAAMuwD,GAA2B9J,EAAK8J,gBAEhCgnB,EAAiC9wB,EAAKsK,YACtCymB,EAA6C,EAAvB/wB,EAAKuK,gBACjC,IAAIymB,GAA+BhxB,EAAKwK,wBACpCymB,GAA+BjxB,EAAKyK,wBACxC,MAAMymB,EAAyBt0C,GAAMs0C,aAErC,IAAIgC,EAAiBlzB,EAAKyJ,OAAO,GAAK,EAAKrzD,EAAOiX,oBAE5B,GAAlB2yC,EAAKyJ,OAAO,KAASypB,EAAQt2C,GAAM62C,uBAAuBh0E,EAAMrJ,EAAOiX,qBAAuB4lE,GAClG,MAAMM,EAAoBn9E,EAAOiX,oBAAsB,EAEjDggB,EAAoB60C,EAAcG,EACxC,IAAK,IAAIgP,EAAsBnP,EAAamP,EAAchkD,EAAWgkD,IAAe,CAChF,MAAMqC,EAA2B,EAARR,EACnBt5E,EAAgB85E,EAAWH,EACjC,IAAIjqB,EAAsB7pD,EAAK7F,GAC/B,MAAMyqD,EAAqB6uB,EAAQQ,EACnCpqB,IAAgB7pD,EAAK7F,EAAQ,GAAK0vD,GAAejF,EAEjD,MAAMotB,EAAsBnoB,EACtBhF,EAAiB4sB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtByB,GAASD,EACTA,GAAcryB,EAEd,MAAMsxB,EAAiB5tB,EAAS/qD,EAChCA,GAAcuwD,EAEdylB,EAAK8B,IAAgBa,CACxB,CAEDlyB,EAAKyJ,OAAO,GAAKypB,EAAQ98E,EAAOiX,oBAChC2yC,EAAKW,YAAY,GAAKsyB,EAAaW,EACnC5zB,EAAKzmD,WAAaA,EAElBiwB,EAAM2oD,gBAAgBrB,GACtB9wB,EAAKwK,wBAA0BwmB,EAC/BhxB,EAAKyK,wBAA0BwmB,C,CAG3B,eAAO9J,CAAS39C,EAAcqqD,EAA2B3zB,EAA+BF,EAAYtsC,GAGxG,IAAK8V,EAAM3H,KAAM,OAEjB,IAAIwY,EAAcjkC,EAAOyY,SAAW,EAAImxC,EAAKrnB,QAAQ,GAGrD,GAAIjlB,EAAW+wB,kBAAkBpK,GAAM,OAEvC,IAAI0mC,EAAkBrtD,EAAWlC,WAAW6oB,GAGxCkgC,EAA4B,GAChC,GAAInkE,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAMzoB,QAE9C2oD,EAAgB16D,KAAK,QAGrB,GAAI6T,EAAW8wB,eAAenK,IAAQ7Q,EAAM3H,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYniC,OAC/F,IAAK,IAAIgI,EAAY,EAAGA,EAAI6pB,EAAM3H,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYniC,OAAQgI,IAC7F46D,EAAgB16D,KAAKF,QAIpB+T,EAAW8wB,eAAenK,GAAO7Q,EAAM3H,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYniC,OAC9B,MAAjE6xB,EAAM3H,KAAK48B,WAAW/qC,EAAWgJ,YAAY2d,GAAM7Q,EAAMkmB,OACzD6qB,EAAkB/wC,EAAM3H,KAAK48B,WAAW/qC,EAAWgJ,YAAY2d,GAAM7Q,EAAMkmB,KAAM5V,aAErFygC,EAAgB16D,KAAK6T,EAAW8wB,eAAenK,IAIvD,IAAK,IAAI0W,EAA0B,EAAGA,EAAkBwpB,EAAgB5iE,OAAQo5C,IAK5E,GAHAvnB,EAAM8wC,YAAYta,EAAKzmD,WAAYymD,EAAKzmD,WAAaymD,EAAK8J,gBAAiBzvB,EAAK3mB,EAAWgJ,YAAY2d,GAAMkgC,EAAgBxpB,GAAkBgwB,GAG3IA,GAAW3qE,EAAOob,WAAW1X,WAAW,aAAaF,OAAuB,GAAd4vB,EAAMmR,MAAaqlB,EAAKuH,eAAiB/9B,EAAMmwC,KAAOvjE,EAAOwQ,aAAe4iB,EAAMkQ,KAChJlQ,EAAM3H,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYygC,EAAgBxpB,IAAkB3M,QAAU,OAGxG,GAAI28B,GAAW3qE,EAAOob,WAAW1X,WAAW,YAAYF,MACzD4vB,EAAMq0C,YAAa,OAGlB,GAAIkD,GAAW3qE,EAAOob,WAAW1X,WAAW,aAAaF,MAAO,CACjE,MAAMghE,EAAgBpxC,EAAM3H,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYygC,EAAgBxpB,IAEnG,IAAK6pB,EAAclkD,aAAc,CAE7B,IAAIo9D,EAA6C,EAAjCpgE,EAAW8mB,eAAeH,GAE1C,GAAiB,GAAby5C,EAAgB,CAEhB,IAAI5Z,EAAiB,EACrB,MAAM5T,EAAsB98B,EAAMkyC,kBAAoBtlE,EAAOyQ,aAC7D,KAAOm5C,EAAKhmB,KAAMlF,MAAQkrB,EAAKhmB,KAAMpB,KAAKshC,GAAQ3hC,MAAQ+tB,GAAa4T,IAGvE,IAAI6Z,GAAyBztB,EAActG,EAAKhmB,KAAMlF,MAASorB,GAAyB12B,EAAMuvC,oBAAsB3iE,EAAOyQ,cAAiBzQ,EAAOyQ,aAAgBm5C,EAAKhmB,KAAMpB,KAAKshC,EAAS,GAAG3hC,OAASynB,EAAKhmB,KAAMpB,KAAKshC,GAAQ3hC,KAAOynB,EAAKhmB,KAAMpB,KAAKshC,EAAS,GAAG3hC,MAG/L,MAAhEqiC,EAAc93B,aAAakd,EAAKhmB,KAAMpB,KAAKshC,EAAS,GAAGhqC,OAA6E,MAA5D0qC,EAAc93B,aAAakd,EAAKhmB,KAAMpB,KAAKshC,GAAQhqC,MAC3H0qC,EAAc/F,eAAiBj1B,GAAeU,YAAYs6B,EAAc93B,aAAakd,EAAKhmB,KAAMpB,KAAKshC,EAAS,GAAGhqC,MAAQ0qC,EAAc93B,aAAakd,EAAKhmB,KAAMpB,KAAKshC,GAAQhqC,MAAQ6jD,GAGpLnZ,EAAc/F,eAAiB+F,EAAcvmD,QAGpD,KACI,CAED,IAAK,IAAI1U,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IAC7Ci7D,EAAc/F,gBAAkB+F,EAAc93B,aAAanjC,IAAsC,MAAhCi7D,EAAc/F,iBAC/E+F,EAAc/F,eAAiB,IAAIj1B,GACnCg7B,EAAc/F,eAAe15B,eAAey/B,EAAc93B,aAAanjC,GAAIu6B,iBAG/C,MAAhC0gC,EAAc/F,iBACd+F,EAAc/F,eAAiB,IAAIj1B,GACnCg7B,EAAc/F,eAAe15B,eAAey/B,EAAcvmD,SAAS6lB,iBAGnE0gC,EAAc/F,eAAe/0B,kBAAoB7/B,KAAK0hB,OAAOmyD,EAAY,GAAK,KAC1EA,EAAY,EACZlZ,EAAc/F,eAAeh1B,cAAc5/B,KAAK0hB,OAAOmyD,EAAY,GAAK,IAAI11C,KAAO4hB,EAAKzmD,WAAaymD,EAAK8J,gBAE1G8Q,EAAc/F,eAAeh1B,cAAc5/B,KAAK0hB,OAAOmyD,EAAY,GAAK,IAAIz1C,KAAO2hB,EAAKzmD,WAAaymD,EAAK8J,gBAGrH,CACJ,CACJ,MAEI,GAAIiX,GAAW3qE,EAAOob,WAAW1X,WAAW,eAAeF,MAAO,CACnE,MAAMghE,EAAgBpxC,EAAM3H,KAAKurB,SAAS15B,EAAWgJ,YAAY2d,IAAMP,YAAYygC,EAAgBxpB,IAEnG,IAAK6pB,EAAcljD,eAAgB,CAC/B,IAAIo8D,EAA6C,EAAjCpgE,EAAW8mB,eAAeH,GAE1C,GAAiB,GAAby5C,EAAgB,CAEhB,IAAI5Z,EAAiB,EACrB,MAAM5T,EAAsB98B,EAAMkyC,kBAAoBtlE,EAAOyQ,aAC7D,KAAOm5C,EAAKhmB,KAAMlF,MAAQkrB,EAAKhmB,KAAMpB,KAAKshC,GAAQ3hC,MAAQ+tB,GAAa4T,IAGvE,IAAI6Z,GAAyBztB,EAActG,EAAKhmB,KAAMlF,MAASorB,GAAyB12B,EAAMuvC,oBAAsB3iE,EAAOyQ,cAAiBzQ,EAAOyQ,aAAgBm5C,EAAKhmB,KAAMpB,KAAKshC,EAAS,GAAG3hC,OAASynB,EAAKhmB,KAAMpB,KAAKshC,GAAQ3hC,KAAOynB,EAAKhmB,KAAMpB,KAAKshC,EAAS,GAAG3hC,MAG7L,MAAlEqiC,EAAc73B,eAAeid,EAAKhmB,KAAMpB,KAAKshC,EAAS,GAAGhqC,OAA+E,MAA9D0qC,EAAc73B,eAAeid,EAAKhmB,KAAMpB,KAAKshC,GAAQhqC,MAC/H0qC,EAAc5B,iBAAmBp5B,GAAeU,YAAYs6B,EAAc73B,eAAeid,EAAKhmB,KAAMpB,KAAKshC,EAAS,GAAGhqC,MAAQ0qC,EAAc73B,eAAeid,EAAKhmB,KAAMpB,KAAKshC,GAAQhqC,MAAQ6jD,GAG1LnZ,EAAc5B,iBAAmB4B,EAAcllD,UAGtD,KACI,CAGD,IAAK,IAAI/V,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IAC7Ci7D,EAAc5B,kBAAoB4B,EAAc73B,eAAepjC,IAAwC,MAAlCi7D,EAAc5B,mBACnF4B,EAAc5B,iBAAmB,IAAIp5B,GACrCg7B,EAAc5B,iBAAiB79B,eAAey/B,EAAc73B,eAAepjC,GAAIu6B,iBAGjD,MAAlC0gC,EAAc5B,mBACd4B,EAAc5B,iBAAmB,IAAIp5B,GACrCg7B,EAAc5B,iBAAiB79B,eAAey/B,EAAcllD,WAAWwkB,iBAGvE0gC,EAAc5B,iBAAiBl5B,kBAAoB7/B,KAAK0hB,OAAOmyD,EAAY,GAAK,KAC5EA,EAAY,EACZlZ,EAAc5B,iBAAiBn5B,cAAc5/B,KAAK0hB,OAAOmyD,EAAY,GAAK,IAAI11C,KAAO4hB,EAAKzmD,WAAaymD,EAAK8J,gBAE5G8Q,EAAc5B,iBAAiBn5B,cAAc5/B,KAAK0hB,OAAOmyD,EAAY,GAAK,IAAIz1C,KAAO2hB,EAAKzmD,WAAaymD,EAAK8J,gBAGvH,CACJ,CACJ,C,CAID,6BAAO2pB,CAAuBh0E,EAAoBoC,GACtD,IAAIqxE,EAAgBjzE,KAAKY,SAAWgB,EACpC,MAAM0xE,EAAoB1xE,EAAa,EAIvC,IAAImyE,EAAoBd,EAAQK,EAC5B5uC,EAAmBllC,EAAKu0E,GAE5B,IAAK,IAAIC,EAA4B,IAAKA,EAAoB,EAAGA,IAAqB,CAClF,MAAMC,EAAqBF,EAFR,GAE8BT,EAC3CY,EAAmB10E,EAAKy0E,GAC9B,GAAIvvC,EAAWwvC,GAAY,EAAK,CAE5B,IAAK,IAAIx0E,EAAY,EAAGA,EANT,GAMqBA,IAAK,CACrC,MAAMy0E,EAA0BJ,EAAY,EAAKT,EAC3Cc,EAAwB50E,EAAK20E,GACnC,GAAIzvC,EAAW0vC,GAAiB,EAAK,CAEjC,MAAMC,EAAgBD,EAAgB1vC,EACtCuuC,EAAQc,EACJ/zE,KAAKC,IAAIo0E,GAAS,OAClBpB,IAAUvuC,EAAW2vC,GAEzBpB,EAAQjzE,KAAK2L,IAAI,EAAGsnE,GAASrxE,EAC7B,KACH,CACGmyE,EAAYI,EACZzvC,EAAW0vC,CAElB,CACD,KACH,CACGL,EAAYE,EACZvvC,EAAWwvC,CAElB,CAED,OAAOjB,C,CAGJ,mCAAOne,CAA6Bwf,GACvC,OAAQA,IAAqBn+E,EAAOyU,YAAc,EAAO,EAAM5K,KAAKiB,IAAI,EAAG9K,EAAO0U,eAAiBypE,E,CAEhG,mCAAOC,CAA6BC,GACvC,OAAQA,GAAc,GAAQr+E,EAAOyU,YAAc,EAAI5K,KAAKoC,IAAIjM,EAAOyU,YAAc5K,KAAKT,IAAIi1E,GAAcx0E,KAAK0rC,IAAOv1C,EAAO0U,e,CAE5H,2BAAO29C,CAAqBv4B,GAC/B,OAAOjwB,KAAKiB,IAAIjB,KAAK2L,IAAI,EAAKskB,GAAQ95B,EAAOwU,YAAa,I,CAEvD,2BAAO8pE,CAAqBD,GAC/B,OAAOx0E,KAAKiB,IAAIjB,KAAK2L,IAAI,EAAK6oE,GAAa,EAAI,KAAOr+E,EAAOwU,W,CAG1D,6BAAOg7B,CAAuBm7B,GACjC,MAAO,OAAU,IAAOA,EAAU,IAAOA,EAAUA,E,CAEhD,6BAAOj6B,CAAuB6tC,GACjC,OAAOz/C,GAAM,EAAG9+B,EAAOgT,YAAanJ,KAAKe,QAAQ,IAAOf,KAAKc,KAAK,MAAS,GAAM4zE,EAAU,QAAW,I,CAEnG,4BAAO9uC,CAAsBk7B,GAChC,OAAO3qE,EAAOiT,aAAa03D,E,CAExB,4BAAOh6B,CAAsB6tC,GAChC,IAAIC,EAAgBz+E,EAAOiT,aAAa,GACxC,GAAIurE,GAASC,EAAO,OAAO,EAC3B,IAAK,IAAIl1E,EAAY,EAAGA,EAAIvJ,EAAOiT,aAAa1R,OAAQgI,IAAK,CACzD,IAAIm1E,EAAgB1+E,EAAOiT,aAAa1J,GACxC,GAAIi1E,GAASE,EAAO,OAAQF,GAASC,EAAQC,GAAS,EAAKn1E,EAAI,EAAIA,EACnEk1E,EAAQC,CACX,CACD,OAAO1+E,EAAOiT,aAAa1R,OAAS,C,CAGjC,oBAAOguC,CAAcvC,GAGxB,OAAOA,EAAShtC,EAAOgZ,Y,CAEpB,oBAAOo4B,CAAcutC,GAGxB,OAAOA,EAAQ3+E,EAAOgZ,Y,CAGnB,sBAAOo5D,CAAgBxwD,EAAkB7B,GAC5C,OAAgB,GAAZ6B,EACO5hB,EAAO4a,cAAcgH,GAGrB5hB,EAAOkb,iBAAiB6E,E,CAI/B,iBAAA4iD,GACJ,GAAiB,MAAbjkE,KAAK+sB,KAAc,OAAO,EAC9B,IAAIg7B,EAAyB/nD,KAAK+sB,KAAK68B,oBAIvC,OAHI5pD,KAAKk+D,YAAY58D,EAAOob,WAAW1X,WAAkB,MAAEF,SACvDijD,EAAiB/nD,KAAKm+D,YAAY78D,EAAOob,WAAW1X,WAAkB,MAAEF,QAErE9E,KAAK2nE,6BAA6B5f,E,CAGrC,4BAAA4f,CAA6B5f,GACjC,MAAMm4B,EAAyBn4B,EAAiB,GAC1Co4B,EAAyB7+E,EAAOwQ,aAAeouE,EAC/CE,EAAwB9+E,EAAOyQ,aAAeouE,EACpD,OAAOngF,KAAKwrD,iBAAmB40B,C,CAG5B,wBAAOr4C,CAAkBnxB,GAC5B,OAAO,GAAM,GAAKzL,KAAKkB,MAAMlB,KAAKgS,KAAKvG,GAAK,E,CAGxC,eAAAymE,CAAgBrB,GACpB,IAAI72C,GAAiB,EACrB,IAAK,MAAM/G,KAAU49C,EAAS,CAC1B,MAAMr8C,EAAkBx0B,KAAKC,IAAIgzB,EAAOuB,SAClCC,EAAkBz0B,KAAKC,IAAIgzB,EAAOwB,SAExC,KAAMD,EAAU,KAAUC,EAAU,KAAM,CACtCuF,GAAQ,EACR,KACH,CACGxF,EAAUQ,KAAS/B,EAAOuB,QAAU,GACpCC,EAAUO,KAAS/B,EAAOwB,QAAU,EAC3C,CACD,GAAIuF,EACA,IAAK,MAAM/G,KAAU49C,EACjB59C,EAAOuB,QAAU,EACjBvB,EAAOwB,QAAU,C,CAKtB,wBAAOygD,CAAkBt2B,EAAyBu2B,EAAmBC,GACxE,OAAa,CAET,MAAMz7E,IADNw7E,EACkCC,EAC5B/wB,EAAiBrkD,KAAKC,IAAI2+C,EAAUjlD,IAC1C,GAAI6iB,OAAO6nD,SAAShgB,KAAsB,GAAVA,GAAiBA,GAAUrvB,IAAU,MACrE4pB,EAAUjlD,GAAS,CACtB,C,CAGE,mBAAOs3E,CAAa5sB,EAAgBgxB,EAAgBC,EAAgBxE,EAAqBD,GAC5F,IAAK,IAAInxE,EAAY,EAAGA,EAAIoxE,EAAapxE,IAAK,CAC1C,MAAMuzB,EAA8B49C,EAAQnxE,GACtC80B,EAAkBvB,EAAOuB,QACzBC,EAAkBxB,EAAOwB,QACzBR,EAAahB,EAAOgB,GACpBC,EAAajB,EAAOiB,GACpB3yB,EAAa0xB,EAAO1xB,GACpBC,EAAayxB,EAAOzxB,GACpBC,EAAawxB,EAAOxxB,GAC1B4iD,EAAS9iD,EAAK8iD,EAAS7iD,EAAK6zE,EAAS5zE,EAAK6zE,EAASrhD,EAAKO,EAAUN,EAAKO,EACvExB,EAAOgB,GAAKA,EAAKhB,EAAOkB,QACxBlB,EAAOiB,GAAKA,EAAKjB,EAAOmB,QACpBnB,EAAOyB,oCACPzB,EAAO1xB,GAAKA,EAAK0xB,EAAOoB,QACxBpB,EAAOzxB,GAAKA,EAAKyxB,EAAOqB,QACxBrB,EAAOxxB,GAAKA,EAAKwxB,EAAOsB,UAExBtB,EAAO1xB,GAAKA,EAAK0xB,EAAOoB,QACxBpB,EAAOzxB,GAAKA,EAAKyxB,EAAOqB,QACxBrB,EAAOxxB,GAAKA,EAAKwxB,EAAOsB,SAE5BtB,EAAOwB,QAAUD,EACjBvB,EAAOuB,QAAU6vB,EAEjBixB,EAAS7gD,EACT4gD,EAAS7gD,CACZ,CACD,OAAO6vB,C,EA3wIY1nB,GAAA+kB,4BAAkD,IAAIzwB,GACtD0L,GAAAmlB,0BAAgD,IAAI7wB,GAInD0L,GAAoBuxC,qBAAyB,GAC7CvxC,GAAqByyC,sBAAyB,GAC9CzyC,GAAAk2C,qBAAmCx7E,MAAM,KAAQ2wB,UAAK3F,GACtDsa,GAAyB01C,0BAAeh7E,MAAM,GAAG2wB,UAAK3F,GA6tH/Dsa,GAAA0xC,kBAA8B,wWAKiBl4E,EAAO6M,eAAiB,4DAClC7M,EAAO6M,eAAiB,0qDAsCvC7M,EAAO6M,eAAiB,wDACd7M,EAAO6M,eAAiB,0WAStEuY,MAAM,MAEQohB,GAAA6xC,wBAAoC,4LAGDr4E,EAAOqZ,aAAe,6TAIvE+L,MAAM,M,MC9rXEg6D,GAAb,WAAA3gF,GACSC,KAAK2gF,IAAY,C,CAEf,EAAAC,GACT5gF,KAAK2gF,IAAQ,C,CAGP,MAAAE,GACN,OAAO7gF,KAAK2gF,E,CAGL,MAAAG,GAAM,EAGT,MAAOC,WAAuBL,GAGnC,WAAA3gF,CAAYihF,GACXzgF,QACAP,KAAKihF,GAAYD,EACjBhhF,KAAKkhF,IAAiBF,C,CAGhB,IAAAG,GACFnhF,KAAKihF,IACRjhF,KAAKohF,KACLphF,KAAKkhF,IAAgB,IAErBlhF,KAAKqhF,KACLrhF,KAAKkhF,IAAgB,E,CAIhB,IAAAI,GACFthF,KAAKihF,IACRjhF,KAAKqhF,KACLrhF,KAAKkhF,IAAgB,IAErBlhF,KAAKohF,KACLphF,KAAKkhF,IAAgB,E,CAQb,EAAAK,GACT,OAAOvhF,KAAKkhF,E,CAGH,EAAAE,GACT,MAAM,IAAIj/E,MAAM,oC,CAGP,EAAAk/E,GACT,MAAM,IAAIl/E,MAAM,qC,EAIZ,MAAOq/E,WAAoBd,GAChC,WAAA3gF,GACCQ,O,CAGM,MAAAkhF,CAAOC,GACTA,EAAOb,UACX7gF,KAAK4gF,I,EAID,MAAOe,WAAuBZ,GAEnC,WAAAhhF,CAAY6hF,GACXrhF,OAAM,GAELP,KAAK6hF,GADSr0D,MAAXo0D,EACa,GAEAA,EAAQlrE,Q,CAInB,MAAA+qE,CAAOC,GACTA,EAAOb,WACX7gF,KAAK6hF,GAAS7hF,KAAK6hF,GAASh/E,QAAU6+E,EACtC1hF,KAAK4gF,K,CAGI,EAAAQ,GACT,IAAK,IAAIv2E,EAAY,EAAGA,EAAI7K,KAAK6hF,GAASh/E,OAAQgI,IACjD7K,KAAK6hF,GAASh3E,GAAGy2E,M,CAIT,EAAAD,GACR,IAAK,IAAIx2E,EAAY7K,KAAK6hF,GAASh/E,OAAO,EAAGgI,GAAK,EAAIA,IACtD7K,KAAK6hF,GAASh3E,GAAGs2E,M,ECzFJ,SAAAW,GAA+BC,EAA+BC,GAC1E,MAAMC,EAAmCF,EAAoBG,OAAMtjE,IAA0D,GAA5CojE,EAAoB/lD,QAAQrd,KACvGujE,EAAmCH,EAAoBE,OAAMtjE,IAA0D,GAA5CmjE,EAAoB9lD,QAAQrd,KAC7G,OAAOqjE,GAA2BE,GAA2BH,EAAoBn/E,QAAUk/E,EAAoBl/E,MACnH,C,SAEgBu/E,GAAiCp9C,EAAuBjY,EAAYmtB,GAChF,MAAMmoC,EAAiC,IAAIC,IAAIt9C,GAC/CA,EAAYniC,OAAS,EACrBmiC,EAAYj6B,QAAQs3E,GACpB,IAAK,IAAIx3E,EAAY,EAAGA,EAAIm6B,EAAYniC,OAAQgI,IACxCm6B,EAAYn6B,IAAMkiB,EAAKurB,SAAS4B,GAAclV,YAAYniC,SAC1DmiC,EAAY9I,OAAOrxB,EAAG,GACtBA,KAGJm6B,EAAYniC,OAASkqB,EAAKktB,4BAA4BC,KACtDlV,EAAYniC,OAASkqB,EAAKktB,4BAA4BC,IAEtDlV,EAAYniC,QAAU,IACtBmiC,EAAY,GAAK,EAEzB,CAEgB,SAAAu9C,GAAiB5nC,EAAkBvqC,GAC/C,IAAK,MAAM80B,KAAQyV,EAAQ5V,MACvB,IAAK,MAAMpB,KAASuB,EAAKrB,QACrB,IAAK,MAAMW,KAAOU,EAAKpB,KAAM,CACzB,MAAM1gC,GAAeugC,EAAQa,EAAIvjB,UAAY,GACxC7Q,EAAMhN,KACPgN,EAAMhN,IAAO,EAEpB,CAGb,CA0FA,SAASo/E,GAAoB1+C,GACzB,IAAK,IAAIj5B,EAAY,EAAGA,EAAIi5B,EAAKjhC,OAAS,GAClCihC,EAAKj5B,EAAI,GAAGoW,UAAY6iB,EAAKj5B,GAAGoW,UAChC6iB,EAAKj5B,GAAGoW,UAAY6iB,EAAKj5B,EAAI,GAAGoW,UAChC6iB,EAAKj5B,EAAI,GAAGuwB,MAAQ0I,EAAKj5B,GAAGuwB,MAC5B0I,EAAKj5B,GAAGuwB,MAAQ0I,EAAKj5B,EAAI,GAAGuwB,KAC5B0I,EAAK5H,OAAOrxB,EAAG,GAEfA,GAGZ,CAEA,SAAS43E,GAAmBC,EAAeC,EAAoBlwB,EAAuBE,EAAqB5O,GAGvG,MAAMrf,EAAgB,IAAIhB,IAAM,EAAG+uB,EAAeE,EAAarxD,EAAOwU,aAAa,GACnF4uB,EAAQZ,KAAKjhC,OAAS,EACtB6hC,EAAQb,QAAQhhC,OAAS,EACzB,MAAM+/E,EAAwBjwB,EAAcF,EAE5C,IAAK,MAAM9uB,KAAS++C,EAAQ7+C,QACxBa,EAAQb,QAAQ94B,KAAK44B,GAGzB,IAAK,IAAIQ,EAAmB,EAAGA,EAAWu+C,EAAQ5+C,KAAKjhC,OAAQshC,IAAY,CACvE,MAAMK,EAAek+C,EAAQ5+C,KAAKK,GAC5B0+C,EAAqBr+C,EAAIf,KAAOk/C,EACtC,GAAIE,EAAa,EAAG,CAChB,GAAI1+C,EAAW,GAAKu+C,EAAQ5+C,KAAKjhC,OAAQ,MAAM,IAAIV,MAAM,2CACzD,MAAM2gF,EAAmBJ,EAAQ5+C,KAAKK,EAAW,GAC3C4+C,EAAsBD,EAAQr/C,KAAOk/C,EAC3C,GAAII,EAAc,EAAG,CAEjB,MAAMC,GAAkBH,GAAeE,EAAcF,GACrDn+C,EAAQZ,KAAK/4B,KAAKy4B,GAAYr4B,KAAKe,MAAMs4B,EAAIvjB,SAAW+hE,GAASF,EAAQ7hE,SAAWujB,EAAIvjB,WAAY,EAAG9V,KAAKe,MAAMs4B,EAAIpJ,KAAO4nD,GAASF,EAAQ1nD,KAAOoJ,EAAIpJ,QAE5J,CACJ,MAAM,GAAIynD,GAAcD,EACrBl+C,EAAQZ,KAAK/4B,KAAKy4B,GAAYgB,EAAIvjB,SAAU4hE,EAAYr+C,EAAIpJ,WACzD,CACH,GAAI+I,EAAW,EAAG,MAAM,IAAIhiC,MAAM,2CAClC,MAAM8gF,EAAmBP,EAAQ5+C,KAAKK,EAAW,GAC3C++C,EAAsBD,EAAQx/C,KAAOk/C,EAC3C,GAAIO,EAAcN,EAAe,CAE7B,MAAMI,GAAiBJ,EAAgBM,IAAgBL,EAAaK,GACpEx+C,EAAQZ,KAAK/4B,KAAKy4B,GAAYr4B,KAAKe,MAAM+2E,EAAQhiE,SAAW+hE,GAASx+C,EAAIvjB,SAAWgiE,EAAQhiE,WAAY2hE,EAAez3E,KAAKe,MAAM+2E,EAAQ7nD,KAAO4nD,GAASx+C,EAAIpJ,KAAO6nD,EAAQ7nD,QAChL,CACJ,CACJ,CAGD,MAAM+nD,EAAyBz+C,EAAQZ,KAAK,GAAG7iB,SAC/C,IAAK,IAAImiE,EAAmB,EAAGA,EAAW1+C,EAAQb,QAAQhhC,OAAQugF,IAC9D1+C,EAAQb,QAAQu/C,IAAaD,EAEjC,IAAK,IAAI/d,EAAiB,EAAGA,EAAS1gC,EAAQZ,KAAKjhC,OAAQuiE,IACvD1gC,EAAQZ,KAAKshC,GAAQnkD,UAAYkiE,EAGrC,IAAIE,GAA8B,EAClC,GAAqB,GAAjB3+C,EAAQ1E,MACR0E,EAAQX,qBAAwB4+C,EAAa,GAAKD,EAAQ3+C,0BAG1D,GADAW,EAAQX,sBAAuB,EAC3BggB,EAASlhD,OAAS,GAAK6/E,EAAQ3+C,qBAAsB,CACrD,MAAM8uB,EAAiB9O,EAASA,EAASlhD,OAAS,GAClD,GAAIgwD,EAAS5yB,KAAOyE,EAAQ1E,OAAS8H,GAAMyoC,iCAAiC1d,EAAUnuB,GAAU,CAC5F2+C,GAAqB,EACrB,MAAMC,EAA4BzwB,EAAS/uB,KAAK+uB,EAAS/uB,KAAKjhC,OAAS,GAAGoe,SACpEsiE,EAAwB1wB,EAAS5yB,IAAM4yB,EAAS7yB,MACtD,IAAK,IAAImE,EAAmB,EAAGA,EAAWO,EAAQZ,KAAKjhC,OAAQshC,IAAY,CACvE,MAAMq/C,EAAmB9+C,EAAQZ,KAAKK,GAChCs/C,EAA0BjgD,GAAYggD,EAAQviE,SAAWqiE,EAAmBE,EAAQ//C,KAAO8/C,EAAeC,EAAQpoD,MACxHy3B,EAAS/uB,KAAK/4B,KAAK04E,GACnB5wB,EAAS5yB,IAAM4yB,EAAS7yB,MAAQyjD,EAAehgD,IAClD,CACD++C,GAAoB3vB,EAAS/uB,KAChC,CACJ,CAEAu/C,GACDt/B,EAASh5C,KAAK25B,EAEtB,CAEM,MAAOg/C,WAAmClC,GAC5C,WAAAzhF,CAAY4jF,EAAmBC,EAAwBC,GACnDtjF,QAEA,MAAMsnB,EAA2B,GAC3BH,EAA2B,GAC3BE,EAAyB,GAE/B,IAAK,IAAIsyB,EAAuB,EAAGA,EAAeypC,EAAI52D,KAAKiK,kBAAmBkjB,IAAgB,CAC1F,MAAM4pC,EAAsBH,EAAI52D,KAAKurB,SAAS4B,GACxC6pC,EAAsB,IAAIhsC,GAE5BmC,EAAeypC,EAAI52D,KAAKE,kBACxBpF,EAAc9c,KAAKg5E,GACZ7pC,EAAeypC,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAC5DxF,EAAc3c,KAAKg5E,GAGnBn8D,EAAY7c,KAAKg5E,GAGrBA,EAAW7rC,MAAQ4rC,EAAW5rC,MAC9B6rC,EAAW/hD,OAAS8hD,EAAW9hD,OAC/B+hD,EAAWv/E,KAAOs/E,EAAWt/E,KAE7B,IAAK,MAAMoa,KAAcklE,EAAW9+C,YAChC++C,EAAW/+C,YAAYj6B,KAAK6T,GAGhC,MAAMolE,EAAyB1iF,EAAOwQ,aAAe6xE,EAAI52D,KAAK4Z,YACxDs9C,EAAyB3iF,EAAOwQ,aAAe8xE,EACrD,IAAI9e,GAAsB,EACtBnqB,EAA0B,KAE9B,IAAK,IAAIgyB,EAAiB,EAAGA,EAASgX,EAAI52D,KAAKoJ,SAAUw2C,IAAU,CAC/D,MAAMuX,EAA6BP,EAAI52D,KAAK48B,WAAWzP,EAAcyyB,GACrE,GAAkB,MAAduX,EAAoB,CACpB,MAAMC,EAAsBxX,EAASqX,EACrC,IAAK,MAAMtB,KAAWwB,EAAWn/C,MAAO,CAEpC,MAAMq/C,EAA4B1B,EAAQ1iD,MAAQmkD,EAAcN,EAC1DQ,EAA0B3B,EAAQziD,IAAMkkD,EAAcN,EAEtD7c,EAAmB77D,KAAK0hB,MAAMu3D,EAAoBH,GAClDhd,EAAiB97D,KAAKgS,KAAKknE,EAAkBJ,GACnD,IAAK,IAAIrpC,EAAcosB,EAAUpsB,EAAMqsB,EAAQrsB,IAAO,CAClD,MAAM0pC,EAAuB1pC,EAAMqpC,EAC7BxxB,EAAwBtnD,KAAK2L,IAAI,EAAGstE,EAAoBE,GACxD3xB,EAAsBxnD,KAAKoC,IAAI02E,EAAgBI,EAAkBC,GAEvE,GAAI7xB,EAAgBE,EAAa,CAG7B,GAAImS,EAAalqB,GAAkB,MAAXD,EAAiB,CAErC,IADAmqB,IACOA,EAAalqB,GAChBmpC,EAAW9rC,KAAK6sB,GAAc,EAC9BA,IAEJnqB,EAAU,IAAI7V,GACdi/C,EAAW/rC,SAASjtC,KAAK4vC,GACzBopC,EAAW9rC,KAAK6sB,GAAcif,EAAW/rC,SAASn1C,OAClD83C,EAAQ3V,YAAYniC,OAAS,EAC7B83C,EAAQ3V,YAAYj6B,QAAQm5E,EAAWl/C,YAC1C,CAGD2V,EAAUopC,EAAW/rC,SAAS+rC,EAAW9rC,KAAK2C,GAAO,GAErD6nC,GAAmBC,EAAS0B,EAAoBE,EAAe7xB,EAAeA,EAAeE,EAAahY,EAAQ5V,MACrH,CACJ,CACJ,CACJ,CACJ,CACJ,CAEDw/C,GAAwB18D,GACxB08D,GAAwB78D,GACxB68D,GAAwB38D,GACxB5nB,KAAKyhF,OAAO,IAAI+C,GAAsBb,EAAK97D,EAAeH,EAAeE,G,EAIjF,MAAM68D,WAAmB1D,GAWrB,WAAAhhF,CAAsB8yB,EAAqC6xD,GACvDnkF,OAAM,GADYP,KAAI6yB,EAAJA,EAAqC7yB,KAAK0kF,GAALA,EAEvD1kF,KAAK2kF,GAAY3kF,KAAK0kF,GAAM1kD,MAC5BhgC,KAAK4kF,GAAU5kF,KAAK0kF,GAAMzkD,IAC1BjgC,KAAK6kF,GAAY7kF,KAAK0kF,GAAM1kD,MAC5BhgC,KAAK8kF,GAAU9kF,KAAK0kF,GAAMzkD,IAC1BjgC,KAAK+kF,GAAW/kF,KAAK0kF,GAAM5gD,KAC3B9jC,KAAKglF,GAAW,GAChBhlF,KAAKilF,GAAcjlF,KAAK0kF,GAAM7gD,QAC9B7jC,KAAKklF,GAAc,GACnBllF,KAAKmlF,GAA2BnlF,KAAK0kF,GAAM3gD,qBAC3C/jC,KAAKolF,GAA2BplF,KAAK0kF,GAAM3gD,oB,CAGrC,EAAAshD,CAAathD,GACnB,IAAK,IAAIl5B,EAAY,EAAGA,EAAI7K,KAAKglF,GAASniF,OAAS,GAC3C7C,KAAKglF,GAASn6E,GAAG44B,MAAQzjC,KAAKglF,GAASn6E,EAAI,GAAG44B,KAC9CzjC,KAAKglF,GAAS9oD,OAAOrxB,EAAG,GAExBA,IAIR23E,GAAoBxiF,KAAKglF,IAEzB,MAAMM,EAAwBtlF,KAAKglF,GAAS,GAAG/jE,SACzCskE,EAAoBvlF,KAAKglF,GAAS,GAAGvhD,KAC3C,IAAK,IAAI54B,EAAY,EAAGA,EAAI7K,KAAKilF,GAAYpiF,OAAQgI,IACjD7K,KAAKklF,GAAYr6E,GAAK7K,KAAKilF,GAAYp6E,GAAKy6E,EAEhD,IAAK,IAAIz6E,EAAY,EAAGA,EAAI7K,KAAKglF,GAASniF,OAAQgI,IAC9C7K,KAAKglF,GAASn6E,GAAGoW,UAAYqkE,EAC7BtlF,KAAKglF,GAASn6E,GAAG44B,MAAQ8hD,EAE7BvlF,KAAK6kF,GAAY7kF,KAAK2kF,GAAYY,EAClCvlF,KAAK8kF,GAAU9kF,KAAK6kF,GAAY7kF,KAAKglF,GAAShlF,KAAKglF,GAASniF,OAAS,GAAG4gC,KAE5CjW,MAAxBuW,IACA/jC,KAAKolF,GAA2BrhD,GAEd,GAAlB/jC,KAAK6kF,KACL7kF,KAAKolF,IAA2B,GAGpCplF,KAAKohF,KACLphF,KAAK4gF,I,CAGC,EAAAQ,GACNphF,KAAK0kF,GAAM5gD,KAAO9jC,KAAKglF,GACvBhlF,KAAK0kF,GAAM7gD,QAAU7jC,KAAKklF,GAC1BllF,KAAK0kF,GAAM1kD,MAAQhgC,KAAK6kF,GACxB7kF,KAAK0kF,GAAMzkD,IAAMjgC,KAAK8kF,GACtB9kF,KAAK0kF,GAAM3gD,qBAAuB/jC,KAAKolF,GACtB,MAAbplF,KAAK6yB,GAAc7yB,KAAK6yB,EAAKoD,SAASC,S,CAGpC,EAAAmrD,GACNrhF,KAAK0kF,GAAM5gD,KAAO9jC,KAAK+kF,GACvB/kF,KAAK0kF,GAAM7gD,QAAU7jC,KAAKilF,GAC1BjlF,KAAK0kF,GAAM1kD,MAAQhgC,KAAK2kF,GACxB3kF,KAAK0kF,GAAMzkD,IAAMjgC,KAAK4kF,GACtB5kF,KAAK0kF,GAAM3gD,qBAAuB/jC,KAAKmlF,GACtB,MAAbnlF,KAAK6yB,GAAc7yB,KAAK6yB,EAAKoD,SAASC,S,EAgB5C,MAAOsvD,WAAyB9E,GAClC,WAAA3gF,CAAY4jF,EAAmB1wE,GAC3B1S,QACA,MAAMklF,EAAyB9B,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAAwBhlE,eACtG,IAAIilE,GAA4B,EAChC,IAAK,IAAI96E,EAAY,EAAGA,EAAI46E,EAAS5iF,OAAQgI,IACrC46E,EAAS56E,IAAMoI,EAASpI,KACxB86E,GAAmB,EACnB96E,EAAI46E,EAAS5iF,QAGrB,GAAwB,GAApB8iF,EAA2B,CAC3B,IAAI/mE,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC5E,IAAK,IAAI76E,EAAY,EAAGA,EAAIoI,EAASpQ,OAAQgI,IACzC+T,EAAW8B,eAAe7V,GAAKoI,EAASpI,GAG5C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI+T,EAAW8B,eAAe7d,OAAQgI,IAC1DD,GAAOgU,EAAW8B,eAAe7V,GAErC,MAAMC,EAAkBF,EAAMgU,EAAW8B,eAAe7d,OAGxD,IAAIyI,EAAqB,EACrBukC,EAAmB,EACvB,IAAK,IAAIhlC,EAAY,EAAGA,EAAI+T,EAAW8B,eAAe7d,OAAQgI,IAC1DS,GAAcukC,EACdA,EAAWjxB,EAAW8B,eAAe7V,GAAKC,EAC1C8T,EAAW8D,uBAAuB7X,GAAKS,EAG3CsT,EAAW8D,uBAAuB,IAAM,EACxC9D,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,C,EAIH,MAAOgF,WAAwClF,GACjD,WAAA3gF,CAAY4jF,EAAmB1wE,EAAsB4yE,EAAeC,GAEhE,GADAvlF,QACY,aAARulF,EAAqB,CACrB,MAAML,EAAuB9B,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAAwBx2C,gBAAgBx3B,YAEpH,IAAIiuE,GAA4B,EAChC,GAAIE,GAF4BlC,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAAwBx2C,gBAAgB13B,aAGnHmuE,GAAmB,OAEnB,IAAK,IAAI96E,EAAY,EAAGA,EAAI46E,EAAS5iF,OAAQgI,IAAK,CAC9C,GAAI46E,EAAS56E,GAAGhI,QAAUoQ,EAASpI,GAAGhI,OAAQ,CAC1C8iF,GAAmB,EACnB,KACH,CACG,IAAK,IAAI1rD,EAAY,EAAGA,EAAIwrD,EAAS56E,GAAGhI,OAAQo3B,IAC5C,GAAIwrD,EAAS56E,GAAGovB,IAAMhnB,EAASpI,GAAGovB,GAAI,CAClC0rD,GAAmB,EACnB,KACH,CAGZ,CAEL,GAAwB,GAApBA,EAA2B,CAC3B,IAAI/mE,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAE5E9mE,EAAWswB,gBAAgB7qC,IAAIwhF,EAAO5yE,GAEtC2L,EAAWowB,aAAe,EAC1B20C,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,CACJ,MAAK,GAAY,YAARkF,EAAoB,CAC1B,MAAML,EAAuB9B,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAAwBv2C,mBAAmB92B,QACnHstE,GAA4B,EACzC,IAAK,IAAI96E,EAAY,EAAGA,EAAI46E,EAAS5iF,OAAQgI,IAAK,CACjD,GAAI46E,EAAS56E,GAAGhI,QAAUoQ,EAASpI,GAAGhI,OAAQ,CAC7C8iF,GAAmB,EACnB,KACA,CACA,IAAK,IAAI1rD,EAAY,EAAGA,EAAIwrD,EAAS56E,GAAGhI,OAAQo3B,IAC/C,GAAIwrD,EAAS56E,GAAGovB,IAAMhnB,EAASpI,GAAGovB,GAAI,CACrC0rD,GAAmB,EACnB,KACA,CAGH,CAEQ,IAAKA,EAAkB,CACnB,IAAI/mE,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAE5E9mE,EAAWuwB,mBAAmB9qC,IAAI4O,GAElC2L,EAAWqwB,gBAAkB,EAC7B00C,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,CACJ,C,EAIH,MAAOmF,WAAqBrF,GAC9B,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAE9E,GADyB9mE,EAAWN,QACpB0nE,EAAU,CACtB,MAAMC,EAAyBroE,EAAae,mBAAmBqnE,GACzD1nE,EAAwB2nE,UAAWroE,EAAaC,cAAcmoE,GACpE,GAAc,MAAV1nE,EACA,GAAyBkP,MAArBlP,EAAOe,WACPT,EAAW3J,KAAOqJ,EAAOe,YACpB/d,EAAO+Q,iCAAiCuM,EAAW3J,OAAS3T,EAAOyV,OAAO6H,EAAWc,OAAO1I,iBAC7F4H,EAAWc,MAAQ,GAEvBd,EAAW84B,mCACR,GAAuBlqB,MAAnBlP,EAAOgB,SAAuB,CACrC,MAAM4mE,EAAqBtnE,EAAW+C,OAChCwkE,EAAkBvnE,EAAW4D,IAC7B4jE,EAAexnE,EAAW6D,SAEhC7D,EAAWynB,eAAe/nB,EAAOgB,SAAUqkE,EAAI52D,KAAKotB,kBAAkBwpC,EAAIx8D,SAAUw8D,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,SAA6B,GAAnBw8D,EAAI52D,KAAK+Y,QAAkC,GAAnB69C,EAAI52D,KAAK+Y,OAAa69C,EAAI52D,KAAK+Y,QAAU,GAC5LlnB,EAAW+C,OAASukE,EACpBtnE,EAAW4D,IAAM2jE,EACjBvnE,EAAW6D,SAAW2jE,EAGlBxnE,EAAW3P,QAA6B,EAAlB2P,EAAW3P,OAExC,CAEL2P,EAAWN,OAAS0nE,EACpBrC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,C,EAIH,MAAOyF,WAAwC3F,GACjD,WAAA3gF,CAAY4jF,GAOR,SAAS2C,EAAwBC,GAC7B,IAAIC,EAAgB,EACpB,IAAK,MAAM7kC,KAAS4kC,EAChBC,GAAS7kC,EAAM8kC,OAEnB,IAAI16E,EAAiBZ,KAAKY,SAAWy6E,EACrC,IAAK,MAAM7kC,KAAS4kC,EAEhB,GADAx6E,GAAU41C,EAAM8kC,OACZ16E,GAAU,EAAK,OAAO41C,EAAM+kC,KAEpC,OAAOH,EAASp7E,KAAKY,SAAWw6E,EAAQ1jF,OAAU,GAAG6jF,I,CAEzD,SAASC,EAAyBp5E,EAAauJ,EAAa8vE,EAAcxzD,GACtE,MAAMmzD,EAAqC,GAC3C,IAAK,IAAI17E,EAAY0C,EAAK1C,GAAKiM,EAAKjM,IAChC07E,EAAQx7E,KAAK,CAAE27E,KAAM77E,EAAG47E,OAAQ,GAAOt7E,KAAKiB,KAAKvB,EAAI+7E,GAAQxzD,EAAO,GAAO,KAE/E,OAAOkzD,EAAqBC,E,CAvBhChmF,QA0BA,MAAMsmF,EACF,WAAA9mF,CACoB+mF,EACA7xE,EACA8xE,EACAC,EACAC,EACAC,GALAlnF,KAAM8mF,OAANA,EACA9mF,KAAIiV,KAAJA,EACAjV,KAAO+mF,QAAPA,EACA/mF,KAAOgnF,QAAPA,EACAhnF,KAAQinF,SAARA,EACAjnF,KAAUknF,WAAVA,C,EAGxB,SAASC,EAAkB/oD,EAAwBgpD,GAC/ChpD,EAAO+G,QACP,MAAMkiD,EAAsB,GAC5B,IAAK,MAAMC,KAAkBF,EAAiB,CAC1C,GAAIj8E,KAAKY,SAAWu7E,EAAeR,OAAQ,SAC3C,MAAM9+C,EAA4B,IAAIqB,GACtCrB,EAAM/yB,KAAOqyE,EAAeryE,KAC5B+yB,EAAMsB,KAAOq9C,EAAyBW,EAAeP,QAASO,EAAeN,QAAS39C,GAAmBS,6BAA6Bw9C,EAAeL,UAAW,EAAM3lF,EAAOkS,gBAC7Kw0B,EAAMuB,KAAOo9C,EAAyB,EAAGrlF,EAAOwS,gBAAkB,EAAGxS,EAAOyS,iBAAmBuzE,EAAeJ,WAAY,EAAM5lF,EAAO0S,gBACtG,GAA7Bg0B,EAAM/yB,MAA2B+yB,EAAMuB,MAAQjoC,EAAOyS,mBACtDszE,EAAU9+B,SAASvgB,EAAMsB,QAC7B+9C,EAAUt8E,KAAKi9B,EAAMsB,MACrBlL,EAAO2M,cAAc3M,EAAO4M,mBAAqBhD,EACjD5J,EAAO4M,qBACV,C,CAGL,MAAMjrB,EAAmB4jE,EAAI52D,KAAKotB,kBAAkBwpC,EAAIx8D,SAClDvI,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E9mE,EAAW3P,SAAW,EACtB2P,EAAWwvB,cAAgB,EAE3B,MAAMm5C,EAAkBl+C,GAAmBS,6BAA6B,KAClEk9C,EAAkB1lF,EAAOmS,gBAAkB,EAUvD,GATM0zE,EAAkBvoE,EAAWW,SAAU,CACnC,IAAIsnE,EAAqB,GAAG,EAAsBU,EAASP,EAAS,KAAS,GAC7E,IAAIH,EAAqB,GAAG,EAAuB,EAAGU,EAAU,EAAG,KAAQ,GAC3E,IAAIV,EAAqB,GAAsB,IAAGG,EAAS,IAAQ,GACnE,IAAIH,EAAqB,GAAsB,IAAGG,EAAS,KAAQ,GACnE,IAAIH,EAAqB,GAAsB,IAAGG,EAAS,IAAQ,GACnE,IAAIH,EAAqB,GAAsB,IAAGG,EAAS,IAAO,KAGxEjnE,EAAS,CACZ,MAAM9K,EAAuBqxE,EAAqB,CACjD,CAAEI,KAA0B,EAAED,OAAQ,GACtC,CAAEC,KAA6B,EAAED,OAAQ,KA+G1C,SAASe,EAAU1mE,GAClB,IAAIhK,EAAc,EAClB,IAAK,MAAMxT,KAASwd,EACfxd,EAAQwT,IAAKA,EAAMxT,GAExB,IAAK,IAAIuH,EAAY,EAAGA,EAAIiW,EAAUje,OAAQgI,IAC7CiW,EAAUjW,GAAKvJ,EAAO2X,aAAe6H,EAAUjW,GAAKiM,C,CAGtD,OAtHA8H,EAAWN,OAASM,EAAW3J,KAAOA,EAE7B2J,EAAWsvB,OAAU/iC,KAAKY,SAAW,GAAO,EAAI46E,EAAyB,EAAGrlF,EAAOgT,YAAc,EAAG,EAAG,GACvGsK,EAAWuvB,QAAUw4C,EAAyB,EAAGrlF,EAAOiT,aAAa1R,OAAS,EAAGvB,EAAOkT,eAAgB,GAEpGrJ,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,KACtB2P,EAAWY,WAAale,EAAOoT,YAAY1P,WAAWshF,EAAqB,CACvE,CAAEI,KAAM,SAAUD,OAAQ,IAC1B,CAAEC,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,QAASD,OAAQ,MACzB3hF,OAEJqG,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,KACtB2P,EAAWc,MAAQpe,EAAOyV,OAAO/R,WAAWshF,EAAqB,CAC7D,CAAEI,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,MAC5B3hF,OAEJqG,KAAKY,SAAW,KAChB6S,EAAWyvB,WAAas4C,EAAyB,EAAGrlF,EAAO8Y,gBAAkB,EAAG9Y,EAAO+Y,iBAAkB,GACrGuE,EAAWyvB,YAAc/sC,EAAO+Y,mBAChCuE,EAAW3P,SAAW,IACtB2P,EAAW8xB,YAAYpvC,EAAOoa,4BAA4B1W,WAAuB,WAAEF,MAAO,EAAGxD,EAAO4W,UAAUlT,WAAWshF,EAAqB,CAC1I,CAAEI,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,IAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MAC3B3hF,SAGRqG,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,IACtB2P,EAAWkB,QAAU6mE,EAAyB,EAAGrlF,EAAOyP,iBAAmB,EAAGzP,EAAOyP,kBAAoB,EAAG,GAC5G6N,EAAWkB,QAAUxe,EAAO0T,SAAShQ,WAAWshF,EAAqB,CACjE,CAAEI,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,QAASD,OAAQ,MACzB3hF,OAEJqG,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,GACtBk4E,EAAkBvoE,EAAWgC,WAAY,CACrC,IAAIimE,EAAqB,EAAG,EAAsBU,EAASP,EAAS,KAAS,KAEjFpoE,EAAW8xB,YAAYpvC,EAAOoa,4BAA4B1W,WAA+B,mBAAEF,MAAO,EAAGxD,EAAO4W,UAAUlT,WAAWshF,EAAqB,CAClK,CAAEI,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GACf,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,MACrC3hF,QAESqG,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,EACtB2P,EAAWwC,WAAaulE,EAAyB,EAAGrlF,EAAO4Z,gBAAkB,EAAG5Z,EAAO4Z,gBAAkB,EAAG,IAE5G/P,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,GACtB2P,EAAWkwB,eAAiB63C,EAAyB,EAAGrlF,EAAO+Z,oBAAsB,EAAG/Z,EAAO+Z,qBAAuB,EAAG,GACzHuD,EAAWuC,uBAAyBwlE,EAAyB,EAAGrlF,EAAOia,4BAA8B,EAAGja,EAAOia,6BAA+B,EAAG,IAEjJpQ,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,EACtB2P,EAAW0C,OAASqlE,EAAyB,EAAGrlF,EAAO8U,YAAc,EAAG9U,EAAO8U,YAAc,EAAG,IAEhGjL,KAAKY,SAAW,KAChB6S,EAAWoE,YAAc2jE,EAAyB,EAAGrlF,EAAOyP,iBAAmB,EAAGzP,EAAOyP,kBAAoB,EAAG,GAChH6N,EAAWmwB,UAAY43C,EAAyB,EAAGrlF,EAAOuP,eAAiB,EAAGvP,EAAOuP,gBAAkB,EAAG,GAC5E,GAA1B+N,EAAWoE,aAA4C,GAAxBpE,EAAWmwB,YAC1CnwB,EAAW3P,SAAW,KAG1B9D,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,EACtB2P,EAAWiC,OAAS8lE,EAAyB,EAAGrlF,EAAO8P,YAAc,EAAG,EAAG,IAYhF6D,GACP,OACC2J,EAAW+uB,UAAaxiC,KAAKY,SAAWzK,EAAOqK,WAAW9I,OAAU,EACnE,MACF,OAA8B,CAC7B,MAAM4kF,EAAiC,CACtC,KACC,MAAMlmE,EAAqB,GAC3B,IAAK,IAAI1W,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACzD0W,EAAS1W,GAAMM,KAAKY,SAAW,GAAOZ,KAAKY,SAAW,EAEvD,OAAOwV,CAAQ,EAEhB,KACC,IAAImmE,EAAkB,EACtB,MAAMnmE,EAAqB,CAACmmE,GAC5B,IAAK,IAAI78E,EAAI,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACjD68E,GAAWv8E,KAAKiB,IAAI,EAAGjB,KAAKY,SAAW,KACvCwV,EAAS1W,GAAK68E,EAEf,OAAOnmE,CAAQ,EAEhB,KACC,IAAImmE,EAAkB,EACtB,MAAMnmE,EAAqB,CAACmmE,GAC5B,IAAK,IAAI78E,EAAI,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACjD68E,GAAWv8E,KAAKiB,IAAI,EAAGjB,KAAKY,SAAW,KACvCwV,EAAS1W,GAAK68E,EAAUv8E,KAAKY,SAE9B,OAAOwV,CAAQ,GAIXA,GAAqBomE,EADTF,EAAoBt8E,KAAKY,SAAW07E,EAAmB5kF,OAAU,MAEnF2kF,EAAUjmE,GACV,IAAK,IAAI1W,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACzD+T,EAAWgxB,aAAaruB,SAAS1W,GAAKM,KAAKe,MAAMqV,EAAS1W,IAE3D+T,EAAWgxB,aAAahI,qBACxB,CAAC,MACF,QAAS,MAAM,IAAIzlC,MAAM,wDAE1B,KAAM,CACN,MAAM8S,EAAuBqxE,EAAqB,CACrC,CAAEI,KAAyB,EAAED,OAAQ,GACrC,CAAEC,KAAwB,EAAED,OAAQ,GACpC,CAAEC,KAA8B,EAAED,OAAQ,GAC1C,CAAEC,KAAiC,EAAED,OAAQ,GAC7C,CAAEC,KAA6B,EAAED,OAAQ,GACzC,CAAEC,KAAuB,EAAED,OAAQ,GAC/C,CAAEC,KAA0B,GAAED,OAAQ,KA+JvC,SAASe,EAAU1mE,GAClB,IAAIhK,EAAc,EAClB,IAAK,MAAMxT,KAASwd,EACfxd,EAAQwT,IAAKA,EAAMxT,GAExB,IAAK,IAAIuH,EAAY,EAAGA,EAAIiW,EAAUje,OAAQgI,IAC7CiW,EAAUjW,GAAKvJ,EAAO2X,aAAe6H,EAAUjW,GAAKiM,C,CAGtD,OAtKA8H,EAAWN,OAASM,EAAW3J,KAAOA,EAE7B2J,EAAWsvB,OAAU/iC,KAAKY,SAAW,GAAO,EAAI46E,EAAyB,EAAGrlF,EAAOgT,YAAc,EAAG,EAAG,GACvGsK,EAAWuvB,QAAUw4C,EAAyB,EAAGrlF,EAAOiT,aAAa1R,OAAS,EAAGvB,EAAOkT,eAAgB,GAChG,GAAJS,GAAmC,GAAJA,GAAwC,GAAJA,IACnE2J,EAAWe,OAASre,EAAOiU,QAAQvQ,WAAWshF,EAAqB,CAC/D,CAAEI,KAAM,OAAQD,OAAQ,IACxB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,MAAOD,OAAQ,GACvB,CAAEC,KAAM,aAAcD,OAAQ,GAC9B,CAAEC,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,eAAgBD,OAAQ,MAEhC3hF,MAWA8Z,EAAW2vB,aAAejtC,EAAOiU,QAAQqJ,EAAWe,QAAQnK,OAC5DoJ,EAAW4vB,aAAeltC,EAAOiU,QAAQqJ,EAAWe,QAAQlK,OAC5DmJ,EAAW6vB,aAAentC,EAAOiU,QAAQqJ,EAAWe,QAAQjK,OAC5DkJ,EAAW8vB,iBAAmBptC,EAAOiU,QAAQqJ,EAAWe,QAAQlb,WAChEma,EAAW+vB,WAAartC,EAAOiU,QAAQqJ,EAAWe,QAAQhK,MAI9DxK,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,KACtB2P,EAAWY,WAAale,EAAOoT,YAAY1P,WAAWshF,EAAqB,CACvE,CAAEI,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,QAASD,OAAQ,MACzB3hF,OAEJqG,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,KACtB2P,EAAWc,MAAQpe,EAAOyV,OAAO/R,WAAWshF,EAAqB,CAC7D,CAAEI,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,MAC5B3hF,OAEJqG,KAAKY,SAAW,MAChB6S,EAAWyvB,WAAas4C,EAAyB,EAAGrlF,EAAO8Y,gBAAkB,EAAG9Y,EAAO+Y,iBAAkB,GACrGuE,EAAWyvB,YAAc/sC,EAAO+Y,mBAChCuE,EAAW3P,SAAW,IACtB2P,EAAW8xB,YAAYpvC,EAAOoa,4BAA4B1W,WAAuB,WAAEF,MAAO,EAAGxD,EAAO4W,UAAUlT,WAAWshF,EAAqB,CAC1I,CAAEI,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,IAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,MAC5B3hF,SAGRqG,KAAKY,SAAW,MAChB6S,EAAW3P,SAAW,IACtB2P,EAAWkB,QAAU6mE,EAAyB,EAAGrlF,EAAOyP,iBAAmB,EAAGzP,EAAOyP,kBAAoB,EAAG,GAC5G6N,EAAWkB,QAAUxe,EAAO0T,SAAShQ,WAAWshF,EAAqB,CACjE,CAAEI,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,QAASD,OAAQ,MACzB3hF,OAEJqG,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,EACtB2P,EAAWwC,WAAaulE,EAAyB,EAAGrlF,EAAO4Z,gBAAkB,EAAG5Z,EAAO4Z,gBAAkB,EAAG,IAE5G3L,EAAyBqP,EAAW3P,UAAY9D,KAAKY,SAAW,IAChE6S,EAAW3P,SAAW,GACtBk4E,EAAkBvoE,EAAWgC,WAAY,CACrC,IAAIimE,EAAqB,EAAG,EAAsBU,EAASP,EAAS,KAAS,GAC7E,IAAIH,EAAqB,GAAG,EAAuB,EAAGU,EAAU,EAAG,KAAQ,GAC3E,IAAIV,EAAqB,GAAsB,IAAGG,EAAS,KAAQ,MAEhE77E,KAAKY,SAAW,KACvB6S,EAAW3P,SAAW,GACtBk4E,EAAkBvoE,EAAWgC,WAAY,CACrC,IAAIimE,EAAqB,EAAG,EAAsBU,EAASP,EAAS,KAAS,KAEjFpoE,EAAW8xB,YAAYpvC,EAAOoa,4BAA4B1W,WAA+B,mBAAEF,MAAO,EAAGxD,EAAO4W,UAAUlT,WAAWshF,EAAqB,CACtJ,CAAEI,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,GACxC,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GACf,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GACxC,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GACf,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GACxC,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GACf,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GACxC,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAChB,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GACxC,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GACf,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,SAAUD,OAAQ,MACnC3hF,QAESqG,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,GACtB2P,EAAWkwB,eAAiB63C,EAAyB,EAAGrlF,EAAO+Z,oBAAsB,EAAG,EAAG,GAC3FuD,EAAWuC,uBAAyBwlE,EAAyB,EAAGrlF,EAAOia,4BAA8B,EAAGja,EAAOia,6BAA+B,EAAG,IAEjJpQ,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,EACtB2P,EAAW0C,OAASqlE,EAAyB,EAAGrlF,EAAO8U,YAAc,EAAG9U,EAAO8U,YAAc,EAAG,IAEhGjL,KAAKY,SAAW,KAChB6S,EAAWoE,YAAc2jE,EAAyB,EAAGrlF,EAAOyP,iBAAmB,EAAGzP,EAAOyP,kBAAoB,EAAG,GAChH6N,EAAWmwB,UAAY43C,EAAyB,EAAGrlF,EAAOuP,eAAiB,EAAGvP,EAAOuP,gBAAkB,EAAG,GAC5E,GAA1B+N,EAAWoE,aAA4C,GAAxBpE,EAAWmwB,YAC1CnwB,EAAW3P,SAAW,KAG1B9D,KAAKY,SAAW,KAChB6S,EAAW3P,SAAW,EACtB2P,EAAWiC,OAAS8lE,EAAyB,EAAGrlF,EAAO8P,YAAc,EAAG,EAAG,IAWhF6D,GACP,OACC2J,EAAWvd,SAAY8J,KAAKY,SAAWzK,EAAOC,UAAUsB,OAAU,EAE3C+b,EAAWyE,6BAA8B,EACzCzE,EAAW0E,kBAAoB,EAC/B1E,EAAW2E,gBAAkBjiB,EAAOK,gBAAgBid,EAAWvd,UAAUiB,QAAQO,OAAS,EAC1F+b,EAAW4E,iBAAmB,EAC9B5E,EAAW6E,uBAAwB,EACnC7E,EAAW8E,oBAAsB,EAEvD,MACF,OACgB9E,EAAWyC,WAAaslE,EAAyB,EAAGrlF,EAAO6X,gBAAkB,EAAG7X,EAAO6X,gBAAkB,EAAG,GAC5GyF,EAAWiwB,cAAgB,EAEvB1jC,KAAKY,SAAW,IAChB6S,EAAW8xB,YAAYpvC,EAAOoa,4BAA4B1W,WAAuB,WAAEF,MAAO,EAAGxD,EAAO4W,UAAUlT,WAAWshF,EAAqB,CAC9I,CAAEI,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,SAAUD,OAAQ,MACzC3hF,OAEH,MACF,KAAiC,EACrB,OAA+B,CACnB,GAAJmQ,IACA2J,EAAWmC,cAAiB5V,KAAKY,SAAWzK,EAAO6Z,mBAAsB,GAG5F,MAAMysE,EAAiC,CACtC,KACC,MAAM9mE,EAAsB,GAC5B,IAAK,IAAIjW,EAAY,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IAC1DiW,EAAUjW,GAAMM,KAAKY,SAAW,GAAOZ,KAAKY,SAAW,EAGxD,OADA+U,EAA2B,EAAhB3V,KAAKY,SAAgB,GAAKZ,KAAKiB,IAAIjB,KAAKY,SAAU,KACtD+U,CAAS,EAEjB,KACC,IAAI4mE,EAAkB,EACtB,MAAM5mE,EAAsB,CAAC4mE,GAC7B,IAAK,IAAI78E,EAAI,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IAClD68E,GAAWv8E,KAAKiB,IAAI,EAAGjB,KAAKY,SAAW,KACvC+U,EAAUjW,GAAK68E,EAEhB,OAAO5mE,CAAS,EAEjB,KACC,IAAI4mE,EAAkB,EACtB,MAAM5mE,EAAsB,CAAC4mE,GAC7B,IAAK,IAAI78E,EAAI,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IAClD68E,GAAWv8E,KAAKiB,IAAI,EAAGjB,KAAKY,SAAW,KACvC+U,EAAUjW,GAAK68E,EAAUv8E,KAAKY,SAE/B,OAAO+U,CAAS,GAIZA,GAAsB6mE,EADVC,EAAoBz8E,KAAKY,SAAW67E,EAAmB/kF,OAAU,MAEnF2kF,EAAU1mE,GACV,IAAK,IAAIjW,EAAY,EAAGA,EAAIvJ,EAAOuX,uBAAwBhO,IAC1D+T,EAAW2wB,cAAczuB,UAAUjW,GAAKM,KAAKe,MAAM4U,EAAUjW,IAE9D+T,EAAW2wB,cAAc3H,qBACzB,CAAC,MACF,OAA8B,CAC7B,MAAMrmB,EAAqB,GAC3B,IAAK,IAAI1W,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IAAK,CAC9D,MAAM88B,EAA2B,GAAL98B,GAAe,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,EAE3F0W,EAAS1W,GADN88B,EACWx8B,KAAKiB,IAAIjB,KAAKY,SAAU,KAEK,GAA7BZ,KAAKiB,IAAIjB,KAAKY,SAAU,EAEvC,CACDy7E,EAAUjmE,GACV,IAAK,IAAI1W,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IACzD+T,EAAWgxB,aAAaruB,SAAS1W,GAAKM,KAAKe,MAAMqV,EAAS1W,IAE3D+T,EAAWgxB,aAAahI,qBACxB,CAAC,MACF,KAA0B,GAC1B,OAAwB,CAChB,GAAJ3yB,GACF2J,EAAWuB,UAAahV,KAAKY,SAAWzK,EAAOiW,WAAW1U,OAAU,EACpE+b,EAAWwB,aAAgBjV,KAAKY,SAAWzK,EAAO8W,UAAUvV,OAAU,IAEtE+b,EAAWowB,aAAgB7jC,KAAKY,UAAYzK,EAAOqW,cAAc9U,OAAO,GAAG,EAAK,EAChF+b,EAAWswB,gBAAgB9H,WAAWxoB,EAAWowB,cACjDpwB,EAAWqwB,gBAAmB9jC,KAAKY,UAAYzK,EAAOgX,aAAazV,OAAO,GAAG,EAAK,EAClF+b,EAAWuwB,mBAAmB/H,WAAWxoB,EAAWqwB,kBAErD,MAAM9uB,EAAgD,GAAzBlL,EAA2B3T,EAAOiW,WAAWqH,EAAWuB,WAAa7e,EAAOqW,cAAciH,EAAWowB,cAClI,IAAK,IAAInkC,EAAY,EAAGA,EAAIsV,EAAU3I,aAAc3M,IACnD+T,EAAW0B,UAAUzV,GAAG0V,UAAYomE,EAAyB,EAAGrlF,EAAOwW,oBAAoBjV,OAAS,EAAG,EAAG,GAC1G+b,EAAW0B,UAAUzV,GAAG+C,UAAY+4E,EAAyB,EAAGrlF,EAAOuW,qBAAsBvW,EAAOuW,qBAAuB,EAAG,GAC5G+G,EAAW0B,UAAUzV,GAAGqY,SAAW5hB,EAAO4a,cAAclX,WAAWshF,EAAqB,CACpF,CAAEI,KAAM,OAAQD,OAAQ,IACxB,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,cAAeD,OAAQ,GAC/B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,YAAaD,OAAQ,GACrD,CAAEC,KAAM,UAAWD,OAAQ,MACH3hF,MACkB,GAApC8Z,EAAW0B,UAAUzV,GAAGqY,WAC3BtE,EAAW0B,UAAUzV,GAAGwW,WAAailE,EAAqB,CACzD,CAAEI,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,MAItB,IAAK,IAAI57E,EAAYsV,EAAU3I,aAAc3M,EAAIvJ,EAAO+V,eAAqB,IAAJpC,EAA8B,EAAI,GAAIpK,IAC9G+T,EAAW0B,UAAUzV,GAAG0V,UAAYomE,EAAyB,EAAGrlF,EAAOwW,oBAAoBjV,OAAS,EAAG,EAAG,GAC1G+b,EAAW0B,UAAUzV,GAAG+C,UAAazC,KAAKiB,IAAIjB,KAAKY,SAAU,GAAKzK,EAAOuW,qBAAwB,EAC3E+G,EAAWwvB,cAAgB9sC,EAAOka,kBAAoBrQ,KAAKY,SAAW,IACtE6S,EAAW8xB,YAAYpvC,EAAOoa,4BAA4B1W,WAA8B,kBAAEF,MAAO+F,EAAGvJ,EAAO4W,UAAUlT,WAAWshF,EAAqB,CACrJ,CAAEI,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,SAAUD,OAAQ,MAC5C3hF,OAEc8Z,EAAW0B,UAAUzV,GAAGqY,SAAW5hB,EAAO4a,cAAclX,WAAWshF,EAAqB,CACpF,CAAEI,KAAM,OAAQD,OAAQ,IACxB,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,cAAeD,OAAQ,GAC/B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,YAAaD,OAAQ,GACrD,CAAEC,KAAM,UAAWD,OAAQ,MACH3hF,MACkB,GAApC8Z,EAAW0B,UAAUzV,GAAGqY,WAC3BtE,EAAW0B,UAAUzV,GAAGwW,WAAailE,EAAqB,CACzD,CAAEI,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,IACnB,CAAEC,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,GACnB,CAAEC,KAAM,EAAGD,OAAQ,MAItB7nE,EAAWyB,kBAAqBlV,KAAKiB,IAAIjB,KAAKY,SAAU,GAAKzK,EAAOuW,qBAAwB,EACzE+G,EAAWwvB,cAAgB9sC,EAAOka,kBAAoBrQ,KAAKY,SAAW,IACtE6S,EAAW8xB,YAAYpvC,EAAOoa,4BAA4B1W,WAA8B,kBAAEF,MAAO,EAAGxD,EAAO4W,UAAUlT,WAAWshF,EAAqB,CACrJ,CAAEI,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,SAAUD,OAAQ,MACzC3hF,MAEJ,CAAC,MACU,QAAS,MAAM,IAAI3C,MAAM,0DAEhC,CAEDwhF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOiH,WAAyBnH,GAClC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAWY,YACpBwmE,IACZhmF,KAAK4gF,KACLhiE,EAAWY,WAAawmE,EACxBpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,U,EAKnB,MAAO4xD,WAA4BpH,GACrC,WAAA3gF,CAAY4jF,EAAmBoE,EAAoBC,GAC/CznF,QACA,IAAIqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACvD,MAAjBsC,IACAppE,EAAaopE,GACjB,MAAMC,EAAmBrpE,EAAW3P,QAC9Bi5E,EAA0D,IAAjCD,EAAY,GAAKF,GAC1C/B,EAAmBkC,EAAeD,IAAc,GAAKF,GAAiBE,EAAY,GAAKF,EAC7FnpE,EAAW3P,QAAU+2E,EAEe,GAAhC+B,IAAkCnpE,EAAWN,OAASM,EAAW3J,MACjEizE,GAAatpE,EAAW84B,8BAC5B13C,KAAK4gF,KACL+C,EAAI1tD,SAASC,S,EAKf,MAAOiyD,WAA6BzH,GACtC,WAAA3gF,CAAY4jF,EAAmBrgF,EAAe0jE,EAAkBohB,EAAsBh1D,EAAeC,GAEjG,GADA9yB,QACI+C,EAAQqgF,EAAI52D,KAAK0tB,mBAAoB,MAAM,IAAIt4C,MAAM,mBAEzD,IAAK,IAAIy4C,EAAcosB,EAAUpsB,EAAMosB,EAAW5zC,EAAOwnB,IACrD,IAAK,IAAIV,EAAuBkuC,EAAcluC,EAAekuC,EAAe/0D,EAAQ6mB,IAC5EypC,EAAI52D,KAAKurB,SAAS4B,GAAcjC,KAAK2C,IAAQt3C,IAC7CqgF,EAAI52D,KAAKurB,SAAS4B,GAAcjC,KAAK2C,GAAOt3C,EAC5CtD,KAAK4gF,MAMjB,GAAIwH,GAAgBzE,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAAmB,CACzE,MAAMytB,EAA0BgpC,EAAI0E,oBAEhC1E,EAAI2E,iBAAiBF,GADV,MAAXztC,EACqCA,EAAQ3V,YAAY,GAGpB,CAE5C,CAED2+C,EAAI1tD,SAASC,S,EAIf,MAAOqyD,WAAuB7H,GAChC,WAAA3gF,CAAY4jF,EAAmBqC,EAAkBwC,GAE7C,GADAjoF,QACIojF,EAAI52D,KAAKoJ,UAAY6vD,EAAU,CAC/B,IAAK,MAAM7+D,KAAWw8D,EAAI52D,KAAKurB,SAC3B,GAAIkwC,EAAa,CACb,KAAOrhE,EAAQ8wB,KAAKp1C,OAASmjF,GACzB7+D,EAAQ8wB,KAAKgF,QAAQ,GAErB0mC,EAAI52D,KAAKoJ,SAAW6vD,GACpB7+D,EAAQ8wB,KAAK/b,OAAO,EAAGynD,EAAI52D,KAAKoJ,SAAW6vD,EAElD,KAAM,CACH,KAAO7+D,EAAQ8wB,KAAKp1C,OAASmjF,GACzB7+D,EAAQ8wB,KAAKltC,KAAK,GAEtBoc,EAAQ8wB,KAAKp1C,OAASmjF,CACzB,CAGL,GAAIwC,EAAa,CACb,MAAMC,EAAezC,EAAWrC,EAAI52D,KAAKoJ,SACzCwtD,EAAI/oC,IAAMzvC,KAAK2L,IAAI,EAAG6sE,EAAI/oC,IAAM6tC,IAC5BA,EAAO,GAAK9E,EAAI/uD,aAAe,KAC/B+uD,EAAI/uD,aAAezpB,KAAK2L,IAAI,EAAG6sE,EAAI/uD,aAAe6zD,IAEtD9E,EAAI52D,KAAKwtB,UAAYpvC,KAAK2L,IAAI,EAAG6sE,EAAI52D,KAAKwtB,UAAYkuC,EACzD,CACD9E,EAAI/oC,IAAMzvC,KAAKoC,IAAIo2E,EAAI/oC,IAAKorC,EAAW,GACvCrC,EAAI52D,KAAKytB,WAAarvC,KAAKoC,IAAIy4E,EAAUrC,EAAI52D,KAAKytB,YAClDmpC,EAAI52D,KAAKwtB,UAAYpvC,KAAKoC,IAAIy4E,EAAWrC,EAAI52D,KAAKytB,WAAYmpC,EAAI52D,KAAKwtB,WACvEopC,EAAI52D,KAAKoJ,SAAW6vD,EACpBrC,EAAI1tD,SAASC,UAEbl2B,KAAK4gF,IACR,C,EAIH,MAAO8H,WAAyBhI,GAClC,WAAA3gF,CAAY4jF,EAAmB3jD,EAAe/E,GAC1C16B,QAEA,MAAMooF,EAAoBx9E,KAAKoC,IAAIjM,EAAOoQ,YAAaiyE,EAAI52D,KAAKoJ,SAAW8E,GAE3E,GAAa,IADbA,EAAQ0tD,EAAYhF,EAAI52D,KAAKoJ,UAC7B,CAEA,IAAK,MAAMhP,KAAWw8D,EAAI52D,KAAKurB,SAC3B,KAAOnxB,EAAQ8wB,KAAKp1C,OAAS8lF,GACzBxhE,EAAQ8wB,KAAK/b,OAAO8D,EAAO,EAAG,GAGtC2jD,EAAI52D,KAAKoJ,SAAWwyD,EAEpBhF,EAAI/oC,KAAO3f,EACX0oD,EAAI/uD,cAAgBqG,EAChB0oD,EAAI52D,KAAKwtB,WAAava,EACtB2jD,EAAI52D,KAAKwtB,WAAatf,EACf0oD,EAAI52D,KAAKwtB,UAAYopC,EAAI52D,KAAKytB,YAAcxa,IACnD2jD,EAAI52D,KAAKytB,YAAcvf,GAG3B0oD,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IAlBW,C,EAsBlB,MAAOgI,WAAyBlI,GAClC,WAAA3gF,CAAY4jF,EAAmB3jD,EAAe/E,GAC1C16B,QAEA,IAAK,MAAM4mB,KAAWw8D,EAAI52D,KAAKurB,SAC3BnxB,EAAQ8wB,KAAK/b,OAAO8D,EAAO/E,GACA,GAAvB9T,EAAQ8wB,KAAKp1C,QAAaskB,EAAQ8wB,KAAKltC,KAAK,GAEpD44E,EAAI52D,KAAKoJ,SAAWhrB,KAAK2L,IAAI,EAAG6sE,EAAI52D,KAAKoJ,SAAW8E,GAEpD0oD,EAAI/oC,IAAMzvC,KAAK2L,IAAI,EAAG6sE,EAAI/oC,IAAM3f,GAEhC0oD,EAAI/uD,aAAezpB,KAAK2L,IAAI,EAAG6sE,EAAI/uD,aAAeqG,GAC9C0oD,EAAI52D,KAAKwtB,WAAava,EACtB2jD,EAAI52D,KAAKwtB,UAAYpvC,KAAK2L,IAAI,EAAG6sE,EAAI52D,KAAKwtB,UAAYtf,GAC/C0oD,EAAI52D,KAAKwtB,UAAYopC,EAAI52D,KAAKytB,WAAaxa,IAClD2jD,EAAI52D,KAAKytB,YAAcvf,GAE3B0oD,EAAI52D,KAAKytB,WAAarvC,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIo2E,EAAI52D,KAAKoJ,SAAWwtD,EAAI52D,KAAKwtB,UAAWopC,EAAI52D,KAAKytB,aAE5FmpC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOiI,WAA8BnI,GACvC,WAAA3gF,CAAY4jF,EAAmB/qC,EAAoBD,EAA0BD,EAAwBD,EAA8BD,EAAmBD,EAAoBM,GACtKt4C,QAKAojF,EAAI52D,KAAK6rB,WAAaA,EACtB+qC,EAAI52D,KAAK4rB,iBAAmBA,EAC5BgrC,EAAI52D,KAAK2rB,eAAiBA,EAC1BirC,EAAI52D,KAAK0rB,qBAAuBA,EAChCkrC,EAAI52D,KAAKyrB,UAAYA,EACrBmrC,EAAI52D,KAAKwrB,WAAaA,EACtBorC,EAAI52D,KAAK8rB,WAAaA,EAEtB8qC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAKP,MAAOkI,WAA2BpI,GACpC,WAAA3gF,CAAY4jF,EAAmBoF,EAAsBC,EAAsBtzE,GACvEnV,QAEAojF,EAAI52D,KAAKurB,SAASpc,OAAO6sD,EAAerzE,EAAQ,KAAMiuE,EAAI52D,KAAKurB,SAASpc,OAAO6sD,EAAcC,EAAeD,EAAe,IAG3HC,EAAe79E,KAAK2L,IAAIkyE,EAAcD,GACtC,IAAK,IAAI7uC,EAAuBypC,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAAmBgtB,EAAeypC,EAAI52D,KAAKiK,kBAAmBkjB,IAChI,IAAK,IAAI6qB,EAAwB,EAAGA,EAAgB4e,EAAI52D,KAAKurB,SAAS4B,GAAclV,YAAYniC,OAAQkiE,IAAiB,CACrH,IAAInmD,EAAyB+kE,EAAI52D,KAAKurB,SAAS4B,GAAclV,YAAY+/B,GACzE,IAAK,IAAIl6D,EAAY,EAAGA,EAAIvJ,EAAOyY,SAAUlP,IACrC+T,EAAWgJ,YAAY/c,IAAMk+E,GAAgBnqE,EAAWgJ,YAAY/c,IAAMm+E,EAC1EpqE,EAAWgJ,YAAY/c,IAAM6K,EAExBkJ,EAAWgJ,YAAY/c,IAAMk+E,EAAerzE,GAAUkJ,EAAWgJ,YAAY/c,IAAMm+E,EAAetzE,IACvGkJ,EAAWgJ,YAAY/c,IAAM6K,GAAUszE,EAAeD,EAAe,GAGhF,CAGLpF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAKP,MAAOqI,WAA0BvI,GACnC,WAAA3gF,CAAY4jF,EAAmBvzE,GAC3B7P,QAEA,IAAK,IAAIsK,EAAY,EAAGA,EAAIvJ,EAAOsY,iBAAkB/O,IACjD84E,EAAI52D,KAAKsrB,YAAYxtC,GAAKuF,EAAMvF,GAGpC84E,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOsI,WAA2BxI,GACpC,WAAA3gF,CAAY4jF,EAAmBwF,EAA8BC,EAA8BC,GAEvF,GADA9oF,QACIojF,EAAI52D,KAAKE,mBAAqBk8D,GAAwBxF,EAAI52D,KAAKG,mBAAqBk8D,GAAwBzF,EAAI52D,KAAK+sB,iBAAmBuvC,EAAoB,CAC5J,MAAMC,EAAyB,GAE/B,SAASC,EAAYC,EAAkBC,EAAkBC,EAAkBC,EAAkB3nD,EAAgBjiB,EAAkBk5B,GAC3H,IAAK,IAAIpuC,EAAY,EAAGA,EAAI2+E,EAAU3+E,IAAK,CACvC,MAAMqvC,EAAervC,EAAI6+E,EACnB5F,EAAaj5E,EAAI8+E,EACvB,GAAI9+E,EAAI4+E,EACJH,EAAYpvC,GAAgBypC,EAAI52D,KAAKurB,SAASwrC,OAC3C,CACHwF,EAAYpvC,GAAgB,IAAInC,GAChCuxC,EAAYpvC,GAAclY,OAASA,EACnC,IAAK,IAAI/H,EAAY,EAAGA,EAAI34B,EAAOqQ,mBAAoBsoB,IAAK,CACxD,MAAMrb,EAAyB,IAAI8uB,GAAW3tB,EAASk5B,GACvD,GAAKA,EAMDr6B,EAAWkxB,gBAAe,EAAqB/vB,EAASk5B,OANhD,CACR,MAAMn7B,EAAsB8rE,GAAsB7pE,GAC5CzB,EAAiBV,EAAaC,cAAcC,GAClDc,EAAWynB,eAAe/nB,EAAOgB,SAAUS,EAASk5B,EAA0B,GAAnB0qC,EAAI52D,KAAK+Y,QAAkC,GAAnB69C,EAAI52D,KAAK+Y,OAAa69C,EAAI52D,KAAK+Y,QAAU,GAC5HlnB,EAAWN,OAASR,CACvB,CAGDwrE,EAAYpvC,GAAclV,YAAY/K,GAAKrb,CAC9C,CACD,IAAK,IAAIqb,EAAY,EAAGA,EAAI0pD,EAAI52D,KAAK0tB,mBAAoBxgB,IACrDqvD,EAAYpvC,GAAclC,SAAS/d,GAAK,IAAI6K,GAEhD,IAAK,IAAI7K,EAAY,EAAGA,EAAI0pD,EAAI52D,KAAKoJ,SAAU8D,IAC3CqvD,EAAYpvC,GAAcjC,KAAKhe,GAAK,CAE3C,CACJ,C,CAGLsvD,EAAYJ,EAAsBxF,EAAI52D,KAAKE,kBAAmB,EAAG,EAAG,GAAG,GAAO,GAC9Es8D,EAAYH,EAAsBzF,EAAI52D,KAAKG,kBAAmBi8D,EAAsBxF,EAAI52D,KAAKE,kBAAmB,GAAG,GAAM,GACzHs8D,EAAYF,EAAoB1F,EAAI52D,KAAK+sB,gBAAiBsvC,EAAuBD,EAAsBxF,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAAmB,GAAG,GAAO,GAE1K,IAAI28D,EAAwBlG,EAAI52D,KAAKE,kBACrC02D,EAAI52D,KAAKE,kBAAoBk8D,EAC7BxF,EAAI52D,KAAKG,kBAAoBk8D,EAC7BzF,EAAI52D,KAAK+sB,gBAAkBuvC,EAE3B,IAAK,IAAInvC,EAAuB,EAAGA,EAAeypC,EAAI52D,KAAKiK,kBAAmBkjB,IAC1EypC,EAAI52D,KAAKurB,SAAS4B,GAAgBovC,EAAYpvC,GAElDypC,EAAI52D,KAAKurB,SAASz1C,OAAS8gF,EAAI52D,KAAKiK,kBAEpC2sD,EAAIx8D,QAAUhc,KAAKoC,IAAIo2E,EAAIx8D,QAASgiE,EAAuBC,EAAuBC,EAAqB,GAGvG,IAAK,IAAInvC,EAAuBypC,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAAmBgtB,EAAeypC,EAAI52D,KAAKiK,kBAAmBkjB,IAChI,IAAK,IAAI6qB,EAAwB,EAAGA,EAAgB4e,EAAI52D,KAAKurB,SAAS4B,GAAclV,YAAYniC,OAAQkiE,IACpG,IAAK,IAAIx/B,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAAO,CAEpD,IAAI3mB,EAAyB+kE,EAAI52D,KAAKurB,SAAS4B,GAAclV,YAAY+/B,GACrE7rB,EAAqBt6B,EAAWgJ,YAAY2d,IAG3C2T,GAAcyqC,EAAI52D,KAAKE,mBAAqBisB,EAAa2wC,GAAkB3wC,GAAcyqC,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,qBAChItO,EAAWlC,WAAW6oB,GAAOjkC,EAAOob,WAAW1X,WAAiB,KAAEF,OAIlEo0C,GAAc2wC,GAAiBA,EAAgBV,IAC/CvqE,EAAWgJ,YAAY2d,IAAQ4jD,EAAuBU,EAE7D,CAITlG,EAAI1tD,SAASC,UAEbpP,GAAYC,cAEZ/mB,KAAK4gF,IACR,C,EAIH,MAAOkJ,WAAyBtI,GACrC,WAAAzhF,CAAY4jF,EAAmB7+E,EAAeib,EAAkBk5B,GAC/D14C,QACA,MAAM4oF,EAA+BxF,EAAI52D,KAAKE,mBAAqBlN,GAAWk5B,EAAQ,EAAI,GAC9EmwC,EAA+BzF,EAAI52D,KAAKG,oBAAsBnN,GAAWk5B,EAAQ,EAAI,GACrFowC,EAA6B1F,EAAI52D,KAAK+sB,iBAAmB/5B,IAAYk5B,EAAQ,EAAI,GAEvF,GAAIkwC,GAAwB7nF,EAAOgY,sBAAwB8vE,GAAwB9nF,EAAOkY,sBAAwB6vE,GAAsB/nF,EAAOoY,mBAAoB,CAC/J,MAAMqwE,EAA4BhqE,EAAU4jE,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAAoBy2D,EAAI52D,KAAKE,kBAC/GjtB,KAAKyhF,OAAO,IAAIyH,GAAmBvF,EAAKwF,EAAsBC,EAAsBC,IAChFU,EAAoB,GAAKjlF,GACzB9E,KAAKyhF,OAAO,IAAIqH,GAAmBnF,EAAK7+E,EAAOilF,EAAoB,EAAG,IAG1EpG,EAAIjvD,MAAM4vC,yBACVqf,EAAIqG,oBAAqB,CAClC,C,EAIG,MAAOC,WAA4BzI,GACxC,WAAAzhF,CAAY4jF,EAAmBuG,EAAkBC,GAC1C5pF,QAEA,MAAM6pF,EAAiBD,EAGvB,IAAK,IAAIjxC,EAAqByqC,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAAmBgsB,EAAayqC,EAAI52D,KAAKurB,SAASz1C,OAAQq2C,IAC1H,IAAK,IAAI+C,EAA0B,EAAGA,EAAkB0nC,EAAI52D,KAAKurB,SAASY,GAAYlU,YAAYniC,OAAQo5C,IAAmB,CACzH,MAAM9C,EAA4BwqC,EAAI52D,KAAKurB,SAASY,GAAYlU,YAAYiX,GAC5E,IAAK,IAAI1W,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IACzC4T,EAAcvxB,YAAY2d,IAAQ2kD,GAAY/wC,EAAcvxB,YAAY2d,IAAQ6kD,EAChFpqF,KAAKyhF,OAAO,IAAI4I,GAAiB1G,EAAKp+C,EAAK,EAAG4T,IAEzCA,EAAcvxB,YAAY2d,GAAO6kD,GACtCpqF,KAAKyhF,OAAO,IAAI4I,GAAiB1G,EAAKp+C,EAAK4T,EAAcvxB,YAAY2d,IAAQ6kD,EAASF,EAAW,GAAK,EAAG/wC,GAGpH,CAGX,KAAOgxC,GAAYD,GAAU,CACnB,MAAMnqE,EAAmB4jE,EAAI52D,KAAKotB,kBAAkBgwC,GAC9ClxC,EAAiB0qC,EAAI52D,KAAKqtB,gBAAgB+vC,GACzDxG,EAAI52D,KAAKurB,SAASpc,OAAOiuD,EAAU,GACtBpqE,EACA4jE,EAAI52D,KAAKG,oBACF+rB,EACP0qC,EAAI52D,KAAK+sB,kBAErB6pC,EAAI52D,KAAKE,oBAEDk9D,GACT,CAESxG,EAAI52D,KAAKE,kBAAoB3rB,EAAO+X,sBACpCrZ,KAAKyhF,OAAO,IAAIyH,GAAmBvF,EAAKriF,EAAO+X,qBAAsBsqE,EAAI52D,KAAKG,kBAAmBy2D,EAAI52D,KAAK+sB,kBAG9GhzB,GAAYC,cACZ48D,EAAIqG,oBAAqB,EAE/BhqF,KAAKyhF,OAAO,IAAI6I,GAAiB3G,EAAKx4E,KAAK2L,IAAI,EAAGozE,EAAW,GAAIvG,EAAI/oC,MAE/D+oC,EAAIjvD,MAAM4vC,yBAEhBtkE,KAAK4gF,KACL+C,EAAI1tD,SAASC,S,EAIT,MAAOo0D,WAAyB5J,GAClC,WAAA3gF,CAAY4jF,EAAmBI,EAAoBwG,EAAgBC,GAAoB,GACnFjqF,QACA,MAAMujF,EAAqBH,EAAIx8D,QACzBwlD,EAAiBgX,EAAI/oC,IAO3B,GANA+oC,EAAIx8D,QAAU48D,EACdJ,EAAI/oC,IAAM2vC,EACLC,GACD7G,EAAI8G,UAAUC,0BAGd/G,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,SAAU,CACvC,MAAMwzB,EAA0BgpC,EAAI52D,KAAM48B,WAAWg6B,EAAIx8D,QAASw8D,EAAI/oC,KACvD,MAAXD,IACAgpC,EAAI2E,iBAAiB3E,EAAIx8D,SAAWwzB,EAAQ3V,YAAY,GAC/D,CACD2+C,EAAI1tD,SAASC,UACT4tD,GAAcC,GAAcpX,GAAU4d,GACtCvqF,KAAK4gF,I,EAKX,MAAO+J,WAAqBjK,GAC9B,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAWe,QACpBqmE,IACZpnE,EAAWe,OAASqmE,EACpBpnE,EAAW2vB,aAAejtC,EAAOiU,QAAQqJ,EAAWe,QAAQnK,OAC5DoJ,EAAW4vB,aAAeltC,EAAOiU,QAAQqJ,EAAWe,QAAQlK,OAC5DmJ,EAAW6vB,aAAentC,EAAOiU,QAAQqJ,EAAWe,QAAQjK,OAC5DkJ,EAAW8vB,iBAAmBptC,EAAOiU,QAAQqJ,EAAWe,QAAQlb,WAChEma,EAAW+vB,WAAartC,EAAOiU,QAAQqJ,EAAWe,QAAQhK,KAC1DiJ,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOgK,WAA2BlK,GACpC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E,IAAImF,EAAqBjsE,EAAWe,OAChCsoE,GAAYjC,GAAY6E,GAAcvpF,EAAOiU,QAAQ1S,SACrD+b,EAAW2vB,aAAey3C,EAC1BpnE,EAAWe,OAASre,EAAOiU,QAAQ1S,OACnC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOkK,WAA2BpK,GACpC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E,IAAImF,EAAqBjsE,EAAWe,OAChCsoE,GAAYjC,GAAY6E,GAAcvpF,EAAOiU,QAAQ1S,SACrD+b,EAAW4vB,aAAew3C,EAC1BpnE,EAAWe,OAASre,EAAOiU,QAAQ1S,OACnC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOmK,WAA2BrK,GACpC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E,IAAImF,EAAqBjsE,EAAWe,OAChCsoE,GAAYjC,GAAY6E,GAAcvpF,EAAOiU,QAAQ1S,SACrD+b,EAAW6vB,aAAeu3C,EAC1BpnE,EAAWe,OAASre,EAAOiU,QAAQ1S,OACnC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOoK,WAA+BtK,GACxC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E,IAAImF,EAAqBjsE,EAAWe,OAChCsoE,GAAYjC,GAAY6E,GAAcvpF,EAAOiU,QAAQ1S,SACrD+b,EAAW8vB,iBAAmBs3C,EAC9BpnE,EAAWe,OAASre,EAAOiU,QAAQ1S,OACnC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOqK,WAAyBvK,GAClC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E,IAAImF,EAAqBjsE,EAAWe,OAChCsoE,GAAYjC,GAAY6E,GAAcvpF,EAAOiU,QAAQ1S,SACrD+b,EAAW+vB,WAAaq3C,EACxBpnE,EAAWe,OAASre,EAAOiU,QAAQ1S,OACnC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOsK,WAAoBxK,GAC7B,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAWc,OACpBsmE,IACZhmF,KAAK4gF,KACLhiE,EAAWc,MAAQsmE,EACnBpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,U,EAKnB,MAAOi1D,WAAsBzK,GAC/B,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAWkB,SACpBkmE,IACZpnE,EAAWkB,QAAUkmE,EACrBpnE,EAAWwD,aAAe9gB,EAAO0T,SAAS4J,EAAWkB,SAASlS,UAC9DgR,EAAWyD,aAAe/gB,EAAO0T,SAAS4J,EAAWkB,SAAS5K,WAAa,EAC3E0J,EAAW0D,aAAe,GAC1B1D,EAAW2D,YAAcjhB,EAAO0T,SAAS4J,EAAWkB,SAAS7K,KAC7D2J,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOwK,WAA2B1K,GACpC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E,IAAItwB,EAAsBx2C,EAAWkB,QACrC6jE,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAEzF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAY5wB,GAAe9zD,EAAO0T,SAASnS,SACvD+b,EAAWwD,aAAe4jE,EAAW,GACrCpnE,EAAWkB,QAAUxe,EAAO0T,SAASnS,OACrC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOyK,WAA2B3K,GACpC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E,IAAItwB,EAAsBx2C,EAAWkB,QACrC6jE,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAEzF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAY5wB,GAAe9zD,EAAO0T,SAASnS,SACvD+b,EAAW0D,aAAe0jE,EAC1BpnE,EAAWkB,QAAUxe,EAAO0T,SAASnS,OACrC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO0K,WAA2B5K,GACpC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E,IAAItwB,EAAsBx2C,EAAWkB,QACrC6jE,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAEzF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAY5wB,GAAe9zD,EAAO0T,SAASnS,SACvD+b,EAAWyD,aAAe2jE,EAC1BpnE,EAAWkB,QAAUxe,EAAO0T,SAASnS,OACrC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO2K,WAA0B7K,GACnC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACxEuC,EAAmBrpE,EAAW2D,YACpC,IAAI6yC,EAAsBx2C,EAAWkB,QAErC6jE,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAY5wB,GAAe9zD,EAAO0T,SAASnS,SACvD+b,EAAW2D,YAAcyjE,EACzBpnE,EAAWkB,QAAUxe,EAAO0T,SAASnS,OACrC8gF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO4K,WAA4B9K,GACrC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QAC+BojF,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACnExjE,cAAgB8jE,EAC3BrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,aAAaF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAErF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO6K,WAA6B/K,GACtC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACxEuC,EAAWrpE,EAAWqD,eAE5B0hE,EAAI1tD,SAASC,UACT+xD,GAAYjC,IACZpnE,EAAWqD,eAAiB+jE,EAC5BhmF,KAAK4gF,K,EAKX,MAAO8K,WAAkChL,GAC3C,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACxEuC,EAAWrpE,EAAWoD,oBAE5B2hE,EAAI1tD,SAASC,UACT+xD,GAAYjC,IACZpnE,EAAWoD,oBAAsBgkE,EACjChmF,KAAK4gF,K,EAKX,MAAO+K,WAAuBjL,GAChC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACxEuC,EAAWrpE,EAAWwE,QAE5BugE,EAAI1tD,SAASC,UACT+xD,GAAYjC,IACZpnE,EAAWwE,QAAU4iE,EACrBhmF,KAAK4gF,K,EAKX,MAAOgL,WAAuBlL,GAChC,WAAA3gF,CAAY4jF,EAAmB/kE,EAAwBgxB,GACnDrvC,QACAqvC,EAAahI,sBACbhpB,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOiL,WAAwBnL,GACjC,WAAA3gF,CAAY4jF,EAAmB/kE,EAAwB2wB,GACnDhvC,QACAgvC,EAAc3H,sBACdhpB,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOkL,WAA8BpL,GACvC,WAAA3gF,CAAY4jF,EAAmBoI,EAAmB/F,GAC9CzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAW4wB,iBAAiBu8C,IACrC/F,IACZpnE,EAAW4wB,iBAAiBu8C,GAAa/F,EACzCpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKjB,MAAMoL,WAA+BtL,GAEjC,WAAA3gF,CAAoB8yB,GAChBtyB,QADgBP,KAAI6yB,EAAJA,EAEhB7yB,KAAKisF,GAAcjsF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,uB,CAGjF,MAAA5E,GACE9gF,KAAK6gF,WACN7gF,KAAKisF,GAAY3tE,OAASte,KAAKisF,GAAYh3E,KAC3CjV,KAAK6yB,EAAKoD,SAASC,U,EAKzB,MAAOg2D,WAAyBF,GAClC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAY5qE,WAAa2kE,EAC9BrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,eAAeF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBACvF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOuL,WAA4BH,GACrC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYp9C,cAAgBm3C,EAEjCrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOwL,WAAyBJ,GAClC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAY59C,WAAa23C,EAC9BrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOyL,WAAqBL,GAC9B,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAY39C,OAAS03C,EAAW1kF,EAAOgZ,aAC5CqpE,EAAI1tD,SAASC,UACbytD,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAmB,OAAEF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAC9EuC,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO0L,WAAyBN,GAClC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAY7qE,WAAa4kE,EAC9BrC,EAAI1tD,SAASC,UACbytD,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAuB,WAAEF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAClFuC,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO2L,WAA6BP,GACtC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYn9C,eAAiBk3C,EAElCrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO4L,WAAqCR,GAC9C,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GAEN3jF,KAAKisF,GAAY9qE,uBAAyB6kE,EAC1CrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO6L,WAA4BT,GACrC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYlrE,cAAgBilE,EACjCrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAoB,QAAEF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBACnF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO8L,WAA2BhM,GACpC,WAAA3gF,CAAY4jF,EAAmB/kE,EAAwBonE,GACnDzlF,QACAqe,EAAWgD,aAAeokE,EACV,GAAZA,GACApnE,EAAWW,SAAS4lB,QACpBvmB,EAAWkhD,iBAAmBlhD,EAAWW,SACzCX,EAAWmhD,eAAiB,OAI5BnhD,EAAWW,SAASosB,sBAAsB/sB,EAAWgvB,kBAAmBhvB,EAAWivB,mBAAoBvsC,EAAO4W,UAAUlT,WAAiB,MACzI4Z,EAAWkhD,iBAAmBlhD,EAAWW,SACzCX,EAAWmhD,eAAiB,MAEhCnhD,EAAW84B,8BACXisC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAO+L,WAA6BjM,GACtC,WAAA3gF,CAAY4jF,EAAmB/kE,EAAwBonE,GACnDzlF,QACAqe,EAAWgE,eAAiBojE,EACZ,GAAZA,GACApnE,EAAWgC,WAAWukB,QACtBvmB,EAAW00C,mBAAqB10C,EAAWgC,WAC3ChC,EAAWslD,iBAAmB,OAI9BtlD,EAAWgC,WAAW+qB,sBAAsB/sB,EAAWkvB,oBAAqBlvB,EAAWmvB,qBAAsBzsC,EAAO4W,UAAUlT,WAAiB,MAC/I4Z,EAAW00C,mBAAqB10C,EAAWgC,WAC3ChC,EAAWslD,iBAAmB,MAElCtlD,EAAW84B,8BACXisC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOgM,WAAgCZ,GACzC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYr+C,kBAAoBo4C,EACrCrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,eAAeF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBACvF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOiM,WAAiCb,GAC1C,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYp+C,mBAAqBm4C,EACtCrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,gBAAgBF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBACxF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOkM,WAAkCd,GAC3C,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYn+C,oBAAsBk4C,EACvCrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,iBAAiBF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBACzF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOmM,WAAmCf,GAC5C,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYl+C,qBAAuBi4C,EACxCrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,kBAAkBF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAC1F/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOoM,WAA6BjM,GAYtC,WAAAhhF,CAAY4jF,EAAmBtwB,EAAgCrrB,EAA2BljC,EAAemoF,EAAuBC,GAAoB,GAChJ3sF,MAAM2sF,GALFltF,KAAmBmtF,GAAa,GAChCntF,KAAmBotF,GAAa,GAChCptF,KAAsBqtF,GAAa,GACnCrtF,KAAsBstF,GAAa,GAGvCttF,KAAK6yB,EAAO8wD,EACZ3jF,KAAKisF,GAAcjsF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACpF1lF,KAAKutF,GAAwBL,EAAWltF,KAAKisF,GAAY3tE,OAASte,KAAKisF,GAAYh3E,KACnFjV,KAAKwtF,GAAwBN,EAAWltF,KAAKisF,GAAYh3E,KAAOjV,KAAKisF,GAAY3tE,OACjFte,KAAKytF,GAAkBp6B,EACvBrzD,KAAK0tF,GAAS1lD,EACdhoC,KAAK+iC,GAASj+B,EAEd,IAAK,IAAI6yC,EAAwB,EAAGA,EAAgB33C,KAAKisF,GAAY79C,cAAeuJ,IAAiB,CACjG,IAAIn3B,EAAiBxgB,KAAKisF,GAAY/zE,UAAUy/B,GAAen3B,OAC3DyyC,EAAsBjzD,KAAKisF,GAAY/zE,UAAUy/B,GAAe7yC,MAGpE,GAFA9E,KAAKmtF,GAAoBpiF,KAAKyV,GAC9BxgB,KAAKotF,GAAoBriF,KAAKkoD,GAC1Bi6B,EAAU,CAIV,MAAM11C,EAAqCl2C,EAAOoa,4BAA4B8E,GAC1Eg3B,EAAiB17B,UAA6D,GAAhD07B,EAAiBx7B,QAAoCixE,IAC/Ez1C,EAAiBz7B,UAAYza,EAAO2S,gBAChCg/C,GAAenuD,GACf0b,EAASlf,EAAOoa,4BAA4B1W,WAAiB,KAAEF,MAC/DmuD,EAAc,GACPA,EAAcnuD,GACrBmuD,IAGAI,EAAeroB,mBAAqB,IACpCxqB,EAASlf,EAAOoa,4BAA4B1W,WAAiB,KAAEF,MAC/DmuD,EAAc,GAI7B,CACDjzD,KAAKqtF,GAAuBtiF,KAAKyV,GACjCxgB,KAAKstF,GAAuBviF,KAAKkoD,EACpC,CAEDjzD,KAAK4gF,KACL5gF,KAAKshF,M,CAGC,EAAAF,GACNphF,KAAKytF,GAAgB1iD,cAAc7O,OAAOl8B,KAAK+iC,GAAQ,EAAG/iC,KAAK0tF,IAC/D1tF,KAAKytF,GAAgBziD,oBACrBhrC,KAAKytF,GAAgB1iD,cAAcloC,OAAS7C,KAAKytF,GAAgBziD,kBACjEhrC,KAAKisF,GAAY3tE,OAASte,KAAKutF,GAC/B,IAAK,IAAI51C,EAAwB,EAAGA,EAAgB33C,KAAKisF,GAAY79C,cAAeuJ,IAChF33C,KAAKisF,GAAY/zE,UAAUy/B,GAAen3B,OAASxgB,KAAKmtF,GAAoBx1C,GAC5E33C,KAAKisF,GAAY/zE,UAAUy/B,GAAe7yC,MAAQ9E,KAAKotF,GAAoBz1C,GAE/E33C,KAAKisF,GAAYnsB,iBAAmB9/D,KAAKisF,GAAY1sE,SACrDvf,KAAKisF,GAAYlsB,eAAiB,KAClC//D,KAAKisF,GAAY34B,mBAAqBtzD,KAAKisF,GAAYrrE,WACvD5gB,KAAKisF,GAAY/nB,iBAAmB,KACpClkE,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACNrhF,KAAKytF,GAAgB1iD,cAAc7O,OAAOl8B,KAAK+iC,GAAQ,GACvD/iC,KAAKytF,GAAgBziD,oBACrBhrC,KAAKytF,GAAgB1iD,cAAcloC,OAAS7C,KAAKytF,GAAgBziD,kBACjEhrC,KAAKisF,GAAY3tE,OAASte,KAAKwtF,GAC/B,IAAK,IAAI71C,EAAwB,EAAGA,EAAgB33C,KAAKisF,GAAY79C,cAAeuJ,IAChF33C,KAAKisF,GAAY/zE,UAAUy/B,GAAen3B,OAASxgB,KAAKqtF,GAAuB11C,GAC/E33C,KAAKisF,GAAY/zE,UAAUy/B,GAAe7yC,MAAQ9E,KAAKstF,GAAuB31C,GAElF33C,KAAKisF,GAAYnsB,iBAAmB9/D,KAAKisF,GAAY1sE,SACrDvf,KAAKisF,GAAYlsB,eAAiB,KAClC//D,KAAKisF,GAAY34B,mBAAqBtzD,KAAKisF,GAAYrrE,WACvD5gB,KAAKisF,GAAY/nB,iBAAmB,KACpClkE,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAOy3D,WAA8B5M,GAUvC,WAAAhhF,CAAY4jF,EAAmB37C,EAA2B4lD,EAAiBC,EAAiBC,EAAiBC,GACzGxtF,OAAM,GACNP,KAAK6yB,EAAO8wD,EACZ3jF,KAAKisF,GAAcjsF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACpF1lF,KAAKutF,GAAwBvtF,KAAKisF,GAAYh3E,KAC9CjV,KAAKwtF,GAAwBxtF,KAAKisF,GAAY3tE,OAC9Cte,KAAK0tF,GAAS1lD,EACdhoC,KAAKguF,GAAWJ,EAChB5tF,KAAKiuF,GAAWJ,EAChB7tF,KAAKkuF,GAAWJ,EAChB9tF,KAAKmuF,GAAWJ,EAChB/tF,KAAK4gF,KACL5gF,KAAKshF,M,CAGC,EAAAF,GACNphF,KAAK0tF,GAAOpkD,KAAOtpC,KAAKiuF,GACxBjuF,KAAK0tF,GAAOnkD,KAAOvpC,KAAKmuF,GACxBnuF,KAAKisF,GAAY3tE,OAASte,KAAKutF,GAC/BvtF,KAAKisF,GAAYnsB,iBAAmB9/D,KAAKisF,GAAY1sE,SACrDvf,KAAKisF,GAAYlsB,eAAiB,KAClC//D,KAAKisF,GAAY34B,mBAAqBtzD,KAAKisF,GAAYrrE,WACvD5gB,KAAKisF,GAAY/nB,iBAAmB,KACpClkE,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACNrhF,KAAK0tF,GAAOpkD,KAAOtpC,KAAKguF,GACxBhuF,KAAK0tF,GAAOnkD,KAAOvpC,KAAKkuF,GACxBluF,KAAKisF,GAAY3tE,OAASte,KAAKwtF,GAC/BxtF,KAAKisF,GAAYnsB,iBAAmB9/D,KAAKisF,GAAY1sE,SACrDvf,KAAKisF,GAAYlsB,eAAiB,KAClC//D,KAAKisF,GAAY34B,mBAAqBtzD,KAAKisF,GAAYrrE,WACvD5gB,KAAKisF,GAAY/nB,iBAAmB,KACpClkE,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAOk4D,WAA6BrN,GAUtC,WAAAhhF,CAAY4jF,EAAmBrkE,EAA0B+uE,EAA6BC,EAAwBC,EAA+C,KAAMC,EAAkD,MACjNjuF,OAAM,GACNP,KAAK6yB,EAAO8wD,EACZ3jF,KAAKisF,GAAcjsF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACpF1lF,KAAKutF,GAAwBvtF,KAAKisF,GAAYh3E,KAC9CjV,KAAKwtF,GAAwBxtF,KAAKisF,GAAY3tE,OAC9Cte,KAAKyuF,GAAeJ,EACpBruF,KAAK0uF,GAAiBJ,EACtBtuF,KAAKytF,GAAkBnuE,EACL,MAAdivE,GAAuC,MAAjBC,IACtBxuF,KAAK2uF,GAAcJ,EACnBvuF,KAAK4uF,GAAiBJ,GAE1BxuF,KAAKisF,GAAYv0C,8BACjB13C,KAAK4gF,KACL5gF,KAAKshF,M,CAGC,EAAAF,GAEFphF,KAAK0uF,IACL1uF,KAAKisF,GAAYrrE,WAAa5gB,KAAKytF,GACX,MAApBztF,KAAK2uF,KACL3uF,KAAKisF,GAAYh+C,eAAiBjuC,KAAK2uF,IAC3C3uF,KAAKisF,GAAY34B,mBAAqBtzD,KAAKisF,GAAYrrE,WACvD5gB,KAAKisF,GAAY/nB,iBAAmB,OAEpClkE,KAAKisF,GAAY1sE,SAAWvf,KAAKytF,GACT,MAApBztF,KAAK2uF,KACL3uF,KAAKisF,GAAYj+C,aAAehuC,KAAK2uF,IACzC3uF,KAAKisF,GAAYnsB,iBAAmB9/D,KAAKisF,GAAY1sE,SACrDvf,KAAKisF,GAAYlsB,eAAiB,MAGtC//D,KAAKisF,GAAY3tE,OAASte,KAAKutF,GAC/BvtF,KAAKisF,GAAYv0C,8BACjB13C,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACFrhF,KAAK0uF,IACL1uF,KAAKisF,GAAYrrE,WAAa5gB,KAAKyuF,GACR,MAAvBzuF,KAAK4uF,KACL5uF,KAAKisF,GAAYh+C,eAAiBjuC,KAAK4uF,IAC3C5uF,KAAKisF,GAAY34B,mBAAqBtzD,KAAKisF,GAAYrrE,WACvD5gB,KAAKisF,GAAY/nB,iBAAmB,OAEpClkE,KAAKisF,GAAY1sE,SAAWvf,KAAKyuF,GACN,MAAvBzuF,KAAK4uF,KACL5uF,KAAKisF,GAAYj+C,aAAehuC,KAAK4uF,IACzC5uF,KAAKisF,GAAYnsB,iBAAmB9/D,KAAKisF,GAAY1sE,SACrDvf,KAAKisF,GAAYlsB,eAAiB,MAEtC//D,KAAKisF,GAAY3tE,OAASte,KAAKwtF,GAC/BxtF,KAAKisF,GAAYv0C,8BACjB13C,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAO24D,WAAwB9N,GASjC,WAAAhhF,CAAY4jF,EAAmBz1C,EAAgBC,GAC3C5tC,OAAM,GACNP,KAAK6yB,EAAO8wD,EACZ3jF,KAAKisF,GAAcjsF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACpF1lF,KAAKutF,GAAwBvtF,KAAKisF,GAAYh3E,KAC9CjV,KAAKwtF,GAAwBxtF,KAAKisF,GAAY3tE,OAC9Cte,KAAK8uF,GAAa9uF,KAAKisF,GAAY/9C,OACnCluC,KAAK+uF,GAAc/uF,KAAKisF,GAAY99C,QACpCnuC,KAAKgvF,GAAa9gD,EAClBluC,KAAKivF,GAAc9gD,EACnBnuC,KAAK4gF,KACL5gF,KAAKshF,M,CAGC,EAAAF,GACNphF,KAAKisF,GAAY/9C,OAASluC,KAAKgvF,GAC/BhvF,KAAKisF,GAAY99C,QAAUnuC,KAAKivF,GAChCjvF,KAAKisF,GAAY3tE,OAASte,KAAKutF,GAC/BvtF,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACNrhF,KAAKisF,GAAY/9C,OAASluC,KAAK8uF,GAC/B9uF,KAAKisF,GAAY99C,QAAUnuC,KAAK+uF,GAChC/uF,KAAKisF,GAAY3tE,OAASte,KAAKwtF,GAC/BxtF,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAOg5D,WAAwBxO,GACjC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAWuB,WACpB6lE,IACZpnE,EAAWuB,UAAY6lE,EACvBpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOuO,WAA2BzO,GACpC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAWwB,cACpB4lE,IACZpnE,EAAWwB,aAAe4lE,EAC1BpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAMX,MAAOwO,WAA2B1O,GACpC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAWowB,cACpBg3C,IACZpnE,EAAWowB,aAAeg3C,EACV,GAAZA,GACApnE,EAAWswB,gBAAgB9H,WAAW4+C,GAE1CpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOyO,WAA8B3O,GACvC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAWqwB,iBACpB+2C,IACZpnE,EAAWqwB,gBAAkB+2C,EACb,GAAZA,GACApnE,EAAWuwB,mBAAmB/H,WAAW4+C,GAE7CpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO0O,WAA+B5O,GACxC,WAAA3gF,CAAY4jF,EAAmB4L,EAAuBvJ,GAClDzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAW0B,UAAUivE,GAAersE,UAC7C8iE,IACZpnE,EAAW0B,UAAUivE,GAAersE,SAAW8iE,EAC/CpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO4O,WAAiC9O,GAC1C,WAAA3gF,CAAY4jF,EAAmB4L,EAAuBtH,EAAkBjC,GACpEzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E9mE,EAAW0B,UAAUivE,GAAeluE,WAAa2kE,EACjDpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACT+xD,GAAYjC,GACZhmF,KAAK4gF,I,EAKX,MAAO6O,WAAgC/O,GACzC,WAAA3gF,CAAY4jF,EAAmB4L,EAAuBvJ,GAClDzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAW0B,UAAUivE,GAAehvE,WAC7CylE,IACZpnE,EAAW0B,UAAUivE,GAAehvE,UAAYylE,EAChDpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO8O,WAAgC1D,GACzC,WAAAjsF,CAAY4jF,EAAmB4L,EAAuBtH,EAAkBjC,GACpEzlF,MAAMojF,GACN3jF,KAAKisF,GAAY3rE,UAAUivE,GAAe3hF,UAAYo4E,EAGtDrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO+O,WAAgC3D,GACzC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAY5rE,kBAAoB2lE,EAGrCrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOgP,WAAmClP,GAC5C,WAAA3gF,CAAY4jF,GACRpjF,QACA,MAAM4mB,EAAmBw8D,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SACzCpH,EAAmB4jE,EAAI52D,KAAKotB,kBAAkBwpC,EAAIx8D,SAClD8xB,EAAiB0qC,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,SAC9CkiC,EAAyBs6B,EAAI52D,KAAKgtB,8BACxC,GAAI5yB,EAAQ6d,YAAYniC,QAAUwmD,EAAgB,OAClD,MAAMvrC,EAAsB8rE,GAAsB7pE,GAC5CzB,EAAiBV,EAAaC,cAAcC,GAC5Cc,EAAyB,IAAI8uB,GAAW3tB,EAASk5B,GACvDr6B,EAAWynB,eAAe/nB,EAAOgB,SAAUS,EAASk5B,GAAO,GAAO,EAAO,GACzEr6B,EAAWN,OAASR,EACpBc,EAAW+C,OAAS,EACpBwF,EAAQ6d,YAAYj6B,KAAK6T,GACpBq6B,IACD0qC,EAAI2E,iBAAiB3E,EAAIx8D,SAAWA,EAAQ6d,YAAYniC,OAAS,GAIrE,IAAK,IAAIq3C,EAAuBypC,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAAmBgtB,EAAeypC,EAAI52D,KAAKiK,kBAAmBkjB,IAChI,IAAK,IAAI+B,EAA0B,EAAGA,EAAkB0nC,EAAI52D,KAAKurB,SAAS4B,GAAclV,YAAYniC,OAAQo5C,IACxG,IAAK,IAAI1W,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAAO,CAEpD,IAAI3mB,EAAyB+kE,EAAI52D,KAAKurB,SAAS4B,GAAclV,YAAYiX,GACrE9C,EAAwBv6B,EAAW8wB,eAAenK,GAClD2T,EAAqBt6B,EAAWgJ,YAAY2d,GAE5C2T,GAAcyqC,EAAIx8D,SAAWgyB,GAAiBwqC,EAAI52D,KAAKurB,SAASY,GAAYlU,YAAYniC,OAAO,GAE/F+b,EAAW8wB,eAAenK,IAEjC,CAITo+C,EAAIjvD,MAAM4vC,yBAEVqf,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOiP,WAAsCnP,GAC/C,WAAA3gF,CAAY4jF,GACRpjF,QACA,MAAM4mB,EAAmBw8D,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAC/C,GAAIA,EAAQ6d,YAAYniC,QAAUvB,EAAOqQ,mBAAoB,OAC7D,MAAMm+E,EAAuBnM,EAAI2E,iBAAiB3E,EAAIx8D,SAEtD,GADAA,EAAQ6d,YAAY9I,OAAO4zD,EAAc,GACrCnM,EAAI52D,KAAKqZ,mBACT,IAAK,MAAMuU,KAAWxzB,EAAQ6wB,SAAU,CACpC,IAAK,IAAIntC,EAAY,EAAGA,EAAI8vC,EAAQ3V,YAAYniC,OAAQgI,IAChD8vC,EAAQ3V,YAAYn6B,IAAMilF,GAC1Bn1C,EAAQ3V,YAAY9I,OAAOrxB,EAAG,GAC9BA,KACO8vC,EAAQ3V,YAAYn6B,GAAKilF,GAChCn1C,EAAQ3V,YAAYn6B,KAGxB8vC,EAAQ3V,YAAYniC,QAAU,IAC9B83C,EAAQ3V,YAAY,GAAK,EAEhC,CAIL,IAAK,IAAIkV,EAAuBypC,EAAI52D,KAAKE,kBAAoB02D,EAAI52D,KAAKG,kBAAmBgtB,EAAeypC,EAAI52D,KAAKiK,kBAAmBkjB,IAChI,IAAK,IAAI6qB,EAAwB,EAAGA,EAAgB4e,EAAI52D,KAAKurB,SAAS4B,GAAclV,YAAYniC,OAAQkiE,IACpG,IAAK,IAAIx/B,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAAO,CAEpD,IAAI3mB,EAAyB+kE,EAAI52D,KAAKurB,SAAS4B,GAAclV,YAAY+/B,GACrE5rB,EAAwBv6B,EAAW8wB,eAAenK,GAC7B3mB,EAAWgJ,YAAY2d,IAE9Bo+C,EAAIx8D,UAEhBgyB,EAAgB22C,EACdlxE,EAAW8wB,eAAenK,KAGtB4T,GAAiB22C,IACrBlxE,EAAW8wB,eAAenK,GAAO,EACjC3mB,EAAWlC,WAAW6oB,GAAO,GAIxC,CAITo+C,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOmP,WAA6BrP,GACtC,WAAA3gF,CAAY4jF,EAAmB7+E,GAC3BvE,QACIojF,EAAI2E,iBAAiB3E,EAAIx8D,UAAYriB,IACrC6+E,EAAI2E,iBAAiB3E,EAAIx8D,SAAWriB,EACpC6+E,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOoP,WAA+BtP,GACxC,WAAA3gF,CAAY4jF,EAAmBsM,EAAgCC,GAC3D3vF,QACA,MAAM4vF,EAAiCxM,EAAI52D,KAAKitB,mBAC1Co2C,EAAiCzM,EAAI52D,KAAKqZ,mBAChD,GAAI+pD,GAAyBF,GAAyBG,GAAyBF,EAA/E,CACAvM,EAAI52D,KAAKitB,mBAAqBi2C,EAC9BtM,EAAI52D,KAAKqZ,mBAAqB8pD,EAE9B,IAAK,IAAIh2C,EAAuB,EAAGA,EAAeypC,EAAI52D,KAAKiK,kBAAmBkjB,IAAgB,CAC1F,MAAM/yB,EAAmBw8D,EAAI52D,KAAKurB,SAAS4B,GACvC/yB,EAAQ6d,YAAYniC,OAAS8gF,EAAI52D,KAAKgtB,gCACtC5yB,EAAQ6d,YAAYniC,OAAS8gF,EAAI52D,KAAKgtB,+BAE1C,IAAK,IAAI9f,EAAY,EAAGA,EAAI0pD,EAAI52D,KAAK0tB,mBAAoBxgB,IAAK,CAC1D,MAAM0gB,EAAmBxzB,EAAQ6wB,SAAS/d,GAC1C,IAAKm2D,GAAyBF,EAAuB,CAEjD,IAAK,IAAIrlF,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IACpD8vC,EAAQ3V,YAAYn6B,GAAKA,EAE7B8vC,EAAQ3V,YAAYniC,OAASskB,EAAQ6d,YAAYniC,MACpD,CACDu/E,GAAiCznC,EAAQ3V,YAAa2+C,EAAI52D,KAAMmtB,EACnE,CACJ,CAIDypC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IAzBiG,C,EA8BxG,MAAOyP,WAAkB3P,GAC3B,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACIojF,EAAI52D,KAAK3pB,KAAO4iF,IAChBrC,EAAI52D,KAAK3pB,IAAM4iF,EACfrC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO0P,WAAmB5P,GAC5B,WAAA3gF,CAAoB8yB,EAA2B82D,EAAyB4G,EAA0B7G,EAAyBf,GACvHpoF,QADgBP,KAAI6yB,EAAJA,EAA2B7yB,KAAQ2pF,SAARA,EAAyB3pF,KAASuwF,UAATA,EAA0BvwF,KAAQ0pF,SAARA,EAAyB1pF,KAAS2oF,UAATA,EAEvH3oF,KAAK6yB,EAAK9F,KAAKwtB,UAAYv6C,KAAK0pF,SAChC1pF,KAAK6yB,EAAK9F,KAAKytB,WAAax6C,KAAK2oF,UACjC3oF,KAAK6yB,EAAKoD,SAASC,UACfl2B,KAAK2pF,UAAY3pF,KAAK0pF,UAAY1pF,KAAKuwF,WAAavwF,KAAK2oF,WACzD3oF,KAAK4gF,I,EAKX,MAAO4P,WAAyBzP,GAKlC,WAAAhhF,CAAY4jF,EAAmBz+C,EAAYvB,EAAe7+B,EAAeooF,GAAoB,GACzF3sF,MAAM2sF,GACNltF,KAAK6yB,EAAO8wD,EACZ3jF,KAAK0kF,GAAQx/C,EACbllC,KAAKywF,GAAS9sD,EACd3jC,KAAK+iC,GAASj+B,EACd9E,KAAK4gF,KACL5gF,KAAKshF,M,CAGC,EAAAF,GACNphF,KAAK0kF,GAAM7gD,QAAQ3H,OAAOl8B,KAAK+iC,GAAQ,EAAG/iC,KAAKywF,IAC/CzwF,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACNrhF,KAAK0kF,GAAM7gD,QAAQ3H,OAAOl8B,KAAK+iC,GAAQ,GACvC/iC,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAOw6D,WAAqBhQ,GAC9B,WAAA3gF,CAAY4jF,EAA0BsE,EAAkBjC,GACpDzlF,QADkCP,KAAQioF,SAARA,EAElCtE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6a,OAASgkD,EACxCrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO+P,WAAqBnP,GAC9B,WAAAzhF,CAAY4jF,EAAmBqC,GAC3BzlF,QAEIojF,EAAI52D,KAAK+Y,QAAUkgD,IACnBrC,EAAI52D,KAAK+Y,OAASkgD,EAClBrC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOgQ,WAAoBpP,GAC7B,WAAAzhF,CAAY4jF,EAAmBhpC,EAAkB5V,EAAc8rD,EAAwBC,EAAsBC,GACzGxwF,QAGAP,KAAKyhF,OAAO,IAAIuP,GAAmBrN,EAAKhpC,EAASk2C,EAAgBC,EAAc,MAAM,IAGrF,IAAIG,EAA6B,EACjC,GAAKtN,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,SAY9B8pE,EAAqBt2C,EAAQ5V,MAAMliC,YAXnC,IAAK,IAAIgI,EAAY,EAAGA,EAAI8vC,EAAQ5V,MAAMliC,OAAQgI,IAC9C,GAAI8vC,EAAQ5V,MAAMl6B,GAAGm1B,MAAQ6wD,EAAgB,CACzC,GAAIl2C,EAAQ5V,MAAMl6B,GAAGo1B,IAAM4wD,EAAgB,MAAM,IAAI1uF,MAErD8uF,EAAqBpmF,EAAI,CAC5B,MAAM,GAAI8vC,EAAQ5V,MAAMl6B,GAAGm1B,MAAQ8wD,EAChC,MAAM,IAAI3uF,MAQtB,KAAO0uF,EAAiBC,GAAc,CAClC,IAAK,MAAM7qD,KAAclB,EAAO,CAC5B,MAAMmsD,EAAoBjrD,EAAkB,MAAI4qD,EAC1CM,EAAkBlrD,EAAgB,IAAI4qD,EAC5C,GAAIK,GAAaJ,EAAc,MAC/B,MAAM5rD,EAAa,IAAIxB,GAAKuC,EAAoB,QAAE,GAAIirD,EAAWC,EAASlrD,EAAiB,KAAE,GAAS,MAAG,GACzGf,EAAKrB,QAAQhhC,OAAS,EACtB,IAAK,MAAM8gC,KAASsC,EAAoB,QACpCf,EAAKrB,QAAQ94B,KAAK44B,GAEtBuB,EAAKpB,KAAKjhC,OAAS,EACnB,IAAK,MAAM2hC,KAAOyB,EAAiB,KAC/Bf,EAAKpB,KAAK/4B,KAAKy4B,GAAYgB,EAAIvjB,SAAUujB,EAAIf,KAAMe,EAAIpJ,OAE3D8J,EAAKnB,sBAA+D,IAAvCkC,EAAiC,sBAA8B,GAAdf,EAAKlF,MACnF2a,EAAQ5V,MAAM7I,OAAO+0D,IAAsB,EAAG/rD,GAC1CA,EAAKjF,IAAM6wD,GACX9wF,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz+C,EAAMA,EAAKlF,MAAO8wD,GAE/D,CAEDD,GAAkBE,CACrB,CAGc,MAAXp2C,GAAmBgpC,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,UAAUwzB,EAAQ5V,MAAM2iC,MAAK,SAAUrrC,EAAGC,GAAK,OAAQD,EAAE2D,OAAS1D,EAAE0D,MAAS3D,EAAEwH,QAAQ,GAAKvH,EAAEuH,QAAQ,GAAKxH,EAAE2D,MAAQ1D,EAAE0D,KAAM,IAGjL2jD,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOyQ,WAA8B7P,GACvC,WAAAzhF,CAAY4jF,EAAmB/kE,EAAwB0yE,GACnD/wF,QACAqe,EAAWynB,eAAeirD,EAAgBA,EAAuB,OAAGA,EAAsB,OAAG,GAAO,GACpG3N,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAO2Q,WAAoC7Q,GAC7C,WAAA3gF,CAAY4jF,EAAmBzpC,EAAsBlV,EAAuB2V,GACxEp6C,QACKuhF,GAA+B98C,EAAa2V,EAAQ3V,eACrD2V,EAAQ3V,YAAYniC,OAAS,EAC7B83C,EAAQ3V,YAAYj6B,QAAQi6B,GAC5Bo9C,GAAiCznC,EAAQ3V,YAAa2+C,EAAI52D,KAAMmtB,GAChEl6C,KAAK4gF,KACL+C,EAAI1tD,SAASC,U,EAKnB,MAAOm0D,WAAyB3J,GAClC,WAAA3gF,CAAY4jF,EAAmBp+C,EAAazgC,EAAekjF,GACvDznF,QACA,IAAIqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACvDl4D,MAAjBw6D,IACAppE,EAAaopE,IAGJ,GAATljF,GAAexD,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAMzoB,SAAWhY,GAAS,IAAQxD,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAMzoB,SAAWhY,EAAQ,KAC1J8Z,EAAWlC,WAAW6oB,GAAOjkC,EAAOob,WAAW1X,WAAiB,KAAEF,OAGtE8Z,EAAWgJ,YAAY2d,GAAOzgC,EAAQ,EAEtC6+E,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAO4Q,WAA4B9Q,GACrC,WAAA3gF,CAAY4jF,EAAmBp+C,EAAaugC,GACxCvlE,QAEA,IAAIqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAExE9mE,EAAW8wB,eAAenK,IAAQugC,IAClClnD,EAAW8wB,eAAenK,GAAOugC,EAEjC6d,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO6Q,WAAyB/Q,GAClC,WAAA3gF,CAAY4jF,EAAmBp+C,EAAamsD,GACxCnxF,QAEA,IAAIqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAGxEiM,EAAqB/yE,EAAWgJ,YAAY2d,GAC5CkgC,EAAgC,GACpC,GAAIksB,GAAc,EACd,GAAI/yE,EAAW8wB,eAAenK,IAAQo+C,EAAI52D,KAAKurB,SAASq5C,GAAY3sD,YAAYniC,OAE5E4iE,EAAkBA,EAAgB/uD,OAAOitE,EAAI52D,KAAKurB,SAASq5C,GAAY3sD,kBACpE,GAAIpmB,EAAW8wB,eAAenK,GAAOo+C,EAAI52D,KAAKurB,SAASq5C,GAAY3sD,YAAYniC,OAAQ,CAE1F,IAAI6iE,EAA6Bie,EAAI52D,KAAK48B,WAAWgoC,EAAYhO,EAAI/oC,KACrE,GAAkB,MAAd8qB,EACA,IAAK,IAAI76D,EAAY,EAAGA,EAAI66D,EAAW1gC,YAAYniC,OAAQgI,IACvD46D,EAAgB16D,KAAK44E,EAAI52D,KAAKurB,SAASq5C,GAAY3sD,YAAY0gC,EAAW1gC,YAAYn6B,IAGjG,MAGG46D,EAAgB16D,KAAK44E,EAAI52D,KAAKurB,SAASq5C,GAAY3sD,YAAYpmB,EAAW8wB,eAAenK,KAKjG,GAAImsD,EAAKE,WAAW,MAAO,CACvBF,EAAOA,EAAKG,OAAO,GACnB,IAAK,IAAIhnF,EAAY,EAAGA,EAAI46D,EAAgB5iE,OAAQgI,IAAK,CACrD,MAAMi7D,EAA4BL,EAAgB56D,GAC5Ci7D,EAAc72D,QAAW,GAAK3N,EAAOob,WAAW1X,WAAW0sF,GAAM10E,kBACnE2mE,EAAImO,OAAO,IAAIhK,GAAoBnE,EAAKriF,EAAOob,WAAW1X,WAAW0sF,GAAM10E,iBAAkB8oD,GAEpG,CACJ,CAED,IAAImG,EAAkB3qE,EAAOob,WAAW1X,WAAW0sF,GAAM5sF,MAEzD,GAAI8Z,EAAWlC,WAAW6oB,IAAQ0mC,EAAS,CAEvCrtD,EAAWlC,WAAW6oB,GAAO0mC,EAG7B,IAAIxyB,EAAcn4C,EAAOob,WAAWuvD,GAASrvD,UAE7C,IAAK,IAAI/R,EAAY,EAAGA,EAAI84E,EAAI52D,KAAK0tB,mBAAoB5vC,IAAK,CAC1D,MAAM8vC,EAAmBgpC,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6wB,SAASntC,GACjE,GAAI8vC,EAAQ3V,YAAY,IAAM2+C,EAAI+B,uBAC9B,IAAK,IAAIzrD,EAAY,EAAGA,EAAI0gB,EAAQ5V,MAAMliC,OAAQo3B,IAAK,CACnD,MAAMiL,EAAayV,EAAQ5V,MAAM9K,GACjC,GAAIiL,EAAKrB,QAAQ,IAAMviC,EAAOyY,SAAWwrB,EAAM,EAC3C,IAAK,IAAIqB,EAAY,EAAGA,EAAI1B,EAAKpB,KAAKjhC,OAAQ+jC,IAAK,CAC/C,MAAMpC,EAAeU,EAAKpB,KAAK8C,GAC3BpC,EAAIpJ,KAAOqe,IACXjV,EAAIpJ,KAAOqe,EAClB,CAER,CAER,CAEDkqC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,C,EAIH,MAAOmR,WAAwBrR,GACjC,WAAA3gF,CAAY4jF,EAAmBp+C,EAAatwB,GACxC1U,QAEA,IAAIqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAE5E,GAAI9mE,EAAW8mB,eAAeH,IAAQtwB,EAAM,CAExC2J,EAAW8mB,eAAeH,GAAOtwB,EAGjC,IAAIwkC,EAAckqC,EAAI52D,KAAK0Y,wBAAuB,EAAM7mB,EAAWlC,WAAW6oB,GAAM3mB,EAAW8mB,eAAeH,IAE9G,IAAK,IAAI16B,EAAY,EAAGA,EAAI84E,EAAI52D,KAAK0tB,mBAAoB5vC,IAAK,CAC1D,MAAM8vC,EAAmBgpC,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6wB,SAASntC,GACjE,GAAI8vC,EAAQ3V,YAAY,IAAM2+C,EAAI+B,uBAC9B,IAAK,IAAIzrD,EAAY,EAAGA,EAAI0gB,EAAQ5V,MAAMliC,OAAQo3B,IAAK,CACnD,MAAMiL,EAAayV,EAAQ5V,MAAM9K,GACjC,GAAIiL,EAAKrB,QAAQ,IAAMviC,EAAOyY,SAAWwrB,EAAM,EAC3C,IAAK,IAAIqB,EAAY,EAAGA,EAAI1B,EAAKpB,KAAKjhC,OAAQ+jC,IAAK,CAC/C,MAAMpC,EAAeU,EAAKpB,KAAK8C,GAC3BpC,EAAIpJ,KAAOqe,IACXjV,EAAIpJ,KAAOqe,EAClB,CAER,CAER,CAEDkqC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,C,EAIH,MAAOoR,WAAiCtR,GAC1C,WAAA3gF,CAAY4jF,EAAmBqC,GAE3B,GADAzlF,QACIojF,EAAI52D,KAAK0tB,oBAAsBurC,EAAU,CACzC,IAAK,IAAIn7E,EAAY,EAAGA,EAAI84E,EAAI52D,KAAKiK,kBAAmBnsB,IAAK,CACzD,MAAMonF,EAAwBtO,EAAI52D,KAAKurB,SAASztC,GAAGotC,KAC7Ci6C,EAA6BvO,EAAI52D,KAAKurB,SAASztC,GAAGmtC,SACxD,IAAK,IAAI/d,EAAY,EAAGA,EAAIg4D,EAAYpvF,OAAQo3B,IACxCg4D,EAAYh4D,GAAK+rD,IAAUiM,EAAYh4D,GAAK,GAEpD,IAAK,IAAIA,EAAYi4D,EAAgBrvF,OAAQo3B,EAAI+rD,EAAU/rD,IACvDi4D,EAAgBj4D,GAAK,IAAI6K,GAE7BotD,EAAgBrvF,OAASmjF,CAC5B,CACDrC,EAAI52D,KAAK0tB,mBAAqBurC,EAC9BrC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,C,EAIH,MAAOuR,WAAkCpR,GAW3C,WAAAhhF,CAAY4jF,EAAmBzpC,EAAsBU,GACjDr6C,OAAM,GAPFP,KAAgBoyF,GAAkB,KAGlCpyF,KAAsBqyF,GAAoB,KAK9C,MAAMtlE,EAAa42D,EAAI52D,KACvB,GAA6C,GAAzCA,EAAKurB,SAAS4B,GAAcjC,KAAK2C,GAAW,OAEhD56C,KAAK6yB,EAAO8wD,EACZ3jF,KAAKsyF,GAAO13C,EACZ56C,KAAKuyF,GAAgBr4C,EACrBl6C,KAAKwyF,GAAmBzlE,EAAK0tB,mBAC7Bz6C,KAAKyyF,GAAmB1lE,EAAK0tB,mBAC7Bz6C,KAAK0yF,GAAyB/O,EAAIgP,yBAAyBz4C,GAAcxjC,SAEzE,IAAIk8E,EAAuC,KACvCC,EAAkC,KACtC,IAAK,IAAInuC,EAAuB,EAAGA,GAAgB33B,EAAK0tB,mBAAoBiK,IAAgB,CACxF,IAAIouC,GAAO,EACX,IAAK,IAAIC,EAAmB,EAAGA,EAAWhmE,EAAKoJ,SAAU48D,IACrD,GAAIhmE,EAAKurB,SAAS4B,GAAcjC,KAAK86C,IAAaruC,EAAc,CAC5DouC,GAAO,EACP,KACH,CAEL,GAAIA,EAAM,SACc,MAApBD,IACAA,EAAmBnuC,GAGvB,GAA4B,GADH33B,EAAKurB,SAAS4B,GAAclC,SAAS0M,EAAe,GACjE3f,MAAMliC,OAAa,CAC3B+vF,EAAwBluC,EACxB,KACH,CACJ,CAED,GAA6B,MAAzBkuC,EACA5yF,KAAKgzF,GAAgBJ,EACrB5yF,KAAKqyF,GAAyBtlE,EAAKurB,SAAS4B,GAAclC,SAAS46C,EAAwB,GAAG5tD,YAAYtuB,cACvG,GAAIqW,EAAK0tB,mBAAqB1tB,EAAKoJ,SACtCn2B,KAAKyyF,GAAmB1lE,EAAK0tB,mBAAqB,EAClDz6C,KAAKgzF,GAAgBjmE,EAAK0tB,mBAAqB,MAC5C,IAAwB,MAApBo4C,EAKP,MAAM,IAAI1wF,MAJVnC,KAAKgzF,GAAgBH,EACrB7yF,KAAKoyF,GAAmBrlE,EAAKurB,SAAS4B,GAAclC,SAAS66C,EAAmB,GAAG9tD,MACnF/kC,KAAKqyF,GAAyBtlE,EAAKurB,SAAS4B,GAAclC,SAAS66C,EAAmB,GAAG7tD,YAAYtuB,QAGxG,CAED1W,KAAK4gF,KACL5gF,KAAKohF,I,CAGC,EAAAA,GACN,MAAMr0D,EAAa/sB,KAAK6yB,EAAK9F,KAC7B,IAAK,IAAIkN,EAAYlN,EAAK0tB,mBAAoBxgB,EAAIj6B,KAAKyyF,GAAkBx4D,IACrE,IAAK,IAAIpvB,EAAY,EAAGA,EAAIkiB,EAAKiK,kBAAmBnsB,IAChDkiB,EAAKurB,SAASztC,GAAGmtC,SAAS/d,GAAK,IAAI6K,GAG3C/X,EAAK0tB,mBAAqBz6C,KAAKyyF,GAC/B,MAAM93C,EAAmB5tB,EAAKurB,SAASt4C,KAAKuyF,IAAev6C,SAASh4C,KAAKgzF,GAAgB,GACzFr4C,EAAQ5V,MAAQ,GAChB4V,EAAQ3V,YAAYniC,OAAS,EAC7B83C,EAAQ3V,YAAYj6B,QAAQ/K,KAAK0yF,IACjC3lE,EAAKurB,SAASt4C,KAAKuyF,IAAet6C,KAAKj4C,KAAKsyF,IAAQtyF,KAAKgzF,GACzDhzF,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACN,MAAMt0D,EAAa/sB,KAAK6yB,EAAK9F,KACvB4tB,EAAmB5tB,EAAKurB,SAASt4C,KAAKuyF,IAAev6C,SAASh4C,KAAKgzF,GAAgB,GAC5D,MAAzBhzF,KAAKoyF,KAA0Bz3C,EAAQ5V,MAAQ/kC,KAAKoyF,IACrB,MAA/BpyF,KAAKqyF,KACL13C,EAAQ3V,YAAYniC,OAAS,EAC7B83C,EAAQ3V,YAAYj6B,QAAQ/K,KAAKqyF,KAErCtlE,EAAKurB,SAASt4C,KAAKuyF,IAAet6C,KAAKj4C,KAAKsyF,IAAQ,EACpD,IAAK,IAAIznF,EAAY,EAAGA,EAAIkiB,EAAKiK,kBAAmBnsB,IAChDkiB,EAAKurB,SAASztC,GAAGmtC,SAASn1C,OAAS7C,KAAKwyF,GAE5CzlE,EAAK0tB,mBAAqBz6C,KAAKwyF,GAC/BxyF,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAO+8D,WAAsBxO,GAC/B,WAAA1kF,CAAY4jF,EAA0Bz+C,EAAYf,EAAkB+uD,EAAqBnvD,GACrFxjC,MAAMojF,EAAKz+C,GAEXguD,GAAelzF,KAAK2kF,GACpB,MAAMwO,EAAuBnzF,KAAK+kF,GAAS5gD,GAAUV,KAC/C2vD,EAAoBjoF,KAAKoC,IAAI4lF,EAAcD,GAC3CG,EAAkBloF,KAAK2L,IAAIq8E,EAAcD,GAC/C,IAAII,GAAkB,EACtB,IAAK,IAAIzoF,EAAY,EAAGA,EAAI7K,KAAK+kF,GAASliF,OAAQgI,IAAK,CACnD,MAAM0oF,EAAkBruD,EAAKpB,KAAKj5B,GAC5B44B,EAAe8vD,EAAO9vD,KACxBA,EAAO2vD,EACPpzF,KAAKglF,GAASj6E,KAAKy4B,GAAY+vD,EAAOtyE,SAAUwiB,EAAM8vD,EAAOn4D,OACtDqI,EAAO4vD,IACTC,IACGtzF,KAAKglF,GAASniF,OAAS,IAAGkhC,EAAuBmB,EAAKnB,sBAC1D/jC,KAAKglF,GAASj6E,KAAKy4B,GAAYxjC,KAAK+kF,GAAS5gD,GAAUljB,SAAUiyE,EAAalzF,KAAK+kF,GAAS5gD,GAAU/I,OACtGk4D,GAAS,GAEbtzF,KAAKglF,GAASj6E,KAAKy4B,GAAY+vD,EAAOtyE,SAAUwiB,EAAM8vD,EAAOn4D,OAEpE,CACIk4D,IACDvvD,EAAuBmB,EAAKnB,qBAC5B/jC,KAAKglF,GAASj6E,KAAKy4B,GAAYxjC,KAAK+kF,GAAS5gD,GAAUljB,SAAUiyE,EAAalzF,KAAK+kF,GAAS5gD,GAAU/I,QAG1Gp7B,KAAKqlF,GAAathD,E,EAIpB,MAAOyvD,WAAwB/O,GACjC,WAAA1kF,CAAY4jF,EAA0Bz+C,EAAYuuD,EAAmBC,EAAiBC,EAAgBx2C,GAClG58C,MAAMojF,EAAKz+C,GAEXuuD,GAAazzF,KAAK2kF,GAClB+O,GAAW1zF,KAAK2kF,GAChBgP,GAAUzuD,EAAKrB,QAAQsZ,GAEvB,IAKItyC,EACA+oF,EACAC,EACA9oF,EARA+oF,GAAoB,EACpBC,GAAkB,EAClBC,EAAuB,EACvBC,EAAmB3yF,EAAOwU,YAC1Bo+E,GAAmB,EAgBvB,IAXIR,EAAUD,GACV5oF,EAAI,EACJ+oF,EAAY,EACZC,EAAO3uD,EAAKpB,KAAKjhC,OACjBkI,EAAQ27E,IAAoB1mF,KAAKglF,GAASj6E,KAAK27E,EAAK,IAEpD77E,EAAIq6B,EAAKpB,KAAKjhC,OAAS,EACvB+wF,GAAa,EACbC,GAAQ,EACR9oF,EAAQ27E,IAAoB1mF,KAAKglF,GAAS/nC,QAAQypC,EAAK,GAEpD77E,GAAKgpF,EAAMhpF,GAAK+oF,EAAW,CAC9B,MAAML,EAAkBruD,EAAKpB,KAAKj5B,GAC5B44B,EAAe8vD,EAAO9vD,KAC5B,OACI,GAAKqwD,EAYE,IAAKC,EAWL,CACH,GAAItwD,EAAOmwD,GAAaF,EAAUE,EAC9B,MAEIL,EAAOtyE,UAAY+yE,IAAcE,GAAU,GAC/CnpF,EAAKy4B,GAAY0wD,EAAUP,EAASJ,EAAOtyE,SAAUwiB,EAAM8vD,EAAOn4D,OAClE,KAEP,CAdG,GAJIqI,EAAOmwD,GAAaF,EAAUE,IAC9BI,EAAeT,EAAOtyE,SACtBgzE,EAAWV,EAAOn4D,MAElBqI,EAAOmwD,EAAYF,EAAUE,EAC7B,MAEA7oF,EAAKy4B,GAAYmwD,EAAQD,EAASO,IAClCF,GAAS,CAUhB,KA/Bc,CAKX,GAJItwD,EAAOmwD,GAAaH,EAAYG,IAChCI,EAAeT,EAAOtyE,SACtBgzE,EAAWV,EAAOn4D,MAElBqI,EAAOmwD,EAAYH,EAAYG,EAAW,CAC1C7oF,EAAKy4B,GAAY+vD,EAAOtyE,SAAUwiB,EAAM8vD,EAAOn4D,OAC/C,KACH,CACGrwB,EAAKy4B,GAAYwwD,EAAcP,EAAWQ,IAC1CH,GAAW,CAElB,CAqBR,CACIC,GACDhpF,EAAKy4B,GAAYmwD,EAAQD,EAASO,IAGtCj0F,KAAKqlF,I,EAIP,MAAO8O,WAA4BxS,GACrC,WAAA5hF,CAAY4jF,EAAmBhpC,GAC3Bp6C,QACA,MAAM6zF,EAAsB9yF,EAAOwQ,aAAexQ,EAAO2Q,QAAQ0xE,EAAI52D,KAAK+Y,QAAQ5zB,aAE5EmiF,EAA4C,SAAUC,GACxD,IAAIC,EAA8BjzF,EAAO2Q,QAAQ0xE,EAAI52D,KAAK+Y,QAAQ3zB,kBAClE,GAAkB,MAAdoiF,EAAoB,CACpB,MAAMC,EAAoBrpF,KAAK0hB,MAAMynE,EAAUhzF,EAAOwQ,cAAgBxQ,EAAOwQ,aACvEy0D,EAAoB+tB,EAAUE,EACpC,IAAIC,EAAkBD,EACtB,IAAK,MAAME,KAAaH,EAAY,CAChC,KAAIhuB,GAAamuB,GAGb,MAFAD,GAAWL,CAIlB,CACD,OAAOK,CACV,CACG,OAAOtpF,KAAKe,MAAMooF,EAAUF,GAAeA,CAEnD,EAEA,IAAIvpF,EAAY,EAChB,KAAOA,EAAI8vC,EAAQ5V,MAAMliC,QAAQ,CAC7B,MAAMqiC,EAAayV,EAAQ5V,MAAMl6B,GAC7BwpF,EAAanvD,EAAKlF,QAAUq0D,EAAanvD,EAAKjF,KAC9CjgC,KAAKyhF,OAAO,IAAIkT,GAAgBhR,EAAKhpC,EAASzV,EAAMr6B,GAAG,KAEvD7K,KAAKyhF,OAAO,IAAImT,GAAiBjR,EAAKz+C,EAAMmvD,IAC5CxpF,IAEP,C,EAIT,MAAM+pF,WAAyBnQ,GAC3B,WAAA1kF,CAAY4jF,EAA0Bz+C,EAAYmvD,GAC9C9zF,MAAMojF,EAAKz+C,GAEX,IAAK,MAAMquD,KAAUvzF,KAAK+kF,GACtB/kF,KAAKglF,GAASj6E,KAAKy4B,GAAY+vD,EAAOtyE,SAAUozE,EAAad,EAAO9vD,KAAOzjC,KAAK2kF,IAAa3kF,KAAK2kF,GAAW4O,EAAOn4D,OAGxHp7B,KAAKqlF,I,EAIP,MAAOwP,WAAgCrT,GACzC,WAAAzhF,CAAY4jF,EAAmBmR,EAAqBC,GAChDx0F,QACA,IAAIsjF,EAAsB14E,KAAKe,MAAO4oF,EAAcnR,EAAI52D,KAAK4Z,YAAerlC,EAAOwQ,cAEnF,GADI+xE,EAAc,IAAGA,GAAeF,EAAI52D,KAAK4Z,YAAcrlC,EAAOwQ,cAC/C,GAAf+xE,EAAJ,CAEA,OAAQkR,GACJ,IAAK,aAAc,CACf,MAAMxjB,EAAsBjwE,EAAOwQ,aAAe6xE,EAAI52D,KAAK4Z,YAC3D,IAAK,MAAMxf,KAAWw8D,EAAI52D,KAAKurB,SAC3B,IAAK,MAAMqC,KAAWxzB,EAAQ6wB,SAAU,CACpC,MAAM+L,EAAmB,GAEzB,IAAK,IAAInJ,EAAc,EAAGA,GAAO,EAAGA,IAAO,CACvC,MAAM0pC,EAAuB1pC,EAAM22B,EAEnC,IAAK,MAAMmR,KAAW/nC,EAAQ5V,MAAO,CACjC,MAAMq/C,EAA4B1B,EAAQ1iD,MAAQ6jD,EAC5CQ,EAA0B3B,EAAQziD,IAAM4jD,EACxCpxB,EAAwBtnD,KAAK2L,IAAI,EAAGstE,EAAoBE,GACxD3xB,EAAsBxnD,KAAKoC,IAAIgkE,EAAa8S,EAAkBC,GAEhE7xB,EAAgBE,GAChB8vB,GAAmBC,EAAS0B,EAAoBE,EAAe7xB,EAAeA,EAAeE,EAAa5O,EAEjH,CACJ,CAEDpJ,EAAQ5V,MAAQgf,CACnB,CAER,CAAC,MACF,IAAK,WAAY,CACb,IAAIixC,EAA2BrR,EAAI52D,KAAKoJ,SACpC8+D,EAA4BtR,EAAI52D,KAAKwtB,UACrC26C,EAA6BvR,EAAI52D,KAAKytB,WAI1C,GAFAx6C,KAAKyhF,OAAO,IAAIiC,GAA2BC,EAAKA,EAAI52D,KAAK4Z,YAAak9C,IAElEiR,EAAc,EAAG,CACjB,IAAIK,GAA2B,EAC/B,IAAK,MAAMhuE,KAAWw8D,EAAI52D,KAAKurB,SACJ,GAAnBnxB,EAAQ8wB,KAAK,KAASk9C,GAAkB,GAEhD,GAAIA,EAAiB,CACjB,IAAK,MAAMhuE,KAAWw8D,EAAI52D,KAAKurB,SAC3BnxB,EAAQ8wB,KAAKwH,QAEjBkkC,EAAI52D,KAAKoJ,UACZ,MACG6+D,IACAC,IACAtR,EAAI/oC,KAEX,CACD,KAAO+oC,EAAI52D,KAAKoJ,SAAW6+D,GAAkB,CACzC,IAAK,MAAM7tE,KAAWw8D,EAAI52D,KAAKurB,SAC3BnxB,EAAQ8wB,KAAKltC,KAAK,GAEtB44E,EAAI52D,KAAKoJ,UACZ,CACDwtD,EAAI52D,KAAKwtB,UAAY06C,EACrBtR,EAAI52D,KAAKytB,WAAa06C,CACzB,CAAC,MACF,QAAS,MAAM,IAAI/yF,MAAM,mDAG7BwhF,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IAhEmB,C,EAoE1B,MAAOwU,WAA0B5T,GACnC,WAAAzhF,CAAY4jF,EAAmBqC,EAAkB+O,GAE7C,GADAx0F,QACIojF,EAAI52D,KAAK4Z,aAAeq/C,EAAU,CAClC,OAAQ+O,GACJ,IAAK,SACD,GAAIpR,EAAI52D,KAAK4Z,YAAcq/C,EAAU,CACjC,MAAMz+B,EAA2B,IAAIo6B,GACrC,IAAK,IAAI92E,EAAY,EAAGA,EAAI84E,EAAI52D,KAAKiK,kBAAmBnsB,IACpD,IAAK,IAAIovB,EAAY,EAAGA,EAAI0pD,EAAI52D,KAAKurB,SAASztC,GAAGmtC,SAASn1C,OAAQo3B,IAC9DstB,EAASk6B,OAAO,IAAIuP,GAAmBrN,EAAKA,EAAI52D,KAAKurB,SAASztC,GAAGmtC,SAAS/d,GAAI+rD,EAAW1kF,EAAOwQ,aAAc6xE,EAAI52D,KAAK4Z,YAAcrlC,EAAOwQ,aAAc,MAAM,GAG3K,CACH,MACF,IAAK,UAAW,CACZ,MAAMuiF,EAAe,SAAUC,GAC3B,OAAOnpF,KAAKe,MAAMooF,EAAUtO,EAAWrC,EAAI52D,KAAK4Z,YACpD,EACA,IAAK,IAAIuT,EAAuB,EAAGA,EAAeypC,EAAI52D,KAAKiK,kBAAmBkjB,IAC1E,IAAK,IAAIwK,EAAuB,EAAGA,EAAei/B,EAAI52D,KAAKurB,SAAS4B,GAAclC,SAASn1C,OAAQ6hD,IAAgB,CAC/G,MAAM/J,EAAmBgpC,EAAI52D,KAAKurB,SAAS4B,GAAclC,SAAS0M,GAClE,IAAI2wC,EAAoB,EACxB,KAAOA,EAAY16C,EAAQ5V,MAAMliC,QAAQ,CACrC,MAAMqiC,EAAayV,EAAQ5V,MAAMswD,GAC7BhB,EAAanvD,EAAKlF,QAAUq0D,EAAanvD,EAAKjF,KAC9CjgC,KAAKyhF,OAAO,IAAIkT,GAAgBhR,EAAKhpC,EAASzV,EAAMmwD,GAAW,KAE/Dr1F,KAAKyhF,OAAO,IAAImT,GAAiBjR,EAAKz+C,EAAMmvD,IAC5CgB,IAEP,CACJ,CAELr1F,KAAKyhF,OAAO,IAAI6T,GAAY3R,EAAKA,EAAI52D,KAAKusB,MAAOqqC,EAAI52D,KAAKusB,MAAQ0sC,EAAWrC,EAAI52D,KAAK4Z,aACzF,CAAC,MACF,IAAK,WACD3mC,KAAKyhF,OAAO,IAAIiC,GAA2BC,EAAKqC,EAAU,IAC1DrC,EAAI52D,KAAKwtB,UAAY,EACrBopC,EAAI52D,KAAKytB,WAAampC,EAAI52D,KAAKoJ,SACjC,MACF,QAAS,MAAM,IAAIh0B,MAAM,mDAG7BwhF,EAAI52D,KAAK4Z,YAAcq/C,EACvBrC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,C,EAIH,MAAO2U,WAAoB/T,GAC7B,WAAAzhF,CAAY4jF,EAAmBqC,GAC3BzlF,QACIojF,EAAI52D,KAAKutB,OAAS0rC,IAClBrC,EAAI52D,KAAKutB,MAAQ0rC,EACjBrC,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO4U,WAAwBhU,GACjC,WAAAzhF,CAAY4jF,GACRpjF,QACA,MAAMwsB,EAAa42D,EAAI52D,KACjBxc,EAAoBjP,EAAO+O,KAAK0c,EAAK3pB,KAAKmN,UAC1CklF,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/D,IAAK,IAAIv7C,EAAuB,EAAGA,EAAentB,EAAKE,kBAAmBitB,IACtE,IAAK,IAAI64C,EAAmB,EAAGA,EAAWhmE,EAAKoJ,SAAU48D,IAAY,CACjE,MAAMp4C,EAA0B5tB,EAAK48B,WAAWzP,EAAc64C,GAC9D,GAAe,MAAXp4C,EACA,IAAK,MAAMzV,KAAQyV,EAAQ5V,MAAO,CAC9B,MAAMk+C,EAAmB/9C,EAAKpB,KAAK,GACnC,IAAK,IAAIK,EAAmB,EAAGA,EAAWe,EAAKpB,KAAKjhC,OAAQshC,IAAY,CACpE,MAAM2+C,EAAmB59C,EAAKpB,KAAKK,GACnC,GAAI8+C,EAAQhiE,UAAY6hE,EAAQ7hE,SAAU,CACtC,IAAIwlE,EAAiB3D,EAAQr/C,KAAOw/C,EAAQx/C,KAC5CgjD,GAAUt7E,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwQ,aAAcgxE,EAAQr/C,KAAOyB,EAAKlF,QAAUijD,EAAQx/C,KAAOyB,EAAKlF,QACtGymD,GAAU3D,EAAQ1nD,KAAO6nD,EAAQ7nD,KACjC,IAAK,MAAMuI,KAASuB,EAAKrB,QAAS,CAE9B4xD,GADallF,EAAY0yE,EAAQhiE,SAAW0iB,GAAS,KAClC8iD,CACtB,CACJ,CACJ,CACJ,CAER,CAGL,IAAIiP,EAAkB,EAClBC,EAAwB,EAC5B,IAAK,IAAIvyF,EAAc,EAAGA,EAAM,GAAIA,IAAO,CAEvC,MAAMwyF,EAAoBH,EAAWryF,IAAQ,EAAIqyF,GAAYryF,EAAM,GAAK,IAAMqyF,GAAYryF,EAAM,GAAK,IAAMqyF,GAAYryF,EAAM,GAAK,KAC9HuyF,EAAgBC,IAChBD,EAAgBC,EAChBF,EAAUtyF,EAEjB,CAED,GAAIsyF,GAAW3oE,EAAK3pB,IAAK,CACrB,MAAMqlF,EAAe17D,EAAK3pB,IAAMsyF,EAC1BG,EAAuB1qF,KAAKC,IAAIq9E,GAEtC,IAAK,IAAIvuC,EAAuB,EAAGA,EAAentB,EAAKE,kBAAmBitB,IACtE,IAAK,MAAMS,KAAW5tB,EAAKurB,SAAS4B,GAAclC,SAC9C,IAAK,IAAIntC,EAAY,EAAGA,EAAIgrF,EAAchrF,IACtC7K,KAAKyhF,OAAO,IAAIqU,GAAgBnS,EAAKzpC,EAAcS,EAAS8tC,EAAO,GAAG,IAKlF17D,EAAK3pB,IAAMsyF,EACX/R,EAAI1tD,SAASC,UACbl2B,KAAK4gF,IACR,C,EAIH,SAAUgJ,GAAsB7pE,GAClC,MAAMg2E,EAAiC,GACvC,IAAK,IAAIh4E,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiBpb,OAAQkb,IAAiB,CACvG,MAAMM,EAA2BT,EAAaK,iBAAiBF,GAC/D,GAAqB,mBAAjBM,EAAS7Z,KACb,IAAK,IAAIwZ,EAAsB,EAAGA,EAAcK,EAASH,QAAQrb,OAAQmb,IAAe,CACpF,MAAMM,EAAiBD,EAASH,QAAQF,GACjBwP,MAAnBlP,EAAOgB,UAA4C,GAAlBhB,EAAOyB,SAAoBA,GAC5Dg2E,EAAqBhrF,MAAMgT,GAAiB,GAAKC,EAExD,CACJ,CACD,OAAO+3E,EAAsB5qF,KAAKY,SAAWgqF,EAAqBlzF,OAAU,EAChF,CAEM,SAAUmzF,GAAsBjpE,GAClC,IAAK,IAAImtB,EAAuB,EAAGA,EAAentB,EAAKurB,SAASz1C,OAAQq3C,IACpE,IAAK,MAAMt7B,KAAcmO,EAAKurB,SAAS4B,GAAclV,YAAa,CAC9D,MAAMjlB,EAAmBgN,EAAKotB,kBAAkBD,GAC1CjB,EAAiBlsB,EAAKqtB,gBAAgBF,GACtCp8B,EAAuBo8B,GAAgBntB,EAAKE,kBAAqBrP,EAAaa,kBAAkBtT,KAAKY,SAAW,GAAM,aAAe,oBAAuB69E,GAAsB7pE,GAClLzB,EAAiBV,EAAaC,cAAcC,GAClDc,EAAWynB,eAAe/nB,EAAOgB,SAAUS,EAASk5B,EAAsB,GAAflsB,EAAK+Y,QAA8B,GAAf/Y,EAAK+Y,OAAa/Y,EAAK+Y,QAAU,EAAG,GACnHlnB,EAAWN,OAASR,CACvB,CAET,CAEM,MAAOm4E,WAAmBzU,GAC5B,WAAAzhF,CAAY4jF,EAAmBuS,GAC3B31F,QACA,IAAI0sB,EAAoB02D,EAAI52D,KAAKE,kBAC7BC,EAAoBy2D,EAAI52D,KAAKG,kBAC7B4sB,EAAkB6pC,EAAI52D,KAAK+sB,gBAK/B,GAJA6pC,EAAI52D,KAAK6sB,iBAAiBs8C,GACtBjpE,GAAqB02D,EAAI52D,KAAKE,mBAAqBC,GAAqBy2D,EAAI52D,KAAKG,mBAAqB4sB,GAAmB6pC,EAAI52D,KAAK+sB,iBAClIhzB,GAAYC,cAED,IAAXmvE,EAAe,CACfl2F,KAAKyhF,OAAO,IAAI0U,GAAuBxS,EAAK,EAAG,IAC/CA,EAAI8G,UAAU2L,oBACdJ,GAAsBrS,EAAI52D,MAC1B42D,EAAI52D,KAAKutB,MAAQqpC,EAAI0S,MAAMC,aAE3B,IAAK,IAAIzrF,EAAY,EAAGA,GAAK84E,EAAI52D,KAAKurB,SAASz1C,OAAQgI,IACnD84E,EAAI2E,iBAAiBz9E,GAAK,EAC1B84E,EAAIgP,yBAAyB9nF,GAAK,CAAC,GAEvC84E,EAAI2E,iBAAiBzlF,OAAS8gF,EAAI52D,KAAKurB,SAASz1C,MACnD,MACG7C,KAAKyhF,OAAO,IAAI8U,GAA6B5S,IAEjDA,EAAIjvD,MAAM4vC,yBACVqf,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAO2V,WAAqC7V,GAC9C,WAAA3gF,CAAY4jF,GACRpjF,QACA,MAAM25C,EAAuB/uC,KAAKoC,IAAIo2E,EAAIx8D,QAASw8D,EAAI52D,KAAKiK,kBAAoB,GAC1E4jB,EAAczvC,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIo2E,EAAI52D,KAAKoJ,SAAW,EAAGwtD,EAAI/oC,MAChE+oC,EAAIx8D,SAAW+yB,GAAgBypC,EAAI/oC,KAAOA,IACnD+oC,EAAI/oC,IAAMA,EACV+oC,EAAIx8D,QAAU+yB,EACdl6C,KAAK4gF,MAEN+C,EAAI8G,UAAUC,0BACd/G,EAAI1tD,SAASC,S,EAIT,MAAOsuD,WAA8BhD,GACvC,WAAAzhF,CAAY4jF,EAAmB97D,EAA0BH,EAA0BE,GAC/ErnB,QAEA,MAAMwsB,EAAa42D,EAAI52D,KAEvB,SAASypE,EAA0Bl+C,EAAqBm+C,GACpD,KAAOn+C,EAASz1C,OAAS4zF,GAAW,CAChC,IAAIC,EAAwBp+C,EAASz1C,OAAS,EAC1C8zF,EAAqB,EACzB,IAAK,IAAIz8C,EAAuB,EAAGA,EAAe5B,EAASz1C,OAAS,EAAGq3C,IAAgB,CACnF,IAAI08C,EAAiB,EACrB,IAAK,MAAMh8C,KAAOtC,EAAS4B,GAAcjC,KAC1B,GAAP2C,GAAUg8C,IAEdA,GAAUD,IACVD,EAAgBx8C,EAChBy8C,EAAaC,EAEpB,CACDt+C,EAASpc,OAAOw6D,EAAe,EAClC,C,CAOL,IAJAF,EAA0B3uE,EAAevmB,EAAOgY,sBAChDk9E,EAA0B9uE,EAAepmB,EAAOkY,sBAChDg9E,EAA0B5uE,EAAatmB,EAAOoY,oBAEvCmO,EAAchlB,OAASvB,EAAO+X,sBAAsBwO,EAAc9c,KAAK,IAAIgtC,IAClF,KAAOrwB,EAAc7kB,OAASvB,EAAOiY,sBAAsBmO,EAAc3c,KAAK,IAAIgtC,IAClF,KAAOnwB,EAAY/kB,OAASvB,EAAOmY,oBAAoBmO,EAAY7c,KAAK,IAAIgtC,IAG5EhrB,EAAKoJ,SAAW,EAChBpJ,EAAK0tB,mBAAqB,EAC1B,MAAMo8C,EAA8BhvE,EAAcnR,OAAOgR,EAAchR,OAAOkR,IAC9E,IAAK,IAAIsyB,EAAuB,EAAGA,EAAe28C,EAAiBh0F,OAAQq3C,IAAgB,CACvF,MAAM/yB,EAAmB0vE,EAAiB38C,GAC1CntB,EAAKoJ,SAAWhrB,KAAK2L,IAAIiW,EAAKoJ,SAAUhP,EAAQ8wB,KAAKp1C,QACrDkqB,EAAK0tB,mBAAqBtvC,KAAK2L,IAAIiW,EAAK0tB,mBAAoBtzB,EAAQ6wB,SAASn1C,QAC7EkqB,EAAKurB,SAAS4B,GAAgB/yB,CACjC,CACD4F,EAAKurB,SAASz1C,OAASg0F,EAAiBh0F,OACxCkqB,EAAKE,kBAAoBpF,EAAchlB,OACvCkqB,EAAKG,kBAAoBxF,EAAc7kB,OACvCkqB,EAAK+sB,gBAAkBlyB,EAAY/kB,OAEnCkqB,EAAKoJ,SAAWhrB,KAAKoC,IAAIjM,EAAOoQ,YAAaqb,EAAKoJ,UAClDpJ,EAAK0tB,mBAAqBtvC,KAAKoC,IAAIjM,EAAOoQ,YAAaqb,EAAK0tB,oBAC5D,IAAK,IAAIP,EAAuB,EAAGA,EAAentB,EAAKurB,SAASz1C,OAAQq3C,IAAgB,CACpF,MAAM/yB,EAAmB4F,EAAKurB,SAAS4B,GAEvC,IAAK,IAAI64C,EAAmB,EAAGA,EAAW5rE,EAAQ8wB,KAAKp1C,OAAQkwF,KACvD5rE,EAAQ8wB,KAAK86C,GAAYhmE,EAAK0tB,oBAAsBtzB,EAAQ8wB,KAAK86C,GAAY,KAC7E5rE,EAAQ8wB,KAAK86C,GAAY,GAGjC,KAAO5rE,EAAQ8wB,KAAKp1C,OAASkqB,EAAKoJ,UAC9BhP,EAAQ8wB,KAAKltC,KAAK,GAEtBoc,EAAQ8wB,KAAKp1C,OAASkqB,EAAKoJ,SAEvBhP,EAAQ6d,YAAYniC,OAASkqB,EAAKgtB,gCAClC5yB,EAAQ6d,YAAYniC,OAASkqB,EAAKgtB,+BAGtC,IAAK,MAAMY,KAAWxzB,EAAQ6wB,SAC1BoqC,GAAiCznC,EAAQ3V,YAAajY,EAAMmtB,GAEhE,KAAO/yB,EAAQ6wB,SAASn1C,OAASkqB,EAAK0tB,oBAClCtzB,EAAQ6wB,SAASjtC,KAAK,IAAI+5B,IAG9B3d,EAAQ6wB,SAASn1C,OAASkqB,EAAK0tB,kBAClC,CAED1tB,EAAKwtB,UAAYpvC,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIwf,EAAKoJ,SAAW,EAAGpJ,EAAKwtB,YAC9DxtB,EAAKytB,WAAarvC,KAAKoC,IAAIwf,EAAKoJ,SAAWpJ,EAAKwtB,UAAWxtB,EAAKytB,YAEhEx6C,KAAKyhF,OAAO,IAAI8U,GAA6B5S,IAC7CA,EAAI1tD,SAASC,UACbl2B,KAAK4gF,KAEL95D,GAAYC,a,EAIJ,SAAA+vE,GAAoBz6D,EAAWC,GAC3C,GAAID,EAAEx5B,QAAUy5B,EAAEz5B,OAAQ,OAAO,EAEjC,IAAK,IAAIwyF,EAAoB,EAAGA,EAAYh5D,EAAEx5B,OAAQwyF,IAAa,CAC/D,MAAM3S,EAAgBrmD,EAAEg5D,GAClB3wD,EAAgBpI,EAAE+4D,GACxB,GAAI3wD,EAAQ1E,OAAS0iD,EAAQ1iD,OAAS0E,EAAQzE,KAAOyiD,EAAQziD,KAAOyE,EAAQb,QAAQhhC,QAAU6/E,EAAQ7+C,QAAQhhC,QAAU6hC,EAAQZ,KAAKjhC,QAAU6/E,EAAQ5+C,KAAKjhC,OACxJ,OAAO,EAGX,IAAK,IAAIs6C,EAAqB,EAAGA,EAAaulC,EAAQ7+C,QAAQhhC,OAAQs6C,IAClE,GAAIzY,EAAQb,QAAQsZ,IAAeulC,EAAQ7+C,QAAQsZ,GAC/C,OAAO,EAIf,IAAK,IAAIhZ,EAAmB,EAAGA,EAAWu+C,EAAQ5+C,KAAKjhC,OAAQshC,IAC3D,GAAIO,EAAQZ,KAAKK,GAAUljB,UAAYyhE,EAAQ5+C,KAAKK,GAAUljB,UAAYyjB,EAAQZ,KAAKK,GAAUV,MAAQi/C,EAAQ5+C,KAAKK,GAAUV,MAAQiB,EAAQZ,KAAKK,GAAU/I,MAAQsnD,EAAQ5+C,KAAKK,GAAU/I,KAC1L,OAAO,CAGlB,CAED,OAAO,CACX,CAEM,SAAUmpD,GAAwBjsC,GACpC,IAAK,MAAMnxB,KAAWmxB,EAAU,CAC5B,MAAMy+C,EAAyB,GAC/B,IAAK,IAAIn8C,EAAc,EAAGA,EAAMzzB,EAAQ8wB,KAAKp1C,OAAQ+3C,IAAO,CACxD,GAAyB,GAArBzzB,EAAQ8wB,KAAK2C,GAAW,SAE5B,MAAMspC,EAAsB/8D,EAAQ6wB,SAAS7wB,EAAQ8wB,KAAK2C,GAAO,GAEjE,IAAIo8C,GAAgC,EACpC,IAAK,IAAIC,EAA0B,EAAGA,EAAkBF,EAAYl0F,OAAQo0F,IAAmB,CAC3F,MAAMnzC,EAAsBizC,EAAYE,GAExC,GAAKnV,GAA+BoC,EAAWl/C,YAAa8e,EAAW9e,cAAgB8e,EAAW/e,MAAMliC,QAAUqhF,EAAWn/C,MAAMliC,QAI/Hi0F,GAAoB5S,EAAWn/C,MAAO+e,EAAW/e,OAAQ,CACzDiyD,GAAuB,EACvB7vE,EAAQ8wB,KAAK2C,GAAOq8C,EAAkB,EACtC,KACH,CACJ,CAEID,IACDD,EAAYhsF,KAAKm5E,GACjB/8D,EAAQ8wB,KAAK2C,GAAOm8C,EAAYl0F,OAEvC,CAED,IAAK,IAAI6hD,EAAuB,EAAGA,EAAeqyC,EAAYl0F,OAAQ6hD,IAClEv9B,EAAQ6wB,SAAS0M,GAAgBqyC,EAAYryC,GAEjDv9B,EAAQ6wB,SAASn1C,OAASk0F,EAAYl0F,MACzC,CACL,CAEM,MAAOq0F,WAAwBxW,GACjC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACAojF,EAAI52D,KAAKiV,OAAS72B,KAAK2L,IAAIxV,EAAOqP,UAAWxF,KAAKoC,IAAIjM,EAAOsP,UAAWzF,KAAKe,MAAM85E,KACnFrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO0U,WAAoB5U,GAC7B,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACAojF,EAAI52D,KAAKusB,MAAQnuC,KAAK2L,IAAIxV,EAAOmP,SAAUtF,KAAKoC,IAAIjM,EAAOoP,SAAUvF,KAAKe,MAAM85E,KAChFrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAkB,MAAEF,OACzD6+E,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOuW,WAAwBnL,GACjC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYl9C,UAAYi3C,EAC7BrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAW,cAAcF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBACtF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOwW,WAA0BpL,GACnC,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYjpE,YAAcgjE,EAC/BrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAiB,KAAEF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAChF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOyW,WAAqBrL,GAC9B,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAY3qE,OAAS0kE,EAC1BrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO0W,WAAqBtL,GAC9B,WAAAjsF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,MAAMojF,GACN3jF,KAAKisF,GAAYprE,OAASmlE,EAC1BrC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAmB,OAAEF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAClF/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAcjC,MAAO+T,WAAwB5T,GAKjC,WAAAhhF,CAAY4jF,EAAmBhpC,EAAkBzV,EAAYpgC,EAAeooF,GAAoB,GAC5F3sF,MAAM2sF,GACNltF,KAAK6yB,EAAO8wD,EACZ3jF,KAAKu3F,GAAW58C,EAChB36C,KAAK0kF,GAAQx/C,EACbllC,KAAK+iC,GAASj+B,EACd9E,KAAK4gF,KACL5gF,KAAKshF,M,CAGC,EAAAF,GACNphF,KAAKu3F,GAASxyD,MAAM7I,OAAOl8B,KAAK+iC,GAAQ,EAAG/iC,KAAK0kF,IAChD1kF,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACNrhF,KAAKu3F,GAASxyD,MAAM7I,OAAOl8B,KAAK+iC,GAAQ,GACxC/iC,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAOk7D,WAAyB3M,GAClC,WAAA1kF,CAAY4jF,EAA0Bz+C,EAAYsyD,EAAoBC,GAClEl3F,MAAMojF,EAAKz+C,GACX,MAAMnB,GAAkC/jC,KAAK2kF,GAAY,GAAKz/C,EAAKnB,uBAAuC,GAAdyzD,EAE5FA,GAAcx3F,KAAK2kF,GACnB8S,GAAYz3F,KAAK2kF,GACjB,IAII95E,EAJAipF,GAAoB,EACpBG,EAAmBj0F,KAAK+kF,GAAS,GAAG3pD,KACpC44D,EAAuBh0F,KAAK+kF,GAAS,GAAG9jE,SACxCy2E,GAAuB,EAE3B,IAAK7sF,EAAI,EAAGA,EAAI7K,KAAK+kF,GAASliF,OAAQgI,IAAK,CACvC,MAAM0oF,EAAkBvzF,KAAK+kF,GAASl6E,GACtC,GAAI0oF,EAAO9vD,KAAO+zD,EACdvD,EAAWV,EAAOn4D,KAClB44D,EAAeT,EAAOtyE,aACnB,CAKH,GAJIsyE,EAAO9vD,KAAO+zD,IAAe1D,IAC7B9zF,KAAKglF,GAASj6E,KAAKy4B,GAAYwwD,EAAcwD,EAAYvD,IACzDH,GAAW,KAEXP,EAAO9vD,MAAQg0D,GAOf,MALA,GADAz3F,KAAKglF,GAASj6E,KAAKy4B,GAAY+vD,EAAOtyE,SAAUsyE,EAAO9vD,KAAM8vD,EAAOn4D,OAChEm4D,EAAO9vD,MAAQg0D,EAAU,CACzBC,GAAc,EACd,KACH,CAKR,CAEJ,CAEGA,GAAa13F,KAAKglF,GAASj6E,KAAKy4B,GAAYxjC,KAAK+kF,GAASl6E,GAAGoW,SAAUw2E,EAAUz3F,KAAK+kF,GAASl6E,GAAGuwB,OAEtGp7B,KAAKqlF,GAAathD,E,EAIpB,MAAOitD,WAA2BrP,GACpC,WAAA5hF,CAAY4jF,EAAmBhpC,EAAkB3a,EAAeC,EAAa03D,EAAwB,KAAMC,GAAiB,GACxHr3F,QACA,IAAIsK,EAAY,EAChB,KAAOA,EAAI8vC,EAAQ5V,MAAMliC,QAAQ,CAC7B,MAAMqiC,EAAayV,EAAQ5V,MAAMl6B,GACjC,GAAIq6B,GAAQyyD,GAAwB,MAAZA,EACpB9sF,SACG,GAAIq6B,EAAKjF,KAAOD,EACnBn1B,SACG,GAAIq6B,EAAKlF,OAASC,EAAK,CAE1B,IAAK0jD,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,SAC9B,MAEAtc,GAEP,MAAM,GAAIq6B,EAAKlF,MAAQA,GAASkF,EAAKjF,IAAMA,EAAK,CAC7C,IAAK0jD,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,UAAYywE,GAAsB,MAAZD,GAAoBzyD,EAAKrB,QAAQ,IAAM8zD,EAAS9zD,QAAQ,GAAK,CACjH,MAAMqD,EAAahC,EAAKT,QACxBzkC,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz+C,EAAMA,EAAKlF,MAAOA,IACxDn1B,IACA7K,KAAKyhF,OAAO,IAAIkT,GAAgBhR,EAAKhpC,EAASzT,EAAMr8B,GAAG,IACvD7K,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz8C,EAAMjH,EAAKiH,EAAKjH,KACzD,CACDp1B,GACH,MAAUq6B,EAAKlF,MAAQA,KACf2jD,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,UAAYywE,GAAsB,MAAZD,GAAoBzyD,EAAKrB,QAAQ,IAAM8zD,EAAS9zD,QAAQ,KAC5G7jC,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz+C,EAAMA,EAAKlF,MAAOA,IAC5Dn1B,KACOq6B,EAAKjF,IAAMA,KACb0jD,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,UAAYywE,GAAsB,MAAZD,GAAoBzyD,EAAKrB,QAAQ,IAAM8zD,EAAS9zD,QAAQ,KAC5G7jC,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz+C,EAAMjF,EAAKiF,EAAKjF,MAC1Dp1B,MAEK84E,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,UAAYywE,GAAsB,MAAZD,GAAoBzyD,EAAKrB,QAAQ,IAAM8zD,EAAS9zD,QAAQ,GAC5G7jC,KAAKyhF,OAAO,IAAIkT,GAAgBhR,EAAKhpC,EAASzV,EAAMr6B,GAAG,IAEvDA,GAEX,C,EAIT,MAAMgtF,WAAoClW,GACtC,WAAA5hF,CAAY4jF,EAAmBhpC,GAC3Bp6C,QACA,IAAIsK,EAAY,EAChB,KAAOA,EAAI8vC,EAAQ5V,MAAMliC,QAAQ,CAC7B,MAAMqiC,EAAayV,EAAQ5V,MAAMl6B,GACjC,GAAIq6B,EAAKlF,MAAQ2jD,EAAI8G,UAAUqN,uBAAyBnU,EAAI8G,UAAUqN,sBAAwB5yD,EAAKjF,IAAK,CACpG,MAAMiH,EAAahC,EAAKT,QACxBzkC,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz+C,EAAMA,EAAKlF,MAAO2jD,EAAI8G,UAAUqN,wBACtEjtF,IACA7K,KAAKyhF,OAAO,IAAIkT,GAAgBhR,EAAKhpC,EAASzT,EAAMr8B,GAAG,IACvD7K,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz8C,EAAMy8C,EAAI8G,UAAUqN,sBAAuB5wD,EAAKjH,KAEzF,MAAM,GAAIiF,EAAKlF,MAAQ2jD,EAAI8G,UAAUsN,qBAAuBpU,EAAI8G,UAAUsN,oBAAsB7yD,EAAKjF,IAAK,CACvG,MAAMiH,EAAahC,EAAKT,QACxBzkC,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz+C,EAAMA,EAAKlF,MAAO2jD,EAAI8G,UAAUsN,sBACtEltF,IACA7K,KAAKyhF,OAAO,IAAIkT,GAAgBhR,EAAKhpC,EAASzT,EAAMr8B,GAAG,IACvD7K,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz8C,EAAMy8C,EAAI8G,UAAUsN,oBAAqB7wD,EAAKjH,MACpFp1B,GACH,MACGA,GAEP,C,EAIT,MAAMmtF,WAA4BjX,GAW9B,WAAAhhF,CAAY4jF,EAAmBzpC,EAAsBhV,EAAY+yD,EAAiBC,GAAuB,EAAOl2D,GAAkB,GAC9HzhC,OAAM,GACNP,KAAK6yB,EAAO8wD,EACZ3jF,KAAK0kF,GAAQx/C,EACbllC,KAAK+kF,GAAW7/C,EAAKpB,KACrB9jC,KAAKglF,GAAW,GAChBhlF,KAAKilF,GAAc//C,EAAKrB,QACxB7jC,KAAKklF,GAAc,GAKnB,MAAMnlE,EAAmB4jE,EAAI52D,KAAKotB,kBAAkBD,GACpD,GAAIn6B,GAAW4jE,EAAI52D,KAAKotB,kBAAkBwpC,EAAIx8D,SAAU,OAGxD,GAAIw8D,EAAI52D,KAAKqtB,gBAAgBupC,EAAIx8D,SAAU,OAE3C,MAAMnN,EAAoB+F,EAAUze,EAAOuY,UAAY,EAAIvY,EAAO0Y,SAElE,IAAK,IAAInP,EAAY,EAAGA,EAAI7K,KAAKilF,GAAYpiF,OAAQgI,IAAK,CACtD,IAAI84B,EAAgB3jC,KAAKilF,GAAYp6E,GACrC,GAAIm3B,IAAWjiB,EAEP4jB,EADAs0D,EACQ9sF,KAAKoC,IAAIyM,EAAU2pB,EAAQ,IAE3Bx4B,KAAK2L,IAAI,EAAG6sB,EAAQ,QAE7B,CACf,IAAI2W,EAAQqpC,EAAI52D,KAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,MAAQ6+E,EAAI52D,KAAKsrB,YAAc/2C,EAAO4O,OAAOyzE,EAAI52D,KAAKutB,OAAOlqC,MAClH,GAAI6nF,GACA,IAAK,IAAIh+D,EAAY0J,EAAQ,EAAG1J,GAAKjgB,EAAUigB,IAC3C,GAAIla,GAAWm4E,GAAe59C,EAAMrgB,EAAI,IAAK,CACzC0J,EAAQ1J,EACR,KACH,OAGL,IAAK,IAAIA,EAAY0J,EAAQ,EAAG1J,GAAK,EAAGA,IACpC,GAAIla,GAAWm4E,GAAe59C,EAAMrgB,EAAI,IAAK,CACzC0J,EAAQ1J,EACR,KACH,CAGZ,CAED,IAAIk+D,GAAsB,EAC1B,IAAK,IAAIl+D,EAAY,EAAGA,EAAIj6B,KAAKklF,GAAYriF,OAAQo3B,IACjD,GAAIj6B,KAAKklF,GAAYjrD,IAAM0J,EAAO,CAC9Bw0D,GAAa,EACb,KACH,CAEAA,GAAYn4F,KAAKklF,GAAYn6E,KAAK44B,EAC1C,CAED,IAAIp2B,EAAc,EACduJ,EAAckD,EAElB,IAAK,IAAInP,EAAY,EAAGA,EAAI7K,KAAKklF,GAAYriF,OAAQgI,IAAK,CACtD,MAAM49E,EAAezoF,KAAKklF,GAAY,GAAKllF,KAAKklF,GAAYr6E,GACxD0C,EAAMk7E,IAAMl7E,EAAMk7E,GAClB3xE,EAAM2xE,EAAOzuE,IAAUlD,EAAM2xE,EAAOzuE,EAC3C,CAED,IAAK,MAAMu5E,KAAUvzF,KAAK+kF,GAAU,CAChC,IAAI9jE,EAAmBsyE,EAAOtyE,SAAWjhB,KAAKilF,GAAY,GAI1D,GAFIhkE,EAAW1T,IAAK0T,EAAW1T,GAC3B0T,EAAWnK,IAAKmK,EAAWnK,GAC3BkrB,IAAWjiB,EAEPkB,EADAg3E,EACW9sF,KAAKoC,IAAIuJ,EAAKmK,EAAW,IAEzB9V,KAAK2L,IAAIvJ,EAAK0T,EAAW,QAErC,CACf,IAAIq5B,EAAQqpC,EAAI52D,KAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,MAAQ6+E,EAAI52D,KAAKsrB,YAAc/2C,EAAO4O,OAAOyzE,EAAI52D,KAAKutB,OAAOlqC,MAClH,GAAI6nF,GACA,IAAK,IAAIptF,EAAYoW,EAAW,EAAGpW,GAAKiM,EAAKjM,IACzC,GAAIkV,GAAWm4E,GAAe59C,EAAMzvC,EAAI,IAAK,CACzCoW,EAAWpW,EACX,KACH,OAGL,IAAK,IAAIA,EAAYoW,EAAW,EAAGpW,GAAK0C,EAAK1C,IACzC,GAAIkV,GAAWm4E,GAAe59C,EAAMzvC,EAAI,IAAK,CACzCoW,EAAWpW,EACX,KACH,CAGZ,CACDoW,GAAYjhB,KAAKklF,GAAY,GAC7BllF,KAAKglF,GAASj6E,KAAKy4B,GAAYviB,EAAUsyE,EAAO9vD,KAAM8vD,EAAOn4D,MAChE,CAED,GAAiC,GAA7Bp7B,KAAKglF,GAAS,GAAG/jE,SAAe,MAAM,IAAI9e,MAAM,4BAEpD,IAAK,IAAI0I,EAAY,EAAGA,EAAI7K,KAAKglF,GAASniF,OAAS,GAC3C7C,KAAKglF,GAASn6E,EAAI,GAAGoW,UAAYjhB,KAAKglF,GAASn6E,GAAGoW,UAClDjhB,KAAKglF,GAASn6E,GAAGoW,UAAYjhB,KAAKglF,GAASn6E,EAAI,GAAGoW,UAClDjhB,KAAKglF,GAASn6E,EAAI,GAAGuwB,MAAQp7B,KAAKglF,GAASn6E,GAAGuwB,MAC9Cp7B,KAAKglF,GAASn6E,GAAGuwB,MAAQp7B,KAAKglF,GAASn6E,EAAI,GAAGuwB,KAC9Cp7B,KAAKglF,GAAS9oD,OAAOrxB,EAAG,GAExBA,IAIR7K,KAAKohF,KACLphF,KAAK4gF,I,CAGC,EAAAQ,GACNphF,KAAK0kF,GAAM5gD,KAAO9jC,KAAKglF,GACvBhlF,KAAK0kF,GAAM7gD,QAAU7jC,KAAKklF,GAC1BllF,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACNrhF,KAAK0kF,GAAM5gD,KAAO9jC,KAAK+kF,GACvB/kF,KAAK0kF,GAAM7gD,QAAU7jC,KAAKilF,GAC1BjlF,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAO4/D,WAAwBnU,GACjC,WAAA5hF,CAAY4jF,EAAmBzpC,EAAsBS,EAAkBs9C,EAAiBC,GAAuB,EAAOl2D,GAAkB,GACpIzhC,QACIojF,EAAI8G,UAAU2N,wBACdp4F,KAAKyhF,OAAO,IAAIoW,GAA4BlU,EAAKhpC,IAErD,IAAK,MAAMzV,KAAQyV,EAAQ5V,MACnB4+C,EAAI8G,UAAU2N,yBAA2BlzD,EAAKjF,KAAO0jD,EAAI8G,UAAUqN,uBAAyB5yD,EAAKlF,OAAS2jD,EAAI8G,UAAUsN,sBAG5H/3F,KAAKyhF,OAAO,IAAIuW,GAAoBrU,EAAKzpC,EAAchV,EAAM+yD,EAAQC,EAAal2D,G,EAKxF,MAAOq2D,WAA6B3X,GACtC,WAAA3gF,CAAY4jF,EAAmB2U,EAAeC,EAAeC,EAAeC,GACxEl4F,QACAojF,EAAI8G,UAAUiO,eAAiBJ,EAC/B3U,EAAI8G,UAAUkO,eAAiBJ,EAC/B5U,EAAI8G,UAAUmO,eAAiBJ,EAC/B7U,EAAI8G,UAAUoO,eAAiBJ,EAC/B9U,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOuV,WAA+BpV,GASxC,WAAAhhF,CAAY4jF,EAAmB+F,EAAkBoP,GAC7Cv4F,OAAM,GACNP,KAAK6yB,EAAO8wD,EACZ3jF,KAAK2kF,GAAYhB,EAAI8G,UAAUqN,sBAC/B93F,KAAK4kF,GAAUjB,EAAI8G,UAAUsN,oBAC7B/3F,KAAK+4F,GAAapV,EAAI8G,UAAU2N,uBAChCp4F,KAAK6kF,GAAY6E,EACjB1pF,KAAK8kF,GAAUgU,EACf94F,KAAKg5F,GAAatP,EAAWoP,EAC7B94F,KAAKohF,KACLphF,KAAK4gF,I,CAGC,EAAAQ,GACNphF,KAAK6yB,EAAK43D,UAAUqN,sBAAwB93F,KAAK6kF,GACjD7kF,KAAK6yB,EAAK43D,UAAUsN,oBAAsB/3F,KAAK8kF,GAC/C9kF,KAAK6yB,EAAK43D,UAAU2N,uBAAyBp4F,KAAKg5F,GAClDh5F,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACNrhF,KAAK6yB,EAAK43D,UAAUqN,sBAAwB93F,KAAK2kF,GACjD3kF,KAAK6yB,EAAK43D,UAAUsN,oBAAsB/3F,KAAK4kF,GAC/C5kF,KAAK6yB,EAAK43D,UAAU2N,uBAAyBp4F,KAAK+4F,GAClD/4F,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAO+iE,WAAgCtX,GACzC,WAAA5hF,CAAY4jF,EAAmBzpC,EAAsBS,EAAkBu+C,EAAeC,GAGlF,GAFA54F,QAEa,GAAT24F,GAA2B,GAAbC,EAAgB,OAE9BxV,EAAI8G,UAAU2N,wBACdp4F,KAAKyhF,OAAO,IAAIoW,GAA4BlU,EAAKhpC,IAGrD,MAAMgvC,EAAmBhG,EAAI8G,UAAUqN,sBACjCsB,EAAiBzV,EAAI8G,UAAUsN,oBAC/BrO,EAAmBv+E,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIo2E,EAAI52D,KAAK4Z,YAAcrlC,EAAOwQ,aAAc63E,EAAWuP,IAC/FJ,EAAiB3tF,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIo2E,EAAI52D,KAAK4Z,YAAcrlC,EAAOwQ,aAAcsnF,EAASF,IAC7FxP,GAAYoP,EAEZ94F,KAAKyhF,OAAO,IAAIuP,GAAmBrN,EAAKhpC,EAASgvC,EAAUyP,EAAQ,MAAM,IAClEF,EAAQ,EAEfl5F,KAAKyhF,OAAO,IAAIuP,GAAmBrN,EAAKhpC,EAAS+uC,EAAUv+E,KAAKoC,IAAIo8E,EAAUmP,GAAS,MAAM,IAG7F94F,KAAKyhF,OAAO,IAAIuP,GAAmBrN,EAAKhpC,EAASxvC,KAAK2L,IAAIsiF,EAAQ1P,GAAWoP,EAAQ,MAAM,IAG/F94F,KAAKyhF,OAAO,IAAI0U,GAAuBxS,EAAK+F,EAAUoP,IACtD,MAAMO,EAAe,GACrB,IAAIpI,EAA6B,EAC7BpmF,EAAY,EAChB,KAAOA,EAAI8vC,EAAQ5V,MAAMliC,QAAQ,CAC7B,MAAMqiC,EAAayV,EAAQ5V,MAAMl6B,GAC7Bq6B,EAAKjF,KAAO0pD,GAAYzkD,EAAKlF,OAASo5D,GACtCvuF,IACIq6B,EAAKjF,KAAOypD,IAAUuH,EAAqBpmF,KAE/CwuF,EAAatuF,KAAKm6B,EAAKT,SACvBzkC,KAAKyhF,OAAO,IAAIkT,GAAgBhR,EAAKhpC,EAASzV,EAAMr6B,GAAG,IAE9D,CAED,IAAK,MAAMq6B,KAAQm0D,EAGf,GAFAn0D,EAAKlF,OAASk5D,EACdh0D,EAAKjF,KAAOi5D,IACRh0D,EAAKjF,KAAOypD,GACZxkD,EAAKlF,OAAS84D,GAAlB,CAEA94F,KAAKyhF,OAAO,IAAIkT,GAAgBhR,EAAKhpC,EAASzV,EAAM+rD,KAAsB,IAE1EjxF,KAAKyhF,OAAO,IAAI2P,GAAiBzN,EAAKz+C,EAAM/5B,KAAK2L,IAAIouB,EAAKlF,MAAO0pD,GAAWv+E,KAAKoC,IAAIurF,EAAQ5zD,EAAKjF,OAElG,IAAK,IAAIp1B,EAAY,EAAGA,EAAIM,KAAKC,IAAI+tF,GAAYtuF,IAC7C7K,KAAKyhF,OAAO,IAAIuW,GAAoBrU,EAAKzpC,EAAchV,EAAMi0D,EAAY,EAAGxV,EAAI0S,MAAMiD,mBAPhE,C,EAchC,MAAOC,WAA8C/X,GACvD,WAAAzhF,CAAY4jF,EAAmB6V,EAAkBC,EAAkBC,EAAsBC,GACrFp5F,QACA,IAAK,IAAI25C,EAAuBw/C,EAAcx/C,EAAew/C,EAAeC,EAAez/C,IAAgB,CACvG,MAAM0/C,EAAuC,GAE7C,IAAK,IAAIh/C,EAAc4+C,EAAU5+C,EAAM4+C,EAAWC,EAAU7+C,IAAO,CAC/D,MAAMi/C,EAA8BlW,EAAI52D,KAAKurB,SAAS4B,GAAcjC,KAAK2C,GACzE,GAA2B,GAAvBi/C,EAAJ,CAEA,GAAqDrsE,MAAjDosE,EAAiB1iE,OAAO2iE,IAAoC,CAC5D,IAAIC,GAAkB,EACtB,IAAK,IAAIC,EAAe,EAAGA,EAAOpW,EAAI52D,KAAKoJ,SAAU4jE,IACjD,IAAIA,EAAOP,GAAYO,GAAQP,EAAWC,IAClC9V,EAAI52D,KAAKurB,SAAS4B,GAAcjC,KAAK8hD,IAASF,EAAqB,CACnEC,GAAkB,EAClB,KACH,CAGT,GAAIA,EAAiB,CAEjB,MAAME,EAAyBrW,EAAI52D,KAAK48B,WAAWzP,EAAcU,GACjE56C,KAAKyhF,OAAO,IAAI0G,GAAqBxE,EAAK,EAAG/oC,EAAKV,EAAc,EAAG,IACnEl6C,KAAKyhF,OAAO,IAAI0Q,GAA0BxO,EAAKzpC,EAAcU,IAC7D,MAAMkJ,EAA6B6/B,EAAI52D,KAAK48B,WAAWzP,EAAcU,GACrE,GAAkB,MAAdkJ,EAAoB,MAAM,IAAI3hD,MAClCnC,KAAKyhF,OAAO,IAAImP,GAAYjN,EAAK7/B,EAAYk2C,EAAcj1D,MAAO,EAAGzjC,EAAOwQ,aAAe6xE,EAAI52D,KAAK4Z,YAAarlC,EAAOwQ,aAAe6xE,EAAI52D,KAAK4Z,cAGhJmd,EAAW9e,YAAYniC,OAAS,EAChCihD,EAAW9e,YAAYj6B,QAAQivF,EAAch1D,aAE7C40D,EAAiB1iE,OAAO2iE,IAAwBlW,EAAI52D,KAAKurB,SAAS4B,GAAcjC,KAAK2C,EACxF,MACGg/C,EAAiB1iE,OAAO2iE,IAAwBA,CAEvD,CAED75F,KAAKyhF,OAAO,IAAI0G,GAAqBxE,EAAKiW,EAAiB1iE,OAAO2iE,IAAuBj/C,EAAKV,EAAc,EAAG,GA/BjF,CAgCjC,CACJ,C,EAIH,MAAO+/C,WAA2BvZ,GACpC,WAAA3gF,CAAY4jF,EAAmBhpC,EAAkBu/C,GAC7C35F,QACIojF,EAAI8G,UAAU2N,wBACd,IAAIP,GAA4BlU,EAAKhpC,GAEzC,MAAM3gC,EAAmB1Y,EAAO0Y,SAChC,IAAK,MAAMkrB,KAAQyV,EAAQ5V,MAAO,CAC9B,GAAI4+C,EAAI8G,UAAU2N,yBAA2BlzD,EAAKjF,KAAO0jD,EAAI8G,UAAUqN,uBAAyB5yD,EAAKlF,OAAS2jD,EAAI8G,UAAUsN,qBACxH,SAGJ,MAAMoC,EAAuB,GACvBC,EAAqB,GAC3B,IAAK,IAAIvvF,EAAY,EAAGA,EAAIq6B,EAAKrB,QAAQhhC,OAAQgI,IAAK,CAClD,MAAM84B,EAAgBuB,EAAKrB,QAAQh5B,GAC7BwvF,EAA2BH,EAASv2D,EAAQ,KAAOA,EAASA,EAAQ,KAC7B,GAAzCw2D,EAAWl+D,QAAQo+D,IACnBF,EAAWpvF,KAAKsvF,EAEvB,CAED,IAAI9sF,EAAc,EACduJ,EAAckD,EAElB,IAAK,IAAInP,EAAY,EAAGA,EAAIsvF,EAAWt3F,OAAQgI,IAAK,CAChD,MAAM49E,EAAe0R,EAAW,GAAKA,EAAWtvF,GAC5C0C,EAAMk7E,IAAMl7E,EAAMk7E,GAClB3xE,EAAM2xE,EAAOzuE,IAAUlD,EAAM2xE,EAAOzuE,EAC3C,CAED,IAAK,MAAMu5E,KAAUruD,EAAKpB,KAAM,CAC5B,IAAI7iB,EAAmBsyE,EAAOtyE,SAAWikB,EAAKrB,QAAQ,GAClD5iB,EAAW1T,IAAK0T,EAAW1T,GAC3B0T,EAAWnK,IAAKmK,EAAWnK,GAC/B,MAAMwjF,EAA8BJ,EAASj5E,EAAW,KAAOA,EAAYA,EAAW,IACtFm5E,EAAQrvF,KAAKy4B,GAAY82D,EAAsBH,EAAW,GAAI5G,EAAO9vD,KAAM8vD,EAAOn4D,MACrF,CAED,GAA2B,GAAvBg/D,EAAQ,GAAGn5E,SAAe,MAAM,IAAI9e,MAAM,4BAE9C,IAAK,IAAI0I,EAAY,EAAGA,EAAIuvF,EAAQv3F,OAAS,GACrCu3F,EAAQvvF,EAAI,GAAGoW,UAAYm5E,EAAQvvF,GAAGoW,UACtCm5E,EAAQvvF,GAAGoW,UAAYm5E,EAAQvvF,EAAI,GAAGoW,UACtCm5E,EAAQvvF,EAAI,GAAGuwB,MAAQg/D,EAAQvvF,GAAGuwB,MAClCg/D,EAAQvvF,GAAGuwB,MAAQg/D,EAAQvvF,EAAI,GAAGuwB,KAClCg/D,EAAQl+D,OAAOrxB,EAAG,GAElBA,IAIRq6B,EAAKrB,QAAUs2D,EACfj1D,EAAKpB,KAAOs2D,CACf,CACDp6F,KAAK4gF,KACL+C,EAAI1tD,SAASC,S,EAIf,MAAOqkE,WAAqB7Z,GAC9B,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACAojF,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAAwB/jE,OAASqkE,EAGhFrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO4Z,WAAwB9Z,GACjC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACIylF,EAASnjF,OAAS,KAClBmjF,EAAWA,EAAS/nC,UAAU,EAAG,KAGrC0lC,EAAI52D,KAAK2tB,MAAQsrC,EACjBniF,SAAS62C,MAAQsrC,EAAW,MAAQpoE,EAAamB,mBACjD4kE,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO6Z,WAA0B/Z,GACnC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACIylF,EAASnjF,OAAS,KAClBmjF,EAAWA,EAAS/nC,UAAU,EAAG,KAGrC0lC,EAAI52D,KAAKurB,SAASqrC,EAAI+W,mBAAmBl2F,KAAOwhF,EAChDrC,EAAIqG,oBAAqB,EAEzBrG,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAO+Z,WAAkBja,GAC3B,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACAojF,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAAwBljE,IAAMwjE,EAC7ErC,EAAIjvD,MAAM03C,SAAS9qE,EAAOob,WAAW1X,WAAgB,IAAEF,MAAO6+E,EAAIx8D,QAASw8D,EAAI+B,wBAC/E/B,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOga,WAAuBla,GAChC,WAAA3gF,CAAY4jF,EAAmBsE,EAAkBjC,GAC7CzlF,QACAojF,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAAwBjjE,SAAWujE,EAClFrC,EAAI1tD,SAASC,UACT+xD,GAAYjC,GAAUhmF,KAAK4gF,I,EAIjC,MAAOia,WAAuB9Z,GAKhC,WAAAhhF,CAAY4jF,EAAmBz+C,EAAY41D,EAAkBC,EAAkBC,EAAsBC,GACjG16F,OAAM,GACNP,KAAK6yB,EAAO8wD,EACZ3jF,KAAK0kF,GAAQx/C,EACbllC,KAAK+kF,GAAW7/C,EAAKpB,KACrB9jC,KAAKglF,GAAW,GAEhB,IAAIkW,GAAoB,EAExB,IAAK,MAAM12D,KAAOU,EAAKpB,KACfU,EAAIf,KAAOq3D,EACPG,EACAj7F,KAAKglF,GAASj6E,KAAKy4B,GAAYgB,EAAIvjB,SAAUujB,EAAIf,KAAMs3D,IAEvD/6F,KAAKglF,GAASj6E,KAAKy5B,GAEhBA,EAAIf,MAAQq3D,GACnB96F,KAAKglF,GAASj6E,KAAKy4B,GAAYw3D,EAAcF,EAAUC,IACvDG,GAAW,IAEND,GAAgBC,IACjBl7F,KAAKglF,GAASj6E,KAAKy4B,GAAYw3D,EAAcF,EAAUC,IACvDG,GAAW,GAEXD,EACAj7F,KAAKglF,GAASj6E,KAAKy4B,GAAYgB,EAAIvjB,SAAUujB,EAAIf,KAAMs3D,IAEvD/6F,KAAKglF,GAASj6E,KAAKy5B,IAK/Bg+C,GAAoBxiF,KAAKglF,IAEzBhlF,KAAKohF,KACLphF,KAAK4gF,I,CAGC,EAAAQ,GACNphF,KAAK0kF,GAAM5gD,KAAO9jC,KAAKglF,GACvBhlF,KAAK6yB,EAAKoD,SAASC,S,CAGb,EAAAmrD,GACNrhF,KAAK0kF,GAAM5gD,KAAO9jC,KAAK+kF,GACvB/kF,KAAK6yB,EAAKoD,SAASC,S,EAIrB,MAAOilE,WAAuBza,GAChC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC1E9mE,EAAWvd,UAAY2kF,IACvBpnE,EAAWvd,SAAW2kF,EAElBpnE,EAAWyE,6BAA8B,EACzCzE,EAAW0E,kBAAoB,EAC/B1E,EAAW2E,gBAAkBjiB,EAAOK,gBAAgBid,EAAWvd,UAAUiB,QAAQO,OAAS,EAC1F+b,EAAW4E,iBAAmB,EAC9B5E,EAAW6E,uBAAwB,EACnC7E,EAAW8E,oBAAsB,EAErC9E,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAMP,MAAOwa,WAA8C1a,GACvD,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAa+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9D9mE,EAAWyE,6BAA+B2iE,IAC1CpnE,EAAWyE,4BAA8B2iE,EACzCpnE,EAAW0E,kBAAoB,EAC/B1E,EAAW2E,gBAAkBjiB,EAAOK,gBAAgBid,EAAWvd,UAAUiB,QAAQO,OAAS,EAC1F+b,EAAW4E,iBAAmB,EAC9B5E,EAAW6E,uBAAwB,EACnC7E,EAAW8E,oBAAsB,EACjC9E,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAIX,MAAOya,WAA+B3a,GACxC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAa+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9D9mE,EAAW4E,kBAAoBwiE,IAC/BpnE,EAAWyE,6BAA8B,EACzCzE,EAAW4E,iBAAmBwiE,EAC9BpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAIZ,MAAO0a,WAAgC5a,GACxC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAa+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9D9mE,EAAW0E,mBAAqB0iE,IAChCpnE,EAAWyE,6BAA8B,EACzCzE,EAAW0E,kBAAoB0iE,EAC/BpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAIZ,MAAO2a,WAA8B7a,GACtC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAa+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9D9mE,EAAW2E,iBAAmByiE,IAC9BpnE,EAAWyE,6BAA8B,EACzCzE,EAAW2E,gBAAkByiE,EAC7BpnE,EAAW0E,kBAAoBnY,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIy4E,EAAW,EAAGpnE,EAAW0E,oBAC7E1E,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAIZ,MAAO4a,WAAkC9a,GAC1C,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAa+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9D9mE,EAAW8E,qBAAuBsiE,IAClCpnE,EAAWyE,6BAA8B,EACzCzE,EAAW8E,oBAAsBsiE,EACjCpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAIZ,MAAO6a,WAAoC/a,GAC5C,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAa+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9D9mE,EAAW6E,uBAAyBuiE,IACpCpnE,EAAWyE,6BAA8B,EACzCzE,EAAW6E,sBAAwBuiE,EACnCpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAMf,MAAO8a,WAAwBhb,GACjC,WAAA3gF,CAAY4jF,EAAmBqC,GAC3BzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC1E9mE,EAAW+uB,WAAaq4C,IACxBpnE,EAAW+uB,UAAYq4C,EACvBpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAO+a,WAA0Bjb,GACnC,WAAA3gF,CAAY4jF,GACRpjF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E9mE,EAAW8xB,YAAY,EAAG,EAAG,GAC7B9xB,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOgb,WAA6Blb,GACtC,WAAA3gF,CAAY4jF,EAAmB7+E,GAC3BvE,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBAC9E9mE,EAAWwvB,gBACX,IAAK,IAAIvjC,EAAY/F,EAAO+F,EAAI+T,EAAWwvB,cAAevjC,IACtD+T,EAAW1G,UAAUrN,GAAG2V,OAAS5B,EAAW1G,UAAUrN,EAAI,GAAG2V,OAC7D5B,EAAW1G,UAAUrN,GAAG/F,MAAQ8Z,EAAW1G,UAAUrN,EAAI,GAAG/F,MAC5D8Z,EAAW1G,UAAUrN,GAAG4V,SAAW7B,EAAW1G,UAAUrN,EAAI,GAAG4V,SAGnE7B,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,I,EAIP,MAAOib,WAAgCnb,GACzC,WAAA3gF,CAAY4jF,EAAmBhsC,EAAuBn3B,EAAgByyC,GAClE1yD,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACxEoW,EAAoBl9E,EAAW1G,UAAUy/B,GAAen3B,OACxDu7E,EAAmBn9E,EAAW1G,UAAUy/B,GAAe7yC,MACzDg3F,GAAat7E,GAAUu7E,GAAY9oC,IACnCr0C,EAAW1G,UAAUy/B,GAAen3B,OAASA,EAC7C5B,EAAW1G,UAAUy/B,GAAe7yC,MAAQmuD,EAC5Cr0C,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EAKX,MAAOob,WAA8Btb,GACvC,WAAA3gF,CAAY4jF,EAAmBhsC,EAAuBquC,GAClDzlF,QACA,MAAMqe,EAAyB+kE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6d,YAAY2+C,EAAI+B,wBACrD9mE,EAAW1G,UAAUy/B,GAAel3B,UAC7CulE,IACZpnE,EAAW1G,UAAUy/B,GAAel3B,SAAWulE,EAC/CpnE,EAAWN,OAASM,EAAW3J,KAC/B0uE,EAAI1tD,SAASC,UACbl2B,KAAK4gF,K,EC9zIhB,MAAMqb,OAACA,GAAM1pE,IAAEA,GAAG2pE,KAAEA,GAAIC,GAAEA,GAAEC,MAAEA,GAAKC,GAAEA,GAAEC,OAAEA,GAAMC,OAAEA,IAAU72E,E,MAE/C82E,GA6BZ,WAAAz8F,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EA5BH7yB,KAAAy8F,GAAkCL,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,SAAUynF,KAAM,MACvG18F,KAAA28F,GAA+CL,GAAO,CAACh3E,MAAO,gBAC9Ei3E,GAAO,CAACj5F,MAAO,UAAW,gCAC1Bi5F,GAAO,CAACj5F,MAAO,WAAY,iCAC3Bi5F,GAAO,CAACj5F,MAAO,YAAa,gCAEZtD,KAAa48F,GAAsBX,GAAO,CAAChoE,MAAO,iBAClDj0B,KAAA68F,GAAiCZ,GAAO,CAAChoE,MAAO,aAAc3O,MAAO,cAAe,QAErFtlB,KAASg0B,UAAmBzB,GAAI,CAAC0B,MAAO,qBAAsB3O,MAAO,iBACpF62E,GAAG,iBACH5pE,GAAI,CAACjN,MAAO,oGACXiN,GAAI,CAACjN,MAAO,sBACX,iBACA+2E,KACAH,GAAK,CAAE52E,MAAO,4DAA8D,0CAE7EtlB,KAAKy8F,IAENlqE,GAAI,CAACjN,MAAO,oGACXiN,GAAI,CAAC0B,MAAO,kBAAmB3O,MAAO,gBAAiBtlB,KAAK28F,KAE7DpqE,GAAI,CAACjN,MAAO,+EACXtlB,KAAK68F,IAEN78F,KAAK48F,IAuBG58F,KAAM88F,GAAG,KACjB98F,KAAK6yB,EAAKsuD,MAAM,EAGTnhF,KAAO+8F,QAAG,KACjB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKy8F,GAAcO,oBAAoB,WAAYR,GAAkBU,IACrEl9F,KAAKy8F,GAAcO,oBAAoB,OAAQR,GAAkBW,IACjEn9F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,GAAgB,EAG5Dp9F,KAAAo9F,GAAmBj5F,IACe,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SAC1Dr9F,KAAKi9F,IACL,EAqBMj9F,KAAYi9F,GAAG,KACtBp4C,OAAOthD,aAAa+5F,QAAQ,oBAAqBt9F,KAAK28F,GAA0Br5F,OAChFtD,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKi/D,OAAO,IAAIsD,GAAkBp1F,KAAK6yB,EAAM2pE,GAAkBgB,GAAUx9F,KAAKy8F,IAAgBz8F,KAAK28F,GAA0Br5F,QAAQ,EAAK,EA1D/ItD,KAAKy8F,GAAcn5F,MAAQtD,KAAK6yB,EAAK9F,KAAK4Z,YAAc,GACxD3mC,KAAKy8F,GAAclvF,IAAMjM,EAAOiQ,eAAiB,GACjDvR,KAAKy8F,GAAc3lF,IAAMxV,EAAOkQ,eAAiB,GAEjD,MAAMisF,EAA8B54C,OAAOthD,aAAaC,QAAQ,qBAC5C,MAAhBi6F,IACHz9F,KAAK28F,GAA0Br5F,MAAQm6F,GAGxCz9F,KAAKy8F,GAAcH,SAClBv3C,YAAW,IAAI/kD,KAAKy8F,GAAciB,UAEnC19F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKy8F,GAAcv4F,iBAAiB,WAAYs4F,GAAkBU,IAClEl9F,KAAKy8F,GAAcv4F,iBAAiB,OAAQs4F,GAAkBW,IAC9Dn9F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,G,CAqBzC,SAAOF,CAAa/4F,GAC3B,MAAMw5F,EAAYx5F,EAAW,MAAIA,EAAMy5F,MAAQz5F,EAAMk5F,QACrD,OAAgB,IAAZM,GAAkBA,EAAW,KAAOA,EAAW,IAAMA,EAAW,MACnEx5F,EAAMgxB,kBACE,E,CAKF,SAAOgoE,CAAgBh5F,GAC9B,MAAMi4F,EAA4Cj4F,EAAMqc,OACxD47E,EAAM94F,MAAQ4zB,OAAOslE,GAAkBgB,GAAUpB,G,CAG1C,SAAOoB,CAAUpB,GACxB,OAAOjxF,KAAK0hB,MAAM1hB,KAAK2L,IAAI6Q,OAAOy0E,EAAM7uF,KAAMpC,KAAKoC,IAAIoa,OAAOy0E,EAAMtlF,KAAM6Q,OAAOy0E,EAAM94F,S,ECnFzF,MAAM24F,OAACA,GAAM1pE,IAAEA,GAAGsrE,MAAEA,GAAKxB,GAAEA,GAAEF,GAAEA,GAAEC,MAAEA,IAAS12E,E,MAE/Bo4E,GA+CZ,WAAA/9F,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EA9CF7yB,KAAA+9F,GAAqC3B,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,SAAUynF,KAAM,MAC1G18F,KAAAg+F,GAAyC5B,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,SAAUynF,KAAM,MAC9G18F,KAAAi+F,GAAwC7B,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,SAAUynF,KAAM,MAC7G18F,KAAAk+F,GAAuC9B,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAUynF,KAAM,MAC7G18F,KAAAm+F,GAA2C/B,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,aAChGjV,KAAAo+F,GAA2ChC,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,aAEhGjV,KAAa48F,GAAsBX,GAAO,CAAChoE,MAAO,iBAClDj0B,KAAA68F,GAAiCZ,GAAO,CAAChoE,MAAO,aAAc3O,MAAO,cAAe,QAEtFtlB,KAAAg0B,UAA4BzB,GAAI,CAAC0B,MAAO,qBAAsB3O,MAAO,oCACpF62E,GAAG,oBACH0B,GAAM,CAACv4E,MAAO,oGACb,kBACAtlB,KAAKg+F,IAENH,GAAM,CAACv4E,MAAO,oGACb,iBACAtlB,KAAKi+F,IAEN1rE,GAAI,CAAEjN,MAAO,oGACZ,gBACAtlB,KAAKk+F,IAENL,GAAM,CAACv4E,MAAO,oGACb,kCACAtlB,KAAK+9F,IAENF,GAAM,CAACv4E,MAAO,oGACb,2BACA+2E,KACA,eACAr8F,KAAKm+F,IAENN,GAAM,CAACv4E,MAAO,oGACb,wBACA+2E,KACA,eACAr8F,KAAKo+F,IAENP,GAAM,CAACv4E,MAAO,+EACbtlB,KAAK68F,IAEN78F,KAAK48F,IAuCG58F,KAAM88F,GAAG,KACjB98F,KAAK6yB,EAAKsuD,MAAM,EAGTnhF,KAAO+8F,QAAG,KACjB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAK+9F,GAAiBf,oBAAoB,WAAYc,GAAsBZ,IAC5El9F,KAAKg+F,GAAqBhB,oBAAoB,WAAYc,GAAsBZ,IAChFl9F,KAAKi+F,GAAoBjB,oBAAoB,WAAYc,GAAsBZ,IAC/El9F,KAAKk+F,GAAmBlB,oBAAoB,WAAYc,GAAsBZ,IAC9El9F,KAAK+9F,GAAiBf,oBAAoB,OAAQh9F,KAAKm9F,IACvDn9F,KAAKg+F,GAAqBhB,oBAAoB,OAAQh9F,KAAKm9F,IAC3Dn9F,KAAKi+F,GAAoBjB,oBAAoB,OAAQh9F,KAAKm9F,IAC1Dn9F,KAAKk+F,GAAmBlB,oBAAoB,OAAQh9F,KAAKm9F,IACzDn9F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,GAAgB,EAG5Dp9F,KAAAo9F,GAAmBj5F,IACe,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SAC1Dr9F,KAAKi9F,IACL,EAYMj9F,KAAAm9F,GAAmBh5F,IAC1B,MAAMi4F,EAA4Cj4F,EAAMqc,OACxD47E,EAAM94F,MAAQ4zB,OAAO4mE,GAAsBN,GAAUpB,GAAO,EAOrDp8F,KAAYi9F,GAAG,KACtB,MAAMoB,EAAqB,IAAI7c,GAC/B6c,EAAM5c,OAAO,IAAIuO,GAAuBhwF,KAAK6yB,EAAM7yB,KAAKm+F,GAAuBG,QAASt+F,KAAKo+F,GAAuBE,UACpHD,EAAM5c,OAAO,IAAIuQ,GAAyBhyF,KAAK6yB,EAAMirE,GAAsBN,GAAUx9F,KAAK+9F,MAC1FM,EAAM5c,OAAO,IAAIyH,GAAmBlpF,KAAK6yB,EAAMirE,GAAsBN,GAAUx9F,KAAKg+F,IAAuBF,GAAsBN,GAAUx9F,KAAKi+F,IAAsBH,GAAsBN,GAAUx9F,KAAKk+F,MAC3Ml+F,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKi/D,OAAOuM,GAAO,EAAK,EAnF7Br+F,KAAK+9F,GAAiBz6F,MAAQtD,KAAK6yB,EAAK9F,KAAK0tB,mBAAqB,GAClEz6C,KAAK+9F,GAAiBxwF,IAAM,IAC5BvN,KAAK+9F,GAAiBjnF,IAAMxV,EAAOoQ,YAAc,GAGjD1R,KAAKg+F,GAAqB16F,MAAQtD,KAAK6yB,EAAK9F,KAAKE,kBAAoB,GACrEjtB,KAAKg+F,GAAqBzwF,IAAMjM,EAAO+X,qBAAuB,GAC9DrZ,KAAKg+F,GAAqBlnF,IAAMxV,EAAOgY,qBAAuB,GAE9DtZ,KAAKi+F,GAAoB36F,MAAQtD,KAAK6yB,EAAK9F,KAAKG,kBAAoB,GACpEltB,KAAKi+F,GAAoB1wF,IAAMjM,EAAOiY,qBAAuB,GAC7DvZ,KAAKi+F,GAAoBnnF,IAAMxV,EAAOkY,qBAAuB,GAE7DxZ,KAAKk+F,GAAmB56F,MAAQtD,KAAK6yB,EAAK9F,KAAK+sB,gBAAkB,GACjE95C,KAAKk+F,GAAmB3wF,IAAMjM,EAAOmY,mBAAqB,GAC1DzZ,KAAKk+F,GAAmBpnF,IAAMxV,EAAOoY,mBAAqB,GAE1D1Z,KAAKm+F,GAAuBG,QAAUt+F,KAAK6yB,EAAK9F,KAAKitB,mBACrDh6C,KAAKo+F,GAAuBE,QAAUt+F,KAAK6yB,EAAK9F,KAAKqZ,mBACrDpmC,KAAKg+F,GAAqB1B,SACzBv3C,YAAW,IAAI/kD,KAAKg+F,GAAqBN,UAE1C19F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAK+9F,GAAiB75F,iBAAiB,WAAY45F,GAAsBZ,IACzEl9F,KAAKg+F,GAAqB95F,iBAAiB,WAAY45F,GAAsBZ,IAC7El9F,KAAKi+F,GAAoB/5F,iBAAiB,WAAY45F,GAAsBZ,IAC5El9F,KAAKk+F,GAAmBh6F,iBAAiB,WAAY45F,GAAsBZ,IAC3El9F,KAAK+9F,GAAiB75F,iBAAiB,OAAQlE,KAAKm9F,IACpDn9F,KAAKg+F,GAAqB95F,iBAAiB,OAAQlE,KAAKm9F,IACxDn9F,KAAKi+F,GAAoB/5F,iBAAiB,OAAQlE,KAAKm9F,IACvDn9F,KAAKk+F,GAAmBh6F,iBAAiB,OAAQlE,KAAKm9F,IACtDn9F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,G,CA2BzC,SAAOF,CAAa/4F,GAC3B,MAAMw5F,EAAYx5F,EAAW,MAAIA,EAAMy5F,MAAQz5F,EAAMk5F,QACrD,OAAgB,IAAZM,GAAkBA,EAAW,KAAOA,EAAW,IAAMA,EAAW,MACnEx5F,EAAMgxB,kBACC,E,CAUD,SAAOqoE,CAAUpB,GACxB,OAAOjxF,KAAK0hB,MAAM1hB,KAAK2L,IAAI6Q,OAAOy0E,EAAM7uF,KAAMpC,KAAKoC,IAAIoa,OAAOy0E,EAAMtlF,KAAM6Q,OAAOy0E,EAAM94F,S,EC3HzF,MAAM24F,OAAEA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,IAAOz2E,E,MAEf64E,GA0BZ,WAAAx+F,CAAY4jF,GAxBJ3jF,KAAOk0B,EAAW,EAClBl0B,KAAOw+F,GAAW,EAClBx+F,KAAUy+F,GAAW,EACrBz+F,KAAQ0+F,GAAW,EACnB1+F,KAAUm0B,GAAY,EACvBn0B,KAAA2+F,SAAyB,IAAI3zF,aAAa,IAC1ChL,KAAA4+F,iBAAiC,IAAI5zF,aAAa,IACjDhL,KAAiB6+F,GAAW,EAC5B7+F,KAAY8+F,GAAmB,GACtB9+F,KAAY+yB,EAAW,IACvB/yB,KAAagzB,EAAW,IACxBhzB,KAAA++F,GAAwBh5E,EAAI6N,KAAK,CAAET,KAAMrM,GAAYuJ,mBAAoB,iBAAkB,SAC3FrwB,KAAMg/F,GAAkBj5E,EAAIwN,IAAI,CAAE,iBAAkB,SACpDvzB,KAASi/F,GAAkBl5E,EAAIwN,IAAI,CAAE,iBAAkB,SACvDvzB,KAAOk/F,GAAkBn5E,EAAIwN,IAAI,CAAE,iBAAkB,SACrDvzB,KAAI+zB,EAAkBhO,EAAIwN,IAAI,CAAEjO,MAAO,qBAAqBwB,GAAY6I,2DAA4DyD,MAAO,OAAQC,OAAQ,OAAQ8rE,QAAS,OAASn/F,KAAK+yB,EAAe,IAAM/yB,KAAKgzB,EAAeosE,oBAAqB,QACxQp/F,KAAK++F,GACL/+F,KAAKg/F,GACLh/F,KAAKi/F,GACLj/F,KAAKk/F,IAGUl/F,KAAAg0B,UAAyBtO,EAAK6M,IAAI,CAAE0B,MAAO,GAAI3O,MAAO,uDAAyDtlB,KAAK+zB,GA+C5H/zB,KAAYq/F,GAAG,KAEtB,IAAIC,GAAY,EAChB,GAAIt/F,KAAK8+F,GAAaj8F,OAAS,EAC9B,IAAK,IAAIgI,EAAI,EAAGA,EAAI,GAAIA,IACnB7K,KAAK8+F,GAAa9+F,KAAK6+F,IAAmBh0F,IAAM7K,KAAK2+F,SAAS9zF,KACjEy0F,GAAY,EAAOz0F,EAAI,IAKT,GAAby0F,GAAkD,GAA5Bt/F,KAAK8+F,GAAaj8F,SAG3C7C,KAAK8+F,GAAa5iE,OAAO,EAAGl8B,KAAK6+F,IAEjC7+F,KAAK6+F,GAAoB,EAEzB7+F,KAAK8+F,GAAa7hD,QAAQj9C,KAAK2+F,SAAShhD,SAGpC39C,KAAK8+F,GAAaj8F,OAAS,IAC9B7C,KAAK8+F,GAAaljE,MAGnB,EAIK57B,KAAImhF,KAAG,KAETnhF,KAAK6+F,GAAoB7+F,KAAK8+F,GAAaj8F,OAAS,IACvD7C,KAAK6+F,KACL7+F,KAAK2+F,SAAW3+F,KAAK8+F,GAAa9+F,KAAK6+F,IAAmBlhD,QAC1D,IAAI6nC,GAAiBxlF,KAAK6yB,EAAM7yB,KAAK2+F,UACrC3+F,KAAK42B,SACL,EAIK52B,KAAIshF,KAAG,KAETthF,KAAK6+F,GAAoB,IAC5B7+F,KAAK6+F,KACL7+F,KAAK2+F,SAAW3+F,KAAK8+F,GAAa9+F,KAAK6+F,IAAmBlhD,QAC1D,IAAI6nC,GAAiBxlF,KAAK6yB,EAAM7yB,KAAK2+F,UACrC3+F,KAAK42B,SACL,EAIM52B,KAAAo9F,GAAmBj5F,IACL,IAAjBA,EAAMk5F,SACTr9F,KAAKmhF,OACLh9E,EAAMo7F,mBAEmB,IAAjBp7F,EAAMk5F,UACdr9F,KAAKshF,OACLn9E,EAAMo7F,kBACN,EAGMv/F,KAAAk1B,EAAqB/wB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKy+F,IAAc,EAEnBz+F,KAAK81B,IAAkB,EAGhB91B,KAAA21B,EAAqBxxB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKy+F,IAAc,EAEnBz+F,KAAK81B,IAAkB,EAGhB91B,KAAA61B,EAAmB1xB,IAC1B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,MAAMzqE,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EAGhB91B,KAAA+1B,GAAmB5xB,IAC1B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,IAAK7/F,KAAKm0B,EAAY,OACtBhwB,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EA2ChB91B,KAAAg2B,GAAuB7xB,IAE9BnE,KAAKq/F,KACLr/F,KAAKm0B,GAAa,CAAK,EApMvBn0B,KAAK6yB,EAAO8wD,EAEZ,IAAK,IAAI94E,EAAY,EAAGA,GAAK,EAAGA,GAAK,EACpC7K,KAAKg/F,GAAO/6F,YAAY8hB,EAAImN,KAAK,CAAEC,KAAMrM,GAAY0J,MAAO5Z,EAAI/L,EAAI7K,KAAK+yB,EAAe,EAAK,EAAGlc,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,KAE9H,IAAK,IAAInoB,EAAY,EAAGA,GAAK,EAAGA,IAC/B7K,KAAKi/F,GAAUh7F,YAAY8hB,EAAImN,KAAK,CAAEC,KAAMrM,GAAY2J,UAAW7Z,EAAI/L,EAAI7K,KAAK+yB,EAAe,EAAK,EAAGlc,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,KAIrIhzB,KAAKg/F,GAAO/6F,YAAY8hB,EAAImN,KAAK,CAAEC,KAAMrM,GAAY0J,MAAO5Z,EAAG,EAAGC,EAAI7W,KAAKgzB,EAAgB,EAAK,EAAGI,MAAOpzB,KAAK+yB,EAAcM,OAAQ,KACrI,IAAK,IAAIxoB,EAAY,EAAGA,EAAI,EAAGA,IAC9B7K,KAAKi/F,GAAUh7F,YAAY8hB,EAAImN,KAAK,CAAEC,KAAMrM,GAAY2J,UAAW7Z,EAAG,EAAGC,EAAO,EAAJhM,GAAS7K,KAAKgzB,EAAgB,IAAKI,MAAOpzB,KAAK+yB,EAAcM,OAAQ,KACjJrzB,KAAKi/F,GAAUh7F,YAAY8hB,EAAImN,KAAK,CAAEC,KAAMrM,GAAY2J,UAAW7Z,EAAG,EAAGC,EAAG7W,KAAKgzB,EAAgB,EAAQ,EAAJnoB,GAAS7K,KAAKgzB,EAAgB,IAAKI,MAAOpzB,KAAK+yB,EAAcM,OAAQ,KAI3K,IAAIysE,EAAch5E,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YAEjF,IAAK,IAAItd,EAAY,EAAGA,GAAK,GAAIA,IAAK,CACrC,IAAIw1B,EAAcrgC,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBhlE,eAAe7V,GAC1H7K,KAAK2+F,SAAS9zF,GAAKw1B,EACnBrgC,KAAK4+F,iBAAiB/zF,GAAKw1B,EAC3BrgC,KAAKk/F,GAAQj7F,YAAY8hB,EAAImN,KAAK,CAAEC,KAAM2sE,EAAKlpF,EAAI/L,EAAI7K,KAAK+yB,EAAe,GAAKlc,GAAIwpB,EAAM,KAAOrgC,KAAKgzB,EAAgB,IAAKI,MAAOpzB,KAAK+yB,EAAe,GAAIM,OAAQrzB,KAAKgzB,EAAgB,KACvL,CAGDhzB,KAAKq/F,KAELr/F,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKk1B,GAClDrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKg2B,IAE1Ch2B,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAK21B,GACnD31B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+1B,IAClD/1B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKg2B,IACjDh2B,KAAKg0B,UAAU9vB,iBAAiB,cAAelE,KAAKg2B,IAEpDh2B,KAAK+zB,EAAK7vB,iBAAiB,UAAWlE,KAAKo9F,IAC3Cp9F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,G,CAkHzC,EAAAtnE,GACP,GAAI91B,KAAKm0B,EAAY,CACpB,MAAMrvB,EAAgBqG,KAAKoC,IAAI,GAAIpC,KAAK2L,IAAI,EAAG3L,KAAK0hB,MAAqB,GAAf7sB,KAAKk0B,EAAel0B,KAAK+yB,KAC7EgtE,EAAc50F,KAAKoC,IAAI,GAAIpC,KAAK2L,IAAI,EAAG3L,KAAK0hB,MAAqB,GAAf7sB,KAAKw+F,GAAex+F,KAAKgzB,KAGjF,IAAwB,GAApBhzB,KAAKy+F,IAAoBz+F,KAAKy+F,IAAc35F,EAAO,CACtD,IAAIk7F,EAASl7F,EACTm7F,EAAUjgG,KAAKy+F,GACfyB,EAAcH,EACdI,EAAYngG,KAAK0+F,GACjB1+F,KAAKy+F,GAAa35F,IACrBk7F,EAAShgG,KAAKy+F,GACdwB,EAAUn7F,EACVo7F,EAAclgG,KAAK0+F,GACnByB,EAAYJ,GAEb,IAAK,IAAIl1F,EAAIm1F,EAAQn1F,GAAKo1F,EAASp1F,IAAK,CACvC,MAAMu1F,EAAiBj1F,KAAKe,MAAMg0F,GAA4Cr1F,EAAIm1F,IAAWC,EAAUD,IAAtDG,EAAYD,IAC7DlgG,KAAK2+F,SAAS9zF,GAAKu1F,EAAS,GAC5BpgG,KAAKk/F,GAAQmB,SAASx1F,GAAGia,aAAa,IAAK,GAAMs7E,GAAUpgG,KAAKgzB,EAAgB,IAEhF,CACD,MAEAhzB,KAAK2+F,SAAS75F,GAASi7F,EAAM,GAC7B//F,KAAKk/F,GAAQmB,SAASv7F,GAAOggB,aAAa,IAAK,GAAMi7E,GAAO//F,KAAKgzB,EAAgB,KAMlF,IAAIwyD,GAAiBxlF,KAAK6yB,EAAM7yB,KAAK2+F,UAErC3+F,KAAKy+F,GAAa35F,EAClB9E,KAAK0+F,GAAWqB,CAEhB,C,CASK,MAAAnpE,GACN,IAAK,IAAI/rB,EAAI,EAAGA,EAAI,GAAIA,IACvB7K,KAAKk/F,GAAQmB,SAASx1F,GAAGia,aAAa,IAAK,IAAO9kB,KAAK2+F,SAAS9zF,GAAK,KAAO7K,KAAKgzB,EAAgB,I,QAKvFstE,GAuBZ,WAAAvgG,CAAoB8yB,EAA4B0tE,GAA5BvgG,KAAI6yB,EAAJA,EAA4B7yB,KAAWugG,GAAXA,EArBzCvgG,KAAgBwgG,iBAA2B,IAAIjC,GAAuBv+F,KAAK6yB,GAElE7yB,KAAAygG,GAAiCxE,GAAO,CAAE32E,MAAO,cAAerQ,KAAM,WAErEjV,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,cAAgB,QAEvFtlB,KAAAg0B,UAA4BzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACrF62E,GAAG,+BACH5pE,GAAI,CAAEjN,MAAO,qHACZtlB,KAAKygG,IAENluE,GAAI,CAAEjN,MAAO,qFACZtlB,KAAKwgG,iBAAiBxsE,WAEvBzB,GAAI,CAAEjN,MAAO,+EACZtlB,KAAK68F,IAEN78F,KAAK48F,IAiBE58F,KAAW0gG,GAAG,KACrB1gG,KAAKugG,GAAYI,aACjB3gG,KAAK4gG,kBAAkB,EAiBhB5gG,KAAM88F,GAAG,KAChB98F,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKsuD,MAAM,EAGVnhF,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAK6gG,gBAEnD7gG,KAAKygG,GAAYzD,oBAAoB,QAASh9F,KAAK0gG,GAAY,EAGzD1gG,KAAA6gG,eAAkB18F,IACe,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,QACxDr9F,KAAKi9F,KAEoB,IAAjB94F,EAAMk5F,SACdr9F,KAAK0gG,KACLv8F,EAAMgxB,kBAEmB,IAAjBhxB,EAAMk5F,SACdr9F,KAAKwgG,iBAAiBrf,OACtBh9E,EAAMo7F,mBAEmB,IAAjBp7F,EAAMk5F,SACdr9F,KAAKwgG,iBAAiBlf,OACtBn9E,EAAMo7F,mBAEmB,KAAjBp7F,EAAMk5F,QACdr9F,KAAK6yB,EAAK6B,MAAMm4C,cAES,KAAjB1oE,EAAMk5F,SACdr9F,KAAK6yB,EAAK6B,MAAMk4C,aAChB,EAGM5sE,KAAYi9F,GAAG,KACtBj9F,KAAK6yB,EAAK0qE,OAAS,KAEnB,IAAI/X,GAAiBxlF,KAAK6yB,EAAM7yB,KAAKwgG,iBAAiB5B,kBACtD5+F,KAAK6yB,EAAKi/D,OAAO,IAAItM,GAAiBxlF,KAAK6yB,EAAM7yB,KAAKwgG,iBAAiB7B,WAAW,EAAK,EAxEvF3+F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAK6gG,gBAChD7gG,KAAKygG,GAAYv8F,iBAAiB,QAASlE,KAAK0gG,IAChD1gG,KAAK4gG,mBAEL77C,YAAW,IAAM/kD,KAAKygG,GAAY/C,UAGlC19F,KAAKwgG,iBAAiB5pE,Q,CAQhB,gBAAAgqE,GACF5gG,KAAK6yB,EAAK6B,MAAMyxC,SACnBnmE,KAAKygG,GAAYhuE,UAAUyI,OAAO,cAClCl7B,KAAKygG,GAAYhuE,UAAUC,IAAI,eAC/B1yB,KAAKygG,GAAY/lD,MAAQ,gBACzB16C,KAAKygG,GAAYK,UAAY,UAE7B9gG,KAAKygG,GAAYhuE,UAAUyI,OAAO,eAClCl7B,KAAKygG,GAAYhuE,UAAUC,IAAI,cAC/B1yB,KAAKygG,GAAY/lD,MAAQ,eACzB16C,KAAKygG,GAAYK,UAAY,O,QC9RnBC,GAqDT,WAAAhhG,CAAoB8yB,EAAoBy7D,GAAyB,EAAO0S,GAAkB,GAItF,GAJgBhhG,KAAI6yB,EAAJA,EApDZ7yB,KAAY+yB,EAAW,IACvB/yB,KAAagzB,EAAW,GACfhzB,KAAAihG,GAAgCl7E,EAAI6N,KAAK,CAAET,KAAMrM,GAAYuJ,mBAAoB,iBAAkB,SAE5GrwB,KAAWkhG,GAAqB,GAChClhG,KAAW2uF,GAAqB,GACvB3uF,KAAAmhG,GAAoCp7E,EAAI6N,KAAK,CAAET,KAAM,eAAgB,iBAAkB,SACvFnzB,KAAeohG,GAAmBr7E,EAAI6N,KAAK,CAAET,KAAM,OAAQO,OAAQ,eAAgB,eAAgB,EAAG,mBAAoB,OAAQ,iBAAkB,SACpJ1zB,KAAUqhG,GAAqBt7E,EAAIu7E,OAAO,CAAEnuE,KAAM,QAASO,OAAQ,OAAQ,iBAAkB,OAAQ6tE,EAAG,IACxGvhG,KAAI+zB,EAAkBhO,EAAIwN,IAAI,CAAEjO,MAAO,qBAAqBwB,GAAY6I,wCAAyCyD,MAAO,OAAQC,OAAQ,OAAQ8rE,QAAS,OAASn/F,KAAK+yB,EAAe,IAAM/yB,KAAKgzB,EAAeosE,oBAAqB,QAClPp/F,KAAKihG,GAELjhG,KAAKohG,GACLphG,KAAKqhG,GACLrhG,KAAKmhG,IAEDnhG,KAAgBwhG,iBAAa,GAC7BxhG,KAAkByhG,mBAAW,EACpBzhG,KAAM0hG,GAAmBh8E,EAAK6M,IAAI,CAAEjN,MAAO,oGAErDtlB,KAAS2hG,UAAuB,KACvB3hG,KAASg0B,UAAgBtO,EAAK6M,IAAI,CAAE0B,MAAO,eAAgB3O,MAAO,qCAC9EtlB,KAAK+zB,EACL/zB,KAAK0hG,IAED1hG,KAAY4hG,GAAW,EAEvB5hG,KAAc0uF,IAAY,EAC1B1uF,KAAO6hG,IAAY,EACnB7hG,KAAU8hG,IAAY,EACtB9hG,KAAOk0B,EAAW,EAClBl0B,KAAOw+F,GAAW,EAClBx+F,KAAUo0B,GAAY,EACtBp0B,KAAUm0B,GAAY,EACtBn0B,KAAc+hG,IAAY,EAC1B/hG,KAAYgiG,IAAY,EACxBhiG,KAAciiG,IAAY,EAC1BjiG,KAAAkiG,GAAyC,EACzCliG,KAAcmiG,GAAW,EACzBniG,KAAUoiG,GAAW,EACrBpiG,KAAUqiG,GAAW,EACrBriG,KAAWsiG,GAA0B,KACrCtiG,KAAeuiG,GAAW,EAG1BviG,KAAsBwiG,IAAY,EAClCxiG,KAAmByiG,IAAY,EAC/BziG,KAAmB0iG,IAAY,EAC/B1iG,KAAmB2iG,IAAY,EAC/B3iG,KAAmB4iG,IAAY,EAkE/B5iG,KAAAo9F,GAAmBj5F,IACF,IAAjBA,EAAMk5F,UACNr9F,KAAKmhF,OACLh9E,EAAMo7F,mBAEW,IAAjBp7F,EAAMk5F,UACNr9F,KAAKshF,OACLn9E,EAAMo7F,kBACT,EAgBGv/F,KAAA+0B,EAAkB5wB,IACtBnE,KAAKo0B,GAAa,EAEbp0B,KAAK6hG,IACN7hG,KAAKmhG,GAAkB77E,MAAMC,YAAY,OAAQ,eAAe,EAGhEvlB,KAAAi1B,EAAiB9wB,IACrBnE,KAAKo0B,GAAa,EAClBp0B,KAAK6iG,KAEiB,MAAlB7iG,KAAK2hG,YACL3hG,KAAK2hG,UAAUb,UAAY,GAC9B,EAGG9gG,KAAAk1B,EAAqB/wB,IACzBA,EAAMgxB,iBACNn1B,KAAK8hG,IAAa,EAClB,MAAM1sE,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK8iG,IAAoB,EAGrB9iG,KAAA21B,EAAqBxxB,IACzBA,EAAMgxB,iBACNn1B,KAAK8hG,IAAa,EAClB,MAAM1sE,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK8iG,IAAoB,EAGrB9iG,KAAA61B,EAAmB1xB,IACvB,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,MAAMzqE,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACnCx+F,KAAKm0B,GAAYn0B,KAAK+iG,KAE3B/iG,KAAK81B,IAAkB,EAGnB91B,KAAA+1B,GAAmB5xB,IACvB,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACrC7/F,KAAKm0B,GAAYhwB,EAAMgxB,iBAC3B,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACnCx+F,KAAKm0B,GAAYn0B,KAAK+iG,KAC3B/iG,KAAK81B,IAAkB,EA6GnB91B,KAAAg2B,GAAuB7xB,IAC3B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAnB,CACA,GAAI7/F,KAAKm0B,GAAcn0B,KAAK6yB,EAAKmwE,cAAchjG,KAAKsiG,KAAoC,MAApBtiG,KAAKsiG,GAAqB,CAC1F,GAAKtiG,KAAKgiG,IAAiBhiG,KAAK+hG,IAAmB/hG,KAAK8hG,GAQ5C9hG,KAAK6hG,IACb7hG,KAAK6yB,EAAKi/D,OAAO9xF,KAAKsiG,SARtB,GAAItiG,KAAKmiG,GAAiBniG,KAAKytF,GAAgBziD,oBAA6C,GAAxBhrC,KAAKmiG,GAAsB,CAC3F,MAAMn6D,EAA4BhoC,KAAKytF,GAAgB1iD,cAAc/qC,KAAKmiG,IAC1E,IAAIzgB,EAA+B,IAAIsL,GAAqBhtF,KAAK6yB,EAAM7yB,KAAKytF,GAAiBzlD,EAAOhoC,KAAKmiG,GAAgBniG,KAAK0uF,IAAgB,GACzI1uF,KAAK6hG,IACN7hG,KAAK6yB,EAAKi/D,OAAOpQ,EAExB,CAIL1hF,KAAK6iG,KACD7iG,KAAK6hG,KACL7hG,KAAKwhG,iBAAiB3+F,OAAS7C,KAAKyhG,mBAAmB,EACvDzhG,KAAKwhG,iBAAiBz2F,KAAKgzC,KAAKklD,UAAUjjG,KAAKytF,GAAgBroD,iBAC/DplC,KAAKyhG,qBAEZ,CACDzhG,KAAKsiG,GAAc,KACnBtiG,KAAK+hG,IAAiB,EACtB/hG,KAAKiiG,IAAiB,EACtBjiG,KAAKm0B,GAAa,EAClBn0B,KAAK+iG,IAxBoC,CAwBrB,EAvRpB/iG,KAAK0uF,GAAiBJ,EACtBtuF,KAAK6hG,GAAUb,EAEXhhG,KAAK6hG,GAAS,CACd7hG,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAChDp9F,KAAK+yB,EAAe,KACpB/yB,KAAKgzB,EAAgB,IACrBhzB,KAAK4hG,GAAe,GAEpB5hG,KAAK+zB,EAAKjP,aAAa,UAAW,SAAW9kB,KAAK+yB,EAAe,KAAO/yB,KAAKgzB,EAAgB,KAC7FhzB,KAAK0hG,GAAOp8E,MAAMC,YAAY,YAAa,QAC3CvlB,KAAK0hG,GAAOp8E,MAAMC,YAAY,WAAY,IAC1CvlB,KAAK0hG,GAAOp8E,MAAMC,YAAY,SAAU,SACxCvlB,KAAK0hG,GAAOp8E,MAAMC,YAAY,aAAc,OAC5CvlB,KAAKohG,GAAgB97E,MAAMC,YAAY,eAAgB,KACvDvlB,KAAKohG,GAAgB97E,MAAMC,YAAY,mBAAoB,QAC3DvlB,KAAKohG,GAAgBt8E,aAAa,QAASgC,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,aAC1GnoB,KAAKg0B,UAAU1O,MAAMC,YAAY,QAAS,OAC1CvlB,KAAKqhG,GAAWv8E,aAAa,IAAK,MAClC9kB,KAAKmhG,GAAkBr8E,aAAa,OAAQgC,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,aAE3G,IAAK,IAAItd,EAAY,EAAGA,EAAIvJ,EAAO2S,gBAAiBpJ,IAChD7K,KAAKkhG,GAAYr2F,GAAKkb,EAAI2rE,OAC1B1xF,KAAKkhG,GAAYr2F,GAAGia,aAAa,OAAQgC,GAAYkJ,cACrDhwB,KAAKkhG,GAAYr2F,GAAGia,aAAa,cAAe,SAChD9kB,KAAKkhG,GAAYr2F,GAAGia,aAAa,oBAAqB,WACtD9kB,KAAKkhG,GAAYr2F,GAAGia,aAAa,iBAAkB,QACnD9kB,KAAKkhG,GAAYr2F,GAAGia,aAAa,cAAe,UAChD9kB,KAAKkhG,GAAYr2F,GAAG4iB,YAAc,IAAM5iB,EAAI,GAC5C7K,KAAKkhG,GAAYr2F,GAAGya,MAAMC,YAAY,UAAW,QACjDvlB,KAAKkhG,GAAYr2F,GAAGya,MAAMC,YAAY,YAAa,QACnDvlB,KAAK+zB,EAAK9vB,YAAYjE,KAAKkhG,GAAYr2F,IAI3C,MAAM+T,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1FryB,EAAiCrzD,KAAK0uF,GAAiB9vE,EAAWgC,WAAahC,EAAWW,SAChGvf,KAAKwhG,iBAAiBz2F,KAAKgzC,KAAKklD,UAAU5vC,EAAejuB,iBAEzDplC,KAAK2uF,GAAY,GAAKt7B,EACtB,IAAK,IAAIxoD,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IAAK,CACtD,MAAMq4F,EAAmCljG,KAAK0uF,GAAiB9vE,EAAWqvB,eAAepjC,GAAK+T,EAAWovB,aAAanjC,GACtH,GAAiB,MAAbq4F,EAAmB,CACnB,IAAIC,EAA+B,IAAIr4D,GACvCq4D,EAAa98D,eAAe68D,EAAU99D,gBACtCplC,KAAK2uF,GAAY9jF,GAAKs4F,CACzB,CACJ,CACJ,CAEDnjG,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKk1B,GAClDl1B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+0B,GAClD/0B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKi1B,GACjDpxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKg2B,IAE1Ch2B,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAK21B,GACnD31B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+1B,IAClD/1B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKg2B,IACjDh2B,KAAKg0B,UAAU9vB,iBAAiB,cAAelE,KAAKg2B,G,CAchD,EAAAotE,CAASxsF,GACb,OAAOtV,EAAOmS,gBAAkBmD,EAAI5W,KAAK+yB,EAAe,E,CAEpD,EAAAswE,CAAS/5D,GACb,OAAOtpC,KAAK+yB,GAAgBuW,EAAO,IAAOhoC,EAAOmS,e,CAE7C,EAAA6vF,CAASzsF,GACb,OAAQvV,EAAOwS,gBAAkB,IAAM,GAAK+C,EAAI,KAAO7W,KAAKgzB,EAAgB,G,CAExE,EAAAuwE,CAASh6D,GACb,OAAQvpC,KAAKgzB,EAAgB,IAAM,EAAIuW,GAAQjoC,EAAOwS,gBAAkB,IAAM,E,CAiE1E,EAAAgvF,GACJ9iG,KAAKm0B,GAAa,EAClB,MAAMozB,EAA2B,IAAIo6B,GACrC3hF,KAAKsiG,GAAc/6C,EACnBvnD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,IACpCtiG,KAAK+iG,KACL/iG,KAAK81B,I,CAGD,EAAAitE,GACJ/iG,KAAKoiG,GAAapiG,KAAKojG,GAASpjG,KAAKk0B,GACrCl0B,KAAKqiG,GAAariG,KAAKsjG,GAAStjG,KAAKw+F,IAErCx+F,KAAKgiG,IAAe,EACpBhiG,KAAKmiG,IAAkB,EACvB,IAAIsB,EAA0B97E,OAAOqtD,kBACrC,IAAK,IAAInqE,EAAY,EAAGA,EAAI7K,KAAKytF,GAAgBziD,kBAAmBngC,IAAK,CACrE,MAAMm9B,EAA4BhoC,KAAKytF,GAAgB1iD,cAAclgC,GAC/D64F,EAAmBv4F,KAAKc,KAAKd,KAAKiB,IAAIpM,KAAKqjG,GAASr7D,EAAMsB,MAAQtpC,KAAKk0B,EAAS,GAAK/oB,KAAKiB,IAAIpM,KAAKujG,GAASv7D,EAAMuB,MAAQvpC,KAAKw+F,GAAS,KACzIkF,GAAY,KAAW1jG,KAAK6hG,GAAV,IAAsB7hG,KAAKytF,GAAgBziD,mBAAqB1pC,EAAO2S,kBAAoByvF,EAAWD,IACzHA,EAAkBC,EAClB1jG,KAAKmiG,GAAiBt3F,EACtB7K,KAAKgiG,IAAe,EAE3B,CACD,GAAIhiG,KAAKgiG,GAAc,CACnB,MAAMhf,EAAgBhjF,KAAKk0B,EAAUl0B,KAAK+yB,EAEtC/yB,KAAKkiG,GADLlf,EAAQ,GACO,EACRA,EAAQ,GACA,EAEA,CAEtB,C,CAGG,EAAAltD,GASJ,GARwB,MAApB91B,KAAKsiG,IAAuBtiG,KAAK6yB,EAAKmwE,cAAchjG,KAAKsiG,IACzDtiG,KAAKsiG,GAAYnhB,OAEjBnhF,KAAKm0B,GAAa,EAEtBn0B,KAAKsiG,GAAc,KACnBtiG,KAAKiiG,IAAiB,EAEA,MAAlBjiG,KAAK2hG,YAAsB3hG,KAAKm0B,EAAY,CAC5C,IAAIoV,EAAep+B,KAAKe,MAAMlM,KAAKsjG,GAAStjG,KAAKw+F,KAC7Cl1D,EAAen+B,KAAKe,MAAMlM,KAAKojG,GAASpjG,KAAKk0B,IAC7CoV,GAAQ,GAAKA,EAAOhoC,EAAOmS,iBAAmB81B,GAAQ,GAAKA,EAAOjoC,EAAOwS,gBACzE9T,KAAK2hG,UAAUb,UAAY,IAAMx3D,EAAO,KAAOC,EAAO,IAEtDvpC,KAAK2hG,UAAUb,UAAY,EAClC,CAED,GAAI9gG,KAAKm0B,EAAY,CACjB,MAAMozB,EAA2B,IAAIo6B,GAIrC,GAHA3hF,KAAKsiG,GAAc/6C,EACnBvnD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,IAEhCtiG,KAAKgiG,GAAc,CACnB,MAAMz4D,EAAep+B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwS,gBAAkB,EAAG3I,KAAKe,MAAMlM,KAAKsjG,GAAStjG,KAAKw+F,OAC9Fl1D,EAAetpC,KAAK2jG,GAAqB3jG,KAAKytF,GAAiBztF,KAAKojG,GAASpjG,KAAKk0B,IAAW,GACnG,GAAIoV,GAAQ,GAAKA,EAAOhoC,EAAOmS,gBAAiB,CAC5C,MAAMu0B,EAA4B,IAAIqB,GACtCrB,EAAM/yB,KAAOjV,KAAKkiG,GAClBl6D,EAAMsB,KAAOA,EACbtB,EAAMuB,KAAOA,EACbge,EAASk6B,OAAO,IAAIuL,GAAqBhtF,KAAK6yB,EAAM7yB,KAAKytF,GAAiBzlD,EAAOhoC,KAAKytF,GAAgBziD,kBAAmBhrC,KAAK0uF,KAExG,MAAlB1uF,KAAK2hG,YACL3hG,KAAK2hG,UAAUb,UAAY,IAAMx3D,EAAO,KAAOC,EAAO,IAE7D,MACGvpC,KAAKiiG,IAAiB,CAE7B,MAAM,GAAIjiG,KAAKmiG,IAAkBniG,KAAKytF,GAAgBziD,oBAA6C,GAAxBhrC,KAAKmiG,GAC7EniG,KAAKsiG,GAAc,KACnBtiG,KAAKm0B,GAAa,MACf,CACH,MAAMyvE,EAAoB5jG,KAAKojG,GAASpjG,KAAKk0B,GAAWl0B,KAAKoiG,GACvDyB,EAAoB7jG,KAAKsjG,GAAStjG,KAAKw+F,IAAWx+F,KAAKqiG,GACvDr6D,EAA4BhoC,KAAKytF,GAAgB1iD,cAAc/qC,KAAKmiG,IACpE54D,EAAep+B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwS,gBAAkB,EAAG3I,KAAKe,MAAM87B,EAAMuB,KAAOs6D,KACxFv6D,EAAetpC,KAAK2jG,GAAqB3jG,KAAKytF,GAAiBzlD,EAAMsB,KAAOs6D,EAAW5jG,KAAKmiG,IAErE,GAAzBh3F,KAAKe,MAAM03F,IAA8C,GAAzBz4F,KAAKe,MAAM23F,IAAqBv6D,GAAQtB,EAAMsB,MAAQC,GAAQvB,EAAMuB,OACpGvpC,KAAK+hG,IAAiB,GAGtBz4D,GAAQ,GAAKA,EAAOhoC,EAAOmS,iBAC3B8zC,EAASk6B,OAAO,IAAIkM,GAAsB3tF,KAAK6yB,EAAMmV,EAAOA,EAAMsB,KAAMA,EAAMtB,EAAMuB,KAAMA,IACpE,MAAlBvpC,KAAK2hG,YACL3hG,KAAK2hG,UAAUb,UAAY,IAAMx3D,EAAO,KAAOC,EAAO,OAG1Dge,EAASk6B,OAAO,IAAIuL,GAAqBhtF,KAAK6yB,EAAM7yB,KAAKytF,GAAiBzlD,EAAOhoC,KAAKmiG,GAAgBniG,KAAK0uF,IAAgB,IAC3H1uF,KAAKiiG,IAAiB,EAE7B,CACJ,EACGjiG,KAAKm0B,GAAcn0B,KAAKo0B,IACxBp0B,KAAK6iG,I,CAgCL,EAAAc,CAAqBtwC,EAAgCywC,EAAoBC,GAC7E,MAAMC,EAAsB74F,KAAKe,MAAM43F,GACvC,IAAIG,EAAoBD,EACpBE,EAAoBF,EACpBG,EAAwBH,GAAeF,EAC3C,OAAa,CACT,IAAIM,GAAyB,EAC7B,MAAMC,EAAsBF,EAAcF,EAAYC,EACtD,IAAK,IAAIr5F,EAAY,EAAGA,EAAIwoD,EAAeroB,kBAAmBngC,IAC1D,GAAIA,GAAKk5F,GACL1wC,EAAetoB,cAAclgC,GAAGy+B,MAAQ+6D,EAAa,CACrDD,GAAgB,EAChB,KACH,CAEL,IAAKA,EAAe,OAAOC,EAC3BF,GAAeA,EACXA,GAAaF,IACZE,GAAaD,GACrB,C,CAGG,SAAOI,CAAYC,EAAYC,EAAYC,EAAgBC,GAAmB,GAClF,MAAO,KAAKH,EAAKE,KAAUD,OAClBC,KAAUA,SAAcC,EAAU,EAAI,KAAc,EAATD,SAC3CA,KAAUA,SAAcC,EAAU,EAAI,KAAe,GAATD,M,CAGjD,EAAA5B,GACJ7iG,KAAKqhG,GAAW/7E,MAAMq/E,QAAU,OAChC3kG,KAAK0hG,GAAOj0E,YAAc,GAE1B,IAAIm3E,EAA2B,GAC3BC,EAAyB,GAC7B,IAAK,IAAIh6F,EAAY,EAAGA,EAAI7K,KAAKytF,GAAgBziD,kBAAmBngC,IAAK,CACrE,MAAMm9B,EAA4BhoC,KAAKytF,GAAgB1iD,cAAclgC,GAC/Di6F,EAAiB9kG,KAAKqjG,GAASr7D,EAAMsB,MACrCy7D,EAAiB/kG,KAAKujG,GAASv7D,EAAMuB,MAE3Cq7D,GAAoB7D,GAAauD,GAAYQ,EAAQC,EAAQ/kG,KAAK4hG,IAEpD,GAAV55D,EAAM/yB,KACN4vF,GAAkB,OAAiBE,EAAS,MAAQD,EAAS,IAAMC,EAAS,IAC3D,GAAV/8D,EAAM/yB,OACb4vF,GAAkB,KAAO7kG,KAAK+yB,EAAe,IAAMgyE,EAAS,MAAQD,EAAS,IAAMC,EAAS,KAG5F/kG,KAAKmiG,IAAkBt3F,GAAK7K,KAAKo0B,IAAep0B,KAAKm0B,IACrDn0B,KAAKqhG,GAAWv8E,aAAa,KAAMoS,OAAO4tE,IAC1C9kG,KAAKqhG,GAAWv8E,aAAa,KAAMoS,OAAO6tE,IAC1C/kG,KAAKqhG,GAAW/7E,MAAMq/E,QAAU,GAEV,MAAlB3kG,KAAK2hG,YACL3hG,KAAK2hG,UAAUb,UAAY,IAAM94D,EAAMsB,KAAO,KAAOtB,EAAMuB,KAAO,OAGrEvpC,KAAKmiG,IAAkBt3F,GAAM7K,KAAKgiG,IAAgBhiG,KAAKm0B,GAActpB,GAAK7K,KAAKytF,GAAgBziD,kBAAoB,KAAQhrC,KAAKo0B,GAAcp0B,KAAKm0B,KAAgBn0B,KAAKiiG,KACzKjiG,KAAK0hG,GAAOj0E,YAAe5iB,EAAI,EAAK,KAAOvJ,EAAO4S,gBAAgB8zB,EAAM/yB,OAASjV,KAAK6hG,GAAU,KAAOpkF,EAAauqB,EAAM0B,SAAW,KAAO,KAG5I1pC,KAAK6hG,KACL7hG,KAAKkhG,GAAYr2F,GAAGya,MAAMC,YAAY,UAAW,IACjDvlB,KAAKkhG,GAAYr2F,GAAGia,aAAa,IAAK,IAAMggF,EAAS,IACrD9kG,KAAKkhG,GAAYr2F,GAAGia,aAAa,IAAK,IAAMigF,EAAS,IAE5D,CAQD,GAPA/kG,KAAKmhG,GAAkBr8E,aAAa,IAAK8/E,GACzC5kG,KAAKohG,GAAgBt8E,aAAa,IAAK+/E,GACnC7kG,KAAKgiG,KAAiBhiG,KAAKm0B,GAAcn0B,KAAKo0B,IAC9Cp0B,KAAK0hG,GAAOj0E,YAAc,KAAOnsB,EAAO4S,gBAAgBlU,KAAKkiG,KAI7DliG,KAAK6hG,GACL,IAAK,IAAIh3F,EAAY7K,KAAKytF,GAAgBziD,kBAAmBngC,EAAIvJ,EAAO2S,gBAAiBpJ,IACrF7K,KAAKkhG,GAAYr2F,GAAGya,MAAMC,YAAY,UAAW,QAKzD,MACMy2D,EAAgC,GACtC,IAAK,IAAInxE,EAAY,EAAGA,EAAI7K,KAAKytF,GAAgBziD,kBAAmBngC,IAAK,CACrE,MAAMm9B,EAA4BhoC,KAAKytF,GAAgB1iD,cAAclgC,GAC/DuzB,EAA6B,IAAIhC,GACvC4L,EAAMqC,eAAejM,EALU,OAM/B49C,EAAQjxE,KAAKqzB,EAEhB,CAED,MAAMt8B,EAA8B,IAAIi8B,GACxC,IAAIinE,EAAuB,OAAShlG,KAAKgzB,EAAgB,IACzD,IAAK,IAAInoB,GAAa,EAAGA,GAAKvJ,EAAOmS,gBAAiB5I,IAAK,CACvD,MAAMg/B,EAAaR,GAAmBM,sBAAsB9+B,GACtD6xB,EAAiC,EAAMvxB,KAAK2C,GAAK+7B,EAdxB,MAezB7L,EAAe7yB,KAAK4C,IAAI2uB,GACxBuB,EAAe9yB,KAAK6C,IAAI0uB,GAE9B,IAAI7c,EAAqB,EACzB,IAAK,MAAMue,KAAU49C,EACjBl6E,EAASw8B,eAAeF,EAAQJ,EAAMC,GACtCpe,GAAc/d,EAASk9B,YAG3B,MAAMyK,EAAsBt+B,KAAKwC,KAAKkS,GAAcve,EAAO0S,eAAiB1S,EAAOyS,iBAC7E8C,EAAY7W,KAAKujG,GAAS95D,GAEhCu7D,GAAgB,KAAOvnF,EADLzd,KAAKqjG,GAASx4F,IACS,IAAM4S,EAAa5G,GAAK,GACpE,CAEDmuF,GAAgB,KAAOhlG,KAAK+yB,EAAe,IAAM/yB,KAAKgzB,EAAgB,QAAUhzB,KAAKgzB,EAAgB,MACrGhzB,KAAKihG,GAAcn8E,aAAa,IAAKkgF,E,CAIlC,cAAAC,CAAe3lF,EAA0B4lF,GAAsB,GAClE,MAAMtmF,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAChG,IAAI0I,GAAqBpuF,KAAK6yB,EAAMvT,EAAUtf,KAAKytF,GAAiBztF,KAAK0uF,GAAgB1uF,KAAK2uF,GAAa3uF,KAAK0uF,GAAiB9vE,EAAWqvB,eAAiBrvB,EAAWovB,cACxKhuC,KAAKytF,GAAkBnuE,EACvBtf,KAAK2uF,GAAY3uF,KAAKuiG,IAAmBjjF,EACrC4lF,GAAcllG,KAAK6hG,KACnB7hG,KAAKwhG,iBAAiB3+F,OAAS7C,KAAKyhG,mBAAqB,EACzDzhG,KAAKwhG,iBAAiBz2F,KAAKgzC,KAAKklD,UAAWjjG,KAAKytF,GAAgBroD,iBAChEplC,KAAKyhG,sBAETzhG,KAAK6iG,I,CAIF,YAAAsC,GACH,IAAIC,EAA8B,IAAIt6D,GACtC,MAAMlsB,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAChG0f,EAAY/+D,eAAe0X,KAAKC,MAAM9mB,OAAOl3B,KAAKwhG,iBAAiB,MACnExhG,KAAK6yB,EAAKi/D,OAAO,IAAI1D,GAAqBpuF,KAAK6yB,EAAM7yB,KAAK2uF,GAAY,GAAIyW,EAAaplG,KAAK0uF,GAAgB1uF,KAAK2uF,GAAa3uF,KAAK0uF,GAAiB9vE,EAAWqvB,eAAiBrvB,EAAWovB,eAAe,E,CAKvM,IAAAmzC,GACH,GAAInhF,KAAKyhG,mBAAqB,EAAG,CAG7B,GAFAzhG,KAAKyhG,qBAEqD,MAAtDzhG,KAAKwhG,iBAAiBxhG,KAAKyhG,mBAAqB,IAAczhG,KAAKwhG,iBAAiBxhG,KAAKyhG,mBAAqB,GAAG7P,WAAW,OAAQ,CACpI,IAAI3rB,EAAcjmE,KAAKwhG,iBAAiBxhG,KAAKyhG,mBAAqB,GAC9D4D,GAAap/B,EAAIhoB,UAAU,EAAGgoB,EAAIhqC,QAAQ,MAE9C,OADAj8B,KAAKslG,gBAAgBtlG,KAAKuiG,GAAiB8C,GACpCA,CAEV,CAAM,GAAIrlG,KAAKwhG,iBAAiBxhG,KAAKyhG,oBAAoB7P,WAAW,OAAQ,CACzE,IAAI2T,EAA8B,IAAIz6D,GAClCm7B,EAAcjmE,KAAKwhG,iBAAiBxhG,KAAKyhG,oBAC7C8D,EAAYl/D,eAAe0X,KAAKC,MAAMioB,EAAIhoB,UAAUgoB,EAAIhqC,QAAQ,KAAO,KACvEj8B,KAAKilG,eAAeM,GAAa,EACpC,KAAM,CACH,IAAIA,EAA8B,IAAIz6D,GACtCy6D,EAAYl/D,eAAe0X,KAAKC,MAAM9mB,OAAOl3B,KAAKwhG,iBAAiBxhG,KAAKyhG,uBACxEzhG,KAAKilG,eAAeM,GAAa,EACpC,CACJ,CACD,OAAQ,C,CAIL,IAAAjkB,GACH,GAAIthF,KAAKyhG,mBAAqBzhG,KAAKwhG,iBAAiB3+F,OAAO,EAAG,CAG1D,GAFA7C,KAAKyhG,qBAEDzhG,KAAKwhG,iBAAiBxhG,KAAKyhG,oBAAoB7P,WAAW,OAAQ,CAClE,IAAI3rB,EAAcjmE,KAAKwhG,iBAAiBxhG,KAAKyhG,oBACzC4D,GAAap/B,EAAIhoB,UAAUgoB,EAAIhqC,QAAQ,KAAO,EAAGgqC,EAAIhqC,QAAQ,MAEjE,OADAj8B,KAAKslG,gBAAgBtlG,KAAKuiG,GAAiB8C,GAAW,GAC/CA,CACV,CAAM,CACH,IAAIE,EAA8B,IAAIz6D,GACtCy6D,EAAYl/D,eAAe0X,KAAKC,MAAM9mB,OAAOl3B,KAAKwhG,iBAAiBxhG,KAAKyhG,uBACxEzhG,KAAKilG,eAAeM,GAAa,EACpC,CACJ,CACD,OAAQ,C,CAIL,cAAAC,GACHxlG,KAAKyhG,mBAAqB,EAC1BzhG,KAAKmhF,M,CAGF,oBAAAskB,CAAqBC,GACxB,IAA4B,GAAxB1lG,KAAKmiG,GACL,OAEJ,GAAIuD,GAAY1lG,KAAKytF,GAAgBziD,kBACjC,OAEJ,IAAI26D,EAA0B3lG,KAAKytF,GAAgB1iD,cAAc/qC,KAAKmiG,IACtEniG,KAAKytF,GAAgB1iD,cAAc/qC,KAAKmiG,IAAkBniG,KAAKytF,GAAgB1iD,cAAc26D,GAC7F1lG,KAAKytF,GAAgB1iD,cAAc26D,GAAYC,EAE/C3lG,KAAK42B,Q,CAGF,eAAA0uE,CAAgBvJ,EAAkB2J,EAAkBR,GAAsB,GAC7E,GAAInJ,GAAY2J,EAAU,CAEtB,IAAIE,EAA6B,IAAI96D,GAKrC,GAJA86D,EAAWv/D,eAAermC,KAAKytF,GAAgBroD,gBAC/CplC,KAAK2uF,GAAYoN,GAAY6J,EAGKp4E,MAA9BxtB,KAAK2uF,GAAY+W,GAAwB,CACzC,IAAIvC,EAA+B,IAAIr4D,GACvCq4D,EAAa98D,eAAermC,KAAK2uF,GAAY,GAAGvpD,gBAChDplC,KAAK2uF,GAAY+W,GAAYvC,CAChC,CAGG+B,IACAllG,KAAKwhG,iBAAiB3+F,OAAS7C,KAAKyhG,mBAAqB,EAEzDzhG,KAAKwhG,iBAAiBz2F,KAAK,MAAQgxF,EAAW,IAAM2J,EAAW,IAAM3nD,KAAKklD,UAAUjjG,KAAK2uF,GAAY+W,GAAUtgE,iBAC/GplC,KAAKyhG,sBAGTzhG,KAAKuiG,GAAkBmD,EAEvB1lG,KAAKilG,eAAejlG,KAAK2uF,GAAY+W,IAAW,EACnD,C,CAIE,MAAA9uE,CAAOivE,GAAsB,GAChC,MAAMjnF,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1FryB,EAAiCrzD,KAAK0uF,GAAiB9vE,EAAWgC,WAAahC,EAAWW,SAChG,IAAIumF,EAAwBD,IAAe7lG,KAAK6hG,KAAY7hG,KAAKo0B,IAAep0B,KAAK+hG,KAAmB/hG,KAAKm0B,GAAcn0B,KAAK6yB,EAAK6B,MAAMyxC,QACvI2/B,EACA9lG,KAAKmhG,GAAkB77E,MAAMC,YAAY,OAAQ,GAAGuB,GAAY2K,wBAC1DzxB,KAAK6hG,IACX7hG,KAAKmhG,GAAkB77E,MAAMC,YAAY,OAAQ,gBAEjDvlB,KAAKytF,IAAmBp6B,IACxBrzD,KAAKsiG,GAAc,KACnBtiG,KAAKm0B,GAAa,GAEtBn0B,KAAKytF,GAAkBp6B,EACvB,IAAI0yC,EAAiC1yC,EAChCrzD,KAAKm0B,GAAYn0B,KAAK+iG,KAGvB+C,IAEAC,EAAkB/lG,KAAmB,GAAI4e,EAAW00C,mBAAsB10C,EAAWkhD,iBAC/D,MAAlBimC,IAAwBA,EAAkB/lG,KAAmB,GAAI4e,EAAWgC,WAAahC,EAAWW,UACxGvf,KAAKytF,GAAkBsY,GAG3B,IAAIC,EAAqB,EACrBC,EAAqB,EACrBC,EAAqB,EACzB,IAAK,IAAIr7F,EAAY,EAAGA,EAAIk7F,EAAe/6D,kBAAmBngC,IAAK,CAC/D,MAAMm9B,EAA4B+9D,EAAeh7D,cAAclgC,GAC/Dm7F,EAAuB,EAAVA,EAAiCh+D,EAAM/yB,KACpDgxF,EAAaA,EAAa3kG,EAAOmS,gBAAkBu0B,EAAMsB,KACzD48D,EAAaA,EAAa5kG,EAAOwS,gBAAkBk0B,EAAMuB,IAC5D,CACGvpC,KAAKwiG,IAA0BxiG,KAAKmiG,IACpCniG,KAAKyiG,IAAuBsD,EAAe/6D,mBAC3ChrC,KAAK0iG,IAAuBsD,GAC5BhmG,KAAK2iG,IAAuBsD,GAC5BjmG,KAAK4iG,IAAuBsD,IAC5BlmG,KAAKwiG,GAAyBxiG,KAAKmiG,GACnCniG,KAAKyiG,GAAsBsD,EAAe/6D,kBAC1ChrC,KAAK0iG,GAAsBsD,EAC3BhmG,KAAK2iG,GAAsBsD,EAC3BjmG,KAAK4iG,GAAsBsD,EAC3BlmG,KAAK6iG,MAILiD,IACA9lG,KAAKytF,GAAkBp6B,E,ECvmBnC,MAAM4oC,OAAEA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,GAAEgK,EAAEA,IAAMzgF,E,MAElB0gF,GAuDZ,WAAArmG,CAAoB8yB,EAA4B0tE,EAAiC7R,GAA7D1uF,KAAI6yB,EAAJA,EAA4B7yB,KAAWugG,GAAXA,EAAiCvgG,KAAc0uF,GAAdA,EAnD1E1uF,KAAUqmG,WAAmB,IAAIv7D,GACjC9qC,KAAkBsmG,mBAAmB,IAAIx7D,GAExC9qC,KAAeuiG,GAAG,EAEVviG,KAAAygG,GAAiCxE,GAAO,CAAE32E,MAAO,cAAerQ,KAAM,WAEtEjV,KAAcumG,GAAwB,GAEtCvmG,KAAAwmG,GAAyCj0E,GAAI,CAAC0B,MAAO,iBAAkB3O,MAAO,6BAE7EtlB,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,cAAgB,QAEtFtlB,KAAgBymG,GAAmBl0E,GAAI,CAAEjN,MAAO,mGAEhDtlB,KAAY0mG,GAAmBn0E,GAAI,GAAI4pE,GAAG,gBAE1Cn8F,KAAA2mG,GAAuC1K,GAAO,CAAE32E,MAAO,iCAAkC2O,MAAO,cAAgB,CAChI,OAEAlO,EAAIwN,IAAI,CAAEjO,MAAO,iGAAkG8N,MAAO,MAAOC,OAAQ,MAAO8rE,QAAS,gBAAkB,CAC1Kp5E,EAAI6N,KAAK,CAAEgzE,EAAG,mJAAoJzzE,KAAM,qBAGzJnzB,KAAA6mG,GAAwC5K,GAAO,CAAE32E,MAAO,cAAe2O,MAAO,eAAiB,CAC/G,QAEAlO,EAAIwN,IAAI,CAAEjO,MAAO,iGAAkG8N,MAAO,MAAOC,OAAQ,MAAO8rE,QAAS,aAAe,CACvKp5E,EAAI6N,KAAK,CAAEgzE,EAAG,0EAA2ElzE,OAAQ,eAAgBP,KAAM,SACvHpN,EAAI6N,KAAK,CAAEgzE,EAAG,oEAAqEzzE,KAAM,qBAG1EnzB,KAAA8mG,GAA4Cv0E,GAAI,CAAEjN,MAAO,iBAAmBtlB,KAAK2mG,GAAmB3mG,KAAK6mG,IAEzG7mG,KAAqB+mG,GAAmBx0E,GAAI,CAAEjN,MAAO,mFAAqFwB,GAAYiJ,cAAgB,KAAMo2E,GAAE,KAE/KnmG,KAASg0B,UAAmBzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACrFtlB,KAAK0mG,GACLn0E,GAAI,CAAEjN,MAAO,qHACZtlB,KAAKygG,IAENzgG,KAAKwmG,GACLxmG,KAAKymG,GACLl0E,GAAI,CAAEjN,MAAO,+EACZtlB,KAAK68F,GACL78F,KAAK8mG,IAEN9mG,KAAK48F,IAiDE58F,KAAagnG,GAAG,CAACliG,EAAeogG,GAAsB,EAAM+B,GAAkB,KACrFjnG,KAAKumG,GAAevmG,KAAKuiG,IAAiB9vE,UAAUyI,OAAO,uBACtD+rE,GAASjnG,KAAKknG,aAAa5B,gBAAgBtlG,KAAKuiG,GAAiBz9F,EAAOogG,GAC7EllG,KAAKuiG,GAAkBz9F,EACvB9E,KAAKumG,GAAezhG,GAAO2tB,UAAUC,IAAI,sBAAsB,EAGxD1yB,KAAmBmnG,GAAG,KAC7B,MAAMC,EAAkBpnG,KAAK0uF,GAC1B1uF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwB9kE,WAAWwkB,eACpGplC,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBnmE,SAAS6lB,eACrGyf,OAAOthD,aAAa+5F,QAAQ,aAAcv/C,KAAKklD,UAAUmE,GAAY,EAG9DpnG,KAAoBqnG,GAAG,KAE9B,IAAID,EAA6B,IAAIt8D,GACrCs8D,EAAW/gE,eAAe0X,KAAKC,MAAM9mB,OAAO2tB,OAAOthD,aAAaC,QAAQ,iBACtD,MAAd4jG,GACHpnG,KAAKknG,aAAajC,eAAemC,GAAY,EAC7C,EAGMpnG,KAAAo9F,GAAmBj5F,IAC1B,GAAqB,IAAjBA,EAAMk5F,QAAe,CACxB,IAAIiK,EAAStnG,KAAKknG,aAAa/lB,OAC3BmmB,GAAU,GACbtnG,KAAKgnG,GAAcM,GAAQ,GAAO,GAEnCnjG,EAAMo7F,iBACN,CACD,GAAqB,IAAjBp7F,EAAMk5F,QAAe,CACxB,IAAIiK,EAAStnG,KAAKknG,aAAa5lB,OAC3BgmB,GAAU,GACbtnG,KAAKgnG,GAAcM,GAAQ,GAAO,GAEnCnjG,EAAMo7F,iBACN,CAEGp7F,EAAMk5F,SAAW,IAAMl5F,EAAMk5F,SAAW,KACtCl5F,EAAMojG,WACVvnG,KAAKknG,aAAazB,qBAAqBthG,EAAMk5F,QAAU,IACvDl5F,EAAMo7F,mBAEP,EAGMv/F,KAAW0gG,GAAG,KACrB1gG,KAAKugG,GAAYI,aACjB3gG,KAAK4gG,kBAAkB,EAiBhB5gG,KAAM88F,GAAG,KAChB98F,KAAK6yB,EAAK0qE,OAAS,KAEnBv9F,KAAKknG,aAAa1B,iBAClBxlG,KAAK6yB,EAAKsuD,MAAM,EAGVnhF,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAK6gG,gBAEnD7gG,KAAKygG,GAAYzD,oBAAoB,QAASh9F,KAAK0gG,GAAY,EAGzD1gG,KAAA6gG,eAAkB18F,IACe,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,QACxDr9F,KAAKi9F,KAEoB,IAAjB94F,EAAMk5F,SACdr9F,KAAK0gG,KACLv8F,EAAMgxB,kBAEmB,IAAjBhxB,EAAMk5F,SACdr9F,KAAKknG,aAAa/lB,OAClBh9E,EAAMo7F,mBAEmB,IAAjBp7F,EAAMk5F,SACdr9F,KAAKknG,aAAa5lB,OAClBn9E,EAAMo7F,mBAEmB,KAAjBp7F,EAAMk5F,QACdr9F,KAAK6yB,EAAK6B,MAAMm4C,cAES,KAAjB1oE,EAAMk5F,QACdr9F,KAAK6yB,EAAK6B,MAAMk4C,cAERzoE,EAAMk5F,SAAW,IAAMl5F,EAAMk5F,SAAW,IAC5Cl5F,EAAMojG,UACTvnG,KAAKgnG,GAAc7iG,EAAMk5F,QAAU,GAEpC,EAIMr9F,KAAYi9F,GAAG,KACtBj9F,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAKknG,aAAa/B,cAAc,EA7JhCnlG,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKygG,GAAYv8F,iBAAiB,QAASlE,KAAK0gG,IAChD1gG,KAAK2mG,GAAkBziG,iBAAiB,QAASlE,KAAKmnG,IACtDnnG,KAAK6mG,GAAmB3iG,iBAAiB,QAASlE,KAAKqnG,IACvDrnG,KAAK4gG,mBACL,IAAI4G,EAAS1gF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAEnEnnB,KAAKknG,aAAe,IAAInG,GAAaluE,EAAM67D,GAAgB,GAC3D1uF,KAAKymG,GAAiBxiG,YAAYjE,KAAKknG,aAAalzE,WAGpDh0B,KAAKknG,aAAalzE,UAAUyzE,aAAaznG,KAAK+mG,GAAuB/mG,KAAKknG,aAAalzE,UAAU1N,YACjGtmB,KAAKknG,aAAavF,UAAY3hG,KAAK+mG,GAEnC/mG,KAAK0mG,GAAarG,SAAS,GAAGqH,UAAY,EAAmB,mBAAqB,iBAElF,IAAIC,EAA+B1L,GAAO,CAAEhoE,MAAO,eAAgB3O,MAAO,mBAAoB,QAC9FtlB,KAAKwmG,GAAuBviG,YAAY0jG,GACxC3nG,KAAKumG,GAAex7F,KAAK48F,GACzBA,EAAUzjG,iBAAiB,SAAS,KAAQlE,KAAKgnG,GAAc,EAAE,IACjE,IAAK,IAAIn8F,EAAY,EAAGA,EAAIvJ,EAAO6S,iBAAkBtJ,IAAK,CACzD,IAAI+8F,EAAkC3L,GAAO,CAAEhoE,MAAO,eAAgB3O,MAAO,mBAAoB,GAAKza,GACtG7K,KAAKumG,GAAex7F,KAAK68F,GACzB5nG,KAAKwmG,GAAuBviG,YAAY2jG,GACxCA,EAAa1jG,iBAAiB,SAAS,KAAQlE,KAAKgnG,GAAcn8F,EAAE,GACpE,CACD7K,KAAKumG,GAAejlG,EAAO6S,iBAAmB,GAAGse,UAAUC,IAAI,eAC/D1yB,KAAKumG,GAAe,GAAG9zE,UAAUC,IAAI,uBAErC1yB,KAAKwmG,GAAuBlhF,MAAMC,YAAY,mBAAoBiiF,EAAOr/E,aACzEnoB,KAAKwmG,GAAuBlhF,MAAMC,YAAY,mBAAoBiiF,EAAOt/E,eACzEloB,KAAKwmG,GAAuBlhF,MAAMC,YAAY,yBAA0BiiF,EAAOv/E,gBAC/EjoB,KAAKwmG,GAAuBlhF,MAAMC,YAAY,yBAA0BiiF,EAAOz/E,kBAE/E/nB,KAAKymG,GAAiBviG,iBAAiB,UAAWlE,KAAKo9F,IACvDp9F,KAAKknG,aAAalzE,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAC7Dp9F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAEhDr4C,YAAW,IAAM/kD,KAAKygG,GAAY/C,UAElC19F,KAAKknG,aAAatwE,Q,CAuDZ,gBAAAgqE,GACF5gG,KAAK6yB,EAAK6B,MAAMyxC,SACnBnmE,KAAKygG,GAAYhuE,UAAUyI,OAAO,cAClCl7B,KAAKygG,GAAYhuE,UAAUC,IAAI,eAC/B1yB,KAAKygG,GAAY/lD,MAAQ,gBACzB16C,KAAKygG,GAAYK,UAAY,UAE7B9gG,KAAKygG,GAAYhuE,UAAUyI,OAAO,eAClCl7B,KAAKygG,GAAYhuE,UAAUC,IAAI,cAC/B1yB,KAAKygG,GAAY/lD,MAAQ,eACzB16C,KAAKygG,GAAYK,UAAY,O,ECrKhC,MAAM7E,OAAEA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,GAAEC,MAAEA,IAAU12E,EAgCnC,SAASmiF,GAAIjxF,EAAWC,GACvB,KAAa,IAANA,GAAS,CACf,MAAMixF,EAAYlxF,EAAIC,EACtBD,EAAIC,EACJA,EAAIixF,CACJ,CACD,OAAOlxF,CACR,CASA,SAASmxF,GAAS1rE,EAAWC,GAC5B,IAAI/E,EAAY8E,EACZuqE,EAAYtqE,EAChB,MAAMK,EAAYkrE,GAAItwE,EAAGqvE,GAKzB,OAJIjqE,EAAI,IACPpF,EAAIpsB,KAAK0hB,MAAM0K,EAAIoF,GACnBiqE,EAAIz7F,KAAK0hB,MAAM+5E,EAAIjqE,IAEb,CAACpF,EAAGqvE,EACZ,CAmBA,SAASoB,GAAY3rE,EAAaC,GACjC,MAAM2rE,EAAa5rE,EAAE,GACf6rE,EAAa7rE,EAAE,GACf8rE,EAAa7rE,EAAE,GACf8rE,EAAa9rE,EAAE,GACrB,OAAOyrE,GAxCR,SAAa1rE,EAAWC,GACvB,OAAOnxB,KAAK0hB,MAAM1hB,KAAKC,IAAIixB,EAAIC,GAAKurE,GAAIxrE,EAAGC,GAC5C,CAsCiB+rE,CAAIJ,EAAIE,GAAKN,GAAIK,EAAIE,GACtC,C,MA6CaE,GAwMZ,WAAAvoG,CAAoB8yB,G,sBAAA7yB,KAAI6yB,EAAJA,EAvMH7yB,KAASuoG,GAAW,EACpBvoG,KAASwoG,GAAW,GAEpBxoG,KAAayoG,GAAW,GAEjCzoG,KAAW0oG,GAAWpnG,EAAOgY,qBAAuBhY,EAAOkY,qBAAuB,EAEzExZ,KAAgB2oG,GAAW,kBAIpC3oG,KAAc4oG,GAAW,EACzB5oG,KAAsB6oG,GAAW,EACjC7oG,KAAyB8oG,IAAY,EAErC9oG,KAAS+oG,GAAW,EACpB/oG,KAAUgpG,GAAW,EACrBhpG,KAAAipG,GAAyB3nG,EAAOoQ,YAEhC1R,KAAmBkpG,GAAW,EACrBlpG,KAAgBmpG,GAAW,IAC3BnpG,KAAiBopG,GAAW,GAE5BppG,KAAWqpG,GAAW,IACtBrpG,KAAYspG,GAAW,IACvBtpG,KAAoBupG,GAAWvpG,KAAKqpG,GAAcrpG,KAAKwoG,GACvDxoG,KAAAwpG,GAA+BxpG,KAAKqpG,GAAc,GAClDrpG,KAAaypG,GAAWzpG,KAAKqpG,GAAcrpG,KAAKwoG,GAChDxoG,KAAA0pG,GAAuB1pG,KAAKqpG,GAAc,EAAIrpG,KAAKwpG,GAAuBxpG,KAAKypG,GAE/EzpG,KAAgB2pG,GAAwB,GACxC3pG,KAAqB4pG,GAAsB3N,GAAO,CAAEhoE,MAAO,eAAgB3O,MAAO,mCAElGS,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,QAChFp5E,EAAI6N,KAAK,CAAEgzE,EAAG,8IAA+IzzE,KAAMrM,GAAYgJ,gBAGhK9vB,KAAkB6pG,GAAsB5N,GAAO,CAAEhoE,MAAO,2BAA4B3O,MAAO,mCAE3GS,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,QAChFp5E,EAAI6N,KAAK,CAAEgzE,EAAG,wFAAyFzzE,KAAMrM,GAAYgJ,gBAG1G9vB,KAAwB8pG,GAAmBv3E,GAAI,CAAE0B,MAAO,iBAAkB3O,MAAO,yCACjGtlB,KAAK4pG,GACL5pG,KAAK6pG,IAGW7pG,KAAqB+pG,GAAkBhkF,EAAIwN,IAAI,CAAE,iBAAkB,SACnEvzB,KAAgBgqG,GAAkBjkF,EAAIwN,IAAI,CAAE,iBAAkB,SAC9DvzB,KAAAiqG,GAAmC13E,GAAI,CAAEjN,MAAO,wBAAwBwB,GAAYiJ,kBACpF/vB,KAAAkqG,GAAgDjO,GAAO,CAAE32E,MAAO,iDAEhFS,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,QAChFp5E,EAAImN,KAAK,CAAEtc,EAAG,KAAMC,EAAG,KAAMuc,MAAO,IAAKC,OAAQ,KAAMF,KAAMrM,GAAYgJ,cACzE/J,EAAI6N,KAAK,CAAEgzE,EAAG,wBAAyBzzE,KAAMrM,GAAYgJ,gBAG1C9vB,KAAuBmqG,GAAsBlO,GAAO,CAAE32E,MAAO,mEAC7ES,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,QAChFp5E,EAAI6N,KAAK,CAAEgzE,EAAG,wBAAyBzzE,KAAMrM,GAAYgJ,gBAG1C9vB,KAA0BoqG,GAAsBnO,GAAO,CAAE32E,MAAO,iDAChFS,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,QAChFp5E,EAAI6N,KAAK,CAAEgzE,EAAG,yBAA0BzzE,KAAMrM,GAAYgJ,gBAG3C9vB,KAAAqqG,GAA+CpO,GAAO,CAAE32E,MAAO,mEAE/ES,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,QAChFp5E,EAAImN,KAAK,CAAEtc,EAAG,IAAKC,EAAG,KAAMuc,MAAO,IAAKC,OAAQ,KAAMF,KAAMrM,GAAYgJ,cACxE/J,EAAI6N,KAAK,CAAEgzE,EAAG,yBAA0BzzE,KAAMrM,GAAYgJ,gBAI3C9vB,KAAAsqG,GAA+BvkF,EAAIu7E,OAAO,CAAEiD,GAAIvkG,KAAKqpG,GAAc,EAAG7E,GAAIxkG,KAAKspG,GAAe,EAAG/H,EAAGvhG,KAAK0pG,GAAch2E,OAAQ5M,GAAYgJ,YAAa,eAAgB,MAAOqD,KAAM,SACrLnzB,KAAYuqG,GAAkBxkF,EAAIwN,IAAI,CAAE,iBAAkB,SAE1DvzB,KAAAwqG,GAAkCpO,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAU1H,IAAKvN,KAAKuoG,GAAWzxF,IAAK9W,KAAKwoG,GAAWllG,MAAO,IAAKo5F,KAAM,MAC9J18F,KAAAyqG,GAAmCrO,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAU1H,IAAK,IAAKuJ,IAAK,IAAKxT,MAAO,IAAKo5F,KAAM,MACzI18F,KAAA0qG,GAAqCtO,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAU1H,IAAK,IAAKuJ,IAAK9W,KAAKwoG,GAAWllG,MAAO,IAAKo5F,KAAM,MACtJ18F,KAAA2qG,GAA8CvO,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAU1H,IAAK,IAAKuJ,IAAKxV,EAAOwQ,aAAcxO,MAAO,IAAKo5F,KAAM,MACpK18F,KAAA4qG,GAAgDxO,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAU1H,IAAK,IAAKuJ,IAAKxV,EAAOwQ,aAAcxO,MAAO,IAAKo5F,KAAM,MAGtK18F,KAAA6qG,GAAoCzO,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAU1H,IAAK,IAAKuJ,IAAK9W,KAAK0oG,GAAc,EAAGplG,MAAO,IAAKo5F,KAAM,MAE3J18F,KAAA8qG,GAAkC1O,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAU1H,IAAK,IAAKuJ,IAAKxV,EAAO0Y,SAAU1W,MAAO,IAAKo5F,KAAM,MACpJ18F,KAAA+qG,GAAsC3O,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,SAAU1H,IAAK,IAAKuJ,IAAKxV,EAAOoQ,YAAapO,MAAO,IAAKo5F,KAAM,MAE3J18F,KAAsBgrG,GAAsB/O,GAAO,CAAE32E,MAAO,mEAAqE,qBAEjItlB,KAAAirG,GAA4C7O,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,8CAE7EtlB,KAAAkrG,GAA+B9O,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,8CAEhEtlB,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,eAAiB,QAEvFtlB,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBAEpDj0B,KAASg0B,UAAmBzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACrF62E,GAAG,6BACH5pE,GAAI,CAAEjN,MAAO,4DACZtlB,KAAK8pG,IAENv3E,GAAI,CAAEjN,MAAO,4FACZiN,GAAI,CAAEjN,MAAO,iCACZtlB,KAAKkqG,GACLlqG,KAAKmqG,IAENnqG,KAAKiqG,GACL13E,GAAI,CAAEjN,MAAO,iCACZtlB,KAAKoqG,GACLpqG,KAAKqqG,KAGP93E,GAAI,CAAEjN,MAAO,qFACZS,EAAIwN,IAAI,CAAE,iBAAkB,OAAQjO,MAAO,wCAAyC8N,MAAO,OAAQC,OAAQ,OAAQ8rE,QAAS,OAAOn/F,KAAKmpG,MAAoBnpG,KAAKopG,KAAqBhK,oBAAqB,QAC1Mp/F,KAAK+pG,GACL/pG,KAAKgqG,KAGPz3E,GAAI,CAAEjN,MAAO,2FACZiN,GAAI,CAAEjN,MAAO,mCACZS,EAAIwN,IAAI,CAAE,iBAAkB,OAAQH,MAAO,OAAQC,OAAQ,OAAQ/N,MAAO,6FAA8F65E,QAAS,OAAOn/F,KAAKqpG,MAAerpG,KAAKspG,KAAgBlK,oBAAqB,QACrPp/F,KAAKsqG,GACLtqG,KAAKuqG,KAGPh4E,GAAI,CAAEjN,MAAO,gCACZiN,GAAI,CAAEjN,MAAO,kBACZiN,GAAI,CAAEjN,MAAO,oGACZiN,GAAI,CAAEjN,MAAO,2CAA2CwB,GAAYgJ,gBACnE,SAED9vB,KAAKwqG,IAENj4E,GAAI,CAAEjN,MAAO,uHACZiN,GAAI,CAAEjN,MAAO,2CAA2CwB,GAAYgJ,gBACnE,UAED9vB,KAAKyqG,IAENl4E,GAAI,CAAEjN,MAAO,uHACZiN,GAAI,CAAEjN,MAAO,2CAA2CwB,GAAYgJ,gBACnE,YAED9vB,KAAK0qG,KAGPn4E,GAAI,CAAEjN,MAAO,mCACZiN,GAAI,CAAEjN,MAAO,wHACZiN,GAAI,CAAEjN,MAAO,2CAA2CwB,GAAYgJ,gBACnE,QAEDyC,GAAI,CAAEjN,MAAO,0CACZtlB,KAAK2qG,GACL3qG,KAAK4qG,KAGPr4E,GAAI,CAAEjN,MAAO,uHACZiN,GAAI,CAAEjN,MAAO,2CAA2CwB,GAAYgJ,gBACnE,WAED9vB,KAAK6qG,IAENt4E,GAAI,CAAEjN,MAAO,uHACZiN,GAAI,CAAEjN,MAAO,2CAA2CwB,GAAYgJ,gBACnE,SAED9vB,KAAK8qG,OAKTv4E,GAAI,CAAEjN,MAAO,uFACZiN,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYgJ,gBACrD,yBAED9vB,KAAKirG,GACL14E,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYgJ,kCACrD,UAED9vB,KAAKkrG,IAEN34E,GAAI,CAAEjN,MAAO,uFACZiN,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYgJ,gBACrD,oBAED9vB,KAAK+qG,GACL/qG,KAAKgrG,IAENz4E,GAAI,CAAEjN,MAAO,+EACZtlB,KAAK68F,IAEN78F,KAAK48F,IAkHC58F,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,IACnDp9F,KAAK8pG,GAAyB9M,oBAAoB,QAASh9F,KAAKmrG,IAChEnrG,KAAKkqG,GAA2BlN,oBAAoB,QAASh9F,KAAKorG,IAClEprG,KAAKmqG,GAAwBnN,oBAAoB,QAASh9F,KAAKqrG,IAC/DrrG,KAAKoqG,GAA2BpN,oBAAoB,QAASh9F,KAAKsrG,IAClEtrG,KAAKqqG,GAA0BrN,oBAAoB,QAASh9F,KAAKurG,IACjEvrG,KAAKwqG,GAAcxN,oBAAoB,SAAUh9F,KAAKwrG,IACtDxrG,KAAKyqG,GAAezN,oBAAoB,SAAUh9F,KAAKyrG,IACvDzrG,KAAK0qG,GAAiB1N,oBAAoB,SAAUh9F,KAAK0rG,IACzD1rG,KAAK2qG,GAA0B3N,oBAAoB,SAAUh9F,KAAK2rG,IAClE3rG,KAAK4qG,GAA4B5N,oBAAoB,SAAUh9F,KAAK2rG,IACpE3rG,KAAK6qG,GAAgB7N,oBAAoB,SAAUh9F,KAAK4rG,IACxD5rG,KAAK8qG,GAAc9N,oBAAoB,SAAUh9F,KAAK6rG,IACtD7rG,KAAK+qG,GAAkB/N,oBAAoB,SAAUh9F,KAAK8rG,IAC1D9rG,KAAKkrG,GAAWlO,oBAAoB,SAAUh9F,KAAK+rG,IACnD/rG,KAAKirG,GAAwBjO,oBAAoB,SAAUh9F,KAAKgsG,IAChEhsG,KAAKgrG,GAAuBhO,oBAAoB,QAASh9F,KAAKisG,GAA4B,EAGnFjsG,KAAM88F,GAAG,KAChB98F,KAAK6yB,EAAKsuD,MAAM,EAGTnhF,KAAYi9F,GAAG,KACtBj9F,KAAK6yB,EAAK0qE,OAAS,KAEnB,MAAMc,EAAqB,IAAI7c,GAEzB76C,EAAsB3mC,KAAK6yB,EAAK9F,KAAK4Z,YACrC70B,EAAuBxQ,EAAOwQ,aAC9By/D,EAAsBz/D,EAAe60B,EAErCulE,EAAmBlsG,KAAK+oG,GACxBoD,EAAkBD,EAAWlsG,KAAKgpG,GAExC,GAAImD,EAAUnsG,KAAK6yB,EAAK9F,KAAKoJ,SAAU,CACtC,MAAMi2E,EAAmBpsG,KAAK6yB,EAAK9F,KAAKoJ,SAAW+1E,EAC7CG,EAAoBrsG,KAAKgpG,GAAaoD,EAC5C/N,EAAM5c,OAAO,IAAIiH,GAAiB1oF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKoJ,SAAUk2E,GACtE,CAKD,IAAIC,EAAsD,IAAI1+E,IAC1D2+E,EAA6C,IAAI3+E,IAErD,IAAK,IAAIgtB,EAAcsxD,EAAUtxD,EAAMuxD,EAASvxD,IAAO,CAItD,MAAM4xD,EAAsB5xD,EAAMsxD,EAK5BO,EAAqBD,EAAcj7B,EAEzC,IAAK,IAAIm7B,EAAwB,EAAGA,EAAgB1sG,KAAK2sG,GAAW9pG,OAAQ6pG,IAAiB,CAC5F,MAAMnlD,EAAqBvnD,KAAK2sG,GAAWD,GACrCE,EAA8B5sG,KAAK6sG,GAAoBH,GAE7D,KADsCE,EAAkB/pG,OAAS,GAEhE,SAED,MAAMiqG,EAAgBvlD,EAASulD,MAC/B,GAAIF,EAAkB/pG,SAAWiqG,EAAO,CACvCriG,QAAQxH,MAAM,+GAAgH2pG,EAAkB/pG,OAAQ,qBAAsBiqG,GAC9K,QACA,CACD,MAAMC,EAAmBxlD,EAASylD,kBAAoBzlD,EAAS0lD,oBACzDtpE,EAAgB4jB,EAAS5jB,MACzBuW,EAAuBqN,EAASpgC,QAEhC+lF,EADkB3lD,EAAS4lD,OACL,EAAI,EAC1BC,EAA+B7lD,EAAS6lD,oBAC9Cb,EAAqBloG,IAAIs/B,GAAO,GAChC,IAAI0pE,EAAiDf,EAAqBl/E,IAAI8sB,GAC9E,GAAwB1sB,MAApB6/E,EAA+B,CAClCA,EAAmB,GACnB,IAAK,IAAIxiG,EAAY,EAAGA,EAAI7K,KAAKgpG,GAAYn+F,IAAK,CACjD,MAAMyiG,EAAgC,GACtC,IAAK,IAAIrzE,EAAY,EAAGA,EAAIj6B,KAAK2sG,GAAW9pG,OAAQo3B,IAAK,CACxD,MAAMszE,EAA0C,GAChDD,EAAgBviG,KAAKwiG,EACrB,CACDF,EAAiBtiG,KAAKuiG,EACtB,CACDhB,EAAqBjoG,IAAI61C,EAAcmzD,EACvC,CAED,IAAIG,EAD+BH,EAAiBb,GACIE,GACxD,MAAMe,EAAoBtiG,KAAK0hB,MAAO8Z,EAAc6lE,EAAeO,GAC7DW,EAAmBviG,KAAKgS,KAAMwpB,GAAe6lE,EAAc,GAAMO,GACvE,IAAK,IAAIrQ,EAAe+Q,EAAW/Q,EAAOgR,EAAUhR,IAAQ,CAC3D,IAAI34D,GAAgC,EAChC4pE,GAA4B,EAChC,MAAMC,EACLziG,KAAK0hB,MAAM6vE,EAAO5qF,EAAei7F,GAAYN,EAExCoB,EACL1iG,KAAK0hB,OAAO6vE,EAAO,GAAK5qF,EAAei7F,GAAYN,EAEhDmB,EAAmB,IACtB7pE,GAAuB,IAEpBA,GAAwB8pE,EAAiBt8B,KAC5Co8B,GAAmB,GAEpB,MAAMG,EAAwB3iG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIgkE,EAAaq8B,IAC1DG,EAAsB5iG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIgkE,EAAas8B,IAC9D,GAAIjB,EAAkBlQ,EAAOoQ,KAAWI,EAAI,CAC3C,MAAMhoE,EAAa,IAAIxB,GAAKC,EAAOmqE,EAAeC,EAAazsG,EAAOwU,YAAas3F,GAInF,GAHIrpE,IACHmB,EAAKnB,sBAAuB,GAEzB4pE,GAAoBP,EAAqB,CAC5C,MAAMj/B,GAAsB2/B,EAAgBF,IAAqBC,EAAiBD,GAC5EI,EAAuB7iG,KAAKe,MAAM5K,EAAOwU,aAAe,EAAIxU,EAAOwU,aAAeq4D,GACxFjpC,EAAKpB,KAAK,GAAG1I,KAAO4yE,EACpB,MAAM5/B,GAAoB2/B,EAAcH,IAAqBC,EAAiBD,GACxEK,EAAqB9iG,KAAKe,MAAM5K,EAAOwU,aAAe,EAAIxU,EAAOwU,aAAes4D,GACtFlpC,EAAKpB,KAAK,GAAG1I,KAAO6yE,CACpB,CACDT,EAAkBziG,KAAKm6B,EACvB,CACD,CACD,CACD,CAED,IAAK,MAAOgV,EAAcmzD,KAAqBf,EAAqB/lB,UACnE,IAAK,IAAI2nB,EAA4B,EAAGA,EAAoBb,EAAiBxqG,OAAQqrG,IAAqB,CACzG,MAAMC,EAA6Bd,EAAiBa,GAE9CtzD,EAAcszD,EAAoBhC,EAExC,IAAIkC,EAAmB,GACvB,MAAMlqB,EAA6BlkF,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACzD,MAAdspC,IACHkqB,EAAWlqB,EAAWj/C,cAGvBo5D,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM,EAAG+nB,EAAKV,EAAc,EAAG,IAC1EmkD,EAAM5c,OAAO,IAAI0Q,GAA0BnyF,KAAK6yB,EAAMqnB,EAAcU,IAEpE,MAAMD,EAA0B36C,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACxE,GAAe,MAAXD,EACH,MAAM,IAAIx4C,MAAM,+BAGjB,IAAIksG,EAAiB,GASrB,IAAK,IAAIC,EAAuBF,EAASvrG,OAAS,EAAGyrG,GAAgB,EAAGA,IAAgB,CACvF,MAAM5rB,EAAgB0rB,EAASE,GAC/B,IAAInU,EAAuB,GAC3B,IAAK,MAAMoU,KAAY7rB,EAAQ7+C,QACzB0oE,EAAqBp/E,IAAIohF,IAC7BpU,EAAWpvF,KAAKwjG,GAGlB7rB,EAAQ7+C,QAAUs2D,EACdzX,EAAQ7+C,QAAQhhC,OAAS,GAC5BurG,EAASlyE,OAAOoyE,EAAc,EAE/B,CAUD,IAAIE,EAA6B,GACjC,IAAK,MAAMtpE,KAAQkpE,EAClBI,EAASzjG,KAAK,CAAE0jG,SAAU,MAAOhzE,UAAW,QAASmJ,KAAMM,EAAKlF,MAAOkF,KAAMA,IAC7EspE,EAASzjG,KAAK,CAAE0jG,SAAU,MAAOhzE,UAAW,MAAOmJ,KAAMM,EAAKjF,IAAKiF,KAAMA,IAE1E,IAAK,MAAMsoE,KAAqBW,EAC/B,IAAK,MAAMjpE,KAAQsoE,EAClBgB,EAASzjG,KAAK,CAAE0jG,SAAU,MAAOhzE,UAAW,QAASmJ,KAAMM,EAAKlF,MAAOkF,KAAMA,IAC7EspE,EAASzjG,KAAK,CAAE0jG,SAAU,MAAOhzE,UAAW,MAAOmJ,KAAMM,EAAKjF,IAAKiF,KAAMA,IAK3EspE,EAAS9mC,MAAK,CAACrrC,EAAGC,IAAeD,EAAEuI,KAAOtI,EAAEsI,OAO5C,IAAI8pE,EAAqC,GACrCC,EAAgD,KACpD,IAAK,IAAIxqG,KAASqqG,EACQ,MAArBG,EACHA,EAAoB,CAAE/pE,KAAMzgC,EAAMygC,KAAMvJ,OAAQ,CAACl3B,IAE7CA,EAAMygC,OAAS+pE,EAAkB/pE,MACpC8pE,EAAY3jG,KAAK4jG,GACjBA,EAAoB,CAAE/pE,KAAMzgC,EAAMygC,KAAMvJ,OAAQ,CAACl3B,KAEjDwqG,EAAkBtzE,OAAOtwB,KAAK5G,GAIR,MAArBwqG,GAA2BD,EAAY3jG,KAAK4jG,GAOhD,IAAIC,EAA6B,GAC7BC,EAA0B,EAC1BC,EAAwB,EACxBC,EAAyB,IAAIzsB,IAC7B0sB,EAA8B,GAC9BC,EAAoC,IAAI3sB,IAC5C,IAAK,MAAM4sB,KAAcR,EACxB,GAAyB,IAArBE,EAAU/rG,OAAc,CAG3B,IAAK,MAAMsB,KAAS+qG,EAAW7zE,OAAQ,CACtC,GAAwB,QAApBl3B,EAAMs3B,UACT,MAAM,IAAIt5B,MAAM,sCACV,GAAwB,UAApBgC,EAAMs3B,UAGhB,MAAM,IAAIt5B,MAAM,gCAFhBysG,EAAU7jG,KAAK,CAAE0jG,SAAUtqG,EAAMsqG,SAAUvpE,KAAM/gC,EAAM+gC,MAIxD,CACD2pE,EAAkBK,EAAWtqE,IAC7B,KAAM,CAEN,IAAK,MAAMzgC,KAAS+qG,EAAW7zE,OAC9B,GAAwB,QAApBl3B,EAAMs3B,UACTszE,EAAYr8E,IAAIvuB,EAAM+gC,UAChB,IAAwB,UAApB/gC,EAAMs3B,UAGhB,MAAM,IAAIt5B,MAAM,gCAFhB6sG,EAAWjkG,KAAK,CAAE0jG,SAAUtqG,EAAMsqG,SAAUvpE,KAAM/gC,EAAM+gC,MAGxD,CAEF4pE,EAAgBI,EAAWtqE,KAC3B,MAAMuqE,EAAmB,IAAIzrE,GAAK,EAAGmrE,EAAiBC,EAAextG,EAAOwU,aAAa,GACzF,IAAIiuB,GAAgC,EAChCqrE,EAA0B,KAC1BC,EAA0B,KAC9B,IAAK,MAAMC,KAAiBV,EAAW,CACtC,MAAM1pE,EAAaoqE,EAAcpqE,KACjC,IAAK,MAAMqqE,KAAkBrqE,EAAKrB,QACjCorE,EAAqBv8E,IAAI68E,GAG1B,GADIrqE,EAAKnB,uBAAsBA,GAAuB,GACvB,QAA3BurE,EAAcb,UAIF,MAAdW,GACGE,EAAcpqE,KAAKlF,MAAQovE,EAAWpvE,OACtCsvE,EAAcpqE,KAAKjF,IAAMmvE,EAAWnvE,OAEvCmvE,EAAaE,EAAcpqE,WAEtB,GAA+B,QAA3BoqE,EAAcb,SAAoB,CAC5C,GAAkB,MAAdY,EAAoB,MAAM,IAAIltG,MAAM,sCACxCktG,EAAaC,EAAcpqE,IAC3B,CACD,CACD,MAAMsqE,EAA4BhtG,MAAMC,KAAKwsG,GAAsBvnC,MAAK,CAACrrC,EAAGC,IAAMD,EAAIC,IAGtF,GAFA6yE,EAAWtrE,QAAU2rE,EACrBL,EAAWprE,qBAAuBA,EAChB,MAAdqrE,EAAoB,CAGvB,MAAMK,EAA8BL,EAAWpvE,MACzC0vE,EAA4BN,EAAWnvE,IACvC0vE,EAAoBP,EAAWtrE,KAAK,GAAG1I,KACvCw0E,EAAkBR,EAAWtrE,KAAK,GAAG1I,KACrC+yC,GAAsB0gC,EAAkBY,IAAwBC,EAAoBD,GACpFzB,EAAuB7iG,KAAKe,MAAMyjG,GAAaC,EAAUD,GAAaxhC,GAC5EghC,EAAWrrE,KAAK,GAAG1I,KAAO4yE,EAC1B,MAAM5/B,GAAoB0gC,EAAgBW,IAAwBC,EAAoBD,GAChFxB,EAAqB9iG,KAAKe,MAAMyjG,GAAaC,EAAUD,GAAavhC,GAC1E+gC,EAAWrrE,KAAK,GAAG1I,KAAO6yE,CAC1B,MAAM,GAAkB,MAAdoB,EAAoB,CAQ9B,MAAMQ,EAA2Bf,EAAgBD,EAC3CiB,EAAwCjB,EAAkBQ,EAAWrvE,MACrE+vE,EAAsCjB,EAAgBO,EAAWrvE,MACvE,IAAIo6D,EAAqB,GACrB4V,GAAmC,EACnCC,GAAkC,EAClCC,EAAkC,EAClCC,EAAmCd,EAAWvrE,KAAKjhC,OAAS,EAChE,IAAK,IAAIutG,EAAc,EAAGA,EAAcf,EAAWvrE,KAAKjhC,OAAQutG,IAAe,CAC9E,MAAM7c,EAAkB8b,EAAWvrE,KAAKssE,GACxC,GAAI7c,EAAO9vD,KAAOqsE,EACjBI,EAA0BE,OACpB,GAAI7c,EAAO9vD,MAAQqsE,GAAiCvc,EAAO9vD,MAAQssE,GACxC,IAA7BC,IACHA,EAA0BI,GAE3BH,EAAyBG,OACnB,GAAI7c,EAAO9vD,KAAOssE,EAA6B,CACrDI,EAA2BC,EAE3B,KACA,CACD,CACD,IAAiC,IAA7BJ,EAAgC,CAGnC,IAAK,IAAIK,EAA6BL,EAAyBK,GAAsBJ,EAAwBI,IAAsB,CAClI,MAAMC,EAAyBjB,EAAWvrE,KAAKusE,GACzCE,EAAwBD,EAAc7sE,KAAOqsE,EACnD1V,EAAQrvF,KAAKy4B,GAAY,EAAG+sE,EAAeD,EAAcl1E,MACzD,CAED,MAAMo1E,EAAuBpW,EAAQ,GAC/BqW,EAAsBrW,EAAQA,EAAQv3F,OAAS,GACrD,GAAyB,IAArB2tG,EAAY/sE,KAAY,CAG3B,MAAMitE,EAA8BrB,EAAWvrE,KAAKosE,GAC9CS,EAAyBb,EAAgCY,EAAmBjtE,KAE5Eu/C,EAAgB2tB,GADMA,EAAiBH,EAAY/sE,MAEnDmtE,EAAkBzlG,KAAKe,MAAMwkG,EAAmBt1E,MAAQo1E,EAAYp1E,KAAOs1E,EAAmBt1E,MAAQ4nD,GAC5GoX,EAAQn9C,QAAQzZ,GAAY,EAAG,EAAGotE,GAClC,CACD,GAAIH,EAAWhtE,OAASosE,EAAkB,CAGzC,MAAMgB,EAA+BxB,EAAWvrE,KAAKqsE,GAC/CQ,EAAyBZ,GAA+BU,EAAWhtE,KAAOqsE,GAE1E9sB,EAAgB2tB,GADMA,GAAkBE,EAAoBptE,KAAOssE,IAEnEa,EAAkBzlG,KAAKe,MAAMukG,EAAWr1E,MAAQy1E,EAAoBz1E,KAAOq1E,EAAWr1E,MAAQ4nD,GACpGoX,EAAQrvF,KAAKy4B,GAAY,EAAGqsE,EAAkBe,GAC9C,CACD,KAAM,CAEN,MAAMF,EAA8BrB,EAAWvrE,KAAKosE,GAC9CW,EAA+BxB,EAAWvrE,KAAKqsE,GAC/CW,EAAoChB,EAAgCY,EAAmBjtE,KACvFstE,EAAmChB,EAA8BW,EAAmBjtE,KACpFutE,EAAqBH,EAAoBptE,KAAOitE,EAAmBjtE,KACnEwtE,EAAqBH,EAA4BE,EACjDE,EAAoBH,EAA2BC,EAC/CG,EAAuBhmG,KAAKe,MAAMwkG,EAAmBt1E,MAAQy1E,EAAoBz1E,KAAOs1E,EAAmBt1E,MAAQ61E,GACnHG,EAAsBjmG,KAAKe,MAAMwkG,EAAmBt1E,MAAQy1E,EAAoBz1E,KAAOs1E,EAAmBt1E,MAAQ81E,GACxH9W,EAAQrvF,KAAKy4B,GAAY,EAAG,EAAG2tE,IAC/B/W,EAAQrvF,KAAKy4B,GAAY,EAAGqsE,EAAkBuB,GAC9C,CACDjC,EAAWrrE,KAAOs2D,CAClB,CACD,GAAI+U,EAAWrrE,KAAKjhC,OAAS,EAC5B,MAAM,IAAIV,MAAM,oDAEjB,GAAIgtG,EAAWtrE,QAAQhhC,OAAS,EAI/B,MAAM,IAAIV,MAAM,4CAEjBksG,EAAOtjG,KAAKokG,GACZ,IAAK,IAAIjqE,KAAQ6pE,EAChB,IAAK,IAAIsC,EAAgBzC,EAAU/rG,OAAS,EAAGwuG,GAAiB,EAAGA,IAAiB,CAE/EnsE,IADiB0pE,EAAUyC,GAAensE,MAE7C0pE,EAAU1yE,OAAOm1E,EAAe,EAEjC,CAEF,IAAK,IAAInsE,KAAQ8pE,EAAYJ,EAAU7jG,KAAKm6B,GAG5C,IAFA+pE,EAAqBhoF,QACrB8nF,EAAY9nF,QACL+nF,EAAWnsG,OAAS,GAAGmsG,EAAWpzE,MACzCizE,EAAkBC,CAClB,CAGFn0D,EAAQ5V,MAAQ,GAChB,IAAK,IAAIswD,EAAY,EAAGA,EAAYgZ,EAAOxrG,OAAQwyF,IAAa,CAC/D,MAAMnwD,EAAampE,EAAOhZ,GAC1BgJ,EAAM5c,OAAO,IAAIkT,GAAgB30F,KAAK6yB,EAAM8nB,EAASzV,EAAMmwD,GAC3D,CACD,CAGFr1F,KAAK6yB,EAAKi/D,OAAOuM,GAAO,GAExBx5C,OAAOthD,aAAa+5F,QAAQt9F,KAAK2oG,GAAkB5qD,KAAKklD,UAAU,CACjEqO,UAAatxG,KAAK2sG,GAClB4E,UAAavxG,KAAKgpG,KAChB,EAGIhpG,KAAqBwxG,GAAG,KAC/BxxG,KAAK6sG,GAAsB,GAC3B,IAAK,IAAIhiG,EAAY,EAAGA,EAAI7K,KAAK2sG,GAAW9pG,OAAQgI,IACnD7K,KAAK6sG,GAAoB9hG,KAAK,IAC9B/K,KAAKyxG,GAAkB5mG,EACvB,EAGM7K,KAAAyxG,GAAqB3sG,IAC5B,MAAMyiD,EAAqBvnD,KAAK2sG,GAAW7nG,GAC3C9E,KAAK6sG,GAAoB/nG,GA9wB3B,SAAiCgoG,EAAe4E,EAAgBh8F,GAE/Do3F,EAAQ3hG,KAAK2L,IAAI,EAAGg2F,GAEpB4E,EAASvmG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIu/F,EAAO4E,IAKrC,IAAIC,EAAsB,GAC1B,IAAK,IAAIjV,EAAe,EAAGA,EAAOoQ,EAAOpQ,IACxCiV,EAAQ5mG,KAAK,CAAC2xF,GAAQgV,EAAS,EAAI,IACpC,IAAIr1E,EAAYywE,EACZxwE,EAAYwwE,EAAQ4E,EACxB,GAAIr1E,EAAI,GAAKC,EAAI,EAGhB,KAAOD,IAAMC,GAAG,CACXD,EAAIC,EACPD,GAAQC,EAERA,GAAQD,EAET,MAAMu1E,EAAuBzmG,KAAKoC,IAAI8uB,EAAGC,GACzC,KAAIs1E,GAAgB,GACpB,IAAK,IAAI/mG,EAAY,EAAGA,EAAI+mG,EAAc/mG,IAAK,CAC9C,MAAMgnG,EAA8BF,EAAQ/1E,MAC5C,GAAa,MAATi2E,EAAe,IAAK,MAAMxwE,KAAKwwE,EAAOF,EAAQ9mG,GAAGE,KAAKs2B,EAC1D,CACD,CAEF,IAAIsZ,EAAoB,GACxB,IAAK,MAAMjiB,KAAKi5E,EAAS,IAAK,MAAMtwE,KAAK3I,EAAGiiB,EAAQ5vC,KAAKs2B,GAQzD,OAPe,IAAX3rB,IAEHA,GAAUA,EAASilC,EAAQ93C,OAAS83C,EAAQ93C,QAAU83C,EAAQ93C,OAE9D6S,EAASilC,EAAQ93C,OAAS6S,EAC1BilC,EAAUA,EAAQgD,MAAMjoC,GAAQgB,OAAOikC,EAAQgD,MAAM,EAAGjoC,KAElDilC,CACR,CAquBoCm3D,CACjCvqD,EAASulD,MAAOvlD,EAASmqD,OAAQnqD,EAASwqD,SAC1C,EAGM/xG,KAAwBgyG,GAAG,KAClChyG,KAAKyxG,GAAkBzxG,KAAK4oG,GAAe,EAGpC5oG,KAAAo9F,GAAmBj5F,IACa,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SAExDr9F,KAAKi9F,IACL,EAGMj9F,KAAAmrG,GAAuBhnG,IAC9B,GAAIA,EAAMqc,QAAUxgB,KAAK6pG,GAAoB,CAC5C,MAAMoI,EAA4BjyG,KAAK2sG,GAAW3sG,KAAK4oG,IACvD5oG,KAAK2sG,GAAW5hG,KAAK,CACpB+hG,MAAOmF,EAAgBnF,MACvB4E,OAAQO,EAAgBP,OACxBK,SAAUE,EAAgBF,SAC1B/E,kBAAmBiF,EAAgBjF,kBACnCC,oBAAqBgF,EAAgBhF,oBACrC9lF,QAAS8qF,EAAgB9qF,QACzBwc,MAAOsuE,EAAgBtuE,MACvBwpE,OAAQ8E,EAAgB9E,OACxBC,oBAAqB6E,EAAgB7E,sBAEtCptG,KAAK4oG,GAAiB5oG,KAAK2sG,GAAW9pG,OAAS,EAE/C7C,KAAKgyG,KAELhyG,KAAKkyG,KACLlyG,KAAKmyG,KACLnyG,KAAKoyG,KACLpyG,KAAKqyG,IACL,MAAM,GAAIluG,EAAMqc,QAAUxgB,KAAK4pG,GAC/B5pG,KAAK2sG,GAAWzwE,OAAOl8B,KAAK4oG,GAAgB,GAC5C5oG,KAAK6sG,GAAoB3wE,OAAOl8B,KAAK4oG,GAAgB,GACrD5oG,KAAK4oG,GAAiBz9F,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK2sG,GAAW9pG,OAAS,EAAG7C,KAAK4oG,KAE5E5oG,KAAKkyG,KACLlyG,KAAKmyG,KACLnyG,KAAKoyG,KACLpyG,KAAKqyG,SACC,CACN,MAAMvtG,EAAgB9E,KAAK2pG,GAAiB1tE,QAAa93B,EAAMqc,SACjD,GAAV1b,IACH9E,KAAK4oG,GAAiB9jG,EAEtB9E,KAAKkyG,KACLlyG,KAAKmyG,KACLnyG,KAAKoyG,KACLpyG,KAAKqyG,KAEN,GAGMryG,KAAAorG,GAAmCjnG,IAC1CnE,KAAKkpG,GAAsBlpG,KAAK+oG,GAEhC/oG,KAAKsyG,KACLtyG,KAAKuyG,IAAc,EAGZvyG,KAAAqrG,GAAgClnG,IACvCnE,KAAKkpG,GAAsBlpG,KAAKkpG,GAAsB,EAClDlpG,KAAKkpG,GAAsBlpG,KAAK+oG,KAEnC/oG,KAAKkpG,IAAuBlpG,KAAKgpG,IAGlChpG,KAAKsyG,KACLtyG,KAAKuyG,IAAc,EAGZvyG,KAAAsrG,GAAmCnnG,IAC1CnE,KAAKkpG,GAAsBlpG,KAAKkpG,GAAsB,EACtD,MAAMiD,EAAkBnsG,KAAK+oG,GAAY/oG,KAAKgpG,GAC1ChpG,KAAKkpG,IAAuBiD,IAE/BnsG,KAAKkpG,IAAuBlpG,KAAKgpG,IAGlChpG,KAAKsyG,KACLtyG,KAAKuyG,IAAc,EAGZvyG,KAAAurG,GAAkCpnG,IACzC,MACMgoG,EADmBnsG,KAAK+oG,GACK/oG,KAAKgpG,GACxChpG,KAAKkpG,GAAsBiD,EAAU,EAErCnsG,KAAKsyG,KACLtyG,KAAKuyG,IAAc,EAGZvyG,KAAA+rG,GAAsB5nG,IAC7B,MAAMojD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1CuE,EAAkBntG,KAAKkrG,GAAW5M,QAExC/2C,EAAS4lD,OAASA,EAElBntG,KAAKwyG,KACLxyG,KAAKsyG,IAAmB,EAGjBtyG,KAAAgsG,GAAmC7nG,IAC1C,MAAMojD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1CwE,EAA+BptG,KAAKirG,GAAwB3M,QAElE/2C,EAAS6lD,oBAAsBA,EAE/BptG,KAAKsyG,IAAmB,EAGjBtyG,KAAAisG,GAA+B9nG,IACtC,MACMsuG,EAAgC,CADVzyG,KAAK6yB,EAAK9F,KAAK4Z,YACS,GAC9C+rE,EAx5BR,SAAqBr2E,EAAaC,GACjC,MAAM2rE,EAAa5rE,EAAE,GACf6rE,EAAa7rE,EAAE,GACf8rE,EAAa7rE,EAAE,GAErB,OAAOyrE,GAASE,EADG3rE,EAAE,GACI4rE,EAAKC,EAC/B,CAk5BsCwK,CACnC3yG,KAAK2sG,GAAWh2F,QAAO,CAACi8F,EAAeC,KACtC,MAEMrsB,EAp6BV,SAAqBnqD,EAAaC,GACjC,MAAM2rE,EAAa5rE,EAAE,GACf6rE,EAAa7rE,EAAE,GAGrB,OAAO0rE,GAASE,EAFG3rE,EAAE,GAEI4rE,EADN5rE,EAAE,GAEtB,CA85B4Bw2E,CAFA,CAACD,EAAI/F,MAAO,GACT/E,GAAS8K,EAAI7F,kBAAmB6F,EAAI5F,sBAE/D,OAAOjF,GAAY4K,EAAK5K,GAAYxhB,EAAOisB,GAAqB,GAC9D,CAAC,EAAG,IACPA,GAEKlB,EAAoBmB,EAAkB,GAC5C1yG,KAAKgpG,GAAa79F,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKipG,GAAgBsI,IAE5D,MAAMrF,EAAmBlsG,KAAK+oG,GACxBoD,EAAkBnsG,KAAK+oG,GAAY/oG,KAAKgpG,GAC9ChpG,KAAKkpG,GAAsB/9F,KAAK2L,IAAIo1F,EAAU/gG,KAAKoC,IAAI4+F,EAAU,EAAGnsG,KAAKkpG,KAEzElpG,KAAK+qG,GAAkBznG,MAAQtD,KAAKgpG,GAAa,GACjDhpG,KAAKsyG,KACLtyG,KAAKuyG,IAAc,EAGZvyG,KAAAwrG,GAAqBrnG,IAC5B,MAAM2oG,EAAgB3hG,KAAK2L,IAAI9W,KAAKuoG,GAAWp9F,KAAKoC,IAAIvN,KAAKwoG,IAAYxoG,KAAKwqG,GAAclnG,QACjEtD,KAAK2sG,GAAW3sG,KAAK4oG,IACvCkE,MAAQA,EAEjB9sG,KAAKwqG,GAAclnG,MAAQwpG,EAAQ,GACnC9sG,KAAKmyG,KACLnyG,KAAKgyG,KAELhyG,KAAKqyG,IAAS,EAGPryG,KAAAyrG,GAAsBtnG,IAC7B,MAAMojD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1C8I,EAAiBvmG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIg6C,EAASulD,OAAQ9sG,KAAKyqG,GAAennG,QACjFikD,EAASmqD,OAASA,EAElB1xG,KAAKyqG,GAAennG,MAAQouG,EAAS,GACrC1xG,KAAKgyG,KAELhyG,KAAKqyG,IAAS,EAGPryG,KAAA0rG,GAAwBvnG,IAC/B,MAAM4tG,EAAmB5mG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKwoG,IAAYxoG,KAAK0qG,GAAiBpnG,QAC1DtD,KAAK2sG,GAAW3sG,KAAK4oG,IACvCmJ,SAAWA,EAEpB/xG,KAAK0qG,GAAiBpnG,MAAQyuG,EAAW,GACzC/xG,KAAKgyG,KAELhyG,KAAKqyG,IAAS,EAGPryG,KAAA2rG,GAAwBxnG,IAC/B,MAAM4uG,EAAoB5nG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwQ,cAAe9R,KAAK2qG,GAA0BrnG,QAC9F0vG,EAAsB7nG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwQ,cAAe9R,KAAK4qG,GAA4BtnG,QAClGikD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAChDrhD,EAASylD,kBAAoB+F,EAC7BxrD,EAAS0lD,oBAAsB+F,EAE/BhzG,KAAK2qG,GAA0BrnG,MAAQyvG,EAAY,GACnD/yG,KAAK4qG,GAA4BtnG,MAAQ0vG,EAAc,GACvDhzG,KAAKsyG,IAAmB,EAGjBtyG,KAAA6rG,GAAqB1nG,IAC5B,MAAMojD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1C5uF,EAAmBha,KAAK6yB,EAAK9F,KAAKotB,kBAAkBoN,EAASpgC,SAAY7lB,EAAOuY,UAAY,EAAKvY,EAAO0Y,SACxG2pB,EAAgBx4B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIyM,GAAWha,KAAK8qG,GAAcxnG,QACzEikD,EAAS5jB,MAAQA,EAEjB3jC,KAAK8qG,GAAcxnG,MAAQqgC,EAAQ,GACnC3jC,KAAKuyG,IAAc,EAGZvyG,KAAA4rG,GAAuBznG,IAC9B,MAAMgjB,EAAkBhc,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK0oG,IAAe1oG,KAAK6qG,GAAgBvnG,MAAS,IACpEtD,KAAK2sG,GAAW3sG,KAAK4oG,IACvCzhF,QAAUA,EAEnBnnB,KAAK6qG,GAAgBvnG,MAAS6jB,EAAU,EAAK,GAC7CnnB,KAAKoyG,KACLpyG,KAAKqyG,IAAS,EAGPryG,KAAA8rG,GAAyB3nG,IAChC,MAAMotG,EAAoBpmG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKipG,IAAiBjpG,KAAK+qG,GAAkBznG,QAC5FtD,KAAKgpG,GAAauI,EAElB,MAAMrF,EAAmBlsG,KAAK+oG,GACxBoD,EAAkBnsG,KAAK+oG,GAAY/oG,KAAKgpG,GAC9ChpG,KAAKkpG,GAAsB/9F,KAAK2L,IAAIo1F,EAAU/gG,KAAKoC,IAAI4+F,EAAU,EAAGnsG,KAAKkpG,KAEzElpG,KAAK+qG,GAAkBznG,MAAQiuG,EAAY,GAC3CvxG,KAAKsyG,KACLtyG,KAAKuyG,IAAc,EAGZvyG,KAAcizG,GAAG,KAExB,MAAMtsE,EAAsB3mC,KAAK6yB,EAAK9F,KAAK4Z,YAErCusE,EAAgBpsF,GAAYyJ,gBAE5ByD,EAA2Bh0B,KAAK+pG,GAEhCoJ,EAAoBnzG,KAAKmpG,GAAmBxiE,EAC5CysE,EAAqBpzG,KAAKopG,GAEhC,IAAK,IAAIvkC,EAAe,EAAGA,EAAOl+B,EAAak+B,IAAQ,CACtD,MAAMjuD,EAAYiuD,EAAOsuC,EALF,EAMjBt8F,EANiB,EAOjBw8F,EAAYF,EAAYG,EACxBC,EAAYH,EAAaE,EACzBE,EAA8BztF,EAAImN,KAAK,CAC5Ctc,EAAGA,EACHC,EAAGA,EACHuc,MAAOigF,EACPhgF,OAAQkgF,EACRjuF,MAAO,SAAS4tF,OAEjBl/E,EAAU/vB,YAAYuvG,EACtB,CAGDxzG,KAAKkyG,KACLlyG,KAAKoyG,KACLpyG,KAAKmyG,IAA2B,EAGzBnyG,KAAuBkyG,GAAG,KACjC,MAAM3qD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAChD5oG,KAAKwqG,GAAclnG,MAAQikD,EAASulD,MAAQ,GAC5C9sG,KAAKyqG,GAAennG,MAAQikD,EAASmqD,OAAS,GAC9C1xG,KAAK0qG,GAAiBpnG,MAAQikD,EAASwqD,SAAW,GAClD/xG,KAAK2qG,GAA0BrnG,MAAQikD,EAASylD,kBAAoB,GACpEhtG,KAAK4qG,GAA4BtnG,MAAQikD,EAAS0lD,oBAAsB,GACxEjtG,KAAK6qG,GAAgBvnG,MAASikD,EAASpgC,QAAU,EAAK,GACtDnnB,KAAK8qG,GAAcxnG,MAAQikD,EAAS5jB,MAAQ,GAC5C3jC,KAAKkrG,GAAW5M,QAAU/2C,EAAS4lD,OACnCntG,KAAKirG,GAAwB3M,QAAU/2C,EAAS6lD,oBAChDptG,KAAK+qG,GAAkBznG,MAAQtD,KAAKgpG,GAAa,EAAE,EAG5ChpG,KAAwBoyG,GAAG,KAClC,MAAM7qD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1CzhF,EAAkBogC,EAASpgC,QAC3BnN,EAAmBha,KAAK6yB,EAAK9F,KAAKotB,kBAAkBhzB,GAAY7lB,EAAOuY,UAAY,EAAKvY,EAAO0Y,SACrGha,KAAK8qG,GAAcxnG,MAAQ6H,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIyM,GAAWha,KAAK8qG,GAAcxnG,QAAU,GACxFtD,KAAK8qG,GAAch0F,IAAMkD,EAAW,GAEpCutC,EAAS5jB,OAAS3jC,KAAK8qG,GAAcxnG,KAAK,EAGnCtD,KAAyBmyG,GAAG,KACnC,MAAM5qD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1CkE,EAAgBvlD,EAASulD,MAC/B9sG,KAAKyqG,GAAennG,MAAQ6H,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIu/F,GAAQ9sG,KAAKyqG,GAAennG,QAAU,GACvFtD,KAAKyqG,GAAe3zF,IAAMg2F,EAAQ,GAElCvlD,EAASmqD,QAAU1xG,KAAKyqG,GAAennG,KAAK,EAGrCtD,KAAOqyG,GAAG,KACjBryG,KAAKwyG,KACLxyG,KAAKsyG,KACLtyG,KAAKuyG,KACLvyG,KAAKyzG,IAAwB,EAGtBzzG,KAAsByzG,GAAG,KAChC,MAAMz/E,EAA4Bh0B,KAAK8pG,GAEvC,KAAO9pG,KAAK2pG,GAAiB9mG,OAAS7C,KAAK2sG,GAAW9pG,QAAQ,CAC7D,MAAM6wG,EAAoCzX,GAAO,CAAEhoE,MAAO,gBACxDj0B,KAAK2pG,GAAiB9mG,OAAS,EAAK,IAEtC7C,KAAK2pG,GAAiB5+F,KAAK2oG,GAC3B1/E,EAAUyzE,aAAaiM,EAAgB1zG,KAAK4pG,GAC5C,CACD,IAAK,IAAI/+F,EAAY7K,KAAK6oG,GAAwBh+F,EAAI7K,KAAK2sG,GAAW9pG,OAAQgI,IAAK,CACxC7K,KAAK2pG,GAAiB9+F,GACjDya,MAAMq/E,QAAU,EAC/B,CACD,IAAK,IAAI95F,EAAY7K,KAAK2sG,GAAW9pG,OAAQgI,EAAI7K,KAAK6oG,GAAwBh+F,IAC7E7K,KAAK2pG,GAAiB9+F,GAAGya,MAAMq/E,QAAU,OAG1C,IADA3kG,KAAK6oG,GAAyB7oG,KAAK2sG,GAAW9pG,OACvC7C,KAAK2pG,GAAiB9mG,OAAS7C,KAAKyoG,IAC1Cz0E,EAAUrB,YAAY3yB,KAAK2pG,GAAiB/tE,OAS7C,GAPA57B,KAAK4pG,GAAsBtkF,MAAMq/E,QAAW3kG,KAAK2sG,GAAW9pG,OAAS,EAAK,GAAK,OAC/E7C,KAAK6pG,GAAmBvkF,MAAMq/E,QAAW3kG,KAAK2sG,GAAW9pG,OAAS7C,KAAKyoG,GAAiB,GAAK,OACzFzoG,KAAK2sG,GAAW9pG,OAAS7C,KAAKyoG,GACjCzoG,KAAK4pG,GAAsBn3E,UAAUyI,OAAO,eAE5Cl7B,KAAK4pG,GAAsBn3E,UAAUC,IAAI,eAEtC1yB,KAAK8oG,IAA6B9oG,KAAK4oG,GAAgB,CAC1D,MAAM+K,EAA+B3zG,KAAK2pG,GAAiB3pG,KAAK8oG,IAC/C,MAAb6K,GAAmBA,EAAUlhF,UAAUyI,OAAO,uBACbl7B,KAAK2pG,GAAiB3pG,KAAK4oG,IACtDn2E,UAAUC,IAAI,uBACxB1yB,KAAK8oG,GAA4B9oG,KAAK4oG,EACtC,CAED,IAAK,IAAIrhD,EAAmB,EAAGA,EAAWvnD,KAAK2sG,GAAW9pG,OAAQ0kD,IAAY,CAC7E,MAAMmsD,EAAoC1zG,KAAK2pG,GAAiBpiD,GAC5DA,IAAavnD,KAAK8oG,GACrB4K,EAAepuF,MAAM4tF,MAAQ,GAE7BQ,EAAepuF,MAAM4tF,MAAQpsF,GAAYgJ,WAE1C,CAED,MAAM03E,EAAwB1gF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK2sG,GAAW3sG,KAAK4oG,IAAgBzhF,SAC/GnnB,KAAK8pG,GAAyBxkF,MAAMC,YAAY,mBAAoBiiF,EAAOr/E,aAC3EnoB,KAAK8pG,GAAyBxkF,MAAMC,YAAY,mBAAoBiiF,EAAOt/E,eAC3EloB,KAAK8pG,GAAyBxkF,MAAMC,YAAY,yBAA0BiiF,EAAOv/E,gBACjFjoB,KAAK8pG,GAAyBxkF,MAAMC,YAAY,yBAA0BiiF,EAAOz/E,iBAAiB,EAG3F/nB,KAAYuyG,GAAG,KACtB,MACMqB,EADqB5zG,KAAK2sG,GAAW3sG,KAAK4oG,IACTjlE,MAEjCkwE,GAA0BD,EAAgBtyG,EAAO+O,KAAKrQ,KAAK6yB,EAAK9F,KAAK3pB,KAAKmN,WAAajP,EAAOsY,iBACpG,IAAI+pB,EAAgB,GACpB,GAAIriC,EAAO+O,KAAKwjG,GAAgBvjG,WAC/BqzB,EAAQriC,EAAO+O,KAAKwjG,GAAgBrvG,SAC9B,CACN,MAAMsvG,EAAmBxyG,EAAOkP,oBAAoBojG,EAAgBtyG,EAAOsY,kBAC3E+pB,EAAQriC,EAAO+O,MAAMwjG,EAAiBvyG,EAAOsY,iBAAmBk6F,GAAYxyG,EAAOsY,kBAAkBpV,KACrF,GAAZsvG,EACHnwE,GAAS,KACc,GAAbmwE,IACVnwE,GAAS,IAEV,CACDA,GAASx4B,KAAK0hB,MAAM+mF,EAAgBtyG,EAAOsY,kBAE3C5Z,KAAKiqG,GAAiBnJ,UAAY,OAAO9gG,KAAKkpG,GAAsB,MAAMvlE,GAAO,EAG1E3jC,KAAYwyG,GAAG,KACtB,MAAMjrD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1CkE,EAAgBvlD,EAASulD,MACzB5yD,EAAuBqN,EAASpgC,QAEhCylF,EAA8B5sG,KAAK6sG,GAAoB7sG,KAAK4oG,IAC5DmL,EAAgCnH,EAAkB/pG,OAAS,EAG3DqqG,EADkB3lD,EAAS4lD,OACL,EAAI,EAE1B+F,EAAgBpsF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAMmtB,GAAc/xB,YAC1E6rF,EAA0BltF,GAAY6I,iBAE5C3vB,KAAKsqG,GAAWxlF,aAAa,SAAUouF,GAEvC,MAAMl/E,EAA2Bh0B,KAAKuqG,GAEtC,KAAgC,OAAzBv2E,EAAU1N,YAChB0N,EAAUrB,YAAYqB,EAAU1N,YAGjC,MAAM2tF,EAAkBj0G,KAAKqpG,GAAc,EACrC6K,EAAkBl0G,KAAKspG,GAAe,EACtC6K,EAAsBn0G,KAAK0pG,GAC3B0K,EAA2BjpG,KAAK2L,IAAI9W,KAAKupG,GAAsBp+F,KAAKoC,IAAIvN,KAAKwpG,GAAsBxpG,KAAKqpG,GAAcyD,IAE5H,IAAK,IAAIpQ,EAAe,EAAGA,EAAOoQ,EAAOpQ,IAAQ,CAChD,MAAMz9D,EAAiBy9D,EAAOoQ,EAAS3hG,KAAK2C,GAAK,EAAI3C,KAAK2C,GAAK,EACzD8I,EAAYq9F,EAAU9oG,KAAK4C,IAAIkxB,GAASk1E,EACxCt9F,EAAYq9F,EAAU/oG,KAAK6C,IAAIixB,GAASk1E,EACxCE,EAA+BtuF,EAAIu7E,OAAO,CAC/CiD,GAAI3tF,EACJ4tF,GAAI3tF,EACJ0qF,EAAG6S,EACH9uF,MAAO,WAAW4tF,+BAAmCc,MAElDD,GAAwBnH,EAAkBlQ,EAAOoQ,KAAWI,GAC/DmH,EAAWvvF,aAAa,QAAS,SAASouF,MAE3Cl/E,EAAU/vB,YAAYowG,EACtB,GAGMr0G,KAAiBsyG,GAAG,KAC3B,MAAM3rE,EAAsB3mC,KAAK6yB,EAAK9F,KAAK4Z,YACrC70B,EAAuBxQ,EAAOwQ,aAC9By/D,EAAsBz/D,EAAe60B,EAErC4gB,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1CkE,EAAgBvlD,EAASulD,MACzB5yD,EAAuBqN,EAASpgC,QAChC4lF,EAAmBxlD,EAASylD,kBAAoBzlD,EAAS0lD,oBAEzDL,EAA8B5sG,KAAK6sG,GAAoB7sG,KAAK4oG,IAC5DmL,EAAgCnH,EAAkB/pG,OAAS,EAG3DqqG,EADkB3lD,EAAS4lD,OACL,EAAI,EAE1BC,EAA+B7lD,EAAS6lD,oBAExCkH,EAA+BxtF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAMmtB,GAC3Eg5D,EAAgBoB,EAAcnsF,YAC9BosF,EAAyBD,EAAcpsF,cAKvC0yB,EAAc56C,KAAKkpG,GAAsBlpG,KAAK+oG,GAK9C0D,EAAqB7xD,EAAM22B,EAE3Bv9C,EAA2Bh0B,KAAKgqG,GAEtC,KAAgC,OAAzBh2E,EAAU1N,YAChB0N,EAAUrB,YAAYqB,EAAU1N,YAGjC,IAAIkuF,EAA+B,GAEnC,MACMC,EADoBz0G,KAAKmpG,GAAmBxiE,EACZ70B,EAChCshG,EAAqBpzG,KAAKopG,GAC1BkK,EAAkB,GAElB7F,EAAoBtiG,KAAK0hB,MAAO8Z,EAAciU,EAAOmyD,GACrDW,EAAmBviG,KAAKgS,KAAMwpB,GAAeiU,EAAM,GAAMmyD,GAEzDl2F,EAAYy8F,EACZC,EAAYH,EAAaE,GAC/B,IAAK,IAAI5W,EAAe+Q,EAAW/Q,EAAOgR,EAAUhR,IAAQ,CAC3D,IAAI34D,GAAgC,EAChC4pE,GAA4B,EAEhC,MAAMC,EACLziG,KAAK0hB,MAAM6vE,EAAO5qF,EAAei7F,GAAYN,EAExCoB,EACL1iG,KAAK0hB,OAAO6vE,EAAO,GAAK5qF,EAAei7F,GAAYN,EAGhDmB,EAAmB,IACtB7pE,GAAuB,IAEpBA,GAAwB8pE,EAAiBt8B,KAC5Co8B,GAAmB,GAGpB,MAAMG,EAAwB3iG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIgkE,EAAaq8B,IAC1DG,EAAsB5iG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIgkE,EAAas8B,IAGxDj3F,EAAY08F,EAAUxF,EAAgB2G,EACtCpB,GAHqBtF,EAAcD,GAGV2G,EAAYnB,GAC3C,GAAIS,GAAwBnH,EAAkBlQ,EAAOoQ,KAAWI,EAAI,CACnE,GAAIE,EAAqB,CACxB,MAAMsH,EAAwC3uF,EAAImN,KAAK,CACtDtc,EAAGA,EACHC,EAAGA,EACHuc,MAAOigF,EACPhgF,OAAQkgF,EACRjuF,MAAO,SAASivF,OAEjBvgF,EAAU/vB,YAAYywG,GAEtB,IAAI/E,EAAoBruG,EAAOwU,YAC3B85F,EAAkB,EAEtB,GAAIjC,EAAkB,CACrB,MAAMx/B,GAAsB2/B,EAAgBF,IAAqBC,EAAiBD,GAElF+B,EAD6BxkG,KAAKe,MAAM5K,EAAOwU,aAAe,EAAIxU,EAAOwU,aAAeq4D,GAGxF,MAAMC,GAAoB2/B,EAAcH,IAAqBC,EAAiBD,GAE9EgC,EAD2BzkG,KAAKe,MAAM5K,EAAOwU,aAAe,EAAIxU,EAAOwU,aAAes4D,EAEtF,CAEDuhC,GAAaruG,EAAOwU,YACpB85F,GAAWtuG,EAAOwU,YAElB,MAAM6+F,EAAa/9F,EACbg+F,EAAa/9F,EAAK08F,EAAI,GAAM,EAAI5D,GAChCkF,EAAaj+F,EAAIy8F,EACjByB,EAAaj+F,EAAK08F,EAAI,GAAM,EAAI3D,GAChCmF,EAAan+F,EAAIy8F,EACjB2B,EAAan+F,EAAI08F,EAAKA,EAAI,GAAM,EAAI3D,GACpCqF,EAAar+F,EACbs+F,EAAar+F,EAAI08F,EAAKA,EAAI,GAAM,EAAI5D,GAEpCwF,EAA8BpvF,EAAI6N,KAAK,CAC5CgzE,EAAG,KAAK+N,KAAMC,OAAQC,KAAMC,OAAQC,KAAMC,OAAQC,KAAMC,MACxD5vF,MAAO,SAAS4tF,OAEjBl/E,EAAU/vB,YAAYkxG,EACtB,KAAM,CACN,MAAMA,EAA8BpvF,EAAImN,KAAK,CAC5Ctc,EAAGA,EACHC,EAAGA,EACHuc,MAAOigF,EACPhgF,OAAQkgF,EACRjuF,MAAO,SAAS4tF,OAEjBl/E,EAAU/vB,YAAYkxG,EACtB,CAED,GAAIpxE,EAAsB,CACzB,IAAIqxE,EAA0B,IAC9B,MAAMC,EAAsBlqG,KAAKoC,IAAIgmG,EAAG,IAClC+B,EAAiBz+F,EAAI08F,EAAI,EAE/B,IAAIgC,EACJA,EAAY,KAAO93F,EAAag3F,EAAY3G,EAAgBsH,GAAmB,IAAM33F,EAAa63F,EAAS,GAAMD,GACjHE,GAAa,KAAO93F,EAAag3F,EAAY3G,EAAgBsH,GAAmB,IAAM33F,EAAa63F,EAAS,GAAMD,GAClHE,GAAa,KAAO93F,EAAag3F,EAAY3G,EAAgBsH,EAAkB,GAAK,IAAM33F,EAAa63F,EAAS,GAAMD,GACtHE,GAAa,KAAO93F,EAAag3F,EAAY3G,EAAgBsH,EAAkB,GAAK,IAAM33F,EAAa63F,EAAS,GAAMD,GACtHE,GAAa,KAAO93F,EAAag3F,EAAY3G,EAAgBsH,EAAkB,IAAM,IAAM33F,EAAa63F,GACxGC,GAAa,KAAO93F,EAAag3F,EAAY3G,EAAgBsH,EAAkB,GAAK,IAAM33F,EAAa63F,EAAS,GAAMD,GACtHE,GAAa,KAAO93F,EAAag3F,EAAY3G,EAAgBsH,EAAkB,GAAK,IAAM33F,EAAa63F,EAAS,GAAMD,GAEtH,MAAMG,EAAwBzvF,EAAI6N,OAClC4hF,EAAM1wF,aAAa,IAAKywF,GACxBC,EAAM1wF,aAAa,OAAQgC,GAAYkJ,cAEvCwkF,EAAezpG,KAAKyqG,EACpB,CACD,CACD,CAED,IAAK,IAAI5xF,KAAW4wF,EACnBxgF,EAAU/vB,YAAY2f,EACtB,EA5kCD5jB,KAAK+oG,GAAY/oG,KAAK6yB,EAAK+nB,IAC3B56C,KAAKkpG,GAAsBlpG,KAAK+oG,GAEhC/oG,KAAKipG,GAAiB3nG,EAAOoQ,YAAc1R,KAAK+oG,GAChD/oG,KAAK+qG,GAAkBj0F,IAAM9W,KAAKipG,GAAiB,GAEnDjpG,KAAK0oG,GAAc1oG,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoB,EACzFltB,KAAK6qG,GAAgB/zF,IAAO9W,KAAK0oG,GAAc,EAAK,GAEpD,MAAM+M,EAAuBtqG,KAAK2L,IAAI9W,KAAKuoG,GAAWp9F,KAAKoC,IAAIvN,KAAKwoG,GAAWxoG,KAAK6yB,EAAK9F,KAAK4Z,cACxF+uE,EAAwBvqG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIkoG,EAAc,IAcjE,GAZAz1G,KAAK2sG,GAAa,CAAC,CAClBG,MAAO2I,EACP/D,OAAQgE,EACR3D,SAAU,EACV/E,kBAAmB,EACnBC,oBAAqB,EACrB9lF,QAAShc,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK0oG,GAAa1oG,KAAK6yB,EAAK1L,UAC1Dwc,MAAO,EACPwpE,QAAQ,EACRC,qBAAqB,IAGlBptG,KAAK6yB,EAAK43D,UAAUkrB,mBAAoB,CAG3C31G,KAAK+oG,GAAY/oG,KAAK6yB,EAAK43D,UAAUmrB,gBACrC51G,KAAKkpG,GAAsBlpG,KAAK+oG,GAEhC/oG,KAAKgpG,GAAa79F,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKipG,GAAgBjpG,KAAK6yB,EAAK43D,UAAUorB,oBAEhF71G,KAAK2sG,GAAW,GAAGxlF,QAAUhc,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK0oG,GAAa1oG,KAAK6yB,EAAK43D,UAAUqrB,sBAExF,IAAK,IAAIjrG,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK43D,UAAUsrB,mBAAoBlrG,IACnE7K,KAAK2sG,GAAW5hG,KAAK,CACpB+hG,MAAO2I,EACP/D,OAAQgE,EACR3D,SAAU,EACV/E,kBAAmB,EACnBC,oBAAqB,EACrB9lF,QAAShc,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK0oG,GAAa1oG,KAAK6yB,EAAK43D,UAAUqrB,oBAAsBjrG,IAC1F84B,MAAO,EACPwpE,QAAQ,EACRC,qBAAqB,GAGvB,KAAM,CAGN,MAAM4I,EAAiBj4D,KAAKC,MAAM9mB,OAAO2tB,OAAOthD,aAAaC,QAAQxD,KAAK2oG,MAC1E,GAAiB,MAAbqN,EAAmB,CACtB,MAAMC,EAAoBD,EAAqB,UAC/C,GAAoB,MAAhBC,GAAwBzzG,MAAM8hB,QAAQ2xF,GAAe,CACxD,IAAIC,EAA8B,GAClC,IAAK,IAAIC,KAAeF,EACvBC,EAAgBnrG,KAAK,CACpB+hG,MAAO3hG,KAAK2L,IAAI9W,KAAKuoG,GAAWp9F,KAAKoC,IAAIvN,KAAKwoG,GAAmC,QAAxB3pF,EAAAs3F,EAAmB,aAAK,IAAAt3F,IAAA7e,KAAK6yB,EAAK9F,KAAK4Z,cAChG+qE,OAAQvmG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKwoG,GAAgC,QAArB4N,EAAAD,EAAoB,cAAC,IAAAC,IAAI,IACtErE,SAAU5mG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKwoG,GAAkC,QAAvB/hF,EAAA0vF,EAAsB,gBAAC,IAAA1vF,IAAI,IAC1EumF,kBAAmB7hG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwQ,aAA8C,QAAhC6S,EAAAwxF,EAA+B,yBAAC,IAAAxxF,IAAI,IACjGsoF,oBAAqB9hG,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwQ,aAAgD,QAAlC+S,EAAAsxF,EAAiC,2BAAC,IAAAtxF,IAAI,IACrGsC,QAAShc,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK0oG,GAAayN,EAAqB,UACrExyE,MAA2B,QAApBze,EAAAixF,EAAmB,aAAC,IAAAjxF,IAAI,EAC/BioF,OAA6B,QAArB/nF,EAAA+wF,EAAoB,cAAC,IAAA/wF,KAC7BgoF,oBAAuD,QAAlCiJ,EAAAF,EAAiC,2BAAC,IAAAE,OAKzD,GAFAr2G,KAAK2sG,GAAauJ,EAEa,IAA3Bl2G,KAAK2sG,GAAW9pG,OAAc,CACjC,MAAM0kD,EAAqBvnD,KAAK2sG,GAAW3sG,KAAK4oG,IAC1CzhF,EAAkBhc,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK0oG,GAAa1oG,KAAK6yB,EAAK1L,UACzEogC,EAASpgC,QAAUA,EAEnB,MAAMnN,EAAmBha,KAAK6yB,EAAK9F,KAAKotB,kBAAkBhzB,GAAY7lB,EAAOuY,UAAY,EAAKvY,EAAO0Y,SACrGutC,EAAS5jB,MAAQx4B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIyM,EAAUutC,EAAS5jB,OACzD,CACD,CAED3jC,KAAKgpG,GAAa79F,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKipG,GAA0C,QAA1BqN,EAAAN,EAAqB,iBAAK,IAAAM,IAAAt2G,KAAKgpG,IAC3F,CACD,CAEDhpG,KAAKwxG,KAELxxG,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAChDp9F,KAAK8pG,GAAyB5lG,iBAAiB,QAASlE,KAAKmrG,IAC7DnrG,KAAKkqG,GAA2BhmG,iBAAiB,QAASlE,KAAKorG,IAC/DprG,KAAKmqG,GAAwBjmG,iBAAiB,QAASlE,KAAKqrG,IAC5DrrG,KAAKoqG,GAA2BlmG,iBAAiB,QAASlE,KAAKsrG,IAC/DtrG,KAAKqqG,GAA0BnmG,iBAAiB,QAASlE,KAAKurG,IAC9DvrG,KAAKwqG,GAActmG,iBAAiB,SAAUlE,KAAKwrG,IACnDxrG,KAAKyqG,GAAevmG,iBAAiB,SAAUlE,KAAKyrG,IACpDzrG,KAAK0qG,GAAiBxmG,iBAAiB,SAAUlE,KAAK0rG,IACtD1rG,KAAK2qG,GAA0BzmG,iBAAiB,SAAUlE,KAAK2rG,IAC/D3rG,KAAK4qG,GAA4B1mG,iBAAiB,SAAUlE,KAAK2rG,IACjE3rG,KAAK6qG,GAAgB3mG,iBAAiB,SAAUlE,KAAK4rG,IACrD5rG,KAAK8qG,GAAc5mG,iBAAiB,SAAUlE,KAAK6rG,IACnD7rG,KAAK+qG,GAAkB7mG,iBAAiB,SAAUlE,KAAK8rG,IACvD9rG,KAAKkrG,GAAWhnG,iBAAiB,SAAUlE,KAAK+rG,IAChD/rG,KAAKirG,GAAwB/mG,iBAAiB,SAAUlE,KAAKgsG,IAC7DhsG,KAAKgrG,GAAuB9mG,iBAAiB,QAASlE,KAAKisG,IAE3DjsG,KAAKizG,KACLjzG,KAAKqyG,I,EC7bP,SAASkE,GAASr0E,EAAqBr/B,GACtC,MAAM2zG,EAAoB,IAAIC,YAAY5zG,GAC1C,IAAI6zG,EAAa,EACbC,EAAYxrG,KAAKoC,IAAI20B,EAAO00E,WAAYJ,EAAKI,YACjD,MAAMC,EAAY,CAAC,EAAG,EAAG,EAAG,GAC5B,IAAK,MAAMC,KAAYD,EACtB,GAAIF,GAAaG,EAAU,CAC1B,MAAM5yF,EAAO6yF,EAAaD,EAAU50E,EAAQs0E,EAAME,EAAYC,GAC9DD,EAAaxyF,EAAKwyF,WAClBC,EAAYzyF,EAAKyyF,SACjB,CAEF,OAAOH,EACP,SAASO,EAAaD,EAAkB50E,EAAqBs0E,EAAmBE,EAAoBC,GACnG,IAAIK,EAAiBC,WACrB,OAAQH,GACP,KAAK,EACJE,EAAY5lE,aACZ,MACD,KAAK,EACJ4lE,EAAYhsG,aACZ,MACD,KAAK,EACJgsG,EAAYE,YACZ,MAID,QACCF,EAAYC,WAId,MAAME,EAAc,IAAIH,EAAU90E,EAAQw0E,EAAaC,EAAYG,EAAY,GACzEM,EAAY,IAAIJ,EAAUR,EAAME,EAAaC,EAAYG,EAAY,GAC3E,IAAK,IAAIjsG,EAAY,EAAGA,EAAIusG,EAAUv0G,OAAQgI,IAC7CusG,EAAUvsG,GAAKssG,EAAYtsG,GAE5B,MAAO,CACN6rG,WAAYS,EAAYE,WAAaF,EAAYP,WACjDD,UAAWA,EAAYS,EAAUv0G,OAASi0G,E,CAG7C,C,MAGaQ,GAMZ,WAAAv3G,CAAYw3G,GALJv3G,KAAWw3G,GAAW,EACtBx3G,KAASy3G,GAAW,EAK3Bz3G,KAAK03G,GAAe,IAAIjB,YAAYc,GACpCv3G,KAAK23G,GAAQ,IAAIC,SAAS53G,KAAK03G,G,CAGxB,EAAAG,CAAUC,GACjB93G,KAAKy3G,IAAaK,EACd93G,KAAKy3G,GAAYz3G,KAAK03G,GAAad,aACtC52G,KAAK03G,GAAenB,GAASv2G,KAAK03G,GAAcvsG,KAAK2L,IAAmC,EAA/B9W,KAAK03G,GAAad,WAAgB52G,KAAKy3G,KAChGz3G,KAAK23G,GAAQ,IAAIC,SAAS53G,KAAK03G,I,CAI1B,aAAAK,GACN,OAAO/3G,KAAKw3G,E,CAGN,aAAAQ,CAAclzG,EAAexB,GACnCtD,KAAK23G,GAAMM,UAAUnzG,EAAOxB,IAAU,GAAG,E,CAGnC,WAAA40G,CAAY50G,GAClBA,KAAkB,EAClBtD,KAAK63G,GAAU,GACf73G,KAAK23G,GAAMM,UAAUj4G,KAAKw3G,GAAal0G,GAAO,GAC9CtD,KAAKw3G,GAAcx3G,KAAKy3G,E,CAGlB,WAAAU,CAAY70G,GAClBA,KAAkB,EAClBtD,KAAK63G,GAAU,GACf73G,KAAK23G,GAAMS,SAASp4G,KAAKw3G,GAAcl0G,GAAS,GAAM,KACtDtD,KAAK23G,GAAMS,SAASp4G,KAAKw3G,GAAc,EAAIl0G,GAAS,EAAK,KACzDtD,KAAK23G,GAAMS,SAASp4G,KAAKw3G,GAAc,EAAa,IAAV,GAC1Cx3G,KAAKw3G,GAAcx3G,KAAKy3G,E,CAGlB,WAAAY,CAAY/0G,GAClBA,KAAkB,EAClBtD,KAAK63G,GAAU,GACf73G,KAAK23G,GAAMW,UAAUt4G,KAAKw3G,GAAal0G,GAAO,GAC9CtD,KAAKw3G,GAAcx3G,KAAKy3G,E,CAGlB,UAAAc,CAAWj1G,GACjBA,KAAkB,EAClBtD,KAAK63G,GAAU,GACf73G,KAAK23G,GAAMS,SAASp4G,KAAKw3G,GAAal0G,GACtCtD,KAAKw3G,GAAcx3G,KAAKy3G,E,CAGlB,SAAAe,CAAUl1G,GAChBA,GAAgB,EAChBtD,KAAK63G,GAAU,GACf73G,KAAK23G,GAAMc,QAAQz4G,KAAKw3G,GAAal0G,GACrCtD,KAAKw3G,GAAcx3G,KAAKy3G,E,CAGlB,cAAAiB,CAAep1G,GAErB,IADAA,KAAkB,IACL,IAAM,MAAM,IAAInB,MAAM,kCACnCnC,KAAK63G,GAAU,GACf73G,KAAK23G,GAAMS,SAASp4G,KAAKw3G,GAAal0G,GACtCtD,KAAKw3G,GAAcx3G,KAAKy3G,E,CAGlB,uBAAAkB,CAAwBr1G,GAE9B,IADAA,KAAkB,GACN,UAAY,MAAM,IAAInB,MAAM,sCACxC,IAAIy2G,GAAwB,EAC5B,IAAK,IAAI/tG,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MACMiwC,EAAgBx3C,IADA,GAAS,EAAJuH,EACc,IAC7B,GAARiwC,GAAkB,GAALjwC,IAAQ+tG,GAAe,GACpCA,GAAc54G,KAAKu4G,YAAiB,GAAL1tG,EAAS,EAAO,KAAQiwC,EAC3D,C,CAGK,cAAA+9D,CAAezgE,GACrBp4C,KAAK24G,wBAAwBvgE,EAAOv1C,QACpC,IAAK,IAAIgI,EAAY,EAAGA,EAAIutC,EAAOv1C,OAAQgI,IAAK,CAC/C,MAAM8yF,EAAmBvlD,EAAOjX,WAAWt2B,GAC3C,GAAI8yF,EAAW,IAAM,MAAM,IAAIx7F,MAAM,+CACrCnC,KAAKu4G,WAAW5a,EAChB,C,CAGK,oBAAAmb,GACN,OAAOvC,GAASv2G,KAAK03G,GAAc13G,KAAKy3G,G,EC5InC,MACMsB,GAA+B,KAsG/BC,GAAmD,CAC9D,GAAI,CAAEz4F,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC3C,GAAI,CAAEpB,UAAW,GAAI+jB,SAAU,EAAG3iB,OAAQ,GACzC,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAC3C,GAAI,CAAEpB,UAAW,GAAI+jB,SAAU,EAAG3iB,OAAQ,GACzC,GAAI,CAAEpB,UAAY,EAAG+jB,SAAU,EAAG3iB,OAAQ,GAU3C,GAAI,CAAEpB,UAAW,GAAI+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAW,GAAI+jB,SAAU,EAAG3iB,OAAQ,GAG1C,GAAI,CAAEpB,UAAW,GAAI+jB,SAAU,EAAG3iB,OAAQ,GAC1C,GAAI,CAAEpB,UAAW,GAAI+jB,SAAU,EAAG3iB,OAAQ,IAUrC,SAAUs3F,GAAuBt3F,GAEtC,OAAOxW,KAAKiB,IAAIuV,EAAS,IAAK,GAAO,iBACtC,CClJA,MAAMs6E,OAAEA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,GAAEC,MAAEA,GAAKE,OAAEA,GAAMC,OAAEA,IAAW72E,EAEnD,SAASwzF,GAAKC,EAAaC,EAAc56B,GACrC,OAAO26B,EAAM36B,GAAK46B,EAAOD,EAC7B,CAEA,SAASE,GAAKC,EAAY90G,GACtB,GAAU+Y,UAAWg8F,iBAEjB,YADMh8F,UAAWg8F,iBAAiBD,EAAM90G,GAI5C,MAAMg1G,EAA4B31G,SAASC,cAAc,KACzD,GAAuB0pB,MAAnBgsF,EAAOC,SAAuB,CAC9B,MAAM74G,EAAcugD,IAAIu4D,gBAAgBJ,GACxCv0D,YAAW,WAAc5D,IAAIw4D,gBAAgB/4G,EAAK,GAAI,KACtD44G,EAAOI,KAAOh5G,EACd44G,EAAOC,SAAWj1G,EAIlBugD,YAAW,WAAcy0D,EAAO12G,cAAc,IAAI+2G,WAAW,SAAU,GAAI,EAC9E,KAAM,CACH,MAAMj5G,EAAcugD,IAAIu4D,gBAAgBJ,GACxCv0D,YAAW,WAAc5D,IAAIw4D,gBAAgB/4G,EAAK,GAAI,KACjDikD,OAAOi1D,KAAKl5G,EAAK,YAAWikD,OAAOC,SAAS80D,KAAOh5G,EAC3D,CACL,C,MAEam5G,GAyET,WAAAh6G,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAjEZ7yB,KAAag6G,eAAY,EAChBh6G,KAASi6G,GAAqB7d,GAAM,CAAEnnF,KAAM,OAAQqQ,MAAO,eAAgBhiB,MAAO,eAAgB42G,UAAW,IAAKC,UAAa,cAC/Hn6G,KAAAo6G,GAAwC7nF,GAAI,CAAEjN,MAAO,gBAAkB,IAAI+0F,KAAK,SAChFr6G,KAAYs6G,GAAqBle,GAAM,CAAEnnF,KAAM,aAC/CjV,KAAau6G,GAAqBne,GAAM,CAAE92E,MAAO,cAAerQ,KAAM,SAAU1H,IAAK,IAAKuJ,IAAK,IAAK4lF,KAAM,MAC1G18F,KAAYw6G,GAAqBpe,GAAM,CAAEnnF,KAAM,aAC/CjV,KAAAy6G,GAAmCne,GAAO,CAAEh3E,MAAO,gBAChEi3E,GAAO,CAAEj5F,MAAO,OAAS,wBACzBi5F,GAAO,CAAEj5F,MAAO,OAAS,wBAEzBi5F,GAAO,CAAEj5F,MAAO,QAAU,wBAC1Bi5F,GAAO,CAAEj5F,MAAO,QAAU,yBAC1Bi5F,GAAO,CAAEj5F,MAAO,QAAU,0BAEbtD,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA06G,GAAmCze,GAAO,CAAEhoE,MAAO,eAAgB3O,MAAO,cAAgB,UAC1FtlB,KAAA26G,GAAqCpoF,GAAI,CAAEjN,MAAO,0BAA0BwB,GAAYqJ,8DACxFnwB,KAAoB46G,GAAmBroF,GAAI,CAAEjN,MAAO,8CAAgD,MACpGtlB,KAAwB66G,GAAmBtoF,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYuJ,uEAC9GrwB,KAAK26G,GACL36G,KAAK46G,IAcO56G,KAASg0B,UAAmBzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBAClF62E,GAAG,kBACH5pE,GAAI,CAAEjN,MAAO,4FACT,aACAtlB,KAAKi6G,IAET1nF,GAAI,CAAEjN,MAAO,4FACT,UACAtlB,KAAKo6G,IAET7nF,GAAI,CAAEjN,MAAO,gCACTiN,GAAI,CAAEjN,MAAO,uBACTiN,GAAI,CAAEjN,MAAO,wBAA0B,UACvCiN,GAAI,CAAEjN,MAAO,wBAA0B,eACvCiN,GAAI,CAAEjN,MAAO,wBAA0B,WAE3CiN,GAAI,CAAEjN,MAAO,uBACTiN,GAAI,CAAEjN,MAAO,gDAAkDtlB,KAAKs6G,IACpE/nF,GAAI,CAAEjN,MAAO,gDAAkDtlB,KAAKu6G,IACpEhoF,GAAI,CAAEjN,MAAO,gDAAkDtlB,KAAKw6G,MAG5EjoF,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,gBAAkBtlB,KAAKy6G,IAC9DloF,GAAI,CAAEjN,MAAO,qBAAuB,kGACpCtlB,KAAK66G,GACLtoF,GAAI,CAAEjN,MAAO,+EACTtlB,KAAK06G,IAET16G,KAAK48F,IAoDD58F,KAAM88F,GAAG,KACK,MAAd98F,KAAK00B,QACL10B,KAAK00B,MAAMo0C,eAAgB,GAC/B9oE,KAAKg6G,eAAgB,EACrBh6G,KAAK6yB,EAAKsuD,MAAM,EAObnhF,KAAO+8F,QAAG,KACb/8F,KAAKi6G,GAAUjd,oBAAoB,QAAS+c,GAAae,IACzD96G,KAAKu6G,GAAcvd,oBAAoB,OAAQ+c,GAAa5c,IAC5Dn9F,KAAK06G,GAAc1d,oBAAoB,QAASh9F,KAAK+6G,IACrD/6G,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,GAAgB,EAG/Dp9F,KAAAo9F,GAAmBj5F,IACgB,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SACrDr9F,KAAK+6G,IACR,EA4BG/6G,KAAO+6G,GAAG,KACd,GAA0B,GAAtB/6G,KAAKg6G,cAGT,OADAn1D,OAAOthD,aAAa+5F,QAAQ,eAAgBt9F,KAAKy6G,GAAcn3G,OACvDtD,KAAKy6G,GAAcn3G,OACvB,IAAK,MACDtD,KAAKg6G,eAAgB,EACrBh6G,KAAKg7G,GAAU,OACf,MACJ,IAAK,MACDh7G,KAAKg6G,eAAgB,EACrBh6G,KAAKg7G,GAAU,OACf,MACJ,IAAK,OACDh7G,KAAKg6G,eAAgB,EACrBh6G,KAAKi7G,KACL,MACJ,IAAK,OACDj7G,KAAKg6G,eAAgB,EACrBh6G,KAAKk7G,KACL,MACJ,IAAK,OACDl7G,KAAKm7G,KACL,MACJ,QACI,MAAM,IAAIh5G,MAAM,+BACvB,EA5HDnC,KAAKu6G,GAAcj3G,MAAQ,IAEK,GAA5BtD,KAAK6yB,EAAK9F,KAAKwtB,WACfv6C,KAAKs6G,GAAahc,SAAU,EAC5Bt+F,KAAKs6G,GAAac,UAAW,IAE7Bp7G,KAAKs6G,GAAahc,SAAU,EAC5Bt+F,KAAKs6G,GAAac,UAAW,GAE7Bp7G,KAAK6yB,EAAK9F,KAAKwtB,UAAYv6C,KAAK6yB,EAAK9F,KAAKytB,YAAcx6C,KAAK6yB,EAAK9F,KAAKoJ,UACvEn2B,KAAKw6G,GAAalc,SAAU,EAC5Bt+F,KAAKw6G,GAAaY,UAAW,IAE7Bp7G,KAAKw6G,GAAalc,SAAU,EAC5Bt+F,KAAKw6G,GAAaY,UAAW,GAGjC,MAAMC,EAAkCx2D,OAAOthD,aAAaC,QAAQ,gBAC5C,MAApB63G,IACAr7G,KAAKy6G,GAAcn3G,MAAQ+3G,GAG/Br7G,KAAKi6G,GAAU3d,SACfv3C,YAAW,IAAM/kD,KAAKi6G,GAAUvc,UAEhC19F,KAAKi6G,GAAU/1G,iBAAiB,QAAS61G,GAAae,IACtD96G,KAAKu6G,GAAcr2G,iBAAiB,OAAQ61G,GAAa5c,IACzDn9F,KAAK06G,GAAcx2G,iBAAiB,QAASlE,KAAK+6G,IAClD/6G,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKw6G,GAAat2G,iBAAiB,SAAS,KAASlE,KAAKo6G,GAAsB9zF,WAAoBmH,YAAcztB,KAAKs7G,cAAct7G,KAAK6yB,EAAK6B,MAAMoyC,gBAAgB9mE,KAAKs6G,GAAahc,QAASt+F,KAAKw6G,GAAalc,SAAUt+F,KAAKu6G,GAAcj3G,MAAQ,GAAG,IAC1PtD,KAAKs6G,GAAap2G,iBAAiB,SAAS,KAASlE,KAAKo6G,GAAsB9zF,WAAoBmH,YAAcztB,KAAKs7G,cAAct7G,KAAK6yB,EAAK6B,MAAMoyC,gBAAgB9mE,KAAKs6G,GAAahc,QAASt+F,KAAKw6G,GAAalc,SAAUt+F,KAAKu6G,GAAcj3G,MAAQ,GAAG,IAC1PtD,KAAKu6G,GAAcr2G,iBAAiB,UAAU,KAASlE,KAAKo6G,GAAsB9zF,WAAoBmH,YAAcztB,KAAKs7G,cAAct7G,KAAK6yB,EAAK6B,MAAMoyC,gBAAgB9mE,KAAKs6G,GAAahc,QAASt+F,KAAKw6G,GAAalc,SAAUt+F,KAAKu6G,GAAcj3G,MAAQ,GAAG,IAC5PtD,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAEhDp9F,KAAKi6G,GAAU32G,MAAQuvB,EAAK9F,KAAK2tB,MACjCq/D,GAAae,GAAkB,KAAM96G,KAAKi6G,IAEzCj6G,KAAKo6G,GAAsB9zF,WAAoBmH,YAAcztB,KAAKs7G,cAAct7G,KAAK6yB,EAAK6B,MAAMoyC,gBAAgB9mE,KAAKs6G,GAAahc,QAASt+F,KAAKw6G,GAAalc,SAAUt+F,KAAKu6G,GAAcj3G,MAAQ,G,CAI/L,aAAAg4G,CAAch5G,GAClB,MAAMi5G,EAAqBpwG,KAAKe,MAAM5J,EAAUtC,KAAK6yB,EAAK6B,MAAM82B,kBAC1Dq0B,EAAkB07B,EAAa,GAErC,OADwBpwG,KAAK0hB,MAAM0uF,EAAa,IAC/B,KAAO17B,EAAU,GAAK,IAAM,IAAMA,C,CAUhD,cAAA27B,CAAex1B,GAClBhmF,KAAKi6G,GAAU32G,MAAQ0iF,C,CAiBnB,SAAO80B,CAAkB32G,EAAqBs3G,GAElD,IAAIrf,EACJ,GAAa,MAATj4F,EACAi4F,EAA0Bj4F,EAAMqc,WAC7B,IAAWgN,MAAPiuF,EAIP,OAHArf,EAAQqf,CAIX,CACD,MAAMC,EAAc,qCACpB,GAAIA,EAAYp+F,KAAK8+E,EAAM94F,OAAQ,CAC/B,IAAIq4G,EAA4Bvf,EAAMvL,eACtCuL,EAAM94F,MAAQ84F,EAAM94F,MAAMqa,QAAQ+9F,EAAa,IAC/CC,IACAvf,EAAMwf,kBAAkBD,EAAWA,EACtC,C,CAGG,SAAOxe,CAAgBh5F,GAC3B,MAAMi4F,EAA4Cj4F,EAAMqc,OACxD47E,EAAM94F,MAAQ6H,KAAK0hB,MAAM1hB,KAAK2L,IAAI6Q,OAAOy0E,EAAM7uF,KAAMpC,KAAKoC,IAAIoa,OAAOy0E,EAAMtlF,KAAM6Q,OAAOy0E,EAAM94F,UAAY,E,CAgCtG,EAAAu4G,GAIJ,GAA0B,GAAtB77G,KAAKg6G,cACL,OAIJ,MAAM8B,EAAwD,EAA9B97G,KAAK00B,MAAM82B,iBACrCuwD,EAAuB/7G,KAAKg8G,aAAeF,EAE3CG,EAAyB9wG,KAAKoC,IAAIuuG,EAAiB97G,KAAKk8G,aAAeH,GACvEI,EAAe,IAAInxG,aAAaixG,GAChCG,EAAe,IAAIpxG,aAAaixG,GAgBtC,GAdAj8G,KAAK00B,MAAMo0C,eAAgB,EAC3B9oE,KAAK00B,MAAM2vC,WAAW83C,EAAcC,EAAcH,GAGlDj8G,KAAKq8G,iBAAiBh4G,IAAI83G,EAAcJ,GACxC/7G,KAAKs8G,iBAAiBj4G,IAAI+3G,EAAcL,GAGxC/7G,KAAK26G,GAAmBr1F,MAAMC,YAAY,QAASpa,KAAKe,OAAOlM,KAAKg8G,aAAe,GAAKh8G,KAAKu8G,YAAc,KAAS,KACpHv8G,KAAK46G,GAAqB9Z,UAAY31F,KAAKe,OAAOlM,KAAKg8G,aAAe,GAAKh8G,KAAKu8G,YAAc,KAAS,IAGvGv8G,KAAKg8G,eAEDh8G,KAAKg8G,cAAgBh8G,KAAKu8G,YAI1B,GAFAv8G,KAAK00B,MAAMo0C,eAAgB,EAC3B9oE,KAAK46G,GAAqB9Z,UAAY,cACb,OAArB9gG,KAAKw8G,aACLx8G,KAAKy8G,SAEJ,IAAyB,OAArBz8G,KAAKw8G,aAIV,MAAM,IAAIr6G,MAAM,yCAHhBnC,KAAK08G,IAIR,MAID33D,YAAW,KAAQ/kD,KAAK67G,IAAa,G,CAMrC,EAAAb,CAAU/lG,GAKd,GAHAjV,KAAKw8G,aAAevnG,EACpBjV,KAAKg8G,aAAe,EACpBh8G,KAAK00B,MAAQ,IAAIoT,GAAM9nC,KAAK6yB,EAAK9F,MACrB,OAAR9X,EACAjV,KAAK00B,MAAM82B,iBAAmB,SAE7B,IAAY,OAARv2C,EAIL,MAAM,IAAI9S,MAAM,yCAHhBnC,KAAK00B,MAAM82B,iBAAmB,KAIjC,CAMD,GAJAxrD,KAAK26G,GAAmBr1F,MAAMC,YAAY,QAAS,MACnDvlB,KAAK46G,GAAqB9Z,UAAY,KAEtC9gG,KAAK00B,MAAMwzC,gBAAkBvgD,OAAO3nB,KAAKu6G,GAAcj3G,OAAS,GAC3DtD,KAAKs6G,GAAahc,QACnB,IAAK,IAAIqe,EAAoB,EAAGA,EAAY38G,KAAK6yB,EAAK9F,KAAKwtB,UAAWoiE,IAClE38G,KAAK00B,MAAMk4C,cAKnB5sE,KAAK00B,MAAM4vC,yBACZtkE,KAAK00B,MAAMsvC,kBAAkBhkE,KAAK6yB,EAAK9F,MAEtC/sB,KAAKk8G,aAAel8G,KAAK00B,MAAMoyC,gBAAgB9mE,KAAKs6G,GAAahc,QAASt+F,KAAKw6G,GAAalc,QAASt+F,KAAK00B,MAAMwzC,iBAEhHloE,KAAKu8G,YAAcpxG,KAAKgS,KAAKnd,KAAKk8G,cAA8C,EAA9Bl8G,KAAK00B,MAAM82B,mBAC7DxrD,KAAKq8G,iBAAmB,IAAIrxG,aAAahL,KAAKk8G,cAC9Cl8G,KAAKs8G,iBAAmB,IAAItxG,aAAahL,KAAKk8G,cAG9Cn3D,YAAW,KAAQ/kD,KAAK67G,IAAa,G,CAGjC,EAAAY,GACJ,MAAMP,EAAuBl8G,KAAKq8G,iBAAiBx5G,OAC7C1B,EAAqBnB,KAAK00B,MAAM82B,iBAKhCoxD,EAH0B,EAGcV,EAI9C,IAAIp3G,EAAgB,EACpB,MAAM9C,EAA2B,IAAIy0G,YAHP,GAJC,EAIImG,GAI7BniC,EAAiB,IAAIm9B,SAAS51G,GACpCy4E,EAAKw9B,UAAUnzG,EAAO,YAAY,GAAQA,GAAS,EACnD21E,EAAKw9B,UAAUnzG,EAAO,GAVS,EAUJ83G,GAA8B,GAAO93G,GAAS,EACzE21E,EAAKw9B,UAAUnzG,EAAO,YAAY,GAAQA,GAAS,EACnD21E,EAAKw9B,UAAUnzG,EAAO,YAAY,GAAQA,GAAS,EACnD21E,EAAKw9B,UAAUnzG,EAAO,IAAY,GAAOA,GAAS,EAClD21E,EAAK69B,UAAUxzG,EAAO,GAAQ,GAAOA,GAAS,EAC9C21E,EAAK69B,UAAUxzG,EAhBiB,GAgBO,GAAOA,GAAS,EACvD21E,EAAKw9B,UAAUnzG,EAAO3D,GAAY,GAAO2D,GAAS,EAClD21E,EAAKw9B,UAAUnzG,EAjBgB,EAiBT3D,EAlBU,GAkBqC,GAAO2D,GAAS,EACrF21E,EAAK69B,UAAUxzG,EAAO+3G,GAAkC,GAAO/3G,GAAS,EACxE21E,EAAK69B,UAAUxzG,EAlBe,IAkBO,GAAOA,GAAS,EACrD21E,EAAKw9B,UAAUnzG,EAAO,YAAY,GAAQA,GAAS,EACnD21E,EAAKw9B,UAAUnzG,EArBgB,EAqBT83G,GAA8B,GAAO93G,GAAS,EAE5C,CAEpB,MAAMg4G,EAAgB,MACtB,IAAK,IAAIjyG,EAAY,EAAGA,EAAIqxG,EAAcrxG,IAAK,CAC3C,IAAIkyG,EAAe5xG,KAAK0hB,MAAM1hB,KAAK2L,KAAK,EAAG3L,KAAKoC,IAAI,EAAGvN,KAAKq8G,iBAAiBxxG,KAAOiyG,GAChFE,EAAe7xG,KAAK0hB,MAAM1hB,KAAK2L,KAAK,EAAG3L,KAAKoC,IAAI,EAAGvN,KAAKs8G,iBAAiBzxG,KAAOiyG,GAEhFriC,EAAKwiC,SAASn4G,EAAOi4G,GAAM,GAAOj4G,GAAS,EAC3C21E,EAAKwiC,SAASn4G,EAAOk4G,GAAM,GAAOl4G,GAAS,CAOlD,CACJ,CAWDu0G,GADmB,IAAI6D,KAAK,CAACl7G,GAAc,CAAEiT,KAAM,cACxCjV,KAAKi6G,GAAU32G,MAAMikB,OAAS,QAEzCvnB,KAAK88F,I,CAGD,EAAA4f,GACJ,MAAMS,EAAyB,KAE3B,MAGMC,EAA0B,KAC1BC,EAAkB,IAJEx4D,OAAgB,OAIPy4D,WAHN,EAG+Bt9G,KAAK00B,MAAM82B,iBAFlD,KAGf+xD,EAAiB,GAEjB/nF,EAAmB,IAAIgoF,WAAWx9G,KAAKq8G,iBAAiBx5G,QACxD28F,EAAoB,IAAIge,WAAWx9G,KAAKs8G,iBAAiBz5G,QAE/D,IAAK,IAAIgI,EAAY,EAAGA,EAAI7K,KAAKq8G,iBAAiBx5G,OAAQgI,IACtD2qB,EAAK3qB,GAAKM,KAAK0hB,MAFG,MAEG1hB,KAAK2L,KAAK,EAAG3L,KAAKoC,IAAI,EAAGvN,KAAKq8G,iBAAiBxxG,MACpE20F,EAAM30F,GAAKM,KAAK0hB,MAHE,MAGI1hB,KAAK2L,KAAK,EAAG3L,KAAKoC,IAAI,EAAGvN,KAAKs8G,iBAAiBzxG,MAGzE,IAAK,IAAIA,EAAY,EAAGA,EAAI2qB,EAAK3yB,OAAQgI,GAAKuyG,EAAiB,CAC3D,MAAMK,EAAwBjoF,EAAKkoF,SAAS7yG,EAAGA,EAAIuyG,GAC7CO,EAAyBne,EAAMke,SAAS7yG,EAAGA,EAAIuyG,GAC/CQ,EAAcP,EAAWQ,aAAaJ,EAAWE,GACnDC,EAAO/6G,OAAS,GAAG06G,EAAQxyG,KAAK6yG,EACvC,CAED,MAAMA,EAAcP,EAAWS,QAC3BF,EAAO/6G,OAAS,GAAG06G,EAAQxyG,KAAK6yG,GAGpCvE,GADmB,IAAI6D,KAAKK,EAAS,CAAEtoG,KAAM,cAClCjV,KAAKi6G,GAAU32G,MAAMikB,OAAS,QACzCvnB,KAAK88F,IAAQ,EAGjB,GAAI,WAAYj4C,OACZs4D,QACG,CACH,IAAIv5G,EAASC,SAASC,cAAc,UACpCF,EAAOG,IAAM,wDACbH,EAAOm6G,OAASZ,EAChBt5G,SAASG,KAAKC,YAAYL,EAC7B,C,CAGG,EAAAq3G,GACJ,MAAMluF,EAAa/sB,KAAK6yB,EAAK9F,KAEvBixF,EADkC,EACmB18G,EAAOyQ,aAAezQ,EAAOwQ,aAClFmsG,EAFkC,EAEmB38G,EAAOyQ,aAG5Dg2C,EAAyBh7B,EAAK68B,oBAC9Bs0D,EAA8B/yG,KAAKe,MAFHiyG,IAEiCp2D,GAEjEq2D,EAA0BJ,EAAmBjxF,EAAK4Z,YAClD03E,EAAyB,GAGzBC,EAAyB,GAC/B,GAAIt+G,KAAKs6G,GAAahc,QAClB,IAAK,IAAI1jD,EAAc,EAAGA,EAAM7tB,EAAKwtB,UAAWK,IAC5C0jE,EAAavzG,KAAK6vC,GAG1B,IAAK,IAAI2jE,EAAoB,EAAGA,EAAY52F,OAAO3nB,KAAKu6G,GAAcj3G,OAAQi7G,IAC1E,IAAK,IAAI3jE,EAAc7tB,EAAKwtB,UAAWK,EAAM7tB,EAAKwtB,UAAYxtB,EAAKytB,WAAYI,IAC3E0jE,EAAavzG,KAAK6vC,GAG1B,GAAI56C,KAAKw6G,GAAalc,QAClB,IAAK,IAAI1jD,EAAc7tB,EAAKwtB,UAAYxtB,EAAKytB,WAAYI,EAAM7tB,EAAKoJ,SAAUykB,IAC1E0jE,EAAavzG,KAAK6vC,GAI1B,MAAM4jE,EAAS,CAAC,CAAEC,QAAQ,EAAMt3F,SAAU,EAAGu3F,aAAc,EAAG3+F,SAAS,EAAO4+F,WAAW,IACzF,IAAIC,EAA6B,EAC7BC,GAAyB,EAC7B,IAAK,IAAI13F,EAAkB,EAAGA,EAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmB/F,IACzG,GAAK03F,GAAqE,GAApD7+G,KAAK6yB,EAAK9F,KAAKurB,SAASnxB,GAAS6d,YAAY,GAAG/vB,KAG/D,CACH,GAAI2pG,GAAsB,GAAI,SAC9BJ,EAAOzzG,KAAK,CAAE0zG,QAAQ,EAAOt3F,QAASA,EAASu3F,YAAaE,IAAsB7+F,QAAS/f,KAAK6yB,EAAK9F,KAAKotB,kBAAkBhzB,GAAUw3F,WAAW,IACvH,GAAtBC,GAAyBA,GAChC,MANGJ,EAAOzzG,KAAK,CAAE0zG,QAAQ,EAAOt3F,QAASA,EAASu3F,YAAa,EAAG3+F,SAAS,EAAM4+F,WAAW,IACzFE,GAAgB,EAQxB,MAAMC,EAA4B,IAAIxH,GAAkB,MACxDwH,EAAO5G,YAAW,YAClB4G,EAAO5G,YAAY,GACnB4G,EAAOzG,YAAW,GAClByG,EAAOzG,YAAYmG,EAAO37G,QAC1Bi8G,EAAOzG,YAAY2F,GAEnB,IAAK,MAAMe,KAASP,EAAQ,CACxBM,EAAO5G,YAAW,YAElB,MAAMuG,OAAEA,EAAMt3F,QAAEA,EAAOu3F,YAAEA,EAAW3+F,QAAEA,EAAO4+F,UAAEA,GAAcI,EAGvDC,EAA0BF,EAAO/G,gBACvC+G,EAAO5G,YAAY,GAEnB,IAAI+G,EAAmB,EACnBC,EAAuB,EAC3B,MAAMC,EAAiB,SAAU17E,GAC7B,GAAIA,EAAOw7E,EAAU,MAAM,IAAI98G,MAAM,wCACrC28G,EAAOnG,wBAAwBl1E,EAAOw7E,GACtCA,EAAWx7E,CACf,EAEM27E,EAAoB,SAAUC,EAAkC/7G,GAClE,KAAMA,GAAS,GAAKA,GAAS,KAAO,MAAM,IAAInB,MAAM,0CAA4CmB,GAChGw7G,EAAOvG,WAAW,IAA8BmG,GAChDI,EAAOpG,eAAe2G,GACtBP,EAAOpG,eAAuB,EAARp1G,EAC1B,EAEA,GAAIm7G,EAAQ,CAGRU,EAAe,GACfL,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,GACrBoG,EAAOjG,eAAe,sCAEtBsG,EAAe,GACfL,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,IACrBoG,EAAOnG,wBAAwB,GAC/BmG,EAAO3G,YAAY+F,GAEnBiB,EAAe,GACfL,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,IACrBoG,EAAOnG,wBAAwB,GAC/BmG,EAAOvG,WAAWxrF,EAAK4Z,aACvBm4E,EAAOvG,WAAW,GAClBuG,EAAOvG,WAAW,IAClBuG,EAAOvG,WAAW,GAC9B,IAAI+G,EAAYvyF,EAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,MAAQioB,EAAKsrB,YAAc/2C,EAAO4O,OAAO6c,EAAKutB,OAAOlqC,MAC1G,MAAMmvG,EAAmBD,EAAU,KAAOA,EAAU,GAC9Cl8G,EAAc2pB,EAAK3pB,IACzB,IAAIo8G,EAAoBp8G,EAGxB,IAFiB,IAAN,EAANA,KAAeo8G,GAAa,GAC7BD,IAASC,GAAa,GACnBA,EAAY,GAAGA,GAAa,GAEnCL,EAAe,GACfL,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,IACrBoG,EAAOnG,wBAAwB,GAC/BmG,EAAOtG,UAAUgH,GACjBV,EAAOvG,WAAWgH,EAAU,EAAI,GAE5Bv/G,KAAKs6G,GAAahc,UAAS4gB,GAAgBd,EAAkBrxF,EAAKwtB,WACtE4kE,EAAeD,GACfJ,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,GACrBoG,EAAOjG,eAAe,cAEtB,IAAK,IAAI0F,EAAoB,EAAGA,EAAY59E,SAAS3gC,KAAKu6G,GAAcj3G,OAAQi7G,IAC5EW,GAAgBd,EAAkBrxF,EAAKytB,WACvC2kE,EAAeD,GACfJ,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,GACrBoG,EAAOjG,eAAe0F,EAAY52F,OAAO3nB,KAAKu6G,GAAcj3G,OAAS,EAAI,cAAgB,YAI7F,GADItD,KAAKw6G,GAAalc,UAAS4gB,GAAgBd,GAAmBrxF,EAAKoJ,SAAWpJ,EAAKwtB,UAAYxtB,EAAKytB,aACpG0kE,GAAgBd,EAAkBE,EAAaz7G,OAAQ,MAAM,IAAIV,MAAM,gCAE9E,KAAM,CAGH,IAAIs9G,EAAsB1/F,EACpB,iBAAmBoH,EACnB,iBAAmBA,EACzBg4F,EAAe,GACfL,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,GACrBoG,EAAOjG,eAAe4G,GAGtBN,EAAe,GAAIC,EAAiB,OACpCD,EAAe,GAAIC,EAAiB,OACpCD,EAAe,GAAIC,EAAiB,EAA0Cf,GAC9Ec,EAAe,GAAIC,EAAiB,GAA0C,GAC9ED,EAAe,GAAIC,EAAiB,SACpCD,EAAe,GAAIC,EAAiB,SAEpC,IAAIM,GAA+B,EACnC,SAASC,EAAwB1jE,GAC7B,MAAMr9B,EAAyBmO,EAAKurB,SAASnxB,GAAS6d,YAAYiX,GAC5D39B,EAAwBV,EAAaC,cAAce,EAAWN,QAEpE,GAAIohG,GAAuBzjE,EAAiB,CAOxC,GANAyjE,EAAsBzjE,EACtBkjE,EAAeD,GACfJ,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,GACrBoG,EAAOjG,eAAe,eAAiB58D,EAAkB,KAEpD0iE,EAAW,CACZ,IAAIiB,EAA4B,GAEhC,GAAc,MAAVthG,GAAwCkP,MAAtBlP,EAAOE,YACzBohG,EAAoBthG,EAAOE,iBACxB,GAAmB,GAAfI,EAAW3J,KAElB2qG,EAAoB,SAEpB,GAAmB,GAAfhhG,EAAW3J,MAA+C,GAAf2J,EAAW3J,KAElD2qG,EADA7/F,EACoB,IAEA,QAErB,GAAmB,GAAfnB,EAAW3J,KACd8kG,GAAa8F,oBAAoBh9G,OAAS+b,EAAWvd,WACrDu+G,EAAoB7F,GAAa8F,oBAAoBjhG,EAAWvd,gBAEjE,GAAmB,GAAfud,EAAW3J,MAA6C,GAAf2J,EAAW3J,MAAoE,IAAvC2J,EAAW3J,MAA+C,GAAf2J,EAAW3J,KAC9I2qG,EAAoB,QACjB,GAAmB,GAAfhhG,EAAW3J,KAClB2qG,EAAoB,OACjB,IAAmB,GAAfhhG,EAAW3J,KAGlB,MAAM,IAAI9S,MAAM,iCAFhBy9G,EAAoB,EAGvB,CAILT,EAAeD,GACfJ,EAAOvG,WAAW,IAA8BmG,GAChDI,EAAOpG,eAAekH,EACzB,CAGDT,EAAeD,GACf,IAAIz/B,GD5dWE,EC4duC73C,GAAMm4B,6BAA6BrhD,EAAW+C,QD3dlE,IAAlDxW,KAAKiB,IAAiB,kBAAbuzE,EAAiC,MC4d1By/B,EAAqD,EAAAj0G,KAAKoC,IAAI,IAAMpC,KAAKe,MAAMuzE,KAG/E0/B,EAAeD,GACf,IAAIY,EAAkE,IAAzClhG,EAAW4D,IAAMlhB,EAAO2U,UAAY,GAAY,GAC7EmpG,EAAkD,GAAAj0G,KAAKoC,IAAI,IAAMpC,KAAKe,MAAM4zG,IAC/E,CDnef,IAAiCngC,C,CCqeY,MAA/B5yD,EAAK48B,WAAWxiC,EAAS,IAGzBw4F,EAAwB,GAG5B,IAAII,EAAwBhH,GACxBiH,EDzoByB,IC0oBzBC,GAA6C,EAEjD,MAAMC,EAAsBngG,EAAUze,EAAOkX,kBAAoBlX,EAAO+O,KAAK0c,EAAK3pB,KAAKmN,UACjFiiE,EAAwBzyD,EAAUze,EAAOqY,cAAgB,EAE/D,IAAK,MAAMihC,KAAO0jE,EAAc,CAC5B,MAAM3jE,EAA0B5tB,EAAK48B,WAAWxiC,EAASyzB,GAEzD,GAAe,MAAXD,EAAiB,CAEjB,MAAMsB,EAA0BtB,EAAQ3V,YAAY,GAC9CpmB,EAAyBmO,EAAKurB,SAASnxB,GAAS6d,YAAYiX,GAC5D39B,EAAwBV,EAAaC,cAAce,EAAWN,QACpEqhG,EAAwB1jE,GAExB,IAAIkkE,EAAwBvhG,EAAWgyB,WAAW35B,YAC9CmpG,EAAoBD,EAAe,EAAI7+G,EAAO8V,aAC9CwH,EAAWgyB,WAAW55B,iBACH,GAAf4H,EAAW3J,MAA8C,GAAf2J,EAAW3J,MACrDmrG,EAAY,EACZD,GAAe,GACO,GAAfvhG,EAAW3J,KAClBmrG,EAAY9+G,EAAO+V,cAEnB5M,QAAQxH,MAAM,0DAA4D2b,EAAW3J,OAI7F,IAAK,IAAIogF,EAAoB,EAAGA,EAAY16C,EAAQ5V,MAAMliC,OAAQwyF,IAAa,CAC3E,MAAMnwD,EAAayV,EAAQ5V,MAAMswD,GAE3BgrB,GAAwBnB,EAAeh6E,EAAKlF,MAAQi+E,EAC1D,IAAIqC,GAAkBD,GAClBE,GAAkBr7E,EAAKpB,KAAK,GAAG1I,KAC/BolF,GAAsBt7E,EAAKpB,KAAK,GAAG7iB,SACvC,MAAMw/F,GAAwB,EAAE,GAAI,GAAI,GAAI,GACtCC,GAAwB,EAAE,GAAI,GAAI,GAAI,GACtC5wC,GAAoB3kE,KAAKoC,IAAI6yG,EAAWl7E,EAAKrB,QAAQhhC,QACrD89G,GAAmBhC,EAAYxzG,KAAK2L,IAAI,EAAG3L,KAAKe,MAlPtC,GAkPkEg5B,EAAKpB,KAAK,GAAG1I,KAAO95B,EAAOwU,cAlP7F,GAuPhB,IAAIouB,GAAuBgB,EAAKlB,mBAC5B48E,GAAsB18E,GAAesuC,EACzC,IAAKmsC,EAAW,CACZ,IAAIkC,GAAyBxC,EACzByC,IAAyB,GAC7B,IAAK,IAAI38E,GAAmB,EAAGA,GAAWe,EAAKpB,KAAKjhC,OAAQshC,KAAY,CACpE,MAAMljB,GAAWikB,EAAKpB,KAAKK,IAAUljB,SAAWuxD,EAChDquC,GAAiB11G,KAAKoC,IAAIszG,GAAgB5/F,GAAWo9F,GACrDyC,GAAiB31G,KAAK2L,IAAIgqG,GAAgB7/F,GAAWo9F,EACxD,CAeDuC,GAAcz1G,KAAKoC,IAAIszG,GAAgB11G,KAAK2L,IAAIgqG,GAAgBF,IACnE,CAED,IAAK,IAAIz8E,GAAmB,EAAGA,GAAWe,EAAKpB,KAAKjhC,OAAQshC,KAAY,CACpE,MAAM4+C,GAAsBs9B,GAAgBn7E,EAAKpB,KAAKK,IAAUV,KAAOw6E,EACjE8C,GAAsB77E,EAAKpB,KAAKK,IAAU/I,KAC1C4lF,GAA0B97E,EAAKpB,KAAKK,IAAUljB,SAE9Cpe,GAAiBkgF,GAAcu9B,GACrC,IAAK,IAAIW,GAAmB,EAAGA,GAAWp+G,GAAQo+G,KAAY,CAC1D,MAAMC,GAAuBZ,GAAUW,GACjCE,GAAqBjI,GAAKqH,GAASQ,GAAaE,GAAWp+G,IAG3Doe,GAFyBi4F,GAAKsH,GAAaQ,GAAiBC,GAAWp+G,IAEnC2vE,EAAgBouC,GAEpD76E,GAAoB56B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAI,MAAQpC,KAAKe,MAAM,MAAU,EAAM+U,GAAWo9F,MAEvF55G,GAAqB0G,KAAKoC,IAAI,IAAMpC,KAAKe,OD5jBxCyzE,EC4jByE73C,GAAM6rB,qBAAqBwtD,ID3jB1G,IAA7Bh2G,KAAKiB,IAAIuzE,EAAY,QC6jBW55C,IAAag6E,IACbZ,EAAe+B,IACfpC,EAAOvG,WAAW,IAA0BmG,GAC5CI,EAAOpG,eAA2B,IAAZ3yE,IACtB+4E,EAAOpG,eAAgB3yE,IAAa,EAAK,KACzCg6E,EAAgBh6E,IAGhBthC,IAAcu7G,GAAmBrB,IACjCQ,EAAe+B,IACf9B,EAAiB,GAAwC36G,IACzDu7G,EAAiBv7G,IAGrB,MAAM28G,GAAwBF,IAAgBb,GAC9C,IAAK,IAAIzwC,GAAoB,EAAGA,GAAYE,GAAWF,KAAa,CAChE,IAAIhzB,GAAoB1X,EAAKrB,QAAQ+rC,IACrC,GAAI+uC,EAAW,CACX/hE,IAAa1Y,GACb,MAAMm9E,GAAuB,CACzB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEJ,GAAIzkE,GAAY,GAAKA,IAAaykE,GAAWx+G,OAAQ,MAAM,IAAIV,MAAM,+CAAiDy6C,IACtHA,GAAYykE,GAAWzkE,GAC1B,KAAM,CACH,GAAIujE,GAAgBj7E,EAAKrB,QAAQhhC,OAAS+sE,GAAY,GAAKA,IAAaE,GAAY,EAAG,CACnF,MAAMwxC,IAAsBJ,GAAehC,GAAgBlB,EACrDuD,GAAuBjgH,EAAO0Q,iBAAmBisG,EAAmB38G,EAAOyQ,aAC3ErD,GAAmBvD,KAAK0hB,MAAMy0F,GAAqBC,IACzD3kE,GAAY1X,EAAKrB,QAAQ+rC,GAAYrhE,EAAsB22B,EAAKrB,QAAQhhC,OAAS+sE,GAAWhxD,EAAWqD,eAAgBvT,IAC1H,CACDkuC,GAAYsjE,EAActjE,GAAY41B,EAAgBouC,GACxC,MAAVtiG,GAAmDkP,MAAjClP,EAAO0C,uBACzB47B,IAAa,GAAKt+B,EAAO0C,uBAClBjB,IACP68B,IAAa,IAAOh/B,EAAaK,iBAAiBjZ,WAAW,gBAAgBkZ,QAAQlZ,WAAW,cAAcgc,wBAG9GjB,IAAS68B,IAAa,EAC7B,CACDA,GAAYzxC,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAI,IAAKqvC,KACtC8jE,GAAY9wC,IAAahzB,GAEpBwkE,IAAgBX,GAAY7wC,KAAc8wC,GAAY9wC,MACvDuvC,EAAe+B,IACfpC,EAAOvG,WAAW,IAAwBmG,GAC1CI,EAAOpG,eAAe+H,GAAY7wC,KAClCkvC,EAAOpG,eAAeiI,IAE7B,CAED,IAAK,IAAI/wC,GAAoB,EAAGA,GAAYE,GAAWF,MAC/CwxC,IAAgBX,GAAY7wC,KAAc8wC,GAAY9wC,OACtDuvC,EAAe+B,IACfpC,EAAOvG,WAAW,IAAuBmG,GACzCI,EAAOpG,eAAegI,GAAY9wC,KAClCkvC,EAAOpG,eAAeiI,IACtBF,GAAY7wC,IAAa8wC,GAAY9wC,IAGhD,CAED0wC,GAAUv9B,GACVw9B,GAAUQ,GACVP,GAAcQ,EACjB,CAEtB,MAAMQ,GAAsBtC,EAAeh6E,EAAKjF,IAAMg+E,EAGtD,IAAK,IAAIruC,GAAoB,EAAGA,GAAYE,GAAWF,KAItDuvC,EAAeqC,IACf1C,EAAOvG,WAAW,IAAwBmG,GAC1CI,EAAOpG,eAAe+H,GAAY7wC,KAClCkvC,EAAOpG,eAAeiI,IAGvBV,GAAoC,CACpC,CACD,MACIA,IACHA,GAAoC,EDh0BE,KCk0BlCD,IACHA,EDn0BqC,ICq0BrCb,EAAeD,GACfE,EAAiB,GAAwCY,IAGtDD,GAAiBhH,KAEpBgH,EAAgBhH,GAChBoG,EAAeD,GACfJ,EAAOvG,WAAW,IAA0BmG,GAC5CI,EAAOpG,eAA+B,IAAhBqH,GACtBjB,EAAOpG,eAAgBqH,GAAiB,EAAK,OAKhDb,GAAgBd,CAChB,CACD,CAEDe,EAAeD,GACfJ,EAAOvG,WAAU,KACjBuG,EAAOpG,eAAc,IACrBoG,EAAOnG,wBAAwB,GAG/BmG,EAAO9G,cAAcgH,EAAiBF,EAAO/G,gBAAkBiH,EAAkB,EACjF,CD5rBG,IAAqCr/B,EC+rBzC05B,GADmB,IAAI6D,KAAK,CAAC4B,EAAOhG,wBAAyB,CAAC7jG,KAAM,eACzDjV,KAAKi6G,GAAU32G,MAAMikB,OAAS,QAEzCvnB,KAAK88F,I,CAGE,EAAAoe,GACP,MAAMlzD,EAAqBhoD,KAAK6yB,EAAK9F,KAAKqY,aAAaplC,KAAKs6G,GAAahc,QAAS32E,OAAO3nB,KAAKu6G,GAAcj3G,OAAQtD,KAAKw6G,GAAalc,SAChImjB,EAAqB1jE,KAAKklD,UAAUj7C,EAAY,KAAM,MAE5DqxD,GADmB,IAAI6D,KAAK,CAACuE,GAAa,CAACxsG,KAAM,qBACtCjV,KAAKi6G,GAAU32G,MAAMikB,OAAS,SACzCvnB,KAAK88F,I,CAGK,EAAAqe,GACJ,MAAMuG,EAAe,8HAKD,IAAIvgE,IAAI,IAAMnhD,KAAK6yB,EAAK9F,KAAK8tB,iBAAkBiK,SAAS80D,MAAMA,8SAsBlFP,GADmB,IAAI6D,KAAK,CAACwE,GAAe,CAAEzsG,KAAM,cACzCjV,KAAKi6G,GAAU32G,MAAMikB,OAAS,SACzCvnB,KAAK88F,I,EAv0Beid,GAAA8F,oBAAgC,CACpD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,I,MC3EK8B,GAucL,gBAAOC,CAAUC,GACvB7hH,KAAKqnB,EAAcoG,YAAcztB,KAAK8hH,GAAWD,E,EAvc1BF,GAAAG,GAAoC,CAC3DC,MAAS,GACTC,KAAQ,8yEAwEcl7F,GAAYuJ,sBAAsBvJ,GAAY6I,iQAOnD7I,GAAY6I,uIAGN7I,GAAYuJ,oDACZvJ,GAAY6I,wIAGZ7I,GAAY6I,8CAInCsyF,KAAQ,kqDAwDSn7F,GAAY6I,4KAMZ7I,GAAY6I,sKAMZ7I,GAAY6I,yTAWP7I,GAAYuJ,sBAAsBvJ,GAAY6I,iQAOnD7I,GAAY6I,uIAGN7I,GAAYuJ,oDACZvJ,GAAY6I,wIAGZ7I,GAAY6I,8CAInCuyF,KAAQ,84DA6DSp7F,GAAY6I,4KAMZ7I,GAAY6I,sKAMZ7I,GAAY6I,2IAQ7B,mBAAoB,0rEAwEE7I,GAAYuJ,sBAAsBvJ,GAAY6I,iQAOnD7I,GAAY6I,uIAGN7I,GAAYuJ,oDACZvJ,GAAY6I,wIAGZ7I,GAAY6I,8CAIrCwyF,MAAS,otEAwEer7F,GAAYuJ,sBAAsBvJ,GAAY6I,iQAOnD7I,GAAY6I,uIAGN7I,GAAYuJ,oDACZvJ,GAAY6I,wIAGZ7I,GAAY6I,+CAMXgyF,GAAAt6F,EAAkCxjB,SAASG,KAAKC,YAAYyhB,EAAKJ,MAAM,CAACrQ,KAAM,c,MChc3FmtG,GA0BZ,WAAAriH,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAzBH7yB,KAAY+yB,EAAW,IACvB/yB,KAAagzB,EAAW,GACvBhzB,KAAQqiH,GAAkBt8F,EAAIwN,IAAI,CAAC,iBAAkB,SACrDvzB,KAAOsiH,GAAkBv8F,EAAIwN,IAAI,CAAC,iBAAkB,SACpDvzB,KAAMuiH,GAAmBx8F,EAAI6N,KAAK,CAACT,KAAM,OAAQO,OAAQ,eAAgB,eAAgB,EAAG,iBAAkB,SAC/G1zB,KAAkBwiH,GAAqB,GACtCxiH,KAA0ByiH,GAAkB18F,EAAIwN,IAAI,CAAC,iBAAkB,SACxEvzB,KAAI+zB,EAAkBhO,EAAIwN,IAAI,CAAEjO,MAAO,4FAA6F8N,MAAO,OAAQC,OAAQ,OAAQ8rE,QAAS,OAASn/F,KAAK+yB,EAAe,IAAM/yB,KAAKgzB,EAAeosE,oBAAqB,QACxQp/F,KAAKqiH,GACLriH,KAAKsiH,GACLtiH,KAAKuiH,GACLviH,KAAKyiH,IAGUziH,KAAAg0B,UAAyBtO,EAAK6M,IAAI,CAAC0B,MAAO,YAAa3O,MAAO,iBAAkBtlB,KAAK+zB,GAE7F/zB,KAAOk0B,EAAW,EAClBl0B,KAAOw+F,GAAW,EAClBx+F,KAAS0iH,GAAW,EACpB1iH,KAAQ2iH,GAAW,EACnB3iH,KAAUm0B,GAAY,EACtBn0B,KAAO4iH,GAA2B,KAClC5iH,KAAa6iH,GAAW,GACxB7iH,KAAe8iH,IAAY,EAiC3B9iH,KAAAk1B,EAAqB/wB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GAExCx+F,KAAK0iH,GAAY1iH,KAAKojG,GAASpjG,KAAKk0B,GACpCl0B,KAAK2iH,GAAW3iH,KAAK+iH,GAAQ/iH,KAAKw+F,IAClCx+F,KAAK81B,IAAkB,EAGhB91B,KAAA21B,EAAqBxxB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GAExCx+F,KAAK0iH,GAAY1iH,KAAKojG,GAASpjG,KAAKk0B,GACpCl0B,KAAK2iH,GAAW3iH,KAAK+iH,GAAQ/iH,KAAKw+F,IAClCx+F,KAAK81B,IAAkB,EAGhB91B,KAAA61B,EAAmB1xB,IAC1B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,MAAMzqE,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EAGhB91B,KAAA+1B,GAAmB5xB,IAC1B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,IAAK7/F,KAAKm0B,EAAY,OACtBhwB,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EAgChB91B,KAAAg2B,GAAuB7xB,IAC1BnE,KAAKm0B,IACRn0B,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,IACtB5iH,KAAK4iH,GAAU,MAEhB5iH,KAAKm0B,GAAa,CAAK,EAlHvB,IAAK,IAAItpB,EAAY,EAAGA,GAAKvJ,EAAOuX,uBAAwBhO,GAAQ,EAClE7K,KAAKqiH,GAASp+G,YAAY8hB,EAAImN,KAAK,CAACC,KAAMrM,GAAY0J,MAAO5Z,GAAI/L,EAAE,KAAQ7K,KAAK+yB,EAAe,IAAMzxB,EAAOuX,uBAAyB,GAAK,EAAGhC,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,KAE5K,IAAK,IAAInoB,EAAY,EAAGA,GAAKvJ,EAAOuX,uBAAwBhO,GAAQ,EAClE7K,KAAKsiH,GAAQr+G,YAAY8hB,EAAImN,KAAK,CAACC,KAAMrM,GAAY2J,UAAW7Z,GAAI/L,EAAE,KAAQ7K,KAAK+yB,EAAe,IAAMzxB,EAAOuX,uBAAyB,GAAK,EAAGhC,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,KAE/K,IAAK,IAAInoB,EAAY,EAAGA,EAAI,EAAGA,IAAK,CAClC,MAAMqoB,EAAuBnN,EAAImN,KAAK,CAACC,KAAM,eAAgBvc,EAAI5W,KAAK+yB,EAAmB,EAAJloB,EAAQ,EAAIgM,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,IAC/HhzB,KAAKwiH,GAAmBz3G,KAAKmoB,GAC7BlzB,KAAKyiH,GAA2Bx+G,YAAYivB,EAC5C,CAEDlzB,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKk1B,GAClDrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKg2B,IAE1Ch2B,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAK21B,GACnD31B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+1B,IAClD/1B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKg2B,IACjDh2B,KAAKg0B,UAAU9vB,iBAAiB,cAAelE,KAAKg2B,G,CAG7C,EAAAotE,CAASxsF,GAChB,OAAQtV,EAAOuX,uBAAyB,GAAKjC,GAAK5W,KAAK+yB,EAAe,GAAK,E,CAGpE,EAAAgwF,CAAQlsG,GACf,OAAOvV,EAAO2X,cAAgB,EAAIpC,EAAI7W,KAAKgzB,E,CAqDpC,EAAA8C,GACP,GAAI91B,KAAKm0B,EAAY,CACpB,MAAMmV,EAAetpC,KAAKojG,GAASpjG,KAAKk0B,GAClC6rE,EAAc//F,KAAK+iH,GAAQ/iH,KAAKw+F,IAEhC5/E,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1Fn2C,EAA+B3wB,EAAW2wB,cAEhD,GAAIjG,GAAQtpC,KAAK0iH,GAAW,CAC3B,MAAMljC,GAAiBugB,EAAM//F,KAAK2iH,KAAar5E,EAAOtpC,KAAK0iH,IACrDhtG,EAAiB1V,KAAK2iH,GAAW3iH,KAAK0iH,GAAYljC,EAClDykB,EAAoB94F,KAAKgS,KAAKhS,KAAKoC,IAAIvN,KAAK0iH,GAAWp5E,IACvD46D,EAAoB/4F,KAAK0hB,MAAM1hB,KAAK2L,IAAI9W,KAAK0iH,GAAWp5E,IAC9D,IAAK,IAAIz+B,EAAYo5F,EAAWp5F,GAAKq5F,EAAWr5F,IAC3CA,EAAI,GAAKA,GAAKvJ,EAAOuX,yBACzB02B,EAAczuB,UAAUjW,GAAKM,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAO2X,aAAc9N,KAAKe,MAAMrB,EAAI20E,EAAQ9pE,KAE/F,CAED65B,EAAczuB,UAAU3V,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOuX,uBAAyB,EAAG1N,KAAKe,MAAMo9B,MAAWn+B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAO2X,aAAc9N,KAAKe,MAAM6zF,KAE3J//F,KAAK0iH,GAAYp5E,EACjBtpC,KAAK2iH,GAAW5iB,EAEhB//F,KAAK4iH,GAAU,IAAI/2B,GAAgB7rF,KAAK6yB,EAAMjU,EAAY2wB,GAC1DvvC,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAK4iH,GACpC,C,CAWK,MAAAhsF,GACN,MACM2Y,EADyBvvC,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAChDn2C,cAC1CyzE,EAAwBh7E,IACrB,EAAKA,EAAQ1mC,EAAO2X,cAAiBjZ,KAAKgzB,EAGnD,IAAI4sE,EAAiBniF,EAAazd,KAAKgzB,GACnCY,EAAe,GACnB,IAAK,IAAI/oB,EAAY,EAAGA,EAAIvJ,EAAOuX,uBAAyB,EAAGhO,IAAK,CACnE,GAAkC,GAA9B0kC,EAAczuB,UAAUjW,GAAS,SACrC,IAAIo4G,EAAexlG,GAAc5S,EAAI,KAAQ7K,KAAK+yB,EAAe,IAAMzxB,EAAOuX,uBAAyB,IACvG+a,GAAQ,KAAOqvF,EAAO,IAAMrjB,EAAS,IACrChsE,GAAQ,KAAOqvF,EAAO,IAAMxlG,EAAaulG,EAAqBzzE,EAAczuB,UAAUjW,KAAO,GAC7F,CAED,MAAMq4G,EAAqBF,EAAqBzzE,EAAczuB,UAAUxf,EAAOuX,uBAAyB,IACxG,IAAK,IAAIhO,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MAAMqoB,EAAuBlzB,KAAKwiH,GAAmB33G,GACrDqoB,EAAKpO,aAAa,IAAKrH,EAAaylG,IACpChwF,EAAKpO,aAAa,SAAUrH,EAAazd,KAAKgzB,EAAgBkwF,GAC9D,CAEGljH,KAAK6iH,IAAiBjvF,IACzB5zB,KAAK6iH,GAAgBjvF,EACrB5zB,KAAKuiH,GAAOz9F,aAAa,IAAK8O,IAE3B5zB,KAAK8iH,IAAmB9iH,KAAK6yB,EAAKwjE,MAAM8sB,YAC3CnjH,KAAK8iH,GAAkB9iH,KAAK6yB,EAAKwjE,MAAM8sB,UACvCnjH,KAAKsiH,GAAQh9F,MAAMq/E,QAAU3kG,KAAK6yB,EAAKwjE,MAAM8sB,UAAY,GAAK,O,EChLjE,MAAMjnB,KAAEA,IAASx2E,E,MAEJ09F,GAKZ,WAAArjH,CAA4Bq8F,EAA0CvpE,EAAqCwwF,GAA/ErjH,KAAKo8F,MAALA,EAA0Cp8F,KAAI6yB,EAAJA,EAAqC7yB,KAAUqjH,GAAVA,EAJnGrjH,KAAO4iH,GAAkB,KACzB5iH,KAAMsjH,GAAW,GACjBtjH,KAASujH,GAAW,GAYpBvjH,KAAUwjH,GAAG,KACyBxjH,KAAK6yB,EAAKmwE,cAAchjG,KAAK4iH,MACxC5iH,KAAKujH,GAAYvjH,KAAKsjH,IACxDtjH,KAAK4iH,GAAU5iH,KAAKqjH,GAAWrjH,KAAKujH,GAAWvjH,KAAKo8F,MAAM94F,OAC1DtD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAK4iH,GAAQ,EAGrC5iH,KAAWyjH,GAAG,KACrBzjH,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,IACtB5iH,KAAK4iH,GAAU,IAAI,EAlBnBxmB,EAAMl4F,iBAAiB,QAASlE,KAAKwjH,IACrCpnB,EAAMl4F,iBAAiB,SAAUlE,KAAKyjH,G,CAGhC,WAAAC,CAAYpgH,GAClBtD,KAAKsjH,GAAShgH,EACdtD,KAAKo8F,MAAM94F,MAAQ4zB,OAAO5zB,E,QAgBfqgH,GAMZ,WAAA5jH,CAA4Bq8F,EAA0CvpE,EAAqCwwF,EAAqEO,GAApJ5jH,KAAKo8F,MAALA,EAA0Cp8F,KAAI6yB,EAAJA,EAAqC7yB,KAAUqjH,GAAVA,EALnGrjH,KAAO4iH,GAAkB,KACzB5iH,KAAMsjH,GAAW,EACjBtjH,KAASujH,GAAW,EAepBvjH,KAAUwjH,GAAG,KACyBxjH,KAAK6yB,EAAKmwE,cAAchjG,KAAK4iH,MACxC5iH,KAAKujH,GAAYvjH,KAAKsjH,IACjC,MAAnBtjH,KAAKqjH,KACRrjH,KAAK4iH,GAAU5iH,KAAKqjH,GAAWrjH,KAAKujH,GAAW5iF,SAAS3gC,KAAKo8F,MAAM94F,QACnEtD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAK4iH,IACpC,EAGM5iH,KAAWyjH,GAAG,KACE,MAAnBzjH,KAAKqjH,KACRrjH,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,IACtB5iH,KAAK4iH,GAAU,KACf,EAvBD5iH,KAAKg0B,UAAwBkoE,GAAZ,EAAiB,CAAEjoE,MAAO,UAAW3O,MAAO,mCAAmD,CAAEA,MAAO,qBAAvB82E,GAClGA,EAAMl4F,iBAAiB,QAASlE,KAAKwjH,IACrCpnB,EAAMl4F,iBAAiB,SAAUlE,KAAKyjH,G,CAGhC,WAAAC,CAAYpgH,GAClBtD,KAAKsjH,GAAShgH,EACdtD,KAAKo8F,MAAM94F,MAAQ4zB,OAAO5zB,E,QCjDfugH,GAIZ,WAAA9jH,CAAY06E,GAHJz6E,KAAUoiC,GAAW,EAI5BpiC,KAAK23G,GAAQl9B,C,CAGP,YAAAqpC,GACN,OAAO9jH,KAAKoiC,E,CAGN,UAAA2hF,GACN,GAAI/jH,KAAKoiC,GAAa,EAAIpiC,KAAK23G,GAAMf,WAAY,MAAM,IAAIz0G,MAAM,uCACjE,MAAM4M,EAAiB/O,KAAK23G,GAAMqM,UAAUhkH,KAAKoiC,IAAY,GAE7D,OADApiC,KAAKoiC,IAAc,EACZrzB,C,CAGD,UAAAk1G,GACN,OAAQjkH,KAAKkkH,aAAe,GAAOlkH,KAAKkkH,aAAe,EAAMlkH,KAAKkkH,W,CAG5D,UAAAC,GACN,GAAInkH,KAAKoiC,GAAa,EAAIpiC,KAAK23G,GAAMf,WAAY,MAAM,IAAIz0G,MAAM,uCACjE,MAAM4M,EAAiB/O,KAAK23G,GAAMyM,UAAUpkH,KAAKoiC,IAAY,GAE7D,OADApiC,KAAKoiC,IAAc,EACZrzB,C,CAGD,SAAAm1G,GACN,GAAIlkH,KAAKoiC,GAAa,EAAIpiC,KAAK23G,GAAMf,WAAY,MAAM,IAAIz0G,MAAM,uCACjE,MAAM4M,EAAiB/O,KAAK23G,GAAM0M,SAASrkH,KAAKoiC,IAEhD,OADApiC,KAAKoiC,KACErzB,C,CAGD,QAAAu1G,GACN,GAAItkH,KAAKoiC,GAAa,EAAIpiC,KAAK23G,GAAMf,WAAY,MAAM,IAAIz0G,MAAM,uCACjE,MAAM4M,EAAiB/O,KAAK23G,GAAM4M,QAAQvkH,KAAKoiC,IAE/C,OADApiC,KAAKoiC,KACErzB,C,CAGD,SAAAy1G,GACN,GAAIxkH,KAAKoiC,GAAa,EAAIpiC,KAAK23G,GAAMf,WAAY,MAAM,IAAIz0G,MAAM,uCACjE,OAAOnC,KAAK23G,GAAM0M,SAASrkH,KAAKoiC,G,CAG1B,aAAAqiF,GACN,MAAM11G,EAAiB/O,KAAKkkH,YAE5B,OADIn1G,GAAU,KAAMtE,QAAQC,IAAI,wCAA0CqE,EAAS,WAAa/O,KAAKoiC,IACrF,IAATrzB,C,CAGD,sBAAA21G,GACN,IAAI31G,EAAiB,EACrB,IAAK,IAAIlE,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MAAM85G,EAAmB3kH,KAAKkkH,YAE9B,GADAn1G,GAAqB,IAAX41G,IACK,IAAXA,GAGH,MAFA51G,IAAmB,CAIpB,CACD,OAAOA,C,CAGD,SAAA61G,CAAU/hH,GAChB7C,KAAKoiC,IAAcv/B,C,CAGb,OAAAgiH,GACN,OAAO7kH,KAAK23G,GAAMf,WAAa52G,KAAKoiC,E,CAG9B,qBAAA0iF,CAAsBjiH,GAC5B,GAAI7C,KAAKoiC,GAAav/B,EAAS7C,KAAK23G,GAAMf,WAAY,MAAM,IAAIz0G,MAAM,uCACtE,MAAM4M,EAA4B,IAAI80G,GAAkB,IAAIjM,SAAS53G,KAAK23G,GAAM92E,OAAQ7gC,KAAK23G,GAAMN,WAAar3G,KAAKoiC,GAAYv/B,IAEjI,OADA7C,KAAK4kH,UAAU/hH,GACRkM,C,ECvER,MAAMktF,OAACA,GAAMkK,EAAEA,GAAC5zE,IAAEA,GAAG4pE,GAAEA,GAAEC,MAAEA,IAAS12E,E,MAExBq/F,GAgBZ,WAAAhlH,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAfF7yB,KAAAglH,GAA+B5oB,GAAM,CAACnnF,KAAM,OAAQgwG,OAAQ,8DAC5DjlH,KAAa48F,GAAsBX,GAAO,CAAChoE,MAAO,iBAEnDj0B,KAASg0B,UAAmBzB,GAAI,CAAC0B,MAAO,qBAAsB3O,MAAO,iBACrF62E,GAAG,UACFgK,GAAE,CAAC7gF,MAAO,sCACV,2KAEA6gF,GAAE,CAAC7gF,MAAO,sCACV,iKAEDtlB,KAAKglH,GACLhlH,KAAK48F,IAWG58F,KAAM88F,GAAG,KACjB98F,KAAK6yB,EAAKsuD,MAAM,EAGTnhF,KAAO+8F,QAAG,KACjB/8F,KAAKglH,GAAWhoB,oBAAoB,SAAUh9F,KAAKklH,IACnDllH,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,GAAO,EAGrD98F,KAAiBklH,GAAG,KAC3B,MAAMC,EAAanlH,KAAKglH,GAAWI,MAAO,GAC1C,IAAKD,EAAM,OAEX,MAAME,EAAoBF,EAAK3gH,KAAKm5C,MAA+C,GAAxCwnE,EAAK3gH,KAAK8gH,YAAY,KAAO,IAAM,IAC9E,GAAiB,QAAbD,EAAqB,CACxB,MAAME,EAAqB,IAAIC,WAC/BD,EAAOrhH,iBAAiB,QAASC,IAChCnE,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAK4yF,gBACVzlH,KAAK6yB,EAAKi/D,OAAO,IAAImE,GAAWj2F,KAAK6yB,EAAc0yF,EAAOx2G,SAAS,GAAM,EAAK,IAE/Ew2G,EAAOG,WAAWP,EAClB,MAAM,GAAiB,QAAbE,GAAoC,OAAbA,EAAoB,CACrD,MAAME,EAAqB,IAAIC,WAC/BD,EAAOrhH,iBAAiB,QAASC,IAChCnE,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAK4yF,gBACVzlH,KAAK2lH,GAA4BJ,EAAOx2G,OAAO,IAEhDw2G,EAAOK,kBAAkBT,EACzB,MACA16G,QAAQxH,MAAM,gCACdjD,KAAK88F,IACL,EAxCD98F,KAAKglH,GAAW1oB,SACfv3C,YAAW,IAAI/kD,KAAKglH,GAAWtnB,UAEhC19F,KAAKglH,GAAW9gH,iBAAiB,SAAUlE,KAAKklH,IAChDllH,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,G,CAuC3C,EAAA6oB,CAAe9kF,GAGtB,MAAM0kF,EAAS,IAAI1B,GAAkB,IAAIjM,SAAS/2E,IAClD,IAAIglF,EAAyC,KAO7C,MAAMrH,EAAkB,GACvB,KAAM+G,EAAOV,WAAW,CACxB,MAAMiB,EAAoBP,EAAOxB,aAC3BgC,EAAsBR,EAAOxB,aACnC,GAAa,YAAT+B,EACiB,MAAhBD,EACHA,EAAeN,EAAOT,sBAAsBiB,GAE5Ct7G,QAAQxH,MAAM,uDAET,GAAa,YAAT6iH,EAAkC,CAC5C,MAAME,EAAiCT,EAAOT,sBAAsBiB,GAChEC,EAAYnB,WACfrG,EAAOzzG,KAAK,CACXw6G,OAAQS,EACRC,kBAAmBD,EAAYtB,yBAC/Bn9C,OAAO,EACP2+C,eAAgB,GAGlB,MAEAX,EAAOX,UAAUmB,EAElB,CAED,GAAoB,MAAhBF,EAGH,OAFAp7G,QAAQxH,MAAM,iDACdjD,KAAK88F,KAGN,MAAMqpB,EAAqBN,EAAa1B,aACT0B,EAAa1B,aAC5C,MAAMnG,EAA2B6H,EAAa1B,aAK9C,IAAIiC,EAAuC,EAC3C,MAAMC,EAAgC,GAChCC,EAAwC,GAAVH,EACpC,GAAIG,EACHD,EAAoBt7G,KAAKq7G,QAEzB,IAAK,IAAIG,EAAqB,EAAGA,EAAa/H,EAAO37G,OAAQ0jH,IAC5DF,EAAoBt7G,KAAKw7G,GA+B1B,MAAMC,EAA0B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtGC,EAA0B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtGC,EAA8B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC7DC,EAA8B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC7DC,EAAqC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACpEC,EAAqC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAClGC,EAAkC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAChFC,EAA4B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAC1EC,EAAsC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACrFC,EAAoC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACxF,IAAIC,EAA8B,GAC9BhJ,EAA8B,IAC9Bv3E,EAAsB,EACtB64E,EAAoB,EACpBD,GAAmB,EAGnB4H,EAA0B,EAC9B,OAAa,CACZ,IAAIlB,EAA4Bt+F,OAAOy/F,UACnCC,GAA2B,EAC/B,IAAK,MAAMd,KAAcF,EAAqB,CAG7C,MAAMtH,EAAeP,EAAO+H,GAC5B,MAAQxH,EAAMx3C,OAASw3C,EAAMkH,mBAAqBkB,GAAiB,CAOlE,MACMG,EAAoC,IADfvI,EAAMwG,OAAOf,YACUzF,EAAMwG,OAAOrB,YAAcnF,EAAMmH,cAC7EzqF,EAAkC,IAAd6rF,EACpBC,EAAqC,GAAdD,EAChB,KAAT7rF,IACHsjF,EAAMmH,cAAgBoB,GAGvB,IAAIE,GAA8B,EAElC,OAAQ/rF,GACP,SAA4B,CAC3B,MAAMkI,EAAgBo7E,EAAMwG,OAAOd,gBACN1F,EAAMwG,OAAOd,gBACzCsC,EAAWQ,GAAcx8G,KAAK,CAACk2G,SAAUkG,EAAiBxjF,MAAOA,EAAOg9E,SAAU,EAAKviG,SAAU,EAAGqhE,kBAAmB,EAAGqgC,eAAgB,EAAG5S,IAAI,GAClJ,CAAC,MACF,SAA2B,CAC1B,MAAMvpE,EAAgBo7E,EAAMwG,OAAOd,gBAC7B9D,EAAmB5B,EAAMwG,OAAOd,gBACtC,GAAgB,GAAZ9D,EACFoG,EAAWQ,GAAcx8G,KAAK,CAACk2G,SAAUkG,EAAiBxjF,MAAOA,EAAOg9E,SAAU,EAAKviG,SAAU,EAAGqhE,kBAAmB,EAAGqgC,eAAgB,EAAG5S,IAAI,QAC5I,CACN,MAAMvrF,GAAiBxW,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOyU,YAAc,EAAG5K,KAAKe,MACxE47B,GAAM43C,6BAA6Bu5B,GAAuB4N,EAAyBU,QAE9E/kG,GAAcrX,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAO4U,OAAQ/K,KAAKe,QAC1D46G,EAAsBS,GAAgB,IAAM,GAAK,GAAKjmH,EAAO2U,aAEhE8wG,EAAWQ,GAAcx8G,KAAK,CAC7Bk2G,SAAUkG,EACVxjF,MAAOA,EACPg9E,SAAUx1G,KAAK2L,IAAI,EAAK3L,KAAKoC,IAAI,GAAMozG,EAAW,IAAM,KACxDviG,QAASwoG,EAAyBW,GAClC9nC,iBAAkB99D,GAClBm+F,cAAet9F,GACf0qF,IAAI,GAEL,CACD,CAAC,MACF,SAC2B6R,EAAMwG,OAAOd,gBACV1F,EAAMwG,OAAOd,gBACzC,MACF,SAAkC,CACjC,MAAMpF,GAAkBN,EAAMwG,OAAOd,gBAC/BnhH,GAAgBy7G,EAAMwG,OAAOd,gBAGnC,OAAQpF,IACP,OACgC,GAA3BmH,EAAce,IAA+F,GAA3Bd,EAAcc,KACnGb,EAAkBa,GAAgBjkH,IAElC,MACF,OACCujH,EAAyBU,GAAgBjkH,GACxC,MACF,QACCwjH,EAAsBS,GAAgBjkH,GACrC,MACF,QACC2jH,EAAeM,GAAcx8G,KAAK,CAACk2G,SAAUkG,EAAiB/rF,KAAM0M,GAAM83C,sBN7FxCn7E,EM6FwFnB,GN5F3H6H,KAAKiB,IAAI3H,EAAa,IAAK,OM6FzB,MACF,QACgC,GAA3B+hH,EAAce,IAA+F,GAA3Bd,EAAcc,KACnGZ,EAAkBY,GAAgBjkH,IAElC,MACF,SACCmjH,EAAcc,GAAgBjkH,GAC7B,MACF,SACCkjH,EAAce,GAAgBjkH,GAGhC,CAAC,MACF,SAAkC,CACjC,MAAM8a,GAAkB2gG,EAAMwG,OAAOd,gBACrCmC,EAAyBW,GAAgBnpG,EACzC,CAAC,MACF,SAC8B2gG,EAAMwG,OAAOd,gBACzC,MACF,SAA8B,CAC7B,MAAMgD,GAAc1I,EAAMwG,OAAOd,gBAK3BxjG,KAJc89F,EAAMwG,OAAOd,iBAEG,EAAKgD,IAAO,KAAU,IAC3Bf,EAAkBa,GAAkD,IAAlCZ,EAAkBY,IAGlFP,EAAgBO,GAAcx8G,KAAK,CAACk2G,SAAUkG,EAAiBlmG,SAAUA,IAC1E,CAAC,MACF,SACC,GAAe,KAAXqmG,EAAmC,CACtC,MAAMjI,GAAkBN,EAAMwG,OAAOd,gBAC/B5hH,GAAiBk8G,EAAMwG,OAAOb,yBAGpC,GAAW,IAAPrF,GACHmI,GAAqB,EACrBzI,EAAMwG,OAAOX,UAAU/hH,SACjB,GAAW,IAAPw8G,GACVnB,EAAsBa,EAAMwG,OAAOtB,aACnCiD,EAAan8G,KAAK,CACqBk2G,SAAUkG,EACXjJ,oBAAqBA,IAG3Da,EAAMwG,OAAOX,UAAU/hH,GAAS,QAC1B,GAAW,IAAPw8G,GAA+C,CACzD,MAAMtM,GAAoBgM,EAAMwG,OAAOrB,YACvC,IAAIwD,GAA8B3I,EAAMwG,OAAOrB,YAY/C,IAX2CnF,EAAMwG,OAAOrB,YACHnF,EAAMwG,OAAOrB,YAClEnF,EAAMwG,OAAOX,UAAU/hH,GAAS,GAKhC8jC,EAA0B,EAAZosE,GAIc,IAAN,EAAdpsE,KAA0B+gF,GAAsB,GAAK/gF,EAAcrlC,EAAOkQ,iBAAmBm1B,GAAuC,EAAxBrlC,EAAOiQ,gBAC1Ho1B,IAA6B,EAC7B+gF,IAA4C,EAE7C/gF,EAAcx7B,KAAK2L,IAAIxV,EAAOiQ,eAAgBpG,KAAKoC,IAAIjM,EAAOkQ,eAAgBm1B,GAC9E,MAAiB,IAAP04E,IACVG,EAAYT,EAAMwG,OAAOjB,WACzB/E,EAAsC,GAA5BR,EAAMwG,OAAOrB,YACvBnF,EAAMwG,OAAOX,UAAU/hH,GAAS,IAGhCk8G,EAAMwG,OAAOX,UAAU/hH,GAGxB,KAAM,IAAmB,KAAfykH,GAAsC,KAAfA,EAOjC,OAFA78G,QAAQxH,MAAM,8BAAgCqkH,QAC9CtnH,KAAK88F,KANiD,CAEtD,MAAMj6F,GAAiBk8G,EAAMwG,OAAOb,yBACpC3F,EAAMwG,OAAOX,UAAU/hH,GACvB,CAIA,CACA,MACF,QAGC,OAFA4H,QAAQxH,MAAM,4BAA8Bw4B,QAC5Cz7B,KAAK88F,MAKF0qB,GAAsBzI,EAAMwG,OAAOV,UACvC9F,EAAMkH,kBAAoBkB,EAAkBpI,EAAMwG,OAAOb,0BAEzD3F,EAAMx3C,OAAQ,EAGV++C,IACHF,IACIA,EAA+B5H,EAAO37G,SACzCwjH,EAAoB,GAAKD,EACzB5H,EAAO4H,GAA8BH,mBAAqBkB,EAC1DlB,EAAoB96G,KAAKoC,IAAI04G,EAAmBzH,EAAO4H,GAA8BH,mBACrFoB,GAAkB,IAIrB,CAEItI,EAAMx3C,QACV8/C,GAAkB,EAClBpB,EAAoB96G,KAAKoC,IAAI04G,EAAmBlH,EAAMkH,mBAEvD,CAED,IAAIoB,EAGH,MAFAF,EAAkBlB,CAInB,CNxNG,IAAqCxhH,EM4N/B,IAAK,MAAMi9E,MAAUwlC,EAAc,CAC/BhJ,EAAsBx8B,GAAOw8B,oBAC7B,KACH,CAEX,MAAMyJ,EAAgC,IAChC5/D,EAAyB58C,KAAK2L,IAAIxV,EAAOmP,SAAUtF,KAAKoC,IAAIjM,EAAOoP,SAAUvF,KAAKe,MAAMy7G,EAAwBzJ,KAChHD,EAA2BD,EAAmB18G,EAAOwQ,aACrDy/D,EAAsBjwE,EAAOwQ,aAAe60B,EAC5CihF,EAAwBz8G,KAAKgS,KAAKgqG,EAAkBlJ,EAAmB1sC,GAE7E,SAASs2C,EAAuB5G,GAC/B,OAAO91G,KAAKe,MAAM+0G,EAAWhD,E,CAG9B,IAAI76G,EAAco8G,EAGlB,IAFID,IAASn8G,GAAO,GACH,IAAN,EAANA,KAAeA,GAAO,GACpBA,EAAM,GAAGA,GAAO,GACvBA,GAAY,GAGZ,MAAMykB,EAA2B,GAC3BH,EAA2B,GAC3BE,EAAyB,GAC/B,IAAK,IAAI82F,GAAsB,EAAGA,GAAc,GAAIA,KAAe,CAClE,GAAsC,GAAlCqI,EAAWrI,IAAa77G,OAAa,SAEzC,MAAMskB,GAAmB,IAAI4wB,GAEvB+vE,GAAoClqG,EAAaO,yBAAyB4oG,EAAWrI,IAAa,GAAGtgG,SACrG2pG,GAAsD,MAAtBD,GAA8B,KAAOlqG,EAAaC,cAAciqG,IAEhGE,GAA4C,GAAftJ,GAC7Bn4E,GAA0ByhF,IAAsC,MAAjBD,IAAkD,GAAzBA,GAAchoG,QACtFslB,GAA0C,MAAjB0iF,IAAgD,GAAvBA,GAAc9uE,MAChEgvE,GAA2B1hF,GAAiBjlC,EAAOkX,kBAAoBlX,EAAO+O,KAAKjN,GAAKmN,UACxFiiE,GAAwBjsC,GAAiBjlC,EAAOqY,cAAgB,EAChEuuG,GAA4B3hF,GAAiB,GAAM,EACnD4hF,GAA0B5hF,GAAiBjlC,EAAOuY,UAAY,EAAIvY,EAAO0Y,SAE3EusB,GACCyhF,GACHtgG,EAAcu1B,QAAQ91B,IAEtBO,EAAc3c,KAAKoc,IAEVke,GACVzd,EAAY7c,KAAKoc,IAEjBU,EAAc9c,KAAKoc,IAGpB,IAAIihG,GAA0B,EAC1BC,GAAyB,EACzBC,GAAkC,EAClCC,GAA+BjnH,EAAO2U,UAE1C,GAAI+xG,GAAkB,CACrB,MAAMQ,GAAwB,GAC9B,IAAI1jD,IAAsB,EACtBnqB,GAA0B,KAC1B8tE,GAAwB,EACxBC,IAA+B,EAEnC,MAAM5qG,GAAsBF,EAAaa,kBAAkB,oBACrDH,GAAiBV,EAAaC,cAAcC,IAC5Cc,GAAyB,IAAI8uB,IAAW,GAAO,GACpD9uB,GAAWynB,eAAe/nB,GAAOgB,UAAU,GAAO,GAAO,GAAO,EAAO,GAExEV,GAAWN,OAASR,GACpBqJ,GAAQ6d,YAAYj6B,KAAK6T,IAEzB,IAAK,IAAI+pG,GAAyB,EAAGA,IAAkB5B,EAAWrI,IAAa77G,OAAQ8lH,KAAkB,CACxG,MACMC,GADuBD,IAAkB5B,EAAWrI,IAAa77G,OACrB,KAAOkkH,EAAWrI,IAAaiK,IAC3EE,GAAqC,MAAbD,GAAoBjhG,OAAOmhG,iBAAmBjB,EAAuBe,GAAU3H,UAC7G,GAAIuH,GAAY3lH,OAAS,GAAKgmH,GAAgBJ,KAA+B,MAAbG,IAAqBA,GAAU1b,IAAK,CACnG,MAAMtyD,GAAczvC,KAAK0hB,MAAM47F,GAAgBl3C,GACzC+S,GAAuB1pC,GAAM22B,EAEnC,GAAIzM,IAAclqB,IAAkB,MAAXD,GAAiB,CAEzC,IADAmqB,KACOA,GAAalqB,IACnBzzB,GAAQ8wB,KAAK6sB,IAAc,EAC3BA,KAEDnqB,GAAU,IAAI7V,GACd3d,GAAQ6wB,SAASjtC,KAAK4vC,IACtBxzB,GAAQ8wB,KAAK6sB,IAAc39C,GAAQ6wB,SAASn1C,OAC5C83C,GAAQ3V,YAAY,GAAK,EACzB2V,GAAQ3V,YAAYniC,OAAS,CAC7B,GAMI6lH,IAAuB9pG,GAAW+C,OAAS2mG,MAC/C1pG,GAAW+C,OAAS2mG,GACpB1pG,GAAW4D,IAAM+lG,GACjB3pG,GAAW6D,SAAW,EACtBimG,IAAsB,GAGvB,MAAMK,GAAsB,GAC5B,IAAIC,GAAsBb,GACtBc,GAAsB,EACtBv1D,GAAmB,EACvB,IAAK,MAAM/vB,MAAS6kF,GAAa,CAChC,MAAMv1E,GAAkC+lE,GAAiBr1E,KACf,GAAtColF,GAAU9sF,QAAQgX,GAAK1yB,YAC1BwoG,GAAUh+G,KAAKkoC,GAAK1yB,WAErBmzC,GAAWvoD,KAAK2L,IAAI48C,GAAUvoD,KAAKe,MAAM+mC,GAAKtxB,OAASymG,KACvDY,GAAc79G,KAAKoC,IAAIy7G,GAAa/1E,GAAK3O,UACzC2kF,GAAc99G,KAAK2L,IAAImyG,GAAah2E,GAAK3O,SACzC,CACD,MAAMA,GAAmBn5B,KAAKoC,IAAI07G,GAAa99G,KAAK2L,IAAIkyG,GAAa,IAC/Dv2D,GAAwBg2D,GAAgBnkC,GACxC3xB,GAAsBxnD,KAAKoC,IAAIgkE,EAAapmE,KAAKoC,IAAIs7G,GAAgBvkC,GAAc7xB,GAA2B,EAAXnuB,KAEnGY,GAAa,IAAIxB,IAAM,EAAG+uB,GAAeE,GAAae,IAAU,GAEtExuB,GAAKrB,QAAQhhC,OAAS,EACtB,IAAK,IAAIs6C,GAAqB,EAAGA,GAAahyC,KAAKoC,IAAIjM,EAAO8V,aAAc2xG,GAAUlmH,QAASs6C,KAAc,CAC5G,MAAM+rE,GAAoBH,GAAU5rE,GAAahyC,KAAK2L,IAAI,EAAGiyG,GAAUlmH,OAASvB,EAAO8V,gBAC/C,GAApC8tB,GAAKrB,QAAQ5H,QAAQitF,KACxBhkF,GAAKrB,QAAQ94B,KAAKm+G,GAEnB,CACDvuE,GAAQ5V,MAAMh6B,KAAKm6B,IAEnBsjF,GAAY3lH,OAAS,CACrB,CAGgB,MAAb+lH,IAAqBA,GAAU1b,IAA2C1/E,MAArCwrF,GAAiB4P,GAAUjlF,SACnE6kF,GAAYz9G,KAAK69G,GAAUjlF,OAC3B8kF,GAAgBI,GAChBT,GAAkBQ,GAAUjI,SAC5B2H,GAA0BM,GAAUnpC,iBACpC8oC,GAAuBK,GAAU9I,cAElC,CACD,KAAM,CAMN,IAAIqJ,GAA8B,EAC9BC,GAA8B9nH,EAAOwU,YACrCuzG,GAA8B,EAC9BC,GAA6B,EACjC,SAASC,GAA0BtI,GAClC,KAAOoI,GAAsBrC,EAAgBtI,IAAa77G,QAAUmkH,EAAgBtI,IAAa2K,IAAqBpI,UAAYA,GACjIkI,GAAsBnC,EAAgBtI,IAAa2K,IAAqBpoG,SACxEooG,I,CAGF,SAASG,GAA0BvI,GAClC,KAAOqI,GAAqBrC,EAAevI,IAAa77G,QAAUokH,EAAevI,IAAa4K,IAAoBrI,UAAYA,GAC7HmI,GAAsBnC,EAAevI,IAAa4K,IAAoBluF,KACtEkuF,I,CAIF,MAAMG,GAAoC,GACpCjB,GAAwB,GAC9B,IAAI1jD,IAAsB,EACtBnqB,GAA0B,KAC1B+uE,GAA4B,EAC5BjB,GAAwB,EACxBkB,GAAmB,EACnBn7G,GAAqB,EAEzB,IAAK,IAAIo6G,MAAa7B,EAAWrI,IAAc,CAC9C,MAAMuH,GAA4B2C,GAAU3H,SACtC4H,GAAwBhB,EAAuB5B,IAErD,GAAIuC,GAAY3lH,OAAS,GAAKgmH,GAAgBJ,GAAe,CAI5D,MAAMzhD,GAAmB77D,KAAK0hB,MAAM47F,GAAgBl3C,GAC9CtK,GAAiB97D,KAAKgS,KAAK0rG,GAAgBt3C,GACjD,IAAIq4C,IAAuB,EAC3B,IAAK,IAAIhvE,GAAcosB,GAAUpsB,GAAMqsB,GAAQrsB,KAAO,CACrD,MAAM0pC,GAAuB1pC,GAAM22B,EAC7Bs4C,GAA2BjvE,GAAMjU,EAAcq3E,EAC/C8L,IAA0BlvE,GAAM,GAAKjU,EAAcq3E,EAEnDvrD,GAAwBtnD,KAAK2L,IAAI,EAAG2xG,GAAgBnkC,IACpD3xB,GAAsBxnD,KAAKoC,IAAIgkE,EAAas3C,GAAgBvkC,IAC5DylC,GAA4B5+G,KAAK2L,IAAI+yG,GAAkBH,IACvDM,GAA0B7+G,KAAKoC,IAAIu8G,GAAgB7D,IAEzD,GAAIxzD,GAAgBE,GAAa,CAChC,MAAM70C,GAA6BF,EAAaO,yBAAyBkqG,IACnE/pG,GAAwC,MAAfR,GAAuB,KAAOF,EAAaC,cAAcC,IAGxF,GAAIgnD,IAAclqB,IAAkB,MAAXD,GAAiB,CAEzC,IADAmqB,KACOA,GAAalqB,IACnBzzB,GAAQ8wB,KAAK6sB,IAAc,EAC3BA,KAQD,GANAnqB,GAAU,IAAI7V,GACd3d,GAAQ6wB,SAASjtC,KAAK4vC,IACtBxzB,GAAQ8wB,KAAK6sB,IAAc39C,GAAQ6wB,SAASn1C,OAID2qB,MAAvCi8F,GAAoBpB,IAA8B,CACrD,MAAMzpG,GAAyB,IAAI8uB,GAAWnH,GAAgBlB,IAC9DokF,GAAoBpB,IAAkBzpG,GAEnB,MAAfd,IAAiC,MAAVQ,IAAqC,GAAlBA,GAAOyB,SAAoBwmB,IACvE3nB,GAAWynB,eAAe/nB,GAAOgB,SAAUinB,GAAgBlB,IAAc,GAAO,EAAO,GACxFzmB,GAAWN,OAASR,KAEpBc,GAAWkxB,gBAAgBzK,GAAc,EAAuBkB,GAAgB,EAA2C,EAAGA,GAAgBlB,IAC9IzmB,GAAWc,MAAQ,GAGpBd,GAAW+C,OAAS2mG,GACpB1pG,GAAW4D,IAAM+lG,GACjB3pG,GAAW6D,SAAW,EAEtB0E,GAAQ6d,YAAYj6B,KAAK6T,GACzB,CAED+7B,GAAQ3V,YAAY,GAAK7d,GAAQ6d,YAAY/I,QAAQwtF,GAAoBpB,KACzE1tE,GAAQ3V,YAAYniC,OAAS,CAC7B,CAM0C2qB,MAAvCi8F,GAAoBpB,MACvBoB,GAAoBpB,IAAgB1mG,OAASxW,KAAKoC,IAAIk8G,GAAoBpB,IAAgB1mG,OAAQ2mG,IAClGmB,GAAoBpB,IAAgB7lG,IAAMrX,KAAKoC,IAAIk8G,GAAoBpB,IAAgB7lG,IAAK+lG,KAK7F,MAAMrjF,GAAa,IAAIxB,IAAM,EAAG+uB,GAAeE,GAAarxD,EAAOwU,aAAa,GAChFovB,GAAKpB,KAAKjhC,OAAS,EACnBqiC,GAAKnB,qBAAwB6lF,IAAgC,GAAjBn3D,GAC5Cm3D,IAAc,EAEdL,GAA0BQ,IAC1BP,GAA0BO,IAC1B,MAAME,GAA2BzB,GAAY,GAAKN,GAAoBD,GAChEiC,GAA8B/+G,KAAKe,OAAO+9G,GAAmBd,IAAuB32C,IACpF23C,GAA0Bh/G,KAAKe,MAAMi9G,GAAsBlB,IACjE,IAAImC,GAAoB5mF,GAAY,EAAG,EAAGr4B,KAAKe,MAAMk8G,GAAkBgB,KACvElkF,GAAKpB,KAAK/4B,KAAKq/G,IASf,MAAMC,GAAgC,CACrC,CAACzlF,KAAM,EAAGjB,MAAOumF,GAAqB9uF,KAAMgvF,GAAShvF,KAAMkvF,UAAU,EAAOC,SAAS,IAEtF,IAAIC,GAAuB,EAEvBC,IAAyBR,GAAmBd,IAAuB32C,GACnEk4C,GAAuBtC,GAAkBgB,GAC7C,IAAK,IAAIxkF,GAAe6tB,GAAgB,EAAG7tB,IAAQ+tB,GAAa/tB,KAAQ,CACvE,MAAMq8E,GAAmB91G,KAAK2L,IAAIizG,GAAmB5+G,KAAKoC,IAAIy8G,GAAkB,EAAG7+G,KAAKe,MAAM+xG,GAAoBr5E,GAAO0/C,OACnHqmC,GAA2B/lF,GAAO6tB,GAClCm4D,GAAqBhmF,IAAQ+tB,GAKnC42D,GAA0BtI,IAC1BuI,GAA0BvI,IAC1B,MAAM4J,IAAqB1B,GAAsBc,IAAoBz3C,GAC/Ds4C,GAAmB1C,GAAkBgB,GAErC2B,GAAuB5/G,KAAKe,MAAM2+G,IAClCG,GAA8B7/G,KAAKC,IAAIy/G,GAAYE,IAAgB,IACnEE,GAAgC9/G,KAAKC,IAAIq/G,GAAgBt/G,KAAKe,MAAMu+G,KAAkB,IACzFt/G,KAAKC,IAAIy/G,GAAYJ,KAAkB,EACvCt/G,KAAK0hB,MAAMg+F,KAAc1/G,KAAK0hB,MAAM49F,IACjCH,GAAoBU,IAAsBC,GAE1CC,GAAsB//G,KAAKe,MAAM4+G,IACjCK,GAA6BhgH,KAAKC,IAAI0/G,GAAWI,IAAe,IAChEE,GAA+BjgH,KAAKC,IAAIs/G,GAAev/G,KAAKe,MAAMw+G,KACrEv/G,KAAKC,IAAI0/G,GAAWJ,KAAiB,EACrCv/G,KAAK0hB,MAAMi+F,KAAa3/G,KAAK0hB,MAAM69F,IAChCH,GAAmBY,IAAqBC,GAK9C,GAHAX,GAAgBI,GAChBH,GAAeI,GAEXR,IAAYC,IAAWK,GAAU,CACpC,MAAMS,GAA2B,CAACzmF,KAAM+lF,GAAkBhnF,MAAOonF,GAAc3vF,KAAM8vF,GAAaZ,SAAUA,IAAYM,GAAUL,QAASA,IAAWK,IAChJ3nC,GAAwBonC,GAAcG,IAK5C,IAAIc,IAAkB,EAClBC,GAAwB5jG,OAAOy/F,UAEnC,GAAIiE,GAAWf,SAAU,CACxB,MAAM9qC,IAAiB6rC,GAAW1nF,MAAQs/C,GAAQt/C,QAAU0nF,GAAWzmF,KAAOq+C,GAAQr+C,MACtF,IAAI4mF,GAAmCrgH,KAAKC,IAAIo0E,IAC5CisC,IAA0B,EAC1BC,GAAgC/jG,OAAOy/F,UAC3C,IAAK,IAAIuE,GAAyBnB,GAAe,EAAGmB,GAAiBtB,GAAcxnH,OAAQ8oH,KAAkB,CAC5G,MAAMC,GAA6BvB,GAAcsB,IACjD,GAAIC,GAAatB,SAAU,CAC1B,MAAMuB,GAA+B5oC,GAAQt/C,MAAQ67C,IAASosC,GAAahnF,KAAOq+C,GAAQr+C,MACpF8+D,GAAmBv4F,KAAKC,IAAIygH,GAAuBD,GAAajoF,OAClE6nF,GAA2B9nB,KAC9B8nB,GAA2B9nB,GAC3B+nB,IAAiB,EACjBC,GAAwBC,GAEzB,CACD,CACGF,KACHH,IAAS,EACTC,GAAgBpgH,KAAKoC,IAAIg+G,GAAeG,IAEzC,CAED,GAAIL,GAAWd,QAAS,CACvB,MAAM/qC,IAAiB6rC,GAAWjwF,KAAO6nD,GAAQ7nD,OAASiwF,GAAWzmF,KAAOq+C,GAAQr+C,MACpF,IAAIknF,GAA+B3gH,KAAKC,IAAIo0E,IACxCusC,IAAsB,EACtBC,GAA4BrkG,OAAOy/F,UACvC,IAAK,IAAIuE,GAAyBnB,GAAe,EAAGmB,GAAiBtB,GAAcxnH,OAAQ8oH,KAAkB,CAC5G,MAAMC,GAA6BvB,GAAcsB,IACjD,GAAIC,GAAarB,QAAS,CACzB,MAAM0B,GAA2BhpC,GAAQ7nD,KAAOokD,IAASosC,GAAahnF,KAAOq+C,GAAQr+C,MAC/E8+D,GAAmBv4F,KAAKC,IAAI6gH,GAAmBL,GAAaxwF,MAC9D0wF,GAAuBpoB,KAC1BooB,GAAuBpoB,GACvBqoB,IAAa,EACbC,GAAoBL,GAErB,CACD,CACGI,KACHT,IAAS,EACTC,GAAgBpgH,KAAKoC,IAAIg+G,GAAeS,IAEzC,CAED,GAAIV,GAAQ,CACX,MAAMY,GAA2B7B,GAAckB,IAC/CrmF,GAAKpB,KAAK/4B,KAAKy4B,GAAY0oF,GAAWvoF,MAAQumF,GAAqBgC,GAAWtnF,KAAMsnF,GAAW9wF,OAC/FovF,GAAee,EACf,CAEDlB,GAAct/G,KAAKsgH,GACnB,CACD,CAGD,MAAMc,GAA+B9B,GAAcA,GAAcxnH,OAAS,GAC1EqiC,GAAKpB,KAAK/4B,KAAKy4B,GAAY2oF,GAAexoF,MAAQumF,GAAqBiC,GAAevnF,KAAMunF,GAAe/wF,OAG3G,IAAIphB,GAAmBmuG,GACnBiE,GAAmB,EACvB,IAAK,MAAMC,MAAWnnF,GAAKpB,KAC1B9pB,GAAW7O,KAAKoC,IAAIyM,GAAUmuG,GAAkBkE,GAAQprG,UACxDmrG,GAAWjhH,KAAKoC,IAAI6+G,IAAWC,GAAQprG,UAIxCikB,GAAKrB,QAAQhhC,OAAS,EACtB,IAAK,IAAIs6C,GAAqB,EAAGA,GAAahyC,KAAKoC,IAAIjM,EAAO8V,aAAcoxG,GAAY3lH,QAASs6C,KAAc,CAC9G,IAAI+rE,GAAoBV,GAAYrrE,GAAahyC,KAAK2L,IAAI,EAAG0xG,GAAY3lH,OAASvB,EAAO8V,eAAiB8wG,GAC5F,MAAV5pG,IAAmDkP,MAAjClP,GAAO0C,yBAC5BkoG,IAAa,GAAK5qG,GAAO0C,wBAE1B,MAAMsrG,GAAuBnhH,KAAK2L,IAAIs1G,GAAUjhH,KAAKoC,IAAIyM,GAAU7O,KAAKe,OAAOg9G,GAAYiB,IAAmB33C,MAC9G,IAA2C,GAAvCttC,GAAKrB,QAAQ5H,QAAQqwF,IAAqB,CAC7CpnF,GAAKrB,QAAQ94B,KAAKuhH,IAClB,MAAM7lC,GAAiBvhD,GAAKjF,IAAMiF,GAAKlF,MACvC2pF,IAAY2C,GAAe7lC,GAC3Bj4E,IAAci4E,EACd,CACD,CACD9rC,GAAQ5V,MAAMh6B,KAAKm6B,GACnB,CACD,CACD,EAG4C,GAAzCsjF,GAAYvsF,QAAQ2sF,GAAUjlF,QACjC6kF,GAAYtsF,OAAOssF,GAAYvsF,QAAQ2sF,GAAUjlF,OAAQ,GAEtDilF,GAAU1b,KACbsb,GAAYz9G,KAAK69G,GAAUjlF,OAC3BykF,GAAkBQ,GAAUjI,SAC5B0H,GAAiBO,GAAUxqG,QAC3BkqG,GAA0BM,GAAUnpC,iBACpC8oC,GAAuBK,GAAU9I,eAGlC4J,GAAoBzD,GACpBwC,GAAgBI,EAChB,CAED,MAAM0D,GAAuB5C,GAAWn7G,GACvC2Y,GAAQ6a,OAAUuE,IAAkBlB,GAAgB,EAAIl6B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwY,aAAe,EAAG3O,KAAK0hB,MAAO0/F,GAAe,KAClI,CAED,KAAOplG,GAAQ8wB,KAAKp1C,OAAS+kH,GAC5BzgG,GAAQ8wB,KAAKltC,KAAK,EAEnB,CAES,GAAIm8G,EAAarkH,OAAS,EAAG,CACzB,IAAI2pH,GAAkB,IAAIz0E,GAC1BnwB,EAAY7c,KAAKyhH,IACjB,IAAIC,GAAqB,IAAI/+E,IAAW,GAAO,GAC/C++E,GAAmB38E,gBAAgB,GAA4B,GAAO,GACtE28E,GAAmB/vG,WAAW,GAAKpb,EAAOob,WAAW1X,WAAkB,MAAEF,MACzE2nH,GAAmB7kG,YAAY,IAAM,EACrC4kG,GAAgBxnF,YAAYj6B,KAAK0hH,IAGjC,MAAMC,GAAgBprH,EAAOyY,SAAW,EACxC,IAAI+qD,IAAc,EACdnqB,GAAU,KACVgyE,GAAoB,EACxB,IAAK,IAAIC,GAAc,EAAGA,GAAc1F,EAAarkH,OAAQ+pH,KAAe,CACxE,MAAMlrC,GAASwlC,EAAa0F,IACtBC,GAAsBnrC,GAAOu/B,SAC7B6L,GAAkBjF,EAAuBgF,IAC/C,IAAIE,IAAqB,EACrBC,IAAiB,EACrB,GAAIJ,KAAgB1F,EAAarkH,OAAS,EACtCkqH,GAAoBF,GAAsB,EAC1CG,GAAgBF,GAAkB,MAEjC,CAEDC,GADmB7F,EAAa0F,GAAc,GACf3L,SAC/B+L,GAAgBnF,EAAuBkF,GAC1C,CACD,IAAI/lD,GAAW77D,KAAK0hB,MAAMigG,GAAkBv7C,GACxCtK,GAAS97D,KAAKgS,KAAK6vG,GAAgBz7C,GACvC,IAAK,IAAI32B,GAAMosB,GAAUpsB,GAAMqsB,GAAQrsB,KAAO,CAC1C,MAAM0pC,GAAe1pC,GAAM22B,EACrB9e,GAAgBtnD,KAAK2L,IAAI,EAAG61G,GAAoBroC,IACtD,IAAI3xB,GAAcxnD,KAAKoC,IAAIgkE,EAAay7C,GAAgB1oC,IACxD,GAAI7xB,GAAgBE,GAAa,CAE7B,GAAImS,IAAclqB,IAAkB,MAAXD,GAAiB,CAEtC,IADAmqB,KACOA,GAAalqB,IAChB4xE,GAAgBv0E,KAAK6sB,IAAc,EACnCA,KAEJnqB,GAAU,IAAI7V,GACd0nF,GAAgBx0E,SAASjtC,KAAK4vC,IAC9B6xE,GAAgBv0E,KAAK6sB,IAAc0nD,GAAgBx0E,SAASn1C,OAC5D83C,GAAQ3V,YAAY,GAAK,EACzB2V,GAAQ3V,YAAYniC,OAAS,CAChC,CAED,MAAMoqH,GAAS9hH,KAAK2L,IAAIxV,EAAOmP,SAAUtF,KAAKoC,IAAIjM,EAAOoP,SAAUvF,KAAKe,MAAMy7G,EAAwBjmC,GAAOw8B,qBAAuB58G,EAAOob,WAAW1X,WAAkB,MAAE+X,oBACpKmoB,GAAO,IAAIxB,GAAKgpF,GAAej6D,GAAeE,GAAas6D,IAAQ,GACzEtyE,GAAQ5V,MAAMh6B,KAAKm6B,GACtB,CACJ,CACDynF,GAAoBK,EACvB,CACL,CAIV,SAASE,EAAgB50E,EAAqBm+C,GAC7C,KAAOn+C,EAASz1C,OAAS4zF,GAAW,CACnC,IAAI02B,EAA4B70E,EAASz1C,OAAS,EAC9CuqH,EAA4B90E,EAASz1C,OAAS,EAC9CwqH,EAA0B1lG,OAAOy/F,UACjCkG,EAAqB3lG,OAAOy/F,UAChC,IAAK,IAAImG,EAAwB,EAAGA,EAAgBj1E,EAASz1C,OAAS,EAAG0qH,IACxE,IAAK,IAAIC,EAAwBD,EAAgB,EAAGC,EAAgBl1E,EAASz1C,OAAQ2qH,IAAiB,CACrG,MAAMC,EAAoBn1E,EAASi1E,GAC7BG,EAAoBp1E,EAASk1E,GACnC,IAAIG,EAAoB,EACpBC,EAAe,EACnB,IAAK,IAAI76B,EAAmB,EAAGA,EAAW06B,EAASx1E,KAAKp1C,QAAUkwF,EAAW26B,EAASz1E,KAAKp1C,OAAQkwF,IACnE,GAA3B06B,EAASx1E,KAAK86C,IAA6C,GAA3B26B,EAASz1E,KAAK86C,IAAgB46B,IACnC,GAA3BF,EAASx1E,KAAK86C,IAA6C,GAA3B26B,EAASz1E,KAAK86C,IAAgB66B,IAE/DD,GAAaN,IACZM,EAAYN,GAAmBO,EAAON,KACzCH,EAAoBI,EACpBH,EAAoBI,EACpBH,EAAkBM,EAClBL,EAAaM,EAGf,CAIF,MAAMH,EAAoBn1E,EAAS60E,GAC7BO,EAAoBp1E,EAAS80E,GAC7BS,EAAkCJ,EAASzoF,YAAYniC,OACvDirH,EAA+BL,EAASz1E,SAASn1C,OACvD,IAAK,MAAM+b,KAAc8uG,EAAS1oF,YACjCyoF,EAASzoF,YAAYj6B,KAAK6T,GAE3B,IAAK,MAAM+7B,KAAW+yE,EAAS11E,SAC9B2C,EAAQ3V,YAAY,IAAM6oF,EAC1BJ,EAASz1E,SAASjtC,KAAK4vC,GAExB,IAAK,IAAIo4C,EAAmB,EAAGA,EAAW06B,EAASx1E,KAAKp1C,QAAUkwF,EAAW26B,EAASz1E,KAAKp1C,OAAQkwF,IACnE,GAA3B06B,EAASx1E,KAAK86C,IAA6C,GAA3B26B,EAASz1E,KAAK86C,KACjD06B,EAASx1E,KAAK86C,GAAY26B,EAASz1E,KAAK86C,GAAY+6B,GAKtDx1E,EAASpc,OAAOkxF,EAAmB,EACnC,C,CAGFF,EAAgBrlG,EAAevmB,EAAOgY,sBACtC4zG,EAAgBxlG,EAAepmB,EAAOkY,sBACtC0zG,EAAgBtlG,EAAatmB,EAAOoY,oBAyBpC1Z,KAAK6yB,EAAK4yF,gBACV,IAAK,MAAMt+F,MAAWnnB,KAAK6yB,EAAK9F,KAAKurB,SAAUnxB,GAAQ+wB,OAAQ,EAC/Dl4C,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKi/D,OAAO,IA1BjB,cAA+BtQ,GAC9B,WAAAzhF,CAAY4jF,GACXpjF,QACA,MAAMwsB,EAAa42D,EAAI52D,KACvBA,EAAKusB,MAAQyO,EACbh7B,EAAK4Z,YAAcA,EACnB5Z,EAAK3pB,IAAMA,EACX2pB,EAAKutB,MAAQ,GACbvtB,EAAK+Y,OAAS,EACd/Y,EAAKitB,oBAAqB,EAC1BjtB,EAAKqZ,mBAAqBve,EAAckmG,MAAK5mG,GAAWA,EAAQ6d,YAAYniC,OAAS,KAAM6kB,EAAcqmG,MAAK5mG,GAAWA,EAAQ6d,YAAYniC,OAAS,IAEtJ0hF,GAAwB18D,GACxB08D,GAAwB78D,GACxB68D,GAAwB38D,GAExB5nB,KAAKyhF,OAAO,IAAI+C,GAAsBb,EAAK97D,EAAeH,EAAeE,IACzEmF,EAAKwtB,UAAY,EACjBxtB,EAAKytB,WAAaztB,EAAKoJ,SACvBn2B,KAAK4gF,KACL+C,EAAI1tD,SAASC,S,GAMuBl2B,KAAK6yB,IAAO,GAAM,E,ECj7B1D,MAAMopE,OAACA,GAAM4B,MAAEA,GAAKtrE,IAAEA,GAAGy7F,KAAEA,GAAI7xB,GAAEA,GAAEC,MAAEA,IAAS12E,E,MAEjCuoG,GA+EZ,WAAAluH,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EA9EH7yB,KAAAglH,GAA+B5oB,GAAM,CAACnnF,KAAM,OAAQgwG,OAAQ,8DAC5DjlH,KAAA68F,GAAiCZ,GAAO,CAAChoE,MAAO,aAAc3O,MAAO,cAAe,QACpFtlB,KAAa48F,GAAsBX,GAAO,CAAChoE,MAAO,iBAClDj0B,KAAAkuH,GAAyBF,GAAK,CAAC1oG,MAAO,6BACrDu4E,GAAM,CAAC5pE,MAAO,iBACbmoE,GAAM,CAACnnF,KAAM,QAASzQ,KAAM,SAAUlB,MAAO,UAC7CyiB,EAAI,oZAQJwM,GAAI,UAELsrE,GAAM,CAAC5pE,MAAO,iBACbmoE,GAAM,CAACnnF,KAAM,QAASzQ,KAAM,SAAUlB,MAAO,SAC7CyiB,EAAI,geASJwM,GAAI,SAELsrE,GAAM,CAAC5pE,MAAO,iBACbmoE,GAAM,CAACnnF,KAAM,QAASzQ,KAAM,SAAUlB,MAAO,SAC7CyiB,EAAI,mZAQJwM,GAAI,SAELsrE,GAAM,CAAC5pE,MAAO,iBACbmoE,GAAM,CAACnnF,KAAM,QAASzQ,KAAM,SAAUlB,MAAO,SAC7CyiB,EAAI,qeASJwM,GAAI,cAELsrE,GAAM,CAAC5pE,MAAO,iBACbmoE,GAAM,CAACnnF,KAAM,QAASzQ,KAAM,SAAUlB,MAAO,qBAC7CyiB,EAAI,4dASJwM,GAAI,kBAISvyB,KAAAg0B,UAA4BzB,GAAI,CAAC0B,MAAO,qBAAsB3O,MAAO,iBACpF62E,GAAG,UACHn8F,KAAKkuH,GACL37F,GAAI,CAACjN,MAAO,+EACXtlB,KAAK68F,IAEN78F,KAAK48F,IAcE58F,KAAM88F,GAAG,KAChB98F,KAAK6yB,EAAKsuD,MAAM,EAGVnhF,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKmuH,IACnDnuH,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,GAAgB,EAG5Dp9F,KAAAo9F,GAAmBj5F,IACc,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SACzDr9F,KAAKmuH,IACL,EAGMnuH,KAAQmuH,GAAG,KAClBnuH,KAAK6yB,EAAKwjE,MAAMwrB,OAAgB7hH,KAAKkuH,GAAME,SAAkB,OAAE9qH,MAC/DtD,KAAK6yB,EAAKwjE,MAAMgjB,OAChBsI,GAAOC,UAAU5hH,KAAK6yB,EAAKwjE,MAAMwrB,QACjC7hH,KAAK88F,IAAQ,EA9Bb98F,KAAKglH,GAAW1oB,SAChBv3C,YAAW,IAAI/kD,KAAKglH,GAAWtnB,UAE/B19F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKmuH,IAChDnuH,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAEzCp9F,KAAKkuH,GAAME,SAAkB,OAAE9qH,MAAQtD,KAAK6yB,EAAKwjE,MAAMwrB,M,QCxFnDwM,GAaZ,WAAAtuH,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAZJ7yB,KAASg0B,UAAgBtO,EAAK6M,IAAI,CAAC0B,MAAO,mBAEzCj0B,KAAKsuH,GAAqB,GAC1BtuH,KAAcuuH,GAAwB,GACtCvuH,KAAgBwuH,GAAwB,GACxCxuH,KAAcyuH,GAAwB,GAC/CzuH,KAAsB0uH,GAAW,EACjC1uH,KAAsB2uH,IAAY,EAClC3uH,KAAwB4uH,IAAY,EAEpC5uH,KAAgB6uH,GAAW,EAO3B7uH,KAAA8uH,GAAa3qH,IACpB,MAAM4qH,EAA4B/uH,KAAKuuH,GAAetyF,QAAc93B,EAAMqc,QACpEwuG,EAA8BhvH,KAAKwuH,GAAiBvyF,QAAc93B,EAAMqc,QAC9E,IAA0B,GAAtBuuG,EAAyB,CAC5B,MAAME,EAAwBtuF,SAAS3gC,KAAKuuH,GAAeQ,GAAmBzrH,OACxEkd,EAAiByuG,EAAgB3tH,EAAOoa,4BAA4B7Y,OACpEiC,EAAiBmqH,EAAgB3tH,EAAOoa,4BAA4B7Y,SAAY,EACtF7C,KAAK6yB,EAAKi/D,OAAO,IAAI+J,GAAwB77F,KAAK6yB,EAAMk8F,EAAmBvuG,EAAQ1b,GACnF,MAAkC,GAAxBkqH,GACVhvH,KAAK6yB,EAAKi/D,OAAO,IAAIkK,GAAsBh8F,KAAK6yB,EAAMm8F,EAAqBhvH,KAAKwuH,GAAiBQ,GAAqBE,eACtH,EAGMlvH,KAAAmvH,GAAYhrH,IACnB,MAAMW,EAAgB9E,KAAKyuH,GAAexyF,QAAc93B,EAAMqc,SAChD,GAAV1b,GACH9E,KAAK6yB,EAAKi/D,OAAO,IAAI8J,GAAqB57F,KAAK6yB,EAAM/tB,GACrD,EArBD9E,KAAKg0B,UAAU9vB,iBAAiB,SAAUlE,KAAK8uH,IAC/C9uH,KAAKg0B,UAAU9vB,iBAAiB,QAASlE,KAAKmvH,G,CAuBvC,EAAAC,CAAY5uG,EAAgB1b,GACnC,IAAI8W,EAActa,EAAOoa,4BAA4B8E,GAAQ5E,YAQ7D,OAPIta,EAAOoa,4BAA4B8E,GAAQzE,SAAW,KACxB,GAA7BH,EAAYqgB,QAAQ,KACvBrgB,EAAcA,EAAY+B,QAAQ,IAAKuZ,OAAOpyB,EAAM,IAEpD8W,GAAe,KAAO9W,EAAM,IAGvB4gB,EAAK62E,OAAO,CAACj5F,MAAOkd,EAAS1b,EAAQxD,EAAOoa,4BAA4B7Y,QAAS+Y,E,CAGjF,EAAAyzG,CAA8BC,EAAyB1wG,GAC9D,IAAK,IAAI2wG,EAAsB,EAAGA,EAAcD,EAAKE,kBAAmBD,IAAe,CACtF,MAAMhzB,EAAgD+yB,EAAKjvB,SAASkvB,GAC9DN,EAAwBtuF,SAAS47D,EAAOj5F,OACxCkd,EAAiByuG,EAAgB3tH,EAAOoa,4BAA4B7Y,OACpEiC,EAAiBmqH,EAAgB3tH,EAAOoa,4BAA4B7Y,SAAY,EACtF05F,EAAOkzB,QAAU7wG,EAAW04B,uBAAuB92B,EAAQ1b,EAC3D,C,CAGK,MAAA8xB,GACN,MAAMhY,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAEhG,IAAK,IAAI/tC,EAAwB33C,KAAKsuH,GAAMzrH,OAAQ80C,EAAgB/4B,EAAWwvB,cAAeuJ,IAAiB,CAC9G,MAAM+3E,EAAkChqG,EAAK42E,SAC7C,IAAK,IAAI97E,EAAiB,EAAGA,EAASlf,EAAOoa,4BAA4B7Y,OAAQ2d,IAAU,CAC1F,MAAMmvG,EAAwBruH,EAAOoa,4BAA4B8E,GAAkB,WACnF,IAAK,IAAI1b,EAAgB,EAAGA,EAAQxD,EAAOoa,4BAA4B8E,GAAQzE,SAAUjX,IACxF4qH,EAAazrH,YAAYjE,KAAKovH,GAAY5uG,EAAQ1b,IAC9C6qH,GACHD,EAAazrH,YAAYjE,KAAKovH,GAAY5uG,EAAS,EAAG1b,IAGpD6qH,GAAanvG,GACjB,CAED,MAAMovG,EAAoClqG,EAAK42E,SAC/C,IAAK,IAAI77E,EAAmB,EAAGA,EAAWnf,EAAO4W,UAAUrV,OAAQ4d,IAClEmvG,EAAe3rH,YAAYyhB,EAAK62E,OAAO,CAACj5F,MAAOmd,GAAWnf,EAAO4W,UAAUuI,GAAUjc,OAGtF,MAAMqrH,EAAkCnqG,EAAKu2E,OAAO,CAAChnF,KAAM,SAAUgf,MAAO,oBAEtE67F,EAAsBpqG,EAAK6M,IAAI,CAAC0B,MAAO,gBAC5CvO,EAAK6M,IAAI,CAAC0B,MAAO,kBAAmB3O,MAAO,sBAAuBoqG,GAClEhqG,EAAK6M,IAAI,CAAC0B,MAAO,kBAAmB3O,MAAO,wBAAyBsqG,GACpEC,GAGD7vH,KAAKg0B,UAAU/vB,YAAY6rH,GAC3B9vH,KAAKsuH,GAAM32E,GAAiBm4E,EAC5B9vH,KAAKuuH,GAAe52E,GAAiB+3E,EACrC1vH,KAAKwuH,GAAiB72E,GAAiBi4E,EACvC5vH,KAAKyuH,GAAe92E,GAAiBk4E,CACrC,CAED,IAAK,IAAIl4E,EAAwB33C,KAAK0uH,GAAwB/2E,EAAgB/4B,EAAWwvB,cAAeuJ,IACvG33C,KAAKsuH,GAAM32E,GAAeryB,MAAMq/E,QAAU,GAE1C3kG,KAAKqvH,GAA8BrvH,KAAKuuH,GAAe52E,GAAgB/4B,GAGxE,IAAK,IAAI+4B,EAAwB/4B,EAAWwvB,cAAeuJ,EAAgB33C,KAAK0uH,GAAwB/2E,IACvG33C,KAAKsuH,GAAM32E,GAAeryB,MAAMq/E,QAAU,OAG3C,IAAIltD,EAA+B74B,EAAWgC,WAAWoqB,kBAIzD,GAHIpsB,EAAWgE,iBACd60B,EAAuB,GAEpBz3C,KAAK2uH,IAA0B/vG,EAAWW,SAASyrB,mBACtDhrC,KAAK4uH,IAA4Bn3E,GACjCz3C,KAAK+vH,IAA2BnxG,EAAW3J,MAC3CjV,KAAK6uH,IAAoBjwG,EAAW3P,QAGpC,IAAK,IAAI0oC,EAAwB,EAAGA,EAAgB33C,KAAK0uH,GAAwB/2E,IAChF33C,KAAKqvH,GAA8BrvH,KAAKuuH,GAAe52E,GAAgB/4B,GAIzE,IAAK,IAAI+4B,EAAwB,EAAGA,EAAgB/4B,EAAWwvB,cAAeuJ,IAC7E33C,KAAKuuH,GAAe52E,GAAer0C,MAAQ4zB,OAAOtY,EAAW1G,UAAUy/B,GAAen3B,OAAS5B,EAAW1G,UAAUy/B,GAAe7yC,MAAQxD,EAAOoa,4BAA4B7Y,QAC9K7C,KAAKwuH,GAAiB72E,GAAeu3E,cAAgBtwG,EAAW1G,UAAUy/B,GAAel3B,SAG1FzgB,KAAK0uH,GAAyB9vG,EAAWwvB,cACzCpuC,KAAK2uH,GAAyB/vG,EAAWW,SAASyrB,kBAClDhrC,KAAK4uH,GAA2Bn3E,EAChCz3C,KAAK+vH,GAA0BnxG,EAAW3J,KAC1CjV,KAAK6uH,GAAmBjwG,EAAW3P,O,QChIxB+gH,GAsBZ,WAAAjwH,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EArBH7yB,KAAY+yB,EAAW,IACvB/yB,KAAagzB,EAAW,GACxBhzB,KAAAiwH,GAA6BlqG,EAAI6N,KAAK,CAACT,KAAMrM,GAAYuJ,mBAAoB,iBAAkB,SAC/FrwB,KAAeohG,GAAmBr7E,EAAI6N,KAAK,CAACT,KAAM,OAAQO,OAAQ,eAAgB,eAAgB,EAAG,mBAAoB,OAAQ,iBAAkB,SACnJ1zB,KAAakwH,GAAmBnqG,EAAI6N,KAAK,CAACT,KAAM,OAAQO,OAAQ,eAAgB,eAAgB,EAAG,iBAAkB,SACrH1zB,KAAI+zB,EAAkBhO,EAAIwN,IAAI,CAACjO,MAAO,qBAAqBwB,GAAY6I,2DAA4DyD,MAAO,OAAQC,OAAQ,OAAQ8rE,QAAS,OAAOn/F,KAAK+yB,EAAa,IAAI/yB,KAAKgzB,EAAeosE,oBAAqB,QACjQp/F,KAAKiwH,GACLjwH,KAAKohG,GACLphG,KAAKkwH,IAEUlwH,KAAAg0B,UAAyBtO,EAAK6M,IAAI,CAAC0B,MAAO,YAAa3O,MAAO,iBAAkBtlB,KAAK+zB,GAE7F/zB,KAAOk0B,EAAW,EAClBl0B,KAAYmwH,GAAW,EACvBnwH,KAAUm0B,GAAY,EACtBn0B,KAAc+hG,IAAY,EAC1B/hG,KAAeowH,IAAY,EAC3BpwH,KAAWsiG,GAA0B,KACrCtiG,KAAeqwH,IAAY,EAC3BrwH,KAAgBswH,IAAY,EA4B5BtwH,KAAAk1B,EAAqB/wB,IAC5BA,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,KAC9Dx1B,KAAK8iG,IAAoB,EAGlB9iG,KAAA21B,EAAqBxxB,IAC5BA,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,EAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,KACxDx1B,KAAK8iG,IAAoB,EAgBlB9iG,KAAA61B,EAAmB1xB,IAC1B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,MAAMzqE,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,KAC1DiL,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACxCl0B,KAAK81B,IAAkB,EAGhB91B,KAAA+1B,GAAmB5xB,IAC1B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,IAAK7/F,KAAKm0B,EAAY,OACtBhwB,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,EAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,KACpDiL,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACxCl0B,KAAK81B,IAAkB,EA+BhB91B,KAAAg2B,GAAuB7xB,IAC9B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAnB,CACA,GAAI7/F,KAAKm0B,GAAcn0B,KAAK6yB,EAAKmwE,cAAchjG,KAAKsiG,KAAoC,MAApBtiG,KAAKsiG,GACxE,GAAKtiG,KAAK+hG,GAQT/hG,KAAK6yB,EAAKi/D,OAAO9xF,KAAKsiG,QARG,CACzB,MAAM1jF,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC5F1lF,KAAKowH,GACRpwH,KAAK6yB,EAAKi/D,OAAO,IAAIjD,GAAgB7uF,KAAK6yB,EAAM7yB,KAAKuwH,GAAWvwH,KAAKk0B,GAAUtV,EAAWuvB,UAE1FnuC,KAAK6yB,EAAKi/D,OAAO,IAAIjD,GAAgB7uF,KAAK6yB,EAAMjU,EAAWsvB,OAAQluC,KAAKwwH,GAAYxwH,KAAKk0B,IAE1F,CAIFl0B,KAAKsiG,GAAc,KACnBtiG,KAAK+hG,IAAiB,EACtB/hG,KAAKm0B,GAAa,CAfuB,CAelB,EAlHvB,MAAMs8F,EAAsBzwH,KAAK0wH,GAAYpvH,EAAOkT,gBACpDxU,KAAKohG,GAAgBt8E,aAAa,IAAK,KAAK2rG,SAAmBA,KAAezwH,KAAKgzB,KAEnFhzB,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKk1B,GAClDrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKg2B,IAC1Ch2B,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAK21B,GACnD31B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+1B,IAClD/1B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKg2B,IACjDh2B,KAAKg0B,UAAU9vB,iBAAiB,cAAelE,KAAKg2B,G,CAG7C,EAAA26F,CAAWziF,GAClB,OAAO,EAAkC,IAA3BluC,KAAK+yB,EAAe,GAAamb,GAAU5sC,EAAOgT,YAAc,E,CAEvE,EAAAi8G,CAAW35G,GAClB,OAAOwpB,GAAM,EAAG9+B,EAAOgT,YAAanJ,KAAKe,OAAO0K,EAAI,IAAQtV,EAAOgT,YAAc,IAAM,GAAMtU,KAAK+yB,EAAe,I,CAE1G,EAAA29F,CAAYviF,GACnB,OAAO,GAAOnuC,KAAK+yB,EAAe,IAAQ,GAAM,GAAMob,GAAW7sC,EAAOiT,aAAa1R,OAAS,G,CAEvF,EAAA2tH,CAAY55G,GACnB,OAAOwpB,GAAM,EAAG9+B,EAAOiT,aAAa1R,OAAQsI,KAAKe,OAAO5K,EAAOiT,aAAa1R,OAAS,KAAO+T,EAAI,IAAQ5W,KAAK+yB,EAAe,GAAO,IAAO,I,CAiBnI,EAAA+vE,GACHriE,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACxCl0B,KAAKmwH,GAAenwH,KAAKk0B,EACzBl0B,KAAKm0B,GAAa,EAClBn0B,KAAK+hG,IAAiB,EACtB,MAAMnjF,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1FkrC,EAAkB5wH,KAAK2wH,GAAW/xG,EAAWsvB,QAC7C2iF,EAAmB7wH,KAAK0wH,GAAY9xG,EAAWuvB,SACrDnuC,KAAKowH,GAAkBpwH,KAAKmwH,IAAgBS,EAAUC,GAAY,EAClE7wH,KAAKsiG,GAAc,IAAI3gB,GACvB3hF,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,G,CAqB7B,EAAAxsE,GAQP,GAPwB,MAApB91B,KAAKsiG,IAAuBtiG,KAAK6yB,EAAKmwE,cAAchjG,KAAKsiG,IAC5DtiG,KAAKsiG,GAAYnhB,OAEjBnhF,KAAKm0B,GAAa,EAEnBn0B,KAAKsiG,GAAc,KAEftiG,KAAKm0B,EAAY,CACpB,MAAMozB,EAA2B,IAAIo6B,GAQrC,GAPA3hF,KAAKsiG,GAAc/6C,EACnBvnD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,IAEhCn3F,KAAKC,IAAIpL,KAAKk0B,EAAUl0B,KAAKmwH,IAAgB,IAChDnwH,KAAK+hG,IAAiB,GAGnB/hG,KAAK+hG,GAAgB,CACxB,MAAMnjF,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC5F1lF,KAAKowH,GACR7oE,EAASk6B,OAAO,IAAIoN,GAAgB7uF,KAAK6yB,EAAM7yB,KAAKuwH,GAAWvwH,KAAK2wH,GAAW/xG,EAAWsvB,QAAUluC,KAAKk0B,EAAUl0B,KAAKmwH,IAAevxG,EAAWuvB,UAElJoZ,EAASk6B,OAAO,IAAIoN,GAAgB7uF,KAAK6yB,EAAMjU,EAAWsvB,OAAQluC,KAAKwwH,GAAYxwH,KAAK0wH,GAAY9xG,EAAWuvB,SAAWnuC,KAAKk0B,EAAUl0B,KAAKmwH,KAE/I,CACD,C,CAsBK,MAAAv5F,GACN,MAAMhY,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAEhG,GAAI1lF,KAAKqwH,IAAmBzxG,EAAWsvB,QAAUluC,KAAKswH,IAAoB1xG,EAAWuvB,QACpF,OAGD,MAAMyiF,EAAkB5wH,KAAK2wH,GAAW/xG,EAAWsvB,QAC7C2iF,EAAmB7wH,KAAK0wH,GAAY9xG,EAAWuvB,SACrDnuC,KAAKkwH,GAAcprG,aAAa,IAAK,KAAK8rG,SAAeA,KAAW5wH,KAAKgzB,OAAmB69F,SAAgBA,KAAY7wH,KAAKgzB,KAE7H,MAAMy9F,EAAsBzwH,KAAK0wH,GAAYpvH,EAAOkT,gBACpD,IAAIs8G,EAAmB,GACvBA,GAAY,OAAO9wH,KAAKgzB,KACxB89F,GAAY,KAAKF,OACb9oF,GAAMiJ,sBAAsBnyB,EAAWuvB,SAAW,GACrD2iF,GAAY,KAAKL,OACjBK,GAAY,KAAKD,KAAY7wH,KAAKgzB,OAElC89F,GAAY,KAAKD,OACjBC,GAAY,KAAKL,KAAezwH,KAAKgzB,MAEtC89F,GAAY,IACZ9wH,KAAKiwH,GAAWnrG,aAAa,IAAKgsG,E,EClKpC,MAAM70B,OAAEA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,GAAEC,MAAEA,IAAU12E,E,MAEtBqrG,GA0DZ,WAAAhxH,CAAYixH,GAzDKhxH,KAAY+yB,EAAW,IACvB/yB,KAAagzB,EAAW,GACxBhzB,KAAA++F,GAAwBh5E,EAAI6N,KAAK,CAAET,KAAMrM,GAAYuJ,mBAAoB,iBAAkB,SAC3FrwB,KAAMg/F,GAAkBj5E,EAAIwN,IAAI,CAAE,iBAAkB,SACpDvzB,KAASi/F,GAAkBl5E,EAAIwN,IAAI,CAAE,iBAAkB,SACvDvzB,KAAWixH,GAAmBlrG,EAAI6N,KAAK,CAAET,KAAM,OAAQO,OAAQ5M,GAAYmJ,cAAe,eAAgB,EAAG,iBAAkB,SAC/HjwB,KAASkxH,GAAqBnrG,EAAIu7E,OAAO,CAAEnuE,KAAMrM,GAAYmJ,cAAeyD,OAAQ,OAAQ6tE,EAAG,MAC/FvhG,KAASmxH,GAAmBprG,EAAI6N,KAAK,CAAET,KAAM,OAAQO,OAAQ5M,GAAYgJ,YAAa,eAAgB,EAAG,iBAAkB,SAC3H9vB,KAAWoxH,GAAmBrrG,EAAI6N,KAAK,CAAET,KAAM,OAAQO,OAAQ5M,GAAYsJ,WAAY,eAAgB,EAAG,iBAAkB,SAC5HpwB,KAASqxH,GAAqBtrG,EAAIu7E,OAAO,CAAEnuE,KAAMrM,GAAYsJ,WAAYsD,OAAQ,OAAQ6tE,EAAG,MAC5FvhG,KAAAsxH,GAA0BvrG,EAAI2rE,KAAK,CAAE96E,EAAG,QAASC,EAAG,SAAU,iBAAkB,OAAQ,YAAa,MAAOsc,KAAM,yBAA2B,KAC7InzB,KAAAuxH,GAA0BxrG,EAAI2rE,KAAK,CAAE96E,EAAG,QAASC,EAAG,SAAU,iBAAkB,OAAQ,YAAa,MAAOsc,KAAM,yBAA2B,KAC7InzB,KAAAwxH,GAA0BzrG,EAAI2rE,KAAK,CAAE96E,EAAG,QAASC,EAAG,SAAU,iBAAkB,OAAQ,YAAa,MAAOsc,KAAM,yBAA2B,KAC7InzB,KAAAyxH,GAA2B1rG,EAAI2rE,KAAK,CAAE96E,EAAG,MAAOC,EAAG,SAAU,iBAAkB,OAAQ,YAAa,MAAOsc,KAAM,yBAA2B,MAC5InzB,KAAA0xH,GAA4B3rG,EAAI2rE,KAAK,CAAE96E,EAAG,MAAOC,EAAG,OAAQ,iBAAkB,OAAQ,YAAa,MAAOsc,KAAM,yBAA2B,OAC3InzB,KAAA2xH,GAA8B5rG,EAAI2rE,KAAK,CAAE96E,EAAG,MAAOC,EAAG,OAAQ,iBAAkB,OAAQ,YAAa,MAAOsc,KAAM,uBAAyB,UAC3InzB,KAAA4xH,GAA8B7rG,EAAI2rE,KAAK,CAAE96E,EAAG,QAASC,EAAG,OAAQ,iBAAkB,OAAQ,YAAa,MAAOg7G,UAAW,qBAAsB1+F,KAAM,uBAAyB,QAC9KnzB,KAAA8xH,GAA8B/rG,EAAImN,KAAK,CAAE,iBAAkB,OAAQE,MAAO,OAAQC,OAAQ,MAAOzc,EAAG,KAAMC,EAAG,OAAQsc,KAAMrM,GAAYuJ,qBACvIrwB,KAAA+xH,GAA+BhsG,EAAImN,KAAK,CAAE,iBAAkB,OAAQE,MAAO,OAAQC,OAAQ,MAAOzc,EAAG,KAAMC,EAAG,OAAQsc,KAAMrM,GAAYuJ,qBACxIrwB,KAAYgyH,GAAmBjsG,EAAImN,KAAK,CAAE,iBAAkB,OAAQG,OAAQ,MAAOzc,EAAG,KAAMC,EAAG,OAAQsc,KAAM,uBAC7GnzB,KAAAiyH,GAA+BlsG,EAAImN,KAAK,CAAE,iBAAkB,OAAQE,MAAO,MAAOC,OAAQ,MAAOxc,EAAG,OAAQsc,KAAMrM,GAAYwJ,gBAC9HtwB,KAAakyH,GAAmBnsG,EAAImN,KAAK,CAAE,iBAAkB,OAAQG,OAAQ,MAAOzc,EAAG,KAAMC,EAAG,OAAQsc,KAAM,uBAC9GnzB,KAAAmyH,GAAgCpsG,EAAImN,KAAK,CAAE,iBAAkB,OAAQE,MAAO,MAAOC,OAAQ,MAAOxc,EAAG,OAAQsc,KAAMrM,GAAYwJ,gBAC/HtwB,KAAAoyH,GAAyBrsG,EAAI8tE,KAAK,CAAE,aAAc,OAAQn+E,OAAQ,QAClE1V,KAAAqyH,GAAyBtsG,EAAI8tE,KAAK,CAAE,aAAc,SAAUn+E,OAAQ,QACpE1V,KAAAsyH,GAAyBvsG,EAAI8tE,KAAK,CAAE,aAAc,MAAOn+E,OAAQ,QACjE1V,KAASuyH,GAAuBxsG,EAAIysG,eAAe,CAAEC,GAAI,aAAcC,cAAe,kBAAoB1yH,KAAKoyH,GAAQpyH,KAAKqyH,GAAQryH,KAAKsyH,IACzItyH,KAAK2yH,GAAmB5sG,EAAI6sG,KAAK,GAAI5yH,KAAKuyH,IAC1CvyH,KAAA+zB,EAAsBhO,EAAIwN,IAAI,CAAEjO,MAAO,qBAAqBwB,GAAY6I,2DAA4DyD,MAAO,OAAQC,OAAQ,OAAQ8rE,QAAS,OAASn/F,KAAK+yB,EAAe,IAAM/yB,KAAKgzB,EAAeosE,oBAAqB,QACxQp/F,KAAK2yH,GACL3yH,KAAK++F,GACL/+F,KAAKg/F,GACLh/F,KAAKi/F,GACLj/F,KAAKixH,GACLjxH,KAAKmxH,GACLnxH,KAAKoxH,GACLpxH,KAAKkxH,GACLlxH,KAAKqxH,GACLrxH,KAAKsxH,GACLtxH,KAAKuxH,GACLvxH,KAAKwxH,GACLxxH,KAAKyxH,GACLzxH,KAAK0xH,GACL1xH,KAAK2xH,GACL3xH,KAAK4xH,GACL5xH,KAAK8xH,GACL9xH,KAAK+xH,GACL/xH,KAAKgyH,GACLhyH,KAAKkyH,GACLlyH,KAAKiyH,GACLjyH,KAAKmyH,IAGUnyH,KAAAg0B,UAAyBtO,EAAK6M,IAAI,CAAE0B,MAAO,GAAI3O,MAAO,mDAAqDtlB,KAAK+zB,GAK/H,IAAK,IAAIlpB,EAAY,EAAGA,GAAK,EAAGA,IAC/B7K,KAAKg/F,GAAO/6F,YAAY8hB,EAAImN,KAAK,CAAEC,KAAMrM,GAAY0J,MAAO5Z,EAAI/L,EAAI7K,KAAK+yB,EAAe,EAAK,EAAGlc,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,KAE9H,IAAK,IAAInoB,EAAY,EAAGA,GAAK,EAAGA,GAAK,EACpC7K,KAAKi/F,GAAUh7F,YAAY8hB,EAAImN,KAAK,CAAEC,KAAMrM,GAAY2J,UAAW7Z,EAAI/L,EAAI7K,KAAK+yB,EAAe,EAAK,EAAGlc,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,KAGrIhzB,KAAK6yH,GAAiB7B,C,CAIhB,aAAA8B,CAAch6E,EAAqBi6E,EAAuBh6E,EAAsBi6E,GACtFhzH,KAAKgyH,GAAaltG,aAAa,QAAS,GAAK3Z,KAAKoC,IAAIvN,KAAK+yB,EAAc+lB,GAAe94C,KAAK+yB,EAAe,KAC5G/yB,KAAKiyH,GAAantG,aAAa,IAAK,GAAK3Z,KAAKoC,IAAIvN,KAAK+yB,EAAcggG,GAAiB/yH,KAAK+yB,EAAe,KAC1G/yB,KAAKkyH,GAAcptG,aAAa,QAAS,GAAK3Z,KAAKoC,IAAIvN,KAAK+yB,EAAcgmB,GAAgB/4C,KAAK+yB,EAAe,KAC9G/yB,KAAKmyH,GAAcrtG,aAAa,IAAK,GAAK3Z,KAAKoC,IAAIvN,KAAK+yB,EAAcigG,GAAkBhzH,KAAK+yB,EAAe,I,CAGtG,MAAA6D,GACN,MAAMosF,EAAwBh7E,GACtB78B,KAAK2L,IAAI,GAAI,EAAKkxB,EAAQ,IAAOhoC,KAAKgzB,EAAgB,GAAK,GAGnE,IAAIigG,EAAoB,EACpBC,EAA4B,EAC5BC,GAA0B,EAC1Bv/F,EAAe,GACfw/F,EAAqB,CAAC,GAAI,GAAI,IAClC,IAAK,IAAIvoH,EAAY,EAAGA,EAAI,GAAIA,IAAK,CAEpC,IAAIwoH,GAAwBrzH,KAAK6yH,GAAeS,iBAAiBhwH,MACjE+vH,EAAgBA,EAAe,GAAKA,EAAe,GAAMA,EAAe,EACxE,IAAIE,GAA2BvzH,KAAK6yH,GAAeW,uBAAuBlwH,MAC1EiwH,EAAmBA,EAAkB,GAAKA,EAAkB,GAAM,GAAKA,EAAkB,IAAM,GAC/F,IAAIE,GAA4BzzH,KAAK6yH,GAAea,qBAAqBpwH,MACrEqwH,GAA+B3zH,KAAK6yH,GAAee,2BAA2BtwH,MAC9EsiC,EAAqB,EAAJ/6B,EAAU,GAC3B03C,EAAoB,EAAI,KACxB3c,GAAU6tF,EAEblxE,EAAY,GAAK,MAAQ3c,EAAS,EAAI6tF,GAAoBJ,GAAgB,EAAIA,IAEtEztF,EAAS+tF,IAEjBpxE,EAAY,IAA2C,IAApC3c,EAAS,EAAI+tF,GAA6B,KAAQJ,EAAkB,MAAQ,EAAIA,KAI3F,GAAL1oH,IACH+oB,GAAQ,OAASnW,EAAaulG,EAAqBzgE,IAAc,KAI9D2wE,EAAoBC,IACnBA,GAAkB,IACrBC,EAASD,IAAmB,KAAO11G,EAAa5S,EAAI7K,KAAK+yB,EAAe,IAAM,IAAMtV,EAAaulG,EAAqBzgE,IAAc,KAErI6wE,EAASF,IAAsB,KAAOz1G,EAAa5S,EAAI7K,KAAK+yB,EAAe,IAAM,IAAMtV,EAAaulG,EAAqBzgE,IAAc,KAE9G,GAArB2wE,GAA6C,GAAlBC,GAA4C,GAArBD,KACrDlzH,KAAKkxH,GAAUpsG,aAAa,KAAMrH,EAAa5S,EAAI7K,KAAK+yB,EAAe,KACvE/yB,KAAKkxH,GAAUpsG,aAAa,KAAMrH,EAAaulG,EAAqBzgE,MAE5C,GAArB2wE,IACHlzH,KAAKqxH,GAAUvsG,aAAa,KAAMrH,EAAa5S,EAAI7K,KAAK+yB,EAAe,KACvE/yB,KAAKqxH,GAAUvsG,aAAa,KAAMrH,EAAaulG,EAAqBzgE,MAGrE4wE,EAAiBD,GAGD,GAAbD,GAA+B,GAAb1wE,GACrB3uB,GAAQ,KACRw/F,EAASF,IAAsB,OAE/Bt/F,GAAQ,KACRw/F,EAASF,IAAsB,MAEhCt/F,GAAQnW,EAAa5S,EAAI7K,KAAK+yB,EAAe,IAAM,IAAMtV,EAAaulG,EAAqBzgE,IAAc,IACzG6wE,EAASF,IAAsBz1G,EAAa5S,EAAI7K,KAAK+yB,EAAe,IAAM,IAAMtV,EAAaulG,EAAqBzgE,IAAc,IAChI0wE,EAAY1wE,EAGa,GAArB2wE,GAA2BroH,GAA2B,GAAtB8oH,EAA2B,GAC9DT,IAEwB,GAArBA,GAA2BroH,GAAwB,GAAnB4oH,EAAwB,GAC3DP,GAED,CAED,MAAMhQ,EAAqBF,EAAqBiQ,GAC5CA,EAAY,IACfr/F,GAAQ,MAAQ5zB,KAAK+yB,EAAe,GAAK,IAAMtV,EAAaylG,GAAc,IAC1EkQ,EAASF,IAAsB,MAAQlzH,KAAK+yB,EAAe,GAAK,IAAMtV,EAAaylG,GAAc,KAGlGljH,KAAKixH,GAAYnsG,aAAa,IAAKsuG,EAAS,IAC5CpzH,KAAKmxH,GAAUrsG,aAAa,IAAKsuG,EAAS,IAC1CpzH,KAAKoxH,GAAYtsG,aAAa,IAAKsuG,EAAS,IAC5CpzH,KAAK++F,GAAMj6E,aAAa,IAAK8O,EAAO,KAAO5zB,KAAK+yB,EAAe,IAAMtV,EAAaylG,GAAc,MAAQljH,KAAK+yB,EAAe,IAAMtV,EAAazd,KAAKgzB,GAAiB,QAAUvV,EAAazd,KAAKgzB,GAAiB,M,QAIvM6gG,GAkGZ,WAAA9zH,CAAoB8yB,EAA4B0tE,GAA5BvgG,KAAI6yB,EAAJA,EAA4B7yB,KAAWugG,GAAXA,EAhGxCvgG,KAAA8zH,cAA+B,IAAI/C,GAAc/wH,MAEzCA,KAAAygG,GAAiCxE,GAAO,CAAE32E,MAAO,cAAerQ,KAAM,WAEtEjV,KAAA+zH,iBAAqC33B,GAAM,CAAE1hD,MAAO,cAAep1B,MAAO,uCAAwCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,KAAMxT,MAAO,IAAKo5F,KAAM,MACxK18F,KAAAg0H,gBAAoC53B,GAAM,CAAE1hD,MAAO,aAAcp1B,MAAO,uCAAwCrQ,KAAM,QAAS1H,IAAK,OAAQuJ,IAAK,QAASxT,MAAO,OAAQo5F,KAAM,QAC/K18F,KAAA4zH,2BAA+Cx3B,GAAM,CAAE1hD,MAAO,uBAAwBp1B,MAAO,wCAAyCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,MAAOxT,MAAO,IAAKo5F,KAAM,SAC7L18F,KAAA0zH,qBAAyCt3B,GAAM,CAAE1hD,MAAO,oBAAqBp1B,MAAO,wCAAyCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,IAAKxT,MAAO,IAAKo5F,KAAM,SAClL18F,KAAAwzH,uBAA2Cp3B,GAAM,CAAE1hD,MAAO,mBAAoBp1B,MAAO,wCAAyCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,KAAMxT,MAAO,KAAMo5F,KAAM,MACrL18F,KAAAszH,iBAAqCl3B,GAAM,CAAE1hD,MAAO,gBAAiBp1B,MAAO,wCAAyCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,KAAMxT,MAAO,KAAMo5F,KAAM,MAC5K18F,KAAAi0H,iBAAqC73B,GAAM,CAAE1hD,MAAO,cAAep1B,MAAO,uCAAwCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,IAAKxT,MAAO,IAAKo5F,KAAM,SAU/K18F,KAAqBk0H,sBAAW,EAChCl0H,KAAmBm0H,oBAAW,EAC9Bn0H,KAAsBo0H,uBAAW,EACjCp0H,KAAoBq0H,qBAAW,EAEtBr0H,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,cAAgB,QACtFtlB,KAAYs0H,GAAsBr4B,GAAO,CAAE32E,MAAO,cAAgB,SAEnEtlB,KAAAg0B,UAA4BzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACrF62E,GAAG,mBACH5pE,GAAI,CAAEjN,MAAO,qHACZtlB,KAAKygG,IAENluE,GAAI,CAAEjN,MAAO,qFACZtlB,KAAK8zH,cAAc9/F,WAEpBzB,GAAI,CAAEjN,MAAO,uHACZiN,GAAI,CAAEjN,MAAO,6DAA6DwB,GAAYgJ,gBACrF,IAEDyC,GAAI,CAAEjN,MAAO,8DAA8DwB,GAAYmJ,kBACtF,SAEDsC,GAAI,CAAEjN,MAAO,4DAA4DwB,GAAYsJ,eACpF,WAGFmC,GAAI,CAAEjN,MAAO,uHACZiN,GAAI,CAAEjN,MAAO,6DAA6DwB,GAAYgJ,gBACrF,cAEDyC,GAAI,CAAEjN,MAAO,mCACZtlB,KAAK4zH,4BAENrhG,GAAI,CAAEjN,MAAO,iCACZtlB,KAAK0zH,uBAIPnhG,GAAI,CAAEjN,MAAO,oGACZiN,GAAI,CAAEjN,MAAO,6DAA6DwB,GAAYgJ,gBACrF,UAEDyC,GAAI,CAAEjN,MAAO,mCACZtlB,KAAKwzH,wBAENjhG,GAAI,CAAEjN,MAAO,iCACZtlB,KAAKszH,mBAGP/gG,GAAI,CAAEjN,MAAO,oGACZiN,GAAI,CAAEjN,MAAO,8DAA8DwB,GAAYgJ,gBACtF,gBAED9vB,KAAK+zH,kBAENxhG,GAAI,CAAEjN,MAAO,oGACZiN,GAAI,CAAEjN,MAAO,8DAA8DwB,GAAYgJ,gBACtF,eAED9vB,KAAKg0H,iBAENzhG,GAAI,CAAEjN,MAAO,oGACZiN,GAAI,CAAEjN,MAAO,8DAA8DwB,GAAYgJ,gBACtF,gBAED9vB,KAAKi0H,kBAEN1hG,GAAI,CAAEjN,MAAO,+EACZtlB,KAAK68F,GACL78F,KAAKs0H,IAENt0H,KAAK48F,IA6CE58F,KAAau0H,GAAG,KACvBv0H,KAAKk0H,wBACDl0H,KAAKk0H,uBAAyB,IACjCl0H,KAAKm0H,qBAAuB,KAEzBn0H,KAAK6yB,EAAK9F,KAAK+rB,YAAc94C,KAAKm0H,sBACrCn0H,KAAKm0H,oBAAsBn0H,KAAK6yB,EAAK9F,KAAK+rB,YAC1C94C,KAAKk0H,sBAAwB,IAG9Bl0H,KAAKo0H,yBACDp0H,KAAKo0H,wBAA0B,IAClCp0H,KAAKq0H,sBAAwB,KAE1Br0H,KAAK6yB,EAAK9F,KAAKgsB,aAAe/4C,KAAKq0H,uBACtCr0H,KAAKq0H,qBAAuBr0H,KAAK6yB,EAAK9F,KAAKgsB,aAC3C/4C,KAAKo0H,uBAAyB,IAG/Bp0H,KAAK8zH,cAAchB,cAAc9yH,KAAK6yB,EAAK9F,KAAK+rB,YAAa94C,KAAKm0H,oBAAqBn0H,KAAK6yB,EAAK9F,KAAKgsB,aAAc/4C,KAAKq0H,sBAEzHxvE,OAAO2vE,sBAAsBx0H,KAAKu0H,GAAc,EAGzCv0H,KAAW0gG,GAAG,KACrB1gG,KAAKugG,GAAYI,aACjB3gG,KAAK4gG,kBAAkB,EAiBhB5gG,KAAUwjH,GAAG,MACfxjH,KAAK0zH,qBAAqBpwH,OAAStD,KAAK4zH,2BAA2BtwH,QACvEtD,KAAK0zH,qBAAqB12B,oBAAoB,QAASh9F,KAAKy0H,IAC5Dz0H,KAAK0zH,qBAAqBpwH,MAAQtD,KAAK4zH,2BAA2BtwH,MAClEtD,KAAK0zH,qBAAqBxvH,iBAAiB,QAASlE,KAAKy0H,KAE1Dz0H,KAAK8zH,cAAcl9F,SACnB52B,KAAK00H,IAAgB,EAId10H,KAA6By0H,GAAG,MAClCz0H,KAAK0zH,qBAAqBpwH,OAAStD,KAAK4zH,2BAA2BtwH,QACvEtD,KAAK4zH,2BAA2B52B,oBAAoB,QAASh9F,KAAKwjH,IAClExjH,KAAK4zH,2BAA2BtwH,MAAQtD,KAAK0zH,qBAAqBpwH,MAClEtD,KAAK4zH,2BAA2B1vH,iBAAiB,QAASlE,KAAKwjH,KAEhExjH,KAAK8zH,cAAcl9F,SACnB52B,KAAK00H,IAAgB,EAGd10H,KAAM88F,GAAG,KAEhB98F,KAAKszH,iBAAiBhwH,MAAQ,GAAKtD,KAAK20H,mBACxC30H,KAAKwzH,uBAAuBlwH,MAAQ,GAAKtD,KAAK40H,yBAC9C50H,KAAK0zH,qBAAqBpwH,MAAQ,GAAKtD,KAAK60H,uBAC5C70H,KAAK4zH,2BAA2BtwH,MAAQ,GAAKtD,KAAK80H,6BAClD90H,KAAK+zH,iBAAiBzwH,MAAQ,GAAKtD,KAAK+0H,mBACxC/0H,KAAKg0H,gBAAgB1wH,MAAQ,GAAKtD,KAAKg1H,kBACvCh1H,KAAKi0H,iBAAiB3wH,MAAQ,GAAKtD,KAAKi1H,mBAExCj1H,KAAK00H,KACL10H,KAAK6yB,EAAK0qE,OAAS,IAAI,EAGjBv9F,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAKs0H,GAAat3B,oBAAoB,QAASh9F,KAAKk1H,IACpDl1H,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAK6gG,gBACnD7gG,KAAK+zH,iBAAiB/2B,oBAAoB,QAASh9F,KAAKwjH,IACxDxjH,KAAKg0H,gBAAgBh3B,oBAAoB,QAASh9F,KAAKwjH,IACvDxjH,KAAK0zH,qBAAqB12B,oBAAoB,QAASh9F,KAAKy0H,IAC5Dz0H,KAAKszH,iBAAiBt2B,oBAAoB,QAASh9F,KAAKwjH,IACxDxjH,KAAKwzH,uBAAuBx2B,oBAAoB,QAASh9F,KAAKwjH,IAC9DxjH,KAAK4zH,2BAA2B52B,oBAAoB,QAASh9F,KAAKwjH,IAClExjH,KAAKi0H,iBAAiBj3B,oBAAoB,QAASh9F,KAAKwjH,IAExDxjH,KAAKygG,GAAYzD,oBAAoB,QAASh9F,KAAK0gG,GAAY,EAGzD1gG,KAAA6gG,eAAkB18F,IACe,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SACxDr9F,KAAKi9F,KAEe,IAAjB94F,EAAMk5F,UACTr9F,KAAK0gG,KACLv8F,EAAMgxB,iBACN,EAGMn1B,KAAck1H,GAAG,KAEW,MAA/Bl1H,KAAKszH,iBAAiBhwH,OAA+C,QAA9BtD,KAAKg0H,gBAAgB1wH,OAAkD,KAA/BtD,KAAK+zH,iBAAiBzwH,OAAmD,KAAnCtD,KAAK0zH,qBAAqBpwH,OAAqD,MAArCtD,KAAKwzH,uBAAuBlwH,OAA0D,KAAzCtD,KAAK4zH,2BAA2BtwH,OAA+C,KAA/BtD,KAAKi0H,iBAAiB3wH,QAErRtD,KAAKszH,iBAAiBhwH,MAAQ,KAC9BtD,KAAKg0H,gBAAgB1wH,MAAQ,OAC7BtD,KAAK+zH,iBAAiBzwH,MAAQ,IAC9BtD,KAAK0zH,qBAAqBpwH,MAAQ,IAClCtD,KAAKwzH,uBAAuBlwH,MAAQ,KACpCtD,KAAK4zH,2BAA2BtwH,MAAQ,IACxCtD,KAAKi0H,iBAAiB3wH,MAAQ,IAE9BtD,KAAKwjH,KACL,EAGMxjH,KAAc00H,GAAG,KAExB10H,KAAK6yB,EAAKi/D,OAAO,IAAIjJ,GAAsB7oF,KAAK6yB,GAC7C7yB,KAAKszH,iBAAiBhwH,MAAQ,IAAMtD,KAAKszH,iBAAiBhwH,MAAQ,IAAOtD,KAAKszH,iBAAiBhwH,MAAQ,GACvGtD,KAAKwzH,uBAAuBlwH,MAAQ,IAAMtD,KAAKwzH,uBAAuBlwH,MAAQ,GAAM,IAAMtD,KAAKwzH,uBAAuBlwH,MAAQ,IAAM,IACrItD,KAAK0zH,qBAAqBpwH,OAC1BtD,KAAK4zH,2BAA2BtwH,OAChCtD,KAAKg0H,gBAAgB1wH,OACrBtD,KAAK+zH,iBAAiBzwH,OACtBtD,KAAKi0H,iBAAiB3wH,QACrB,EAAK,EAGDtD,KAAYi9F,GAAG,KACtBj9F,KAAK00H,KACL10H,KAAK6yB,EAAK0qE,OAAS,IAAI,EA/KvBv9F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAKs0H,GAAapwH,iBAAiB,QAASlE,KAAKk1H,IACjDl1H,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAK6gG,gBAEhD7gG,KAAKszH,iBAAiBhwH,MAAQ,IAAMtD,KAAK6yB,EAAK9F,KAAK6rB,WAAa,EAAgC,GAA5B54C,KAAK6yB,EAAK9F,KAAK6rB,WAAkB,EAAI54C,KAAK6yB,EAAK9F,KAAK6rB,YACxH54C,KAAKwzH,uBAAuBlwH,MAAQ,IAAMtD,KAAK6yB,EAAK9F,KAAK4rB,iBAAmB,EAAsC,GAAlC34C,KAAK6yB,EAAK9F,KAAK4rB,iBAAwB,GAA6C,IAAvC34C,KAAK6yB,EAAK9F,KAAK4rB,iBAAmB,IAC/J34C,KAAK0zH,qBAAqBpwH,MAAQ,GAAKtD,KAAK6yB,EAAK9F,KAAK2rB,eACtD14C,KAAK4zH,2BAA2BtwH,MAAQ,GAAKtD,KAAK6yB,EAAK9F,KAAK0rB,qBAC5Dz4C,KAAK+zH,iBAAiBzwH,MAAQ,GAAKtD,KAAK6yB,EAAK9F,KAAKwrB,WAClDv4C,KAAKg0H,gBAAgB1wH,MAAQ,GAAKtD,KAAK6yB,EAAK9F,KAAKyrB,UACjDx4C,KAAKi0H,iBAAiB3wH,MAAQ,GAAKtD,KAAK6yB,EAAK9F,KAAK8rB,WAElD74C,KAAK20H,oBAAsB30H,KAAKszH,iBAAiBhwH,MACjDtD,KAAK40H,0BAA4B50H,KAAKwzH,uBAAuBlwH,MAC7DtD,KAAK60H,wBAA0B70H,KAAK0zH,qBAAqBpwH,MACzDtD,KAAK80H,8BAAgC90H,KAAK4zH,2BAA2BtwH,MACrEtD,KAAK+0H,oBAAsB/0H,KAAK+zH,iBAAiBzwH,MACjDtD,KAAKg1H,mBAAqBh1H,KAAKg0H,gBAAgB1wH,MAC/CtD,KAAKi1H,oBAAsBj1H,KAAKi0H,iBAAiB3wH,MAEjDtD,KAAK+zH,iBAAiB7vH,iBAAiB,QAASlE,KAAKwjH,IACrDxjH,KAAKg0H,gBAAgB9vH,iBAAiB,QAASlE,KAAKwjH,IACpDxjH,KAAKszH,iBAAiBpvH,iBAAiB,QAASlE,KAAKwjH,IACrDxjH,KAAK0zH,qBAAqBxvH,iBAAiB,QAASlE,KAAKy0H,IACzDz0H,KAAKwzH,uBAAuBtvH,iBAAiB,QAASlE,KAAKwjH,IAC3DxjH,KAAK4zH,2BAA2B1vH,iBAAiB,QAASlE,KAAKwjH,IAC/DxjH,KAAKi0H,iBAAiB/vH,iBAAiB,QAASlE,KAAKwjH,IAErDxjH,KAAKygG,GAAYv8F,iBAAiB,QAASlE,KAAK0gG,IAEhD77C,OAAO2vE,sBAAsBx0H,KAAKu0H,IAElCv0H,KAAK4gG,mBAEL77C,YAAW,IAAM/kD,KAAKygG,GAAY/C,UAElC19F,KAAK8zH,cAAcl9F,Q,CAgCb,gBAAAgqE,GACF5gG,KAAK6yB,EAAK6B,MAAMyxC,SACnBnmE,KAAKygG,GAAYhuE,UAAUyI,OAAO,cAClCl7B,KAAKygG,GAAYhuE,UAAUC,IAAI,eAC/B1yB,KAAKygG,GAAY/lD,MAAQ,gBACzB16C,KAAKygG,GAAYK,UAAY,UAE7B9gG,KAAKygG,GAAYhuE,UAAUyI,OAAO,eAClCl7B,KAAKygG,GAAYhuE,UAAUC,IAAI,cAC/B1yB,KAAKygG,GAAY/lD,MAAQ,eACzB16C,KAAKygG,GAAYK,UAAY,O,ECzVhC,MAAM7E,OAAEA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,GAAEC,MAAEA,IAAU12E,E,MAEtByvG,GAST,WAAAp1H,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EARH7yB,KAAMo1H,GAAc,GACpBp1H,KAAWq1H,GAAuB,GAClCr1H,KAAUs1H,GAAqB,GAC/Bt1H,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,cAAgB,QAgC/FtlB,KAAM88F,GAAG,KACb98F,KAAK6yB,EAAKsuD,MAAM,EAGbnhF,KAAO+8F,QAAG,KACb/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAK6gG,eAAe,EAG/D7gG,KAAA6gG,eAAkB18F,IACkB,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SACrDr9F,KAAKi9F,IACR,EAIGj9F,KAAYi9F,GAAG,KACnB,IAAK,IAAIpyF,EAAI,EAAGA,EAAI7K,KAAKq1H,GAAYxyH,OAAQgI,IACzC7K,KAAKo1H,GAAOvqH,GAAK7K,KAAKq1H,GAAYxqH,GAAGyzF,QAEzCt+F,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKi/D,OAAO,IAAI7I,GAAkBjpF,KAAK6yB,EAAM7yB,KAAKo1H,IAAQ,EAjD/Dp1H,KAAKo1H,GAASviG,EAAK9F,KAAKsrB,YAAYsF,QACpC,IAAI43E,EAA8BhjG,GAAI,IACtC,IAAK,IAAI1nB,EAAI,EAAGA,EAAIvJ,EAAOsY,iBAAkB/O,IACzC7K,KAAKq1H,GAAYxqH,GAAKuxF,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,6CAA8Cg5E,QAAWt+F,KAAKo1H,GAAOvqH,GAAIvH,MAASuH,IACzI7K,KAAKs1H,GAAWzqH,GAAK0nB,GAAI,CAAEjN,MAAO,mCAC9B,QAAUza,EAAI,IACd7K,KAAKq1H,GAAYxqH,IAErB0qH,EAAYtxH,YAAYjE,KAAKs1H,GAAWzqH,IAG5C7K,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAElD98F,KAAKg0B,UAAYzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACvD62E,GAAG,gBACH5pE,GAAI,CAAEjN,MAAO,uFACTiwG,GAEJhjG,GAAI,CAAEjN,MAAO,+EACTtlB,KAAK68F,IAET78F,KAAK48F,IAET58F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAK6gG,e,QC7B3C20B,GAgCZ,WAAAz1H,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EA/BH7yB,KAAagzB,EAAW,GACvBhzB,KAAUy1H,GAAa,EACvBz1H,KAAQ01H,GAAe,EACvB11H,KAAS21H,GAAc,EAEvB31H,KAAK41H,GAAmB7vG,EAAI6N,KAAK,CAACT,KAAM,OAAQO,OAAQ5M,GAAYqJ,WAAY,eAAgB,IAChGnwB,KAAAqhG,GAA6Bt7E,EAAI6N,KAAK,CAACT,KAAMrM,GAAY8I,aAAc,iBAAkB,SAE1F5vB,KAAI+zB,EAAkBhO,EAAIwN,IAAI,CAACjO,MAAO,2CAA4C+N,OAAQrzB,KAAKgzB,GAC/GhzB,KAAK41H,GACL51H,KAAKqhG,IAGUrhG,KAAAg0B,UAAyBtO,EAAK6M,IAAI,CAAC0B,MAAO,cAAej0B,KAAK+zB,GAEtE/zB,KAAS61H,GAAW,GACpB71H,KAAO4iH,GAAsB,KAC5B5iH,KAAA81H,GAAkB,CAAC9uD,UAAW,EAAG8e,MAAO,GACzC9lF,KAAOk0B,EAAW,EAElBl0B,KAAa+1H,GAAW,EACxB/1H,KAAag2H,GAAW,EACxBh2H,KAAiBi2H,IAAY,EAC7Bj2H,KAAqBk2H,IAAY,EACjCl2H,KAAUm0B,GAAY,EACtBn0B,KAAUo0B,GAAY,EACtBp0B,KAAkBm2H,IAAY,EAC9Bn2H,KAAiBo2H,IAAY,EAC7Bp2H,KAAiBq2H,GAAW,EAC5Br2H,KAAiBs2H,IAAY,EAgD7Bt2H,KAAA+0B,EAAkB5wB,IACrBnE,KAAKo0B,IACTp0B,KAAKo0B,GAAa,EAClBp0B,KAAKg1B,IAAgB,EAGdh1B,KAAAi1B,EAAiB9wB,IACnBnE,KAAKo0B,IACVp0B,KAAKo0B,GAAa,EAClBp0B,KAAKg1B,IAAgB,EAGdh1B,KAAAk1B,EAAqB/wB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,KAE7Dx1B,KAAKu2H,KACLv2H,KAAKg1B,IACLh1B,KAAK61B,EAAgB1xB,EAAM,EAGpBnE,KAAA21B,EAAqBxxB,IAE5BnE,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,EAAU/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvDx1B,KAAKu2H,KACLv2H,KAAKg1B,IAELh1B,KAAK+1H,GAAgB5xH,EAAMyxB,QAAQ,GAAGN,QACtCt1B,KAAKg2H,GAAgB7xH,EAAMyxB,QAAQ,GAAG6pE,QACtCz/F,KAAKk2H,IAAwB,EAC7Bl2H,KAAKi2H,IAAoB,CAAK,EAGvBj2H,KAAA61B,EAAmB1xB,IAC1B,MAAMixB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,KAE7Dx1B,KAAK81B,IAAkB,EAGhB91B,KAAA+1B,GAAmB5xB,IAC1B,IAAKnE,KAAKm0B,EAAY,OACtB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,EAAU/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,KAGlDx1B,KAAKk2H,IAA0Bl2H,KAAKi2H,KACpC9qH,KAAKC,IAAIjH,EAAMyxB,QAAQ,GAAG6pE,QAAUz/F,KAAKg2H,IAAiB,GAC7Dh2H,KAAKi2H,IAAoB,EACf9qH,KAAKC,IAAIjH,EAAMyxB,QAAQ,GAAGN,QAAUt1B,KAAK+1H,IAAiB,KACpE/1H,KAAKk2H,IAAwB,IAI3Bl2H,KAAKk2H,KACRl2H,KAAK81B,KACL3xB,EAAMgxB,iBACN,EAyDMn1B,KAAAw2H,GAAsBryH,IAC7BA,EAAMgxB,iBACDn1B,KAAKi2H,KACTj2H,KAAK81B,KACL91B,KAAKo0B,GAAa,EAClBp0B,KAAKg2B,GAAoB7xB,GACzBnE,KAAKg1B,KAGNh1B,KAAKm0B,GAAa,CAAK,EAGhBn0B,KAAAg2B,GAAuB7xB,IACV,MAAhBnE,KAAK4iH,IAAiB5iH,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,IAChD5iH,KAAK4iH,GAAU,KACf5iH,KAAKm0B,GAAa,EAClBn0B,KAAKu2H,KACLv2H,KAAKqyG,IAAS,EAiCPryG,KAAgBy2H,GAAG,KAC1Bz2H,KAAKqyG,IAAS,EAvNdryG,KAAKu2H,KACLv2H,KAAKqyG,KACLryG,KAAK6yB,EAAKoD,SAASygG,MAAM12H,KAAKy2H,IAE9Bz2H,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKk1B,GAClDrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKg2B,IAC1Ch2B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+0B,GAClD/0B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKi1B,GAEjDj1B,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAK21B,GACnD31B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+1B,IAClD/1B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKw2H,IACjDx2H,KAAKg0B,UAAU9vB,iBAAiB,cAAelE,KAAKw2H,G,CAG7C,EAAAD,GACP,MAAM37E,EAAc56C,KAAKk0B,EAAUl0B,KAAK61H,GACxC71H,KAAK81H,GAAQ9uD,SAAWpsB,EAEpBA,EAAM56C,KAAK6yB,EAAK9F,KAAKwtB,UAAY,KAAQK,EAAM56C,KAAK6yB,EAAK9F,KAAKwtB,UAAYv6C,KAAK6yB,EAAK9F,KAAKytB,WAAa,IACrGI,EAAM56C,KAAK6yB,EAAK9F,KAAKwtB,UAAwC,GAA5Bv6C,KAAK6yB,EAAK9F,KAAKytB,WACnDx6C,KAAK81H,GAAQhwC,KAAO9lF,KAAKy1H,GAEzBz1H,KAAK81H,GAAQhwC,KAAO9lF,KAAK01H,GAG1B11H,KAAK81H,GAAQhwC,KAAO9lF,KAAK21H,E,CAInB,EAAAgB,CAAeC,GACtB,IAAI52F,EAAgB70B,KAAKe,MAAM0qH,EAAS52H,KAAK6yB,EAAK9F,KAAKytB,WAAa,GAChEva,EAAcD,EAAQhgC,KAAK6yB,EAAK9F,KAAKytB,WASxC,OARGxa,EAAQ,IACXC,GAAOD,EACPA,EAAQ,GAELC,EAAMjgC,KAAK6yB,EAAK9F,KAAKoJ,WACxB6J,GAASC,EAAMjgC,KAAK6yB,EAAK9F,KAAKoJ,SAC9B8J,EAAMjgC,KAAK6yB,EAAK9F,KAAKoJ,UAEd,CAAC6J,MAAOA,EAAOn9B,OAAQo9B,EAAMD,E,CAoE9B,EAAAlK,GACP,GAAI91B,KAAKm0B,EAAY,CACpB,IAAIw1D,EAAmB3pF,KAAK6yB,EAAK9F,KAAKwtB,UAClC6+C,EAAiBp5F,KAAK6yB,EAAK9F,KAAKwtB,UAAYv6C,KAAK6yB,EAAK9F,KAAKytB,WAC3C,MAAhBx6C,KAAK4iH,IAAmB5iH,KAAK6yB,EAAKmwE,cAAchjG,KAAK4iH,MACxDj5B,EAAW3pF,KAAK4iH,GAAQj5B,SACxByP,EAASzP,EAAW3pF,KAAK4iH,GAAQryB,WAGlC,MAAM31C,EAAc56C,KAAKk0B,EAAUl0B,KAAK61H,GACxC,IAAI71F,EACAC,EACA/F,EACJ,GAAIl6B,KAAK81H,GAAQhwC,MAAQ9lF,KAAKy1H,GAC7Bz1F,EAAQ2pD,EAAWx+E,KAAKe,MAAM0uC,EAAM56C,KAAK81H,GAAQ9uD,UACjD/mC,EAAMm5D,EACFp5D,EAAQ,IAAGA,EAAQ,GACnBA,GAAShgC,KAAK6yB,EAAK9F,KAAKoJ,WAAU6J,EAAQhgC,KAAK6yB,EAAK9F,KAAKoJ,UACzD6J,GAASC,EACZD,EAAQC,EAAM,EACJD,EAAQC,IAClB/F,EAAO8F,EACPA,EAAQC,EACRA,EAAM/F,GAEPl6B,KAAK4iH,GAAU,IAAItyB,GAAWtwF,KAAK6yB,EAAM82D,EAAUyP,EAASzP,EAAU3pD,EAAOC,EAAMD,QAC7E,GAAIhgC,KAAK81H,GAAQhwC,MAAQ9lF,KAAK01H,GACpC11F,EAAQ2pD,EACR1pD,EAAMm5D,EAASjuF,KAAKe,MAAM0uC,EAAM56C,KAAK81H,GAAQ9uD,UACzC/mC,EAAM,IAAGA,EAAM,GACfA,GAAOjgC,KAAK6yB,EAAK9F,KAAKoJ,WAAU8J,EAAMjgC,KAAK6yB,EAAK9F,KAAKoJ,UACrD8J,GAAOD,EACVC,EAAMD,EAAQ,EACJC,EAAMD,IAChB9F,EAAO8F,EACPA,EAAQC,EACRA,EAAM/F,GAEPl6B,KAAK4iH,GAAU,IAAItyB,GAAWtwF,KAAK6yB,EAAM82D,EAAUyP,EAASzP,EAAU3pD,EAAOC,EAAMD,QAC7E,GAAIhgC,KAAK81H,GAAQhwC,MAAQ9lF,KAAK21H,GAAW,CAC/C,MAAMkB,EAAuB72H,KAAK22H,GAAe/7E,GACjD56C,KAAK4iH,GAAU,IAAItyB,GAAWtwF,KAAK6yB,EAAM82D,EAAUyP,EAASzP,EAAUktC,EAAU72F,MAAO62F,EAAUh0H,OACjG,CACD7C,KAAK6yB,EAAK6B,MAAMg4C,eACZ1sE,KAAK6yB,EAAKwjE,MAAMygC,YACnB,IAAIxsC,GAAiBtqF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK1L,QAAShc,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,WAAW,GAE1F7vB,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAK4iH,GACpC,MACA5iH,KAAKu2H,KACLv2H,KAAKg1B,G,CAwBC,CAAAA,GACP,MAAM+hG,EAAyB/2H,KAAKo0B,IAAep0B,KAAKm0B,EAGxD,GAFAn0B,KAAKqhG,GAAW/7E,MAAMqR,WAAaogG,EAAgB,UAAY,SAE3DA,EAAe,CAClB,MAAMtyB,EAAiBzkG,KAAKgzB,EAAgB,EAE5C,IAAIgkG,EAA0Bh3H,KAAK6yB,EAAK9F,KAAc,UAAI/sB,KAAK61H,GAC3DoB,GAAyBj3H,KAAK6yB,EAAK9F,KAAKwtB,UAAYv6C,KAAK6yB,EAAK9F,KAAKytB,YAAcx6C,KAAK61H,GAC1F,GAAI71H,KAAK81H,GAAQhwC,MAAQ9lF,KAAKy1H,GAC7BwB,EAAiBj3H,KAAK6yB,EAAK9F,KAAc,UAAI/sB,KAAK61H,GAAqB,EAATpxB,OACxD,GAAIzkG,KAAK81H,GAAQhwC,MAAQ9lF,KAAK01H,GACpCsB,GAAkBh3H,KAAK6yB,EAAK9F,KAAKwtB,UAAYv6C,KAAK6yB,EAAK9F,KAAKytB,YAAcx6C,KAAK61H,GAAqB,EAATpxB,MACrF,CACN,MAAMoyB,EAAuB72H,KAAK22H,GAAe32H,KAAK81H,GAAQ9uD,UAC9DgwD,EAAkBH,EAAe,MAAI72H,KAAK61H,GAC1CoB,GAAiBJ,EAAU72F,MAAQ62F,EAAUh0H,QAAU7C,KAAK61H,EAC5D,CAED71H,KAAKqhG,GAAWv8E,aAAa,IAC5B,KAAKkyG,EAAiBvyB,SACjBwyB,EAAgBxyB,SAChBA,EAAS,KAAKA,EAAS,WAAoBwyB,EAAgBxyB,KAAUzkG,KAAKgzB,EAAgB,OAC1FgkG,EAAiBvyB,KAAUzkG,KAAKgzB,EAAgB,OAChDyxE,EAAS,KAAKA,EAAS,WAAoBuyB,EAAiBvyB,QAGlE,C,CAOM,EAAA4N,GACPryG,KAAK61H,GAAY71H,KAAK6yB,EAAKiC,cAE3B,MAAM2vE,EAAiBzkG,KAAKgzB,EAAgB,EACtCunB,EAAqBv6C,KAAK6yB,EAAK9F,KAAc,UAAI/sB,KAAK61H,GACtDqB,GAAoBl3H,KAAK6yB,EAAK9F,KAAKwtB,UAAYv6C,KAAK6yB,EAAK9F,KAAKytB,YAAcx6C,KAAK61H,GAEvF,GAAI71H,KAAKq2H,IAAqBr2H,KAAK6yB,EAAK9F,KAAKoJ,UAAYn2B,KAAKs2H,IAAqBt2H,KAAK61H,GAAW,CAClG71H,KAAKq2H,GAAoBr2H,KAAK6yB,EAAK9F,KAAKoJ,SACxCn2B,KAAKs2H,GAAoBt2H,KAAK61H,GAC9B,MAAMsB,EAAcn3H,KAAK61H,GAAY71H,KAAK6yB,EAAK9F,KAAKoJ,SACpDn2B,KAAKg0B,UAAU1O,MAAM8N,MAAQ+jG,EAAc,KAC3Cn3H,KAAK+zB,EAAKjP,aAAa,QAASqyG,EAAc,GAC9C,CAEGn3H,KAAKm2H,IAAsB57E,GAAav6C,KAAKo2H,IAAqBc,IACrEl3H,KAAKm2H,GAAqB57E,EAC1Bv6C,KAAKo2H,GAAoBc,EACzBl3H,KAAK41H,GAAM9wG,aAAa,IACvB,KAAKy1B,EAAYkqD,SACZyyB,EAAWzyB,SACXA,EAAS,KAAKA,EAAS,WAAoByyB,EAAWzyB,KAAUzkG,KAAKgzB,EAAgB,OACrFunB,EAAYkqD,KAAUzkG,KAAKgzB,EAAgB,OAC3CyxE,EAAS,KAAKA,EAAS,WAAoBlqD,EAAYkqD,UAK9DzkG,KAAKg1B,G,EC/RN,MAAMinE,OAACA,GAAM1pE,IAAEA,GAAG2pE,KAAEA,GAAIC,GAAEA,GAAEC,MAAEA,GAAKC,GAAEA,GAAEC,OAAEA,GAAMC,OAAEA,IAAU72E,E,MAE/C0xG,GA4BZ,WAAAr3H,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EA3BF7yB,KAAay8F,GAAqBL,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,SAAUynF,KAAM,OAAQp5F,MAAO,MACtHtD,KAAA28F,GAA+CL,GAAO,CAACh3E,MAAO,gBAC9Ei3E,GAAO,CAACj5F,MAAO,YAAa,+BAC5Bi5F,GAAO,CAACj5F,MAAO,cAAe,mCAEdtD,KAAa48F,GAAsBX,GAAO,CAAChoE,MAAO,iBAClDj0B,KAAA68F,GAAiCZ,GAAO,CAAChoE,MAAO,aAAc3O,MAAO,cAAe,QAErFtlB,KAASg0B,UAAmBzB,GAAI,CAAC0B,MAAO,qBAAsB3O,MAAO,iBACrF62E,GAAG,uBACF5pE,GAAI,CAACjN,MAAO,oGACXiN,GAAI,CAACjN,MAAO,sBACZ,iBACA+2E,KACCH,GAAK,CAAC52E,MAAO,8BAA8BwB,GAAYiJ,kBAAmB,0CAE5E/vB,KAAKy8F,IAELlqE,GAAI,CAACjN,MAAO,oGACXiN,GAAI,CAAC0B,MAAO,kBAAmB3O,MAAO,gBAAiBtlB,KAAK28F,KAE7DpqE,GAAI,CAACjN,MAAO,+EACZtlB,KAAK68F,IAEN78F,KAAK48F,IAqBG58F,KAAM88F,GAAG,KACjB98F,KAAK6yB,EAAKsuD,MAAM,EAGTnhF,KAAO+8F,QAAG,KACjB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKy8F,GAAcO,oBAAoB,OAAQo6B,GAAwBj6B,IACvEn9F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,GAAgB,EAG5Dp9F,KAAAo9F,GAAmBj5F,IACe,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SAC1Dr9F,KAAKi9F,IACL,EAWMj9F,KAAYi9F,GAAG,KACtBp4C,OAAOthD,aAAa+5F,QAAQ,4BAA6Bt9F,KAAK28F,GAA0Br5F,OACxFtD,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKi/D,OAAO,IAAI+C,GAAwB70F,KAAK6yB,GAAO7yB,KAAKy8F,GAAcn5F,MAAOtD,KAAK28F,GAA0Br5F,QAAQ,EAAK,EA7C/HtD,KAAKy8F,GAAclvF,KAAQvN,KAAK6yB,EAAK9F,KAAK4Z,YAAe,GACzD3mC,KAAKy8F,GAAc3lF,IAAM9W,KAAK6yB,EAAK9F,KAAK4Z,YAAc,GAEtD,MAAM82D,EAA8B54C,OAAOthD,aAAaC,QAAQ,6BAC5C,MAAhBi6F,IACHz9F,KAAK28F,GAA0Br5F,MAAQm6F,GAGxCz9F,KAAKy8F,GAAcH,SACnBv3C,YAAW,IAAM/kD,KAAKy8F,GAAciB,SAAS,KAE7C19F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKy8F,GAAcv4F,iBAAiB,OAAQkzH,GAAwBj6B,IACpEn9F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,G,CAoBzC,SAAOD,CAAgBh5F,GAC9B,MAAMi4F,EAA4Cj4F,EAAMqc,OACxD,IAAIld,GAAiB84F,EAAM94F,MAC3BA,EAAQ6H,KAAKe,MAAM5I,EAAQhC,EAAOwQ,cAAgBxQ,EAAOwQ,aACzDxO,EAAQ6H,KAAKe,MAAc,IAAR5I,GAAe,IAClC84F,EAAM94F,MAAQ6H,KAAK2L,KAAKslF,EAAM7uF,IAAKpC,KAAKoC,KAAK6uF,EAAMtlF,IAAKxT,IAAU,E,QCpEvD+zH,GAgCZ,WAAAt3H,CAAoB8yB,EAA4BykG,GAA5Bt3H,KAAI6yB,EAAJA,EAA4B7yB,KAAOs3H,GAAPA,EA9BxCt3H,KAAAu3H,GAAgC7xG,EAAK6M,IAAI,CAACjN,MAAO,eAAewB,GAAY6I,uFAEnE3vB,KAAQw3H,GAAqB,GAC7Bx3H,KAAcy3H,GAAqB,GACnCz3H,KAAmB03H,GAAmBhyG,EAAK6M,IAAI,CAAEjN,MAAO,qBAAqBwB,GAAYwJ,wKAAyK4iF,MAASpsF,GAAYgJ,aAAe,IACvS9vB,KAAiB23H,GAAa,IAAIvU,GAAS19F,EAAK02E,MAAM,CAAE92E,MAAO,UAAUwB,GAAYgJ,kCAAkChJ,GAAYwJ,oHAAqH4iF,MAASpsF,GAAYgJ,aAAe,IAAK9vB,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIyU,GAAkBz6F,KAAK6yB,EAAMo1D,EAAUjC,KAE9XhmF,KAAgB43H,GAAsBlyG,EAAK42E,OAAO,CAAEh3E,MAAO,sEAE3EI,EAAK62E,OAAO,CAAEj5F,MAAO,UAAY,aACjCoiB,EAAK62E,OAAO,CAAEj5F,MAAO,SAAW,mBAChCoiB,EAAK62E,OAAO,CAAEj5F,MAAO,WAAa,qBAClCoiB,EAAK62E,OAAO,CAAEj5F,MAAO,WAAa,gBAClCoiB,EAAK62E,OAAO,CAAEj5F,MAAO,WAAa,gBAClCoiB,EAAK62E,OAAO,CAAEj5F,MAAO,aAAe,wBACpCoiB,EAAK62E,OAAO,CAAEj5F,MAAO,aAAe,wBAGrBtD,KAAAg0B,UAAyBtO,EAAK6M,IAAI,CAAE0B,MAAO,aAAc3O,MAAO,kCAAoChkB,EAAOmb,gBAAkB,OAASzc,KAAK03H,GAAqB13H,KAAK23H,GAAkBv7B,MAAOp8F,KAAK43H,IAE3M53H,KAAagzB,EAAW,IACxBhzB,KAAqB63H,GAAW,EAChC73H,KAAsB83H,GAAW,EACjC93H,KAAsB+3H,GAAW,EACjC/3H,KAAoBg4H,GAAW,EAC/Bh4H,KAAsBi4H,IAAY,EAClCj4H,KAAuBk4H,GAAW,EAClCl4H,KAAoBm4H,IAAY,EAChCn4H,KAAyBo4H,IAAY,EAmBrCp4H,KAA0Bq4H,GAAG,KACpC,IAAIryC,EAAWhmF,KAAK23H,GAAkBv7B,MAAM94F,MACxC0iF,EAASnjF,OAAS,KACrB7C,KAAK23H,GAAkBv7B,MAAM94F,MAAQ0iF,EAAS/nC,UAAU,EAAG,IAC3D,EAGMj+C,KAAAs4H,GAA4Bn0H,IACnCA,EAAMo7F,iBAAiB,EAGhBv/F,KAAqBu4H,GAAG,KAC/Bv4H,KAAK23H,GAAkBv7B,MAAM92E,MAAMC,YAAY,UAAW,QAC1DvlB,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,OAAO,EAGtDvlB,KAAAw4H,GAAyBr0H,IAChCnE,KAAKm4H,IAAwBn4H,KAAKo4H,GAClCp4H,KAAKy4H,GAAkCt0H,EAAM,EAItCnE,KAAoB04H,GAAG,KAC9B14H,KAAKm4H,IAAuB,EAC5Bn4H,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,OAAO,EAItDvlB,KAAAy4H,GAAqCt0H,IAE5CnE,KAAKo4H,GAA4Bp4H,KAAKm4H,GAEtCn4H,KAAKk4H,GAA0B/sH,KAAK0hB,MAAM1hB,KAAKoC,IAAIvN,KAAK63H,GAAuB1sH,KAAK2L,IAAI,EAAG6pB,SAAS3gC,KAAK43H,GAAiBtyG,MAAMgC,iBAAiB,QAAUtnB,KAAKi4H,MAChKj4H,KAAK6yB,EAAK6nE,kBAAoB16F,KAAKk4H,GAEnCl4H,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,IAGjDvlB,KAAKk4H,GAA0Bl4H,KAAK6yB,EAAK9F,KAAKE,mBAAqBjtB,KAAK6yB,EAAK9F,KAAKE,mBAAqB3rB,EAAOgY,sBAC9GtZ,KAAKk4H,IAA2Bl4H,KAAK6yB,EAAK9F,KAAKE,mBAAqBjtB,KAAKk4H,GAA0Bl4H,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBAAqBltB,KAAK6yB,EAAK9F,KAAKG,mBAAqB5rB,EAAOkY,sBACrNxZ,KAAKk4H,IAA2Bl4H,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBAAqBltB,KAAK6yB,EAAK9F,KAAK+sB,iBAAmBx4C,EAAOoY,mBACpJ1Z,KAAK43H,GAAiBe,QAAQ,GAAGvd,UAAW,EAG5Cp7G,KAAK43H,GAAiBe,QAAQ,GAAGvd,UAAW,EAIT,GAAhCp7G,KAAKk4H,IAAgCl4H,KAAKk4H,IAA2Bl4H,KAAK6yB,EAAK9F,KAAKE,mBAAqBjtB,KAAKk4H,IAA2Bl4H,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAC9LltB,KAAK43H,GAAiBe,QAAQ,GAAGvd,UAAW,EAG5Cp7G,KAAK43H,GAAiBe,QAAQ,GAAGvd,UAAW,EAEzCp7G,KAAKk4H,IAA2Bl4H,KAAK6yB,EAAK9F,KAAKE,kBAAoB,GAAKjtB,KAAKk4H,IAA2Bl4H,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoB,GAAKltB,KAAKk4H,IAA2Bl4H,KAAK6yB,EAAK9F,KAAKiK,kBAAoB,EACzPh3B,KAAK43H,GAAiBe,QAAQ,GAAGvd,UAAW,EAG5Cp7G,KAAK43H,GAAiBe,QAAQ,GAAGvd,UAAW,EAIL,GAApCp7G,KAAK6yB,EAAK9F,KAAKE,mBAA0D,GAAhCjtB,KAAKk4H,GACjDl4H,KAAK43H,GAAiBe,QAAQ,GAAGvd,UAAW,EAG5Cp7G,KAAK43H,GAAiBe,QAAQ,GAAGvd,UAAW,CAC5C,EAGMp7G,KAAA44H,GAA2Bz0H,IAOlC,OANAnE,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,QACtDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,UAAW,QACnDvlB,KAAKm4H,IAAuB,EAC5Bh0H,EAAMo7F,kBAGEv/F,KAAK43H,GAAiBt0H,OAC7B,IAAK,SACJtD,KAAK23H,GAAkBv7B,MAAM92E,MAAMC,YAAY,UAAW,IAC1DvlB,KAAK23H,GAAkBv7B,MAAM92E,MAAMC,YAAY,YAAavlB,KAAK03H,GAAoBpyG,MAAMgC,iBAAiB,cAChE,MAAxCtnB,KAAK03H,GAAoBjqG,YAC5BztB,KAAK23H,GAAkBv7B,MAAM94F,MAAQtD,KAAK03H,GAAoBjqG,YAG9DztB,KAAK23H,GAAkBv7B,MAAM94F,MAAQ,GAEtCtD,KAAK23H,GAAkBv7B,MAAME,SAC7B,MACD,IAAK,QACJt8F,KAAK6yB,EAAKi/D,OAAO,IAAIhJ,GAAmB9oF,KAAK6yB,EAAM7yB,KAAKk4H,GAAyBl4H,KAAKk4H,IAA0B,IAChH,MACD,IAAK,UACJl4H,KAAK6yB,EAAKi/D,OAAO,IAAIhJ,GAAmB9oF,KAAK6yB,EAAM7yB,KAAKk4H,GAAyBl4H,KAAKk4H,GAAyB,IAC/G,MACD,IAAK,UACJl4H,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAKk4H,IAAyBhgF,OAASl4C,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAKk4H,IAAyBhgF,MACrHl4C,KAAK42B,SACL,MACD,IAAK,UAAW,CAEf,IAAIiiG,GAAsB,EAC1B,IAAK,IAAI1xG,EAAkB,EAAGA,EAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmB/F,IACxGnnB,KAAK6yB,EAAK9F,KAAKurB,SAASnxB,GAAS+wB,QAAU/wB,GAAWnnB,KAAKk4H,MAC9DW,GAAa,EACb1xG,EAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBAG9D,GAAI2rG,EACH,IAAK,IAAI1xG,EAAkB,EAAGA,EAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmB/F,IAC5GnnB,KAAK6yB,EAAK9F,KAAKurB,SAASnxB,GAAS+wB,MAAS/wB,GAAWnnB,KAAKk4H,QAI3D,IAAK,IAAI/wG,EAAkB,EAAGA,EAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmB/F,IAC5GnnB,KAAK6yB,EAAK9F,KAAKurB,SAASnxB,GAAS+wB,OAAQ,EAG3Cl4C,KAAK42B,SACL,KACA,CACD,IAAK,YACJ52B,KAAK6yB,EAAK1L,QAAUnnB,KAAKk4H,GACzBl4H,KAAK6yB,EAAK43D,UAAU2L,oBACpBp2F,KAAK6yB,EAAK43D,UAAUquC,gBACpB,MAED,IAAK,YACJ94H,KAAK6yB,EAAKi/D,OAAO,IAAI7H,GAAoBjqF,KAAK6yB,EAAM7yB,KAAKk4H,GAAyBl4H,KAAKk4H,KAKtD,UAA/Bl4H,KAAK43H,GAAiBt0H,OACzBtD,KAAKs3H,GAAQyB,eAEd/4H,KAAK43H,GAAiB1I,eAAiB,CAAC,EAGjClvH,KAAAmvH,GAAYhrH,IAEnB,MAAMW,EAAQ9E,KAAKw3H,GAASv7F,QAAwB93B,EAAMqc,QAC1D,IAAc,GAAV1b,EAAa,OACEX,EAAMmxB,QAAUt1B,KAAKw3H,GAAS,GAAGniG,wBAAwBG,KACjE,KACVx1B,KAAK6yB,EAAK9F,KAAKurB,SAASxzC,GAAOozC,OAASl4C,KAAK6yB,EAAK9F,KAAKurB,SAASxzC,GAAOozC,OAExEl4C,KAAK6yB,EAAKoD,SAASC,SAAS,EAGrBl2B,KAAAg5H,GAAgB70H,IACvB,MAAMW,EAAQ9E,KAAKw3H,GAASv7F,QAAwB93B,EAAMqc,QAC1D,IAAc,GAAV1b,EAMH,YALK9E,KAAKm4H,IAAwBh0H,EAAMqc,QAAUxgB,KAAK03H,IAAuBvzH,EAAMqc,QAAUxgB,KAAK43H,KAClG53H,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,QACtDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,UAAW,QACnDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,QAAS,SAKnD,GADmBphB,EAAMmxB,QAAUt1B,KAAKw3H,GAAS,GAAGniG,wBAAwBG,MAChE,IACX,IAAKx1B,KAAKm4H,GAAsB,CAE/Bn4H,KAAK43H,GAAiBtyG,MAAMC,YAAY,UAAW,IACnD,IAAI8N,EAASrzB,KAAK6yB,EAAKuE,mBACvBp3B,KAAK03H,GAAoBpyG,MAAMC,YAAY,YAAa,oBAAsB8N,EAAS,EAAIA,EAASvuB,GAAS,OAElE,IAAvC9E,KAAK6yB,EAAK9F,KAAKurB,SAASxzC,GAAON,MAClCxE,KAAK03H,GAAoBjqG,YAAcztB,KAAK6yB,EAAK9F,KAAKurB,SAASxzC,GAAON,KACtExE,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,MAGlDzgB,EAAQ9E,KAAK6yB,EAAK9F,KAAKE,kBAC1BjtB,KAAK03H,GAAoBjqG,YAAc,UAAY3oB,EAAQ,GACjDA,EAAQ9E,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBACpEltB,KAAK03H,GAAoBjqG,YAAc,UAAY3oB,EAAQ9E,KAAK6yB,EAAK9F,KAAKE,kBAAoB,GAG9FjtB,KAAK03H,GAAoBjqG,YAAc,QAAU3oB,EAAQ9E,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoB,GAGhIltB,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,SAGvDvlB,KAAK43H,GAAiBtyG,MAAMq6E,IAAOr+F,EAAOmb,gBAAkB,EAAI3X,EAAQ9E,KAAKi4H,GAA0B,KACvGj4H,KAAK43H,GAAiBtyG,MAAMC,YAAY,QAAS,OACjD,OAGIvlB,KAAKm4H,KACTn4H,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,QACtDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,UAAW,QACnDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,QAAS,OAElD,EAGMvlB,KAAAi5H,GAAiB90H,IACnBnE,KAAKm4H,KACTn4H,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,QACtDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,QAAS,OACjD,EA1NDvlB,KAAKg0B,UAAU9vB,iBAAiB,QAASlE,KAAKmvH,IAC9CnvH,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKg5H,IAClDh5H,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAKi5H,IAEnDj5H,KAAK43H,GAAiB1I,eAAiB,EACvClvH,KAAK43H,GAAiB1zH,iBAAiB,SAAUlE,KAAK44H,IACtD54H,KAAK43H,GAAiB1zH,iBAAiB,YAAalE,KAAKy4H,IACzDz4H,KAAK43H,GAAiB1zH,iBAAiB,OAAQlE,KAAK04H,IACpD14H,KAAK43H,GAAiB1zH,iBAAiB,QAASlE,KAAKw4H,IAErDx4H,KAAK23H,GAAkBv7B,MAAMl4F,iBAAiB,SAAUlE,KAAKu4H,IAC7Dv4H,KAAK23H,GAAkBv7B,MAAMl4F,iBAAiB,OAAQlE,KAAKu4H,IAC3Dv4H,KAAK23H,GAAkBv7B,MAAMl4F,iBAAiB,YAAalE,KAAKs4H,IAChEt4H,KAAK23H,GAAkBv7B,MAAMl4F,iBAAiB,QAASlE,KAAKq4H,G,CAgNtD,OAAAa,CAAQ/0H,GACd,OAAQA,EAAMk5F,SACb,KAAK,GAKL,KAAK,GACJr9F,KAAKm4H,IAAuB,EAE5Bn4H,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,Q,CAOlD,MAAAqR,GACN,IAAK52B,KAAK6yB,EAAKwjE,MAAM8iC,oBAAqB,OAE1C,MAAMx/B,EAAgB35F,KAAK6yB,EAAKuE,mBAEhC,GAAIp3B,KAAK63H,IAAyB73H,KAAK6yB,EAAK9F,KAAKiK,kBAAmB,CACnE,IAAK,IAAIngB,EAAY7W,KAAK63H,GAAuBhhH,EAAI7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,IAAK,CAE3F,MAAMuiH,EAAmC1zG,EAAK6M,IAAI,CAAE0B,MAAO,6BAA8B3O,MAAO,4SAC1F+zG,EAA6B3zG,EAAK6M,IAAI,CAAE0B,MAAO,cAAeymB,MAAO,kDAAmDp1B,MAAO,qGAE/Hg0G,EAAgC5zG,EAAK6M,IAAI,CAAEjN,MAAO,wHAA0H,CACjL+zG,EACAD,IAEDp5H,KAAKg0B,UAAU/vB,YAAYq1H,GAC3Bt5H,KAAKw3H,GAAS3gH,GAAKyiH,EACnBt5H,KAAKy3H,GAAe5gH,GAAKuiH,CACzB,CAED,IAAK,IAAIviH,EAAY7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,EAAI7W,KAAK63H,GAAuBhhH,IACtF7W,KAAKg0B,UAAUrB,YAAY3yB,KAAKw3H,GAAS3gH,IAG1C7W,KAAKw3H,GAAS30H,OAAS7C,KAAK6yB,EAAK9F,KAAKiK,kBAEtCh3B,KAAKg0B,UAAU/vB,YAAYjE,KAAKu3H,GAChC,CAED,IAAK,IAAI1gH,EAAY,EAAGA,EAAI7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,IACzD7W,KAAK6yB,EAAK9F,KAAKurB,SAASzhC,GAAGqhC,OAC9Bl4C,KAAKw3H,GAAS3gH,GAAGwpF,SAAS,GAAG5tE,UAAUC,IAAI,SAEvC7b,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBACtBjtB,KAAKy3H,GAAe5gH,GAAGyO,MAAM4tF,MAAQpsF,GAAYqK,sBACzCta,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAC9DltB,KAAKy3H,GAAe5gH,GAAGyO,MAAM4tF,MAAQpsF,GAAYuK,sBAEjDrxB,KAAKy3H,GAAe5gH,GAAGyO,MAAM4tF,MAAQpsF,GAAYyK,sBAGlDvxB,KAAKw3H,GAAS3gH,GAAGwpF,SAAS,GAAG5tE,UAAUyI,OAAO,SAE1CrkB,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBACtBjtB,KAAKy3H,GAAe5gH,GAAGyO,MAAM4tF,MAAQpsF,GAAYoK,mBACzCra,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAC9DltB,KAAKy3H,GAAe5gH,GAAGyO,MAAM4tF,MAAQpsF,GAAYsK,mBAEjDpxB,KAAKy3H,GAAe5gH,GAAGyO,MAAM4tF,MAAQpsF,GAAYwK,kBAIpD,GAAItxB,KAAKi4H,IAA0Bt+B,GAAiB35F,KAAK63H,IAAyB73H,KAAK6yB,EAAK9F,KAAKiK,kBAChG,IAAK,IAAIngB,EAAY,EAAGA,EAAI7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,IAC7D7W,KAAKw3H,GAAS3gH,GAAGyO,MAAMi0G,WAAc5/B,EAAgB,IAAM,EAAK,KAChE35F,KAAKw3H,GAAS3gH,GAAGyO,MAAMk0G,cAAiB7/B,EAAgB,IAAM,EAAK,KAIrE,GAAI35F,KAAKg4H,IAAwBh4H,KAAK6yB,EAAK9F,KAAK+sB,iBAAmB95C,KAAK63H,IAAyB73H,KAAK6yB,EAAK9F,KAAKiK,kBAC/G,IAAK,IAAIngB,EAAY,EAAGA,EAAI7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,IACzDA,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBACzDltB,KAAKw3H,GAAS3gH,GAAGwpF,SAAS,GAAG5tE,UAAUyI,OAAO,WAG9Cl7B,KAAKw3H,GAAS3gH,GAAGwpF,SAAS,GAAG5tE,UAAUC,IAAI,WAK9C,GAAI1yB,KAAKg4H,IAAwBh4H,KAAK6yB,EAAK9F,KAAK+sB,iBAAmB95C,KAAK83H,IAA0B93H,KAAK6yB,EAAK9F,KAAKE,mBAAqBjtB,KAAK+3H,IAA0B/3H,KAAK6yB,EAAK9F,KAAKG,kBAAmB,CACtM,IAAK,IAAIrW,EAAY,EAAGA,EAAI7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,IAC7D,GAAIA,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBAAmB,CACzC,IAAIoT,EAAexpB,EAAI,EACvB7W,KAAKy3H,GAAe5gH,GAAG4W,YAAc4S,EAAM,GAC3CrgC,KAAKy3H,GAAe5gH,GAAGyO,MAAMm0G,SAAYp5F,GAAO,GAAM,WAAa,SACnE,MACI,GAAIxpB,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmB,CACjF,IAAImT,EAAexpB,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBAAoB,EAC1DjtB,KAAKy3H,GAAe5gH,GAAG4W,YAAc4S,EAAM,GAC3CrgC,KAAKy3H,GAAe5gH,GAAGyO,MAAMm0G,SAAYp5F,GAAO,GAAM,WAAa,SACnE,KACI,CACJ,IAAIA,EAAexpB,EAAI7W,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoB,EAC7FltB,KAAKy3H,GAAe5gH,GAAG4W,YAAc4S,EAAM,GAC3CrgC,KAAKy3H,GAAe5gH,GAAGyO,MAAMm0G,SAAYp5F,GAAO,GAAM,WAAa,SACnE,CAEFrgC,KAAK83H,GAAyB93H,KAAK6yB,EAAK9F,KAAKE,kBAC7CjtB,KAAK+3H,GAAyB/3H,KAAK6yB,EAAK9F,KAAKG,kBAC7CltB,KAAKg4H,GAAuBh4H,KAAK6yB,EAAK9F,KAAK+sB,eAC3C,CAEG95C,KAAKi4H,IAA0Bt+B,GAAiB35F,KAAK63H,IAAyB73H,KAAK6yB,EAAK9F,KAAKiK,oBAChGh3B,KAAKi4H,GAAyBt+B,EAC9B35F,KAAK63H,GAAwB73H,KAAK6yB,EAAK9F,KAAKiK,kBAC5Ch3B,KAAKgzB,EAAgB1xB,EAAOmb,gBAAkBzc,KAAK6yB,EAAK9F,KAAKiK,kBAAoB2iE,EACjF35F,KAAK03H,GAAoBpyG,MAAMC,YAAY,UAAW,QACtDvlB,KAAKg0B,UAAU1O,MAAM+N,OAAUrzB,KAAKgzB,EAAgB,GAAM,KAEtDhzB,KAAKi4H,GAAyB,IACjCj4H,KAAK03H,GAAoBpyG,MAAMC,YAAY,aAAc,QACzDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,aAAc,QACtDvlB,KAAK23H,GAAkBv7B,MAAM92E,MAAMC,YAAY,aAAc,SAGrDvlB,KAAKi4H,GAAyB,IACtCj4H,KAAK03H,GAAoBpyG,MAAMC,YAAY,aAAc,QACzDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,aAAc,QACtDvlB,KAAK23H,GAAkBv7B,MAAM92E,MAAMC,YAAY,aAAc,UAG7DvlB,KAAK03H,GAAoBpyG,MAAMC,YAAY,aAAc,OACzDvlB,KAAK43H,GAAiBtyG,MAAMC,YAAY,aAAc,OACtDvlB,KAAK23H,GAAkBv7B,MAAM92E,MAAMC,YAAY,aAAc,S,QCnYpDm0G,GA2BZ,WAAA35H,CAAoB8yB,EAA4B8mG,GAA5B35H,KAAI6yB,EAAJA,EAA4B7yB,KAAM25H,GAANA,EA1B/B35H,KAAY+yB,EAAW,GACvB/yB,KAAagzB,EAAW,IACxBhzB,KAAY45H,GAAW,EACvB55H,KAAA65H,GAAuBv4H,EAAOwY,aAC9B9Z,KAAA85H,IAAyB95H,KAAKgzB,EAAgBhzB,KAAK45H,IAAgB55H,KAAK65H,GAExE75H,KAAAwzB,EAA0BzN,EAAImN,KAAK,CAACC,KAAMrM,GAAYuJ,mBAAoBzZ,EAAG,EAAGC,EAAG,EAAGuc,MAAOpzB,KAAK+yB,EAAe,IACjH/yB,KAAAyzB,EAAmC1N,EAAImN,KAAK,CAACC,KAAM,OAAQO,OAAQ5M,GAAY8I,aAAc,eAAgB,EAAG,iBAAkB,OAAQhZ,EAAG,EAAGC,EAAG,EAAGuc,MAAOpzB,KAAK+yB,EAAe,IAChL/yB,KAAA+5H,GAA+Bh0G,EAAI6N,KAAK,CAACT,KAAMrM,GAAY8I,aAAc,iBAAkB,SAC3F5vB,KAAAg6H,GAAiCj0G,EAAI6N,KAAK,CAACT,KAAMrM,GAAY8I,aAAc,iBAAkB,SAE9F5vB,KAAA+zB,EAAsBhO,EAAIwN,IAAI,CAAEjO,MAAO,8FAA+F8N,MAAOpzB,KAAK+yB,EAAcM,OAAQ,OAAQ8rE,QAAS,UAAYn/F,KAAKgzB,EAAeosE,oBAAqB,SAC9Op/F,KAAAg0B,UAA4BtO,EAAK6M,IAAI,CAACkgG,GAAI,2BAA4BntG,MAAO,oFAAqFtlB,KAAK+zB,GAGhL/zB,KAAOw+F,GAAW,EAClBx+F,KAAUm0B,GAAY,EACtBn0B,KAAUo0B,GAAY,EACtBp0B,KAASq0B,GAAY,EAIrBr0B,KAAkBi6H,IAAY,EAC9Bj6H,KAA2Bk6H,IAAY,EACvCl6H,KAAO4iH,GAAwB,KAoC/B5iH,KAAA+0B,EAAkB5wB,IACrBnE,KAAKo0B,IACTp0B,KAAKo0B,GAAa,EAClBp0B,KAAKg1B,IAAgB,EAGdh1B,KAAAi1B,EAAiB9wB,IACnBnE,KAAKo0B,IACVp0B,KAAKo0B,GAAa,EAClBp0B,KAAKg1B,IAAgB,EAGdh1B,KAAAk1B,EAAqB/wB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAE3Cr1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACpCx+F,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,UAAYnnB,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,WACpGnnB,KAAKg1B,IAEDh1B,KAAKw+F,IAAWx+F,KAAKm6H,GAAan6H,KAAKo6H,IAAcp6H,KAAKw+F,IAAWx+F,KAAKm6H,KAC7En6H,KAAKq0B,GAAY,EACjBr0B,KAAK4iH,GAAU,KACf5iH,KAAK01B,EAAa11B,KAAKw+F,IACvB,EAGMx+F,KAAA21B,EAAqBxxB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAE3Cr1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACpCx+F,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,UAAYnnB,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,WACpGnnB,KAAKg1B,IAEDh1B,KAAKw+F,IAAWx+F,KAAKm6H,GAAan6H,KAAKo6H,IAAcp6H,KAAKw+F,IAAWx+F,KAAKm6H,KAC7En6H,KAAKq0B,GAAY,EACjBr0B,KAAK4iH,GAAU,KACf5iH,KAAK01B,EAAa11B,KAAKw+F,IACvB,EAGMx+F,KAAA61B,EAAmB1xB,IAC1B,MAAMixB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAE3Cr1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EAGhB91B,KAAA+1B,GAAmB5xB,IAC1B,IAAKnE,KAAKm0B,EAAY,OACtBhwB,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAE3Cr1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EAqChB91B,KAAAg2B,GAAuB7xB,IAC9B,IAAKnE,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,WAAannB,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAAYnnB,KAAKm0B,EACtH,GAAIn0B,KAAKq0B,EACY,MAAhBr0B,KAAK4iH,IAAiB5iH,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,QAC1C,CACN,MAAMyX,EAA6Br6H,KAAK6yB,EAAKynG,wBACvCC,EAA4Bj5H,EAAOwY,aAAeugH,EAClDG,EAAgCx6H,KAAK6yB,EAAKmwE,cAAchjG,KAAK4iH,IAC7D36B,EAAmBuyC,EAAuBx6H,KAAK4iH,GAAS36B,SAAWjoF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6a,OAE9Gy4F,EAAwBz6H,KAAK6yB,EAAK6nG,qBAAqB16H,KAAK6yB,EAAK1L,SACnEnnB,KAAKw+F,GAAUx+F,KAAKm6H,GAA+B,GAAlBn6H,KAAKo6H,GACrCK,EAAgBF,IACnBv6H,KAAK4iH,GAAU,IAAIlyB,GAAa1wF,KAAK6yB,EAAMo1D,EAAU98E,KAAK0hB,MAAM4tG,EAAgB,EAAyB,GAArBJ,IACpFr6H,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,GAAS4X,IAG5BC,EAAgB,IACnBz6H,KAAK4iH,GAAU,IAAIlyB,GAAa1wF,KAAK6yB,EAAMo1D,EAAU98E,KAAK0hB,MAAM4tG,EAAgB,EAAyB,GAArBJ,IACpFr6H,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,GAAS4X,GAGjC,CAEFx6H,KAAKm0B,GAAa,EAClBn0B,KAAKq0B,GAAY,EACjBr0B,KAAKg1B,GAAgB,EAwBdh1B,KAAgBy2H,GAAG,KAC1Bz2H,KAAKm6H,GAAan6H,KAAKgzB,EAAiBhzB,KAAK85H,GAAgB95H,KAAK6yB,EAAK6nG,qBAAqB16H,KAAK6yB,EAAK1L,SACtGnnB,KAAK+zB,EAAKzO,MAAMqR,WAAc32B,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,UAAYnnB,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAY,SAAW,UACrJ,MAAMkzG,EAA6Br6H,KAAK6yB,EAAKynG,wBACzCt6H,KAAKi6H,IAAsBj6H,KAAKm6H,IAAcn6H,KAAKk6H,IAA+BG,IACrFr6H,KAAKi6H,GAAqBj6H,KAAKm6H,GAC/Bn6H,KAAKk6H,GAA8BG,EACnCr6H,KAAKo6H,GAAcp6H,KAAK85H,GAAgBO,EAAqBr6H,KAAK45H,GAClE55H,KAAKwzB,EAAQ1O,aAAa,SAAUoS,OAAOl3B,KAAKo6H,KAChDp6H,KAAKyzB,EAAiB3O,aAAa,SAAUoS,OAAOl3B,KAAKo6H,KACzDp6H,KAAKwzB,EAAQ1O,aAAa,IAAKoS,OAAOl3B,KAAKm6H,GAAan6H,KAAKo6H,KAC7Dp6H,KAAKyzB,EAAiB3O,aAAa,IAAKoS,OAAOl3B,KAAKm6H,GAAan6H,KAAKo6H,KAEtEp6H,KAAK25H,GAAOgB,eAEb36H,KAAKg1B,GAAgB,EApMrBh1B,KAAK6yB,EAAKoD,SAASygG,MAAM12H,KAAKy2H,IAC9Bz2H,KAAKy2H,KAELz2H,KAAK+zB,EAAK9vB,YAAYjE,KAAKwzB,GAG3B,IAAK,IAAI3oB,EAAY,EAAGA,GAAK7K,KAAK65H,GAAchvH,IAC9C7K,KAAK+zB,EAAK9vB,YAAY8hB,EAAImN,KAAK,CAACC,KAAMrM,GAAY0J,MAAO5Z,EAAG,EAAGC,EAAGhM,EAAI7K,KAAK85H,GAAe1mG,MAAOpzB,KAAK+yB,EAAcM,OAAQrzB,KAAK45H,MAGnI55H,KAAK+zB,EAAK9vB,YAAYjE,KAAKyzB,GAC3BzzB,KAAK+zB,EAAK9vB,YAAYjE,KAAK+5H,IAC3B/5H,KAAK+zB,EAAK9vB,YAAYjE,KAAKg6H,IAE3B,MAAM5jG,EAAqC,GAApBp2B,KAAK+yB,EAI5B/yB,KAAK+5H,GAAaj1G,aAAa,IAAK,KAAKsR,SAAmBA,EADjC,UACkEA,EADlE,UAE3Bp2B,KAAKg6H,GAAel1G,aAAa,IAAK,KAAKsR,KAAUp2B,KAAKgzB,EAHtC,OAG+DoD,EAFxD,KAE+Ep2B,KAAKgzB,EAJ1F,QAIoHoD,EAF9G,KAEqIp2B,KAAKgzB,EAJhJ,QAMrBhzB,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKk1B,GAClDrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKg2B,IAC1Ch2B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+0B,GAClD/0B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKi1B,GAEjDj1B,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAK21B,GACnD31B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+1B,IAClD/1B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKg2B,IACjDh2B,KAAKg0B,UAAU9vB,iBAAiB,cAAelE,KAAKg2B,G,CAmE7C,EAAAF,GACP,IAAI91B,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,WAAYnnB,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAApG,CACA,GAAInnB,KAAKq0B,EAAW,CACnB,MAAMgmG,EAA6Br6H,KAAK6yB,EAAKynG,wBACvCC,EAA4Bj5H,EAAOwY,aAAeugH,EAElDpyC,EADuCjoF,KAAK6yB,EAAKmwE,cAAchjG,KAAK4iH,IACnB5iH,KAAK4iH,GAAS36B,SAAWjoF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6a,OAG3H,IAAIA,EAD0BhiC,KAAK6yB,EAAK6nG,qBAAqB16H,KAAK6yB,EAAK1L,SAEvE,KAAOnnB,KAAKw+F,GAAUx+F,KAAK01B,EAAmC,IAArB11B,KAAK85H,IACxC93F,EAASu4F,GACbv4F,IACAhiC,KAAK01B,GAAc11B,KAAK85H,GAK1B,KAAO95H,KAAKw+F,GAAUx+F,KAAK01B,EAAkC,GAArB11B,KAAK85H,IACxC93F,EAAS,GACZA,IACAhiC,KAAK01B,GAAc11B,KAAK85H,GAM1B95H,KAAK4iH,GAAU,IAAIlyB,GAAa1wF,KAAK6yB,EAAMo1D,EAAU98E,KAAK0hB,MAAMmV,EAA8B,GAArBq4F,IACzEr6H,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAK4iH,GACpC,CAEG5iH,KAAKo0B,GAAYp0B,KAAKg1B,GA9BoF,C,CA8DvG,CAAAA,GAEP,IAAI4lG,GAA2B,EAC3BC,GAA6B,EAC7BnkG,GAA+B,EAHJ12B,KAAKo0B,IAAep0B,KAAKm0B,IAMnDn0B,KAAKw+F,GAAUx+F,KAAKm6H,GAAan6H,KAAKo6H,GACzCQ,GAAkB,EACR56H,KAAKw+F,GAAUx+F,KAAKm6H,GAC9BU,GAAoB,EAEpBnkG,GAAsB,GAIxB12B,KAAK+5H,GAAaz0G,MAAMqR,WAAaikG,EAAkB,UAAY,SACnE56H,KAAKg6H,GAAe10G,MAAMqR,WAAakkG,EAAoB,UAAY,SACvE76H,KAAKyzB,EAAiBnO,MAAMqR,WAAaD,EAAsB,UAAY,Q,sTC3L7E,MAAM+7F,IAA+B,WAAhBtnH,KAAKY,WAA2B,GAAG+uH,SAAS,I,MAEpDC,GACZ,WAAAh7H,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAoBZ7yB,KAAAg7H,GAAyB72H,IAGhCZ,aAAa+5F,QAAQ,gBAAiBm1B,GAAG,EAGlCzyH,KAAAi7H,GAAsB92H,IAC7B,GAAwB,UAApBA,EAAM+2H,KAAKjmH,KAEf,OAAQ9Q,EAAM+2H,KAAKC,OAClB,IAAK,YACJn7H,KAAKo7H,GAAmBj3H,EAAM+2H,MAC9B,MACD,IAAK,eACJl7H,KAAKq7H,GAAqBl3H,EAAM+2H,MAEjC,EAGMl7H,KAAAo7H,GAAsBE,IAC7BA,EAAUp3H,iBAAiB,cAAelE,KAAKu7H,GAAsB,EAG9Dv7H,KAAAq7H,GAAwBC,IAC/BA,EAAUt+B,oBAAoB,cAAeh9F,KAAKu7H,IAClDv7H,KAAK6yB,EAAKw3C,YAAYmxD,iBAAiB,EAGhCx7H,KAAAu7H,GAAkBp3H,IAEzB,IAAKnE,KAAK6yB,EAAKwjE,MAAMolC,YAAcl4H,aAAaC,QAAQ,kBAAoBivH,GAAI,OAEhF,MAAMiJ,EAAkB17H,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SACnE,IAAKsU,EAAWr4B,EAAKu9G,GAAYx8G,EAAMs2E,KAGvC,GAFAh/C,GAAa,IAETigG,EAAQ,CACX,MAAMzoF,EAAkC+lE,GAAiB51G,GACzD,GAAYoqB,MAARylB,EAGH,OAFA7vC,EAAM6vC,EAAK1yB,SAIZ,MAEA,GADAnd,GAAO9B,EAAO+O,KAAKrQ,KAAK6yB,EAAK9F,KAAK3pB,KAAKmN,UACnCnN,EAAM,GAAKA,EAAM9B,EAAO0Y,SAAU,OAOvC,OAJqC,KAAjCyhB,GAAiD,GAAZklF,IACxCllF,EAAS,KAGFA,GACP,SACCz7B,KAAK6yB,EAAK6B,MAAMyzC,oBAAqB,EACrCnoE,KAAK6yB,EAAKw3C,YAAYsxD,kBAAkBv4H,GACxC,MACD,SACCpD,KAAK6yB,EAAKw3C,YAAYuxD,qBAAqBx4H,GAE5C,EA/EDpD,KAAK67H,2B,CAGQ,yBAAAA,G,0CACb,GAAmC,MAA/Bt+G,UAAUu+G,kBAEd,IACC,MAAMC,QAAmBx+G,UAAUu+G,oBAEnCC,EAAWC,OAAOC,QAAQj8H,KAAKo7H,IAC/BW,EAAW73H,iBAAiB,cAAelE,KAAKi7H,IAEhDj7H,KAAKg7H,KACLn2E,OAAO3gD,iBAAiB,QAASlE,KAAKg7H,GACtC,CAAC,MAAOz5F,GACR92B,QAAQxH,MAAM,4BAA6Bs+B,EAC3C,C,GACD,E,MC5CW26F,GAcL,oBAAOC,CAAcx4C,EAAmB/sE,EAAWC,EAAWulH,GACpE,IAAIxb,EAA6B,KAC7Byb,EAA2B,KAC/B,OAAQD,GACP,IAAK,cACJxb,EAAkB,EAAJ/pG,EAAY,EAAJD,EAAQ,EAC9B,MACD,IAAK,YACJ,MACM0lH,EADqCh7H,EAAO4O,OAAOyzE,EAAI52D,KAAKutB,OAAOlqC,MACpB+J,KAAI,CAACoiH,EAAMz3H,IAAUy3H,EAAOz3H,EAAQ,OAAMs5B,QAAQt5B,GAAmB,MAATA,IACjH87G,GAAe/pG,EAAI,EAAI1L,KAAK0hB,MAAMjW,EAAI0lH,EAAaz5H,SAAWvB,EAAOsY,iBAAmB0iH,GAAc1lH,EAAI0lH,EAAaz5H,QAAUy5H,EAAaz5H,QAC9I,MACD,IAAK,WACJ+9G,EAAcsb,GAAeM,GAAU3lH,GAAGD,GAC1CylH,EAAY/6H,EAAO+O,KAAKrL,WAAc,EAAEuL,UACxC,MACD,IAAK,WACJqwG,EAAcsb,GAAeO,GAAU5lH,GAAGD,GAC1CylH,EAAY/6H,EAAO+O,KAAKrL,WAAc,EAAEuL,UACxC,MACD,IAAK,oBACJqwG,EAAcsb,GAAeM,GAAU3lH,GAAGD,GAC1C,MACD,IAAK,oBACJgqG,EAAcsb,GAAeO,GAAU5lH,GAAGD,GAI5C,GAAmB,MAAfgqG,EAAqB,OAAO,KAEhC,MAAMzkE,EAAuBhxC,KAAK2L,IAAI,EAAG6sE,EAAI52D,KAAKurB,SAASqrC,EAAIx8D,SAAS6a,OAAS,GAAK1gC,EAAOsY,iBAC7F,IAAI8iH,EAAoB,EAExB,GAAiB,MAAbL,EAAmB,CAEtBK,GAAaL,EADgB/6H,EAAO+O,KAAKszE,EAAI52D,KAAK3pB,KAAKmN,UACf,KAAO,EAC/C,CAED,MAAMozB,EAAQwY,EAAeugF,EAAY9b,EACzC,OAAIj9E,EAAQ,GAAKA,EAAQriC,EAAO0Y,SAAiB,KAE1C2pB,C,CAKR,WAAA5jC,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAFZ7yB,KAAmC28H,IAAY,EAM/C38H,KAAA48H,GAAiBz4H,IAEpBnE,KAAK28H,KACR38H,KAAK6yB,EAAKw3C,YAAYmxD,kBACtBx7H,KAAK28H,IAAsC,EAC3C,EARD93E,OAAO3gD,iBAAiB,OAAQlE,KAAK48H,G,CAW/B,cAAAC,CAAe14H,EAAsB24H,GAE3C,OAAQ34H,EAAM44H,MACb,IAAK,YAAa/8H,KAAKg9H,WAAW,EAAG,EAAGF,GAAU,MAClD,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,QAAS98H,KAAKg9H,UAAU,GAAI,EAAGF,GAAU,MAC9C,IAAK,QAAS98H,KAAKg9H,UAAU,GAAI,EAAGF,GAAU,MAC9C,IAAK,UAAW98H,KAAKg9H,UAAU,GAAI,EAAGF,GAAU,MAEhD,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,cAAe98H,KAAKg9H,UAAU,GAAI,EAAGF,GAAU,MACpD,IAAK,eAAgB98H,KAAKg9H,UAAU,GAAI,EAAGF,GAAU,MACrD,IAAK,YAEa,MAAb34H,EAAMf,KAA4B,KAAbe,EAAMf,IAC9BpD,KAAKg9H,UAAU,GAAI,EAAGF,GAEtB98H,KAAKg9H,UAAU,GAAI,EAAGF,GAEvB,MAED,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,YAAa98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MACjD,IAAK,QAAS98H,KAAKg9H,UAAU,GAAI,EAAGF,GAAU,MAC9C,IAAK,WAAY98H,KAAKg9H,UAAU,GAAI,EAAGF,GAAU,MAEjD,IAAK,gBAAiB98H,KAAKg9H,WAAW,EAAG,EAAGF,GAAU,MACtD,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,OAAQ98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC5C,IAAK,QAAS98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC7C,IAAK,SAAU98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC9C,IAAK,QAAS98H,KAAKg9H,UAAU,EAAG,EAAGF,GAAU,MAC7C,IAAK,SAAU98H,KAAKg9H,UAAU,GAAI,EAAGF,GAAU,MAE/C,QAAS,OAIV34H,EAAMgxB,gB,CAGA,SAAA6nG,CAAUpmH,EAAWC,EAAWimH,GAGtC,GADwB98H,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAWlE,YATIvQ,GAAK,GAAKA,EAAItV,EAAOuY,YACpBijH,GACH98H,KAAK6yB,EAAK6B,MAAMyzC,oBAAqB,EACrCnoE,KAAK6yB,EAAKw3C,YAAYsxD,kBAAkB/kH,GACxC5W,KAAK28H,IAAsC,GAE3C38H,KAAK6yB,EAAKw3C,YAAYuxD,qBAAqBhlH,KAM9C,MAAM+sB,EAAuBu4F,GAAeC,cAAcn8H,KAAK6yB,EAAMjc,EAAGC,EAAG7W,KAAK6yB,EAAKwjE,MAAM+lC,gBAE9E,MAATz4F,IACCm5F,GACH98H,KAAK6yB,EAAK6B,MAAMyzC,oBAAqB,EACrCnoE,KAAK6yB,EAAKw3C,YAAYsxD,kBAAkBh4F,GACxC3jC,KAAK28H,IAAsC,GAE3C38H,KAAK6yB,EAAKw3C,YAAYuxD,qBAAqBj4F,G,EAvK/Bu4F,GAAAM,GAAyD,CACvE,CAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,IACrD,CAAC,KAAQ,EAAK,EAAE,KAAQ,EAAK,EAAI,GAAG,KAAO,GAAK,GAAG,KAAO,IAC1D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAC,KAAO,GAAK,GAAG,KAAO,GAAK,GAAK,GAAG,KAAO,GAAK,GAAG,KAAO,GAAK,KAEjDN,GAAAO,GAAyD,CACvE,CAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,IACrD,EAAI,EAAK,EAAE,KAAQ,EAAK,EAAE,KAAQ,EAAI,GAAK,GAAG,KAAO,GAAK,IAC1D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAG,KAAO,GAAK,GAAG,KAAO,GAAK,GAAK,GAAG,KAAO,GAAK,GAAG,OCC/D,MAAMQ,GAAN,WAAAl9H,GACWC,KAAKk9H,OAAY,EACjBl9H,KAAQ6yD,SAAgB,KACxB7yD,KAAOm9H,QAAgB,KACvBn9H,KAAQ8yD,SAAgB,KACxB9yD,KAAK2jC,MAAW,EAChB3jC,KAAUm9C,YAAY,EACtBn9C,KAAQo9H,SAAW,EACnBp9H,KAAKggC,MAAW,EAChBhgC,KAAGigC,IAAW,EACdjgC,KAAI4kC,KAAW,EACf5kC,KAASq9H,UAAW,EACpBr9H,KAAYs9H,aAAW,EACvBt9H,KAAI8jC,KAAc,E,QAGhBy5F,GA2FT,WAAAx9H,CAAoB8yB,EAA4B2qG,EAA+BC,GAA3Dz9H,KAAI6yB,EAAJA,EAA4B7yB,KAAYw9H,GAAZA,EAA+Bx9H,KAAUy9H,GAAVA,EA1FxEz9H,KAAW09H,aAAY,EACvB19H,KAAS29H,WAAY,EACX39H,KAAkB49H,GAAsB73G,EAAI40B,QAAQ,CAAE83E,GAAI,8BAAgCzyH,KAAKy9H,GAAY7mH,EAAG,IAAKC,EAAG,IAAKgnH,aAAc,mBACzI79H,KAAkB89H,GAAsB/3G,EAAI40B,QAAQ,CAAE83E,GAAI,8BAAgCzyH,KAAKy9H,GAAY7mH,EAAG,IAAKC,EAAG,IAAKgnH,aAAc,mBACzI79H,KAAiB+9H,GAAsBh4G,EAAI40B,QAAQ,CAAE83E,GAAI,6BAA+BzyH,KAAKy9H,GAAY7mH,EAAG,IAAKC,EAAG,IAAKgnH,aAAc,mBACvI79H,KAAAg+H,GAAiCj4G,EAAImN,KAAK,CAAEtc,EAAG,IAAKC,EAAG,IAAK,iBAAkB,OAAQsc,KAAM,mCAAqCnzB,KAAKy9H,GAAa,MAC5Jz9H,KAAAi+H,GAAmCl4G,EAAIwN,MAC9BvzB,KAAAk+H,GAA+Bn4G,EAAImN,KAAK,CAAEtc,EAAG,IAAKC,EAAG,IAAKuc,MAAO,IAAKD,KAAMrM,GAAY+I,SAAU,iBAAkB,SACpH7vB,KAAAm+H,GAAiCp4G,EAAImN,KAAK,CAAEe,MAAO,wBAAyBd,KAAMrM,GAAYoJ,iBAAkBwD,OAAQ5M,GAAY8I,aAAc,eAAgB,EAAG,mBAAoB,OAAQ,eAAgB,MAAO,iBAAkB,OAAQ+G,WAAY,WAC9P32B,KAAWo+H,GAAmBr4G,EAAI6N,KAAK,CAAET,KAAM,OAAQO,OAAQ5M,GAAY8I,aAAc,eAAgB,IAAK,iBAAkB,SAC1I5vB,KAAiBq+H,kBAAmB34G,EAAK6M,IAAI,CAAEa,MAAO,KAAM,cAAe,QAASkrG,gBAAiB,OAAQh5G,MAAO,uGAAwG,oBAAqB,YACjPtlB,KAAA+zB,EAAsBhO,EAAIwN,IAAI,CAAEk/F,GAAG,aAAcntG,MAAO,yBAAyBniB,EAAoB,cAAe,qFAAqF2jB,GAAY6I,4DAA6DyD,MAAO,OAAQC,OAAQ,QACnTtN,EAAI6sG,KACO5yH,KAAK49H,GACL59H,KAAK89H,GACL99H,KAAK+9H,IAET/9H,KAAKg+H,GACLh+H,KAAKm+H,GACLn+H,KAAKi+H,GACLj+H,KAAKo+H,GACLp+H,KAAKk+H,IAEOl+H,KAAAg0B,UAA4BtO,EAAK6M,IAAI,CAAEjN,MAAO,oEAAsEtlB,KAAK+zB,EAAM/zB,KAAKq+H,mBAEnIr+H,KAAiBu+H,GAAW,GAC5Bv+H,KAAoBw+H,GAAqB,GACzCx+H,KAAAy+H,GAAqC14G,EAAImN,OACzClzB,KAAA0+H,GAAoC34G,EAAImN,OAIjDlzB,KAAsB2+H,GAAW,EACjC3+H,KAAqB4+H,GAAW,EAChC5+H,KAAuB6+H,GAAW,EACnC7+H,KAAe8+H,iBAAY,EAC1B9+H,KAAkB++H,GAAW,EAI7B/+H,KAAkBg/H,GAAW,EAC7Bh/H,KAAkBi/H,GAAW,EAI7Bj/H,KAAYk/H,IAAY,EAGxBl/H,KAAOk0B,EAAW,EAClBl0B,KAAOw+F,GAAW,EAClBx+F,KAAUm0B,GAAY,EACtBn0B,KAAUo0B,GAAY,EACtBp0B,KAAc+hG,IAAY,EAC1B/hG,KAAgBm/H,IAAY,EAC5Bn/H,KAAWo/H,IAAY,EACvBp/H,KAAkBq/H,GAAgB,GAElCr/H,KAAYmwH,GAAW,EACvBnwH,KAAYs/H,GAAW,EACvBt/H,KAAUu/H,GAAW,EACrBv/H,KAAUw/H,IAAY,EACtBx/H,KAAcy/H,IAAY,EAC1Bz/H,KAAyB0/H,IAAY,EACrC1/H,KAAuB2/H,IAAY,EACnC3/H,KAA0B4/H,IAAY,EACtC5/H,KAAS6/H,GAAW,EACpB7/H,KAAU8/H,GAAW,EACrB9/H,KAAS+/H,GAAW,EACpB//H,KAAYggI,IAAY,EACxBhgI,KAAWsiG,GAA0B,KACrCtiG,KAAuBigI,GAA0B,KACjDjgI,KAA8BkgI,IAAY,EAC1ClgI,KAAA81H,GAAyB,IAAImH,GAC7Bj9H,KAAmBmgI,GAAe,GAClCngI,KAAQu3F,GAAmB,KAC3Bv3F,KAAUogI,GAAW,EACrBpgI,KAAaqgI,GAAW,EACxBrgI,KAAcsgI,IAAY,EAC1BtgI,KAAeugI,IAAY,EAC3BvgI,KAAkBwgI,IAAY,EAC9BxgI,KAAoBygI,IAAY,EAChCzgI,KAAe8iH,IAAY,EAC3B9iH,KAAc0gI,IAAY,EAC1B1gI,KAAY2gI,IAAY,EACxB3gI,KAAe4gI,IAAY,EAC3B5gI,KAA0B6gI,IAAY,EACtC7gI,KAA0B8gI,IAAY,EACtC9gI,KAAwB+gI,IAAY,EACpC/gI,KAAkBghI,IAAY,EA0C9BhhI,KAAAihI,GAA8B98H,IAClC,MAAM05F,EAAwC15F,EAAMqc,OAGpD,IAAI0gH,EAAoBv5G,OAAOk2E,EAAMiD,WACrC,MAAKrgE,MAAMygG,IAAcA,GAAa,GAAKA,EAAYlhI,KAAKg/H,KAIrC,IAAnBnhC,EAAMiD,WAAsC,KAAnBjD,EAAMiD,UAAkB,CAE7CrgE,MAAMygG,KACNA,EAAYlhI,KAAKg/H,GACjBnhC,EAAMiD,UAAY,GAAK9gG,KAAKg/H,IAGhC,IAAImC,EAAoBh2H,KAAK0hB,MAAM1hB,KAAK2L,IAAI6Q,OAAO3nB,KAAKg/H,IAAqB7zH,KAAKoC,IAAIoa,OAAO3nB,KAAKi/H,IAAqBiC,KACnHrjC,EAAMiD,WAAaqgC,EAAY,KAC/BtjC,EAAMiD,UAAYqgC,EAAY,IAGlC,IAAIC,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IACjHnhI,KAAK2+H,IAA0BlhH,EAAatS,KAAK2L,IAAI3L,KAAKoC,IAAIvN,KAAK+yB,EAAe,GAAe,EAAVquG,EAAaphI,KAAKqhI,IAAcrhI,KAAKshI,GAAathG,MAAQhgC,KAAKuhI,GAAY99F,MAAQ,EAAc,EAAV29F,GAAc,IAC5LphI,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,OAAavlB,KAAK2+H,GAAyB,MAEpF,MAAMp3E,EAA2B,IAAIo6B,GACrC3hF,KAAKsiG,GAAc/6C,EACnBvnD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,IAEpC/6C,EAASk6B,OAAO,IAAIoZ,GAAe76F,KAAK6yB,EAAM7yB,KAAKshI,GAActhI,KAAKuhI,GAAY99F,KAAM09F,EAAW7/H,EAAOob,WAAW1c,KAAKwhI,IAAiBzkH,kBAAmB/c,KAAKuhI,GAAYtgH,SAAUjhB,KAAK29H,WAEjM,GAkYE39H,KAAeyhI,gBAAG,KACrB,MAAMC,EAAsB1hI,KAAK2hI,KACjC,IAAIloF,EAAcz5C,KAAK6yB,EAAK9F,KAAKwsB,cAAa,GAC9Cv5C,KAAKq/H,GAAmBx8H,OAAS7C,KAAK6yB,EAAK9F,KAAKiK,kBAChDh3B,KAAKmgI,GAAoBt9H,OAAS7C,KAAK6yB,EAAK9F,KAAKiK,kBACjD,IAAK,IAAInsB,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK9F,KAAKE,kBAAmBpiB,IAC1D7K,KAAKq/H,GAAmBx0H,GAAK,CAAC24B,GAAY,EAAG,EAAGiW,GAAMjW,GAAY,EAAGk+F,EAAajoF,IAClFz5C,KAAKmgI,GAAoBt1H,GAAK,CAAC4uC,EAAKA,GAExC,IAAK,IAAI5uC,EAAY7K,KAAK6yB,EAAK9F,KAAKE,kBAAmBpiB,EAAI7K,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBriB,IAC5H7K,KAAKq/H,GAAmBx0H,GAAK,CAAC24B,GAAY,EAAG,EAAGiW,GAAMjW,GAAY,EAAGk+F,EAAa,IAClF1hI,KAAKmgI,GAAoBt1H,GAAK,CAAC4uC,EAAK,GAExC,IAAK,IAAI5uC,EAAY7K,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBriB,EAAI7K,KAAK6yB,EAAK9F,KAAKiK,kBAAmBnsB,IAC5H7K,KAAKq/H,GAAmBx0H,GAAK,CAAC24B,GAAY,EAAG,EAAGiW,GAAMjW,GAAY,EAAGk+F,EAAa,IAClF1hI,KAAKmgI,GAAoBt1H,GAAK,CAAC4uC,EAAK,EACvC,EAGGz5C,KAAA4hI,GAAoBC,IAEpB7hI,KAAKo/H,KAAgBp/H,KAAK29H,YAAc39H,KAAK+hG,IAAkB/hG,KAAKm0B,GAAck2C,YAAYC,MAAQtqE,KAAKu/H,GAAa,KAAQv/H,KAAK81H,GAAQoH,OAASl9H,KAAK6yB,EAAKmwE,cAAchjG,KAAKsiG,MAEnLtiG,KAAKsiG,GAAanhB,OAClBnhF,KAAKw/H,IAAa,EAClBx/H,KAAKy/H,IAAiB,EACtBz/H,KAAK8iG,KAEL9iG,KAAK6yB,EAAKoD,SAAS6rG,kBAGvB,MAAMC,EAAsB52H,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,UAEvD,GAAI7vB,KAAK6yB,EAAK6B,MAAMyxC,UAA8B,MAAjBnmE,KAAKu3F,IAAoBv3F,KAAK6yB,EAAK9F,KAAK48B,WAAW3pD,KAAK6yB,EAAK1L,QAAShc,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,YAAc7vB,KAAKu3F,IAAapsF,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,WAAa7vB,KAAK6yB,EAAK+nB,IAAM56C,KAAKy9H,IAAa,CACxOz9H,KAAKk+H,GAAap5G,aAAa,aAAc,WAC7C,MAAMk9G,EAAsBhiI,KAAK6yB,EAAK6B,MAAM7E,SAAWkyG,EACnD52H,KAAKC,IAAI42H,EAAchiI,KAAKogI,IAAc,GAC1CpgI,KAAKogI,GAAa4B,EAElBhiI,KAAKogI,IAAgD,IAAjC4B,EAAchiI,KAAKogI,IAE3CpgI,KAAKk+H,GAAap5G,aAAa,IAAK,GAAKrH,EAAazd,KAAKogI,GAAapgI,KAAK+yB,EAAe,GAC/F,MACG/yB,KAAKk+H,GAAap5G,aAAa,aAAc,UAG7C9kB,KAAK6yB,EAAK6B,MAAMyxC,UAAYnmE,KAAK6yB,EAAK6B,MAAM0xC,WAAapmE,KAAK6yB,EAAKwjE,MAAMygC,aAAe92H,KAAKghI,IAAsBe,IAEnH,IAAIz3C,GAAiBtqF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK1L,QAAS46G,GAEnD/hI,KAAK6yB,EAAKoD,SAAS6rG,kBAEvB9hI,KAAKghI,GAAqBe,EAEtB/hI,KAAK6yB,EAAKovG,uBACVjiI,KAAKkiI,KAGTr9E,OAAO2vE,sBAAsBx0H,KAAK4hI,GAAiB,EAG/C5hI,KAAA+0B,EAAkB5wB,IAClBnE,KAAKo0B,IACTp0B,KAAKo0B,GAAa,EAClBp0B,KAAKo/H,IAAc,EAAK,EAGpBp/H,KAAAi1B,EAAiB9wB,IAChBnE,KAAKo0B,IACVp0B,KAAKo0B,GAAa,EAAK,EAGnBp0B,KAAAk1B,EAAqB/wB,IACzBA,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKo/H,IAAc,EACnBp/H,KAAKw/H,GAAar7H,EAAMojG,SACxBvnG,KAAKy/H,IAAiB,EACtBz/H,KAAK8iG,IAAoB,EAGrB9iG,KAAA21B,EAAqBxxB,IACzBA,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKo/H,IAAc,EACnBp/H,KAAKw/H,GAAar7H,EAAMojG,SACxBvnG,KAAKy/H,IAAiB,EACtBz/H,KAAKu/H,GAAal1D,YAAYC,MAC9BtqE,KAAK8iG,IAAoB,EAyHrB9iG,KAAA61B,EAAmB1xB,IACvBnE,KAAK09H,YAAcv5H,EAAMg+H,QACzBniI,KAAK29H,UAAYx5H,EAAMojG,SAEvB,MAAMnyE,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKo/H,IAAc,EACnBp/H,KAAK81B,IAAkB,EAGnB91B,KAAA+1B,GAAmB5xB,IACvB,IAAKnE,KAAKm0B,EAAY,OACtBhwB,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EAyZnB91B,KAAAg2B,GAAuB7xB,IAC3B,IAAKnE,KAAK81H,GAAQoH,MAAO,OAEzB,MAAMkF,EAA2BpiI,KAAK6yB,EAAKmwE,cAAchjG,KAAKsiG,IAC9D,GAAItiG,KAAKm0B,GAAciuG,GAAuC,MAApBpiI,KAAKsiG,GAE3C,GAAItiG,KAAK4/H,GACL5/H,KAAK6yB,EAAKi/D,OAAO9xF,KAAKsiG,IACtBtiG,KAAKsiG,GAAc,KAEE,MAAjBtiG,KAAKu3F,IAAoBv3F,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAAUnnB,KAAKu3F,GAASxyD,MAAM2iC,MAAK,SAAUrrC,EAAGC,GAAK,OAAQD,EAAE2D,OAAS1D,EAAE0D,MAAS3D,EAAEwH,QAAQ,GAAKvH,EAAEuH,QAAQ,GAAKxH,EAAE2D,MAAQ1D,EAAE0D,KAAM,SAEtM,GAAIhgC,KAAK0/H,IAA6B1/H,KAAK2/H,IAA2B3/H,KAAKw/H,GAC9Ex/H,KAAKqiI,GAAqBriI,KAAKsiG,IAC/BtiG,KAAKsiG,GAAc,UAChB,GAAItiG,KAAK+hG,IAA0C,MAAxB/hG,KAAK81H,GAAQqH,UAAoBn9H,KAAKsiG,GAAYzhB,UAAY7gF,KAAK0/H,IAA6B1/H,KAAK2/H,IAA2B3/H,KAAK4/H,IAA8B5/H,KAAKw/H,GACtMx/H,KAAK6yB,EAAKi/D,OAAO9xF,KAAKsiG,IACtBtiG,KAAKsiG,GAAc,KAEE,MAAjBtiG,KAAKu3F,IAAoBv3F,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAAUnnB,KAAKu3F,GAASxyD,MAAM2iC,MAAK,SAAUrrC,EAAGC,GAAK,OAAQD,EAAE2D,OAAS1D,EAAE0D,MAAS3D,EAAEwH,QAAQ,GAAKvH,EAAEuH,QAAQ,GAAKxH,EAAE2D,MAAQ1D,EAAE0D,KAAM,QAEtM,CAEH,GAAqB,MAAjBhgC,KAAKu3F,GAAkB,MAAM,IAAIp1F,MAErC,MAAMolD,EAA2B,IAAIo6B,GAGrC,GAFAp6B,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM,EAAG,KAEzB,GAA5B7yB,KAAK81H,GAAQ34E,YAOb,GANIn9C,KAAK81H,GAAQqH,QAAQt5F,QAAQhhC,QAAUvB,EAAO8V,cAC9CmwC,EAASk6B,OAAO,IAAI+O,GAAiBxwF,KAAK6yB,EAAM7yB,KAAK81H,GAAQqH,QAASn9H,KAAK81H,GAAQqH,QAAQt5F,QAAQ,GAAI,GAAG,IAE9G0jB,EAASk6B,OAAO,IAAI+O,GAAiBxwF,KAAK6yB,EAAM7yB,KAAK81H,GAAQqH,QAASn9H,KAAK81H,GAAQnyF,MAAO3jC,KAAK81H,GAAQqH,QAAQt5F,QAAQhhC,SACvH7C,KAAKsiI,GAAUtiI,KAAK81H,GAAQqH,SAExBn9H,KAAK6yB,EAAKwjE,MAAMksC,oBAAsBviI,KAAK6yB,EAAK6B,MAAMyxC,QAAS,CAC/D,MAAM7hC,EAAmBn5B,KAAKoC,IAAIjM,EAAOwQ,aAAc9R,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQ91F,OACvFhgC,KAAK6yB,EAAKw3C,YAAYm4D,oBAAoBxiI,KAAK81H,GAAQqH,QAAQt5F,QAASS,EAC3E,OAE0C,GAAvCtkC,KAAK81H,GAAQqH,QAAQt5F,QAAQhhC,OAC7B0kD,EAASk6B,OAAO,IAAIkT,GAAgB30F,KAAK6yB,EAAM7yB,KAAKu3F,GAAUv3F,KAAK81H,GAAQqH,QAASn9H,KAAK81H,GAAQsH,UAAU,IAE3G71E,EAASk6B,OAAO,IAAI+O,GAAiBxwF,KAAK6yB,EAAM7yB,KAAK81H,GAAQqH,QAASn9H,KAAK81H,GAAQnyF,MAAO3jC,KAAK81H,GAAQqH,QAAQt5F,QAAQ5H,QAAQj8B,KAAK81H,GAAQnyF,QAAQ,IAI5J3jC,KAAK6yB,EAAKi/D,OAAOvqC,EACpB,CAGLvnD,KAAKm0B,GAAa,EAClBn0B,KAAK+hG,IAAiB,EACtB/hG,KAAK0/H,IAA4B,EACjC1/H,KAAK2/H,IAA0B,EAC/B3/H,KAAK4/H,IAA6B,EAClC5/H,KAAKkgI,IAAiC,EACtClgI,KAAKq+H,kBAAkBv5G,aAAa,OAAQgC,GAAYiJ,eACxD/vB,KAAKu2H,KACLv2H,KAAKg1B,GAAgB,EA1oCrB,IAAK,IAAInqB,EAAY,EAAGA,EAAIvJ,EAAOsY,iBAAkB/O,IAAK,CACtD,MAAM43H,EAA4B18G,EAAImN,OACtCuvG,EAAU39G,aAAa,IAAK,KAC5B29G,EAAU39G,aAAa,OAAc,GAALja,EAAUic,GAAY0J,MAAQ1J,GAAYyJ,iBAC1EvwB,KAAK49H,GAAmB35H,YAAYw+H,GACpCziI,KAAKw+H,GAAqB3zH,GAAK43H,CAClC,CAEDziI,KAAKy+H,GAAmB35G,aAAa,IAAK,KAC1C9kB,KAAKy+H,GAAmB35G,aAAa,IAAK,KAC1C9kB,KAAKy+H,GAAmB35G,aAAa,OAAQgC,GAAYyJ,iBACzDvwB,KAAK89H,GAAmB75H,YAAYjE,KAAKy+H,IACzCz+H,KAAK0+H,GAAkB55G,aAAa,OAAQgC,GAAYyJ,iBACxDvwB,KAAK+9H,GAAkB95H,YAAYjE,KAAK0+H,IAEpC1+H,KAAKw9H,IACLx9H,KAAKu2H,KACLv2H,KAAKg1B,IACL6vB,OAAO2vE,sBAAsBx0H,KAAK4hI,IAClC5hI,KAAK+zB,EAAK7vB,iBAAiB,YAAalE,KAAKk1B,GAC7CrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKg2B,IAC1Ch2B,KAAK+zB,EAAK7vB,iBAAiB,YAAalE,KAAK+0B,GAC7C/0B,KAAK+zB,EAAK7vB,iBAAiB,WAAYlE,KAAKi1B,GAE5Cj1B,KAAK+zB,EAAK7vB,iBAAiB,aAAclE,KAAK21B,GAC9C31B,KAAK+zB,EAAK7vB,iBAAiB,YAAalE,KAAK+1B,IAC7C/1B,KAAK+zB,EAAK7vB,iBAAiB,WAAYlE,KAAKg2B,IAC5Ch2B,KAAK+zB,EAAK7vB,iBAAiB,cAAelE,KAAKg2B,IAE/Ch2B,KAAKq+H,kBAAkBn6H,iBAAiB,QAASlE,KAAKihI,MAEtDjhI,KAAKk+H,GAAa54G,MAAMq/E,QAAU,OAClC3kG,KAAK+zB,EAAK9vB,YAAY8hB,EAAImN,KAAK,CAAEtc,EAAG,EAAGC,EAAG,EAAGuc,MAAO,IAAOC,OAAQ,IAAOF,KAAMrM,GAAY6I,iBAAkBrK,MAAO,oBAGzHtlB,KAAKyhI,iB,CAqCD,EAAAE,GACJ,MAAMe,EAA6BphI,EAAO2Q,QAAQjS,KAAK6yB,EAAK9F,KAAK+Y,QAAQ5zB,aACzE,OAAIwwH,EAAqB,GAAK,EAEnBphI,EAAOwQ,aAAe,EACtB4wH,EAAqB,GAAK,EAE1BphI,EAAOwQ,aAAe,EACtB4wH,EAAqB,GAAK,EAE1BphI,EAAOwQ,aAAe,EAE1BxQ,EAAOwQ,Y,CAGV,EAAA6wH,GACJ,OAAOrhI,EAAOwQ,aAAexQ,EAAO2Q,QAAQjS,KAAK6yB,EAAK9F,KAAK+Y,QAAQ5zB,Y,CAG/D,EAAA0wH,CAAmBxmC,GACvB,MAAMhI,EAAsBp0F,KAAK2iI,KACjC,OAAOx3H,KAAK0hB,MAAMuvE,EAAQhI,GAAeA,C,CAGrC,EAAAmiC,GAGJ,GAFAv2H,KAAK81H,GAAU,IAAImH,GAEfj9H,KAAKk0B,EAAU,GAAKl0B,KAAKk0B,EAAUl0B,KAAK+yB,GAAgB/yB,KAAKw+F,GAAU,GAAKx+F,KAAKw+F,GAAUx+F,KAAKgzB,GAAiBhzB,KAAKk/H,IAAgB,EAAG,OAE7I,MAAM9qC,EAAsBp0F,KAAK2iI,KACjC3iI,KAAK81H,GAAQuH,UAAYr9H,KAAKk0B,EAAUl0B,KAAKqhI,GAC7CrhI,KAAK81H,GAAQlxF,KACTz5B,KAAK0hB,MACD1hB,KAAK2L,IAAI,EACL3L,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aAAesiF,EAAap0F,KAAK81H,GAAQuH,YAExFjpC,GAAeA,EAEzB,IAAIyuC,GAAqB,EAEzB,GAAqB,MAAjB7iI,KAAKu3F,GAAkB,CACvB,IAAK,MAAMryD,KAAQllC,KAAKu3F,GAASxyD,MAC7B,GAAIG,EAAKjF,KAAOjgC,KAAK81H,GAAQuH,UACrBr9H,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UACrC+d,EAAKrB,QAAQ,IAAM14B,KAAK0hB,MAAM7sB,KAAK8iI,GAAgB9iI,KAAKw+F,OACxDx+F,KAAK81H,GAAQjjE,SAAW3tB,GAEvB29F,GACD7iI,KAAK81H,GAAQsH,aAGjBp9H,KAAK81H,GAAQjjE,SAAW3tB,EACxBllC,KAAK81H,GAAQsH,iBAEd,GAAIl4F,EAAKlF,OAAShgC,KAAK81H,GAAQuH,WAAan4F,EAAKjF,IAAMjgC,KAAK81H,GAAQuH,UACnEr9H,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SACrC+d,EAAKrB,QAAQ,IAAM14B,KAAK0hB,MAAM7sB,KAAK8iI,GAAgB9iI,KAAKw+F,MACxDx+F,KAAK81H,GAAQqH,QAAUj4F,EACvB29F,GAAY,KAGNA,GAAsC,MAAxB7iI,KAAK81H,GAAQqH,SAAmBj4F,EAAKlF,MAAQhgC,KAAK81H,GAAQqH,QAAQn9F,QACtFhgC,KAAK81H,GAAQsH,WAGjBp9H,KAAK81H,GAAQqH,QAAUj4F,OAExB,GAAIA,EAAKlF,MAAQhgC,KAAK81H,GAAQuH,UAAW,CAC5C,IAAIr9H,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAKtC,CACHnnB,KAAK81H,GAAQhjE,SAAW5tB,EACxB,KACH,CAPG,GAAIA,EAAKrB,QAAQ,IAAM14B,KAAK0hB,MAAM7sB,KAAK8iI,GAAgB9iI,KAAKw+F,KAAW,CACnEx+F,KAAK81H,GAAQhjE,SAAW5tB,EACxB,KACH,CAKR,CAGL,GAAIllC,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,WAAannB,KAAK8+H,gBAE3D,GAAkD,MAA9C9+H,KAAKu3F,GAASxyD,MAAM/kC,KAAK81H,GAAQsH,WAA6C,MAAxBp9H,KAAK81H,GAAQqH,QAAiB,CAEpF,IAAI/3D,EAAiB,EAErB,KAAOplE,KAAK81H,GAAQqH,QAAQn9F,MAAQhgC,KAAK81H,GAAQqH,QAAQr5F,KAAKshC,GAAQ3hC,KAAOzjC,KAAK81H,GAAQuH,WAAaj4D,EAASplE,KAAK81H,GAAQqH,QAAQr5F,KAAKjhC,QACtIuiE,IAGAA,EAAS,GACLplE,KAAK81H,GAAQqH,QAAQn9F,MAAQhgC,KAAK81H,GAAQqH,QAAQr5F,KAAKshC,GAAQ3hC,KAAOzjC,KAAK81H,GAAQuH,UAAYr9H,KAAK81H,GAAQuH,WAAar9H,KAAK81H,GAAQqH,QAAQn9F,MAAQhgC,KAAK81H,GAAQqH,QAAQr5F,KAAKshC,EAAS,GAAG3hC,OAC5L2hC,IAIRplE,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,QAAS,WAClDvlB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,UAAW,IACpD,MAAMggB,EAAcp6B,KAAK2L,IAAK,EAAGxV,EAAOyY,SAAW,EAAI/Z,KAAK81H,GAAQqH,QAAQt5F,QAAQ,IAEpF,IAAIooC,EAAkBjsE,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,KAAa/gH,WAAW6oB,GAErI47F,EAAoBnhI,KAAK81H,GAAQqH,QAAQr5F,KAAKshC,GAAQhqC,KAAO95B,EAAOob,WAAWuvD,GAASlvD,kBAGxFqkH,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IAEjHnhI,KAAK6+H,GAA0B,EAAc,EAAVuC,EACnCphI,KAAK2+H,IAA0BlhH,EAAatS,KAAK2L,IAAI3L,KAAKoC,IAAIvN,KAAK+yB,EAAe,GAAe,EAAVquG,EAAaphI,KAAKqhI,IAAcrhI,KAAK81H,GAAQqH,QAAQn9F,MAAQhgC,KAAK81H,GAAQqH,QAAQr5F,KAAKshC,GAAQ3hC,MAAQ,EAAc,EAAV29F,GAAc,IAChNphI,KAAK4+H,IAAyBnhH,EAAazd,KAAK+iI,GAAoB/iI,KAAK81H,GAAQqH,QAAQt5F,QAAQ,GAAK7jC,KAAKqgI,IAAiB,IAAMrgI,KAAKk/H,GAAel/H,KAAKgjI,IAAgB,GAE3KhjI,KAAK++H,GAAqB/+H,KAAK81H,GAAQqH,QAAQr5F,KAAKshC,GAAQhqC,KAC5Dp7B,KAAKshI,GAAethI,KAAK81H,GAAQqH,QACjCn9H,KAAKuhI,GAAcvhI,KAAK81H,GAAQqH,QAAQr5F,KAAKshC,GAC7CplE,KAAKg/H,GAAqB19H,EAAOob,WAAWuvD,GAASlvD,kBACrD/c,KAAKi/H,GAAqB39H,EAAOob,WAAWuvD,GAASlvD,kBAAoBzb,EAAOob,WAAWuvD,GAASrvD,UACpG5c,KAAKwhI,GAAkBv1D,EAEvBjsE,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,OAAavlB,KAAK2+H,GAAyB,MACpF3+H,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,MAAYvlB,KAAK4+H,GAAwB,MAClF5+H,KAAKq+H,kBAAkB5wG,YAAc,GAAK0zG,CAE7C,MAEGnhI,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,UAAW,QACpDvlB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,iBAAkB,QAC3DvlB,KAAKq+H,kBAAkBv5G,aAAa,kBAAmB,cAGrD9kB,KAAK8+H,kBACX9+H,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,UAAW,QACpDvlB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,iBAAkB,QAC3DvlB,KAAKq+H,kBAAkBv5G,aAAa,kBAAmB,SAE9D,MAEG9kB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,UAAW,QACpDvlB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,iBAAkB,QAC3DvlB,KAAKq+H,kBAAkBv5G,aAAa,kBAAmB,SAG3D,IAAIm+G,EAAqBjjI,KAAK8iI,GAAgB9iI,KAAKw+F,IAEnD,GAA4B,MAAxBx+F,KAAK81H,GAAQqH,QAAiB,CAE9Bn9H,KAAK81H,GAAQ91F,MAAQhgC,KAAK81H,GAAQqH,QAAQn9F,MAC1ChgC,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQqH,QAAQl9F,IACxCjgC,KAAK81H,GAAQhyF,KAAO9jC,KAAK81H,GAAQqH,QAAQr5F,KAEzC,IAEIm/C,EAFAhiE,EAAmB,EACnBhe,EAAgB,EAEhB6/E,EAAmB9iF,KAAK81H,GAAQqH,QAAQr5F,KAAK,GACjD,IAAK,IAAI7J,EAAY,EAAGA,EAAIj6B,KAAK81H,GAAQqH,QAAQr5F,KAAKjhC,OAAQo3B,IAAK,CAC/DgpD,EAAUH,EACVA,EAAU9iF,KAAK81H,GAAQqH,QAAQr5F,KAAK7J,GACpC,MAAMipG,EAAmBljI,KAAKqhI,IAAcrhI,KAAK81H,GAAQqH,QAAQn9F,MAAQijD,EAAQx/C,MAC3E0/F,EAAoBnjI,KAAKqhI,IAAcrhI,KAAK81H,GAAQqH,QAAQn9F,MAAQ8iD,EAAQr/C,MAClF,GAAIzjC,KAAKk0B,EAAUivG,EAAW,SAC9B,GAAInjI,KAAKk0B,EAAUgvG,EAAU,MAAM,IAAI/gI,MACvC,MAAMihI,GAAyBpjI,KAAKk0B,EAAUgvG,IAAaC,EAAYD,GACjEG,EAAcl4H,KAAKc,KAAK,EAAMd,KAAKc,KAAK,GAAOd,KAAKiB,IAAIg3H,EAAgB,GAAK,IAAQ,GACrFE,EAAqBn4H,KAAKC,IAAI03E,EAAQ7hE,SAAWgiE,EAAQhiE,UAC/DA,EAAWgiE,EAAQhiE,UAAY,EAAMmiH,GAAiBtgD,EAAQ7hE,SAAWmiH,EACzEngI,EAAQogI,EAAMC,EAAa,IAC3B,KACH,CAED,IAAIC,EAAsB57G,OAAOy/F,UAC7Boc,GAAuB77G,OAAOy/F,UAC9Bqc,EAAuB97G,OAAOy/F,UAClC,IAAK,MAAM5iF,KAAOxkC,KAAK81H,GAAQqH,QAAQr5F,KAAM,CACrCy/F,EAAc/+F,EAAIvjB,WAAUsiH,EAAc/+F,EAAIvjB,UAC9CuiH,EAAch/F,EAAIvjB,WAAUuiH,EAAch/F,EAAIvjB,UAClD,MAAMyiH,EAAsBv4H,KAAKC,IAAIpL,KAAK81H,GAAQqH,QAAQn9F,MAAQwE,EAAIf,KAAOzjC,KAAKk0B,EAAUl0B,KAAKqhI,IAC7FoC,EAAeC,IACfD,EAAeC,EACf1jI,KAAK81H,GAAQwH,aAAet9H,KAAK81H,GAAQqH,QAAQr5F,KAAK7H,QAAQuI,GAErE,CAEDy+F,GAAchiH,EACd,MAAMjH,EAAmBha,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAAW7lB,EAAOuY,UAAY,EAC1F7Z,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAW7lB,EAAOyY,SAAW,EAAIzY,EAAO0Y,SAIzF,GAHAha,KAAK81H,GAAQnyF,MAAQ3jC,KAAK2jI,GAAaV,GAAaM,EAAavpH,EAAWwpH,IAGvExjI,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,WAAannB,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAU,CAC5G,IAAIy8G,EAAkB3gI,EACtB,IAAK,IAAI4H,EAAY,EAAGA,EAAI7K,KAAK81H,GAAQqH,QAAQt5F,QAAQhhC,OAAQgI,IAAK,CAClE,MAAM64F,EAAmBv4F,KAAKC,IAAIpL,KAAK81H,GAAQqH,QAAQt5F,QAAQh5B,GAAKo4H,EAAa,IAC7Ev/B,EAAWkgC,IACfA,EAAUlgC,EACV1jG,KAAK81H,GAAQnyF,MAAQ3jC,KAAK81H,GAAQqH,QAAQt5F,QAAQh5B,GACrD,CACJ,CAED,IAAK,IAAIA,EAAY,EAAGA,EAAI7K,KAAK81H,GAAQqH,QAAQt5F,QAAQhhC,OAAQgI,IAC7D,GAAI7K,KAAK81H,GAAQqH,QAAQt5F,QAAQh5B,IAAM7K,KAAK81H,GAAQnyF,MAAO,CACvD3jC,KAAK81H,GAAQ34E,WAAatyC,EAC1B,KACH,CAER,KAAM,CAEH,MAAMmP,EAAmBha,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAAW7lB,EAAOuY,UAAY,EAC9F7Z,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAW7lB,EAAOyY,SAAWzY,EAAO0Y,SACjFha,KAAK81H,GAAQnyF,MAAQ3jC,KAAK2jI,GAAaV,EAAY,EAAGjpH,GACtD,MAAM6pH,EAAwB7jI,KAAK8jI,GAAY9jI,KAAK8jI,GAAYjhI,OAAS,GAAG4gC,KACtEsgG,EAAoB54H,KAAK0hB,MAAM7sB,KAAK81H,GAAQlxF,KAAOtjC,EAAOwQ,cAC1D4vH,EAAsB1hI,KAAK2hI,KAC3BqC,EAAmBhkI,KAAK81H,GAAQlxF,KAAOtjC,EAAOwQ,aACpD,GAAqB,GAAjB+xH,EACA7jI,KAAK81H,GAAQ91F,MAAQhgC,KAAK81H,GAAQlxF,UAC/B,GAAIi/F,EAAgBviI,EAAOwQ,aAC9B9R,KAAK81H,GAAQ91F,MAAQ+jG,EAAYziI,EAAOwQ,kBACrC,GAAI+xH,GAAiBviI,EAAOwQ,aAC/B9R,KAAK81H,GAAQ91F,MAAQ+jG,EAAYziI,EAAOwQ,aACpC4vH,EAAcpgI,EAAOwQ,cAAgBkyH,EAAWtC,IAChD1hI,KAAK81H,GAAQ91F,OAAS70B,KAAK0hB,MAAMm3G,EAAWtC,GAAeA,OAE5D,CACH1hI,KAAK81H,GAAQ91F,MAAQ+jG,EAAYziI,EAAOwQ,aACxC,IAAImyH,EAAW3iI,EAAOwQ,aAAe+xH,GAAiB,EAAIA,EAAgB14H,KAAKoC,IAAIs2H,EAAenC,GAClG,KAAOuC,EAAWvC,GAAepgI,EAAOwQ,aAAemyH,GAAY,GAC/DA,IAEJjkI,KAAK81H,GAAQ91F,OAAS70B,KAAK0hB,MAAMm3G,EAAWC,GAAYA,CAC3D,CACDjkI,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQ91F,MAAQ6jG,EACxC,IAAIK,EAAqB,EACrBC,EAAmBnkI,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aAqB3D,GApB6B,MAAzB9R,KAAK81H,GAAQjjE,WACbqxE,EAAalkI,KAAK81H,GAAQjjE,SAAS5yB,KAEV,MAAzBjgC,KAAK81H,GAAQhjE,WACbqxE,EAAWnkI,KAAK81H,GAAQhjE,SAAS9yB,OAEjChgC,KAAK81H,GAAQ91F,MAAQkkG,GACrBlkI,KAAK81H,GAAQ91F,MAAQkkG,EACrBlkI,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQ91F,MAAQ6jG,EACpC7jI,KAAK81H,GAAQ71F,IAAMkkG,IACnBnkI,KAAK81H,GAAQ71F,IAAMkkG,IAEhBnkI,KAAK81H,GAAQ71F,IAAMkkG,IAC1BnkI,KAAK81H,GAAQ71F,IAAMkkG,EACnBnkI,KAAK81H,GAAQ91F,MAAQhgC,KAAK81H,GAAQ71F,IAAM4jG,EACpC7jI,KAAK81H,GAAQ91F,MAAQkkG,IACrBlkI,KAAK81H,GAAQ91F,MAAQkkG,IAIzBlkI,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQ91F,OAAS6jG,EACzC7jI,KAAK8jI,GAAc9jI,KAAKq/H,GAAmBr/H,KAAK6yB,EAAK1L,SACrDnnB,KAAK81H,GAAQhyF,KAAO9jC,KAAK8jI,OACtB,CACH9jI,KAAK81H,GAAQhyF,KAAO,GACpB,IAAK,MAAMyvD,KAAUvzF,KAAK8jI,GAAa,CACnC,KAAIvwC,EAAO9vD,MAAQzjC,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQ91F,OAG5C,CACHhgC,KAAK81H,GAAQhyF,KAAK/4B,KAAKy4B,GAAY,EAAGxjC,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQ91F,MAAOuzD,EAAOn4D,OACpF,KACH,CAJG,GADAp7B,KAAK81H,GAAQhyF,KAAK/4B,KAAKy4B,GAAY,EAAG+vD,EAAO9vD,KAAM8vD,EAAOn4D,OACtDm4D,EAAO9vD,MAAQzjC,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQ91F,MAAO,KAKjE,CACJ,CAED,GAAIhgC,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAU,CAKnD,GAHAnnB,KAAK81H,GAAQnyF,MAAQx4B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOyY,SAAW,EAAG/Z,KAAK81H,GAAQnyF,QAG5C,MAA5B3jC,KAAKmgI,IAA8E,MAA/CngI,KAAKmgI,GAAoBngI,KAAK6yB,EAAK1L,SACvE,IAAK,IAAIqd,EAAc,EAAGA,EAAMxkC,KAAK81H,GAAQhyF,KAAKjhC,OAAQ2hC,IACtDxkC,KAAK81H,GAAQhyF,KAAKU,GAAKpJ,KAAOp7B,KAAKmgI,GAAoBngI,KAAK6yB,EAAK1L,SAASqd,GAKlF,IAAI4/F,EAAoBpkI,KAAK6yB,EAAK9F,KAAKwsB,aAAav5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,IAAaz9H,KAAK81H,GAAQnyF,OACpL0gG,EAAyB,EAC7B,IAAK,MAAM7/F,KAAOxkC,KAAK81H,GAAQhyF,KACvBU,EAAIpJ,KAAOipG,IACXA,EAAiB7/F,EAAIpJ,MAI7B,GAAIipG,EAAiBD,EACjB,IAAK,MAAM5/F,KAAOxkC,KAAK81H,GAAQhyF,KAC3BU,EAAIpJ,KAAOjwB,KAAKe,MAAMs4B,EAAIpJ,MAAQgpG,EAAYC,GAGzD,CAEJ,CAEDrkI,KAAK81H,GAAQoH,OAAQ,C,CAIjB,EAAAoH,GACJ,OAAOtkI,KAAK81H,GAAQoH,OAASl9H,KAAK6yB,EAAK43D,UAAU2N,wBAA0Bp4F,KAAK6yB,EAAK43D,UAAUqN,uBAAyB93F,KAAK81H,GAAQuH,WAAar9H,KAAK81H,GAAQuH,WAAar9H,KAAK6yB,EAAK43D,UAAUsN,mB,CAG5L,EAAAwsC,GACJ,OAAOvkI,KAAK81H,GAAQoH,OAASl9H,KAAK6yB,EAAK43D,UAAU2N,yBAAsD,GAA5Bp4F,KAAK81H,GAAQ34E,YAAoBn9C,KAAK6yB,EAAK43D,UAAUqN,sBAAwB,GAAK93F,KAAK81H,GAAQuH,WAAar9H,KAAK81H,GAAQuH,WAAar9H,KAAK6yB,EAAK43D,UAAUqN,sBAAwB,I,CAGzP,EAAA0sC,GACJ,OAAOxkI,KAAK81H,GAAQoH,OAASl9H,KAAK6yB,EAAK43D,UAAU2N,yBAAsD,GAA5Bp4F,KAAK81H,GAAQ34E,YAAoBn9C,KAAK6yB,EAAK43D,UAAUsN,oBAAsB,MAAQ/3F,KAAK81H,GAAQuH,WAAar9H,KAAK81H,GAAQuH,WAAar9H,KAAK6yB,EAAK43D,UAAUsN,oBAAsB,C,CAGxP,EAAA+qC,CAAgB2B,GACpB,OAAOt5H,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK0kI,GAAc,EAAG1kI,KAAK0kI,GAAeD,EAASzkI,KAAKk/H,KAAkBl/H,KAAKqgI,E,CAGvG,EAAAsD,CAAagB,EAAep3H,EAAauJ,GACzC6tH,EAAQp3H,IAAKo3H,EAAQp3H,GACrBo3H,EAAQ7tH,IAAK6tH,EAAQ7tH,GACzB,MAAMwjC,EAAgCt6C,KAAK6yB,EAAKwjE,MAAMiD,kBAAoBh4F,EAAO4O,OAAOlL,WAAiB,KAAEoL,MAAQpQ,KAAK6yB,EAAK9F,KAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,MAAQ9E,KAAK6yB,EAAK9F,KAAKsrB,YAAc/2C,EAAO4O,OAAOlQ,KAAK6yB,EAAK9F,KAAKutB,OAAOlqC,MACvP,GAAIkqC,EAAMnvC,KAAK0hB,MAAM83G,GAASrjI,EAAOsY,mBAAqB5Z,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,UAAYnnB,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAEtJ,OAAOhc,KAAK0hB,MAAM83G,GACf,CACH,IAAIC,EAAmBz5H,KAAK0hB,MAAM83G,GAAS,EACvCE,EAAsB15H,KAAK0hB,MAAM83G,GAAS,EAC9C,MAAQrqF,EAAMsqF,EAAWtjI,EAAOsY,mBAC5BgrH,IAEJ,MAAQtqF,EAAM,EAAgBh5C,EAAOsY,mBACjCirH,IAEJ,GAAID,EAAW9tH,EACX,OAAI+tH,EAAct3H,EACPA,EAEAs3H,EAER,GAAIA,EAAct3H,EACrB,OAAOq3H,EAEX,IAAIE,EAAmBF,EACnBG,EAAsBF,EAAc,EAOxC,OANID,EAAWtjI,EAAOsY,kBAAoB,GAAKgrH,EAAWtjI,EAAOsY,kBAAoB,IACjFkrH,GAAY,IAEZD,EAAcvjI,EAAOsY,kBAAoB,GAAKirH,EAAcvjI,EAAOsY,kBAAoB,IACvFmrH,GAAe,IAEZJ,EAAQI,EAAcD,EAAWH,EAAQC,EAAWC,CAC9D,C,CAGG,EAAAvC,CAAUp9F,GACdllC,KAAK8jI,GAAc,GACnB,IAAK,MAAMvwC,KAAUruD,EAAKpB,KACtB9jC,KAAK8jI,GAAY/4H,KAAKy4B,GAAY,EAAG+vD,EAAO9vD,KAAM8vD,EAAOn4D,OAE7D,IAAK,IAAIvwB,EAAY,EAAGA,EAAI7K,KAAK8jI,GAAYjhI,OAAS,GAC9C7C,KAAK8jI,GAAYj5H,EAAI,GAAGuwB,MAAQp7B,KAAK8jI,GAAYj5H,GAAGuwB,MACpDp7B,KAAK8jI,GAAYj5H,GAAGuwB,MAAQp7B,KAAK8jI,GAAYj5H,EAAI,GAAGuwB,KACpDp7B,KAAK8jI,GAAY5nG,OAAOrxB,EAAG,GAE3BA,IAGR7K,KAAKq/H,GAAmBr/H,KAAK6yB,EAAK1L,SAAWnnB,KAAK8jI,GAElD9jI,KAAKmgI,GAAoBngI,KAAK6yB,EAAK1L,SAAW,GAC9C,IAAK,IAAIqd,EAAc,EAAGA,EAAMxkC,KAAK8jI,GAAYjhI,OAAQ2hC,IACrDxkC,KAAKmgI,GAAoBngI,KAAK6yB,EAAK1L,SAASpc,KAAK/K,KAAK8jI,GAAYt/F,GAAKpJ,K,CAIxE,mBAAA4pG,GACT,QAAIhlI,KAAKo0B,IACRp0B,KAAK6yB,EAAK6B,MAAM7E,SAAW7vB,KAAK6yB,EAAK+nB,IAAM56C,KAAKy9H,GAAcz9H,KAAKk0B,EAAUl0B,KAAK+yB,GAC3E,E,CAwGC,mBAAAkyG,CAAoBC,GACvB,GAAIllI,KAAK8+H,gBAAiB,CAItB,GAHA9+H,KAAK8+H,iBAAkB,EACvB9+H,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,iBAAkB,QAEvDs/B,OAAOsgF,aAAc,CACrB,IAAIC,EAAwBvgF,OAAOsgF,eACxB,MAAPC,GACAA,EAAIC,iBACX,CAED,GAAIH,EAAgB,CAChBllI,KAAKuhI,GAAYnmG,KAAOp7B,KAAK++H,GAE7B,IAAIoC,EAAoBnhI,KAAK++H,GAAqBz9H,EAAOob,WAAW1c,KAAKwhI,IAAiBzkH,kBAGtFqkH,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IACjHnhI,KAAK2+H,IAA0BlhH,EAAatS,KAAK2L,IAAI3L,KAAKoC,IAAIvN,KAAK+yB,EAAe,GAAe,EAAVquG,EAAaphI,KAAKqhI,IAAcrhI,KAAKshI,GAAathG,MAAQhgC,KAAKuhI,GAAY99F,MAAQ,EAAc,EAAV29F,GAAc,IAC5LphI,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,OAAavlB,KAAK2+H,GAAyB,MAEpF,MAAMp3E,EAA2B,IAAIo6B,GACrC3hF,KAAKsiG,GAAc/6C,EACnBvnD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,IAEpC/6C,EAASk6B,OAAO,IAAIoZ,GAAe76F,KAAK6yB,EAAM7yB,KAAKshI,GAActhI,KAAKuhI,GAAY99F,KAAMzjC,KAAK++H,GAAoB/+H,KAAKuhI,GAAYtgH,SAAUjhB,KAAK29H,YAEjJ39H,KAAKsiG,GAAc,IACtB,CAEgCtiG,KAAK6yB,EAAKmwE,cAAchjG,KAAKsiG,KAElC,MAApBtiG,KAAKsiG,KACLtiG,KAAK6yB,EAAKi/D,OAAO9xF,KAAKsiG,IACtBtiG,KAAKsiG,GAAc,KAG9B,C,CAGG,EAAAQ,GAEJ,GAAI9iG,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAAwE,QAA5DnnB,KAAKq+H,kBAAkB/4G,MAAMgC,iBAAiB,YACnGtnB,KAAKk0B,GAAWl0B,KAAK2+H,GAAyB,GAC9C3+H,KAAKk0B,GAAWl0B,KAAK2+H,GAAyB3+H,KAAK6+H,GAA0B,GAC7E7+H,KAAKw+F,IAAWx+F,KAAK4+H,GAAwB,GAC7C5+H,KAAKw+F,IAAWx+F,KAAK4+H,GAAwB,GAAI,CAIjD,GAFA5+H,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,iBAAkB,QAC3DvlB,KAAKq+H,kBAAkBv5G,aAAa,kBAAmB,QACnD+/B,OAAOsgF,aAAc,CACrB,IAAIC,EAAwBvgF,OAAOsgF,eACxB,MAAPC,GACAA,EAAIE,kBAAkBtlI,KAAKq+H,kBAClC,CAEDx5E,OAAOE,YAAW,KAAQ/kD,KAAKq+H,kBAAkB3gC,OAAO,IACxD19F,KAAK8+H,iBAAkB,CAC1B,KAAM,CACH9+H,KAAKilI,qBAAoB,GACrBjlI,KAAK6yB,EAAKwjE,MAAMksC,mBAAmBviI,KAAK6yB,EAAK6B,MAAM+2C,oBACvDzrE,KAAKm0B,GAAa,EAClBn0B,KAAKmwH,GAAenwH,KAAKk0B,EACzBl0B,KAAKs/H,GAAet/H,KAAKw+F,GACzBx+F,KAAKu2H,KACLv2H,KAAKg1B,IACL,MAAMuyB,EAA2B,IAAIo6B,GAKrC,GAJA3hF,KAAKsiG,GAAc/6C,EACnBvnD,KAAKkgI,GAAiClgI,KAAK6yB,EAAKmwE,cAAchjG,KAAKigI,IACnEjgI,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,IAEhCtiG,KAAKukI,KACLvkI,KAAK0/H,IAA4B,OAC9B,GAAI1/H,KAAKwkI,KACZxkI,KAAK2/H,IAA0B,OAC5B,GAAI3/H,KAAKw/H,GACZ,GAAKx/H,KAAK6yB,EAAK43D,UAAU2N,yBAAsD,GAA5Bp4F,KAAK81H,GAAQ34E,YAAqBn9C,KAAKskI,KACtF/8E,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM,EAAG,SAEzD,GAA4B,MAAxB7yB,KAAK81H,GAAQqH,QACb51E,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM7yB,KAAK81H,GAAQqH,QAAQn9F,MAAOhgC,KAAK81H,GAAQqH,QAAQl9F,UACpG,CACH,MAAMD,EAAgB70B,KAAK2L,IAAI,EAAG3L,KAAKoC,KAAKvN,KAAK6yB,EAAK9F,KAAK4Z,YAAc,GAAKrlC,EAAOwQ,aAAc3G,KAAK0hB,MAAM7sB,KAAK81H,GAAQuH,UAAY/7H,EAAOwQ,cAAgBxQ,EAAOwQ,eAC/JmuB,EAAcD,EAAQ1+B,EAAOwQ,aACnCy1C,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAMmN,EAAOC,GAChE,MAEF,GAAIjgC,KAAKskI,KACZtkI,KAAK4/H,IAA6B,OAC/B,GAAI5/H,KAAK81H,GAAQoH,OAAiC,MAAxBl9H,KAAK81H,GAAQqH,QAAiB,CAC3D51E,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM,EAAG,IAQzD,MAAMqS,EAAa,IAAIxB,GAAK1jC,KAAK81H,GAAQnyF,MAAO3jC,KAAK81H,GAAQ91F,MAAOhgC,KAAK81H,GAAQ71F,IAAK3+B,EAAOwU,YAAa9V,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,UACrJ+d,EAAKpB,KAAO,GACZ,IAAK,MAAMyvD,KAAUvzF,KAAK81H,GAAQhyF,KAC9BoB,EAAKpB,KAAK/4B,KAAKy4B,GAAY,EAAG+vD,EAAO9vD,KAAM8vD,EAAOn4D,OAEtDmsB,EAASk6B,OAAO,IAAI0Q,GAA0BnyF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK+nB,MACtF,MAAMD,EAA0B36C,KAAK6yB,EAAKw1D,kBAAkBroF,KAAKy9H,IACjE,GAAe,MAAX9iF,EAAiB,MAAM,IAAIx4C,MAG/B,GAFAolD,EAASk6B,OAAO,IAAIkT,GAAgB30F,KAAK6yB,EAAM8nB,EAASzV,EAAMllC,KAAK81H,GAAQsH,WAEvEp9H,KAAK6yB,EAAKwjE,MAAMksC,oBAAsBviI,KAAK6yB,EAAK6B,MAAMyxC,QAAS,CAE/D,MAAM7hC,EAAmBn5B,KAAKoC,IAAIjM,EAAOwQ,aAAc9R,KAAK81H,GAAQ71F,IAAMjgC,KAAK81H,GAAQ91F,OACvFhgC,KAAK6yB,EAAKw3C,YAAYm4D,oBAAoB,CAACxiI,KAAK81H,GAAQnyF,OAAQW,EACnE,CACJ,CACDtkC,KAAKulI,IACR,C,CA2BG,EAAAzvG,GACA91B,KAAK6yB,EAAKwjE,MAAMksC,mBAAqBviI,KAAKo0B,GAAYp0B,KAAK6yB,EAAK6B,MAAM+2C,oBAM1E,MAAM22D,EAA2BpiI,KAAK6yB,EAAKmwE,cAAchjG,KAAKsiG,IAE9D,IAAKtiG,KAAK+hG,IAAkB/hG,KAAKm0B,GAAcn0B,KAAK81H,GAAQoH,OAASkF,EAAiB,CAClF,MAAMoD,EAAaxlI,KAAKk0B,EAAUl0B,KAAKmwH,GACjCsV,EAAazlI,KAAKw+F,GAAUx+F,KAAKs/H,GACnCn0H,KAAKc,KAAKu5H,EAAKA,EAAKC,EAAKA,GAAM,IAC/BzlI,KAAK+hG,IAAiB,EACtB/hG,KAAKm/H,GAAmBh0H,KAAKC,IAAIo6H,IAAOr6H,KAAKC,IAAIq6H,GAExD,CAMD,GAJIzlI,KAAKw/H,IAAcx/H,KAAKm/H,IAAoBh0H,KAAKC,IAAIpL,KAAKmwH,GAAenwH,KAAKk0B,GAAW,IACzFl0B,KAAKy/H,IAAiB,GAGtBz/H,KAAK+hG,IAAkB/hG,KAAKm0B,GAAcn0B,KAAK81H,GAAQoH,OAASkF,EAAiB,CACjFpiI,KAAKsiG,GAAanhB,OAClB,MAAM55B,EAA2B,IAAIo6B,GACrC3hF,KAAKsiG,GAAc/6C,EACnBvnD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,IAEpC,MAAMlO,EAAsBp0F,KAAK2iI,KAC3BnxE,EAAsBxxD,KAAK4iI,GAAmB5iI,KAAKk0B,EAAUl0B,KAAKqhI,IACxE,GAAIrhI,KAAK0/H,GACLn4E,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM1nB,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aAAc0/C,IAAexxD,KAAK6yB,EAAK43D,UAAUsN,sBAChK/3F,KAAKulI,UACF,GAAIvlI,KAAK2/H,GACZp4E,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM7yB,KAAK6yB,EAAK43D,UAAUqN,sBAAuB3sF,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aAAc0/C,MACxKxxD,KAAKulI,UACF,GAAIvlI,KAAK4/H,GAA4B,CACxC,MAAMjlF,EAA0B36C,KAAK6yB,EAAKw1D,kBAAkBroF,KAAKy9H,IACjE,GAAIz9H,KAAK+hG,IAA6B,MAAXpnD,EAAiB,CACxC36C,KAAKsiG,GAAanhB,OAClB,MAAM55B,EAA2B,IAAIo6B,GACrC3hF,KAAKsiG,GAAc/6C,EACnBvnD,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKsiG,IAGpC,MAAMojC,GADM1lI,KAAK6yB,EAAK9F,KAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,MAAQ9E,KAAK6yB,EAAK9F,KAAKsrB,YAAc/2C,EAAO4O,OAAOlQ,KAAK6yB,EAAK9F,KAAKutB,OAAOlqC,OAC7GguB,QAAOxnB,GAAKA,IAAG/T,OAC5C8iI,EAAqB3lI,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAAW,EAAI,GAAKu+G,EACpFE,EAAuBz6H,KAAKe,OAAOlM,KAAKk0B,EAAUl0B,KAAKmwH,KAAiBnwH,KAAKqhI,GAAajtC,IAAgBA,EAC1GyxC,EAA2B16H,KAAKe,OAAOlM,KAAKs/H,GAAet/H,KAAKw+F,KAAYx+F,KAAKk/H,GAAeyG,IACtGp+E,EAASk6B,OAAO,IAAIwX,GAAwBj5F,KAAK6yB,EAAM7yB,KAAK6yB,EAAK1L,QAASwzB,EAASirF,EAAcC,GACpG,CAEJ,MAAM,GAAI7lI,KAAKw/H,IAAcx/H,KAAKy/H,IAE/B,GAAIz/H,KAAK+hG,GAAgB,CACrB,IAAI/hE,EAAgB70B,KAAK2L,IAAI,EAAG3L,KAAKoC,KAAKvN,KAAK6yB,EAAK9F,KAAK4Z,YAAc,GAAKrlC,EAAOwQ,aAAc3G,KAAK0hB,MAAM7sB,KAAK81H,GAAQuH,UAAY/7H,EAAOwQ,cAAgBxQ,EAAOwQ,eAC/JmuB,EAAcD,EAAQ1+B,EAAOwQ,aAOjC,GAN4B,MAAxB9R,KAAK81H,GAAQqH,UACbn9F,EAAQ70B,KAAK2L,IAAIkpB,EAAOhgC,KAAK81H,GAAQqH,QAAQn9F,OAC7CC,EAAM90B,KAAKoC,IAAI0yB,EAAKjgC,KAAK81H,GAAQqH,QAAQl9F,MAIzCuxB,EAAcxxB,EAAO,CACrBA,EAAQ,EACR,MAAM2a,EAA0B36C,KAAK6yB,EAAKw1D,kBAAkBroF,KAAKy9H,IACjE,GAAe,MAAX9iF,EACA,IAAK,IAAI9vC,EAAY,EAAGA,EAAI8vC,EAAQ5V,MAAMliC,OAAQgI,IAC1C8vC,EAAQ5V,MAAMl6B,GAAGm1B,OAASwxB,IAC1BxxB,EAAQ2a,EAAQ5V,MAAMl6B,GAAGm1B,OAEzB2a,EAAQ5V,MAAMl6B,GAAGo1B,KAAOuxB,IACxBxxB,EAAQ2a,EAAQ5V,MAAMl6B,GAAGo1B,KAIrC,IAAK,IAAI4kC,EAAe,EAAGA,GAAQ7kE,KAAK6yB,EAAK9F,KAAK4Z,YAAak+B,IAAQ,CACnE,MAAMjgC,EAAeigC,EAAOvjE,EAAOwQ,aAC/BkuB,GAAS4E,GAAQA,GAAQ4sB,IACzBxxB,EAAQ4E,EAEf,CACJ,CAED,GAAI4sB,EAAcvxB,EAAK,CACnBA,EAAM3+B,EAAOwQ,aAAe9R,KAAK6yB,EAAK9F,KAAK4Z,YAC3C,MAAMgU,EAA0B36C,KAAK6yB,EAAKw1D,kBAAkBroF,KAAKy9H,IACjE,GAAe,MAAX9iF,EACA,IAAK,IAAI9vC,EAAY,EAAGA,EAAI8vC,EAAQ5V,MAAMliC,OAAQgI,IAAK,CACnD,GAAI8vC,EAAQ5V,MAAMl6B,GAAGm1B,OAASwxB,EAAa,CACvCvxB,EAAM0a,EAAQ5V,MAAMl6B,GAAGm1B,MACvB,KACH,CACD,GAAI2a,EAAQ5V,MAAMl6B,GAAGo1B,KAAOuxB,EAAa,CACrCvxB,EAAM0a,EAAQ5V,MAAMl6B,GAAGo1B,IACvB,KACH,CACJ,CAEL,IAAK,IAAI4kC,EAAe,EAAGA,GAAQ7kE,KAAK6yB,EAAK9F,KAAK4Z,YAAak+B,IAAQ,CACnE,MAAMjgC,EAAeigC,EAAOvjE,EAAOwQ,aAC/B0/C,EAAc5sB,GAAQA,EAAO3E,IAC7BA,EAAM2E,EAEb,CACJ,CAED2iB,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAMmN,EAAOC,IAC7DjgC,KAAKulI,IACR,OAGD,GAA4B,MAAxBvlI,KAAK81H,GAAQqH,QAAiB,CAI9B,IAAI2I,EACAC,EAJJx+E,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM,EAAG,IAKrD2+B,EAAcxxD,KAAK81H,GAAQ91F,OAC3B8lG,GAAY,EACZC,EAAe/lI,KAAK81H,GAAQ91F,MAAQwxB,IAEpCs0E,GAAY,EACZC,EAAev0E,EAAcxxD,KAAK81H,GAAQ91F,MAAQo0D,GAGtD,IA2CIp0D,EACAC,EA5CA4jG,EAAwBzvC,EAC5B,IAAK,IAAIvpF,EAAYupF,EAAavpF,GAAK7K,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aAAcjH,GAAKupF,EAAa,CACvG,GAAmB,GAAfA,GACA,GAAIvpF,EAAI,QAED,GAAIA,GAAKvJ,EAAOwQ,aAAe,GAClC,GAAIjH,EAAI,GAAK,GAAKA,EAAI,GAAK,EACvB,cAED,GAAIA,GAA2B,IAAtBvJ,EAAOwQ,cACnB,GAAIjH,EAAI,GAAK,GAAKA,EAAI,GAAK,EACvB,cAED,GAAIA,EAAIvJ,EAAOwQ,cAAgB,EAClC,cAGJ,GAAIjH,GAAK,EAAIupF,GACTvpF,EAAIvJ,EAAOwQ,cAAgB,GAC3BjH,GAA2B,EAAtBvJ,EAAOwQ,aAAqB,GACjCjH,GAA2B,EAAtBvJ,EAAOwQ,aAAqB,GACjCjH,GAA2B,EAAtBvJ,EAAOwQ,aAAqB,EACjC,SAIR,MAAMk0H,EAAwBn7H,EAC9B,GAAIm7H,GAAiBD,EAAc,CAC/BlC,EAAgBmC,EAChB,KACH,CAKD,GAJIA,EAAgBD,IAChBlC,EAAgBmC,GAGhBA,EAAgBD,EAAc,CAC1BlC,EAAgBkC,EAAe3xC,IAC/ByvC,EAAgBmC,GAEpB,KACH,CACJ,CAKGF,GACA7lG,EAAMjgC,KAAK81H,GAAQ91F,MACnBA,EAAQC,EAAM4jG,IAEd7jG,EAAQhgC,KAAK81H,GAAQ91F,MACrBC,EAAMD,EAAQ6jG,GAElB,MAAM9/F,EAAiC/D,EAAQ,GAAKhgC,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAI1H,GAHI8S,EAAQ,IAAGA,EAAQ,GACnBC,EAAMjgC,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,eAAcmuB,EAAMjgC,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,cAElGkuB,EAAQC,EAAK,CACbsnB,EAASk6B,OAAO,IAAI0Q,GAA0BnyF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK+nB,MACtF,MAAMD,EAA0B36C,KAAK6yB,EAAKw1D,kBAAkBroF,KAAKy9H,IACjE,GAAe,MAAX9iF,EAAiB,MAAM,IAAIx4C,MAG/B,IAAI0I,EACJ,IAFA08C,EAASk6B,OAAO,IAAIuP,GAAmBhxF,KAAK6yB,EAAM8nB,EAAS3a,EAAOC,EAAK,IAAIyD,GAAK1jC,KAAK81H,GAAQnyF,MAAO,EAAG,EAAG,KAErG94B,EAAI,EAAGA,EAAI8vC,EAAQ5V,MAAMliC,UACtB83C,EAAQ5V,MAAMl6B,GAAGm1B,OAASC,GADIp1B,KAGtC,MAAMo7H,EAAgB,IAAIviG,GAAK1jC,KAAK81H,GAAQnyF,MAAO3D,EAAOC,EACtDjgC,KAAK6yB,EAAK9F,KAAKisB,iBAAiBh5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,IAAaz9H,KAAK81H,GAAQnyF,OACpK3jC,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,UAC/C8+G,EAAQliG,qBAAuBA,EAC/BwjB,EAASk6B,OAAO,IAAIkT,GAAgB30F,KAAK6yB,EAAM8nB,EAASsrF,EAASp7H,IACjE7K,KAAKsiI,GAAU2D,GAEfjmI,KAAK6/H,GAAYiG,EAAY9lG,EAAQC,EACrCjgC,KAAK8/H,GAAa9/H,KAAK81H,GAAQnyF,MAC/B3jC,KAAK+/H,GAAYkG,EAAQniG,KAAKgiG,EAAY,EAAI,GAAG1qG,KACjDp7B,KAAKggI,IAAe,CACvB,CAED,IAAItuD,EAA8B1xE,KAAKu3F,GAEvCv3F,KAAKu3F,GAAWv3F,KAAK6yB,EAAKw1D,kBAAkBroF,KAAKy9H,IAE5B,MAAjBz9H,KAAKu3F,IAAoBv3F,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAAYnnB,KAAKw9H,IAAgB9rD,GAAe1xE,KAAKu3F,IAEvHv3F,KAAKu3F,GAASxyD,MAAM2iC,MAAK,SAAUrrC,EAAGC,GAAK,OAAQD,EAAE2D,OAAS1D,EAAE0D,MAAS3D,EAAEwH,QAAQ,GAAKvH,EAAEuH,QAAQ,GAAKxH,EAAE2D,MAAQ1D,EAAE0D,KAAM,GAGhI,MAAM,GAAIhgC,KAAKm/H,GAAkB,CAE9B53E,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM,EAAG,IAEzD,MAAM4sB,GAAiBz/C,KAAKk0B,EAAUl0B,KAAKmwH,IAAgBnwH,KAAKqhI,GAE1D6E,EAAsBlmI,KAAK81H,GAAQqH,QAAQr5F,KAAK9jC,KAAK81H,GAAQwH,cACnE,IAAIpqC,EAAsB/nF,KAAKe,OAAOlM,KAAK81H,GAAQqH,QAAQn9F,MAAQkmG,EAAWziG,KAAOgc,GAAS20C,GAAeA,EAC7G,MAAMrwD,EAAiCmvD,EAAc,GAAOlzF,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAIlI,GAHIgmE,EAAc,IAAGA,EAAc,GAC/BA,EAAclzF,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,eAAcohF,EAAclzF,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,cAEjG,MAAjB9R,KAAKu3F,GAAkB,MAAM,IAAIp1F,MAErC,GAAI+wF,GAAelzF,KAAK81H,GAAQqH,QAAQn9F,OAAShgC,KAAK81H,GAAQwH,cAAgBt9H,KAAK81H,GAAQqH,QAAQr5F,KAAKjhC,OAAS,GAC7GqwF,GAAelzF,KAAK81H,GAAQqH,QAAQl9F,KAAoC,GAA7BjgC,KAAK81H,GAAQwH,aAExD/1E,EAASk6B,OAAO,IAAIkT,GAAgB30F,KAAK6yB,EAAM7yB,KAAKu3F,GAAUv3F,KAAK81H,GAAQqH,QAASn9H,KAAK81H,GAAQsH,UAAU,IAE3Gp9H,KAAKggI,IAAe,MACjB,CACH,MAAMhgG,EAAgB70B,KAAKoC,IAAIvN,KAAK81H,GAAQqH,QAAQn9F,MAAOkzD,GACrDjzD,EAAc90B,KAAK2L,IAAI9W,KAAK81H,GAAQqH,QAAQl9F,IAAKizD,GAEvDlzF,KAAK6/H,GAAY3sC,EACjBlzF,KAAK8/H,GAAa9/H,KAAK81H,GAAQqH,QAAQt5F,SAAoC,GAA5B7jC,KAAK81H,GAAQ34E,WAAmB,EAAIn9C,KAAK81H,GAAQ34E,YAAcn9C,KAAK81H,GAAQqH,QAAQr5F,KAAK9jC,KAAK81H,GAAQwH,cAAcr8G,SACnKjhB,KAAK+/H,GAAY//H,KAAK81H,GAAQqH,QAAQr5F,KAAK9jC,KAAK81H,GAAQwH,cAAcliG,KACtEp7B,KAAKggI,IAAe,EAEpBz4E,EAASk6B,OAAO,IAAIuP,GAAmBhxF,KAAK6yB,EAAM7yB,KAAKu3F,GAAUv3D,EAAOC,EAAKjgC,KAAK81H,GAAQqH,UAC1F51E,EAASk6B,OAAO,IAAIwR,GAAcjzF,KAAK6yB,EAAM7yB,KAAK81H,GAAQqH,QAASn9H,KAAK81H,GAAQwH,aAAcpqC,EAAanvD,IAC3G/jC,KAAKsiI,GAAUtiI,KAAK81H,GAAQqH,QAC/B,CACJ,MAAM,IAAgC,GAA5Bn9H,KAAK81H,GAAQ34E,YAAoBn9C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAU,CAEtFnnB,KAAK+hG,IACVx6C,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM,EAAG,IAEzD,MAAMioE,EACF3vF,KAAK2L,IAAI9W,KAAK81H,GAAQqH,QAAQn9F,MAC1B70B,KAAKoC,IAAIvN,KAAK81H,GAAQqH,QAAQl9F,IAC1B90B,KAAKe,MAAMlM,KAAKk0B,GAAWl0B,KAAKqhI,GAAajtC,IAAgBA,IAEjEp0F,KAAK81H,GAAQqH,QAAQn9F,MAE7B,IAAIijD,EACAH,EAAmB9iF,KAAK81H,GAAQqH,QAAQr5F,KAAK,GAC7Ci3D,EAAmB,EACnBC,EAAuB,EACvBvhD,EAAcz5C,KAAK6yB,EAAK9F,KAAKwsB,aAAav5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,IAAaz9H,KAAK81H,GAAQnyF,OAG9KwiG,EAAyB,GAAOh7H,KAAKiB,IAAIqtC,EAAK,IAC9C2sF,EAAyB,GAAOj7H,KAAKiB,IAAIqtC,EAAK,IAC9C4sF,EAAoBrmI,KAAKs/H,GAAet/H,KAAKw+F,GAAU,GAAK,EAC5D8nC,EAAqBn7H,KAAKoC,IAAIpC,KAAKC,IAAIpL,KAAKs/H,GAAet/H,KAAKw+F,IAAW2nC,EAAgB,GAAKh7H,KAAK2L,IAAI,EAAG3L,KAAKC,IAAIpL,KAAKs/H,GAAet/H,KAAKw+F,IAAW4nC,EAAiB,GAG1KE,EAAa,IACbtmI,KAAKw/H,IAAa,GAGtB,IAAK,IAAI30H,EAAY,EAAGA,EAAI7K,KAAK81H,GAAQqH,QAAQr5F,KAAKjhC,OAAQgI,IAAK,CAG/D,GAFAo4E,EAAUH,EACVA,EAAU9iF,KAAK81H,GAAQqH,QAAQr5F,KAAKj5B,GAChCiwF,EAAWhY,EAAQr/C,KAAM,SAC7B,GAAIq3D,EAAW7X,EAAQx/C,KAAM,MAAM,IAAIthC,MACvC,MAAMokI,GAAqBzrC,EAAW7X,EAAQx/C,OAASq/C,EAAQr/C,KAAOw/C,EAAQx/C,MAC9Es3D,EAAW5vF,KAAKe,MAAM+2E,EAAQ7nD,MAAQ,EAAMmrG,GAAazjD,EAAQ1nD,KAAOmrG,EAAYF,EAAWC,GAE1FtmI,KAAK09H,aAAgB19H,KAAK6yB,EAAKwjE,MAAMmwC,mBAAsBxmI,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,WACrG4zE,EAAsC,EAA3B5vF,KAAK0hB,MAAMkuE,EAAW,IAEjCA,EAAW,IAAGA,EAAW,GACzBA,EAAWthD,IAAKshD,EAAWthD,GAC/BuhD,EAAeh7F,KAAK2jI,GAAa1gD,EAAQhiE,UAAY,EAAMslH,GAAazjD,EAAQ7hE,SAAWslH,EAAYvmI,KAAK81H,GAAQqH,QAAQt5F,QAAQ,GAAI,EAAGviC,EAAO0Y,UAAYha,KAAK81H,GAAQqH,QAAQt5F,QAAQ,GAC3L,KACH,CACD,GAAI7jC,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAAYnnB,KAAK09H,YAE1D,GAAI5iC,GAAY96F,KAAK81H,GAAQqH,QAAQr5F,KAAK9jC,KAAK81H,GAAQqH,QAAQr5F,KAAKjhC,OAAS,GAAG4gC,KAC5E,GAAIzjC,KAAK81H,GAAQqH,QAAQn9F,MAAQhgC,KAAK81H,GAAQqH,QAAQr5F,KAAK9jC,KAAK81H,GAAQqH,QAAQr5F,KAAKjhC,OAAS,GAAG4gC,KAAOzjC,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aACxI,IAAK,MAAMozB,KAAQllC,KAAKu3F,GAAUxyD,MAC1BG,EAAKlF,OAAShgC,KAAK81H,GAAQqH,QAAQn9F,MAAQhgC,KAAK81H,GAAQqH,QAAQr5F,KAAK9jC,KAAK81H,GAAQqH,QAAQr5F,KAAKjhC,OAAS,GAAG4gC,MAAQyB,EAAKrB,QAAQ,IAAM7jC,KAAK81H,GAAQqH,QAAQt5F,QAAQ,IACnK0jB,EAASk6B,OAAO,IAAIoZ,GAAe76F,KAAK6yB,EAAMqS,EAAMA,EAAKpB,KAAK,GAAGL,KAAMs3D,EAAUC,EAAch7F,KAAK29H,gBAI3G,CAED,MAAM7rD,EAA8B9xE,KAAK6yB,EAAKw1D,kBAAkB,GAEhE,GAAmB,MAAfvW,GAAuBA,EAAY9sC,YAAY,IAAMhlC,KAAKu3F,GAAUvyD,YAAY,GAChF,IAAK,MAAME,KAAQ4sC,EAAY/sC,MACT,GAAdG,EAAKlF,OAAckF,EAAKrB,QAAQ,IAAM7jC,KAAK81H,GAAQqH,QAAQt5F,QAAQ,IACnE0jB,EAASk6B,OAAO,IAAIoZ,GAAe76F,KAAK6yB,EAAMqS,EAAMA,EAAKpB,KAAK,GAAGL,KAAMs3D,EAAUC,EAAch7F,KAAK29H,WAKnH,MAGA,GAAI7iC,GAAY96F,KAAK81H,GAAQqH,QAAQr5F,KAAK,GAAGL,KAC9C,GAAIzjC,KAAK81H,GAAQqH,QAAQn9F,MAAQ,EAC7B,IAAK,MAAMkF,KAAQllC,KAAKu3F,GAAUxyD,MAC1BG,EAAKjF,KAAOjgC,KAAK81H,GAAQqH,QAAQn9F,OAASkF,EAAKrB,QAAQ,IAAM7jC,KAAK81H,GAAQqH,QAAQt5F,QAAQ,IAC1F0jB,EAASk6B,OAAO,IAAIoZ,GAAe76F,KAAK6yB,EAAMqS,EAAMA,EAAKpB,KAAKoB,EAAKpB,KAAKjhC,OAAS,GAAG4gC,KAAMs3D,EAAUC,EAAch7F,KAAK29H,gBAI9H,CAED,MAAMjsD,EAA8B1xE,KAAK6yB,EAAKw1D,mBAAmB,GAEjE,GAAmB,MAAf3W,GAAuBA,EAAY1sC,YAAY,IAAMhlC,KAAKu3F,GAAUvyD,YAAY,GAChF,IAAK,MAAME,KAAQwsC,EAAY3sC,MACvBG,EAAKjF,KAAOjgC,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,cAAgBozB,EAAKrB,QAAQ,IAAM7jC,KAAK81H,GAAQqH,QAAQt5F,QAAQ,IAChH0jB,EAASk6B,OAAO,IAAIoZ,GAAe76F,KAAK6yB,EAAMqS,EAAMA,EAAKpB,KAAKoB,EAAKpB,KAAKjhC,OAAS,GAAG4gC,KAAMs3D,EAAUC,EAAch7F,KAAK29H,WAItI,CAIT39H,KAAK6/H,GAAY7/H,KAAK81H,GAAQqH,QAAQn9F,MAAQ86D,EAC9C96F,KAAK8/H,GAAa9/H,KAAK81H,GAAQqH,QAAQt5F,SAAoC,GAA5B7jC,KAAK81H,GAAQ34E,WAAmB,EAAIn9C,KAAK81H,GAAQ34E,YAAc69C,EAC9Gh7F,KAAK+/H,GAAYhlC,EACjB/6F,KAAKggI,IAAe,EAEpBz4E,EAASk6B,OAAO,IAAIoZ,GAAe76F,KAAK6yB,EAAM7yB,KAAK81H,GAAQqH,QAASriC,EAAUC,EAAUC,EAAch7F,KAAK29H,YAC3G39H,KAAKsiI,GAAUtiI,KAAK81H,GAAQqH,QAC/B,KAAM,CAKH,GAJA51E,EAASk6B,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM,EAAG,IAEzD7yB,KAAK+/H,GAAY//H,KAAK81H,GAAQqH,QAAQr5F,KAAK9jC,KAAK81H,GAAQwH,cAAcliG,KAEjD,MAAjBp7B,KAAKu3F,GAAkB,MAAM,IAAIp1F,MAErC,IAAIsxF,EACAC,EACA1zF,KAAKk0B,GAAWl0B,KAAKmwH,IACrB18B,EAAYtoF,KAAK2L,IAAI9W,KAAK81H,GAAQqH,QAAQn9F,MAAOhgC,KAAK81H,GAAQlxF,MAC9D8uD,EAAUliC,EAAc4iC,IAExBX,EAAYtoF,KAAKoC,IAAIvN,KAAK81H,GAAQqH,QAAQl9F,IAAKjgC,KAAK81H,GAAQlxF,KAAOwvD,GACnEV,EAAUliC,GAEVkiC,EAAU,IAAGA,EAAU,GACvBA,EAAU1zF,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,eAAc4hF,EAAU1zF,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,cAC1G4hF,EAAU1zF,KAAK81H,GAAQqH,QAAQl9F,KAC/BsnB,EAASk6B,OAAO,IAAIuP,GAAmBhxF,KAAK6yB,EAAM7yB,KAAKu3F,GAAUv3F,KAAK81H,GAAQqH,QAAQn9F,MAAO0zD,EAAS1zF,KAAK81H,GAAQqH,UAEnHzpC,EAAU1zF,KAAK81H,GAAQqH,QAAQn9F,OAC/BunB,EAASk6B,OAAO,IAAIuP,GAAmBhxF,KAAK6yB,EAAM7yB,KAAKu3F,GAAU7D,EAAS1zF,KAAK81H,GAAQqH,QAAQl9F,IAAKjgC,KAAK81H,GAAQqH,UAGrH,IAAI/Q,EAAmBzkG,OAAOy/F,UAC1BptG,GAAoB2N,OAAOy/F,UAC/B,IAAK,MAAMzjF,KAAS3jC,KAAK81H,GAAQqH,QAAQt5F,QACjCuoF,EAAWzoF,IAAOyoF,EAAWzoF,GAC7B3pB,EAAW2pB,IAAO3pB,EAAW2pB,GAKrC,GAHAyoF,GAAYpsH,KAAK81H,GAAQqH,QAAQt5F,QAAQ7jC,KAAK81H,GAAQ34E,YACtDnjC,GAAYha,KAAK81H,GAAQqH,QAAQt5F,QAAQ7jC,KAAK81H,GAAQ34E,YAEjDn9C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAKzC,CACD,MAAMwsE,EAAiB3zF,KAAK2jI,GAAa3jI,KAAK8/H,IAAa1T,EAAU9qH,EAAOyY,SAAW,GACvFwtC,EAASk6B,OAAO,IAAI+R,GAAgBxzF,KAAK6yB,EAAM7yB,KAAK81H,GAAQqH,QAAS1pC,EAAWC,EAASC,EAAQ3zF,KAAK81H,GAAQ34E,aAC9Gn9C,KAAK8/H,GAAansC,CACrB,KATuD,CACpD,MAAMA,EAAiB3zF,KAAK2jI,GAAa3jI,KAAK8iI,GAAgB9iI,KAAKw+F,KAAW4tB,GAAWpsH,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAAW7lB,EAAOuY,UAAY,EAAIvY,EAAO0Y,UAAYA,GACzLutC,EAASk6B,OAAO,IAAI+R,GAAgBxzF,KAAK6yB,EAAM7yB,KAAK81H,GAAQqH,QAAS1pC,EAAWC,EAASC,EAAQ3zF,KAAK81H,GAAQ34E,aAC9Gn9C,KAAK8/H,GAAansC,CACrB,CAMD3zF,KAAKsiI,GAAUtiI,KAAK81H,GAAQqH,SAE5Bn9H,KAAK6/H,GAAYnsC,EACjB1zF,KAAKggI,IAAe,CACvB,CAER,CAEKhgI,KAAKm0B,GAAcn0B,KAAK81H,GAAQoH,OAASkF,IAC3CpiI,KAAKu2H,KACLv2H,KAAKg1B,I,CAkEL,EAAAqtG,CAAqB3gD,GACzB1hF,KAAKigI,GAA0Bv+C,EAC/B1hF,KAAK6yB,EAAKi/D,OAAO9xF,KAAKigI,GAAyBjgI,KAAKkgI,G,CAIhD,CAAAlrG,GACJ,GAAIh1B,KAAKo/H,GACL,IAAKp/H,KAAKm0B,IAAen0B,KAAK81H,GAAQoH,QAAUl9H,KAAK+hG,KAAmB/hG,KAAKggI,IAAgBhgI,KAAKw/H,IAAcx/H,KAAK0/H,IAA6B1/H,KAAK2/H,IAA2B3/H,KAAK4/H,GACnL5/H,KAAKo+H,GAAYt5G,aAAa,aAAc,UAEvC9kB,KAAK8+H,kBACN9+H,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,UAAW,QACpDvlB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,iBAAkB,QAC3DvlB,KAAKq+H,kBAAkBv5G,aAAa,kBAAmB,cAGxD,CACH9kB,KAAKo+H,GAAYt5G,aAAa,aAAc,WAE5C,MAAMlO,EAAY5W,KAAKqhI,GAAarhI,KAAK6/H,GACnChpH,EAAY7W,KAAK+iI,GAAoB/iI,KAAK8/H,GAAa9/H,KAAKqgI,IAC5D57B,GAAkBzkG,KAAKk/H,GAAel/H,KAAKgjI,IAAgB,EAC3D5vG,EAAgB,GAChBC,EAAiB,GACjBomB,EAAcz5C,KAAK6yB,EAAK9F,KAAKwsB,aAAav5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,IAAaz9H,KAAK81H,GAAQnyF,OAGpL,IAAI8iG,EAAqB,GAEzBA,GAAc,KAAOhpH,EAAa7G,GAAK,IAAM6G,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACjGgtF,GAAc,KAAOhpH,EAAa7G,GAAK,IAAM6G,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,GAAOpmB,GAAU,IAC1GozG,GAAc,KAAOhpH,EAAa7G,GAAK,IAAM6G,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACjGgtF,GAAc,KAAOhpH,EAAa7G,GAAK,IAAM6G,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,GAAOpmB,GAAU,IAC1GozG,GAAc,KAAOhpH,EAAa7G,GAAK,IAAM6G,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACjGgtF,GAAc,KAAOhpH,EAAa7G,EAAIwc,GAAS,IAAM3V,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACzGgtF,GAAc,KAAOhpH,EAAa7G,GAAK,IAAM6G,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACjGgtF,GAAc,KAAOhpH,EAAa7G,EAAIwc,GAAS,IAAM3V,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACzGgtF,GAAc,KAAOhpH,EAAa7G,GAAK,IAAM6G,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACjGgtF,GAAc,KAAOhpH,EAAa7G,EAAIwc,GAAS,IAAM3V,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACzGgtF,GAAc,KAAOhpH,EAAa7G,GAAK,IAAM6G,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IACjGgtF,GAAc,KAAOhpH,EAAa7G,EAAIwc,GAAS,IAAM3V,EAAa5G,EAAI4tF,GAAUzkG,KAAK+/H,GAAYtmF,IAAQ,IAEzGz5C,KAAKo+H,GAAYt5G,aAAa,IAAK2hH,EACtC,MAED,GAAKzmI,KAAKo0B,IAAcp0B,KAAKm0B,GAAen0B,KAAK81H,GAAQoH,MAUrD,GAFAl9H,KAAKo+H,GAAYt5G,aAAa,aAAc,WAExC9kB,KAAKukI,KAA6B,CAClC,MAAMnuG,EAAiBp2B,KAAKqhI,GAAarhI,KAAK6yB,EAAK43D,UAAUqN,sBACvDtiE,EAAe/X,EAAa2Y,EAAS,GACrCopE,EAAgB/hF,EAAa2Y,EAAS,GACtCwpE,EAAiB5/F,KAAK+iI,IAAqB,IACjD/iI,KAAKo+H,GAAYt5G,aAAa,IAAK,KAAO0Q,EAAO,QAAUA,EAAO,IAAMoqE,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,OACnI,MAAM,GAAIx/F,KAAKwkI,KAA2B,CACvC,MAAMpuG,EAAiBp2B,KAAKqhI,GAAarhI,KAAK6yB,EAAK43D,UAAUsN,oBACvDviE,EAAe/X,EAAa2Y,EAAS,GACrCopE,EAAgB/hF,EAAa2Y,EAAS,GACtCwpE,EAAiB5/F,KAAK+iI,IAAqB,IACjD/iI,KAAKo+H,GAAYt5G,aAAa,IAAK,KAAO0Q,EAAO,QAAUA,EAAO,IAAMoqE,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,OACnI,MAAM,GAAIx/F,KAAKskI,KAAwB,CACpC,MAAM9uG,EAAe/X,EAAazd,KAAKqhI,GAAarhI,KAAK6yB,EAAK43D,UAAUqN,sBAAwB,GAC1F0H,EAAgB/hF,EAAazd,KAAKqhI,GAAarhI,KAAK6yB,EAAK43D,UAAUsN,oBAAsB,GACzF6H,EAAiB5/F,KAAK+iI,IAAqB,IACjD/iI,KAAKo+H,GAAYt5G,aAAa,IAAK,KAAO0Q,EAAO,QAAUA,EAAO,IAAMoqE,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,OACnI,MACGx/F,KAAK0mI,GAAU1mI,KAAKo+H,GAAap+H,KAAK81H,GAAQnyF,MAAO3jC,KAAK81H,GAAQ91F,MAAOhgC,KAAK81H,GAAQhyF,MAAO9jC,KAAKk/H,GAAel/H,KAAKgjI,IAAgB,EAAI,GAAG,EAAMhjI,KAAKqgI,SA3B5JrgI,KAAKo+H,GAAYt5G,aAAa,aAAc,UACvC9kB,KAAK8+H,kBACN9+H,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,UAAW,QACpDvlB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,iBAAkB,QAC3DvlB,KAAKq+H,kBAAkBv5G,aAAa,kBAAmB,S,CA6B/D,EAAAygH,GACAvlI,KAAK6yB,EAAK43D,UAAU2N,wBACpBp4F,KAAKm+H,GAAer5G,aAAa,aAAc,WAC/C9kB,KAAKm+H,GAAer5G,aAAa,IAAKoS,OAAOl3B,KAAKqhI,GAAarhI,KAAK6yB,EAAK43D,UAAUqN,wBACnF93F,KAAKm+H,GAAer5G,aAAa,QAASoS,OAAOl3B,KAAKqhI,IAAcrhI,KAAK6yB,EAAK43D,UAAUsN,oBAAsB/3F,KAAK6yB,EAAK43D,UAAUqN,0BAElI93F,KAAKm+H,GAAer5G,aAAa,aAAc,S,CAIhD,MAAA8R,GACH,MAAMk7C,EAA8B9xE,KAAK6yB,EAAKw1D,kBAAkBroF,KAAKy9H,IAiBrE,GAfIz9H,KAAKu3F,IAAYzlB,GAAgC,MAAjB9xE,KAAKu3F,KACjCv3F,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAAYnnB,KAAKw9H,IAA+B,MAAf1rD,GAE1EA,EAAY/sC,MAAM2iC,MAAK,SAAUrrC,EAAGC,GAAK,OAAQD,EAAE2D,OAAS1D,EAAE0D,MAAS3D,EAAEwH,QAAQ,GAAKvH,EAAEuH,QAAQ,GAAKxH,EAAE2D,MAAQ1D,EAAE0D,KAAM,IAE3HhgC,KAAKsiG,GAAc,KACnBtiG,KAAKg2B,GAAoB,OAE7Bh2B,KAAKu3F,GAAWzlB,EAEhB9xE,KAAK+yB,EAAe/yB,KAAKg0B,UAAUxB,YACnCxyB,KAAKgzB,EAAgBhzB,KAAKg0B,UAAU2yG,aACpC3mI,KAAKqhI,GAAarhI,KAAK+yB,GAAgB/yB,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,cAC3E9R,KAAKqgI,GAAiBrgI,KAAK6yB,EAAK1L,SAAWnnB,KAAK6yB,EAAK9F,KAAKE,kBAAqB,EAAIjtB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6a,OAAS1gC,EAAOsY,iBAE1I5Z,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAC3CnnB,KAAKgjI,GAAe,EACpBhjI,KAAK0kI,GAAcpjI,EAAOuY,eAEzB,GAAI7Z,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAI9C,GAHAnnB,KAAKgjI,GAAehjI,KAAKu+H,GACzBv+H,KAAK0kI,GAAcpjI,EAAOyY,SAEL,MAAjB/Z,KAAKu3F,GAEL,IAAK,MAAMryD,KAAQllC,KAAKu3F,GAASxyD,MAAO,CACpC,IAAIpB,EAAQuB,EAAKrB,QAAQ,GACrBugG,EAAoBpkI,KAAK6yB,EAAK9F,KAAKwsB,cAAa,EAAMv5C,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,IAAa95F,GAC1H0gG,EAAyB,EAC7B,IAAK,MAAM7/F,KAAOU,EAAKpB,KACfU,EAAIpJ,KAAOipG,IACXA,EAAiB7/F,EAAIpJ,MAI7B,GAAIipG,EAAiBD,EACjB,IAAK,MAAM5/F,KAAOU,EAAKpB,KACnBU,EAAIpJ,KAAOjwB,KAAKe,MAAMs4B,EAAIpJ,MAAQgpG,EAAYC,GAGzD,OAILrkI,KAAKgjI,GAAe,EACpBhjI,KAAK0kI,GAAc1kI,KAAK6yB,EAAK+zG,uBAGjC5mI,KAAKk/H,GAAel/H,KAAKgzB,EAAgBhzB,KAAK0kI,GAC9C1kI,KAAKqgI,GAAiBrgI,KAAK6yB,EAAK1L,SAAWnnB,KAAK6yB,EAAK9F,KAAKE,kBAAqB,EAAIjtB,KAAK6yB,EAAK6nG,qBAAqB16H,KAAK6yB,EAAK1L,SAAW7lB,EAAOsY,iBAE1I5Z,KAAK4gI,IAAmB5gI,KAAK6yB,EAAK9F,KAAK+Y,QACvC9lC,KAAK6gI,IAA8B7gI,KAAK6yB,EAAK9F,KAAKE,mBAClDjtB,KAAK8gI,IAA8B9gI,KAAK6yB,EAAK9F,KAAKG,mBAClDltB,KAAK+gI,IAA4B/gI,KAAK6yB,EAAK9F,KAAK+sB,kBAChD95C,KAAK4gI,GAAkB5gI,KAAK6yB,EAAK9F,KAAK+Y,OACtC9lC,KAAK6gI,GAA6B7gI,KAAK6yB,EAAK9F,KAAKE,kBACjDjtB,KAAK8gI,GAA6B9gI,KAAK6yB,EAAK9F,KAAKG,kBACjDltB,KAAK+gI,GAA2B/gI,KAAK6yB,EAAK9F,KAAK+sB,gBAC/C95C,KAAKyhI,mBAGTzhI,KAAK8jI,GAAc9jI,KAAKq/H,GAAmBr/H,KAAK6yB,EAAK1L,SAEjDnnB,KAAKsgI,IAAkBtgI,KAAK+yB,GAAgB/yB,KAAKugI,IAAmBvgI,KAAKgzB,IACzEhzB,KAAKsgI,GAAiBtgI,KAAK+yB,EAC3B/yB,KAAKugI,GAAkBvgI,KAAKgzB,EAC5BhzB,KAAKg+H,GAAel5G,aAAa,QAAS,GAAK9kB,KAAK+yB,GACpD/yB,KAAKg+H,GAAel5G,aAAa,SAAU,GAAK9kB,KAAKgzB,GACrDhzB,KAAKk+H,GAAap5G,aAAa,SAAU,GAAK9kB,KAAKgzB,GACnDhzB,KAAKm+H,GAAer5G,aAAa,IAAK,KACtC9kB,KAAKm+H,GAAer5G,aAAa,SAAU,GAAK9kB,KAAKgzB,IAGzD,MAAMmgF,EAAYnzG,KAAK+yB,EAAe/yB,KAAK6yB,EAAK9F,KAAK4Z,YACrD,GAAI3mC,KAAKwgI,IAAsBrtB,GAAanzG,KAAKygI,IAAwBzgI,KAAKk/H,GAAc,CACxFl/H,KAAKwgI,GAAqBrtB,EAC1BnzG,KAAKygI,GAAuBzgI,KAAKk/H,GACjCl/H,KAAK49H,GAAmB94G,aAAa,QAAS,GAAKquF,GACnDnzG,KAAK49H,GAAmB94G,aAAa,SAAU,GAAM9kB,KAAKk/H,GAAe59H,EAAOsY,kBAChF5Z,KAAK89H,GAAmBh5G,aAAa,QAAS,GAAKquF,GACnDnzG,KAAK89H,GAAmBh5G,aAAa,SAAU,GAAK9kB,KAAKk/H,IACzDl/H,KAAK+9H,GAAkBj5G,aAAa,QAAS,GAAKquF,GAClDnzG,KAAK+9H,GAAkBj5G,aAAa,SAAU,GAAM9kB,KAAiB,IACrEA,KAAK+9H,GAAkBj5G,aAAa,IAAK,GAAM9kB,KAAKgjI,GAAe,GACnEhjI,KAAKy+H,GAAmB35G,aAAa,QAAS,IAAMquF,EAAY,IAChEnzG,KAAKy+H,GAAmB35G,aAAa,SAAU,IAAM9kB,KAAKk/H,GAAe,IACrEl/H,KAAKk/H,GAAel/H,KAAKgjI,KACzBhjI,KAAK0+H,GAAkB55G,aAAa,QAAS,IAAMquF,EAAY,IAC/DnzG,KAAK0+H,GAAkB55G,aAAa,SAAU,IAAM9kB,KAAKk/H,GAAel/H,KAAKgjI,MAKjF,IAAK,IAAI/oG,EAAY,EAAGA,EAAI34B,EAAOsY,iBAAkBqgB,IAAK,CACtD,MAAMwoG,EAA4BziI,KAAKw+H,GAAqBvkG,GACtDpjB,GAAavV,EAAOsY,iBAAmBqgB,GAAK34B,EAAOsY,iBACzD6oH,EAAU39G,aAAa,QAAS,IAAMquF,EAAY,IAClDsvB,EAAU39G,aAAa,IAAK,IAAMjO,EAAI7W,KAAKk/H,GAAe,IAC1DuD,EAAU39G,aAAa,SAAU,IAAM9kB,KAAKk/H,GAAe,GAC9D,CACJ,CAEGl/H,KAAKw9H,KACAx9H,KAAKm0B,GAAYn0B,KAAKu2H,KAC3Bv2H,KAAKg1B,IACLh1B,KAAKulI,MAGLvlI,KAAK8iH,IAAmB9iH,KAAK6yB,EAAKwjE,MAAM8sB,YACxCnjH,KAAK8iH,GAAkB9iH,KAAK6yB,EAAKwjE,MAAM8sB,UACvCnjH,KAAKw+H,GAAqB,GAAG15G,aAAa,OAAQ9kB,KAAK6yB,EAAKwjE,MAAM8sB,UAAYr8F,GAAY2J,UAAY3J,GAAYyJ,kBAGtH,IAAK,IAAI0J,EAAY,EAAGA,EAAI34B,EAAOsY,iBAAkBqgB,IAAK,CACtD,IAAIqgB,EAAQt6C,KAAK6yB,EAAK9F,KAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,MAAQ9E,KAAK6yB,EAAK9F,KAAKsrB,YAAc/2C,EAAO4O,OAAOlQ,KAAK6yB,EAAK9F,KAAKutB,OAAOlqC,MAEhJpQ,KAAKw+H,GAAqBvkG,GAAG3U,MAAMqR,WAAa2jB,EAAMrgB,GAAK,UAAY,QAC1E,CAEGj6B,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SACtCnnB,KAAK0gI,KACN1gI,KAAK0gI,IAAiB,EACtB1gI,KAAK2gI,IAAe,EACpB3gI,KAAKg+H,GAAel5G,aAAa,OAAQ,mCAAqC9kB,KAAKy9H,GAAa,MAE7Fz9H,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAC3CnnB,KAAK2gI,KACN3gI,KAAK0gI,IAAiB,EACtB1gI,KAAK2gI,IAAe,EACpB3gI,KAAKg+H,GAAel5G,aAAa,OAAQ,kCAAoC9kB,KAAKy9H,GAAa,OAG/Fz9H,KAAK0gI,IAAkB1gI,KAAK2gI,MAC5B3gI,KAAK0gI,IAAiB,EACtB1gI,KAAK2gI,IAAe,EACpB3gI,KAAKg+H,GAAel5G,aAAa,OAAQ,mCAAqC9kB,KAAKy9H,GAAa,MAIxGz9H,KAAKkiI,I,CAGD,EAAAA,GAGJ,GAFAliI,KAAKi+H,GA5+Cb,SAAqD4I,GACjD,MAAMpiG,EAAcoiG,EAAKC,WAAU,GAEnC,OADAD,EAAKE,WAAYC,aAAaviG,EAAOoiG,GAC9BpiG,CACX,CAw+CiCwiG,CAA4BjnI,KAAKi+H,IAEtDj+H,KAAK6yB,EAAKwjE,MAAM6wC,eACXlnI,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAC1C,IAAK,IAAIA,EAAkBnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoB,EAAG/F,GAAW,EAAGA,IAAW,CACzH,GAAIA,GAAWnnB,KAAK6yB,EAAK1L,QAAS,SAClC,GAAInnB,KAAK6yB,EAAK9F,KAAKotB,kBAAkBhzB,IAAYnnB,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAAU,SAEtG,MAAMggH,EAA2BnnI,KAAK6yB,EAAK9F,KAAK48B,WAAWxiC,EAASnnB,KAAK6yB,EAAK+nB,IAAM56C,KAAKy9H,IACzF,GAAgB,MAAZ0J,EAAkB,SAEtB,MAAMhrF,EAAuBn8C,KAAK6yB,EAAK6nG,qBAAqBvzG,GAAW7lB,EAAOsY,iBAC9E,IAAK,MAAMsrB,KAAQiiG,EAASpiG,MACxB,IAAK,MAAMpB,KAASuB,EAAKrB,QAAS,CAC9B,MAAMujG,EAA2BrhH,EAAI6N,OACrCwzG,EAAStiH,aAAa,OAAQgC,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM5F,GAASe,eACnFk/G,EAAStiH,aAAa,iBAAkB,QACxC9kB,KAAK0mI,GAAUU,EAAUzjG,EAAOuB,EAAKlF,MAAOkF,EAAKpB,KAA0B,IAApB9jC,KAAKk/H,IAAqB,EAAO/iF,GACxFn8C,KAAKi+H,GAAkBh6H,YAAYmjI,EACtC,CAER,CAIT,GAAqB,MAAjBpnI,KAAKu3F,GAAkB,CACvB,MAAM34E,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,KACpH/9G,EAAed,EAAWgyB,WAC1BpxB,EAAyBZ,EAAWg5B,gBACpCyvF,EAAiC3nH,EAAM1I,gBAAkB0I,EAAMzI,aAAeyI,EAAMxI,WAAa,GAAKsI,EAAW3K,OACvH,IAAK,MAAMqwB,KAAQllC,KAAKu3F,GAASxyD,MAAO,CACpC,IAAIq2E,GAAoB,EACxB,GAAIp7G,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAU,EAC1BvI,EAAWlC,WAAWpb,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,KACjEviC,EAAOob,WAAW1X,WAAiB,KAAEF,OACnD8Z,EAAW+wB,kBAAkBruC,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,OAC/Du3E,GAAW,EAClB,CACD,IAAK,IAAIvwG,EAAY,EAAGA,EAAIq6B,EAAKrB,QAAQhhC,OAAQgI,IAAK,CAClD,MAAM84B,EAAgBuB,EAAKrB,QAAQh5B,GACnC,IAAIu8H,EAA2BrhH,EAAI6N,OAC/B0zG,EAAwBlsB,EAAWt0F,GAAYqL,oBAAsBrL,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YACpIo/G,EAA0BnsB,EAAWt0F,GAAYsL,sBAAwBtL,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASe,cAC5Ik/G,EAAStiH,aAAa,OAAQyiH,GAC9BH,EAAStiH,aAAa,iBAAkB,QACxC9kB,KAAK0mI,GAAUU,EAAUzjG,EAAOuB,EAAKlF,MAAOkF,EAAKpB,MAAO9jC,KAAKk/H,GAAel/H,KAAKgjI,IAAgB,EAAI,GAAG,EAAOhjI,KAAKqgI,IACpHrgI,KAAKi+H,GAAkBh6H,YAAYmjI,GACnCA,EAAWrhH,EAAI6N,OACfwzG,EAAStiH,aAAa,OAAQwiH,GAC9BF,EAAStiH,aAAa,iBAAkB,QACxC9kB,KAAK0mI,GAAUU,EAAUzjG,EAAOuB,EAAKlF,MAAOkF,EAAKpB,MAAO9jC,KAAKk/H,GAAel/H,KAAKgjI,IAAgB,EAAI,GAAG,EAAMhjI,KAAKqgI,IACnHrgI,KAAKi+H,GAAkBh6H,YAAYmjI,GAEnC,IAAIhyB,EAA0B,EAC9B,GAAIlwE,EAAKnB,qBAAsB,CAC3B,MAAMsxE,EAAsBlqG,KAAKoC,IAAIvN,KAAKk/H,GAAc,IACxD,IAAI3pB,EACJA,EAAY,KAAO93F,EAAazd,KAAKqhI,GAAan8F,EAAKlF,MAAQo1E,GAAmB,IAAM33F,EAAazd,KAAK+iI,GAAoBp/F,EAAQ3jC,KAAKqgI,IAAiB,GAAMhrB,GAClKE,GAAa,KAAO93F,EAAazd,KAAKqhI,GAAan8F,EAAKlF,MAAQo1E,GAAmB,IAAM33F,EAAazd,KAAK+iI,GAAoBp/F,EAAQ3jC,KAAKqgI,IAAiB,GAAMhrB,GACnKE,GAAa,KAAO93F,EAAazd,KAAKqhI,GAAan8F,EAAKlF,MAAQo1E,EAAkB,GAAK,IAAM33F,EAAazd,KAAK+iI,GAAoBp/F,EAAQ3jC,KAAKqgI,IAAiB,GAAMhrB,GACvKE,GAAa,KAAO93F,EAAazd,KAAKqhI,GAAan8F,EAAKlF,MAAQo1E,EAAkB,GAAK,IAAM33F,EAAazd,KAAK+iI,GAAoBp/F,EAAQ3jC,KAAKqgI,IAAiB,GAAMhrB,GACvKE,GAAa,KAAO93F,EAAazd,KAAKqhI,GAAan8F,EAAKlF,MAAQo1E,EAAkB,IAAM,IAAM33F,EAAazd,KAAK+iI,GAAoBp/F,EAAQ3jC,KAAKqgI,KACjJ9qB,GAAa,KAAO93F,EAAazd,KAAKqhI,GAAan8F,EAAKlF,MAAQo1E,EAAkB,GAAK,IAAM33F,EAAazd,KAAK+iI,GAAoBp/F,EAAQ3jC,KAAKqgI,IAAiB,GAAMhrB,GACvKE,GAAa,KAAO93F,EAAazd,KAAKqhI,GAAan8F,EAAKlF,MAAQo1E,EAAkB,GAAK,IAAM33F,EAAazd,KAAK+iI,GAAoBp/F,EAAQ3jC,KAAKqgI,IAAiB,GAAMhrB,GACvK,MAAMG,EAAwBzvF,EAAI6N,OAClC4hF,EAAM1wF,aAAa,IAAKywF,GACxBC,EAAM1wF,aAAa,OAAQgC,GAAYkJ,cACvChwB,KAAKi+H,GAAkBh6H,YAAYuxG,GACnCJ,GAAmB,EACtB,CAED,GAAIlwE,EAAKrB,QAAQhhC,OAAS,GAClBwkI,EAAuB,CACvB,MAAMG,EAAkCzhH,EAAI2rE,OAC5C81C,EAAgB1iH,aAAa,IAAK,GAAKrH,EAAazd,KAAKqhI,GAAan8F,EAAKlF,MAAQo1E,IACnFoyB,EAAgB1iH,aAAa,IAAK,GAAKrH,EAAazd,KAAK+iI,GAAoBp/F,EAAQ3jC,KAAKqgI,MAC1FmH,EAAgB1iH,aAAa,QAAS,MACtC0iH,EAAgB1iH,aAAa,OAAQgC,GAAYkJ,cACjDw3G,EAAgB1iH,aAAa,cAAe,SAC5C0iH,EAAgB1iH,aAAa,oBAAqB,WAClD0iH,EAAgB1iH,aAAa,iBAAkB,QAC/C0iH,EAAgB/5G,YAAc,IAAM5iB,EAAI,GACxC7K,KAAKi+H,GAAkBh6H,YAAYujI,EACtC,CAER,CAGD,GAAIxnI,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,UAAYnnB,KAAK+hG,KAAmB/hG,KAAKm/H,IAAoBj6F,GAAQllC,KAAK81H,GAAQqH,QAAS,CAEpIn9H,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,UAAW,IACpDvlB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,iBAAkB,QAC3DvlB,KAAKq+H,kBAAkBv5G,aAAa,kBAAmB,SACvD9kB,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,QAAS,WAClD,IAAI0mD,EAAkBjsE,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,KAAa/gH,WAAWpb,EAAOyY,SAAW,EAAImrB,EAAKrB,QAAQ,IACxKs9F,EAAoBnhI,KAAK+/H,GAAYz+H,EAAOob,WAAWuvD,GAASlvD,kBAGhEqkH,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IAEjHnhI,KAAK6+H,GAA0B,EAAc,EAAVuC,EACnCphI,KAAK2+H,IAA0BlhH,EAAatS,KAAK2L,IAAI3L,KAAKoC,IAAIvN,KAAK+yB,EAAe,GAAe,EAAVquG,EAAaphI,KAAKqhI,GAAarhI,KAAK6/H,GAAY,EAAc,EAAVuB,GAAc,IACzJphI,KAAK4+H,IAAyBnhH,EAAazd,KAAK+iI,GAAoB79F,EAAKrB,QAAQ,GAAK7jC,KAAKqgI,IAAiB,IAAMrgI,KAAKk/H,GAAel/H,KAAKgjI,IAAgB,GAE3JhjI,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,OAAavlB,KAAK2+H,GAAyB,MACpF3+H,KAAKq+H,kBAAkB/4G,MAAMC,YAAY,MAAYvlB,KAAK4+H,GAAwB,MAClF5+H,KAAKq+H,kBAAkB5wG,YAAc,GAAK0zG,CAE7C,CACJ,CACJ,CAEDnhI,KAAK6yB,EAAKovG,uBAAwB,C,CAG9B,EAAAyE,CAAUe,EAA4B9jG,EAAe3D,EAAe8D,EAAiB2gE,EAAgBijC,EAAmBhyH,GAC5H,MAAMiyH,EAAqB3nI,KAAKqhI,IAAcv9F,EAAKA,EAAKjhC,OAAS,GAAG4gC,KAAOK,EAAK,GAAGL,MAC7EmkG,EAAoB,GAAMz8H,KAAKoC,IAAI,EAAGo6H,EAAa,GAEzD,IAAI7kD,EAAmBh/C,EAAK,GAE5B,MAAM2V,EAAcz5C,KAAK6yB,EAAK9F,KAAKwsB,aAAav5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK6yD,qBAAqB1lF,KAAKy9H,IAAa95F,GAEvK,IAAI8iG,EAAqB,KAAOhpH,EAAazd,KAAKqhI,IAAcrhG,EAAQ8iD,EAAQr/C,MAAQmkG,GAAa,IAAMnqH,EAAazd,KAAK+iI,GAAoBp/F,EAAQjuB,GAAU+uF,GAAUijC,EAAW5kD,EAAQ1nD,KAAOqe,EAAM,IAAQ,IAErN,IAAK,IAAI5uC,EAAY,EAAGA,EAAIi5B,EAAKjhC,OAAQgI,IAAK,CAC1C,IAAIo4E,EAAmBH,EACvBA,EAAUh/C,EAAKj5B,GACf,IAAIg9H,EAAmB7nI,KAAKqhI,IAAcrhG,EAAQijD,EAAQx/C,OAAc,GAAL54B,EAAS+8H,EAAY,GACpFE,EAAmB9nI,KAAKqhI,IAAcrhG,EAAQ8iD,EAAQr/C,OAAS54B,GAAKi5B,EAAKjhC,OAAS,EAAI+kI,EAAY,GAClGG,EAAqB/nI,KAAK+iI,GAAoBp/F,EAAQs/C,EAAQhiE,SAAWvL,GACzEsyH,EAAqBhoI,KAAK+iI,GAAoBp/F,EAAQm/C,EAAQ7hE,SAAWvL,GACzEu+E,EAAmByzC,EAAWzkD,EAAQ7nD,KAAOqe,EAAM,EACnDwuF,EAAmBP,EAAW5kD,EAAQ1nD,KAAOqe,EAAM,EACvDgtF,GAAc,KAAOhpH,EAAaoqH,GAAY,IAAMpqH,EAAasqH,EAAatjC,EAASxQ,GAAY,IAC/FhR,EAAQhiE,SAAW6hE,EAAQ7hE,WAAUwlH,GAAc,KAAOhpH,EAAaoqH,EAAW,GAAK,IAAMpqH,EAAasqH,EAAatjC,EAASxQ,GAAY,KAC5IhR,EAAQhiE,SAAW6hE,EAAQ7hE,WAAUwlH,GAAc,KAAOhpH,EAAaqqH,EAAW,GAAK,IAAMrqH,EAAauqH,EAAavjC,EAASwjC,GAAY,KAChJxB,GAAc,KAAOhpH,EAAaqqH,GAAY,IAAMrqH,EAAauqH,EAAavjC,EAASwjC,GAAY,GACtG,CACD,IAAK,IAAIp9H,EAAYi5B,EAAKjhC,OAAS,EAAGgI,GAAK,EAAGA,IAAK,CAC/C,IAAIo4E,EAAmBH,EACvBA,EAAUh/C,EAAKj5B,GACf,IAAIg9H,EAAmB7nI,KAAKqhI,IAAcrhG,EAAQijD,EAAQx/C,OAAS54B,GAAKi5B,EAAKjhC,OAAS,EAAI+kI,EAAY,GAClGE,EAAmB9nI,KAAKqhI,IAAcrhG,EAAQ8iD,EAAQr/C,OAAc,GAAL54B,EAAS+8H,EAAY,GACpFG,EAAqB/nI,KAAK+iI,GAAoBp/F,EAAQs/C,EAAQhiE,SAAWvL,GACzEsyH,EAAqBhoI,KAAK+iI,GAAoBp/F,EAAQm/C,EAAQ7hE,SAAWvL,GACzEu+E,EAAmByzC,EAAWzkD,EAAQ7nD,KAAOqe,EAAM,EACnDwuF,EAAmBP,EAAW5kD,EAAQ1nD,KAAOqe,EAAM,EACvDgtF,GAAc,KAAOhpH,EAAaoqH,GAAY,IAAMpqH,EAAasqH,EAAatjC,EAASxQ,GAAY,IAC/FhR,EAAQhiE,SAAW6hE,EAAQ7hE,WAAUwlH,GAAc,KAAOhpH,EAAaoqH,EAAW,GAAK,IAAMpqH,EAAasqH,EAAatjC,EAASxQ,GAAY,KAC5IhR,EAAQhiE,SAAW6hE,EAAQ7hE,WAAUwlH,GAAc,KAAOhpH,EAAaqqH,EAAW,GAAK,IAAMrqH,EAAauqH,EAAavjC,EAASwjC,GAAY,KAChJxB,GAAc,KAAOhpH,EAAaqqH,GAAY,IAAMrqH,EAAauqH,EAAavjC,EAASwjC,GAAY,GACtG,CACDxB,GAAc,IAEdgB,EAAW3iH,aAAa,IAAK2hH,E,CAGzB,EAAA1D,CAAoBp/F,GACxB,OAAO3jC,KAAKk/H,IAAgBl/H,KAAK0kI,GAAW,EAAa,G,QC9oDpDwD,GAmCL,WAAAvN,GACN36H,KAAKmoI,IAAkB,EACvBnoI,KAAKy2H,I,CAGN,WAAA12H,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAvCF7yB,KAAeooI,GAAmB1iH,EAAK6M,IAAI,CAACjN,MAAO,oGACnDtlB,KAAcqoI,GAAmB3iH,EAAK6M,IAAI,CAACjN,MAAO,oGAClDtlB,KAAasoI,GAAmB5iH,EAAK6M,IAAI,CAAEjN,MAAO,oGAClDtlB,KAAAuoI,GAA2B7iH,EAAK6M,IAAI,CAACjN,MAAO,gDAAgDwB,GAAYgJ,mFACzG9vB,KAASg0B,UAAmBtO,EAAK6M,IAAI,CAACjN,MAAO,wGAC7DtlB,KAAKooI,GACLpoI,KAAKqoI,GACLroI,KAAKsoI,GACLtoI,KAAKuoI,IAEWvoI,KAAagzB,EAAW,IACxBhzB,KAAUwoI,GAAqB,GAC/BxoI,KAAYyoI,GAAqB,GACjCzoI,KAAe0oI,GAAqB,GACpC1oI,KAAgB2oI,GAAqB,GACrC3oI,KAAe4oI,GAAqB,GACpC5oI,KAAc6oI,GAAqB,GAK5C7oI,KAAOw+F,GAAW,EAClBx+F,KAAUm0B,GAAY,EACtBn0B,KAAUo0B,GAAY,EAEtBp0B,KAAY8oI,IAAY,EACxB9oI,KAAcmoI,IAAY,EAC1BnoI,KAAc0gI,IAAY,EAC1B1gI,KAAY2gI,IAAY,EACxB3gI,KAAY+oI,IAAY,EACxB/oI,KAAmBgpI,IAAY,EACtBhpI,KAAyBipI,GAAa,GAgH/CjpI,KAAA+0B,EAAkB5wB,IACrBnE,KAAKo0B,IACTp0B,KAAKo0B,GAAa,EAClBp0B,KAAKg1B,IAAgB,EAGdh1B,KAAAi1B,EAAiB9wB,IACnBnE,KAAKo0B,IACVp0B,KAAKo0B,GAAa,EAClBp0B,KAAKg1B,IAAgB,EAGdh1B,KAAAk1B,EAAqB/wB,IAC5BA,EAAMgxB,iBACNn1B,KAAK6yB,EAAK6B,MAAM+2C,oBAChBzrE,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAKg0B,UAAUqB,wBAEhDr1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKkpI,KACLlpI,KAAKmpI,KACLnpI,KAAKg1B,GAAgB,EAGdh1B,KAAA61B,EAAmB1xB,KACtBnE,KAAKm0B,GAAcn0B,KAAKo0B,IAAYp0B,KAAK6yB,EAAK6B,MAAM+2C,oBACxD,MAAMr2C,EAA2Bp1B,KAAKg0B,UAAUqB,wBAEhDr1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKkpI,KACDlpI,KAAKm0B,GAAYn0B,KAAKmpI,KAC1BnpI,KAAKg1B,GAAgB,EAGdh1B,KAAAopI,GAAsBjlI,IACzBnE,KAAKm0B,GAAYn0B,KAAKqpI,KAC1BrpI,KAAKm0B,GAAa,EAClBn0B,KAAKg1B,GAAgB,EAGdh1B,KAAA21B,EAAqBxxB,IAC5BA,EAAMgxB,iBACNn1B,KAAK6yB,EAAK6B,MAAM+2C,oBAChBzrE,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAKg0B,UAAUqB,wBAEhDr1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKkpI,KACLlpI,KAAKmpI,IAAgB,EAGdnpI,KAAA+1B,GAAmB5xB,IAC1BA,EAAMgxB,iBACNn1B,KAAK6yB,EAAK6B,MAAM+2C,oBAChB,MAAMr2C,EAA2Bp1B,KAAKg0B,UAAUqB,wBAEhDr1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAKkpI,KACDlpI,KAAKm0B,GAAYn0B,KAAKmpI,IAAgB,EAGnCnpI,KAAAw2H,GAAsBryH,IAC7BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClBn0B,KAAKqpI,IAAmB,EAGjBrpI,KAAiBspI,GAAG,KAC3BzkF,OAAO2vE,sBAAsBx0H,KAAKspI,IAElC,IAAIC,GAA4B,EAChC,MAAMC,EAA+BxpI,KAAK6yB,EAAKw3C,YAAYo/D,sBAAkE,EAA1CzpI,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB1lE,OAChH7C,KAAKipI,GAA0BpmI,QAAU2mI,IAC5CD,GAAmB,GAEpB,IAAK,IAAI1+H,EAAY,EAAGA,EAAI2+H,EAAqB3+H,IAC5C7K,KAAKipI,GAA0Bp+H,IAAM7K,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB19D,KACzE7K,KAAKipI,GAA0Bp+H,GAAK7K,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB19D,GACrE0+H,GAAmB,GAGrBvpI,KAAKipI,GAA0BpmI,OAAS2mI,EAEpCD,GACHvpI,KAAKg1B,GACL,EA4BMh1B,KAAgBy2H,GAAG,KAC1B,MAAMiF,EAAkB17H,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAC7D8xB,EAAiBj5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SAOhE,GANAnnB,KAAK0kI,GAAczrF,EAAQ33C,EAAOyY,SAAa2hH,EAASp6H,EAAOuY,UAAY7Z,KAAK6yB,EAAK+zG,uBAErF5mI,KAAKk/H,GAAel/H,KAAKgzB,EAAgBhzB,KAAK0kI,GAC9C1kI,KAAKkpI,KACDlpI,KAAKm0B,GAAYn0B,KAAKmpI,MAErBnpI,KAAK6yB,EAAKwjE,MAAMqzC,YAAa,OAClC,GAAK1pI,KAAKmoI,IAAkBnoI,KAAK6yB,EAAK9F,KAAKutB,OAASt6C,KAAK6yB,EAAK9F,KAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,OAAU9E,KAAK+oI,IAAgB/oI,KAAK6yB,EAAK9F,KAAK3pB,KAAOpD,KAAK0gI,IAAkBhF,GAAU17H,KAAK2gI,IAAgB1nF,GAASj5C,KAAKgpI,IAAuBhpI,KAAK0kI,GAAa,OAEjR1kI,KAAKmoI,GAAiBnoI,KAAK6yB,EAAK9F,KAAKutB,MACrCt6C,KAAK+oI,GAAe/oI,KAAK6yB,EAAK9F,KAAK3pB,IACnCpD,KAAK0gI,GAAiBhF,EACtB17H,KAAK2gI,GAAe1nF,EACpB,MAAMr6B,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAMhG,GAJA1lF,KAAKooI,GAAgB9iH,MAAMq/E,QAAW+2B,GAAUziF,EAAS,OAAS,OAClEj5C,KAAKqoI,GAAe/iH,MAAMq/E,QAAU+2B,EAAS,OAAS,OACtD17H,KAAKsoI,GAAchjH,MAAMq/E,QAAU1rD,EAAQ,OAAS,OAE/CyiF,GAAWziF,GA2CX,GAAIA,EAAO,CACf,IAAI0wF,EAAmB,GACnBC,EAAoB,GACpBC,EAAwB/iH,GAAYoL,oBACpC43G,EAAyBhjH,GAAYmL,sBACzC,IAAK,IAAIgI,EAAY,EAAGA,EAAI34B,EAAOyY,SAAUkgB,IAAK,CAEjD,IAAI8vG,GAA0B,EAC1BC,GAAoB,EACpBC,EAAwBrrH,EAAW8wB,eAAepuC,EAAOyY,SAAWkgB,EAAI,GAAK,EAC7EiwG,EAAqBtrH,EAAWgJ,YAAYtmB,EAAOyY,SAAWkgB,EAAI,GAAK,EACvEuf,EAAoB56B,EAAWlC,WAAWpb,EAAOyY,SAAWkgB,EAAI,GAChEp6B,IAAuBqqI,EAAa,GAAKlqI,KAAK6yB,EAAK9F,KAAKE,mBAAvC,GACmC,GAApDrO,EAAWgJ,YAAYtmB,EAAOyY,SAAWkgB,EAAI,GAChDp6B,EAAS,GACmD,GAApD+e,EAAWgJ,YAAYtmB,EAAOyY,SAAWkgB,EAAI,KACrDp6B,EAAS,GACV,IAAIsqI,EAA4BnqI,KAAK6yB,EAAK9F,KAAKurB,SAASntC,KAAK2L,IAAI,EAAEozH,EAAa,IAAIllG,YAAYniC,OAOhG,OAAQhD,GACP,KAAK,EACJ8pI,EAAW,MACXI,GAAiB,EACjBD,EAAiBhjH,GAAYmL,sBAC7B+3G,GAAW,EACX,MACD,KAAK,EACJ,GAAoD,IAAhDhqI,KAAK6yB,EAAK9F,KAAKurB,SAAS4xF,EAAa,GAAG1lI,KAEvC2lI,EAAoB,EACnBD,GAAc,IAAMD,GAAiB,IACxCN,EAAW,IAAMO,EAEhBP,GADGM,EAAgB,GAAKE,EACZ,OAEJF,EAAgB,EAAIE,EAChB,OAEA,KAAOF,IAIpBN,EAAW,QAAUO,EAEpBP,GADGM,EAAc,GAAKE,EACV,OAEJF,EAAgB,EAAIE,EAChB,OAEA,OAASF,GAKvBN,EAAW,SAAWO,MAGjB,CAGN,IAAIE,EAEHA,EADGH,EAAgB,GAAKE,EACd,OACAF,EAAgB,EAAIE,EACpB,OAEA,KAAOF,EAGjBN,EADGQ,EAAoB,EACZ,IAAMD,EAAa,IAAMlqI,KAAK6yB,EAAK9F,KAAKurB,SAAS4xF,EAAa,GAAG1lI,KAAO4lI,EAGxE,IAAMF,EAAa,IAAMlqI,KAAK6yB,EAAK9F,KAAKurB,SAAS4xF,EAAa,GAAG1lI,IAG7E,CACD,MACD,KAAK,EACJ,MAAM6lI,EAA6BzrH,EAAWgJ,YAAYtmB,EAAOyY,SAAWkgB,EAAI,GAC1EqwG,EAA6BD,EAAqBrqI,KAAK6yB,EAAK9F,KAAKE,kBAEvE,GAAwD,IAApDjtB,KAAK6yB,EAAK9F,KAAKurB,SAAS+xF,GAAoB7lI,KAE3C2lI,EAAoB,EAElBG,EAAqB,GAAM,IAAML,GAAiB,IACtDN,EAAW,KAAOW,EAAqB,GAEtCX,GADGM,EAAgB,GAAKE,EACZ,OAEJF,EAAgB,EAAIE,EAChB,OAGA,KAAOF,IAIpBN,EAAW,SAAWW,EAAqB,GAE1CX,GADGM,EAAgB,GAAKE,EACZ,OAEJF,EAAgB,EAAIE,EAChB,OAGA,OAASF,GAKvBN,EAAW,UAAYW,EAAqB,QAK7C,GAAIH,EAAoB,EAAG,CAC1B,IAAIC,EAEHA,EADGH,EAAgB,GAAKE,EACd,OACAF,EAAgB,EAAIE,EACpB,OAEA,KAAOF,EAElBN,EAAW,KAAOW,EAAqB,GAAK,IAAMtqI,KAAK6yB,EAAK9F,KAAKurB,SAAS+xF,GAAoB7lI,KAAO4lI,CACrG,MAEAT,EAAW,KAAOW,EAAqB,GAAK,IAAMtqI,KAAK6yB,EAAK9F,KAAKurB,SAAS+xF,GAAoB7lI,KAIhG,MACD,KAAK,EACJmlI,EAAW,OAKb,GAAII,EAEH,GADAH,EAAYtoI,EAAOob,WAAW88B,GAAW78B,UACrC68B,GAAal4C,EAAOob,WAAW1X,WAAiB,KAAEF,MACrDglI,EAAiBhjH,GAAYmL,sBAC7B+3G,GAAW,OAEP,GAAIxwF,GAAal4C,EAAOob,WAAW1X,WAAW,aAAaF,OAAS00C,GAAal4C,EAAOob,WAAW1X,WAAW,eAAeF,MAAO,CACxI,IAAI4sF,EAAO,SACP64C,EAAY3rH,EAAW8mB,eAAepkC,EAAOyY,SAAWkgB,EAAI,GAC5DswG,EAAY,GAAMA,EAAY,EACjC74C,EAAO,OAASvmF,KAAKgS,KAAKotH,EAAY,GAAK,IAEnCA,EAAY,IACpB74C,EAAO,OAASvmF,KAAKgS,KAAKotH,EAAY,GAAK,KAG5CX,GAAal4C,CACE,CAGjB,MAAM84C,EAA6BxqI,KAAK0oI,GAAgBzuG,GAClDwwG,EAA8BzqI,KAAK2oI,GAAiB1uG,GACpDywG,EAAgC1qI,KAAK4oI,GAAgB3uG,GACrD0wG,EAA+B3qI,KAAK6oI,GAAe5uG,GASzD,GARAuwG,EAAWllH,MAAM6N,KAAO02G,EACxBW,EAAW/8G,YAAck8G,EACzBc,EAAYnlH,MAAM6N,KAAO22G,EACzBW,EAAYh9G,YAAcs8G,EAAiBH,EAAY,UACvDc,EAAcj9G,YAAc,IAAMnsB,EAAOyY,SAAWkgB,GACpD0wG,EAAarlH,MAAM6N,KAAO62G,EAAWljH,GAAY4K,iBAAmB5K,GAAYmL,sBAGiB,IAA7FjyB,KAAK6yB,EAAK9F,KAAKurB,SAASntC,KAAK2L,IAAI,EAAE8H,EAAWgJ,YAAYtmB,EAAOyY,SAAWkgB,EAAI,KAAKz1B,KAAY,CACpG,IAAIomI,EAAsB,IACtBv3G,EAAiBm3G,EAAWK,cAAeA,cAAex1G,wBAAwBhC,OAClFxwB,EAAiB2nI,EAAWM,wBAC5BC,EAAkB,EAWtB,IAVIloI,EAASwwB,EAAS,GACrBu3G,EAAc,OACdG,EAAU,GAEFloI,EAASwwB,EAAS,KAC1Bu3G,EAAc,MACdG,EAAU,GAEXP,EAAWllH,MAAMusG,UAAY,8BAAgC,GAAKkZ,EAAU5/H,KAAKe,MAAMf,KAAK2L,IAAI,GAAIuc,EAAS,IAAM,KAAO,mBAAqBu3G,EAAc,OAEvI,QAAfA,GAAyBJ,EAAWM,wBAA0Bz3G,EAAS,GAAG,CAChF,IAAI3d,EAAS,GAAKu0H,GAAiB,GAAK,EAAI,GAC5CO,EAAW/8G,YAAc+8G,EAAW/8G,YAAYokE,OAAO,EAAG24C,EAAW/8G,YAAY5qB,OAAS6S,GAAU80H,EAAW/8G,YAAYokE,OAAO24C,EAAW/8G,YAAY5qB,OAAS6S,EAAS,EAC3K,CACD,KACI,CACJ,IAAI2d,EAAiBm3G,EAAWK,cAAeA,cAAex1G,wBAAwBhC,OACtFm3G,EAAWllH,MAAMusG,UAAY,8BAAgC,GAAK1mH,KAAKe,MAAMf,KAAK2L,IAAI,GAAIuc,EAAS,IAAM,KAAO,uBAChH,CACD,CACD,MApPsB,CACtB,GAAIrzB,KAAKgpI,IAAuBhpI,KAAK0kI,GAAa,CACjD1kI,KAAKooI,GAAgB1gC,UAAY,GACjC,IAAK,IAAI78F,EAAY,EAAGA,EAAI7K,KAAK0kI,GAAa75H,IAAK,CAClD,MAAMmgI,EAA6BtlH,EAAK6M,IAAI,CAAC0B,MAAO,cAAe3O,MAAO,uIACpE2lH,EAA2BvlH,EAAK6M,IAAI,CAAC0B,MAAO,eAAgB3O,MAAO,qBAAsB0lH,GAC/FhrI,KAAKooI,GAAgBnkI,YAAYgnI,GACjCjrI,KAAKyoI,GAAa59H,GAAKmgI,EACvBhrI,KAAKwoI,GAAW39H,GAAKogI,CACrB,CACDjrI,KAAKyoI,GAAa5lI,OAAS7C,KAAK0kI,GAChC1kI,KAAKwoI,GAAW3lI,OAAS7C,KAAK0kI,GAC9B1kI,KAAKgpI,GAAsBhpI,KAAK0kI,EAChC,CAED,IAAK,IAAIzqG,EAAY,EAAGA,EAAIj6B,KAAK0kI,GAAazqG,IAAK,CAClD,MAAM45E,GAA0B55E,EAAI34B,EAAO+O,KAAKrQ,KAAK6yB,EAAK9F,KAAK3pB,KAAKmN,WAAajP,EAAOsY,iBAClFtJ,EAAsBhP,EAAO+O,KAAKwjG,GAAgBvjG,WAGxD,GAFAtQ,KAAKwoI,GAAWvuG,GAAG3U,MAAM4lH,WAAa56H,EAAawW,GAAY4J,cAAgB5J,GAAY6J,eACnE3wB,KAAK6yB,EAAK9F,KAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,MAAQ9E,KAAK6yB,EAAK9F,KAAKsrB,YAAc/2C,EAAO4O,OAAOlQ,KAAK6yB,EAAK9F,KAAKutB,OAAOlqC,OACjJ6pB,EAAI34B,EAAOsY,kBAGf,CACN5Z,KAAKwoI,GAAWvuG,GAAGxH,UAAUyI,OAAO,YACpCl7B,KAAKyoI,GAAaxuG,GAAG3U,MAAMq/E,QAAU,GAErC,MAAM9G,EAAwB79F,KAAKyoI,GAAaxuG,GAG/C4jE,EAAMv4E,MAAMusG,UADR53F,EAAI,IAAO,EACS,uBAGA,sBAIzB4jE,EAAMv4E,MAAM4tF,MAAQ5xG,EAAO+O,KAAKwjG,GAAgBvjG,WAAawW,GAAY8J,kBAAoB9J,GAAY+J,kBACzGgtE,EAAMpwE,YAAcy6G,GAAMiD,aAAat3B,EAAgB55E,EAAGj6B,KAAK6yB,EAAK6nG,qBAAqB16H,KAAK6yB,EAAK1L,SAAWnnB,KAAK6yB,EAAK9F,KAAKiV,OAE7H,MAnBAhiC,KAAKwoI,GAAWvuG,GAAGxH,UAAUC,IAAI,YACjC1yB,KAAKyoI,GAAaxuG,GAAG3U,MAAMq/E,QAAU,MAmBtC,CACD,CA2MD3kG,KAAKg1B,GAAgB,EAterB,IAAK,IAAInqB,EAAY,EAAGA,EAAIvJ,EAAOuY,UAAWhP,IAAK,CAClD,MAAMyvC,EAAwD,KAAvC,EAAOzvC,EAAIvJ,EAAOuY,UAAa,KACtD7Z,KAAKqoI,GAAepkI,YAAYyhB,EAAK6M,IAAI,CAAC0B,MAAO,cAAe3O,MAAO,oBAAoBg1B,MAAUA,QACrG,CAED,IAAK,IAAIzvC,EAAY,EAAGA,EAAIvJ,EAAOyY,SAAUlP,IAAK,CAGjD,MAAMugI,EAA+BrlH,EAAI2rE,KAAK,CAAEz9D,MAAO,kBAAmB,cAAe,OAAQd,KAAMrM,GAAYoL,oBAAqB5M,MAAO,qKACzI+lH,EAAgCtlH,EAAI2rE,KAAK,CAAEz9D,MAAO,kBAAmB,cAAe,OAAQd,KAAMrM,GAAYoL,oBAAqB5M,MAAO,mKAC1IgmH,EAA4BvlH,EAAI2rE,KAAK,CAAEz9D,MAAO,0BAA2Bd,KAAMrM,GAAYkL,gBAAiB1M,MAAO,mKACnHimH,EAA4BxlH,EAAImN,KAAK,CAAEE,MAAO,OAAQC,OAAQ,MAAOF,KAAMrM,GAAY4K,iBAAkBpM,MAAO,0DAEhHkmH,EAA6BzlH,EAAIwN,IAAI,CAAE4rE,QAAS,YAAa/rE,MAAO,OAAQ9N,MAAO,uCAAyC,CACjI8lH,IAEKK,EAA0B1lH,EAAIwN,IAAI,CAAE4rE,QAAS,YAAa/rE,MAAO,OAAQ9N,MAAO,yBAA2B,CAChHimH,EACAD,IAEKI,EAA8B3lH,EAAIwN,IAAI,CAAE4rE,QAAS,YAAa/rE,MAAO,OAAQ9N,MAAO,yBAA2B,CACpH+lH,IAGKM,EAA2BjmH,EAAK6M,IAAI,CAAEjN,MAAO,gGAAkG,CACpJmmH,EACAD,IAEKI,EAA2BlmH,EAAK6M,IAAI,CAAEjN,MAAO,wGAA0G,CAC5JomH,IAGKG,EAAgCnmH,EAAK6M,IAAI,CAAEjN,MAAO,wJAA0J,CACjNqmH,EACAC,IAGKE,EAAyBpmH,EAAK6M,IAAI,CAAE0B,MAAO,mBAAoB3O,MAAO,eAAiBwB,GAAYkL,gBAAkB,KAAO65G,GAClI7rI,KAAKsoI,GAAcrkI,YAAY6nI,GAC/B9rI,KAAK0oI,GAAgB39H,KAAKqgI,GAC1BprI,KAAK2oI,GAAiB59H,KAAKsgI,GAC3BrrI,KAAK4oI,GAAgB79H,KAAKugI,GAC1BtrI,KAAK6oI,GAAe99H,KAAKwgI,EACzB,CAEDvrI,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKk1B,GAClDrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKopI,IAC1CppI,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+0B,GAClD/0B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKi1B,GAEjDj1B,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAK21B,GACnD31B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+1B,IAClD/1B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKw2H,IACjDx2H,KAAKg0B,UAAU9vB,iBAAiB,cAAelE,KAAKw2H,IAEpDx2H,KAAK6yB,EAAKoD,SAASygG,MAAM12H,KAAKy2H,IAC9Bz2H,KAAKy2H,KAEL5xE,OAAO2vE,sBAAsBx0H,KAAKspI,G,CAG3B,EAAAJ,GACP,MAAM5uF,EAAgCt6C,KAAK6yB,EAAK9F,KAAKutB,OAASh5C,EAAO4O,OAAOlL,WAAmB,OAAEF,MAAQ9E,KAAK6yB,EAAK9F,KAAKsrB,YAAc/2C,EAAO4O,OAAOlQ,KAAK6yB,EAAK9F,KAAKutB,OAAOlqC,MACpK6yH,EAAqB93H,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAK0kI,GAAY,EAAG1kI,KAAK0kI,GAAe1kI,KAAKw+F,GAAUx+F,KAAKk/H,KAC5G,GAAI5kF,EAAMnvC,KAAK0hB,MAAMo2G,GAAc3hI,EAAOsY,mBAAqB5Z,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SACzGnnB,KAAK+rI,GAAe5gI,KAAK0hB,MAAMo2G,OACzB,CACN,IAAI2B,EAAmBz5H,KAAK0hB,MAAMo2G,GAAc,EAC5C4B,EAAsB15H,KAAK0hB,MAAMo2G,GAAc,EACnD,MAAQ3oF,EAAMsqF,EAAWtjI,EAAOsY,mBAC/BgrH,IAED,MAAQtqF,EAAM,EAAgBh5C,EAAOsY,mBACpCirH,IAED,IAAIC,EAAmBF,EACnBG,EAAsBF,EAAc,EACpCD,EAAWtjI,EAAOsY,kBAAoB,GAAKgrH,EAAWtjI,EAAOsY,kBAAoB,IACpFkrH,GAAY,IAETD,EAAcvjI,EAAOsY,kBAAoB,GAAKirH,EAAcvjI,EAAOsY,kBAAoB,IAC1FmrH,GAAe,IAEhB/kI,KAAK+rI,GAAe9I,EAAa8B,EAAcD,EAAW7B,EAAa2B,EAAWC,CAClF,C,CAGM,EAAAsE,GACP,MAAMhtF,EAAuBn8C,KAAK6yB,EAAK6nG,qBAAqB16H,KAAK6yB,EAAK1L,SAAW7lB,EAAOsY,iBAClF8iC,EAAuB18C,KAAK+rI,GAAe5vF,EAC7Cn8C,KAAK8oI,IAAgBpsF,IACzB18C,KAAK6yB,EAAKw3C,YAAYuxD,qBAAqB57H,KAAK8oI,IAChD9oI,KAAK8oI,GAAepsF,EACpB18C,KAAK6yB,EAAKw3C,YAAYsxD,kBAAkBj/E,G,CAGjC,EAAA2sF,GACPrpI,KAAK6yB,EAAKw3C,YAAYuxD,qBAAqB57H,KAAK8oI,IAChD9oI,KAAK8oI,IAAgB,C,CA+Fd,CAAA9zG,GAGP,GAFAh1B,KAAKuoI,GAASjjH,MAAMqR,YAAe32B,KAAKo0B,GAAcp0B,KAAKm0B,EAAc,SAAW,UAEhFn0B,KAAKo0B,IAAep0B,KAAKm0B,EAAY,CACxC,MAAMiB,EAA2Bp1B,KAAKg0B,UAAUqB,wBAC1C22G,EAAsBhsI,KAAKk/H,IAAgBl/H,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,MAE1G3/F,KAAKuoI,GAASjjH,MAAMkQ,KAAO,MAC3Bx1B,KAAKuoI,GAASjjH,MAAMq6E,IAAMqsC,GAAehsI,KAAK0kI,GAAc1kI,KAAK+rI,GAAe,GAAK,KACrF/rI,KAAKuoI,GAASjjH,MAAM+N,OAAS24G,EAAc,IAC3C,CAED,MAAM7vF,EAAuBn8C,KAAK6yB,EAAK6nG,qBAAqB16H,KAAK6yB,EAAK1L,SAAW7lB,EAAOsY,iBAElFymF,GAD4BrgG,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAAWnnB,KAAKqoI,GAAiBroI,KAAKooI,IACxE/nC,SAC3C,IAAK,IAAIx1F,EAAY,EAAGA,EAAIw1F,EAASx9F,OAAQgI,IAAK,CACjD,MAAMohI,EAAiB5rC,EAASx1F,IACiC,GAA7D7K,KAAKipI,GAA0BhtG,QAAQpxB,EAAIsxC,GAC9C8vF,EAAMx5G,UAAUyI,OAAO,WAEvB+wG,EAAMx5G,UAAUC,IAAI,UAErB,C,CAiRK,mBAAOy4G,CAAat3B,EAAwBq4B,EAAoBC,GACtE,IAAIz6C,EAEJ,GAAIpwF,EAAO+O,KAAKwjG,GAAgBvjG,WAC/BohF,EAAOpwF,EAAO+O,KAAKwjG,GAAgBrvG,SAC7B,CACN,MAAMsvG,EAAmBxyG,EAAOkP,oBAAoB07H,EAAa5qI,EAAOsY,kBACxE83E,EAAOpwF,EAAO+O,MAAMwjG,EAAiBvyG,EAAOsY,iBAAmBk6F,GAAYxyG,EAAOsY,kBAAkBpV,KACpF,GAAZsvG,EACHpiB,GAAQ,KACe,GAAboiB,IACVpiB,GAAQ,IAET,CAMD,OAJIw6C,EAAa,IAAM,IACtBx6C,GAAQvmF,KAAK0hB,MAAMq/G,EAAa,IAAMC,GAGhCz6C,C,ECpiBR,MAAMuK,OAACA,GAAM1pE,IAAEA,GAAG2pE,KAAEA,GAAIC,GAAEA,GAAEC,MAAEA,GAAKC,GAAEA,GAAEC,OAAEA,GAAMC,OAAEA,IAAU72E,E,MAE/C0mH,GA6BZ,WAAArsI,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EA5BF7yB,KAAAqsI,GAAiCjwC,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,SAAUynF,KAAM,MACtG18F,KAAAssI,GAAqChwC,GAAO,CAACh3E,MAAO,gBACpEi3E,GAAO,CAACj5F,MAAO,OAAc,gCAC7Bi5F,GAAO,CAACj5F,MAAO,aAAc,uCAEbtD,KAAa48F,GAAsBX,GAAO,CAAChoE,MAAO,iBAClDj0B,KAAA68F,GAAiCZ,GAAO,CAAChoE,MAAO,aAAc3O,MAAO,cAAe,QAErFtlB,KAASg0B,UAAmBzB,GAAI,CAAC0B,MAAO,qBAAsB3O,MAAO,iBACrF62E,GAAG,eACF5pE,GAAI,CAACjN,MAAO,oGACXiN,GAAI,CAACjN,MAAO,6CACZ,iBACA+2E,KACCH,GAAK,CAAC52E,MAAO,8BAA8BwB,GAAYiJ,kBAAmB,qCAG5E/vB,KAAKqsI,IAEL95G,GAAI,CAACjN,MAAO,oGACXiN,GAAI,CAAC0B,MAAO,kBAAmB3O,MAAO,gBAAiBtlB,KAAKssI,KAE7D/5G,GAAI,CAACjN,MAAO,+EACZtlB,KAAK68F,IAEN78F,KAAK48F,IAwBG58F,KAAM88F,GAAG,KACjB98F,KAAK6yB,EAAKsuD,MAAM,EAGVnhF,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKqsI,GAAarvC,oBAAoB,WAAYovC,GAAmBlvC,IACrEl9F,KAAKqsI,GAAarvC,oBAAoB,OAAQovC,GAAmBjvC,IACjEn9F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,GAAgB,EAG5Dp9F,KAAAo9F,GAAmBj5F,IACe,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SAC1Dr9F,KAAKi9F,IACL,EAqBMj9F,KAAYi9F,GAAG,KACtBp4C,OAAOthD,aAAa+5F,QAAQ,mBAAoBt9F,KAAKssI,GAAgBhpI,OACrE,MAAM+6F,EAAqB,IAAI7c,GAC/B6c,EAAM5c,OAAO,IAAI8G,GAAevoF,KAAK6yB,EAAMu5G,GAAmB5uC,GAAUx9F,KAAKqsI,IAA6C,aAA9BrsI,KAAKssI,GAAgBhpI,QACjHtD,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKi/D,OAAOuM,GAAO,EAAK,EA5D7Br+F,KAAKqsI,GAAa/oI,MAAQtD,KAAK6yB,EAAK9F,KAAKoJ,SAAW,GACpDn2B,KAAKqsI,GAAa9+H,IAAMjM,EAAOmQ,YAAc,GAC7CzR,KAAKqsI,GAAav1H,IAAMxV,EAAOoQ,YAAc,GAE7C,MAAM66H,EAA8B1nF,OAAOthD,aAAaC,QAAQ,oBAC5C,MAAhB+oI,IACHvsI,KAAKssI,GAAgBhpI,MAAQipI,GAG9BvsI,KAAKqsI,GAAa/vC,SACjBv3C,YAAW,IAAI/kD,KAAKqsI,GAAa3uC,UAElC19F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKqsI,GAAanoI,iBAAiB,WAAYkoI,GAAmBlvC,IAClEl9F,KAAKqsI,GAAanoI,iBAAiB,OAAQkoI,GAAmBjvC,IAC9Dn9F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,G,CAqBzC,SAAOF,CAAa/4F,GAC3B,MAAMw5F,EAAYx5F,EAAW,MAAIA,EAAMy5F,MAAQz5F,EAAMk5F,QACrD,OAAgB,IAAZM,GAAkBA,EAAW,KAAOA,EAAW,IAAMA,EAAW,MACnEx5F,EAAMgxB,kBACC,E,CAKD,SAAOgoE,CAAgBh5F,GAC9B,MAAMi4F,EAA4Cj4F,EAAMqc,OACxD47E,EAAM94F,MAAQ4zB,OAAOk1G,GAAmB5uC,GAAUpB,G,CAG3C,SAAOoB,CAAUpB,GACxB,OAAOjxF,KAAK0hB,MAAM1hB,KAAK2L,IAAI6Q,OAAOy0E,EAAM7uF,KAAMpC,KAAKoC,IAAIoa,OAAOy0E,EAAMtlF,KAAM6Q,OAAOy0E,EAAM94F,S,EC9EzF,MAAMkpI,GAAgB,gBAStB,SAASC,GAAarpI,GACrB,OAAO26C,KAAKC,MAAM56C,EAAI66C,UAAUuuF,IACjC,CAEM,SAAUE,GAAa5tH,GAC5B,OAAO0tH,GAAgBzuF,KAAKklD,UAAUnkF,EACvC,C,SAEgB6tH,KAEf,OAASxhI,KAAKY,WAAa,IAAM,KAAQ,GAAG+uH,SAAS,GACtD,CAEA,SAAS8R,GAAavwG,EAAkBC,GACvC,OAAOA,EAAEuwG,SAAS,GAAGppG,KAAOpH,EAAEwwG,SAAS,GAAGppG,IAC3C,CAEA,SAASqpG,GAAgBzwG,EAAqBC,GAC7C,OAAOA,EAAEmH,KAAOpH,EAAEoH,IACnB,C,MAEaspG,GAAb,WAAAhtI,GAGSC,KAAAgtI,GAAc,IAAI70F,E,CAEnB,2BAAO80F,GACb,MAAMC,EAAyB,GACzBC,EAAwC,GAC9C,IAAK,IAAItiI,EAAI,EAAGA,EAAItH,aAAaV,OAAQgI,IAAK,CAC7C,MAAMuiI,EAAkB7pI,aAAaH,IAAIyH,GACzC,GAlCmC,GAkClBuiI,EAlCRnxG,QAAQuwG,IAkCU,CAC1B,MAAM1tH,EAA4B2tH,GAAaW,GAC/C,IAAIrgH,EAAkCogH,EAAWruH,EAAQuuH,KAC7C7/G,MAART,IACFA,EAAO,CAAC8/G,SAAU,IACnBM,EAAWruH,EAAQuuH,KAAOtgH,EAC1BmgH,EAAMniI,KAAKgiB,IAEZA,EAAK8/G,SAAS9hI,KAAK+T,EACnB,CACD,CACD,IAAK,MAAMiO,KAAQmgH,EAClBngH,EAAK8/G,SAASnlE,KAAKolE,IAGpB,OADAI,EAAMxlE,KAAKklE,IACJM,C,CAGD,WAAAI,CAAYD,EAAa7oI,EAAc+oI,GAC7C,MAAMC,EAAkBhpI,EAClBiwF,EAAkBtpF,KAAKe,MAAMuhI,KAAKnjE,OAExCojE,aAAa1tI,KAAK2tI,IAClB3tI,KAAK2tI,GAA4B5oF,YAAW,KAC3C,IAEC/kD,KAAKgtI,GAAMpzF,iBAAiB2zF,EAC5B,CAAC,MAAOtqI,GAER,YADA4hD,OAAO3hD,MAAM,uLAEb,CAED,MAAMgqI,EAAyBH,GAAaE,uBAC5C,IAAIW,EAAoC,KACxC,IAAK,MAAM7gH,KAAQmgH,EACdngH,EAAK8/G,SAAS,GAAGQ,KAAOA,IAC3BO,EAAc7gH,GAGG,MAAf6gH,IACFA,EAAc,CAACf,SAAU,IAC1BK,EAAMjwF,QAAQ2wF,IAEf,IAAIf,EAA+Be,EAAYf,SAE3CgB,EAAkB,IACtB,GAAIhB,EAAShqI,OAAS,EAAG,CACxB,MAAMirI,EAAyBjB,EAAS,GAAGppG,KAE3CoqG,EAD+BhB,EAAS,GAAGkB,KAChB5iI,KAAKoC,IAvFN,KAuFiCknF,EAAUq5C,EACrE,CAED,MAAME,EAA+B,CAAEX,IAAKA,EAAK7oI,KAAMgpI,EAAS/pG,KAAMgxD,EAASs5C,KAAMF,GAC/EI,EAAiBvB,GAAasB,GACpCnB,EAAS5vF,QAAQ+wF,GACjBzqI,aAAa+5F,QAAQ2wC,EAAQV,GAG7B,IAAIW,EA/FoB,IAgGxB,MAAMC,EAAmBhjI,KAAKiB,IAAI,EAAG,IACrC,IAAK,IAAIvB,EAAY,EAAGA,EAAIgiI,EAAShqI,OAAQgI,IAAK,CAIjD,GAH4BgiI,EAAShiI,GAAGkjI,MACbljI,GAAKgiI,EAAShqI,OAAS,EAAK,EAAMgqI,EAAShiI,EAAI,GAAGkjI,MAE/CG,EAAS,CACtC,IAAIE,EAAyBvjI,EAC7B,GAAIA,EAAIgiI,EAAShqI,OAAS,EAAG,CAC5B,MAAMwrI,EAAsBxB,EAAShiI,GAAG44B,KAClC6qG,EAAoBzB,EAAShiI,EAAI,GAAG44B,KAOrC4qG,EANqBxB,EAAShiI,EAAI,GAAG44B,KAMV,IAAO6qG,EAAYD,KAClDD,EAAiBvjI,EAAI,EAEtB,CACDtH,aAAagrI,WAAW7B,GAAaG,EAASuB,KAC9C,KACA,CACDF,GAAWC,CACX,CAID,KAAOjB,EAAMrqI,OA9HS,GA8HkB,CACvC,IAAI2rI,EAA2C,KAC3CC,EAA0B9mH,OAAOqtD,kBACrC,IAAK,IAAInqE,EAAYM,KAAKe,MAAMwiI,GAAuB7jI,EAAIqiI,EAAMrqI,OAAQgI,IAAK,CAC7E,MAAMkiB,EAAsBmgH,EAAMriI,GAI5B8jI,EAAoB,IAHCl6C,EAAU1nE,EAAK8/G,SAAS,GAAGppG,MAGV,MAA4B,GAGlEgjD,GADuB15D,EAAK8/G,SAAS,GAAGkB,KAAO,KACfY,EAClCF,EAAkBhoD,IACrBgoD,EAAkBhoD,EAClB+nD,EAAqBzhH,EAEtB,CACD,IAAK,MAAMjO,KAAW0vH,EAAoB3B,SACzCtpI,aAAagrI,WAAW7B,GAAa5tH,IAEtCouH,EAAMhxG,OAAOgxG,EAAMjxG,QAAQuyG,GAAsB,EACjD,IACC,I,EC/JJ,MAAMvyC,OAACA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,GAAEgK,EAAEA,GAAC7J,OAAEA,GAAMC,OAAEA,GAAMqyC,OAAEA,IAAUlpH,E,MAEzCmpH,GAcZ,WAAA9uI,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAbH7yB,KAAc8uI,GAAmBv8G,KAChCvyB,KAAa48F,GAAsBX,GAAO,CAAChoE,MAAO,iBAEnDj0B,KAASg0B,UAAmBzB,GAAI,CAAC0B,MAAO,SAAU3O,MAAO,iBACzE62E,GAAG,iBACF5pE,GAAI,CAACjN,MAAO,wCACZ6gF,GAAE,wLACFnmG,KAAK8uI,GACL3oC,GAAE,gOAEHnmG,KAAK48F,IAgCG58F,KAAM88F,GAAG,KACjB98F,KAAK6yB,EAAKsuD,MAAM,EAGTnhF,KAAO+8F,QAAG,KACjB/8F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,GAAO,EAjC5D98F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAElD,MAAMowC,EAAyBH,GAAaE,uBAExB,GAAhBC,EAAMrqI,QACT7C,KAAK8uI,GAAe7qI,YAAYkiG,GAAE,mEAGnC,IAAK,MAAMp5E,KAAQmgH,EAAO,CACxB,MAAM6B,EAAiCzyC,GAAO,CAACh3E,MAAO,iBAEvD,IAAK,MAAMxG,KAAWiO,EAAK8/G,SAC1BkC,EAAY9qI,YAAYs4F,GAAO,CAAEj5F,MAAOwb,EAAQ2kB,MAAQ3kB,EAAQta,KAAO,KAAO,IAAIipI,KAAK3uH,EAAQ2kB,MAAMurG,mBAGrG,MAAMC,EAA4BL,GAAO,CAACtpH,MAAO,6DAClD2pH,EAAOlrI,IAAM,gBAAkB8gD,OAAOthD,aAAaC,QAAQkpI,GAAa3/G,EAAK8/G,SAAS,KACrF,MAAM74G,EAA4BzB,GAAI,CAACjN,MAAO,kBAAmBiN,GAAI,CAAC0B,MAAO,kBAAmB3O,MAAO,+BAAgCypH,GAAcE,GACtJjvI,KAAK8uI,GAAe7qI,YAAY+vB,GAEhC+6G,EAAY7qI,iBAAiB,UAAU,KACtC,MAAM4a,EAA4BiO,EAAK8/G,SAASkC,EAAY7f,eAC5D+f,EAAOC,cAAepqF,SAASnnC,QAAQ,gBAAkBknC,OAAOthD,aAAaC,QAAQkpI,GAAa5tH,KAClGmwH,EAAOC,cAAepsI,cAAc,IAAIxC,MAAM,cAAc,GAE7D,C,ECtCH,MAAM27F,OAACA,GAAM4B,MAAEA,GAAKtrE,IAAEA,GAAG4zE,EAAEA,GAAC9pE,EAAEA,GAAC8/D,GAAEA,GAAEC,MAAEA,GAAKE,OAAEA,GAAMC,OAAEA,IAAU72E,E,MAEjDypH,GAwEZ,WAAApvI,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAvEH7yB,KAAAovI,GAAmC9yC,GAAO,CAACh3E,MAAO,gBAClEi3E,GAAO,CAACj5F,MAAO,uBAAwB,iDACvCi5F,GAAO,CAACj5F,MAAO,4BAA6B,uBAAyBsa,EAAawB,SAAW,mBAE7Epf,KAAAqvI,GAAqC/yC,GAAO,CAACh3E,MAAO,gBACpEi3E,GAAO,CAACj5F,MAAO,eAAgB,gBAC/Bi5F,GAAO,CAACj5F,MAAO,aAAc,uBAC7Bi5F,GAAO,CAACj5F,MAAO,YAAa,0BAC5Bi5F,GAAO,CAACj5F,MAAO,YAAa,0BAC5Bi5F,GAAO,CAACj5F,MAAO,qBAAsB,sCACrCi5F,GAAO,CAACj5F,MAAO,qBAAsB,uCAErBtD,KAAsBsvI,GAAmB/8G,GAAI,CAACjN,MAAO,oEACrDtlB,KAAAuvI,GAAgCnzC,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,aACrFjV,KAAAwvI,GAAsCpzC,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,aAC3FjV,KAAAyvI,GAA+CrzC,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,aACpGjV,KAAA0vI,GAAoDtzC,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,aACzGjV,KAAA2vI,GAAsCvzC,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,aAC3FjV,KAAA4vI,GAA6CxzC,GAAM,CAAC92E,MAAO,gCAAiCrQ,KAAM,aAElGjV,KAAA68F,GAAiCZ,GAAO,CAAChoE,MAAO,aAAc3O,MAAO,cAAe,QACpFtlB,KAAa48F,GAAsBX,GAAO,CAAChoE,MAAO,iBACnDj0B,KAAAg0B,UAA4BzB,GAAI,CAAC0B,MAAO,0CAA2C3O,MAAO,qDACzG62E,GAAG,wBACH5pE,GAAI,CAACjN,MAAO,wEACX6gF,GAAE,oGAAsGvoF,EAAauB,WAAa,OAClI0+E,GAAM,CAACv4E,MAAO,oGACb,6CACAtlB,KAAKwvI,IAEN3xC,GAAM,CAACv4E,MAAO,oGACb,4CACAtlB,KAAKyvI,IAEN5xC,GAAM,CAACv4E,MAAO,oGACb,wCACAtlB,KAAK0vI,IAENvpC,GAAE,4DACFtI,GAAM,CAACv4E,MAAO,oGACb,mBACAiN,GAAI,CAAC0B,MAAO,kBAAmB3O,MAAO,iCAAkCtlB,KAAKqvI,KAE9ErvI,KAAKsvI,GACLnpC,GAAE,iKACFtI,GAAM,CAACv4E,MAAO,oGACbiN,GAAI,CAAC0B,MAAO,kBAAmB3O,MAAO,gBAAiBtlB,KAAKovI,KAE7DjpC,GAAE,8GACFtI,GAAM,CAACv4E,MAAO,oGACb,kCACAtlB,KAAK4vI,IAEN/xC,GAAM,CAACv4E,MAAO,oGACb,gDACAtlB,KAAK2vI,IAENxpC,GAAE,iBAAkB9pE,GAAE,CAACu9E,KAAM,2BAA4Bp5F,OAAQ,UAAW,sBAAuB,4GAA6G6b,GAAE,CAACu9E,KAAM,uBAAwBp5F,OAAQ,UAAW,WAAY,OAAQ6b,GAAE,CAACu9E,KAAM,uBAAwBp5F,OAAQ,UAAW,UAAW,8DACvVq9E,GAAM,CAACv4E,MAAO,oGACb,2BACAtlB,KAAKuvI,IAENppC,GAAE,8ZACF5zE,GAAI,CAACjN,MAAO,yEAAyEwB,GAAY6I,2EAElGkuE,GAAM,CAACv4E,MAAO,+EACbtlB,KAAK68F,IAEN78F,KAAK48F,IAuBE58F,KAAM88F,GAAG,KAChB98F,KAAK6yB,EAAKsuD,MAAM,EAGVnhF,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKmuH,IACnDnuH,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,GAAgB,EAG5Dp9F,KAAAo9F,GAAmBj5F,IACc,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SACzDr9F,KAAKmuH,IACL,EAGMnuH,KAAQmuH,GAAG,KAClBnuH,KAAK6yB,EAAKwjE,MAAMw5C,yBAAwD,4BAA5B7vI,KAAKovI,GAAc9rI,MAC/DtD,KAAK6yB,EAAKwjE,MAAM+lC,eAAiBp8H,KAAKqvI,GAAgB/rI,MACtDtD,KAAK6yB,EAAKwjE,MAAMolC,WAAaz7H,KAAKuvI,GAAYjxC,QAC9Ct+F,KAAK6yB,EAAKwjE,MAAMy5C,iBAAmB9vI,KAAKwvI,GAAkBlxC,QAC1Dt+F,KAAK6yB,EAAKwjE,MAAM05C,0BAA4B/vI,KAAKyvI,GAA2BnxC,QAC5Et+F,KAAK6yB,EAAKwjE,MAAM25C,+BAAiChwI,KAAK0vI,GAAgCpxC,QACtFt+F,KAAK6yB,EAAKwjE,MAAM45C,iBAAmBjwI,KAAK2vI,GAAkBrxC,QAC1Dt+F,KAAK6yB,EAAKwjE,MAAM65C,wBAA0BlwI,KAAK4vI,GAAyBtxC,QACxEt+F,KAAK6yB,EAAKwjE,MAAMgjB,OAChBr5G,KAAK88F,IAAQ,EAGN98F,KAA4BmwI,GAAG,KACtC,KAAOnwI,KAAKsvI,GAAuBhpH,YAClCtmB,KAAKsvI,GAAuB38G,YAAY3yB,KAAKsvI,GAAuBhpH,YAErE,MAAM8pH,EAAuB,CAAC,GAAI,GAAI,GAAI,IACpC91F,EAAgCh5C,EAAO4O,OAAOlQ,KAAK6yB,EAAK9F,KAAKutB,OAAOlqC,MAC1E,IAAK,IAAIigI,EAAmB,EAAGA,EAAW,EAAGA,IAAY,CACxD,MAAMvgB,EAAsBv9F,GAAI,CAACjN,MAAO,mBACxCtlB,KAAKsvI,GAAuBrrI,YAAY6rH,GACxC,MAAMwgB,EAAyB/9G,GAAI,CAACjN,MAAO,UAAwB,GAAX+qH,EAAiB,sCACzEvgB,EAAI7rH,YAAYqsI,GAChB,IAAK,IAAIC,EAAmB,EAAGA,EAAWH,EAAWC,GAAWE,IAAY,CAC3E,MAAMntI,EAAsBmvB,GAAI,CAACjN,MAAO,mJACxCwqG,EAAI7rH,YAAYb,GAChB,MAAMugC,EAAuBu4F,GAAeC,cAAcn8H,KAAK6yB,EAAM09G,EAAU,EAAIF,EAAUrwI,KAAKqvI,GAAgB/rI,OAClH,GAAa,MAATqgC,EAAe,CAClB,MAAM6sG,EAAqB7sG,EAAQ,GAC/B2W,EAAMk2F,GACS,GAAdA,EACHptI,EAAIkiB,MAAM4lH,WAAapkH,GAAY0J,MACX,GAAdggH,GAAmBxwI,KAAK6yB,EAAKwjE,MAAM8sB,UAC7C//G,EAAIkiB,MAAM4lH,WAAapkH,GAAY2J,UAEnCrtB,EAAIkiB,MAAM4lH,WAAapkH,GAAYyJ,gBAGpCntB,EAAIkiB,MAAMmrH,OAAS,aAAe3pH,GAAYyJ,gBAG/C,MAAMsjF,GAA0B28B,EAAalvI,EAAO+O,KAAKrQ,KAAK6yB,EAAK9F,KAAK3pB,KAAKmN,WAAajP,EAAOsY,iBACjGxW,EAAIqqB,YAAcy6G,GAAMiD,aAAat3B,EAAgB28B,EAAYrlI,KAAK0hB,MAAM8W,EAAQ,IACpF,CACD,CACD,GAjFD3jC,KAAKovI,GAAc9rI,MAAQtD,KAAK6yB,EAAKwjE,MAAMw5C,yBAA2B,2BAA6B,sBACnG7vI,KAAKqvI,GAAgB/rI,MAAQtD,KAAK6yB,EAAKwjE,MAAM+lC,eAC7Cp8H,KAAKuvI,GAAYjxC,QAAUt+F,KAAK6yB,EAAKwjE,MAAMolC,WAC3Cz7H,KAAKwvI,GAAkBlxC,QAAUt+F,KAAK6yB,EAAKwjE,MAAMy5C,iBACjD9vI,KAAKyvI,GAA2BnxC,QAAUt+F,KAAK6yB,EAAKwjE,MAAM05C,0BAC1D/vI,KAAK0vI,GAAgCpxC,QAAUt+F,KAAK6yB,EAAKwjE,MAAM25C,+BAC/DhwI,KAAK2vI,GAAkBrxC,QAAUt+F,KAAK6yB,EAAKwjE,MAAM45C,iBACjDjwI,KAAK4vI,GAAyBtxC,QAAUt+F,KAAK6yB,EAAKwjE,MAAM65C,wBAExDnrF,YAAW,IAAI/kD,KAAKwvI,GAAkB9xC,UAEtC19F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKmuH,IAChDnuH,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAEhDp9F,KAAKmwI,KACLnwI,KAAKqvI,GAAgBnrI,iBAAiB,SAAUlE,KAAKmwI,G,QC5F1CO,GA2BZ,WAAA3wI,CAAoB8yB,EAA4B89G,GAA5B3wI,KAAI6yB,EAAJA,EAA4B7yB,KAAc2wI,GAAdA,EA1B/B3wI,KAAY+yB,EAAW,IACvB/yB,KAAagzB,EAAW,GACvBhzB,KAAA++F,GAAwBh5E,EAAI6N,KAAK,CAACT,KAAMrM,GAAYuJ,mBAAoB,iBAAkB,SAC1FrwB,KAAQqiH,GAAkBt8F,EAAIwN,IAAI,CAAC,iBAAkB,SACrDvzB,KAAOsiH,GAAkBv8F,EAAIwN,IAAI,CAAC,iBAAkB,SACpDvzB,KAAMuiH,GAAmBx8F,EAAI6N,KAAK,CAACT,KAAM,OAAQO,OAAQ,eAAgB,eAAgB,EAAG,iBAAkB,SAC9G1zB,KAAA4wI,GAAyB7qH,EAAI6N,KAAK,CAACT,KAAM,eAAgB,iBAAkB,SAC3EnzB,KAAA+zB,EAAsBhO,EAAIwN,IAAI,CAACjO,MAAO,qBAAqBwB,GAAY6I,2DAA4DyD,MAAO,OAAQC,OAAQ,OAAQ8rE,QAAS,OAAOn/F,KAAK+yB,EAAa,IAAI/yB,KAAKgzB,EAAeosE,oBAAqB,QAClQp/F,KAAK++F,GACL/+F,KAAKqiH,GACLriH,KAAKsiH,GACLtiH,KAAKuiH,GACLviH,KAAK4wI,IAGU5wI,KAAAg0B,UAAyBtO,EAAK6M,IAAI,CAAC0B,MAAO,WAAY3O,MAAO,iBAAkBtlB,KAAK+zB,GAE5F/zB,KAAOk0B,EAAW,EAClBl0B,KAAOw+F,GAAW,EAClBx+F,KAAS0iH,GAAW,EACpB1iH,KAAQ2iH,GAAW,EACnB3iH,KAAUm0B,GAAY,EACtBn0B,KAAO4iH,GAA0B,KACjC5iH,KAAa6iH,GAAW,GACxB7iH,KAAe8iH,IAAY,EA4B3B9iH,KAAAk1B,EAAqB/wB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GAExCx+F,KAAK0iH,GAAY1iH,KAAKojG,GAASpjG,KAAKk0B,GACpCl0B,KAAK2iH,GAAW3iH,KAAK+iH,GAAQ/iH,KAAKw+F,IAClCx+F,KAAK81B,IAAkB,EAGhB91B,KAAA21B,EAAqBxxB,IAC5BA,EAAMgxB,iBACNn1B,KAAKm0B,GAAa,EAClB,MAAMiB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GAExCx+F,KAAK0iH,GAAY1iH,KAAKojG,GAASpjG,KAAKk0B,GACpCl0B,KAAK2iH,GAAW3iH,KAAK+iH,GAAQ/iH,KAAKw+F,IAClCx+F,KAAK81B,IAAkB,EAGhB91B,KAAA61B,EAAmB1xB,IAC1B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,MAAMzqE,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,IAAY/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MAC7Hx1B,KAAKw+F,KAAYr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KAC1Hl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EAGhB91B,KAAA+1B,GAAmB5xB,IAC1B,GAAmC,MAA/BnE,KAAKg0B,UAAU6rE,aAAsB,OACzC,IAAK7/F,KAAKm0B,EAAY,OACtBhwB,EAAMgxB,iBACN,MAAMC,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQx1B,KAAK+yB,GAAgBqC,EAAaoqE,MAAQpqE,EAAaI,MACvHx1B,KAAKw+F,IAAWr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,KAAO3/F,KAAKgzB,GAAiBoC,EAAawqE,OAASxqE,EAAauqE,KACpHl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK81B,IAAkB,EAgChB91B,KAAAg2B,GAAuB7xB,IAC1BnE,KAAKm0B,IACRn0B,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,IACtB5iH,KAAK4iH,GAAU,MAEhB5iH,KAAKm0B,GAAa,CAAK,EA7GvB,IAAK,IAAItpB,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,GAAKvJ,EAAOoX,+BACpE1Y,KAAKqiH,GAASp+G,YAAY8hB,EAAImN,KAAK,CAACC,KAAMrM,GAAY0J,MAAO5Z,GAAI/L,EAAE,GAAK7K,KAAK+yB,GAAgBzxB,EAAOmX,sBAAwB,GAAK,EAAG5B,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,KAEnK,IAAK,IAAInoB,EAAY,EAAGA,GAAKvJ,EAAOmX,sBAAuB5N,GAAKvJ,EAAOoX,+BACrE1Y,KAAKsiH,GAAQr+G,YAAY8hB,EAAImN,KAAK,CAACC,KAAMrM,GAAY2J,UAAW7Z,GAAI/L,EAAE,GAAK7K,KAAK+yB,GAAgBzxB,EAAOmX,sBAAwB,GAAK,EAAG5B,EAAG,EAAGuc,MAAO,EAAGC,OAAQrzB,KAAKgzB,KAGtKhzB,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAKk1B,GAClDrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKg2B,IAE1Ch2B,KAAKg0B,UAAU9vB,iBAAiB,aAAclE,KAAK21B,GACnD31B,KAAKg0B,UAAU9vB,iBAAiB,YAAalE,KAAK+1B,IAClD/1B,KAAKg0B,UAAU9vB,iBAAiB,WAAYlE,KAAKg2B,IACjDh2B,KAAKg0B,UAAU9vB,iBAAiB,cAAelE,KAAKg2B,G,CAG7C,EAAAotE,CAASxsF,GAChB,OAAQtV,EAAOmX,sBAAwB,GAAK7B,EAAI5W,KAAK+yB,EAAe,C,CAG7D,EAAAgwF,CAAQlsG,GACf,OAAOvV,EAAOsX,aAAe,GAAK/B,EAAI,IAAM7W,KAAKgzB,EAAgB,G,CAqD1D,EAAA8C,GACP,GAAI91B,KAAKm0B,EAAY,CACpB,MAAMmV,EAAetpC,KAAKojG,GAASpjG,KAAKk0B,GAClC6rE,EAAc//F,KAAK+iH,GAAQ/iH,KAAKw+F,IAEhC5/E,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1F91C,EAAqD,MAAvB5vC,KAAK2wI,GAA0B/xH,EAAWgxB,aAAehxB,EAAW6wB,qBAAqBzvC,KAAK2wI,IAElI,GAAIrnG,GAAQtpC,KAAK0iH,GAAW,CAC3B,MAAMljC,GAAiBugB,EAAM//F,KAAK2iH,KAAar5E,EAAOtpC,KAAK0iH,IACrDhtG,EAAiB1V,KAAK2iH,GAAW3iH,KAAK0iH,GAAYljC,EAClDykB,EAAoB94F,KAAKgS,KAAKhS,KAAKoC,IAAIvN,KAAK0iH,GAAWp5E,IACvD46D,EAAoB/4F,KAAK0hB,MAAM1hB,KAAK2L,IAAI9W,KAAK0iH,GAAWp5E,IAC9D,IAAK,IAAIz+B,EAAYo5F,EAAWp5F,GAAKq5F,EAAWr5F,IAC3CA,EAAI,GAAKA,GAAKvJ,EAAOmX,wBACzBm3B,EAAaruB,SAAS1W,GAAKM,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOsX,YAAazN,KAAKe,MAAMrB,EAAI20E,EAAQ9pE,KAE5F,CAEDk6B,EAAaruB,SAASpW,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOmX,sBAAwB,EAAGtN,KAAKe,MAAMo9B,MAAWn+B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOsX,YAAazN,KAAKe,MAAM6zF,KAEvJ//F,KAAK0iH,GAAYp5E,EACjBtpC,KAAK2iH,GAAW5iB,EAEhB//F,KAAK4iH,GAAU,IAAIh3B,GAAe5rF,KAAK6yB,EAAMjU,EAAYgxB,GACzD5vC,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAK4iH,GACpC,C,CAWK,MAAAhsF,GACN,MAAMhY,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1F91C,EAAqD,MAAvB5vC,KAAK2wI,GAA0B/xH,EAAWgxB,aAAehxB,EAAW6wB,qBAAqBzvC,KAAK2wI,IAC5H3tB,EAAwBh7E,IACrB,EAAKA,EAAQ1mC,EAAOsX,cAAiB5Y,KAAKgzB,EAAgB,GAAK,EAGxE,IAAIigG,EAAoB,EACpBr/F,EAAe,OAASnW,EAAazd,KAAKgzB,GAAiB,IAC/D,IAAK,IAAInoB,EAAY,EAAGA,EAAIvJ,EAAOmX,sBAAuB5N,IAAK,CAC9D,IAAI03C,EAAoB3S,EAAaruB,SAAS1W,GAE7C+oB,GADgB,GAAbq/F,GAA+B,GAAb1wE,EACb,KAEA,KAET3uB,GAAQnW,GAAc5S,EAAI,GAAK7K,KAAK+yB,GAAgBzxB,EAAOmX,sBAAwB,IAAM,IAAMgF,EAAaulG,EAAqBzgE,IAAc,IAC/I0wE,EAAY1wE,CACZ,CAED,MAAM2gE,EAAqBF,EAAqBiQ,GAC5CA,EAAY,IACfr/F,GAAQ,MAAQ5zB,KAAK+yB,EAAe,GAAK,IAAMtV,EAAaylG,GAAc,KAGvEljH,KAAK6iH,IAAiBjvF,IACzB5zB,KAAK6iH,GAAgBjvF,EACrB5zB,KAAKuiH,GAAOz9F,aAAa,IAAK8O,GAC9B5zB,KAAK++F,GAAMj6E,aAAa,IAAK8O,EAAO,KAAO5zB,KAAK+yB,EAAe,IAAMtV,EAAaylG,GAAc,MAAQljH,KAAK+yB,EAAe,IAAMtV,EAAazd,KAAKgzB,GAAiB,QAAUvV,EAAazd,KAAKgzB,GAAiB,OAElNhzB,KAAK4wI,GAAO9rH,aAAa,IAAK,KAAO9kB,KAAK+yB,EAAe,IAAMtV,EAAaylG,GAAc,OAASljH,KAAK+yB,EAAe,GAAK,IAAMtV,EAAaylG,EAAa,GAAK,OAASljH,KAAK+yB,EAAe,GAAK,IAAMtV,EAAaylG,EAAa,GAAK,MACxOljH,KAAK4wI,GAAOtrH,MAAMq/E,QAAWsuB,EAAY,EAAK,GAAK,QAEhDjzH,KAAK8iH,IAAmB9iH,KAAK6yB,EAAKwjE,MAAM8sB,YAC3CnjH,KAAK8iH,GAAkB9iH,KAAK6yB,EAAKwjE,MAAM8sB,UACvCnjH,KAAKsiH,GAAQh9F,MAAMq/E,QAAU3kG,KAAK6yB,EAAKwjE,MAAM8sB,UAAY,GAAK,O,EC/KjE,MAAMlnB,OAAEA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,GAAEC,MAAEA,GAAK+J,EAAEA,IAAKzgF,EACrC,IAAImrH,IAAW,E,MACFC,GAqJZ,WAAA/wI,CAAoB8yB,EAA4B0kE,EAAiCw5C,EAAmCC,GAAhGhxI,KAAI6yB,EAAJA,EAA4B7yB,KAAQu3F,GAARA,EAAiCv3F,KAAS+wI,GAATA,EAAmC/wI,KAASgxI,GAATA,EApJnGhxI,KAAAglH,GAA+B5oB,GAAM,CAAEnnF,KAAM,OAAQgwG,OAAQ,kBAAmBvzB,KAAM,mCACtF1xF,KAAAixI,GAAgC70C,GAAM,CAAEnnF,KAAM,OAAQgwG,OAAQ,kBAAmBvzB,KAAM,oCACvF1xF,KAAAkxI,GAAgC90C,GAAM,CAAEnnF,KAAM,OAAQ3R,MAAOC,aAAaC,QAAQ,iBAAmB,qkIA8GrGxD,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,cAAgB,QACtFtlB,KAAYs0H,GAAsBr4B,GAAO,CAAE32E,MAAO,iDAAmD,qBAEtGtlB,KAASg0B,UAAmBzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACrF62E,GAAG,UACHgK,GAAE,CAAE7gF,MAAO,sCACV,mDAED6gF,GAAE,CAAE7gF,MAAO,sCACV,6GAEDiN,KACA4zE,GAAE,CAAE7gF,MAAO,gCACV,2BACAtlB,KAAKglH,IAEN7e,GAAE,CAAE7gF,MAAO,sCACV,4BACAtlB,KAAKixI,IAEN1+G,KACA4zE,GAAE,CAAE7gF,MAAO,gCACV,+FAEDtlB,KAAKkxI,GACL3+G,GAAI,CAAEjN,MAAO,+EACZtlB,KAAKs0H,IAEN/hG,GAAI,CAAEjN,MAAO,+EACZtlB,KAAK68F,IAEN78F,KAAK48F,IAaE58F,KAAM88F,GAAG,KAChB98F,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKsuD,OACP0vD,IAEF9rF,YAAW,KAAQF,OAAOC,SAASE,QAAQ,GAAK,GAChD,EAGKhlD,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAK88F,IACnD98F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IAErD98F,KAAKs0H,GAAat3B,oBAAoB,QAASh9F,KAAKmxI,GAAO,EAEpDnxI,KAAMmxI,GAAG,KAChBtsF,OAAOthD,aAAagrI,WAAW,cAC/B1pF,OAAOthD,aAAagrI,WAAW,eAC/B1pF,OAAOthD,aAAagrI,WAAW,gBAC/B1pF,OAAOthD,aAAagrI,WAAW,gBAC/BvuI,KAAKu3F,GAASxjE,EAAKzO,MAAM8rH,gBAAkB,GAC3CvtI,SAASyuB,KAAKhN,MAAM8rH,gBAAkB,GACtCpxI,KAAK+wI,GAAUzrH,MAAM8rH,gBAAkB,GACvCpxI,KAAKgxI,GAAU1rH,MAAM8rH,gBAAkB,GACvC,MAAMC,EAAkCxtI,SAASytI,eAAe,eAC7C,MAAfD,IACHA,EAAY/rH,MAAM8rH,gBAAkB,IAErCP,IAAW,EACX7wI,KAAK88F,IAAQ,EAEN98F,KAAkBuxI,GAAG,KAC5BhuI,aAAa+5F,QAAQ,eAAgBt9F,KAAKkxI,GAAY5tI,OACtDuhD,OAAOthD,aAAa+5F,QAAQ,aAAc,UAC1Ct9F,KAAK6yB,EAAK2+G,WAAa,SACvBX,IAAW,CAAI,EAER7wI,KAAiBklH,GAAG,KAC3B,MAAMC,EAAanlH,KAAKglH,GAAWI,MAAO,GAC1C,IAAKD,EAAM,OACX,MAAMI,EAAqB,IAAIC,WAC/BD,EAAOrhH,iBAAiB,QAASC,IAGhC,IAAIstI,EAAiBlsB,EAAOx2G,OAC5B81C,OAAOthD,aAAa+5F,QAAQ,cAAem0C,GAC3C,MAAMnuI,EAAQ,QAAQuhD,OAAOthD,aAAaC,QAAQ,mBAClDiH,QAAQC,IAAI,UAAWpH,GACvBtD,KAAKu3F,GAASxjE,EAAKzO,MAAM8rH,gBAAkB9tI,EAC3CmH,QAAQC,IAAI,OAAO,IAEpB66G,EAAOmsB,cAAcvsB,EAAK,EAEnBnlH,KAAkB2xI,GAAG,KAC5B,MAAMxsB,EAAanlH,KAAKixI,GAAY7rB,MAAO,GAC3C,IAAKD,EAAM,OACX,MAAMI,EAAqB,IAAIC,WAC/BD,EAAOrhH,iBAAiB,QAASC,IAGhC,IAAIstI,EAAiBlsB,EAAOx2G,OAC5B81C,OAAOthD,aAAa+5F,QAAQ,eAAgBm0C,GAC5C,MAAMnuI,EAAQ,QAAQuhD,OAAOthD,aAAaC,QAAQ,oBAClDK,SAASyuB,KAAKhN,MAAM8rH,gBAAkB,OAAOK,KAC7CzxI,KAAK+wI,GAAUzrH,MAAM8rH,gBAAkB9tI,EACvCtD,KAAKgxI,GAAU1rH,MAAM8rH,gBAAkB9tI,EACvC,MAAM+tI,EAAkCxtI,SAASytI,eAAe,eAC7C,MAAfD,IACHA,EAAY/rH,MAAM8rH,gBAAkB,OAAOK,KAC3C,IAKFlsB,EAAOmsB,cAAcvsB,EAAK,EAlF1BnlH,KAAKglH,GAAW9gH,iBAAiB,SAAUlE,KAAKklH,IAChDllH,KAAKixI,GAAY/sI,iBAAiB,SAAUlE,KAAK2xI,IACjD3xI,KAAKkxI,GAAYhtI,iBAAiB,SAAUlE,KAAKuxI,IACjDvxI,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAK88F,IAChD98F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKs0H,GAAapwH,iBAAiB,QAASlE,KAAKmxI,G,EC/JnD,MAAMl1C,OAAEA,GAAM1pE,IAAEA,GAAG4pE,GAAEA,GAAEG,OAAEA,GAAMC,OAAEA,IAAW72E,E,MAE/BksH,GAsEZ,WAAA7xI,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EArEH7yB,KAAA6xI,GAAkCv1C,GAAO,CAAEh3E,MAAO,gBACjEi3E,GAAO,CAAEj5F,MAAO,oBAAqB,oBACrCi5F,GAAO,CAAEj5F,MAAO,wBAAyB,wBACzCi5F,GAAO,CAAEj5F,MAAO,kBAAmB,kBACnCi5F,GAAO,CAAEj5F,MAAO,gBAAkB,gBAClCi5F,GAAO,CAAEj5F,MAAO,iBAAmB,iBACnCi5F,GAAO,CAAEj5F,MAAO,oBAAsB,4BACtCi5F,GAAO,CAAEj5F,MAAO,mBAAqB,gBACrCi5F,GAAO,CAAEj5F,MAAO,iBAAmB,cACnCi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,YAAc,YAC9Bi5F,GAAO,CAAEj5F,MAAO,gBAAkB,gBAClCi5F,GAAO,CAAEj5F,MAAO,kBAAoB,kBACpCi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,SAAW,eAC3Bi5F,GAAO,CAAEj5F,MAAO,SAAW,SAC3Bi5F,GAAO,CAAEj5F,MAAO,OAAS,OACzBi5F,GAAO,CAAEj5F,MAAO,aAAe,aAC/Bi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,WAAa,WAC7Bi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,aAAe,aAC/Bi5F,GAAO,CAAEj5F,MAAO,eAAiB,sBACjCi5F,GAAO,CAAEj5F,MAAO,aAAe,aAC/Bi5F,GAAO,CAAEj5F,MAAO,cAAgB,cAChCi5F,GAAO,CAAEj5F,MAAO,QAAU,QAC1Bi5F,GAAO,CAAEj5F,MAAO,WAAa,WAC7Bi5F,GAAO,CAAEj5F,MAAO,aAAe,aAC/Bi5F,GAAO,CAAEj5F,MAAO,kBAAoB,UACpCi5F,GAAO,CAAEj5F,MAAO,mBAAqB,WACrCi5F,GAAO,CAAEj5F,MAAO,YAAc,aAC9Bi5F,GAAO,CAAEj5F,MAAO,YAAc,YAC9Bi5F,GAAO,CAAEj5F,MAAO,eAAiB,mBACjCi5F,GAAO,CAAEj5F,MAAO,eAAiB,eACjCi5F,GAAO,CAAEj5F,MAAO,WAAa,WAC7Bi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,wBAA0B,gBAC1Ci5F,GAAO,CAAEj5F,MAAO,kBAAoB,UACpCi5F,GAAO,CAAEj5F,MAAO,mBAAqB,WACrCi5F,GAAO,CAAEj5F,MAAO,YAAc,YAG9Bi5F,GAAO,CAAEj5F,MAAO,oBAAsB,oBACtCi5F,GAAO,CAAEj5F,MAAO,eAAiB,WACjCi5F,GAAO,CAAEj5F,MAAO,YAAc,YAC9Bi5F,GAAO,CAAEj5F,MAAO,gBAAkB,gBAClCi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,UAAY,UAC5Bi5F,GAAO,CAAEj5F,MAAO,YAAc,YAC9Bi5F,GAAO,CAAEj5F,MAAO,UAAY,WAEbtD,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,cAAgB,QAEvFtlB,KAAAg0B,UAA4BzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACrF62E,GAAG,aACH5pE,GAAI,CAAEjN,MAAO,oGACZiN,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,gBAAkBtlB,KAAK6xI,KAE/Dt/G,GAAI,CAAEjN,MAAO,+EACZtlB,KAAK68F,IAEN78F,KAAK48F,IAEW58F,KAAS8xI,UAAkBjtF,OAAOthD,aAAaC,QAAQ,cAYhExD,KAAM88F,GAAG,KACM,MAAlB98F,KAAK8xI,UACRhrH,GAAYuG,SAASrtB,KAAK8xI,WAE1BhrH,GAAYuG,SAAS,gBAEtBrtB,KAAK6yB,EAAKsuD,MAAM,EAGVnhF,KAAO+8F,QAAG,KAChB/8F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,GAAgB,EAG5Dp9F,KAAAo9F,GAAmBj5F,IACa,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SACxDr9F,KAAKi9F,IACL,EAGMj9F,KAAYi9F,GAAG,KACtBp4C,OAAOthD,aAAa+5F,QAAQ,aAAct9F,KAAK6xI,GAAavuI,OAC5DtD,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKwjE,MAAMm7C,WAAaxxI,KAAK6xI,GAAavuI,MAC/CtD,KAAK6yB,EAAKsuD,MAAM,EAGTnhF,KAAa+xI,GAAG,KACvBjrH,GAAYuG,SAASrtB,KAAK6xI,GAAavuI,OACvCtD,KAAK6yB,EAAKoD,SAASC,SAAS,EAvCN,MAAlBl2B,KAAK8xI,YACR9xI,KAAK6xI,GAAavuI,MAAQtD,KAAK8xI,WAEhC9xI,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAChDp9F,KAAK6xI,GAAa3tI,iBAAiB,SAAUlE,KAAK+xI,G,EChFpD,MAAM91C,OAAEA,GAAM1pE,IAAEA,GAAG4zE,EAAEA,GAAChK,GAAEA,GAAE61C,GAAEA,IAAOtsH,E,MAEtBusH,GAKZ,WAAAlyI,CAAoB8yB,EAAoB5d,GACvC,IAAIoqG,EAEJ,OAHmBr/G,KAAI6yB,EAAJA,EAJF7yB,KAAYkyI,GAAsBj2C,GAAO,CAAChoE,MAAO,iBAsiB1Dj0B,KAAM88F,GAAG,KACjB98F,KAAK6yB,EAAKsuD,MAAM,EAGTnhF,KAAO+8F,QAAG,KACjB/8F,KAAKkyI,GAAal1C,oBAAoB,QAASh9F,KAAK88F,GAAO,EApiBnD7nF,GACP,IAAK,QACJoqG,EAAU9sF,GACT4pE,GAAG,SACHgK,GAAE,wdACFA,GAAE,oRAEF,MACF,IAAK,MACJkZ,EAAU9sF,GACT4pE,GAAG,YACHgK,GAAE,gMACFA,GAAE,+PAEF,MACF,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,UACHgK,GAAE,sFACFA,GAAE,kBAAkB7kG,EAAOqP,gBAAgBrP,EAAOsP,eAElD,MACF,IAAK,QACJyuG,EAAU9sF,GACT4pE,GAAG,cACHgK,GAAE,kPAEF,MACF,IAAK,SACJkZ,EAAU9sF,GACT4pE,GAAG,UACHgK,GAAE,oSAEF,MACF,IAAK,SACJkZ,EAAU9sF,GACT4pE,GAAG,UACHgK,GAAE,yIACFA,GAAE,wPAEF,MACF,IAAK,kBACJkZ,EAAU9sF,GACT4pE,GAAG,qBACHgK,GAAE,mIACFA,GAAE,6OACFA,GAAE,0OACFA,GAAE,kMACFA,GAAE,wNAEF,MACF,IAAK,mBACJkZ,EAAU9sF,GACT4pE,GAAG,qBACHgK,GAAE,yMACFA,GAAE,qRAEF,MACF,IAAK,MACJkZ,EAAU9sF,GACT4pE,GAAG,sBACHgK,GAAE,0LACFA,GAAE,iUAEF,MACF,IAAK,WAEHkZ,EAAU9sF,GACT4pE,GAAG,gBACHgK,GAAE,oPACFA,GAAE,sQAGJ,MACD,IAAK,gBAEHkZ,EAAU9sF,GACT4pE,GAAG,kBACHgK,GAAE,yMAGJ,MACD,IAAK,kBAEHkZ,EAAU9sF,GACT4pE,GAAG,4BACHgK,GAAE,qIAGJ,MACD,IAAK,SACJkZ,EAAU9sF,GACT4pE,GAAG,UACHgK,GAAE,yJACFA,GAAE,uFAEF,MACF,IAAK,iBACJkZ,EAAU9sF,GACT4pE,GAAG,mBACHgK,GAAE,+GACFA,GAAE,qJAEF,MACF,IAAK,WACJkZ,EAAU9sF,GACT4pE,GAAG,aACHgK,GAAE,0RACFA,GAAE,kPACFA,GAAE,oRACFA,GAAE,6SAEF,MACF,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,eACHgK,GAAE,kQACFA,GAAE,0RACFA,GAAE,kPACFA,GAAE,qRAEF,MACF,IAAK,YACJkZ,EAAU9sF,GACT4pE,GAAG,eACHgK,GAAE,2HACFA,GAAE,qKACFA,GAAE,uNAEF,MACF,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,cACHgK,GAAE,6PACFA,GAAE,gXACFA,GAAE,wTAEF,MACF,IAAK,WACJkZ,EAAU9sF,GACT4pE,GAAG,aACHgK,GAAE,gOAEF,MACF,IAAK,YACJkZ,EAAU9sF,GACT4pE,GAAG,SACHgK,GAAE,+KAEF,MACF,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,oBACHgK,GAAE,+KAEF,MACF,IAAK,SACJkZ,EAAU9sF,GACT4pE,GAAG,UACHgK,GAAE,+ZACFA,GAAE,gSAEF,MACF,IAAK,SACJkZ,EAAU9sF,GACT4pE,GAAG,UACHgK,GAAE,iLACFA,GAAE,0YACFA,GAAE,qOAEF,MACF,IAAK,UACJkZ,EAAU9sF,GACT4pE,GAAG,WACHgK,GAAE,8GAEF,MACF,IAAK,eAEHkZ,EAAU9sF,GACT4pE,GAAG,iBACHgK,GAAE,sHAEF,MACH,IAAK,eAEHkZ,EAAU9sF,GACT4pE,GAAG,iBACHgK,GAAE,qMAEF,MACH,IAAK,eAEHkZ,EAAU9sF,GACT4pE,GAAG,iBACHgK,GAAE,8GAGJ,MACD,IAAK,cAEHkZ,EAAU9sF,GACT4pE,GAAG,gBACHgK,GAAE,gJAGJ,MACD,IAAK,YACJkZ,EAAU9sF,GACT4pE,GAAG,gBACHgK,GAAE,mRACFA,GAAE,wHACFA,GAAE,yYAEF,MACF,IAAK,eACJkZ,EAAU9sF,GACT4pE,GAAG,iBACHgK,GAAE,6KAEF,MACF,IAAK,iBACJkZ,EAAU9sF,GACT4pE,GAAG,uBACHgK,GAAE,gGAEF,MACF,IAAK,oBACJkZ,EAAU9sF,GACT4pE,GAAG,sBACHgK,GAAE,kWACFA,GAAE,gJAEF,MACF,IAAK,iBACJkZ,EAAU9sF,GACT4pE,GAAG,mBACHgK,GAAE,kIAEF,MACF,IAAK,WACJkZ,EAAU9sF,GACT4pE,GAAG,YACHgK,GAAE,iGACFA,GAAE,gJACFA,GAAE,yIAEF,MACF,IAAK,YACJkZ,EAAU9sF,GACT4pE,GAAG,aACHgK,GAAE,mNACFA,GAAE,+IAEF,MACF,IAAK,UACJkZ,EAAU9sF,GACT4pE,GAAG,WACHgK,GAAE,0LAEF,MACF,IAAK,kBACJkZ,EAAU9sF,GACT4pE,GAAG,oBACHgK,GAAE,oMAEF,MACF,IAAK,kBACJkZ,EAAU9sF,GACT4pE,GAAG,oBACHgK,GAAE,oJACFA,GAAE,yIAEF,MACF,IAAK,SACJkZ,EAAU9sF,GACT4pE,GAAG,UACHgK,GAAE,0MAEF,MACF,IAAK,cACJkZ,EAAU9sF,GACT4pE,GAAG,eACHgK,GAAE,+JAEF,MACF,IAAK,YACJkZ,EAAU9sF,GACT4pE,GAAG,cACHgK,GAAE,mHAEF,MACF,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,eACHgK,GAAE,0JACFA,GAAE,sKACFA,GAAE,8NAEF,MACF,IAAK,SACJkZ,EAAU9sF,GACT4pE,GAAG,UACHgK,GAAE,gSAEF,MACF,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,cACHgK,GAAE,6FACFA,GAAE,+PACFA,GAAE,oUACFA,GAAE,gKAEF,MACF,IAAK,yBACJkZ,EAAU9sF,GACT4pE,GAAG,2BACHgK,GAAE,6HAEF,MACF,IAAK,iBACJkZ,EAAU9sF,GACT4pE,GAAG,0BACHgK,GAAE,uKACFA,GAAE,kKAEF,MACF,IAAK,gBACJkZ,EAAU9sF,GACT4pE,GAAG,kBACHgK,GAAE,yEACFA,GAAE,4YAEF,MACF,IAAK,YACJkZ,EAAU9sF,GACT4pE,GAAG,aACHgK,GAAE,6SACFA,GAAE,kKACFA,GAAE,4SAEF,MACF,IAAK,iBACJkZ,EAAU9sF,GACTy/G,GAAG,6CACH7rC,GAAE,+IACFA,GAAE,mJAEF,MACF,IAAK,cACJkZ,EAAU9sF,GACTy/G,GAAG,0CACH7rC,GAAE,4IACFA,GAAE,gJAEF,MACF,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,qBACHgK,GAAE,+HACFA,GAAE,0IAEF,MACF,IAAK,gBACJkZ,EAAU9sF,GACT4pE,GAAG,wBACHgK,GAAE,+HACFA,GAAE,+GACFA,GAAE,8JACFA,GAAE,uNAEF,MACF,IAAK,SACJkZ,EAAU9sF,GACT4pE,GAAG,qBACHgK,GAAE,8LACFA,GAAE,mUACFA,GAAE,kLAEF,MACF,IAAK,YACJkZ,EAAU9sF,GACT4pE,GAAG,iBACHgK,GAAE,4FACFA,GAAE,oTACFA,GAAE,4PAEF,MACF,IAAK,gBACJkZ,EAAU9sF,GACT4pE,GAAG,uBACHgK,GAAE,gMAEF,MACF,IAAK,sBACJkZ,EAAU9sF,GACT4pE,GAAG,wBACHgK,GAAE,0LAEO,MACX,IAAK,UACJkZ,EAAU9sF,GACT4pE,GAAG,YACHgK,GAAE,yJACFA,GAAE,uOAEF,MACO,IAAK,mBACDkZ,EAAU9sF,GACN4pE,GAAG,qBACHgK,GAAE,iFACFA,GAAE,4CAER,MACX,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,eACHgK,GAAE,iIACFA,GAAE,yKACFA,GAAE,sKAEF,MACF,IAAK,eACJkZ,EAAU9sF,GACT4pE,GAAG,oCACHgK,GAAE,oGACFA,GAAE,mWACFA,GAAE,2GAEF,MACF,IAAK,kBACJkZ,EAAU9sF,GACT4pE,GAAG,kCACHgK,GAAE,gOACFA,GAAE,gQAEF,MACF,IAAK,eAEJkZ,EAAU9sF,GAAI4pE,GAAG,iBAAkBgK,GAAE,mFAEtC,MACC,IAAK,WAELkZ,EAAU9sF,GAAI4pE,GAAG,aAAcgK,GAAE,oEAAqEA,GAAE,6HAAgIA,GAAE,iNAAoNA,GAAE,4HAA8HA,GAAE,8IAEjkB,MACA,IAAK,YAEJkZ,EAAU9sF,GAAI4pE,GAAG,oBAAqBgK,GAAE,6IAA+IA,GAAE,0JAE1L,MACA,IAAK,UAEJkZ,EAAU9sF,GAAI4pE,GAAG,kBAAmBgK,GAAE,2IAA6IA,GAAE,uEAAwEA,GAAE,0JAEhQ,MACC,IAAK,SAELkZ,EAAU9sF,GAAI4pE,GAAG,UAAWgK,GAAE,oOAE/B,MACC,IAAK,YAELkZ,EAAU9sF,GAAI4pE,GAAG,aAAcgK,GAAE,iLAElC,MACA,IAAK,gBACJkZ,EAAU9sF,GACT4pE,GAAG,kBACHgK,GAAE,kMAEF,MACF,IAAK,eACJkZ,EAAU9sF,GACT4pE,GAAG,iBACHgK,GAAE,iEAEF,MACF,IAAK,eACJkZ,EAAU9sF,GACT4pE,GAAG,iBACHgK,GAAE,+DAEF,MACF,IAAK,eACJkZ,EAAU9sF,GACT4pE,GAAG,iBACHgK,GAAE,4CAEF,MACF,IAAK,mBACJkZ,EAAU9sF,GACT4pE,GAAG,qBACHgK,GAAE,6CAEF,MACF,IAAK,aACJkZ,EAAU9sF,GACT4pE,GAAG,eACHgK,GAAE,8EAEF,MAEF,QAEC,GAAIlxF,EAAKgnB,QAAQ,eAAiB,EAAG,CACpC,IAAIk2G,GAAkBl9H,EAAKA,EAAKpS,OAAS,GACrC22C,EAAoB3mB,EAAK9F,KAAKurB,SAASzlB,EAAK1L,SAAS6d,YAAYnS,EAAK6yD,wBAAwBhpE,WAAWy1H,GACzGC,EAAgC,GACpC,IAAK,IAAIz5G,EAAY,EAAGA,EAAIr3B,EAAOob,WAAW88B,GAAWt8B,WAAWra,OAAQ81B,IAC3Ey5G,EAAMrnI,KAAKo7F,GACV7kG,EAAOob,WAAW88B,GAAWt8B,WAAWyb,GACtChb,QAAQ,MAAO,GAAKrc,EAAOob,WAAW88B,GAAWz8B,mBACjDY,QAAQ,OAAQ,IAAMrc,EAAOob,WAAW88B,GAAWz8B,kBAAoBzb,EAAOob,WAAW88B,GAAW58B,UAAY,IAChHe,QAAQ,MAAO,IAAMrc,EAAOob,WAAW88B,GAAWz8B,kBAAoBzb,EAAOob,WAAW88B,GAAW58B,cAKvGw1H,EAAMA,EAAMvvI,OAAO,GAAGyiB,MAAMC,YAAY,QAAS,yBACjD85F,EAAU9sF,GACT4pE,GAAG76F,EAAOob,WAAW88B,GAAWv8B,YAChCm1H,GAED,KACA,CAEA,MAAM,IAAIjwI,MAAM,6BAA+B8S,GAIlDjV,KAAKg0B,UAAYzB,GAAI,CAAC0B,MAAO,SAAU3O,MAAO,iBAC7C+5F,EACAr/G,KAAKkyI,IAGLntF,YAAW,IAAI/kD,KAAKkyI,GAAax0C,UAElC19F,KAAKkyI,GAAahuI,iBAAiB,QAASlE,KAAK88F,G,ECniBnD,MAAMu1C,GAUL,WAAAtyI,CAAYonB,EAAkCmrH,EAA6BC,EAAYr/B,GAAzClzG,KAAEsyI,GAAFA,EAA6BtyI,KAAEuyI,GAAFA,EAT1DvyI,KAAAwyI,GAAc3uI,SAASwgB,eAAe,KACrCrkB,KAAA0hG,GAAyB37E,EAAI2rE,KAAK,CAAC,cAAe,oBAAqB,YAAa,GAAI,cAAe,SAAU,cAAe,OAAQv+D,KAAM,OAAQnzB,KAAKwyI,IAC3JxyI,KAAAyyI,GAAwB1sH,EAAImN,KAAK,CAACtc,EAAG,EAAGC,EAAG,IAC7C7W,KAAAg0B,UAA2BjO,EAAIwN,IAAIvzB,KAAKyyI,GAAOzyI,KAAK0hG,IAC5D1hG,KAAc0yI,GAAW,EACzB1yI,KAAY2yI,IAAY,EACxB3yI,KAAiB4yI,IAAY,EAC7B5yI,KAAc6yI,GAAW,GAGhC7yI,KAAKyyI,GAAM3tH,aAAa,OAAQgC,GAAYuJ,oBAC5CrwB,KAAK0hG,GAAO58E,aAAa,OAAQouF,E,CAG3B,OAAA4/B,CAAQ1/G,EAAeC,GAC7BrzB,KAAKg0B,UAAUlP,aAAa,IAAK,GAAM9kB,KAAKsyI,GAAKl/G,GACjDpzB,KAAKg0B,UAAUlP,aAAa,IAAK,IAAMxjB,EAAOmb,gBAAkBzc,KAAKuyI,GAAKl/G,IAC1ErzB,KAAKyyI,GAAM3tH,aAAa,QAAS,IAAMsO,EAAQ,IAC/CpzB,KAAKyyI,GAAM3tH,aAAa,SAAU,IAAMuO,EAAS,IACjDrzB,KAAK0hG,GAAO58E,aAAa,IAAK,GAAMsO,EAAQ,GAC5CpzB,KAAK0hG,GAAO58E,aAAa,IAAK,GAAK3Z,KAAKe,MAAMmnB,EAAS,EAAI,G,CAGrD,QAAA0/G,CAASjuI,EAAekuI,EAAcC,EAAmB//B,EAAenzF,EAAkBk5B,GAC5Fj5C,KAAK0yI,IAAkB5tI,IACrB9E,KAAK4yI,IAAgC,GAAT9tI,IAAuC,GAAvB9E,KAAK0yI,MACxC,GAAT5tI,EACH9E,KAAKyyI,GAAM3tH,aAAa,OAAQ,QAG5B/E,EACH/f,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYuK,sBAAwBvK,GAAYsK,oBAC9E6nB,EACRj5C,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYyK,oBAAsBzK,GAAYwK,kBAEpFtxB,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYqK,sBAAwBrK,GAAYoK,qBAKrFpsB,GAAS,KACZ9E,KAAK0hG,GAAO58E,aAAa,YAAa,MACtC9kB,KAAK0hG,GAAO58E,aAAa,QAAS,wCAGlC9kB,KAAK0hG,GAAO58E,aAAa,YAAa,MACtC9kB,KAAK0hG,GAAO58E,aAAa,QAAS,oCAGnC9kB,KAAK0yI,GAAiB5tI,EACrB9E,KAAKwyI,GAAM/3D,KAAO,GAAG31E,GAGnB9E,KAAK2yI,IAAgBK,GAAOhzI,KAAK6yI,IAAkB3/B,IACtDlzG,KAAK2yI,GAAeK,EAChBC,EACHjzI,KAAK0hG,GAAO58E,aAAa,OAAQgC,GAAYkJ,eAE7ChwB,KAAK0hG,GAAO58E,aAAa,OAAQouF,GAEN,GAAvBlzG,KAAK0yI,GACR1yI,KAAKyyI,GAAM3tH,aAAa,OAAQgC,GAAY6I,kBAGxC5P,EACH/f,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYuK,sBAAwBvK,GAAYsK,oBAC9E6nB,EACRj5C,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYyK,oBAAsBzK,GAAYwK,kBAEpFtxB,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYqK,sBAAwBrK,GAAYoK,sBAKtFlxB,KAAK4yI,IAAqBK,GAAYjzI,KAAK6yI,IAAkB3/B,IAChElzG,KAAK4yI,GAAoBK,EACrBA,GACHjzI,KAAKyyI,GAAM3tH,aAAa,OAAQouF,GAChClzG,KAAK0hG,GAAO58E,aAAa,OAAQgC,GAAYkJ,gBAE7ChwB,KAAK0hG,GAAO58E,aAAa,OAAQouF,GAEN,GAAvBlzG,KAAK0yI,GACR1yI,KAAKyyI,GAAM3tH,aAAa,OAAQgC,GAAY6I,kBAGxC5P,EACH/f,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYuK,sBAAwBvK,GAAYsK,oBAC9E6nB,EACRj5C,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYyK,oBAAsBzK,GAAYwK,kBAEpFtxB,KAAKyyI,GAAM3tH,aAAa,OAAQkuH,EAAMlsH,GAAYqK,sBAAwBrK,GAAYoK,sBAK1FlxB,KAAK6yI,GAAiB3/B,C,QAIXggC,GAwDZ,WAAAnzI,CAAoB8yB,EAA4B0tE,GAA5BvgG,KAAI6yB,EAAJA,EAA4B7yB,KAAWugG,GAAXA,EAvDhCvgG,KAAYmzI,GAAsBztH,EAAK42E,OAAO,CAAEh3E,MAAO,wBAA0BhkB,EAAOmb,gBAAkB,gDAEzHiJ,EAAK62E,OAAO,CAAEj5F,MAAO,aAAe,qBACpCoiB,EAAK62E,OAAO,CAAEj5F,MAAO,YAAc,oBACnCoiB,EAAK62E,OAAO,CAAEj5F,MAAO,aAAe,oBAEpBtD,KAAAozI,GAA6BrtH,EAAI4W,IACjC38B,KAAAqzI,GAAmCttH,EAAI4W,IACtC38B,KAAAizB,EAA4BlN,EAAImN,KAAK,CAACC,KAAMrM,GAAY+I,SAAUjZ,EAAG,EAAGC,EAAG,EAAGuc,MAAO,EAAGC,OAAQ,MAChGrzB,KAAAszI,GAAgCvtH,EAAImN,KAAK,CAACC,KAAM,OAAQO,OAAQ5M,GAAY8I,aAAc,eAAgB,EAAG,iBAAkB,OAAQhZ,EAAG,EAAGC,EAAG,EAAGuc,MAAO,GAAIC,OAAQ,KACtKrzB,KAAY+5H,GAAmBh0G,EAAI6N,KAAK,CAACT,KAAMrM,GAAYkJ,aAAc0D,OAAQ5M,GAAYkJ,aAAc,eAAgB,EAAG,iBAAkB,SAChJhwB,KAAcg6H,GAAmBj0G,EAAI6N,KAAK,CAACT,KAAMrM,GAAYkJ,aAAc0D,OAAQ5M,GAAYkJ,aAAc,eAAgB,EAAG,iBAAkB,SACnJhwB,KAAcuzI,GAAmBxtH,EAAI6N,KAAK,CAAET,KAAMrM,GAAYuJ,mBAAoBqD,OAAQ5M,GAAYuJ,mBAAoB,eAAgB,EAAG,iBAAkB,SAC/JrwB,KAAcm+H,GAAmBp4G,EAAImN,KAAK,CAAEe,MAAO,wBAAyBd,KAAMrM,GAAYoJ,iBAAkBwD,OAAQ5M,GAAY8I,aAAc,eAAgB,EAAG,mBAAoB,OAAQ,eAAgB,MAAO,iBAAkB,OAAQ+G,WAAY,SAAU/f,EAAG,EAAGC,EAAG,EAAGuc,MAAO,GAAIC,OAAQ,KACtSrzB,KAAI+zB,EAAkBhO,EAAIwN,IAAI,CAACjO,MAAO,qBAAqBwB,GAAY6I,wCAAyC0D,OAAQ,KACzIrzB,KAAKozI,GACLpzI,KAAKuzI,GACLvzI,KAAKm+H,GACLn+H,KAAKqzI,GACLrzI,KAAKszI,GACLtzI,KAAK+5H,GACL/5H,KAAKg6H,GACLh6H,KAAKizB,GAEYjzB,KAAAwzI,GAA6B9tH,EAAK42E,OAAO,CAACroE,MAAO,iBAAkB3O,MAAO,4JAC5EtlB,KAASg0B,UAAgBtO,EAAK6M,IAAI,CAAE0B,MAAO,cAAe3O,MAAO,uDAAyDtlB,KAAK+zB,EAAM/zB,KAAKwzI,GAASxzI,KAAKmzI,IAEvJnzI,KAAKyzI,GAAY,GACjBzzI,KAAW0zI,GAAqB,GACzC1zI,KAAOk0B,EAAW,EAClBl0B,KAAOw+F,GAAW,EAMlBx+F,KAAc2zI,GAAW,EACzB3zI,KAAkB4zI,GAAW,EAC7B5zI,KAAS6zI,GAAW,EACpB7zI,KAAa8zI,GAAW,EACxB9zI,KAAUo0B,GAAY,EACtBp0B,KAAa+zI,IAAY,EACzB/zI,KAAc+hG,IAAG,EACjB/hG,KAAS61H,GAAW,GACpB71H,KAAcg0I,GAAW,GACzBh0I,KAAqB63H,GAAW,EAChC73H,KAAiBq2H,GAAW,EAC5Br2H,KAAqBi0I,GAAW,EAChCj0I,KAAiB8zB,GAAY,EAC7B9zB,KAAiBs2H,IAAY,EAC7Bt2H,KAAsBi4H,IAAY,EAClCj4H,KAAU8hG,GAAYzkF,EACtBrd,KAAek0I,GAAW,EAC1Bl0I,KAAem0I,GAAW,EAsC1Bn0I,KAAAo0I,GAAiCjwI,IACxCnE,KAAKk0I,GAAkB/oI,KAAK0hB,MAAM1hB,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAKoJ,SAAW,EAAGhrB,KAAK2L,IAAI,EAAG9W,KAAKk0B,EAAUl0B,KAAK61H,KAAY,EAG7G71H,KAAAq0I,GAAuBlwI,IAE9B,IAAImwI,EAA4C,aAA3Bt0I,KAAKmzI,GAAa7vI,MAAwB,EAAI,EAEpC,aAA3BtD,KAAKmzI,GAAa7vI,OAAmD,YAA3BtD,KAAKmzI,GAAa7vI,OAI/DtD,KAAK6yB,EAAK+nB,IAAM56C,KAAKk0I,GAAkB,EAAII,EAE3Ct0I,KAAK6yB,EAAK43D,UAAU2L,oBACpBp2F,KAAK6yB,EAAK43D,UAAU8pD,aAMhBv0I,KAAK6yB,EAAK6B,MAAM7E,UAAY7vB,KAAKk0I,GAAkBI,IACtDt0I,KAAK6yB,EAAK6B,MAAM7E,WAChB7vB,KAAKugG,GAAYi0C,GAAchgH,oBAIG,aAA3Bx0B,KAAKmzI,GAAa7vI,QAI1BtD,KAAK6yB,EAAK+nB,IAAM56C,KAAKk0I,GAErBl0I,KAAK6yB,EAAK43D,UAAU2L,oBACpBp2F,KAAK6yB,EAAK43D,UAAUgqD,aAMhBz0I,KAAK6yB,EAAK6B,MAAM7E,SAAW7vB,KAAKk0I,KACnCl0I,KAAK6yB,EAAK6B,MAAM7E,WAChB7vB,KAAKugG,GAAYi0C,GAAchgH,oBAKjCx0B,KAAKmzI,GAAajkB,eAAiB,CAAC,EAG7BlvH,KAAkB00I,GAAG,KAC5B10I,KAAK6yB,EAAK43D,UAAUkqD,WAAW30I,KAAKwzI,GAAQtkB,cAAc,EAGnDlvH,KAAA4hI,GAAoBC,IAC3B,MAAMhyG,EAAY7vB,KAAK61H,GAAY71H,KAAK6yB,EAAK6B,MAAM7E,SAAW,EAC1D7vB,KAAK8zB,GAAqBjE,IAC7B7vB,KAAK8zB,EAAoBjE,EACzB7vB,KAAKizB,EAAUnO,aAAa,IAAK,GAAK+K,IAEvCg1B,OAAO2vE,sBAAsBx0H,KAAK4hI,GAAiB,EA0B5C5hI,KAAA40I,GAAsBzwI,IAC7BnE,KAAK+zI,IAAgB,EACrB/zI,KAAK+hG,IAAiB,EACtB/hG,KAAK60I,GAAiB1wI,GACtBnE,KAAK2zI,GAAiB3zI,KAAK6zI,GAC3B7zI,KAAK4zI,GAAqB5zI,KAAK8zI,EAAa,EAGrC9zI,KAAA80I,GAAoB3wI,IAC3BnE,KAAK60I,GAAiB1wI,GAClBnE,KAAK2zI,IAAkB3zI,KAAK6zI,IAAa7zI,KAAK4zI,IAAsB5zI,KAAK8zI,IAE5E3vI,EAAMgxB,iBAEHn1B,KAAK+zI,IAAe/zI,KAAK+0I,KAC7B/0I,KAAKg1B,GAAgB,EAGdh1B,KAAAg1I,GAAuB7wI,IAC9BnE,KAAK+zI,IAAgB,EACrB/zI,KAAK+hG,IAAiB,EACtB/hG,KAAKg1B,GAAgB,EAGdh1B,KAAA+0B,EAAkB5wB,IACrBnE,KAAKo0B,IACTp0B,KAAKo0B,GAAa,EAAI,EAGfp0B,KAAAi1B,EAAiB9wB,IACnBnE,KAAKo0B,IACVp0B,KAAKo0B,GAAa,EAAK,EAWhBp0B,KAAAk1B,EAAqB/wB,IAC5BA,EAAMgxB,iBACNn1B,KAAK+zI,IAAgB,EACrB/zI,KAAKi1I,GAAgB9wI,GACrBnE,KAAK2zI,GAAiB3zI,KAAK6zI,GAC3B7zI,KAAK4zI,GAAqB5zI,KAAK8zI,GAG3B9zI,KAAKw+F,IAAWl9F,EAAOmb,kBAEvBtY,EAAMojG,UACTvnG,KAAK+hG,IAAiB,EACtB/hG,KAAK6yB,EAAK43D,UAAUyqD,kBAAkBl1I,KAAK6yB,EAAK43D,UAAUiO,eAAgB14F,KAAK6zI,GAAW7zI,KAAK6yB,EAAK43D,UAAUmO,eAAgB54F,KAAK8zI,IACnI9zI,KAAK6yB,EAAK43D,UAAU0qD,qBAEpBn1I,KAAK+hG,IAAiB,EAClB/hG,KAAK6yB,EAAK1L,SAAWnnB,KAAK8zI,IAAiB9zI,KAAK6yB,EAAK+nB,KAAO56C,KAAK6zI,KACpE7zI,KAAK6yB,EAAK43D,UAAU2qD,cAAcp1I,KAAK8zI,GAAe9zI,KAAK6zI,IAC3D7zI,KAAK+hG,IAAiB,GAEvB/hG,KAAK6yB,EAAK43D,UAAU2L,qBAErB,EAGOp2F,KAAA61B,EAAmB1xB,IAC1BnE,KAAKi1I,GAAgB9wI,GACjBnE,KAAK+zI,KACJ/zI,KAAK2zI,IAAkB3zI,KAAK6zI,IAAa7zI,KAAK4zI,IAAsB5zI,KAAK8zI,KAC5E9zI,KAAK+hG,IAAiB,GAEvB/hG,KAAK+0I,MAEN/0I,KAAKg1B,GAAgB,EAGdh1B,KAAAopI,GAAsBjlI,IAC7B,GAAInE,KAAK+zI,KAAkB/zI,KAAK+hG,IAC3B/hG,KAAK6yB,EAAK1L,SAAWnnB,KAAK8zI,IAAiB9zI,KAAK6yB,EAAK+nB,KAAO56C,KAAK6zI,GAAW,CAC/E,MAAMwB,GAAgBr1I,KAAKw+F,GAAUl9F,EAAOmb,iBAAmBzc,KAAKg0I,GAAkBh0I,KAAKg0I,GAAiB,EACtGsB,EAAuBt1I,KAAK6yB,EAAK9F,KAAK0tB,mBAC5Cz6C,KAAK6yB,EAAK43D,UAAUkqD,YAAY30I,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK8zI,IAAe77F,KAAKj4C,KAAK6zI,KAAcwB,EAAK,EAAIC,KAAkBA,EAAe,GAC9I,CAEFt1I,KAAK+zI,IAAgB,EACrB/zI,KAAK+hG,IAAiB,EACtB/hG,KAAKg1B,GAAgB,EAjNrB6vB,OAAO2vE,sBAAsBx0H,KAAK4hI,IAClC5hI,KAAK+zB,EAAK7vB,iBAAiB,YAAalE,KAAKk1B,GAC7CrxB,SAASK,iBAAiB,YAAalE,KAAK61B,GAC5ChyB,SAASK,iBAAiB,UAAWlE,KAAKopI,IAC1CppI,KAAK+zB,EAAK7vB,iBAAiB,YAAalE,KAAK+0B,GAC7C/0B,KAAK+zB,EAAK7vB,iBAAiB,WAAYlE,KAAKi1B,GAE5Cj1B,KAAKwzI,GAAQtvI,iBAAiB,SAAUlE,KAAK00I,IAC7C10I,KAAKwzI,GAAQtvI,iBAAiB,aAAclE,KAAK40I,IACjD50I,KAAKwzI,GAAQtvI,iBAAiB,YAAalE,KAAK80I,IAChD90I,KAAKwzI,GAAQtvI,iBAAiB,WAAYlE,KAAKg1I,IAC/Ch1I,KAAKwzI,GAAQtvI,iBAAiB,cAAelE,KAAKg1I,IAElD,IAAIO,GAAgC,EACpC1xI,SAASK,iBAAiB,aAAa,KACjCqxI,IACJv1I,KAAK8hG,IAAa,EAClB9hG,KAAKg1B,KAENugH,GAAuB,CAAI,IACzB,GACH1xI,SAASK,iBAAiB,cAAc,KAClCqxI,IACJv1I,KAAK8hG,IAAa,EAClB9hG,KAAKg1B,KAENugH,GAAuB,CAAI,IACzB,GAEHv1I,KAAKmzI,GAAajkB,eAAiB,EACnClvH,KAAKmzI,GAAajvI,iBAAiB,SAAUlE,KAAKq0I,IAClDr0I,KAAKmzI,GAAajvI,iBAAiB,YAAalE,KAAKo0I,G,CAmE/C,mBAAApP,GACN,QAAIhlI,KAAKo0B,IACRp0B,KAAK6yB,EAAK6B,MAAM7E,SAAW7vB,KAAK6zI,GAAa7zI,KAAKk0B,EAAUl0B,KAAK61H,GAAa71H,KAAK61H,IAC5E,E,CAKD,EAAAkf,GACP/0I,KAAK6yB,EAAK43D,UAAUyqD,kBAAkBl1I,KAAK6yB,EAAK43D,UAAUiO,eAAgB14F,KAAK6zI,GAAW7zI,KAAK6yB,EAAK43D,UAAUmO,eAAgB54F,KAAK8zI,IACnI9zI,KAAK6yB,EAAK43D,UAAU0qD,kB,CAGb,EAAAN,CAAiB1wI,GACxB,MAAMixB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,EAAU/vB,EAAMyxB,QAAQ,GAAGN,QAAUF,EAAaI,KACvDx1B,KAAKw+F,GAAUr6F,EAAMyxB,QAAQ,GAAG6pE,QAAUrqE,EAAauqE,IACnDl/D,MAAMzgC,KAAKk0B,KAAUl0B,KAAKk0B,EAAU,GACpCuM,MAAMzgC,KAAKw+F,MAAUx+F,KAAKw+F,GAAU,GACxCx+F,KAAK6zI,GAAY1oI,KAAK0hB,MAAM1hB,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAKoJ,SAAW,EAAGhrB,KAAK2L,IAAI,EAAG9W,KAAKk0B,EAAUl0B,KAAK61H,MAClG71H,KAAK8zI,GAAgB3oI,KAAK0hB,MAAM1hB,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAKiK,kBAAoB,EAAG7rB,KAAK2L,IAAI,GAAI9W,KAAKw+F,GAAUl9F,EAAOmb,iBAAmBzc,KAAKg0I,K,CAqCnI,EAAAiB,CAAgB9wI,GACvB,MAAMixB,EAA2Bp1B,KAAK+zB,EAAKsB,wBAC3Cr1B,KAAKk0B,GAAW/vB,EAAMmxB,SAAWnxB,EAAMoxB,OAASH,EAAaI,KAC7Dx1B,KAAKw+F,IAAWr6F,EAAMs7F,SAAWt7F,EAAMu7F,OAAStqE,EAAauqE,IAC7D3/F,KAAK6zI,GAAY1oI,KAAK0hB,MAAM1hB,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAKoJ,SAAW,EAAGhrB,KAAK2L,IAAI,EAAG9W,KAAKk0B,EAAUl0B,KAAK61H,MAClG71H,KAAK8zI,GAAgB3oI,KAAK0hB,MAAM1hB,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAKiK,kBAAoB,EAAG7rB,KAAK2L,IAAI,GAAI9W,KAAKw+F,GAAUl9F,EAAOmb,iBAAmBzc,KAAKg0I,K,CAoDnI,CAAAh/G,GACP,IAAI7N,EAAkBnnB,KAAK8zI,GACvBl5F,EAAc56C,KAAK6zI,GAEnB7zI,KAAK8hG,KACRlnD,EAAM56C,KAAK6yB,EAAK+nB,IAChBzzB,EAAUnnB,KAAK6yB,EAAK1L,SAGrB,MAAM8rH,EAAqBr4F,GAAO56C,KAAK6yB,EAAK+nB,KAAOzzB,GAAWnnB,KAAK6yB,EAAK1L,QAClEquH,EAA4Bx1I,KAAKw+F,IAAWl9F,EAAOmb,gBAEzD,GAAIzc,KAAK+hG,IAAkB/hG,KAAK2zI,IAAkB3zI,KAAK6zI,GAAW,CAGjE,IAAIhS,EAAoB4L,KAAKnjE,MAEzBu3D,EAAY7hI,KAAKm0I,IAAmB,KAEnCv5F,EAAM56C,KAAK6yB,EAAK+B,aAAe50B,KAAK6yB,EAAK4C,iBAAmB,GAAKz1B,KAAK6yB,EAAK+B,aAAe50B,KAAK6yB,EAAK9F,KAAKoJ,SAAWn2B,KAAK6yB,EAAK4C,kBAEjIz1B,KAAKugG,GAAYk1C,mBAAmB,GAEjC76F,EAAM56C,KAAK6yB,EAAK+B,cAAgB50B,KAAK6yB,EAAK+B,aAAe,GAE5D50B,KAAKugG,GAAYk1C,oBAAoB,GAGtCz1I,KAAKm0I,GAAkBtS,EAIxB,CAiBD,GAfI7hI,KAAKo0B,IAAep0B,KAAK+zI,KAAkBd,GAAYuC,GAC1Dx1I,KAAKszI,GAAcxuH,aAAa,IAAK,IAAM,EAAI9kB,KAAK61H,GAAYj7E,IAChE56C,KAAKszI,GAAcxuH,aAAa,IAAK,IAAM,EAAIxjB,EAAOmb,gBAAmBzc,KAAKg0I,GAAiB7sH,IAC/FnnB,KAAKszI,GAAcxuH,aAAa,SAAU,IAAM9kB,KAAKg0I,GAAiB,IACtEh0I,KAAKszI,GAAcxuH,aAAa,QAAS,IAAM9kB,KAAK61H,GAAY,IAChE71H,KAAKszI,GAAchuH,MAAMqR,WAAa,YAC3B32B,KAAKo0B,GAAgBp0B,KAAKk0B,GAAW0mB,EAAM56C,KAAK61H,IAAe71H,KAAKk0B,EAAU0mB,EAAM56C,KAAK61H,GAAY71H,KAAK61H,IAAe71H,KAAKw+F,GAAU,KAAUg3C,GAC7Jx1I,KAAKszI,GAAcxuH,aAAa,IAAK,IAAM,EAAI9kB,KAAK61H,GAAYj7E,IAChE56C,KAAKszI,GAAcxuH,aAAa,IAAK,KACrC9kB,KAAKszI,GAAcxuH,aAAa,SAAU,IAAMxjB,EAAOmb,gBAAkB,IACzEzc,KAAKszI,GAAchuH,MAAMqR,WAAa,WAEtC32B,KAAKszI,GAAchuH,MAAMqR,WAAa,UAGlC32B,KAAKo0B,GAAcp0B,KAAK8hG,KAAemxC,GAAYuC,EAAiB,CACxE,MAAMH,GAAgBr1I,KAAKw+F,GAAUl9F,EAAOmb,iBAAmBzc,KAAKg0I,GAAkBh0I,KAAKg0I,GAAiB,EACtG59G,EAAiBp2B,KAAK61H,IAAaj7E,EAAM,IACzCg8E,EAAiBt1H,EAAOmb,gBAAkBzc,KAAKg0I,IAAkB7sH,EAAU,IAC3EK,EAAqC,GAAtBxnB,KAAKg0I,GACpB0B,EAAoC,GAAtB11I,KAAKg0I,GACnB5gH,EAAsC,KAAtBpzB,KAAKg0I,GAE3Bh0I,KAAK+5H,GAAaj1G,aAAa,OAAQuwH,IAAOr1I,KAAK8hG,GAAah7E,GAAY8I,aAAe9I,GAAYkJ,cACvGhwB,KAAKg6H,GAAel1G,aAAa,OAASuwH,GAAOr1I,KAAK8hG,GAAwCh7E,GAAYkJ,aAAvClJ,GAAY8I,cAE/E5vB,KAAK+5H,GAAaj1G,aAAa,IAAK,KAAKsR,KAAUwgG,EAAS8e,OAASt/G,EAAShD,KAASwjG,EAASpvG,OAAU4O,EAAShD,KAASwjG,EAASpvG,OACrIxnB,KAAKg6H,GAAel1G,aAAa,IAAK,KAAKsR,KAAUwgG,EAAS8e,OAASt/G,EAAShD,KAASwjG,EAASpvG,OAAU4O,EAAShD,KAASwjG,EAASpvG,OAEvIxnB,KAAK+5H,GAAaz0G,MAAMqR,WAAa,UACrC32B,KAAKg6H,GAAe10G,MAAMqR,WAAa,SACvC,MACA32B,KAAK+5H,GAAaz0G,MAAMqR,WAAa,SACrC32B,KAAKg6H,GAAe10G,MAAMqR,WAAa,SAGxC32B,KAAKm+H,GAAe74G,MAAMkQ,KAAQx1B,KAAK61H,GAAY71H,KAAK6yB,EAAK+nB,IAAO,KACpE56C,KAAKm+H,GAAe74G,MAAMq6E,IAAOr+F,EAAOmb,gBAAmBzc,KAAKg0I,GAAiBh0I,KAAK6yB,EAAK1L,QAAY,KAEvGnnB,KAAKwzI,GAAQluH,MAAMkQ,KAAQx1B,KAAK61H,GAAY71H,KAAK6yB,EAAK+nB,IAAO,KAE7D56C,KAAKwzI,GAAQluH,MAAM8N,MAAQpzB,KAAK61H,GAAY,KAC5C71H,KAAKwzI,GAAQluH,MAAMq6E,IAAOr+F,EAAOmb,gBAAkBzc,KAAKg0I,GAAiBh0I,KAAK6yB,EAAK1L,QAAW,KAC9FnnB,KAAKwzI,GAAQluH,MAAM+N,OAASrzB,KAAKg0I,GAAiB,KAElDh0I,KAAKmzI,GAAa7tH,MAAMkQ,KAAQx1B,KAAK61H,GAAYj7E,EAAO,KAExD,MAAM06F,EAAuBt1I,KAAK6yB,EAAK9F,KAAK0tB,mBAAqB,EACjE,IAAK,IAAI5vC,EAAY7K,KAAKi0I,GAAuBppI,EAAIyqI,EAAczqI,IACjE7K,KAAKwzI,GAAQvvI,YAAYyhB,EAAK62E,OAAO,CAACj5F,MAAOuH,GAAIA,IAEnD,IAAK,IAAIA,EAAYyqI,EAAczqI,EAAI7K,KAAKi0I,GAAuBppI,IACjE7K,KAAKwzI,GAAQ7gH,YAAmB3yB,KAAKwzI,GAAQmC,WAE/C31I,KAAKi0I,GAAwBqB,EAC7B,MAAMM,EAA0B51I,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS8wB,KAAKj4C,KAAK6yB,EAAK+nB,KACtF56C,KAAKwzI,GAAQtkB,eAAiB0mB,IAAiB51I,KAAKwzI,GAAQtkB,cAAgB0mB,E,CAG1E,MAAAh/G,GAKN,GAHA52B,KAAK61H,GAAY71H,KAAK6yB,EAAKiC,cAC3B90B,KAAKg0I,GAAiBh0I,KAAK6yB,EAAKuE,mBAE5Bp3B,KAAK63H,IAAyB73H,KAAK6yB,EAAK9F,KAAKiK,kBAAmB,CAGnE,IAAK,IAAIngB,EAAY7W,KAAK63H,GAAuBhhH,EAAI7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,IAAK,CAC3F7W,KAAKyzI,GAAM58H,GAAK,GAChB,IAAK,IAAID,EAAY,EAAGA,EAAI5W,KAAKq2H,GAAmBz/G,IAAK,CACxD,MAAMi/H,EAAW,IAAIxD,GAAIx7H,EAAGD,EAAGC,EAAGiQ,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAMlW,GAAGkR,kBACjF8tH,EAAI/C,QAAQ9yI,KAAK61H,GAAW71H,KAAKg0I,IACjCh0I,KAAKozI,GAAcnvI,YAAY4xI,EAAI7hH,WACnCh0B,KAAKyzI,GAAM58H,GAAGD,GAAKi/H,CACnB,CACD,CAGD,IAAK,IAAIh/H,EAAY7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,EAAI7W,KAAK63H,GAAuBhhH,IACtF,IAAK,IAAID,EAAY,EAAGA,EAAI5W,KAAKq2H,GAAmBz/G,IACnD5W,KAAKozI,GAAczgH,YAAY3yB,KAAKyzI,GAAM58H,GAAGD,GAAGod,WAIlDh0B,KAAKyzI,GAAM5wI,OAAS7C,KAAK6yB,EAAK9F,KAAKiK,kBACnCh3B,KAAK+zI,IAAgB,CACrB,CAED,GAAI/zI,KAAKq2H,IAAqBr2H,KAAK6yB,EAAK9F,KAAKoJ,UAAYn2B,KAAKs2H,IAAqBt2H,KAAK61H,GAAW,CAClG,IAAK,IAAIh/G,EAAY,EAAGA,EAAI7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,IAAK,CAClE,IAAK,IAAID,EAAY5W,KAAKq2H,GAAmBz/G,EAAI5W,KAAK6yB,EAAK9F,KAAKoJ,SAAUvf,IAAK,CAC9E,MAAMi/H,EAAW,IAAIxD,GAAIx7H,EAAGD,EAAGC,EAAGiQ,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAMlW,GAAGkR,kBACjF8tH,EAAI/C,QAAQ9yI,KAAK61H,GAAW71H,KAAKg0I,IACjCh0I,KAAKozI,GAAcnvI,YAAY4xI,EAAI7hH,WACnCh0B,KAAKyzI,GAAM58H,GAAGD,GAAKi/H,CACnB,CACD,IAAK,IAAIj/H,EAAY5W,KAAK6yB,EAAK9F,KAAKoJ,SAAUvf,EAAI5W,KAAKq2H,GAAmBz/G,IACzE5W,KAAKozI,GAAczgH,YAAY3yB,KAAKyzI,GAAM58H,GAAGD,GAAGod,WAEjDh0B,KAAKyzI,GAAM58H,GAAGhU,OAAS7C,KAAK6yB,EAAK9F,KAAKoJ,QACtC,CAMD,IAAIswG,EAAa,GAEjB,IAAK,IAAI7vH,EAAY,EAAGA,EAAI5W,KAAK6yB,EAAK9F,KAAKoJ,SAAUvf,IAAK,CACzD,IAAIk/H,EAAWl/H,EAAI5W,KAAK61H,GAAY,EAKpC4Q,GAAc,KAAKqP,SAHHl/H,EAAI5W,KAAK61H,GAAY71H,KAAK61H,GAAY,OACrCv0H,EAAOmb,gBAAkB,OAEiCq5H,UAC5E,CAIA,GAFA91I,KAAKuzI,GAAezuH,aAAa,IAAK2hH,GAElCzmI,KAAKq2H,GAAoBr2H,KAAK6yB,EAAK9F,KAAKoJ,SAAU,CACrDn2B,KAAK0zI,GAAY7wI,OAAS7C,KAAK6yB,EAAK9F,KAAKoJ,SACzC,IAAK,IAAIsV,EAAMzrC,KAAKq2H,GAAmB5qF,EAAMzrC,KAAK0zI,GAAY7wI,OAAQ4oC,IACrEzrC,KAAK0zI,GAAYjoG,GAAO1lB,EAAI2rE,KAAK,CAAE,cAAe,aAAc,YAAa,MAAO,cAAe,SAAU,cAAe,OAAQ96E,EAAM60B,EAAMzrC,KAAK61H,GAAY71H,KAAK61H,GAAY,EAAK,KAAMh/G,EAAK,MAAOsc,KAAMrM,GAAYiJ,eAAiB,IAAM0b,EAAM,IACpPA,EAAM,GAAK,GAEdzrC,KAAK0zI,GAAYjoG,GAAK3mB,aAAa,OAAQgC,GAAYgJ,aAExD9vB,KAAKqzI,GAAoBpvI,YAAYjE,KAAK0zI,GAAYjoG,GAEvD,MACI,GAAIzrC,KAAKq2H,GAAoBr2H,KAAK6yB,EAAK9F,KAAKoJ,SAAU,CAC1D,IAASsV,EAAMzrC,KAAKq2H,GAAoB,EAAG5qF,GAAOzrC,KAAK6yB,EAAK9F,KAAKoJ,SAAUsV,IAC1EzrC,KAAKqzI,GAAoB1gH,YAAY3yB,KAAK0zI,GAAYjoG,IAEvDzrC,KAAK0zI,GAAY7wI,OAAS7C,KAAK6yB,EAAK9F,KAAKoJ,QACzC,CAGD,GAAIn2B,KAAKs2H,IAAqBt2H,KAAK61H,GAClC,IAASpqF,EAAM,EAAGA,EAAMzrC,KAAK0zI,GAAY7wI,OAAQ4oC,IAChDzrC,KAAK0zI,GAAYjoG,GAAK3mB,aAAa,IAAM2mB,EAAMzrC,KAAK61H,GAAY71H,KAAK61H,GAAY,EAAK,MAKxF71H,KAAKq2H,GAAoBr2H,KAAK6yB,EAAK9F,KAAKoJ,SACxC,MAAMghG,EAAcn3H,KAAK61H,GAAY71H,KAAK6yB,EAAK9F,KAAKoJ,SACpDn2B,KAAKg0B,UAAU1O,MAAM8N,MAAQ+jG,EAAc,KAC3Cn3H,KAAK+zB,EAAKjP,aAAa,QAASqyG,EAAc,IAC9Cn3H,KAAK+zI,IAAgB,CACrB,CAED,GAAI/zI,KAAKi4H,IAA0Bj4H,KAAKg0I,IAAkBh0I,KAAKs2H,IAAqBt2H,KAAK61H,GAAW,CACnG71H,KAAKs2H,GAAoBt2H,KAAK61H,GAC9B,IAAK,IAAIh/G,EAAY,EAAGA,EAAI7W,KAAK6yB,EAAK9F,KAAKiK,kBAAmBngB,IAC7D,IAAK,IAAID,EAAY,EAAGA,EAAI5W,KAAKq2H,GAAmBz/G,IACnD5W,KAAKyzI,GAAM58H,GAAGD,GAAGk8H,QAAQ9yI,KAAK61H,GAAW71H,KAAKg0I,IAGhDh0I,KAAK+zI,IAAgB,CACrB,CAED,GAAI/zI,KAAKi4H,IAA0Bj4H,KAAKg0I,IAAkBh0I,KAAK63H,IAAyB73H,KAAK6yB,EAAK9F,KAAKiK,kBAAmB,CACzHh3B,KAAKi4H,GAAyBj4H,KAAKg0I,GACnCh0I,KAAK63H,GAAwB73H,KAAK6yB,EAAK9F,KAAKiK,kBAC5C,MAAM++G,EAAuBz0I,EAAOmb,gBAAkBzc,KAAK6yB,EAAK9F,KAAKiK,kBAAoBh3B,KAAKg0I,GAC9Fh0I,KAAK+zB,EAAKjP,aAAa,SAAU,GAAKixH,GACtC/1I,KAAKizB,EAAUnO,aAAa,SAAU,GAAKixH,GAC3C/1I,KAAKg0B,UAAU1O,MAAM+N,OAAS0iH,EAAe,IAC7C,CAED,IAAK,IAAI97G,EAAY,EAAGA,EAAIj6B,KAAK6yB,EAAK9F,KAAKiK,kBAAmBiD,IAC7D,IAAK,IAAIpvB,EAAY,EAAGA,EAAI7K,KAAKq2H,GAAmBxrH,IAAK,CACxD,MAAM8vC,EAA0B36C,KAAK6yB,EAAK9F,KAAK48B,WAAW1vB,EAAGpvB,GACvDooI,EAAqBpoI,GAAK7K,KAAK6yB,EAAK+nB,KAAO3gB,GAAKj6B,KAAK6yB,EAAK1L,QAC1D6rH,EAA2B,MAAXr4F,GAA2C,GAAxBA,EAAQ5V,MAAMliC,OAEjDgzI,EAAW71I,KAAKyzI,GAAMx5G,GAAGpvB,GAC/B,GAAIA,EAAI7K,KAAK6yB,EAAK9F,KAAKoJ,SAAU,CAChC,MAAMqxE,EAAwB1gF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAMkN,GAC1E47G,EAAI9C,SAAS/yI,KAAK6yB,EAAK9F,KAAKurB,SAASre,GAAGge,KAAKptC,GAAImoI,EAAKC,EAAUD,IAAQC,EAAWzrC,EAAOz/E,iBAAmBy/E,EAAOv/E,eAAgBgS,GAAKj6B,KAAK6yB,EAAK9F,KAAKE,mBAAqBgN,EAAIj6B,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmB+M,GAAKj6B,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBAC7S2oH,EAAI7hH,UAAU1O,MAAMqR,WAAa,SACjC,MACAk/G,EAAI7hH,UAAU1O,MAAMqR,WAAa,QAElC,CAIF32B,KAAKwzI,GAAQluH,MAAMq/E,QAAU3kG,KAAK8hG,GAAa,GAAK,OAEhD9hG,KAAK6yB,EAAK43D,UAAUkrB,oBAIvB31G,KAAKm+H,GAAer5G,aAAa,IAAKoS,OAAOl3B,KAAK61H,GAAY71H,KAAK6yB,EAAK43D,UAAUmrB,gBAAkB,IACpG51G,KAAKm+H,GAAer5G,aAAa,IAAKoS,OAAO51B,EAAOmb,gBAAkBzc,KAAKg0I,GAAiBh0I,KAAK6yB,EAAK43D,UAAUqrB,oBAAsB,IACtI91G,KAAKm+H,GAAer5G,aAAa,QAASoS,OAAOl3B,KAAK61H,GAAY71H,KAAK6yB,EAAK43D,UAAUorB,kBAAoB,IAC1G71G,KAAKm+H,GAAer5G,aAAa,SAAUoS,OAAOl3B,KAAKg0I,GAAiBh0I,KAAK6yB,EAAK43D,UAAUsrB,mBAAqB,IACjH/1G,KAAKm+H,GAAer5G,aAAa,aAAc,YAE/C9kB,KAAKm+H,GAAer5G,aAAa,aAAc,UAGhD9kB,KAAKg1B,G,QCvmBMghH,GAGT,WAAAj2I,CAA4Bk2I,EAAoC37F,EAAgB,GAApDt6C,KAAMi2I,OAANA,EAAoCj2I,KAAKs6C,MAALA,EAC5Dt6C,KAAKk2I,GAAqB,SAASC,EAA2BC,GAC1D,GAAGA,EAAa,CACZ,IAAIC,EAAMJ,EAAOK,WAAW,MAE5BD,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIG,SAAS,EAAG,EAAGP,EAAO7iH,MAAO6iH,EAAO5iH,QAExCgjH,EAAIE,UAAiE,KAArDzvH,GAAYW,YAAY,yBAAkCX,GAAYW,YAAY,yBAA2BX,GAAYW,YAAY,kBACrJ,IAAK,IAAI5c,EAAYsrI,EAAYtzI,OAAS,EAAGgI,GAAKsrI,EAAYtzI,OAAS,EAAKozI,EAAO7iH,MAAMknB,EAAQzvC,IAAK,CAClG,IAAI+L,EAAI/L,GAAKsrI,EAAYtzI,OAAS,GAAMozI,EAAO7iH,MAAMknB,EACjDm8F,EAAMN,EAAYtrI,IAAMorI,EAAO5iH,OAAOinB,EAAQ,GAAM27F,EAAO5iH,OAAOinB,EAAQ,EAG9E,GADA+7F,EAAIG,UAAU5/H,EAAI,GAAG0jC,GAAQm8F,EAAK,GAAGn8F,EAAO,EAAEA,EAAO,IAAIA,GAChD,GAAL1jC,EAAQ,KACf,CACDy/H,EAAIE,UAAiE,KAArDzvH,GAAYW,YAAY,yBAAkCX,GAAYW,YAAY,yBAA2BX,GAAYW,YAAY,oBACrJ,IAAK,IAAI5c,EAAYurI,EAAYvzI,OAAS,EAAGgI,GAAKurI,EAAYvzI,OAAS,EAAKozI,EAAO7iH,MAAMknB,EAAQzvC,IAAK,CAClG,IAAI+L,EAAI/L,GAAKurI,EAAYvzI,OAAS,GAAMozI,EAAO7iH,MAAMknB,EACjDo8F,EAAMN,EAAYvrI,IAAMorI,EAAO5iH,OAAOinB,EAAQ,GAAM27F,EAAO5iH,OAAOinB,EAAQ,EAG9E,GADA+7F,EAAIG,UAAU5/H,EAAI,GAAG0jC,GAAQo8F,EAAK,GAAGp8F,EAAO,EAAEA,EAAO,IAAIA,GAChD,GAAL1jC,EAAQ,KACf,CACJ,CACL,EACAykB,GAAOQ,OAAO,qBAAsB77B,KAAKk2I,G,ECvBjD,MAAM3jH,IAAEA,GAAG6pE,MAAEA,GAAKH,OAAEA,GAAME,GAAEA,GAAEG,OAAEA,GAAMC,OAAEA,GAAM05C,OAAEA,IAAWvwH,EAUrDixH,GAAsC,CAACC,EAAKP,EAAKz/H,EAAGC,EAAGw8F,EAAGE,KAC5D8iC,EAAIG,SAAS5/H,EAAGC,EAAGw8F,EAAGE,EAAE,EAG5B,MAAMsjC,GAgBF,WAAA92I,CAAYuD,EAAewzI,EAAqBC,EAAsBC,EAAoBC,EAAoBC,EAAiCC,EAA4CC,EAAgCC,GAV1Mr3I,KAAYs3I,GAAW,GAChCt3I,KAAUm0B,GAAY,EAGtBn0B,KAAiBu3I,GAAkB,KAGpCv3I,KAAMi2I,OAA6B,KAClCj2I,KAAQw3I,GAAoC,KAuB7Cx3I,KAAAgrD,OAAUg7B,IACbhmF,KAAKsjH,GAAStjH,KAAKy3I,GAAWzxD,EAAS,EAGpChmF,KAAM42B,OAAG,KACZ,MAAMggH,EAAyB52I,KAAKi2I,OAC9BI,EAAgCr2I,KAAKw3I,GACrCnkC,EAAYujC,EAAIxjH,MAChBmgF,EAAYqjC,EAAIvjH,OAChBqkH,EAAc13I,KAAK23I,GACnBC,EAAc53I,KAAK63I,GAEnBx2G,EAAYrhC,KAAKsjH,GAEvB+yB,EAAIyB,UAAU,EAAG,EAAGzkC,EAAGE,GAEvB8iC,EAAIE,UAAYzvH,GAAYW,YAAY,iBACxC,MAAMswH,EAAa/3I,KAAKs3I,GAClBU,EAAazkC,EACb0kC,EAAa9sI,KAAK0hB,OAAOwU,EAAIq2G,GAAOrkC,GAAKukC,EAAMF,IAAQK,EAAK,EAElE/3I,KAAKk4I,GAAetB,EAAKP,EAAK4B,EADX,EACmBF,EAAIC,EAAG,EAG1Ch4I,KAAAm4I,eAAiB,CAACxjC,EAAYE,KACjC70G,KAAK23I,GAAchjC,EACnB30G,KAAK63I,GAAchjC,CAAE,EAGjB70G,KAAAo4I,GAAmBj0I,IACvB,IAAKnE,KAAKm0B,EAAY,OAEtB,MAAMk/E,EAAYrzG,KAAKq4I,GACjBX,EAAc13I,KAAK23I,GACnBC,EAAc53I,KAAK63I,GAEnBS,EAAkBt4I,KAAKi2I,OAAQ5gH,wBAC/BkjH,EAAuBllC,EAAIilC,EAAOllH,MAIlColH,EAAcd,IAFCvzI,EAAMmxB,SAAWnxB,EAAMoxB,OAAS+iH,EAAO9iH,MAAQ+iH,GAEpCX,EAAMF,GAAOrkC,EAE7CrzG,KAAKsjH,GAAStjH,KAAKy3I,GAAWe,GAAiC,MAA1Bx4I,KAAKu3I,GAA4Bv3I,KAAKu3I,GAAoB,IAC/Fv3I,KAAK42B,SACD52B,KAAKy4I,IAAmBz4I,KAAKy4I,GAAkBz4I,KAAKsjH,GAAO,EAG3DtjH,KAAA04I,GAAoBv0I,IACxBnE,KAAKm0B,GAAa,EAElB,MAAMk/E,EAAYrzG,KAAKq4I,GACjBX,EAAc13I,KAAK23I,GACnBC,EAAc53I,KAAK63I,GAEnBS,EAAkBt4I,KAAKi2I,OAAQ5gH,wBAC/BkjH,EAAuBllC,EAAIilC,EAAOllH,MAElCulH,IAAex0I,EAAMmxB,SAAWnxB,EAAMoxB,OAAS+iH,EAAO9iH,MAAQ+iH,EAE9DR,EAAa/3I,KAAKs3I,GAClBsB,GAAgB54I,KAAKsjH,GAASo0B,GAAOrkC,GAAKukC,EAAMF,GAAQK,EAAK,EAE/DY,GAAMC,GAAOD,GADGC,EAAMb,IAEtB/3I,KAAKu3I,IAAqBoB,GAAMC,EAAMb,EAAK,KAAOH,EAAMF,GAAOrkC,GAGnE,MAAMmlC,EAAcd,EAAMiB,GAAMf,EAAMF,GAAOrkC,EAE7CrzG,KAAKsjH,GAAStjH,KAAKy3I,GAAWe,GAAiC,MAA1Bx4I,KAAKu3I,GAA4Bv3I,KAAKu3I,GAAoB,IAC/Fv3I,KAAK42B,SACD52B,KAAKy4I,IAAmBz4I,KAAKy4I,GAAkBz4I,KAAKsjH,GAAO,EAG3DtjH,KAAA64I,GAAkB10I,IAGjBnE,KAAKm0B,IACVn0B,KAAKm0B,GAAa,EAClBn0B,KAAKu3I,GAAoB,KACzBv3I,KAAK84I,KAAqB,EAGtB94I,KAAA+4I,GAAmB50I,IACvB,IAAKnE,KAAKm0B,EAAY,OAEtBhwB,EAAMgxB,iBAEN,MAAMk+E,EAAYrzG,KAAKq4I,GACjBX,EAAc13I,KAAK23I,GACnBC,EAAc53I,KAAK63I,GAEnBS,EAAkBt4I,KAAKi2I,OAAQ5gH,wBAC/BkjH,EAAuBllC,EAAIilC,EAAOllH,MAIlColH,EAAcd,GAFAvzI,EAAMyxB,QAAQ,GAAGN,QAAUgjH,EAAO9iH,MAAQ+iH,GAE9BX,EAAMF,GAAOrkC,EAE7CrzG,KAAKsjH,GAAStjH,KAAKy3I,GAAWe,GAAiC,MAA1Bx4I,KAAKu3I,GAA4Bv3I,KAAKu3I,GAAoB,IAC/Fv3I,KAAK42B,SACD52B,KAAKy4I,IAAmBz4I,KAAKy4I,GAAkBz4I,KAAKsjH,GAAO,EAG3DtjH,KAAAg5I,GAAoB70I,IACxBA,EAAMgxB,iBAENn1B,KAAKm0B,GAAa,EAElB,MAAMk/E,EAAYrzG,KAAKq4I,GACjBX,EAAc13I,KAAK23I,GACnBC,EAAc53I,KAAK63I,GAEnBS,EAAkBt4I,KAAKi2I,OAAQ5gH,wBAC/BkjH,EAAuBllC,EAAIilC,EAAOllH,MAElCulH,GAAcx0I,EAAMyxB,QAAQ,GAAGN,QAAUgjH,EAAO9iH,MAAQ+iH,EAExDR,EAAa/3I,KAAKs3I,GAClBsB,GAAgB54I,KAAKsjH,GAASo0B,GAAOrkC,GAAKukC,EAAMF,GAAQK,EAAK,EAE/DY,GAAMC,GAAOD,GADGC,EAAMb,IAEtB/3I,KAAKu3I,IAAqBoB,GAAMC,EAAMb,EAAK,KAAOH,EAAMF,GAAOrkC,GAGnE,MAAMmlC,EAAcd,EAAMiB,GAAMf,EAAMF,GAAOrkC,EAE7CrzG,KAAKsjH,GAAStjH,KAAKy3I,GAAWe,GAAiC,MAA1Bx4I,KAAKu3I,GAA4Bv3I,KAAKu3I,GAAoB,IAC/Fv3I,KAAK42B,SACD52B,KAAKy4I,IAAmBz4I,KAAKy4I,GAAkBz4I,KAAKsjH,GAAO,EAG3DtjH,KAAAi5I,GAAkB90I,IACtBA,EAAMgxB,iBAGNn1B,KAAKm0B,GAAa,EAClBn0B,KAAKu3I,GAAoB,KACzBv3I,KAAK84I,IAAqB,EAGvB94I,KAAO+8F,QAAG,KACbl4C,OAAOm4C,oBAAoB,YAAah9F,KAAKo4I,IAC7Cp4I,KAAKi2I,OAAQj5C,oBAAoB,YAAah9F,KAAK04I,IACnD7zF,OAAOm4C,oBAAoB,UAAWh9F,KAAK64I,IAC3C74I,KAAKi2I,OAAQj5C,oBAAoB,aAAch9F,KAAKg5I,IACpDh5I,KAAKi2I,OAAQj5C,oBAAoB,YAAah9F,KAAK+4I,IACnD/4I,KAAKi2I,OAAQj5C,oBAAoB,WAAYh9F,KAAKi5I,IAClDj5I,KAAKi2I,OAAQj5C,oBAAoB,cAAeh9F,KAAKi5I,GAAe,EAxKpEj5I,KAAKsjH,GAAShgH,EACdtD,KAAKy3I,GAAaP,EAClBl3I,KAAKy4I,GAAoBtB,EACzBn3I,KAAK84I,GAAsB1B,EAC3Bp3I,KAAKk4I,GAAkC,MAAjBb,EAAwBV,GAAuBU,EACrEr3I,KAAK23I,GAAcX,EACnBh3I,KAAK63I,GAAcZ,EACnBj3I,KAAKq4I,GAAevB,EACpB92I,KAAKk5I,GAAgBnC,EACrB/2I,KAAKi2I,OAASA,GAAO,CAAE7iH,MAAOpzB,KAAKq4I,GAAchlH,OAAQrzB,KAAKk5I,GAAe5zH,MAAO,yLACpFtlB,KAAKw3I,GAAWx3I,KAAKi2I,OAAOK,WAAW,MACvCzxF,OAAO3gD,iBAAiB,YAAalE,KAAKo4I,IAC1Cp4I,KAAKi2I,OAAQ/xI,iBAAiB,YAAalE,KAAK04I,IAChD7zF,OAAO3gD,iBAAiB,UAAWlE,KAAK64I,IACxC74I,KAAKi2I,OAAQ/xI,iBAAiB,aAAclE,KAAKg5I,IACjDh5I,KAAKi2I,OAAQ/xI,iBAAiB,YAAalE,KAAK+4I,IAChD/4I,KAAKi2I,OAAQ/xI,iBAAiB,WAAYlE,KAAKi5I,IAC/Cj5I,KAAKi2I,OAAQ/xI,iBAAiB,cAAelE,KAAKi5I,G,QA2J7CE,GAuNT,WAAAp5I,CAAY8yB,EAAoB0tE,GAtNfvgG,KAAoBo5I,GAAW,IAC/Bp5I,KAAqBq5I,GAAW,IAChCr5I,KAAmBs5I,GAAW,GAIvCt5I,KAAWisF,GAAsB,KACjCjsF,KAAau5I,GAAwB,KACrCv5I,KAAmBw5I,GAAkB,KACrCx5I,KAAwBy5I,GAAkB,KAC1Cz5I,KAA2B05I,GAAkB,KAC7C15I,KAAyB25I,GAAkB,KAC3C35I,KAAuB45I,GAAkB,KACzC55I,KAA6B65I,GAAmB,KAChD75I,KAAiB85I,GAAW,EAC5B95I,KAAoB+5I,GAAW,EAC/B/5I,KAAkBg6I,GAAW,EAC7Bh6I,KAAgBi6I,GAAW,EAC3Bj6I,KAAsBk6I,IAAY,EAClCl6I,KAAmBm6I,GAAW,EAC9Bn6I,KAAmBo6I,GAAW,EAC9Bp6I,KAAmBq6I,IAAY,KAC/Br6I,KAAmBs6I,GAAW,KAC9Bt6I,KAAsBu6I,GAAW,EACjCv6I,KAAuBw6I,GAAW,EAClCx6I,KAA0By6I,GAAW,EACrCz6I,KAAmB06I,IAAY,EAC/B16I,KAAmB26I,GAAkB,KACrC36I,KAAmB46I,GAAkB,KAErC56I,KAAA66I,GAAyBx5G,GACtBl2B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKw5I,GAAsBruI,KAAK0hB,MAAMwU,KAG9DrhC,KAAA86I,GAAuBz5G,GACpBl2B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKw5I,GAAsBruI,KAAKoC,IAAIvN,KAAKi6I,GAAmB,EAAG9uI,KAAK0hB,MAAMwU,MAGlGrhC,KAAA+6I,GAAqB15G,GAClBl2B,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKw5I,GAAsBruI,KAAK2L,IAAI9W,KAAKg6I,GAAqB,EAAG7uI,KAAK0hB,MAAMwU,MAGpGrhC,KAAAg7I,GAA+C,IAAInE,GACvD72I,KAAK+5I,GACL/5I,KAAKo5I,GACLp5I,KAAKs5I,GACLt5I,KAAKm6I,GACLn6I,KAAKo6I,GACLp6I,KAAK66I,IACJx5G,IACGrhC,KAAK+5I,GAAuB14G,EAC5BrhC,KAAKisF,GAAavoE,oBAAsB1jB,KAAK+5I,GAC7C/5I,KAAKi7I,KACLj7I,KAAKk7I,IAA0B,IAEnC,KACIl7I,KAAKm7I,YAAa,EAClBp2F,YAAW,KAAQ/kD,KAAKm7I,YAAa,CAAK,GAAK,GAAG,IAEtD,CAACvE,EAAwBP,EAA+Bz/H,EAAWC,EAAWw8F,EAAWE,KACrF,MAAM6nC,EAAa7nC,EAAI,EACvB8iC,EAAIgF,YACJhF,EAAIiF,OAAO1kI,EAAGC,GACdw/H,EAAIkF,OAAO3kI,EAAIy8F,EAAGx8F,GAClBw/H,EAAIkF,OAAO3kI,EAAIy8F,EAAGx8F,EAAI08F,EAAI6nC,GAC1B/E,EAAIkF,OAAO3kI,EAAIy8F,EAAI,EAAGx8F,EAAI08F,GAC1B8iC,EAAIkF,OAAO3kI,EAAGC,EAAI08F,EAAI6nC,GACtB/E,EAAIljH,MAAM,IAGVnzB,KAAAw7I,GAA6C,IAAI3E,GACrD72I,KAAKg6I,GACLh6I,KAAKo5I,GACLp5I,KAAKs5I,GACLt5I,KAAKm6I,GACLn6I,KAAKo6I,GACLp6I,KAAK86I,IACJz5G,IACGrhC,KAAKg6I,GAAqB34G,EAC1BrhC,KAAKisF,GAAa3oE,kBAAoBtjB,KAAKg6I,GAC3Ch6I,KAAKi7I,KACLj7I,KAAKk7I,IAA0B,IAEnC,KACIl7I,KAAKm7I,YAAa,EAClBp2F,YAAW,KAAQ/kD,KAAKm7I,YAAa,CAAK,GAAK,GAAG,IAEtD,CAACvE,EAAwBP,EAA+Bz/H,EAAWC,EAAWw8F,EAAWE,KACrF,MAAMkoC,EAAapoC,EAAI,EACvBgjC,EAAIgF,YACJhF,EAAIiF,OAAO1kI,EAAGC,GACdw/H,EAAIkF,OAAO3kI,EAAIy8F,EAAIooC,EAAI5kI,GACvBw/H,EAAIkF,OAAO3kI,EAAIy8F,EAAGx8F,EAAI08F,EAAI,GAC1B8iC,EAAIkF,OAAO3kI,EAAIy8F,EAAIooC,EAAI5kI,EAAI08F,GAC3B8iC,EAAIkF,OAAO3kI,EAAGC,EAAI08F,GAClB8iC,EAAIljH,MAAM,IAGVnzB,KAAA07I,GAA2C,IAAI7E,GACnD72I,KAAKi6I,GACLj6I,KAAKo5I,GACLp5I,KAAKs5I,GACLt5I,KAAKm6I,GACLn6I,KAAKo6I,GACLp6I,KAAK+6I,IACJ15G,IACGrhC,KAAKi6I,GAAmB54G,EACxBrhC,KAAKisF,GAAa1oE,gBAAkBvjB,KAAKi6I,GACzCj6I,KAAKi7I,KACLj7I,KAAKk7I,IAA0B,IAEnC,KACIl7I,KAAKm7I,YAAa,EAClBp2F,YAAW,KAAQ/kD,KAAKm7I,YAAa,CAAK,GAAK,GAAG,IAEtD,CAACvE,EAAwBP,EAA+Bz/H,EAAWC,EAAWw8F,EAAWE,KACrF,MAAMkoC,EAAapoC,EAAI,EACvBgjC,EAAIgF,YACJhF,EAAIiF,OAAO1kI,EAAIy8F,EAAGx8F,GAClBw/H,EAAIkF,OAAO3kI,EAAIy8F,EAAGx8F,EAAI08F,GACtB8iC,EAAIkF,OAAO3kI,EAAI6kI,EAAI5kI,EAAI08F,GACvB8iC,EAAIkF,OAAO3kI,EAAGC,EAAI08F,EAAI,GACtB8iC,EAAIkF,OAAO3kI,EAAI6kI,EAAI5kI,GACnBw/H,EAAIljH,MAAM,IAGVnzB,KAAsB27I,IAAY,EAElC37I,KAAe47I,GAAsB3F,GAAO,CAAE7iH,MAAOpzB,KAAKo5I,GAAsB/lH,OAAQrzB,KAAKq5I,GAAuB/zH,MAAO,oDAC3HtlB,KAAgB67I,GAAoC,KACpD77I,KAAc87I,GAAsB7F,GAAO,CAAE7iH,MAAOpzB,KAAKo5I,GAAsB/lH,OAAQrzB,KAAKq5I,GAAuB/zH,MAAO,uEAC1HtlB,KAAe+7I,GAAoC,KACnD/7I,KAAkBg8I,GAAmBzpH,GAAI,CAAEjN,MAAO,oHAAoHwB,GAAYuJ,uBACtLrwB,KAAK47I,GACL57I,KAAK87I,IAED97I,KAAAi8I,GAA0C7/C,GAAM,CAAE92E,MAAO,wCAAyCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,IAAKxT,MAAO,IAAKo5F,KAAM,YACvJ18F,KAAak8I,GAAsBjgD,GAAO,CAAEhnF,KAAM,SAAUylC,MAAO,UAAWp1B,MAAO,mDACzFS,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,OAAQ75E,MAAO,8BAAgCS,EAAIu7E,OAAO,CAAEiD,IAAK,EAAGC,IAAK,EAAGjD,EAAG,EAAG,eAAgB,EAAG7tE,OAAQ5M,GAAYgJ,YAAaqD,KAAM,SAAWpN,EAAI6N,KAAK,CAAEF,OAAQ5M,GAAYgJ,YAAa,eAAgB,EAAG82E,EAAG,4CAA6CzzE,KAAM,WAEzVnzB,KAAcm8I,GAAsBlgD,GAAO,CAAEhnF,KAAM,SAAUylC,MAAO,WAAYp1B,MAAO,mDAC3FS,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,OAAQ75E,MAAO,8BAAgCS,EAAIu7E,OAAO,CAAEiD,IAAK,EAAGC,IAAK,EAAGjD,EAAG,EAAG,eAAgB,EAAG7tE,OAAQ5M,GAAYgJ,YAAaqD,KAAM,SAAWpN,EAAI6N,KAAK,CAAEF,OAAQ5M,GAAYgJ,YAAa,eAAgB,EAAG82E,EAAG,6BAA8BzzE,KAAM,WAE1UnzB,KAAAo8I,GAAoCngD,GAAO,CAAEhnF,KAAM,SAAUylC,MAAO,YAAap1B,MAAO,mDAAqD,QACpItlB,KAAeq8I,GAAsB//C,GAAO,CAAEh3E,MAAO,kDAClEi3E,GAAO,CAAEj5F,MAAO,GAAK,QACrBi5F,GAAO,CAAEj5F,MAAO,GAAK,aACrBi5F,GAAO,CAAEj5F,MAAO,GAAK,aACrBi5F,GAAO,CAAEj5F,MAAO,GAAK,mBAEjBtD,KAAmBs8I,GAAqBlgD,GAAM,CAAE92E,MAAO,+CAAgDrQ,KAAM,SAAU3R,MAAOtD,KAAK+5I,GAAsBxsI,IAAK,IAAKmvF,KAAM,MACzK18F,KAAiBu8I,GAAqBngD,GAAM,CAAE92E,MAAO,+CAAgDrQ,KAAM,SAAU3R,MAAOtD,KAAKg6I,GAAoBzsI,IAAK,IAAKmvF,KAAM,MACrK18F,KAAew8I,GAAqBpgD,GAAM,CAAE92E,MAAO,+CAAgDrQ,KAAM,SAAU3R,MAAOtD,KAAKi6I,GAAkB1sI,IAAK,IAAKmvF,KAAM,MACjK18F,KAAAy8I,GAAsCrgD,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,mEACvEtlB,KAAA08I,GAAqCzgD,GAAO,CAAE32E,MAAO,cAAerQ,KAAM,WAC1EjV,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,eAAiB,QACvFtlB,KAAuB28I,GAAmBpqH,GAAI,CAAEjN,MAAO,wCAC3D,qBAEItlB,KAAsB48I,GAAmBrqH,GAC7CA,GAAI,CAAEjN,MAAO,8GACTiN,GAAI,CAAEjN,MAAO,iEAAiEwB,GAAYiJ,kBACtF,gEAGR/vB,KAAKg7I,GAAmB/E,OACxBj2I,KAAKg8I,GACLh8I,KAAKw7I,GAAiBvF,OACtBj2I,KAAK07I,GAAezF,OACpB1jH,GAAI,CAAEjN,MAAO,2GACTtlB,KAAKi8I,GACLj8I,KAAKk8I,GACLl8I,KAAKm8I,GACLn8I,KAAKo8I,IAET7pH,GAAI,CAAEjN,MAAO,8GACTiN,GAAI,CAAEjN,MAAO,0EACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,oCAAsC,aAC5G9vB,KAAKq8I,IAET9pH,GAAI,CAAEjN,MAAO,0EACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,oCAAsC,UAC5G9vB,KAAKs8I,IAET/pH,GAAI,CAAEjN,MAAO,0EACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,oCAAsC,cAC5G9vB,KAAKu8I,IAEThqH,GAAI,CAAEjN,MAAO,0EACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,oCAAsC,YAC5G9vB,KAAKw8I,IAETjqH,GAAI,CAAEjN,MAAO,0EACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,oCAAsC,aAC5G9vB,KAAKy8I,IAETlqH,GAAI,CAAEjN,MAAO,mGACTtlB,KAAK08I,MAIV18I,KAASg0B,UAAmBzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACzEiN,GACI4pE,GAAG,CAAE72E,MAAO,yBAA2B,iBACvCtlB,KAAK28I,GACL38I,KAAK48I,GACLrqH,GAAI,CAAEjN,MAAO,+EAAiFtlB,KAAK68F,KAEvG78F,KAAK48F,IAGF58F,KAAUm7I,YAAY,EAuErBn7I,KAAA68I,GAAyBjmI,IAC7B,MAAM2gB,EAAYv3B,KAAKw5I,GACvB,OAAI5iI,GAAK,GAAKA,EAAI2gB,EACPv3B,KAAKu5I,GAAepuI,KAAK0hB,MAAMjW,IAE/B,CACV,EAGG5W,KAAA88I,GAAyB,CAACnoC,EAAYE,KAC1C,MAAMt9E,EAAYv3B,KAAKw5I,GACjBn9G,EAAYlxB,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIgqB,EAAGpsB,KAAKgS,KAAKw3F,KAC9Cr4E,EAAYnxB,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIgqB,EAAGpsB,KAAKgS,KAAK03F,KACpD,GAAIx4E,GAAKC,EAAG,MAAO,CAAC,EAAG,GACvB,IAAIs4E,EAAa50G,KAAKu5I,GAAel9G,GACjCy4E,EAAaF,EACjB,IAAK,IAAI/pG,EAAYwxB,EAAI,EAAGxxB,EAAIyxB,EAAGzxB,IAAK,CACpC,MAAMw2B,EAAYrhC,KAAKu5I,GAAe1uI,GACtC+pG,EAAKzpG,KAAKoC,IAAIqnG,EAAIvzE,GAClByzE,EAAK3pG,KAAK2L,IAAIg+F,EAAIzzE,EACrB,CACD,MAAO,CAACuzE,EAAIE,EAAG,EAGZ90G,KAAO+8F,QAAG,KACb/8F,KAAKg7I,GAAmBj+C,UACxB/8F,KAAKw7I,GAAiBz+C,UACtB/8F,KAAK07I,GAAe3+C,UACpB/8F,KAAKg0B,UAAUgpE,oBAAoB,UAAWh9F,KAAKo9F,IACnDp9F,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKi8I,GAAsBj/C,oBAAoB,QAASh9F,KAAK+8I,IAC7D/8I,KAAKk8I,GAAcl/C,oBAAoB,QAASh9F,KAAKg9I,IACrDh9I,KAAKm8I,GAAen/C,oBAAoB,QAASh9F,KAAKi9I,IACtDj9I,KAAKo8I,GAAep/C,oBAAoB,QAASh9F,KAAKk9I,IACtDl9I,KAAKq8I,GAAgBr/C,oBAAoB,SAAUh9F,KAAKm9I,IACxDn9I,KAAKs8I,GAAoBt/C,oBAAoB,SAAUh9F,KAAKo9I,IAC5Dp9I,KAAKu8I,GAAkBv/C,oBAAoB,SAAUh9F,KAAKq9I,IAC1Dr9I,KAAKw8I,GAAgBx/C,oBAAoB,SAAUh9F,KAAKs9I,IACxDt9I,KAAKy8I,GAAkBz/C,oBAAoB,QAASh9F,KAAKu9I,IACzDv9I,KAAK08I,GAAgB1/C,oBAAoB,QAASh9F,KAAKw9I,IACvDx9I,KAAK87I,GAAe9+C,oBAAoB,YAAah9F,KAAKy9I,IAC1Dz9I,KAAK87I,GAAe9+C,oBAAoB,YAAah9F,KAAK09I,IAC1D19I,KAAK87I,GAAe9+C,oBAAoB,UAAWh9F,KAAK29I,IACxD39I,KAAK87I,GAAe9+C,oBAAoB,aAAch9F,KAAK49I,IAC3D59I,KAAK87I,GAAe9+C,oBAAoB,YAAah9F,KAAK69I,IAC1D79I,KAAK87I,GAAe9+C,oBAAoB,WAAYh9F,KAAK89I,IACzD99I,KAAK87I,GAAe9+C,oBAAoB,cAAeh9F,KAAK89I,GAAsB,EAG9E99I,KAAM88F,GAAG,KACb98F,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKsuD,MAAM,EAGZnhF,KAAYi9F,GAAG,KACnB,GAAKj9F,KAAK27I,GAeN37I,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKsuD,WAhBoB,CAC9BnhF,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAKisF,GAAazoE,iBAAmBxjB,KAAKy5I,GAC1Cz5I,KAAKisF,GAAavoE,oBAAsB1jB,KAAK05I,GAC7C15I,KAAKisF,GAAa3oE,kBAAoBtjB,KAAK25I,GAC3C35I,KAAKisF,GAAa1oE,gBAAkBvjB,KAAK45I,GACzC55I,KAAKisF,GAAaxoE,sBAAwBzjB,KAAK65I,GAC/C,MAAMx7C,EAAqB,IAAI7c,GAC/B6c,EAAM5c,OAAO,IAAI4Z,GAAuBr7F,KAAK6yB,EAAM7yB,KAAK85I,KACxDz7C,EAAM5c,OAAO,IAAI+Z,GAA0Bx7F,KAAK6yB,EAAM7yB,KAAK+5I,KAC3D17C,EAAM5c,OAAO,IAAI6Z,GAAwBt7F,KAAK6yB,EAAM7yB,KAAKg6I,KACzD37C,EAAM5c,OAAO,IAAI8Z,GAAsBv7F,KAAK6yB,EAAM7yB,KAAKi6I,KACvD57C,EAAM5c,OAAO,IAAIga,GAA4Bz7F,KAAK6yB,EAAM7yB,KAAKk6I,KAC7Dl6I,KAAK6yB,EAAKi/D,OAAOuM,GAAO,EAC3B,CAGA,EAGGr+F,KAAew9I,GAAG,KACtBx9I,KAAKugG,GAAYI,aACjB3gG,KAAK+9I,IAAuB,EAGxB/9I,KAAeg+I,GAAG,KACtB,GAAIh+I,KAAK27I,GAAwB,OAEjC,MAAM/E,EAAyB52I,KAAK47I,GAC9BvF,EAAgCr2I,KAAK67I,GACrCxoC,EAAYujC,EAAIxjH,MAChBmgF,EAAYqjC,EAAIvjH,OAChBqkH,EAAc13I,KAAKm6I,GACnBvC,EAAc53I,KAAKo6I,GACnB6D,EAAcj+I,KAAKq6I,GACnB6D,EAAcl+I,KAAKs6I,GAEnB6D,GAAuBvG,EAAMF,GAAOrkC,EAE1CgjC,EAAIyB,UAAU,EAAG,EAAGzkC,EAAGE,GAGvB8iC,EAAIE,UAAYzvH,GAAYW,YAAY,0BACxC4uH,EAAIG,SAAS,EAAGjjC,EAAI,EAAGF,EAAG,GAE1B,MAAM+qC,EAAwBt3H,GAAYW,YAAY,kBACtD,GAAI02H,EAAc,EAAG,CAEjB9H,EAAIgI,YAAcD,EAClB/H,EAAIiI,UAAY,EAChB,IAAIC,GAAqB,EACzBlI,EAAIgF,YACJ,IAAK,IAAI92C,EAAa,EAAGA,EAAK8O,EAAG9O,IAAM,CACnC,MAAMi6C,EAAa9G,EAAMnzC,EAAK45C,EAExB35C,EAAa+O,GADAvzG,KAAK68I,GAAsB2B,GACjBP,GAAO1qC,GAAK2qC,EAAMD,GAC3CM,GACAlI,EAAIiF,OAAO/2C,EAAIC,GACf+5C,GAAY,GAEZlI,EAAIkF,OAAOh3C,EAAIC,EAEtB,CACD6xC,EAAI3iH,QACP,KAAM,CAEH2iH,EAAIE,UAAY6H,EAChB,IAAIK,EAAsB,KACtBC,EAAsB,KAC1B,IAAK,IAAIn6C,EAAa,EAAGA,EAAK8O,EAAG9O,IAAM,CACnC,MAAMi6C,EAAa9G,EAAMnzC,EAAK45C,GACvBQ,EAAKC,GAAyB5+I,KAAK88I,GACtC0B,EAAKL,EAAc,EAAGK,EAAKL,EAAc,GAEvCU,EAAc1zI,KAAK2L,KAAK,EAAG3L,KAAKoC,IAAIgmG,EAAGA,GAAKqrC,EAAMX,GAAO1qC,GAAK2qC,EAAMD,KACpEa,EAAc3zI,KAAK2L,KAAK,EAAG3L,KAAKoC,IAAIgmG,EAAGA,GAAKorC,EAAMV,GAAO1qC,GAAK2qC,EAAMD,KACpEc,EAAe5zI,KAAK0hB,MAAMgyH,GAC1BG,EAAe7zI,KAAK2L,IAAI3L,KAAKgS,KAAK2hI,GAAMC,EAAO,GAC/CE,EAAuB,MAARP,EAAeK,EAAO5zI,KAAKoC,IAAIwxI,EAAML,GACpDQ,EAAuB,MAART,EAAeO,EAAO7zI,KAAK2L,IAAIkoI,EAAMP,GACpDzG,EAAa7sI,KAAK2L,IAAI,EAAGooI,EAAOD,GACtC5I,EAAIG,SAASjyC,EAAI06C,EAAM,EAAGjH,GAC1ByG,EAAOQ,EACPP,EAAOQ,CACV,CACJ,GAGGl/I,KAAci7I,GAAG,KACrB,MAAMrE,EAAyB52I,KAAK87I,GAC9BzF,EAAgCr2I,KAAK+7I,GACrC1oC,EAAYujC,EAAIxjH,MAChBmgF,EAAYqjC,EAAIvjH,OAChBqkH,EAAc13I,KAAKm6I,GACnBvC,EAAc53I,KAAKo6I,GAEnB+E,EAAan/I,KAAK+5I,GAClBqF,EAAap/I,KAAKg6I,GAClBqF,EAAar/I,KAAKi6I,GAExB5D,EAAIyB,UAAU,EAAG,EAAGzkC,EAAGE,GAEvB8iC,EAAIE,UAAYzvH,GAAYW,YAAY,iBACxC,MAAM63H,EAAcn0I,KAAK0hB,OAAOsyH,EAAKzH,GAAOrkC,GAAKukC,EAAMF,IAGjD6H,EAAchsC,EACpB8iC,EAAIG,SAAS8I,EAHO,EACA,EAEQC,GAE5BlJ,EAAIE,UAAYzvH,GAAYW,YAAY,iBACxC4uH,EAAImJ,YAAc,GAClB,MAAMC,EAAet0I,KAAK0hB,OAAOuyH,EAAK1H,GAAOrkC,GAAKukC,EAAMF,IAElDgI,EAAcD,EAEdE,EAHex0I,KAAK0hB,OAAOwyH,EAAK3H,GAAOrkC,GAAKukC,EAAMF,IAG7B+H,EACrBG,EAAcrsC,EACpB8iC,EAAIG,SAASkJ,EAHO,EAGGC,EAAKC,GAC5BvJ,EAAImJ,YAAc,EAEc,MAA5Bx/I,KAAK26I,IAA2D,MAA5B36I,KAAK46I,KACzCvE,EAAIE,UAAYzvH,GAAYW,YAAY,wBACxC4uH,EAAImJ,YAAc,GAClBnJ,EAAIG,SAASx2I,KAAK26I,GAAqB,EAAG36I,KAAK46I,GAAsB56I,KAAK26I,GAAqBpnC,GAC/F8iC,EAAImJ,YAAc,EACrB,EAGGx/I,KAAwBk7I,GAAG,KAC/Bl7I,KAAKq8I,GAAgB/4I,MAAQ,GAAKtD,KAAK85I,GACvC95I,KAAKs8I,GAAoBh5I,MAAQ,GAAKtD,KAAK+5I,GAC3C/5I,KAAKu8I,GAAkBj5I,MAAQ,GAAKtD,KAAKg6I,GACzCh6I,KAAKw8I,GAAgBl5I,MAAQ,GAAKtD,KAAKi6I,GACvCj6I,KAAKy8I,GAAkBn+C,QAAUt+F,KAAKk6I,EAAsB,EAGxDl6I,KAAA+8I,GAAoC54I,IACxC,MAAM07I,EAAoB10I,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAI,GAAuBpJ,EAAMqc,OAAQld,QAC9Ew8I,EAA4B30I,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKy6I,GAA4BoF,EAAY7/I,KAAKy6I,KACzGz6I,KAAKw6I,GAA0BrvI,KAAKoC,IAAIvN,KAAKy6I,GAA4BqF,GACzE9/I,KAAKi8I,GAAsB34I,MAAQ,GAAMtD,KAAKw6I,GAA0Bx6I,KAAKy6I,GAC7Ez6I,KAAKm6I,GAAsB,EAAIn6I,KAAKw6I,GACpCx6I,KAAKo6I,GAAsBp6I,KAAKu6I,GAAyBv6I,KAAKw6I,GAC9Dx6I,KAAK+/I,KACL//I,KAAKqyG,IAAS,EAGVryG,KAAAg9I,GAAsB74I,IAC1B,MAAM67I,EAA2B70I,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKw5I,GAAsBx5I,KAAKu6I,GAAyB,IAC/Gv6I,KAAKu6I,GAAyByF,EAC9BhgJ,KAAKy6I,GAA6Bz6I,KAAKw5I,GAAuBx5I,KAAKu6I,GACnE,MAAMtmC,EAAkBj0G,KAAKm6I,GAAuBn6I,KAAKo5I,GAAuB,GAAMp5I,KAAKo6I,GAAsBp6I,KAAKm6I,IAAuBn6I,KAAKo5I,GAClJp5I,KAAKw6I,GAA0BrvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKy6I,GAA4BxmC,EAAWj0G,KAAKo5I,GAAuB,EAAKp5I,KAAKu6I,GAAyBv6I,KAAKo5I,KACpKp5I,KAAKm6I,GAAsB,EAAIn6I,KAAKw6I,GACpCx6I,KAAKo6I,GAAsBp6I,KAAKu6I,GAAyBv6I,KAAKw6I,GAC9Dx6I,KAAKi8I,GAAsB34I,MAAQ,GAAMtD,KAAKw6I,GAA0Bx6I,KAAKy6I,GAC7Ez6I,KAAK+/I,KACL//I,KAAKqyG,IAAS,EAGVryG,KAAAi9I,GAAuB94I,IAC3B,MAAM67I,EAA2B70I,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKw5I,GAAoD,EAA9Bx5I,KAAKu6I,KACtFv6I,KAAKu6I,GAAyByF,EAC9BhgJ,KAAKy6I,GAA6Bz6I,KAAKw5I,GAAuBx5I,KAAKu6I,GACnE,MAAMtmC,EAAkBj0G,KAAKm6I,GAAuBn6I,KAAKo5I,GAAuB,GAAMp5I,KAAKo6I,GAAsBp6I,KAAKm6I,IAAuBn6I,KAAKo5I,GAClJp5I,KAAKw6I,GAA0BrvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKy6I,GAA4BxmC,EAAWj0G,KAAK47I,GAAgBxoH,MAAQ,EAAKpzB,KAAKu6I,GAAyBv6I,KAAKo5I,KACrKp5I,KAAKm6I,GAAsB,EAAIn6I,KAAKw6I,GACpCx6I,KAAKo6I,GAAsBp6I,KAAKu6I,GAAyBv6I,KAAKw6I,GAC1Dx6I,KAAKu6I,KAA2Bv6I,KAAKw5I,GACrCx5I,KAAKi8I,GAAsB34I,MAAQ,IAEnCtD,KAAKi8I,GAAsB34I,MAAQ,GAAMtD,KAAKw6I,GAA0Bx6I,KAAKy6I,GAEjFz6I,KAAK+/I,KACL//I,KAAKqyG,IAAS,EAGVryG,KAAAk9I,GAAuB/4I,IAC3B,MAAM67I,EAA2BhgJ,KAAKw5I,GACtCx5I,KAAKu6I,GAAyByF,EAC9BhgJ,KAAKy6I,GAA6Bz6I,KAAKw5I,GAAuBx5I,KAAKu6I,GACnEv6I,KAAKw6I,GAA0BrvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKy6I,GAA4B,IACrFz6I,KAAKm6I,GAAsB,EAAIn6I,KAAKw6I,GACpCx6I,KAAKo6I,GAAsBp6I,KAAKu6I,GAAyBv6I,KAAKw6I,GAC1Dx6I,KAAKu6I,KAA2Bv6I,KAAKw5I,GACrCx5I,KAAKi8I,GAAsB34I,MAAQ,IAEnCtD,KAAKi8I,GAAsB34I,MAAQ,GAAMtD,KAAKw6I,GAA0Bx6I,KAAKy6I,GAEjFz6I,KAAK+/I,KACL//I,KAAKqyG,IAAS,EAGVryG,KAAAm9I,GAA8Bh5I,IAClC,MACM6hF,GADgD7hF,EAAMqc,OAC1Bld,MAClCtD,KAAK85I,GAAoB9zD,EACzBhmF,KAAKisF,GAAazoE,iBAAmBxjB,KAAK85I,EAAiB,EAGvD95I,KAAAo9I,GAAkCj5I,IACtC,MAAMyf,EAA8Czf,EAAMqc,OACpDwlE,EAAmBhmF,KAAK66I,IAAuBj3H,EAAQtgB,OAC7DtD,KAAK+5I,GAAuB/zD,EAC5BhmF,KAAKisF,GAAavoE,oBAAsB1jB,KAAK+5I,GAC7Cn2H,EAAQtgB,MAAQ,GAAK0iF,EACrBhmF,KAAKg7I,GAAmBhwF,OAAOg7B,GAC/BhmF,KAAKg7I,GAAmBpkH,SACxB52B,KAAKi7I,IAAgB,EAGjBj7I,KAAAq9I,GAAgCl5I,IACpC,MAAMyf,EAA8Czf,EAAMqc,OACpDwlE,EAAmBhmF,KAAK86I,IAAqBl3H,EAAQtgB,OAC3DtD,KAAKg6I,GAAqBh0D,EAC1BhmF,KAAKisF,GAAa3oE,kBAAoBtjB,KAAKg6I,GAC3Cp2H,EAAQtgB,MAAQ,GAAK0iF,EACrBhmF,KAAKw7I,GAAiBxwF,OAAOg7B,GAC7BhmF,KAAKw7I,GAAiB5kH,SACtB52B,KAAKi7I,IAAgB,EAGjBj7I,KAAAs9I,GAA8Bn5I,IAClC,MAAMyf,EAA8Czf,EAAMqc,OACpDwlE,EAAmBhmF,KAAK+6I,IAAmBn3H,EAAQtgB,OACzDtD,KAAKi6I,GAAmBj0D,EACxBhmF,KAAKisF,GAAa1oE,gBAAkBvjB,KAAKi6I,GACzCr2H,EAAQtgB,MAAQ,GAAK0iF,EACrBhmF,KAAK07I,GAAe1wF,OAAOg7B,GAC3BhmF,KAAK07I,GAAe9kH,SACpB52B,KAAKi7I,IAAgB,EAGjBj7I,KAAAu9I,GAAgCp5I,IACpC,MACM6hF,EAD8C7hF,EAAMqc,OACxB89E,QAClCt+F,KAAKk6I,GAAyBl0D,EAC9BhmF,KAAKisF,GAAaxoE,sBAAwBzjB,KAAKk6I,EAAsB,EAGjEl6I,KAAAy9I,GAA0Bt5I,IAC9B,IAAKnE,KAAK06I,GAAqB,OAE/B,MAAMrnC,EAAYrzG,KAAK87I,GAAe1oH,MAEhCklH,EAAkBt4I,KAAK87I,GAAezmH,wBACtCkjH,EAAuBllC,EAAIilC,EAAOllH,MAElCulH,IAAex0I,EAAMmxB,SAAWnxB,EAAMoxB,OAAS+iH,EAAO9iH,MAAQ+iH,EAEpEv4I,KAAK46I,GAAsBjC,EAE3B34I,KAAKi7I,IAAgB,EAGjBj7I,KAAA09I,GAA2Bv5I,IAC/BnE,KAAK06I,IAAsB,EAE3B,MAAMrnC,EAAYrzG,KAAK87I,GAAe1oH,MAEhCklH,EAAkBt4I,KAAK87I,GAAezmH,wBACtCkjH,EAAuBllC,EAAIilC,EAAOllH,MAElCulH,IAAex0I,EAAMmxB,SAAWnxB,EAAMoxB,OAAS+iH,EAAO9iH,MAAQ+iH,EAEpEv4I,KAAK26I,GAAsBhC,EAC3B34I,KAAK46I,GAAsBjC,EAE3B34I,KAAKi7I,IAAgB,EAGjBj7I,KAAA29I,GAAyBx5I,IAG7B,IAAKnE,KAAK06I,GAAqB,OAC/B16I,KAAKm7I,YAAa,EAClBp2F,YAAW,KAAQ/kD,KAAKm7I,YAAa,CAAK,GAAK,IAC/Cn7I,KAAK06I,IAAsB,EAE3B,MAAMrnC,EAAYrzG,KAAK87I,GAAe1oH,MAChCskH,EAAc13I,KAAKm6I,GACnBvC,EAAc53I,KAAKo6I,GAEnB9B,EAAkBt4I,KAAK87I,GAAezmH,wBACtCkjH,EAAuBllC,EAAIilC,EAAOllH,MAElCulH,IAAex0I,EAAMmxB,SAAWnxB,EAAMoxB,OAAS+iH,EAAO9iH,MAAQ+iH,EAOpE,GALAv4I,KAAK46I,GAAsBjC,EAE3B34I,KAAK26I,GAAsBxvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAI8lG,EAAGrzG,KAAK26I,KACxD36I,KAAK46I,GAAsBzvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAI8lG,EAAGrzG,KAAK46I,KAEpD56I,KAAK26I,GAAsB36I,KAAK46I,GAAqB,CACrD,MAAMp8D,EAAYx+E,KAAK26I,GACvB36I,KAAK26I,GAAsB36I,KAAK46I,GAChC56I,KAAK46I,GAAsBp8D,CAC9B,CAED,IAAIyhE,GAA8B,EAClC,GAAIjgJ,KAAK46I,GAAsB56I,KAAK26I,GAAsB,EAAG,CACzD,MAAMuF,EAAgBxI,EAAM13I,KAAK26I,IAAuB/C,EAAMF,GAAOrkC,EAC/D8sC,EAAgBzI,EAAM13I,KAAK46I,IAAuBhD,EAAMF,GAAOrkC,EAC/D2sC,EAA2B70I,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKw5I,GAAsB2G,EAAQD,IACzFlgJ,KAAKu6I,GAAyByF,EAC9BhgJ,KAAKy6I,GAA6Bz6I,KAAKw5I,GAAuBx5I,KAAKu6I,GACnE,MAAMtmC,EAAkByjC,EAAO13I,KAAwB,IAAKA,KAAKo6I,GAAsBp6I,KAAKm6I,IAAuBn6I,KAAKo5I,GACxHp5I,KAAKw6I,GAA0BrvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKy6I,GAA4BxmC,IACrFj0G,KAAKm6I,GAAsB,EAAIn6I,KAAKw6I,GACpCx6I,KAAKo6I,GAAsBp6I,KAAKu6I,GAAyBv6I,KAAKw6I,GAC1Dx6I,KAAKu6I,KAA2Bv6I,KAAKw5I,GACrCx5I,KAAKi8I,GAAsB34I,MAAQ,IAEnCtD,KAAKi8I,GAAsB34I,MAAQ,GAAMtD,KAAKw6I,GAA0Bx6I,KAAKy6I,EAEpF,MACGwF,GAAqB,EAGzBjgJ,KAAK26I,GAAsB,KAC3B36I,KAAK46I,GAAsB,KAEtBqF,IACDjgJ,KAAK+/I,KACL//I,KAAKqyG,MAETryG,KAAKi7I,IAAgB,EAGjBj7I,KAAA49I,GAA2Bz5I,IAC/BA,EAAMgxB,iBAENn1B,KAAK06I,IAAsB,EAE3B,MAAMrnC,EAAYrzG,KAAK87I,GAAe1oH,MAEhCklH,EAAkBt4I,KAAK87I,GAAezmH,wBACtCkjH,EAAuBllC,EAAIilC,EAAOllH,MAElCulH,GAAcx0I,EAAMyxB,QAAQ,GAAGN,QAAUgjH,EAAO9iH,MAAQ+iH,EAE9Dv4I,KAAK26I,GAAsBhC,EAC3B34I,KAAK46I,GAAsBjC,EAE3B34I,KAAKi7I,IAAgB,EAGjBj7I,KAAA69I,GAA0B15I,IAC9B,IAAKnE,KAAK06I,GAAqB,OAE/Bv2I,EAAMgxB,iBAEN,MAAMk+E,EAAYrzG,KAAK87I,GAAe1oH,MAEhCklH,EAAkBt4I,KAAK87I,GAAezmH,wBACtCkjH,EAAuBllC,EAAIilC,EAAOllH,MAElCulH,GAAcx0I,EAAMyxB,QAAQ,GAAGN,QAAUgjH,EAAO9iH,MAAQ+iH,EAE9Dv4I,KAAK46I,GAAsBjC,EAE3B34I,KAAKi7I,IAAgB,EAGjBj7I,KAAA89I,GAAyB35I,IAI7B,GAHAA,EAAMgxB,kBAGDn1B,KAAK06I,GAAqB,OAC/B16I,KAAKm7I,YAAa,EAClBp2F,YAAW,KAAQ/kD,KAAKm7I,YAAa,CAAK,GAAK,IAE/Cn7I,KAAK06I,IAAsB,EAE3B,MAAMrnC,EAAYrzG,KAAK87I,GAAe1oH,MAChCskH,EAAc13I,KAAKm6I,GACnBvC,EAAc53I,KAAKo6I,GAKzB,GAHAp6I,KAAK26I,GAAsBxvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAI8lG,EAAGrzG,KAAK26I,KACxD36I,KAAK46I,GAAsBzvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAI8lG,EAAGrzG,KAAK46I,KAEpD56I,KAAK26I,GAAsB36I,KAAK46I,GAAqB,CACrD,MAAMp8D,EAAYx+E,KAAK26I,GACvB36I,KAAK26I,GAAsB36I,KAAK46I,GAChC56I,KAAK46I,GAAsBp8D,CAC9B,CAED,IAAIyhE,GAA8B,EAClC,GAAIjgJ,KAAK46I,GAAsB56I,KAAK26I,GAAsB,EAAG,CACzD,MAAMuF,EAAgBxI,EAAM13I,KAAK26I,IAAuB/C,EAAMF,GAAOrkC,EAC/D8sC,EAAgBzI,EAAM13I,KAAK46I,IAAuBhD,EAAMF,GAAOrkC,EAC/D2sC,EAA2B70I,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKw5I,GAAsB2G,EAAQD,IACzFlgJ,KAAKu6I,GAAyByF,EAC9BhgJ,KAAKy6I,GAA6Bz6I,KAAKw5I,GAAuBx5I,KAAKu6I,GACnE,MAAMtmC,EAAkByjC,EAAO13I,KAAwB,IAAKA,KAAKo6I,GAAsBp6I,KAAKm6I,IAAuBn6I,KAAKo5I,GACxHp5I,KAAKw6I,GAA0BrvI,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIvN,KAAKy6I,GAA4BxmC,IACrFj0G,KAAKm6I,GAAsB,EAAIn6I,KAAKw6I,GACpCx6I,KAAKo6I,GAAsBp6I,KAAKu6I,GAAyBv6I,KAAKw6I,GAC1Dx6I,KAAKu6I,KAA2Bv6I,KAAKw5I,GACrCx5I,KAAKi8I,GAAsB34I,MAAQ,IAEnCtD,KAAKi8I,GAAsB34I,MAAQ,GAAMtD,KAAKw6I,GAA0Bx6I,KAAKy6I,EAEpF,MACGwF,GAAqB,EAGzBjgJ,KAAK26I,GAAsB,KAC3B36I,KAAK46I,GAAsB,KAEtBqF,IACDjgJ,KAAK+/I,KACL//I,KAAKqyG,MAETryG,KAAKi7I,IAAgB,EAGjBj7I,KAAAo9F,GAAmBj5F,IACgB,UAAzBA,EAAMqc,OAAQyE,SAAwC,IAAjB9gB,EAAMk5F,SACrDr9F,KAAKi9F,KAEY,IAAjB94F,EAAMk5F,UACNr9F,KAAKw9I,KACLr5I,EAAMgxB,iBACT,EAGGn1B,KAAqB+9I,GAAG,KACxB/9I,KAAK6yB,EAAK6B,MAAMyxC,SAChBnmE,KAAK08I,GAAgBjqH,UAAUyI,OAAO,cACtCl7B,KAAK08I,GAAgBjqH,UAAUC,IAAI,eACnC1yB,KAAK08I,GAAgBhiG,MAAQ,gBAC7B16C,KAAK08I,GAAgB57C,UAAY,UAGjC9gG,KAAK08I,GAAgBjqH,UAAUyI,OAAO,eACtCl7B,KAAK08I,GAAgBjqH,UAAUC,IAAI,cACnC1yB,KAAK08I,GAAgBhiG,MAAQ,eAC7B16C,KAAK08I,GAAgB57C,UAAY,OACpC,EAGG9gG,KAAwB+/I,GAAG,KAC/B//I,KAAKg7I,GAAmB7C,eAAen4I,KAAKm6I,GAAqBn6I,KAAKo6I,IACtEp6I,KAAKw7I,GAAiBrD,eAAen4I,KAAKm6I,GAAqBn6I,KAAKo6I,IACpEp6I,KAAK07I,GAAevD,eAAen4I,KAAKm6I,GAAqBn6I,KAAKo6I,GAAoB,EAGlFp6I,KAAOqyG,GAAG,KACVryG,KAAK27I,KAET37I,KAAKg+I,KACLh+I,KAAKg7I,GAAmBpkH,SACxB52B,KAAKw7I,GAAiB5kH,SACtB52B,KAAK07I,GAAe9kH,SACpB52B,KAAKi7I,KAAgB,EAnkBrBj7I,KAAK6yB,EAAOA,EACZ7yB,KAAKugG,GAAcA,EACnBvgG,KAAK67I,GAAmB77I,KAAK47I,GAAgBtF,WAAW,MACxDt2I,KAAK+7I,GAAkB/7I,KAAK87I,GAAexF,WAAW,MACtDt2I,KAAKisF,GAAcjsF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACpF,MAAMlkF,EAAwBF,EAAOK,gBAAgB3B,KAAKisF,GAAY5qF,UAEtE,KADwE,IAAhCG,EAAYklD,iBAAqD,GAAzBllD,EAAYkD,YAA+E,IAAzD5E,EAAmBG,YAAYD,KAAKisF,GAAY5qF,UAE9JrB,KAAK28I,GAAwBr3H,MAAMq/E,QAAU,GAC7C3kG,KAAK48I,GAAuBt3H,MAAMq/E,QAAU,OAC5C3kG,KAAK27I,IAAyB,MAC3B,CACH37I,KAAK28I,GAAwBr3H,MAAMq/E,QAAU,OAC7C3kG,KAAK48I,GAAuBt3H,MAAMq/E,QAAU,GAC5C3kG,KAAK27I,IAAyB,EAC9B37I,KAAKu5I,GAAgB/3I,EAAYc,QACjCtC,KAAKw5I,GAAsBx5I,KAAKu5I,GAAc12I,OAAS,EACvD7C,KAAKy5I,GAA2Bz5I,KAAKisF,GAAYzoE,iBACjDxjB,KAAK05I,GAA8B15I,KAAKisF,GAAYvoE,oBACpD1jB,KAAK25I,GAA4B35I,KAAKisF,GAAY3oE,kBAClDtjB,KAAK45I,GAA0B55I,KAAKisF,GAAY1oE,gBAChDvjB,KAAK65I,GAAgC75I,KAAKisF,GAAYxoE,sBACtDzjB,KAAK85I,GAAoB95I,KAAKy5I,GAC9Bz5I,KAAK+5I,GAAuB/5I,KAAK05I,GACjC15I,KAAKg6I,GAAqBh6I,KAAK25I,GAC/B35I,KAAKi6I,GAAmBj6I,KAAK45I,GAC7B55I,KAAKk6I,GAAyBl6I,KAAK65I,GACnC,MAAMuG,EAAmCpgJ,KAAK88I,GAAuB,EAAG98I,KAAKw5I,IACvE6G,EAA2Bl1I,KAAK2L,IAAI3L,KAAKC,IAAIg1I,EAAe,IAAKj1I,KAAKC,IAAIg1I,EAAe,KAAO,IACtGA,EAAe,IAAMC,EACrBD,EAAe,GAAKC,EACpBrgJ,KAAKm6I,GAAsB,EAC3Bn6I,KAAKo6I,GAAsBp6I,KAAKw5I,GAChCx5I,KAAKq6I,GAAsB+F,EAAe,GAC1CpgJ,KAAKs6I,GAAsB8F,EAAe,GAC1CpgJ,KAAKu6I,GAAyBv6I,KAAKo6I,GAAsBp6I,KAAKm6I,GAC9Dn6I,KAAKw6I,GAA0B,EAC/Bx6I,KAAKy6I,GAA6Bz6I,KAAKw5I,GAAsBx5I,KAAKu6I,GAClEv6I,KAAKg7I,GAAmBhwF,OAAOhrD,KAAK+5I,IACpC/5I,KAAKw7I,GAAiBxwF,OAAOhrD,KAAKg6I,IAClCh6I,KAAK07I,GAAe1wF,OAAOhrD,KAAKi6I,IAChCj6I,KAAK+/I,IACR,CACD//I,KAAK+9I,KACL/9I,KAAKqyG,KACLryG,KAAKk7I,KACLl7I,KAAKg0B,UAAU9vB,iBAAiB,UAAWlE,KAAKo9F,IAChDp9F,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKi8I,GAAsB/3I,iBAAiB,QAASlE,KAAK+8I,IAC1D/8I,KAAKk8I,GAAch4I,iBAAiB,QAASlE,KAAKg9I,IAClDh9I,KAAKm8I,GAAej4I,iBAAiB,QAASlE,KAAKi9I,IACnDj9I,KAAKo8I,GAAel4I,iBAAiB,QAASlE,KAAKk9I,IACnDl9I,KAAKq8I,GAAgBn4I,iBAAiB,SAAUlE,KAAKm9I,IACrDn9I,KAAKs8I,GAAoBp4I,iBAAiB,SAAUlE,KAAKo9I,IACzDp9I,KAAKu8I,GAAkBr4I,iBAAiB,SAAUlE,KAAKq9I,IACvDr9I,KAAKw8I,GAAgBt4I,iBAAiB,SAAUlE,KAAKs9I,IACrDt9I,KAAKy8I,GAAkBv4I,iBAAiB,QAASlE,KAAKu9I,IACtDv9I,KAAK08I,GAAgBx4I,iBAAiB,QAASlE,KAAKw9I,IACpD34F,OAAO3gD,iBAAiB,YAAalE,KAAKy9I,IAC1Cz9I,KAAK87I,GAAe53I,iBAAiB,YAAalE,KAAK09I,IACvD74F,OAAO3gD,iBAAiB,UAAWlE,KAAK29I,IACxC39I,KAAK87I,GAAe53I,iBAAiB,aAAclE,KAAK49I,IACxD59I,KAAK87I,GAAe53I,iBAAiB,YAAalE,KAAK69I,IACvD79I,KAAK87I,GAAe53I,iBAAiB,WAAYlE,KAAK89I,IACtD99I,KAAK87I,GAAe53I,iBAAiB,cAAelE,KAAK89I,G,ECvejE,MAAMvrH,IAAEA,GAAG4pE,GAAEA,GAAED,KAAEA,GAAIE,MAAEA,GAAKH,OAAEA,IAAWv2E,E,MAE5B46H,GAoBT,WAAAvgJ,CAAY8yB,GAnBK7yB,KAAiBugJ,GAAW,IAGrCvgJ,KAASwgJ,GAA0C,KACnDxgJ,KAAmCygJ,IAAY,EACtCzgJ,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBAC5Dj0B,KAAkB0gJ,GAAmBnuH,KACrCvyB,KAAiB2gJ,GAAmBpuH,GAAI,CAAEjN,MAAO,qCAAuC,2CACzFtlB,KAASg0B,UAAmBzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iBACzEiN,GACI4pE,GAAG,yBACH5pE,GAAI,CAAEjN,MAAO,qFACTtlB,KAAK2gJ,GACLpuH,GAAI,CAAEjN,MAAO,uDAAyDtlB,KAAK0gJ,MAGnF1gJ,KAAK48F,IAUD58F,KAAM88F,GAAG,KACb98F,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKsuD,MAAM,EAGbnhF,KAAO+8F,QAAG,KACb,KAA8C,OAAvC/8F,KAAK0gJ,GAAmBp6H,YAC3BtmB,KAAK0gJ,GAAmB/tH,YAAY3yB,KAAK0gJ,GAAmBp6H,YAGhEtmB,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD8jD,cAAc5gJ,KAAKwgJ,GAAW,EAG1BxgJ,KAAOqyG,GAAG,KACd,MAAMwuC,EAA4D,MAA9BjjI,EAAa8/B,cAMjD,GAJImjG,IACA7gJ,KAAK2gJ,GAAkBr7H,MAAMq/E,QAAU,IAGvCk8C,GAAsB7gJ,KAAKygJ,GAE3B,YADAG,cAAc5gJ,KAAKwgJ,IAIvB,IAAIM,GAAkC,EACtC,IAAK,IAAIjgJ,EAAwB,EAAGA,EAAgBS,EAAOC,UAAUsB,OAAQhC,IAAiB,CAC1F,MAAMQ,EAAqBC,EAAOC,UAAUV,GAC5C,IAAiC,IAA7BQ,EAASqlD,kBAAmD,IAAvBrlD,EAASqD,UAAoB,SAEtE,GAAiB,IAD0B5E,EAAmBG,YAAYY,GACvB,CAC/CigJ,GAAyB,EACzB,KACH,CACJ,CAKD,KAA8C,OAAvC9gJ,KAAK0gJ,GAAmBp6H,YAC3BtmB,KAAK0gJ,GAAmB/tH,YAAY3yB,KAAK0gJ,GAAmBp6H,YAGhE,IAAK,IAAIzlB,EAAwB,EAAGA,EAAgBS,EAAOC,UAAUsB,OAAQhC,IAAiB,CAC1F,MAAMQ,EAAqBC,EAAOC,UAAUV,GAC5C,IAAiC,IAA7BQ,EAASqlD,kBAAmD,IAAvBrlD,EAASqD,UAAoB,SACtE,MAAMq8I,EAAqB1/I,EAASmD,KAC9B5D,EAAcd,EAAmBI,SAASW,GAC1CmgJ,EAAwBphJ,EAA2BE,EAAmBG,YAAYY,IAClFogJ,EAA+B7kD,GAAM,CAAE92E,MAAO,8BAA8BwB,GAAYgJ,kCAAkChJ,GAAY6I,oDAAoD7I,GAAYuJ,gJAAiJ/sB,MAAO1C,EAAK85C,MAAO95C,EAAKw6G,UAAU,IACzX8lC,EAA+C,WAAlBF,EAA6Bl6H,GAAY4K,iBAAmB5K,GAAYiJ,cACrGoxH,EAAwCjlD,GAAK,CAAE52E,MAAO,8BAA8B47H,KAAwBF,GAC5GI,EAAkC7uH,GAAI,CAAEjN,MAAO,oDAAoDwB,GAAYuJ,2CACjHkC,GAAI,CACA0B,MAAO,gCACP3O,MAAO,gCAAgCwB,GAAYiJ,iFACnD2qB,MAAOqmG,GAEPA,GAEJxuH,GAAI,CAAEjN,MAAO,2GACTiN,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYgJ,gBAAkB,OACxEmxH,GAEJ1uH,GAAI,CAAEjN,MAAO,2GACTiN,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYgJ,gBAAkB,UACxEqxH,IAGRnhJ,KAAK0gJ,GAAmBz8I,YAAYm9I,EACvC,CAEGN,IACA9gJ,KAAKygJ,IAAsC,EAC9C,EAjFDzgJ,KAAK6yB,EAAOA,EACZ7yB,KAAKwgJ,GAAYa,aAAY,IAAMrhJ,KAAKqyG,MAAWryG,KAAKugJ,IACxDvgJ,KAAKqyG,KACLryG,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,G,ECzB1D,MAAMvqE,IAAEA,GAAG6pE,MAAEA,GAAKH,OAAEA,GAAM5/D,EAAEA,GAAC0gG,KAAEA,GAAIukB,SAAEA,GAAQC,QAAEA,GAAOC,QAAEA,GAAOtlD,KAAEA,GAAIulD,GAAEA,GAAEC,GAAEA,GAAEplD,OAAEA,GAAMC,OAAEA,GAAMJ,GAAEA,IAAOz2E,E,MAyBzFi8H,GAmHT,WAAA5hJ,CAAY8yB,GAER,GApHa7yB,KAAW4hJ,GAAW,GAGtB5hJ,KAAQ6hJ,GAAkB,GAC1B7hJ,KAA0B8hJ,GAAwB,GAClD9hJ,KAAa48F,GAAsBX,GAAO,CAAEhoE,MAAO,iBACnDj0B,KAAA68F,GAAiCZ,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,eAAiB,QACvFtlB,KAAgB+hJ,GAAsB9lD,GAAO,CAAE32E,MAAO,iDAAmD,cACzGtlB,KAAegiJ,GAAmBzvH,KAClCvyB,KAAyBiiJ,GAAsBhmD,GAAO,CAAE32E,MAAO,qEAAuE,wBACtItlB,KAAAkiJ,GAAwC3vH,GAAI,CAAEjN,MAAO,sBAClEtlB,KAAK+hJ,GACL/hJ,KAAKiiJ,IAEQjiJ,KAAiBmiJ,GAAsB9lH,GAAE,CAAEu9E,KAAM,KAAO,2CACxD55G,KAAAoiJ,GAA+B7vH,GAC5CA,GAAI,CAAEjN,MAAO,oIACT,oBAEXiN,GAAI,CAAEjN,MAAO,oIACF,gBACA,8BAEXiN,GAAI,CAAEjN,MAAO,oIACF,oBACA,4BAEXiN,GAAI,CAAEjN,MAAO,oIACF,uBACA,+BAEJiN,GAAI,CAAEjN,MAAO,yBACT,qFACP,2GACO,0DAEJiN,GAAI,CAAEjN,MAAO,yBACTtlB,KAAKmiJ,KAGIniJ,KAAwBqiJ,GAAsBpmD,GAAO,CAAE32E,MAAO,8DAAgE,sBAC9HtlB,KAAiBsiJ,GAAmB/vH,GACjD,CAAEjN,MAAO,8JACT62E,GAAG,eACH5pE,GAAI,CAAEjN,MAAO,4CACT,wEAEJiN,GAAI,CAAEjN,MAAO,mDAAmDwB,GAAYiJ,kBACxE,gEACEsM,GAAE,CAAEu9E,KAAM,yDAA0Dp5F,OAAQ,UAAa,QACzF,4CACA,uDAEN+R,GAAI,CAAEjN,MAAO,4CACTi8H,GACIC,GAAQ,uBACRnlH,GAAE,CAAEu9E,KAAM,kDAAoD,yBAC9D,mEACA,2DACA,kEACA,iEACA,yDAGRrnF,GAAI,CAAEjN,MAAO,4CACT,kEACAm8H,GAAG,CAAEn8H,MAAO,qBACRo8H,GAAGrlH,GAAE,CAAEu9E,KAAM,0BAA4B,gBACzC8nC,GAAGrlH,GAAE,CAAEu9E,KAAM,uBAAyB,WACtC8nC,GAAGrlH,GAAE,CAAEu9E,KAAM,2BAA6B,WAAY,wBAAyBmjB,GAAK,qCAAsC,OAIlIxqG,GAAI,CAAEjN,MAAO,4CACT,0DAA2D+W,GAAE,CAAEu9E,KAAM,4BAA8B,gBAAiB,IACpH,wCAEJrnF,GAAI,CAAEjN,MAAO,0CACT,oFACA+W,GAAE,CAAEu9E,KAAM,0BAA2Bp5F,OAAQ,UAAY,oBACzD,KAEJ+R,GAAI,CAAEjN,MAAO,kGAAoGtlB,KAAKqiJ,KAEzGriJ,KAAeuiJ,GAAmBhwH,GAAI,CAAEjN,MAAO,qBAC5D62E,GAAG,eACH5pE,GAAI,CAAEjN,MAAO,qFACTtlB,KAAKoiJ,GACL7vH,GAAI,CAAEjN,MAAO,uDAAyDtlB,KAAKgiJ,IAC3EhiJ,KAAKkiJ,IAET3vH,GAAI,CAAEjN,MAAO,+EAAiFtlB,KAAK68F,KAEtF78F,KAAgBwiJ,GAAwBlB,GAAS,CAC9Dh8H,MAAO,qEAEMtlB,KAAqByiJ,GAAsBxmD,GAAO,CAAE32E,MAAO,8DAAgE,OAC3HtlB,KAAA0iJ,GAA+BnwH,GAC5C,CAAEjN,MAAO,oCACT62E,GAAG,CAAE72E,MAAO,yBAA2B,wBACvCiN,GAAI,CAAEjN,MAAO,+DACTiN,GAAI,yDAAyDvyB,KAAK4hJ,eAClErvH,GAAI,CAAEjN,MAAO,UAAUwB,GAAYiJ,iBAAmB,6EACtDwC,GAAI,CAAEjN,MAAO,wEAA0EtlB,KAAKwiJ,KAEhGjwH,GAAI,CAAEjN,MAAO,+EAAiFtlB,KAAKyiJ,KAEhGziJ,KAAAg0B,UAA4BzB,GAAI,CAAE0B,MAAO,qBAAsB3O,MAAO,iDACzEtlB,KAAKuiJ,GACLviJ,KAAK0iJ,GACL1iJ,KAAKsiJ,GACLtiJ,KAAK48F,IAuBF58F,KAAO+8F,QAAG,KACb,KAA2C,OAApC/8F,KAAKgiJ,GAAgB17H,YACxBtmB,KAAKgiJ,GAAgBrvH,YAAY3yB,KAAKgiJ,GAAgB17H,YAE1DtmB,KAAK+hJ,GAAiB/kD,oBAAoB,QAASh9F,KAAK2iJ,IACxD3iJ,KAAKiiJ,GAA0BjlD,oBAAoB,QAASh9F,KAAK4iJ,IACjE5iJ,KAAKyiJ,GAAsBzlD,oBAAoB,QAASh9F,KAAK6iJ,IAC7D7iJ,KAAK68F,GAAYG,oBAAoB,QAASh9F,KAAKi9F,IACnDj9F,KAAK48F,GAAcI,oBAAoB,QAASh9F,KAAK88F,IACrD98F,KAAKmiJ,GAAkBnlD,oBAAoB,QAASh9F,KAAK8iJ,IACzD9iJ,KAAKqiJ,GAAyBrlD,oBAAoB,QAASh9F,KAAK+iJ,GAAoC,EAGhG/iJ,KAAM88F,GAAG,KACb98F,KAAK6yB,EAAK0qE,OAAS,KACnBv9F,KAAK6yB,EAAKsuD,OACVnhF,KAAKi9F,IAAc,EAGfj9F,KAAYi9F,GAAG,KACnB,MAAM+lD,EAAkBhjJ,KAAKijJ,KAC7BrlI,EAAa8/B,cAAgBslG,EAAQt8H,MAAM,KAAK0X,QAAOxnB,GAAW,KAANA,IAC5DtV,EAAOqC,4BAA6B,EACpCkhD,OAAOC,SAASpd,KAAO1nC,KAAK6yB,EAAK9F,KAAK8tB,iBAEtCkK,YAAW,KAAQD,SAASE,QAAQ,GAAK,GAAG,EAGxChlD,KAAA2iJ,GAAyBx+I,IAC7B,MAAM++I,EAAqBljJ,KAAK6hJ,GAASh/I,OACzC7C,KAAK6hJ,GAAS92I,KAAK,CACfnK,IAAK,GACLO,WAAY,MACZwlD,QAAS,GACTw8F,YAAY,EACZ7/H,kBAAmB,KACnBC,gBAAiB,KACjBG,oBAAqB,KACrBF,iBAAkB,KAClBC,uBAAuB,IAE3BzjB,KAAK8hJ,GAA2BoB,IAAc,EAC9CljJ,KAAKojJ,KACLpjJ,KAAKqyG,IAAQ,EAAK,EAGdryG,KAAA4iJ,GAAkCz+I,IACtCnE,KAAKuiJ,GAAgBj9H,MAAMq/E,QAAU,OACrC3kG,KAAK0iJ,GAAap9H,MAAMq/E,QAAU,GAClC3kG,KAAKwiJ,GAAiBl/I,MAAQ,EAAE,EAG5BtD,KAAA8iJ,GAAgC3+I,IACpCA,EAAMgxB,iBACNn1B,KAAKuiJ,GAAgBj9H,MAAMq/E,QAAU,OACrC3kG,KAAKsiJ,GAAkBh9H,MAAMq/E,QAAU,EAAE,EAGrC3kG,KAAA+iJ,GAAuC5+I,IAC3CnE,KAAKuiJ,GAAgBj9H,MAAMq/E,QAAU,GACrC3kG,KAAKsiJ,GAAkBh9H,MAAMq/E,QAAU,MAAM,EAGzC3kG,KAAA6iJ,GAA8B1+I,IAClCnE,KAAKuiJ,GAAgBj9H,MAAMq/E,QAAU,GACrC3kG,KAAK0iJ,GAAap9H,MAAMq/E,QAAU,OAGlC,MAAM0+C,EAAwBrjJ,KAAKsjJ,GAC/BtjJ,KAAKwiJ,GAAiBl/I,MACjBqa,QAAQ,MAAO,KACf+I,MAAM,KACNvM,KAAKvD,GAAc8pC,mBAAmB9pC,EAAE2Q,UACxC6W,QAAQxnB,GAAoB,KAANA,KAC3B,GAEE2sI,EAA6B,IAAI31H,IACvC,IAAK,MAAM+zB,KAAS3hD,KAAK6hJ,GACrB0B,EAAKl/I,IAAIs9C,EAAM/gD,KAAK,GAExB,IAAK,MAAM+gD,KAAS0hG,EAAO98D,QAAS,CAChC,GAAIvmF,KAAK6hJ,GAASh/I,QAAU7C,KAAK4hJ,GAAa,MAC9C,GAAI2B,EAAKp2H,IAAIw0B,EAAM/gD,KAAM,SACzB2iJ,EAAKl/I,IAAIs9C,EAAM/gD,KAAK,GACpB,MAAMsiJ,EAAqBljJ,KAAK6hJ,GAASh/I,OACzC7C,KAAK6hJ,GAAS92I,KAAK42C,GACnB3hD,KAAK8hJ,GAA2BoB,IAAc,CACjD,CACDljJ,KAAKojJ,KACLpjJ,KAAKqyG,IAAQ,EAAM,EAGfryG,KAAAwjJ,GAA0Br/I,IAC9B,MAAMyf,EAAkDzf,EAAMqc,OACxD0iI,GAAuBt/H,EAAQ6/H,QAAc,MAC/C7/H,EAAQk2F,KACR95G,KAAK8hJ,GAA2BoB,IAAc,EAE9CljJ,KAAK8hJ,GAA2BoB,IAAc,CACjD,EAGGljJ,KAAA0jJ,GAAmBv/I,I,QACvB,MAAMyf,EAA8Czf,EAAMqc,OACpD0iI,GAAuBt/H,EAAQ6/H,QAAc,MACnDzjJ,KAAK6hJ,GAASqB,GAAYtiJ,IAAMgjB,EAAQtgB,MACxC,MAAMqgJ,EAAuF,QAAhCvtC,EAAoB,QAApBv3F,EAAA+E,EAAQmjH,kBAAY,IAAAloH,OAAA,EAAAA,EAAAkoH,kBAAY,IAAA3wB,OAAA,EAAAA,EAAAzoF,cAAc,kCAC3G,GAAyB,MAArBg2H,EAA2B,CAC3B,MAAM5C,EAAqB/gJ,KAAK4jJ,GAAe5jJ,KAAK6hJ,GAASqB,IAC7DS,EAAkB7iD,UAAYigD,EAC9B4C,EAAkBjpG,MAAQqmG,CAC7B,GAGG/gJ,KAAA6jJ,GAA0B1/I,IAC9B,MAAMyf,EAA8Czf,EAAMqc,OACpD0iI,GAAuBt/H,EAAQ6/H,QAAc,MAC7CngJ,EAAgB88B,GAAM,IAAM,MAAWG,GAAsB3c,EAAQtgB,MAAO,QAClFtD,KAAK6hJ,GAASqB,GAAY/hJ,WAAamC,CAAK,EAGxCtD,KAAA8jJ,GAAuB3/I,I,QAC3B,MAAMyf,EAA8Czf,EAAMqc,OACpD0iI,GAAuBt/H,EAAQ6/H,QAAc,MAC7CngJ,EAAgBi9B,GAAsB3c,EAAQtgB,MAAO,IAC3DtD,KAAK6hJ,GAASqB,GAAYv8F,QAAUrjD,EACpC,MAAMygJ,EAAqF,QAAhC3tC,EAAoB,QAApBv3F,EAAA+E,EAAQmjH,kBAAY,IAAAloH,OAAA,EAAAA,EAAAkoH,kBAAY,IAAA3wB,OAAA,EAAAA,EAAAzoF,cAAc,uCACzG,GAAsB,MAAlBo2H,EAAwB,CACxB,MAAMC,EAAmBhkJ,KAAKikJ,GAAyBjkJ,KAAK6hJ,GAASqB,GAAYv8F,SAChE,KAAbq9F,IACAD,EAAejjD,UAAY,IAAIkjD,KAEtC,GAGGhkJ,KAAAkkJ,GAA0B//I,IAC9B,MAAMyf,EAA8Czf,EAAMqc,OACpD0iI,GAAuBt/H,EAAQ6/H,QAAc,MACnDzjJ,KAAK6hJ,GAASqB,GAAYC,aAAav/H,EAAQ06E,OAAsB,EAGjEt+F,KAAAmkJ,GAAiChgJ,IACrC,MAAMyf,EAA8Czf,EAAMqc,OACpD0iI,GAAuBt/H,EAAQ6/H,QAAc,MAC7CngJ,EAAuBo9B,GAAoB9c,EAAQtgB,MAAO,MAChEtD,KAAK6hJ,GAASqB,GAAY5/H,kBAAoBhgB,CAAK,EAG/CtD,KAAAokJ,GAA+BjgJ,IACnC,MAAMyf,EAA8Czf,EAAMqc,OACpD0iI,GAAuBt/H,EAAQ6/H,QAAc,MAC7CngJ,EAAuBo9B,GAAoB9c,EAAQtgB,MAAO,MAChEtD,KAAK6hJ,GAASqB,GAAY3/H,gBAAkBjgB,CAAK,EAG7CtD,KAAAqkJ,GAAmClgJ,IACvC,MAAMyf,EAA8Czf,EAAMqc,OACpD0iI,GAAuBt/H,EAAQ6/H,QAAc,MAC7CngJ,EAAuBo9B,GAAoB9c,EAAQtgB,MAAO,MAChEtD,KAAK6hJ,GAASqB,GAAYx/H,oBAAsBpgB,CAAK,EAGjDtD,KAAAskJ,GAAgCngJ,IACpC,MAAMyf,EAAgDzf,EAAMqc,OACtD0iI,GAAuBt/H,EAAQ6/H,QAAc,MAC7Cz9D,GAAoBpiE,EAAQtgB,MAE9BtD,KAAK6hJ,GAASqB,GAAY1/H,kBADZ,IAAdwiE,EAC6C,KAEAA,CAChD,EAGGhmF,KAAAukJ,GAAqCpgJ,IACzC,MAAMyf,EAA8Czf,EAAMqc,OACpD0iI,GAAuBt/H,EAAQ6/H,QAAc,MAC7Cz9D,EAAoBpiE,EAAQ06E,QAClCt+F,KAAK6hJ,GAASqB,GAAYz/H,sBAAwBuiE,CAAQ,EA0BtDhmF,KAAAwkJ,GAA8BrgJ,IAClC,MACM++I,GADgD/+I,EAAMqc,OACvBijI,QAAc,MACnDzjJ,KAAKykJ,GAAqBzkJ,KAAK0kJ,GAAyB1kJ,KAAK6hJ,GAASqB,IAAa,EAG/EljJ,KAAA2kJ,GAA4BxgJ,IAChC,MACM++I,GADgD/+I,EAAMqc,OACvBijI,QAAc,MACnDzjJ,KAAK8hJ,GAA2BoB,IAAc,EAC9CljJ,KAAK6hJ,GAAS3lH,OAAOgnH,EAAY,GACjCljJ,KAAKojJ,KACLpjJ,KAAKqyG,IAAQ,EAAM,EAGfryG,KAAA4kJ,GAA4BzgJ,IAChC,MACM++I,GADgD/+I,EAAMqc,OACvBijI,QAAc,MAC7CoB,EAAuB3B,EAAa,EAC1C,GAAIljJ,KAAK6hJ,GAASh/I,QAAU,GAAKgiJ,GAAgB,EAAG,CAChD,MAAMC,EAAuB9kJ,KAAK6hJ,GAASgD,GACrCljG,EAAqB3hD,KAAK6hJ,GAASqB,GACnC6B,EAAoC/kJ,KAAK8hJ,GAA2B+C,GACpEG,EAAkChlJ,KAAK8hJ,GAA2BoB,GACxEljJ,KAAK6hJ,GAASgD,GAAgBljG,EAC9B3hD,KAAK6hJ,GAASqB,GAAc4B,EAC5B9kJ,KAAK8hJ,GAA2B+C,GAAgBG,EAChDhlJ,KAAK8hJ,GAA2BoB,GAAc6B,EAC9C/kJ,KAAKqyG,IAAQ,EAChB,GAGGryG,KAAAilJ,GAA8B9gJ,IAClC,MACM++I,GADgD/+I,EAAMqc,OACvBijI,QAAc,MAC7CyB,EAAyBhC,EAAa,EAC5C,GAAIljJ,KAAK6hJ,GAASh/I,QAAU,GAAKqiJ,EAAiBllJ,KAAK6hJ,GAASh/I,OAAQ,CACpE,MAAMsiJ,EAAyBnlJ,KAAK6hJ,GAASqD,GACvCvjG,EAAqB3hD,KAAK6hJ,GAASqB,GACnCkC,EAAsCplJ,KAAK8hJ,GAA2BoD,GACtEF,EAAkChlJ,KAAK8hJ,GAA2BoB,GACxEljJ,KAAK6hJ,GAASqD,GAAkBvjG,EAChC3hD,KAAK6hJ,GAASqB,GAAciC,EAC5BnlJ,KAAK8hJ,GAA2BoD,GAAkBF,EAClDhlJ,KAAK8hJ,GAA2BoB,GAAckC,EAC9CplJ,KAAKqyG,IAAQ,EAChB,GAGGryG,KAA2BojJ,GAAG,KAC9BpjJ,KAAK6hJ,GAASh/I,QAAU7C,KAAK4hJ,GAC7B5hJ,KAAK+hJ,GAAiBz8H,MAAMq/E,QAAU,OAEtC3kG,KAAK+hJ,GAAiBz8H,MAAMq/E,QAAU,EACzC,EAGG3kG,KAAAsjJ,GAAa,CAAC+B,EAAgBplG,KAElC,SAASoG,EAAmBzlD,GAGxB,MAAO,CAFQA,EAAI+8C,MAAM,EAAG/8C,EAAIq7B,QAAQ,MACrBmE,GAAM,IAAM,MAAWG,GAAsB3/B,EAAI+8C,MAAM/8C,EAAIq7B,QAAQ,KAAO,GAAI,Q,CAGrG,SAASqqB,EAAgB1lD,GAGrB,MAAO,CAFQA,EAAI+8C,MAAM,EAAG/8C,EAAIq7B,QAAQ,MACxBsE,GAAsB3/B,EAAI+8C,MAAM/8C,EAAIq7B,QAAQ,KAAO,GAAI,I,CAG3E,IAAIqpH,GAA4B,EAC5BC,GAAgC,EAChCC,GAAmC,EACvC,MAAMC,EAA+B,GACrC,IAAK,MAAM7kJ,KAAOykJ,EACd,GAAY,KAARzkJ,EACJ,GAA0B,kBAAtBA,EAAIo/C,cACCslG,GACDG,EAAc16I,KAAK,CACfnK,IAAK,gBACLO,WAAY,MACZwlD,QAAS,GACTw8F,YAAY,EACZ7/H,kBAAmB,KACnBC,gBAAiB,KACjBG,oBAAqB,KACrBF,iBAAkB,KAClBC,uBAAuB,IAG/B6hI,GAAmB,OAChB,GAA0B,sBAAtB1kJ,EAAIo/C,cACNulG,GACDE,EAAc16I,KAAK,CACfnK,IAAK,oBACLO,WAAY,MACZwlD,QAAS,GACTw8F,YAAY,EACZ7/H,kBAAmB,KACnBC,gBAAiB,KACjBG,oBAAqB,KACrBF,iBAAkB,KAClBC,uBAAuB,IAG/B8hI,GAAuB,OACpB,GAA0B,yBAAtB3kJ,EAAIo/C,cACNwlG,GACDC,EAAc16I,KAAK,CACfnK,IAAK,uBACLO,WAAY,MACZwlD,QAAS,GACTw8F,YAAY,EACZ7/H,kBAAmB,KACnBC,gBAAiB,KACjBG,oBAAqB,KACrBF,iBAAkB,KAClBC,uBAAuB,IAG/B+hI,GAA0B,MACvB,CACH,IAAIrgG,EAAoBvkD,EACpBO,EAAqB,MACrBwlD,EAAkB,GAClBw8F,GAAsB,EACtB7/H,EAAmC,KACnCC,EAAiC,KACjCG,EAAqC,KACrCF,EAAkC,KAClCC,GAAiC,EACjCoiC,EAA4BjlD,EAAIq7B,QAAQ,KACxC6pB,GAA2B,EAC3BF,GAA+B,EACnC,GAA0B,IAAtBC,IACAC,EAAkBllD,EAAIq7B,QAAQ,IAAK4pB,EAAoB,IAC9B,IAArBC,GAAwB,CACxB,MAAMC,EAAuBnlD,EAAI+8C,MAAMkI,EAAoB,EAAGC,GAAiBp/B,MAAM,KACrF,IAAK,MAAMs/B,KAAaD,EAAY,CAChC,MAAME,EAAqBD,EAAUE,OAAO,GACtCC,EAAqBH,EAAUrI,MAAM,EAAGqI,EAAUnjD,QACrC,MAAfojD,EACA9kD,EAAai/B,GAAM,IAAM,MAAWG,GAAsB4lB,EAAY,QAChD,MAAfF,EACPU,EAAUpmB,GAAsB4lB,EAAY,IACtB,MAAfF,EACPk9F,GAAa,EACS,MAAfl9F,EACP3iC,EAAoBod,GAAoBylB,EAAY,MAC9B,MAAfF,EACP1iC,EAAkBmd,GAAoBylB,EAAY,MAC5B,MAAfF,EACPviC,EAAsBgd,GAAoBylB,EAAY,MAChC,MAAfF,GACPziC,EAAmBkd,GAAoBylB,EAAY,MAC3B,MAApB3iC,IAIAA,EAAmB4c,GAAM,EAAG,EAAO5c,KAEjB,MAAfyiC,IACPxiC,GAAwB,EAE/B,CACD0hC,EAAYvkD,EAAI+8C,MAAMmI,EAAkB,EAAGllD,EAAIiC,QAC/C+iD,GAAsB,CACzB,CAED3F,IACK2F,KACwB,GAArBhlD,EAAIq7B,QAAQ,OACZkpB,EAAYvkD,EAAI4+C,WAAW,IAAK,IAChC2jG,GAAa,IAEQ,GAArBviJ,EAAIq7B,QAAQ,OAAmC,GAArBr7B,EAAIq7B,QAAQ,KAClCr7B,EAAIq7B,QAAQ,KAAOr7B,EAAIq7B,QAAQ,OAC9BkpB,EAAWwB,GAAWL,EAAgBnB,IACtCA,EAAWhkD,GAAcklD,EAAmBlB,MAG5CA,EAAWhkD,GAAcklD,EAAmBlB,IAC5CA,EAAWwB,GAAWL,EAAgBnB,MAIlB,GAArBvkD,EAAIq7B,QAAQ,QACXkpB,EAAWhkD,GAAcklD,EAAmBlB,KAExB,GAArBvkD,EAAIq7B,QAAQ,QACXkpB,EAAWwB,GAAWL,EAAgBnB,OAKvDsgG,EAAc16I,KAAK,CACfnK,IAAKukD,EACLhkD,WAAYA,EACZwlD,QAASA,EACTw8F,WAAYA,EACZ7/H,kBAAmBA,EACnBC,gBAAiBA,EACjBG,oBAAqBA,EACrBF,iBAAkBA,EAClBC,sBAAuBA,GAE9B,CAEL,MAAO,CAAE8iE,QAASk/D,EAAe,EAG7BzlJ,KAAA0kJ,GAA4B/iG,IAChC,MAAM/gD,EAAc+gD,EAAM/gD,IAAI2mB,OACxBpmB,EAAqBwgD,EAAMxgD,WAC3BwlD,EAAkBhF,EAAMgF,QACxBw8F,EAAsBxhG,EAAMwhG,WAC5B7/H,EAAmCq+B,EAAMr+B,kBACzCC,EAAiCo+B,EAAMp+B,gBACvCG,EAAqCi+B,EAAMj+B,oBAC3CF,EAAkCm+B,EAAMn+B,iBACxCC,EAAiCk+B,EAAMl+B,sBACvCiiI,EAAyB9kJ,EAAIo/C,cAC7B2lG,EACiB,kBAAnBD,GACsB,sBAAnBA,GACmB,yBAAnBA,EAED/sB,EAAoB,GAS1B,OARmB,QAAfx3H,GAAsBw3H,EAAQ5tH,KAAK,IAAM5J,GAC7B,KAAZwlD,GAAgBgyE,EAAQ5tH,KAAK,IAAM47C,GACnCw8F,GAAYxqB,EAAQ5tH,KAAK,KACJ,MAArBuY,GAA2Bq1G,EAAQ5tH,KAAK,IAAMuY,GAC3B,MAAnBC,GAAyBo1G,EAAQ5tH,KAAK,IAAMwY,GACrB,MAAvBG,GAA6Bi1G,EAAQ5tH,KAAK,IAAM2Y,GAC5B,MAApBF,GAA0Bm1G,EAAQ5tH,KAAK,IAAMyY,GAC7CC,GAAuBk1G,EAAQ5tH,KAAK,KACpC46I,GAAuBhtB,EAAQ91H,QAAU,EAClCjC,EAEA,IAAM+3H,EAAQ5zG,KAAK,KAAO,IAAMnkB,CAC1C,EAGGZ,KAAgBijJ,GAAG,KACvB,IAAI7lE,EAAS,GACb,IAAK,MAAMz7B,KAAS3hD,KAAK6hJ,GAAU,CAEnB,KADQlgG,EAAM/gD,IAAI2mB,SAE9B61D,GAAU,IAAMp9E,KAAK0kJ,GAAyB/iG,GACjD,CACD,OAAOy7B,CAAM,EAGTp9E,KAAA4jJ,GAAkBjiG,IACtB,IACI,MAAMyE,EAAiB,IAAIjF,IAAIQ,EAAM/gD,KACrC,OAAO8/C,mBAAmB0F,EAAUK,SAAS9oC,QAAQ,eAAgB,IACxE,CAAC,MAAO1a,GACL,OAAO0+C,EAAM/gD,GAChB,GAGGZ,KAAAikJ,GAA4B1sH,IAChC,SAASijD,EAAK5jE,EAAW0lB,GACrB,OAAQ1lB,EAAI0lB,EAAIA,GAAKA,C,CAGzB,MAAMu3E,EAAyBr5B,GAD/BjjD,EAAIpsB,KAAK0hB,MAAM0K,GAAK,IACoBj2B,EAAO+O,KAAKrQ,KAAK6yB,EAAK9F,KAAK3pB,KAAKmN,UAAWjP,EAAOsY,kBAC1F,IAAI+pB,EAAgB,GACpB,GAAIriC,EAAO+O,KAAKwjG,GAAgBvjG,WAC5BqzB,EAAQriC,EAAO+O,KAAKwjG,GAAgBrvG,SAEnC,CACD,MAAMsvG,EAAmBxyG,EAAOkP,oBAAoBgqE,EAAKjjD,EAAGj2B,EAAOsY,mBACnE+pB,EAAQriC,EAAO+O,KAAKmqE,EAAKq5B,EAAiBvyG,EAAOsY,iBAAmBk6F,EAAUxyG,EAAOsY,mBAAmBpV,KACxF,GAAZsvG,EACAnwE,GAAS,KAES,GAAbmwE,IACLnwE,GAAS,IAEhB,CAED,OADAA,GAASx4B,KAAK0hB,MAAM0K,EAAIj2B,EAAOsY,kBACxB+pB,CAAK,EAGR3jC,KAAAqyG,GAAWuzC,IAGf,KAA2C,OAApC5lJ,KAAKgiJ,GAAgB17H,YACxBtmB,KAAKgiJ,GAAgBrvH,YAAY3yB,KAAKgiJ,GAAgB17H,YAE1D,IAAK,IAAI48H,EAAqB,EAAGA,EAAaljJ,KAAK6hJ,GAASh/I,OAAQqgJ,IAAc,CAC9E,MAAM2C,EAAqB7lJ,KAAK6hJ,GAASh/I,QAAU,GAAKqgJ,EAAa,EAC/D4C,EAAuB9lJ,KAAK6hJ,GAASh/I,QAAU,GAAKqgJ,EAAaljJ,KAAK6hJ,GAASh/I,OAAS,EACxF8+C,EAAqB3hD,KAAK6hJ,GAASqB,GACnC6C,EAA0BlkG,QAAQ7hD,KAAK8hJ,GAA2BoB,IAClE8C,EAA6B5pD,GAAM,CAAE92E,MAAO,+CAAgDhiB,MAAOq+C,EAAM/gD,MACzGqlJ,EAAsC7pD,GAAM,CAAE92E,MAAO,+CAAgDrQ,KAAM,SAAU3R,MAAO,GAAKq+C,EAAMxgD,WAAYoM,IAAK,OAAQuJ,IAAK,QAAS4lF,KAAM,MACpLwpD,EAAmC9pD,GAAM,CAAE92E,MAAO,+CAAgDrQ,KAAM,SAAU3R,MAAO,GAAKq+C,EAAMgF,QAASp5C,IAAK,IAAKuJ,IAAKxV,EAAO0Y,SAAW1Y,EAAOsY,iBAAkB8iF,KAAM,MAC7MqnD,EAAkC7nD,GAAK,CAAEjoE,MAAO,qCAAsC3O,MAAO,gHAAkH,IAAItlB,KAAKikJ,GAAyBtiG,EAAMgF,aACvPw/F,EAAkC/pD,GAAM,CAAE92E,MAAO,gCAAiCrQ,KAAM,aACxFmxI,EAA6ChqD,GAAM,CAAE92E,MAAO,+CAAgDrQ,KAAM,SAAU3R,MAAO,IAAiC,MAA3Bq+C,EAAMr+B,kBAA4Bq+B,EAAMr+B,kBAAoB,IAAK/V,IAAK,IAAKmvF,KAAM,MAC1N2pD,EAA2CjqD,GAAM,CAAE92E,MAAO,+CAAgDrQ,KAAM,SAAU3R,MAAO,IAA+B,MAAzBq+C,EAAMp+B,gBAA0Bo+B,EAAMp+B,gBAAkB,IAAKhW,IAAK,IAAKmvF,KAAM,MACpN4pD,EAA+ClqD,GAAM,CAAE92E,MAAO,+CAAgDrQ,KAAM,SAAU3R,MAAO,IAAmC,MAA7Bq+C,EAAMj+B,oBAA8Bi+B,EAAMj+B,oBAAsB,IAAKnW,IAAK,IAAKmvF,KAAM,MAChO6pD,EAA4CjqD,GAAO,CAAEh3E,MAAO,kDAC9Di3E,GAAO,CAAEj5F,OAAQ,GAAK,IACtBi5F,GAAO,CAAEj5F,MAAO,GAAK,QACrBi5F,GAAO,CAAEj5F,MAAO,GAAK,aACrBi5F,GAAO,CAAEj5F,MAAO,GAAK,aACrBi5F,GAAO,CAAEj5F,MAAO,GAAK,mBAEK,MAA1Bq+C,EAAMn+B,mBACN+iI,EAAuBjjJ,MAAQ,GAAKq+C,EAAMn+B,kBAE9C,MAAMgjI,EAA6CpqD,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,mEACpFkhI,EAAyBloD,QAAU38C,EAAMl+B,sBACzC,MAAMs9H,EAAqB/gJ,KAAK4jJ,GAAejiG,GAC/CwkG,EAAc7nD,QAAU38C,EAAMwhG,WAC9B,MAAMsD,EAA0CxqD,GAAO,CAAE32E,MAAO,gDAAiDo1B,MAAO,uCAA2C,oBAC7JgsG,EAAkCzqD,GAAO,CAAE32E,MAAO,qEAAuE,UACzHqhI,EAAkC1qD,GAAO,CAAE32E,MAAO,qEAAuES,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,OAAQ75E,MAAO,8BAAgCS,EAAI6N,KAAK,CAAEgzE,EAAG,wBAAyBzzE,KAAMrM,GAAYgJ,gBAClT82H,EAAoC3qD,GAAO,CAAE32E,MAAO,qEAAuES,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,OAAQ75E,MAAO,8BAAgCS,EAAI6N,KAAK,CAAEgzE,EAAG,yBAA0BzzE,KAAMrM,GAAYgJ,gBACrT+2H,EAAuCtF,GACzC,CAAEznC,KAAMisC,EAAgBzgI,MAAO,wCAC/Bk8H,GAAQ,CAAEl8H,MAAO,uBAAyB,WAC1CiN,GAAI,CAAEjN,MAAO,6GACTiN,GAAI,CAAEjN,MAAO,8CAA8CwB,GAAYgJ,gBAAkBosE,GAAK,CAAExhD,MAAO,4BAA8B,gBACrIurG,GAEJ1zH,GAAI,CAAEjN,MAAO,6GACTiN,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYgJ,gCAAkCosE,GAAK,CAAExhD,MAAO,0CAA4C,aAClJqpG,EACAmC,GAEJ3zH,GAAI,CAAEjN,MAAO,kHACTiN,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYgJ,gBAAkB,8CACxEq2H,GAEJ5zH,GAAI,CAAEjN,MAAO,6GACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,gBAAkBosE,GAAK,CAAExhD,MAAO,yFAA6F,eACnM0rG,GAEJ7zH,GAAI,CAAEjN,MAAO,6GACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,gBAAkBosE,GAAK,CAAExhD,MAAO,uFAA2F,aACjM2rG,GAEJ9zH,GAAI,CAAEjN,MAAO,6GACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,gBAAkBosE,GAAK,CAAExhD,MAAO,qFAAyF,wBAC/L4rG,GAEJ/zH,GAAI,CAAEjN,MAAO,6GACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,gBAAkBosE,GAAK,CAAExhD,MAAO,wFAA4F,cAClM6rG,GAEJh0H,GAAI,CAAEjN,MAAO,6GACTiN,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYgJ,gBAAkBosE,GAAK,CAAExhD,MAAO,wFAA4F,cAClM8rG,IAGRR,EAASvC,QAAQ3+I,MAAQ,GAAKo+I,EAC9B+C,EAAkBxC,QAAQ3+I,MAAQ,GAAKo+I,EACvCgD,EAAezC,QAAQ3+I,MAAQ,GAAKo+I,EACpCiD,EAAc1C,QAAQ3+I,MAAQ,GAAKo+I,EACnCkD,EAAyB3C,QAAQ3+I,MAAQ,GAAKo+I,EAC9CmD,EAAuB5C,QAAQ3+I,MAAQ,GAAKo+I,EAC5CoD,EAA2B7C,QAAQ3+I,MAAQ,GAAKo+I,EAChDqD,EAAuB9C,QAAQ3+I,MAAQ,GAAKo+I,EAC5CsD,EAAyB/C,QAAQ3+I,MAAQ,GAAKo+I,EAC9CuD,EAAqBhD,QAAQ3+I,MAAQ,GAAKo+I,EAC1CwD,EAAajD,QAAQ3+I,MAAQ,GAAKo+I,EAClCyD,EAAalD,QAAQ3+I,MAAQ,GAAKo+I,EAClC0D,EAAenD,QAAQ3+I,MAAQ,GAAKo+I,EACpC2D,EAAiBpD,QAAQ3+I,MAAQ,GAAKo+I,EACtC,MAAM4D,EAAgCv0H,GAAI,CAAEjN,MAAO,uFAAyFmhI,EAAsBC,GAC9Jb,GACAiB,EAAc7iJ,YAAY0iJ,GAE1Bb,GACAgB,EAAc7iJ,YAAY2iJ,GAE9B,MAAMG,EAA+Bx0H,GAAI,CAAEjN,MAAO,oDAAoDwB,GAAYuJ,2CAC9GkC,GAAI,CACA0B,MAAO,gCACP3O,MAAO,gCAAgCwB,GAAYiJ,iFACnD2qB,MAAOqmG,GAEPA,GAEJxuH,GAAI,CAAEjN,MAAO,6GACTiN,GAAI,CAAEjN,MAAO,6BAA6BwB,GAAYgJ,gBAAkB,OACxEk2H,GAEJa,EACAC,GAEJD,EAAiB3iJ,iBAAiB,SAAUlE,KAAKwjJ,IACjDwC,EAAS9hJ,iBAAiB,SAAUlE,KAAK0jJ,IACzCuC,EAAkB/hJ,iBAAiB,SAAUlE,KAAK6jJ,IAClDqC,EAAehiJ,iBAAiB,SAAUlE,KAAK8jJ,IAC/CqC,EAAcjiJ,iBAAiB,SAAUlE,KAAKkkJ,IAC9CkC,EAAyBliJ,iBAAiB,SAAUlE,KAAKmkJ,IACzDkC,EAAuBniJ,iBAAiB,SAAUlE,KAAKokJ,IACvDkC,EAA2BpiJ,iBAAiB,SAAUlE,KAAKqkJ,IAC3DkC,EAAuBriJ,iBAAiB,SAAUlE,KAAKskJ,IACvDkC,EAAyBtiJ,iBAAiB,SAAUlE,KAAKukJ,IACzDkC,EAAqBviJ,iBAAiB,QAASlE,KAAKwkJ,IACpDkC,EAAaxiJ,iBAAiB,QAASlE,KAAK2kJ,IACxCkB,GACAc,EAAaziJ,iBAAiB,QAASlE,KAAK4kJ,IAE5CkB,GACAc,EAAe1iJ,iBAAiB,QAASlE,KAAKilJ,IAElDjlJ,KAAKgiJ,GAAgB/9I,YAAY8iJ,GACjC,MAAMC,EAAgC9D,IAAeljJ,KAAK6hJ,GAASh/I,OAAS,EACxE+iJ,GAAkBoB,GAClBD,EAAaE,eAAe,CAAEC,MAAS,UAAWC,OAAU,WAEnE,GAhoBDnnJ,KAAK6yB,EAAOA,EACsB,MAA9BjV,EAAa8/B,cAAuB,CAIpC,MAAM2lG,EAASrjJ,KAAKsjJ,GAAW1lI,EAAa8/B,eAAe,GAC3D19C,KAAK6hJ,GAAWwB,EAAO98D,OAC1B,CACDvmF,KAAK+hJ,GAAiB79I,iBAAiB,QAASlE,KAAK2iJ,IACrD3iJ,KAAKiiJ,GAA0B/9I,iBAAiB,QAASlE,KAAK4iJ,IAC9D5iJ,KAAKyiJ,GAAsBv+I,iBAAiB,QAASlE,KAAK6iJ,IAC1D7iJ,KAAK68F,GAAY34F,iBAAiB,QAASlE,KAAKi9F,IAChDj9F,KAAK48F,GAAc14F,iBAAiB,QAASlE,KAAK88F,IAClD98F,KAAKmiJ,GAAkBj+I,iBAAiB,QAASlE,KAAK8iJ,IACtD9iJ,KAAKqiJ,GAAyBn+I,iBAAiB,QAASlE,KAAK+iJ,IAC7D/iJ,KAAKojJ,KACLpjJ,KAAKqyG,IAAQ,E,CAyLT,EAAAoyC,CAAqB/yD,GAEzB,IAAI01D,EAGJ,GAFAA,EAAM7pI,UAEF6pI,EAAIC,WAAaD,EAAIC,UAAUC,UAI/B,YAHAF,EAAIC,UAAUC,UAAU51D,GAAM1uF,OAAM,KAChC6hD,OAAO04C,OAAO,qBAAsB7L,EAAK,IAIjD,MAAM61D,EAAiC1jJ,SAASC,cAAc,YAC9DyjJ,EAAU95H,YAAcikE,EACxB7tF,SAASyuB,KAAKruB,YAAYsjJ,GAC1BA,EAAUjrD,SACV,MAAMkrD,EAAqB3jJ,SAAS4jJ,YAAY,QAChDF,EAAUrsH,SACVl7B,KAAKg0B,UAAU0pE,MAAM,CAAEgqD,eAAe,IACjCF,GAAW3iG,OAAO04C,OAAO,aAAc7L,E,EC1TpD,MAAMuK,OAAEA,GAAM1pE,IAAEA,GAAG6pE,MAAEA,GAAKE,OAAEA,GAAMJ,KAAEA,GAAIyrD,SAAEA,GAAQprD,OAAEA,GAAM05C,OAAEA,IAAWvwH,EAEvE,SAASkiI,GAAat4B,EAAyBu4B,GAC3C,IAAK,IAAI/iJ,EAAgB,EAAGA,EAAQ+iJ,EAAMhlJ,OAAQiC,IAC9CwqH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAAOwB,GAAS+iJ,EAAM/iJ,KAEpD,OAAOwqH,CACX,CAcA,SAASw4B,GAAmB/nI,EAAkBgoI,GAC1C,MAAMz4B,EAA0BhzB,GAAO,CAAEm2B,GAAIs1B,IAKzChoI,GACAuvG,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAA2B,GAAIsa,EAAaC,cAAa,GAAwBrZ,OAC3G8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAA8B,GAAIsa,EAAaC,cAAa,GAA2BrZ,OACjH8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAA6B,GAAIsa,EAAaC,cAAa,GAA0BrZ,SAE/G8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAA0B,GAAIsa,EAAaC,cAAa,GAAuBrZ,OACzG8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAAoC,GAAIsa,EAAaC,cAAa,GAAiCrZ,OAC7H8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAAyB,GAAIsa,EAAaC,cAAa,GAAsBrZ,OACvG8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAAwB,GAAIsa,EAAaC,cAAa,GAAqBrZ,OACrG8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAA2B,IAAIsa,EAAae,mBAAkB,IAAwBna,OAChH8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAA+B,GAAIsa,EAAaC,cAAa,GAA4BrZ,OACnH8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAAkC,GAAIsa,EAAaC,cAAa,GAA+BrZ,OACzH8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAA8B,GAAIsa,EAAaC,cAAa,GAA2BrZ,OACjH8qH,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAA2B,GAAIsa,EAAaC,cAAa,GAAwBrZ,QAG/G,MAAMwjJ,EAA2BL,GAAS,CAAE9pD,MAAO,gBACnDmqD,EAAY/jJ,YAAYs4F,GAAO,CAAEj5F,MAAO,gBAAkB,kBAC1D0kJ,EAAY/jJ,YAAYs4F,GAAO,CAAEj5F,MAAO,mBAAqB,qBAC7DgsH,EAAKrrH,YAAY+jJ,GAEjB,IAAIC,EAAyC,KACzCC,EAAgD,KAEpD,IAAK,IAAInqI,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiBpb,OAAQkb,IAAiB,CACvG,MAAMM,EAA2BT,EAAaK,iBAAiBF,GACzDsgF,EAAqBspD,GAAS,CAAE9pD,MAAOx/E,EAAS7Z,KAAO,OAC7D,IAAI2jJ,GAAoB,EACxB,IAAK,IAAInqI,EAAsB,EAAGA,EAAcK,EAASH,QAAQrb,OAAQmb,IAAe,CACpF,MAAMM,EAAiBD,EAASH,QAAQF,GACjB,GAAlBM,EAAOyB,SAAoBA,IAC5Bs+E,EAAMp6F,YAAYs4F,GAAO,CAAEj5F,OAAQya,GAAiB,GAAKC,GAAeM,EAAO9Z,OAC/E2jJ,GAAW,EAElB,CASD,GAPsB,IAAlBpqI,GAAuBoqI,EACvBF,EAAqB5pD,EACI,0BAAlBhgF,EAAS7Z,MAAoC2jJ,IACpDD,EAA4B7pD,GAIX,kBAAjBhgF,EAAS7Z,MAA4B2jJ,EAAU,CAG/C,IAAIC,EAAc/pD,EAAM1rE,YAAY0rE,EAAMgC,SAAS,KACnDhC,EAAMoJ,aAAa2gD,EAAa/pD,EAAMgC,SAAS,GAClD,CAED,GAAqB,iBAAjBhiF,EAAS7Z,MAA2B2jJ,EAAU,CAG9C,IAAIE,EAAahqD,EAAM1rE,YAAY0rE,EAAMgC,SAAS,KAClDhC,EAAMoJ,aAAa4gD,EAAYhqD,EAAMgC,SAAS,GACjD,CAED,GAAqB,oBAAjBhiF,EAAS7Z,MAA8B2jJ,EAAU,CAGjD,IAAIG,EAAkBjqD,EAAM1rE,YAAY0rE,EAAMgC,SAAS,IACvDhC,EAAMoJ,aAAa6gD,EAAiBjqD,EAAMgC,SAAS,GACtD,CAEG8nD,GAAU74B,EAAKrrH,YAAYo6F,EAClC,CAED,GAA0B,MAAtB4pD,GAA2D,MAA7BC,EAAmC,CAEjE,MAAMK,EAA+CL,EAA0BnhB,WAC/EwhB,EAAO51H,YAAYu1H,GACnBK,EAAO9gD,aAAaygD,EAA2BD,EAClD,CAED,OAAO34B,CACX,CAEA,SAASk5B,GAAiBl5B,EAAyBhsH,GAC/C,MAAMmlJ,EAAcnlJ,EAAMw3H,WACtBxL,EAAKhsH,OAASmlJ,IAAan5B,EAAKhsH,MAAQmlJ,GAGxCC,EAAEp5B,GAAM70C,KAAK,YACbiuE,EAAEp5B,GAAMjvF,IAAI/8B,GAAOqlJ,QAAQ,iBAEnC,CAEA,MAAMC,GASF,WAAA7oJ,CAA4Bk2I,EAA4CpjH,EAAqCwwF,GAAjFrjH,KAAMi2I,OAANA,EAA4Cj2I,KAAI6yB,EAAJA,EAAqC7yB,KAAUqjH,GAAVA,EAFrGrjH,KAAO4iH,GAAkB,KAiDzB5iH,KAAAg5H,GAAgB70H,IACpB,GAAInE,KAAK6oJ,UAAW,CAEhB,IAAIjyI,GAAKzS,EAAMmxB,SAAWnxB,EAAMoxB,OAASv1B,KAAKi2I,OAAO5gH,wBAAwBG,KACzE3e,EAAI1L,KAAK0hB,OAAO1oB,EAAMs7F,SAAWt7F,EAAMu7F,OAAS1/F,KAAKi2I,OAAO5gH,wBAAwBsqE,KAEpF9oF,EAAI,IAAGA,EAAI,GACXA,EAAI,KAAIA,EAAI,IAEhB,IAAIw/H,EAAMr2I,KAAKi2I,OAAOK,WAAW,MAEjC,GAA2B,GAAvBt2I,KAAK8oJ,gBAA0B39I,KAAKC,IAAIpL,KAAK+oJ,MAAQnyI,GAAK,GAAI,CAE9D,IAAIoyI,EAAcpyI,EAAI5W,KAAK+oJ,MAASnyI,EAAI5W,KAAK+oJ,MACzCE,EAAcryI,EAAI5W,KAAK+oJ,MAAS/oJ,KAAK+oJ,MAAQnyI,EAEjD,IAAK,IAAI/L,EAAIm+I,EAAYn+I,GAAKo+I,EAAYp+I,GAAK,EAAG,CAE9C,IAAIq+I,EAAY/9I,KAAKC,IAAIwL,EAAI5W,KAAK+oJ,OAAS,EAASnyI,EAAI5W,KAAK+oJ,MACzD,GAAQl+I,EAAIm+I,IAAeC,EAAaD,IACpCn+I,EAAIm+I,IAAeC,EAAaD,GAAgB,EACpD/uH,EAAI9uB,KAAKe,MAAM2K,GAAK7W,KAAKmpJ,MAAQtyI,GAAKqyI,GAE1C7S,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMhiB,EAAI,GAAQ,EAAG,EAAG,IAC1CwrI,EAAIE,UAAYzvH,GAAYW,YAAY,0BACxC4uH,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMhiB,EAAI,GAAQ,GAAI,EAAG,GAC3CwrI,EAAIE,UAAYzvH,GAAYW,YAAY,+BACxC4uH,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMhiB,EAAI,GAAQ,GAAI,EAAG,GAC3CwrI,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMhiB,EAAI,GAAQ,GAAI,EAAG,GAC3CwrI,EAAIE,UAAYzvH,GAAYgG,wBAAwB9sB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YACvFkuH,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMhiB,EAAI,GAAQovB,EAAI,EAAG,EAAG,GAG9Cj6B,KAAKiT,SAAS9H,KAAK0hB,MAAMhiB,EAAI,IAAOovB,EAAI,EAC3C,CAEJ,MAGGo8G,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMjW,EAAI,GAAQ,EAAG,EAAG,IAC1Cy/H,EAAIE,UAAYzvH,GAAYW,YAAY,0BACxC4uH,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMjW,EAAI,GAAQ,GAAI,EAAG,GAC3Cy/H,EAAIE,UAAYzvH,GAAYW,YAAY,+BACxC4uH,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMjW,EAAI,GAAQ,GAAI,EAAG,GAC3Cy/H,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMjW,EAAI,GAAQ,GAAI,EAAG,GAC3Cy/H,EAAIE,UAAYzvH,GAAYgG,wBAAwB9sB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YACvFkuH,EAAIG,SAA6B,EAApBrrI,KAAK0hB,MAAMjW,EAAI,GAAQC,EAAI,EAAG,EAAG,GAG9C7W,KAAKiT,SAAS9H,KAAK0hB,MAAMjW,EAAI,IAAOC,EAAI,GAI5C7W,KAAK8oJ,gBAAiB,EACtB9oJ,KAAK+oJ,MAAQnyI,EACb5W,KAAKmpJ,MAAQtyI,EAGb,IAAI+H,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAE1F96E,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI7K,KAAKiT,SAASpQ,OAAQgI,IAC9CD,GAAO5K,KAAKiT,SAASpI,GAEzB,MAAMC,EAAkBF,EAAM5K,KAAKiT,SAASpQ,OAG5C,IAAIyI,EAAqB,EACrBukC,EAAmB,EACvB,IAAK,IAAIhlC,EAAY,EAAGA,EAAI7K,KAAKiT,SAASpQ,OAAQgI,IAC9CS,GAAcukC,EACdA,EAAW7vC,KAAKiT,SAASpI,GAAKC,EAC9B8T,EAAW8D,uBAAuB7X,GAAKS,EAG3CsT,EAAW8D,uBAAuB,IAAM,CAC3C,GAIG1iB,KAAAopJ,GAAgBjlJ,IACpBnE,KAAK6oJ,WAAY,EAGjB7oJ,KAAKg5H,GAAa70H,EAAM,EAEpBnE,KAAUqpJ,GAAG,KACjBrpJ,KAAK6oJ,WAAY,EACjB7oJ,KAAK8oJ,gBAAiB,EAEtB9oJ,KAAKyjH,IAAa,EAGdzjH,KAAWyjH,GAAG,KAClBzjH,KAAK4iH,GAAU5iH,KAAKqjH,GAAWrjH,KAAKiT,UAEpCjT,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,IAEtB5iH,KAAK4iH,GAAU,IAAI,EAhJnBqzB,EAAO/xI,iBAAiB,YAAalE,KAAKg5H,IAC1Cid,EAAO/xI,iBAAiB,YAAalE,KAAKopJ,IAC1CnT,EAAO/xI,iBAAiB,UAAWlE,KAAKqpJ,IACxCpT,EAAO/xI,iBAAiB,aAAclE,KAAKqpJ,IAE3CrpJ,KAAK6oJ,WAAY,EACjB7oJ,KAAK8oJ,gBAAiB,EACtB9oJ,KAAK+oJ,MAAQ,EACb/oJ,KAAKmpJ,MAAQ,EAEbnpJ,KAAKiT,SAAW,IAAIjI,aAAa,IAGjChL,KAAKspJ,c,CAIF,YAAAA,GACH,IAAIjT,EAAMr2I,KAAKi2I,OAAOK,WAAW,MAGjCD,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIG,SAAS,EAAG,EAAG,IAAK,IAGxBH,EAAIE,UAAYzvH,GAAYW,YAAY,0BACxC4uH,EAAIG,SAAS,EAAG,GAAI,IAAK,GAGzBH,EAAIE,UAAYzvH,GAAYW,YAAY,+BACxC4uH,EAAIG,SAAS,EAAG,GAAI,IAAK,GACzBH,EAAIG,SAAS,EAAG,GAAI,IAAK,GAGzBH,EAAIE,UAAYzvH,GAAYgG,wBAAwB9sB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YAEvF,IAAK,IAAIvR,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACjC,IAAIC,EAAY7W,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBhlE,eAAe9J,GAAK,GAC7Hy/H,EAAIG,SAAa,EAAJ5/H,EAAOC,EAAI,EAAG,EAAG,GAE9B7W,KAAKiT,SAAS2D,GAAKC,EAAI,EAC1B,C,EA6GT,MAAM0yI,GAiBF,WAAAxpJ,CAA4Bk2I,EAA4CpjH,EAAqCwwF,GAAjFrjH,KAAMi2I,OAANA,EAA4Cj2I,KAAI6yB,EAAJA,EAAqC7yB,KAAUqjH,GAAVA,EAFrGrjH,KAAO4iH,GAAkB,KAuPzB5iH,KAAAg5H,GAAgB70H,I,YACpB,GAAInE,KAAK6oJ,UAAW,CAEhB,IAAIjyI,GAAKzS,EAAMmxB,SAAWnxB,EAAMoxB,OAASv1B,KAAKi2I,OAAO5gH,wBAAwBG,KACzE3e,EAAI1L,KAAK0hB,OAAO1oB,EAAMs7F,SAAWt7F,EAAMu7F,OAAS1/F,KAAKi2I,OAAO5gH,wBAAwBsqE,KAEpF02C,EAAMr2I,KAAKi2I,OAAOK,WAAW,MAEjCD,EAAIE,UAAYzvH,GAAYgG,wBAAwB9sB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YAEvF,IAAIqhI,EAASr+I,KAAKgS,KAAKtG,EAAI,IACvB4yI,EAASt+I,KAAKgS,KAAKvG,EAAI,IAO3B,GAJA4yI,GAFAA,EAAUA,EAAO,EAAGr+I,KAAK0hB,MAAM28H,EAAS,IAAM,GAAMr+I,KAAK0hB,MAAM28H,EAAS,IAAM,IAE3D,GAAKA,GAAU,EAAIA,GAAU,EAChDC,GAFAA,EAAUA,EAAS,EAAG,GAAMt+I,KAAK0hB,MAAM48H,EAAS,IAAM,GAAMt+I,KAAK0hB,MAAM48H,EAAS,GAAG,GAAK,IAErE,GAAKA,GAAU,EAAIA,GAAU,EAChDpT,EAAIG,SAAkB,GAATiT,EAAY,GAAa,GAATD,EAAa,EAAG,IAEvB,GAAlBxpJ,KAAKizI,SACuCzlH,OAAX,QAA7B4oF,EAAc,QAAdv3F,EAAA7e,KAAK0pJ,iBAAS,IAAA7qI,OAAA,EAAAA,EAAI2qI,UAAW,IAAApzC,OAAA,EAAAA,EAAAqzC,MAC7BzpJ,KAAKizI,SAAWjzI,KAAK0pJ,UAAUF,GAAQC,GACvCpT,EAAIG,SAAkB,GAATiT,EAAc,GAAa,GAATD,EAAa,GAAI,IAChDnT,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIsT,SAAS3pJ,KAAK0pJ,UAAUF,GAAQC,GAAU,GAAa,GAATA,EAAc,GAAa,GAATD,EAAc,IAClFxpJ,KAAK6oJ,WAAY,QAGrB,GAA4Cr7H,OAAX,QAA7B7I,EAAc,QAAd8B,EAAAzmB,KAAK0pJ,iBAAS,IAAAjjI,OAAA,EAAAA,EAAI+iI,UAAW,IAAA7kI,OAAA,EAAAA,EAAA8kI,IAAsB,CAClE,GAAgB,YAAbzpJ,KAAK8lF,KAAmB,CACR,MAAM8jE,EAAS5pJ,KAAK0pJ,UAAUF,GAAQC,GACxD,IAAII,EAAQ7pJ,KAAK09B,SAASksH,EAAS,GAAG3tH,QAAQj8B,KAAKizI,WACrC,GAAV4W,EACH7pJ,KAAK09B,SAASksH,EAAS,GAAG1tH,OAAO2tH,EAAO,GAExC7pJ,KAAK09B,SAASksH,EAAS,GAAG7+I,KAAK/K,KAAKizI,SAErC,MACA,GAAIjzI,KAAK0pJ,UAAUF,GAAQC,IAAWzpJ,KAAKizI,SACtCjzI,KAAKizI,UAAYjzI,KAAKqnC,SACrBrnC,KAAKizI,SAAW,GACnBjzI,KAAKqnC,WAEIrnC,KAAKizI,SAAW,GAAKjzI,KAAKqnC,UACpCrnC,KAAKqnC,eAEA,CACN,MAAMuiH,EAAS5pJ,KAAK0pJ,UAAUF,GAAQC,GACtC,GAAIzpJ,KAAKizI,SAAW2W,EAAQ,CAC3B,IAAIC,EAAQ7pJ,KAAK8pJ,QAAQF,EAAS,GAAG3tH,QAAQj8B,KAAKizI,WACpC,GAAV4W,EACH7pJ,KAAK8pJ,QAAQF,EAAS,GAAG1tH,OAAO2tH,EAAO,GAEvC7pJ,KAAK8pJ,QAAQF,EAAS,GAAG7+I,KAAK/K,KAAKizI,SAEpC,KAAM,CACN,IAAI4W,EAAQ7pJ,KAAK8pJ,QAAQ9pJ,KAAKizI,SAAW,GAAGh3G,QAAQ2tH,IACtC,GAAVC,EACH7pJ,KAAK8pJ,QAAQ9pJ,KAAKizI,SAAW,GAAG/2G,OAAO2tH,EAAO,GAE9C7pJ,KAAK8pJ,QAAQ9pJ,KAAKizI,SAAW,GAAGloI,KAAK6+I,EAEtC,CACD,CAEa5pJ,KAAKizI,UAAY,EACjBjzI,KAAKspJ,cAAa,GAClBtpJ,KAAK6oJ,WAAY,CACpB,MACG7oJ,KAAKizI,UAAY,EACjBjzI,KAAKspJ,cAAa,GAClBtpJ,KAAK6oJ,WAAY,CAK5B,GAIG7oJ,KAAAopJ,GAAgBjlJ,IACpBnE,KAAK6oJ,WAAY,EAGjB7oJ,KAAKg5H,GAAa70H,EAAM,EAEpBnE,KAAUqpJ,GAAG,KACjBrpJ,KAAK6oJ,WAAY,EAGjB7oJ,KAAKyjH,IAAa,EAGdzjH,KAAWyjH,GAAG,KAClBzjH,KAAK4iH,GAAU5iH,KAAKqjH,GAAwB,aAAbrjH,KAAK8lF,KAAsB9lF,KAAK8pJ,QAAU9pJ,KAAK09B,SAAU19B,KAAKqnC,SAAUrnC,KAAK8lF,MAE5G9lF,KAAK6yB,EAAKi/D,OAAO9xF,KAAK4iH,IAEtB5iH,KAAK4iH,GAAU,IAAI,EAnVnBqzB,EAAO/xI,iBAAiB,YAAalE,KAAKg5H,IAC1Cid,EAAO/xI,iBAAiB,YAAalE,KAAKopJ,IAC1CnT,EAAO/xI,iBAAiB,UAAWlE,KAAKqpJ,IACxCpT,EAAO/xI,iBAAiB,aAAclE,KAAKqpJ,IAE3CrpJ,KAAK6oJ,WAAY,EAIjB7oJ,KAAK0pJ,UAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACtC1pJ,KAAK+pJ,YAAc,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACxC/pJ,KAAKqnC,SAAW,EAChBrnC,KAAKizI,UAAY,EACjBjzI,KAAK8pJ,QAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACpC9pJ,KAAKgqJ,kBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9ChqJ,KAAK09B,SAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrC19B,KAAKiqJ,gBAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5CjqJ,KAAK8lF,KAAO,YAEZ9lF,KAAKspJ,c,CAIF,KAAAnkH,GACHnlC,KAAKspJ,cAAa,GAClBtpJ,KAAKizI,UAAY,C,CAGd,aAAAiX,CAAcC,GAAmB,GACpC,GAAIA,EAAS,CACTnqJ,KAAK0pJ,UAAY,GACjB1pJ,KAAK0pJ,UAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACtC1pJ,KAAKgqJ,kBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9ChqJ,KAAK+pJ,YAAc,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACxC,IAAK,IAAIl/I,EAAY,EAAGA,EAAI7K,KAAK8pJ,QAAQjnJ,OAAQgI,IAC7C,IAAK,IAAIy2B,EAAY,EAAGA,EAAIthC,KAAK8pJ,QAAQj/I,GAAGhI,OAAQy+B,IAChDthC,KAAKgqJ,kBAAkBhqJ,KAAK8pJ,QAAQj/I,GAAGy2B,GAAK,GAAGv2B,KAAKF,EAAI,GAGhE,GAAiB,YAAb7K,KAAK8lF,KAAoB,CACzB9lF,KAAKiqJ,gBAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5C,IAAK,IAAIp/I,EAAY,EAAGA,EAAI7K,KAAK09B,SAAS76B,OAAQgI,IAC9C,IAAK,IAAIy2B,EAAY,EAAGA,EAAIthC,KAAK09B,SAAS7yB,GAAGhI,OAAQy+B,IACjDthC,KAAKiqJ,gBAAgBjqJ,KAAK09B,SAAS7yB,GAAGy2B,GAAK,GAAGv2B,KAAKF,EAAI,EAGlE,CACJ,KAAM,CACH7K,KAAK0pJ,UAAY,GACjB1pJ,KAAK0pJ,UAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACtC1pJ,KAAKqnC,SAAW,EAChBrnC,KAAK8pJ,QAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACpC9pJ,KAAKgqJ,kBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9ChqJ,KAAK+pJ,YAAc,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAExC,IAAIK,EAAUpqJ,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBx2C,gBACvGlvC,KAAKqnC,SAAW+iH,EAAQ5yI,aACxB,IAAK,IAAI3M,EAAY,EAAGA,EAAIu/I,EAAQ1yI,YAAY7U,OAAQgI,IACpD,IAAK,IAAIy2B,EAAY,EAAGA,EAAI8oH,EAAQ1yI,YAAY7M,GAAGhI,OAAQy+B,IACvDthC,KAAKgqJ,kBAAkBI,EAAQ1yI,YAAY7M,GAAGy2B,GAAK,GAAGv2B,KAAKF,EAAI,GAC/D7K,KAAK8pJ,QAAQj/I,GAAGy2B,GAAK8oH,EAAQ1yI,YAAY7M,GAAGy2B,GAGpD,GAAiB,YAAbthC,KAAK8lF,KAAoB,CACzB9lF,KAAK09B,SAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrC19B,KAAKiqJ,gBAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAE5C,IAAII,EAAUrqJ,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBv2C,mBAAmB92B,QAC1H,IAAK,IAAIxN,EAAY,EAAGA,EAAIw/I,EAAQxnJ,OAAQgI,IACxC,IAAK,IAAIy2B,EAAY,EAAGA,EAAI+oH,EAAQx/I,GAAGhI,OAAQy+B,IAC3CthC,KAAKiqJ,gBAAgBI,EAAQx/I,GAAGy2B,GAAK,GAAGv2B,KAAKF,EAAI,GACjD7K,KAAK09B,SAAS7yB,GAAGy2B,GAAK+oH,EAAQx/I,GAAGy2B,EAG5C,CACJ,CACD,IAAK,IAAIz2B,EAAY,EAAGA,EAAI7K,KAAKgqJ,kBAAkBnnJ,OAAQgI,IACvD,GAAIA,EAAI7K,KAAKqnC,SACTrnC,KAAK0pJ,UAAU1pJ,KAAK0pJ,UAAU7mJ,OAAS,GAAGgI,GAAKA,EAAI,EACnD7K,KAAK+pJ,YAAYl/I,GAAK,CAAC,EAAGA,QAE1B,GAAoC2iB,MAAhCxtB,KAAKgqJ,kBAAkBn/I,GAAG,GAAiB,CAC3C,IAAIy/I,EAAU,CAACtqJ,KAAK0pJ,UAAU7mJ,QAAU7C,KAAK+pJ,YAAY/pJ,KAAKgqJ,kBAAkBn/I,GAAG7K,KAAKgqJ,kBAAkBn/I,GAAGhI,OAAS,GAAK,GAAG,GAAK,GAAI7C,KAAK+pJ,YAAY/pJ,KAAKgqJ,kBAAkBn/I,GAAG7K,KAAKgqJ,kBAAkBn/I,GAAGhI,OAAS,GAAK,GAAG,IAC7N,GAA8C2qB,MAA1CxtB,KAAK0pJ,UAAUY,EAAQ,IAAIA,EAAQ,IACnC,KAAiD98H,MAA1CxtB,KAAK0pJ,UAAUY,EAAQ,IAAIA,EAAQ,KAAoBA,EAAQ,GAAK,GAAG,CAE1E,GADAA,EAAQ,KACsC98H,MAA1CxtB,KAAK0pJ,UAAUY,EAAQ,IAAIA,EAAQ,IAAkB,CACrDtqJ,KAAK0pJ,UAAUY,EAAQ,IAAIA,EAAQ,IAAMz/I,EAAI,EAC7C7K,KAAK+pJ,YAAYl/I,GAAK,CAAC7K,KAAK0pJ,UAAU7mJ,QAAUynJ,EAAQ,GAAK,GAAIA,EAAQ,IACzE,KACH,CACD7/I,QAAQC,IAAI4/I,EAAQ,GACvB,MAEDtqJ,KAAK0pJ,UAAUY,EAAQ,IAAKA,EAAQ,IAAMz/I,EAAI,EAC9C7K,KAAK+pJ,YAAYl/I,GAAK,CAAC7K,KAAK0pJ,UAAU7mJ,QAAUynJ,EAAQ,GAAK,GAAIA,EAAQ,GAEhF,KAAM,CACH,IAAIA,EAAU,CAAC,EAAG,GAClB,KAAiD98H,MAA1CxtB,KAAK0pJ,UAAUY,EAAQ,IAAIA,EAAQ,KAAoBA,EAAQ,GAAK,GAEvE,GADAA,EAAQ,KACsC98H,MAA1CxtB,KAAK0pJ,UAAUY,EAAQ,IAAIA,EAAQ,IAAkB,CACrDtqJ,KAAK0pJ,UAAUY,EAAQ,IAAIA,EAAQ,IAAMz/I,EAAI,EAC7C7K,KAAK+pJ,YAAYl/I,GAAK,CAAC7K,KAAK0pJ,UAAU7mJ,QAAUynJ,EAAQ,GAAK,GAAIA,EAAQ,IACzE,KACH,CAER,C,CAKL,SAAAC,CAAUlU,GACd,GAAiB,YAAbr2I,KAAK8lF,KAsDT,IAAK,IAAI0kE,EAAc,EAAGA,EAAM,EAAGA,IAAO,CACtCnU,EAAIgI,YAAcv3H,GAAYI,wBAAwB,QAASsjI,GAAKviI,eACpE,MAAM5jB,EAAY,EAANmmJ,EAAU,EAAI,GAC1B,IAAK,IAAI3/I,EAAY,EAAGA,EAAI7K,KAAKgqJ,kBAAkBQ,GAAK3nJ,OAAQgI,IAAK,CACjE,IAAI4/I,EAAczqJ,KAAKgqJ,kBAAkBQ,GAAK3/I,GAAK,EAC3D6/I,EAAkB1qJ,KAAK+pJ,YAAYS,GACnCG,EAAkB3qJ,KAAK+pJ,YAAYU,GAC3BpU,EAAIgF,YACJhF,EAAIiF,OAAmB,GAAZoP,EAAO,GAAU,GAAKrmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,IACjErU,EAAIkF,OAAmB,GAAZmP,EAAO,GAAU,GAAKrmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,GAAKrmJ,GACjEsmJ,EAAO,IAAOD,EAAO,IACtBrU,EAAIkF,OAAmB,GAAZmP,EAAO,GAAUrmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,GAAKrmJ,GAC5DsmJ,EAAO,IAAOD,EAAO,GAAK,GAAQC,EAAO,IAAOD,EAAO,GAAK,IAE7DrU,EAAIkF,OAAmB,GAAZmP,EAAO,GAAUrmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAU,GAAKtmJ,GACjEgyI,EAAIkF,OAAyB,IAAjBoP,EAAO,GAAK,GAAUtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAU,GAAKtmJ,IAE3EgyI,EAAIkF,OAAyB,IAAjBoP,EAAO,GAAK,GAAUtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IACxEgyI,EAAIkF,OAAqB,GAAboP,EAAO,GAAW,GAAKtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IACzEgyI,EAAIkF,OAAqB,GAAboP,EAAO,GAAW,GAAKtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,KAElB,GAAnCx/I,KAAKC,IAAIu/I,EAAO,GAAKD,EAAO,IAC5BrU,EAAIkF,OAAqB,GAAboP,EAAO,GAAW,GAAKtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,KAE3EtU,EAAIkF,OAAmB,GAAZmP,EAAO,GAAUrmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,GAAKrmJ,GACjEgyI,EAAIkF,OAAmB,GAAZmP,EAAO,GAAUrmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IAClEgyI,EAAIkF,OAAmB,GAAZmP,EAAO,GAAU,GAAKrmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IACvEgyI,EAAIkF,OAAmB,GAAZmP,EAAO,GAAU,GAAKrmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,KAG7CtU,EAAIiI,UAAY,EAChBjI,EAAI3iH,QACP,CACJ,MAtFG,IAAK,IAAI82H,EAAc,EAAGA,EAAM,EAAGA,IAAO,CACtCnU,EAAIgI,YAAcv3H,GAAYI,wBAAwB,QAASsjI,GAAKviI,eACpE,MAAM5jB,EAAY,EAANmmJ,EAAW,GACvB,IAAK,IAAI3/I,EAAY,EAAGA,EAAI7K,KAAKiqJ,gBAAgBO,GAAK3nJ,OAAQgI,IAAK,CAC/D,IAAI4/I,EAAczqJ,KAAKiqJ,gBAAgBO,GAAK3/I,GAAK,EAC5D6/I,EAAkB1qJ,KAAK+pJ,YAAYS,GACnCG,EAAkB3qJ,KAAK+pJ,YAAYU,GAIxB,GAHApU,EAAIgF,YACJhF,EAAIiF,OAAmB,GAAZoP,EAAO,GAAU,GAAKrmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,IACjErU,EAAIkF,OAAmB,GAAZmP,EAAO,GAAU,GAAKrmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,GAAKrmJ,GAClEsmJ,EAAO,IAAMD,EAAO,GAAI,CAC1C,IAAIE,EAAa,EACdD,EAAO,IAAMD,EAAO,KACtBE,EAAO,IAEUvU,EAAIkF,OAAmB,GAAZmP,EAAO,GAAUE,EAAOvmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,GAAKrmJ,GACnEsmJ,EAAO,IAAOD,EAAO,GAAK,GAAQC,EAAO,IAAOD,EAAO,GAAK,IAE/EC,EAAO,IAAMD,EAAO,IACtBrU,EAAIkF,OAAyB,IAAjBoP,EAAO,GAAK,GAAUtmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,GAAKrmJ,GACvEgyI,EAAIkF,OAAyB,IAAjBoP,EAAO,GAAK,GAAUtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAU,GAAKtmJ,KAEvEgyI,EAAIkF,OAAmB,GAAZmP,EAAO,GAAUrmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAU,GAAKtmJ,GACjEgyI,EAAIkF,OAAyB,IAAjBoP,EAAO,GAAK,GAAUtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAU,GAAKtmJ,KAGvDgyI,EAAIkF,OAAyB,IAAjBoP,EAAO,GAAK,GAAUtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IACxEgyI,EAAIkF,OAAqB,GAAboP,EAAO,GAAW,GAAKtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IACzEgyI,EAAIkF,OAAqB,GAAboP,EAAO,GAAW,GAAKtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAC5D,MACOD,EAAO,GAAKC,EAAO,IAAM,EACzBtU,EAAIkF,OAAqB,GAAboP,EAAO,GAAW,GAAKtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,IAE3EA,EAAO,IAAMD,EAAO,IACtBrU,EAAIkF,OAAmB,GAAZmP,EAAO,GAAU,GAAKrmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,GAAKrmJ,GACtEgyI,EAAIkF,OAAmB,GAAZmP,EAAO,GAAU,GAAKrmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IACvEgyI,EAAIkF,OAAmB,GAAZoP,EAAO,GAAUtmJ,EAAM,GAA0B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IACvEgyI,EAAIkF,OAAmB,GAAZoP,EAAO,GAAUtmJ,EAAM,GAA0B,IAArB,EAAIsmJ,EAAO,GAAK,MAEvDtU,EAAIkF,OAAmB,GAAZmP,EAAO,GAAUrmJ,EAA2B,IAArB,EAAIqmJ,EAAO,GAAK,GAAU,GAAKrmJ,GACjEgyI,EAAIkF,OAAmB,GAAZmP,EAAO,GAAUrmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IAClEgyI,EAAIkF,OAAmB,GAAZoP,EAAO,GAAU,GAAKtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,GAAUtmJ,EAAM,IACvEgyI,EAAIkF,OAAmB,GAAZoP,EAAO,GAAU,GAAKtmJ,EAA2B,IAArB,EAAIsmJ,EAAO,GAAK,KAI3CtU,EAAIiI,UAAY,EAChBjI,EAAI3iH,QACP,CACJ,C,CAwCF,YAAA41H,CAAaa,GAAkB,GAClCnqJ,KAAKkqJ,cAAcC,GACnB,IAAI9T,EAAMr2I,KAAKi2I,OAAOK,WAAW,MAGjCD,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIG,SAAS,EAAG,EAAG,IAAK,KAExB,IAAK,IAAI5/H,EAAY,EAAGA,EAAI,EAAGA,IAC3B,IAAK,IAAIC,EAAY,EAAGA,EAAI,EAAGA,IAC3Bw/H,EAAIE,UAAYzvH,GAAYW,YAAY,+BACxC4uH,EAAIG,SAAa,GAAJ5/H,EAAS,GAAW,GAAN,EAAW,GAAI,IAC1Cy/H,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIG,SAAa,GAAJ5/H,EAAS,GAAW,GAAN,EAAU,EAAG,GAAI,IAChB4W,MAAxBxtB,KAAK0pJ,UAAU7yI,GAAGD,KACd5W,KAAK0pJ,UAAU7yI,GAAGD,IAAM5W,KAAKqnC,UAC7BgvG,EAAIE,UAAYzvH,GAAYW,YAAY,kBACxC4uH,EAAIG,SAAa,GAAJ5/H,EAAS,GAAW,GAAN,EAAW,GAAI,IAC1Cy/H,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIG,SAAa,GAAJ5/H,EAAS,GAAW,GAAN,EAAY,EAAG,GAAI,IAC9Cy/H,EAAIE,UAAYzvH,GAAYgG,wBAAwB9sB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YACvFkuH,EAAIsT,SAAS3pJ,KAAK0pJ,UAAU7yI,GAAGD,GAAK,GAAQ,GAAJA,EAAS,GAAQ,GAAJC,EAAO,MAG5Dw/H,EAAIE,UAAYzvH,GAAYgG,wBAAwB9sB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YACvFkuH,EAAIG,SAAa,GAAJ5/H,EAAS,GAAS,GAAJC,EAAS,GAAI,IACxCw/H,EAAIE,UAAYzvH,GAAYW,YAAY,uBACxC4uH,EAAIG,SAAa,GAAJ5/H,EAAS,GAAW,GAAN,EAAY,EAAG,GAAI,IAC9Cy/H,EAAIE,UAAYzvH,GAAYW,YAAY,kBACxC4uH,EAAIsT,SAAS3pJ,KAAK0pJ,UAAU7yI,GAAGD,GAAK,GAAQ,GAAJA,EAAS,GAAQ,GAAJC,EAAO,MAK5E7W,KAAKuqJ,UAAUlU,E,QA2GVwU,GAqmBT,WAAA9qJ,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EApmBb7yB,KAAMu9F,OAAkB,KAEdv9F,KAAeqvI,GAAmB,IAAInT,GAAel8H,KAAK6yB,GAC1D7yB,KAAA8qJ,GAAoC,IAAIvtB,GAAcv9H,KAAK6yB,GAAM,GAAQ,GACzE7yB,KAAA+qJ,GAAgC,IAAIxtB,GAAcv9H,KAAK6yB,GAAM,EAAM,GACnE7yB,KAAAgrJ,GAAoC,IAAIztB,GAAcv9H,KAAK6yB,GAAM,EAAO,GACxE7yB,KAAYirJ,GAAgB,IAAI/X,GAAYlzI,KAAK6yB,EAAM7yB,MACvDA,KAAWkrJ,GAAe,IAAI7zB,GAAWr3H,KAAK6yB,EAAM7yB,MACpDA,KAAWmrJ,GAAe,IAAI31B,GAAWx1H,KAAK6yB,GAC9C7yB,KAAM25H,GAAU,IAAIuO,GAAMloI,KAAK6yB,GAC/B7yB,KAAAorJ,GAAoC,IAAI1xB,GAAgB15H,KAAK6yB,EAAM7yB,KAAK25H,IACxE35H,KAAWygG,GAAsBxE,GAAO,CAAEhoE,MAAO,aAAchf,KAAM,SAAUylC,MAAO,gBAAkBwhD,GAAK,SAC7Gl8F,KAAYqrJ,GAAsBpvD,GAAO,CAAEhoE,MAAO,cAAe3O,MAAO,iBAAkBrQ,KAAM,SAAUylC,MAAO,iBAAmB,SACpI16C,KAAasrJ,GAAsBrvD,GAAO,CAAEhoE,MAAO,eAAgB3O,MAAO,iBAAkBrQ,KAAM,SAAUylC,MAAO,uBAAyBwhD,GAAK,WACjJl8F,KAAWurJ,GAAsBtvD,GAAO,CAAEhoE,MAAO,aAAc3O,MAAO,iBAAkBrQ,KAAM,SAAUylC,MAAO,0BAA4B,kBAC3I16C,KAAAwrJ,GAAoCvvD,GAAO,CAAEhoE,MAAO,gBAAiBhf,KAAM,SAAUylC,MAAO,gCAC5F16C,KAAAyrJ,GAAoCxvD,GAAO,CAAEhoE,MAAO,gBAAiBhf,KAAM,SAAUylC,MAAO,6BAC5F16C,KAAa0rJ,GAAW,IAAI/nC,GAAOvnB,GAAM,CAAE1hD,MAAO,cAAep1B,MAAO,uCAAwCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,KAAMxT,MAAO,KAAMo5F,KAAM,MAAQ18F,KAAK6yB,EAAM,MAAM,GAChM7yB,KAAA2rJ,GAAkC5lI,EAAImN,KAAK,CAAE,iBAAkB,OAAQE,MAAO,MAAOC,OAAQ,MAAOzc,EAAG,KAAMC,EAAG,MAAOsc,KAAMrM,GAAYuJ,qBACzIrwB,KAAAkyH,GAAgCnsG,EAAImN,KAAK,CAAE,iBAAkB,OAAQG,OAAQ,MAAOD,MAAO,KAAMxc,EAAG,KAAMC,EAAG,MAAOsc,KAAM,wBAC1HnzB,KAAAmyH,GAAgCpsG,EAAImN,KAAK,CAAE,iBAAkB,OAAQE,MAAO,MAAOC,OAAQ,MAAOzc,EAAG,KAAMC,EAAG,MAAOsc,KAAMrM,GAAYwJ,gBACvItwB,KAAAoyH,GAAyBrsG,EAAI8tE,KAAK,CAAE,aAAc,OAAQn+E,OAAQ,QAClE1V,KAAAqyH,GAAyBtsG,EAAI8tE,KAAK,CAAE,aAAc,SAAUn+E,OAAQ,QACpE1V,KAAAsyH,GAAyBvsG,EAAI8tE,KAAK,CAAE,aAAc,MAAOn+E,OAAQ,SACjE1V,KAASuyH,GAAuBxsG,EAAIysG,eAAe,CAAEC,GAAI,cAAeC,cAAe,kBAAoB1yH,KAAKoyH,GAAQpyH,KAAKqyH,GAAQryH,KAAKsyH,IAC1ItyH,KAAK2yH,GAAmB5sG,EAAI6sG,KAAK,GAAI5yH,KAAKuyH,IAC1CvyH,KAAA4rJ,GAAqC7lI,EAAIwN,IAAI,CAAEjO,MAAO,wEAAyE8N,MAAO,QAASC,OAAQ,OAAQ+rE,oBAAqB,OAAQD,QAAS,cAClNn/F,KAAK2yH,GACL3yH,KAAK2rJ,GACL3rJ,KAAKkyH,GACLlyH,KAAKmyH,IAEQnyH,KAAA6rJ,GAAgCt5H,GAAI,CAAE0B,MAAO,sBAAuB3O,MAAO,qCACxFtlB,KAAK4rJ,IAEQ5rJ,KAAA8rJ,GAA+BxvD,GAAO,CAAEh3E,MAAO,gBAC5Di3E,GAAO,CAAE02C,UAAU,EAAM73B,UAAU,EAAMqU,QAAQ,GAAS,QAC1DlzB,GAAO,CAAEj5F,MAAO,OAAS,oBACzBi5F,GAAO,CAAEj5F,MAAO,UAAY,qBAAuBsa,EAAauB,WAAa,MAC7Eo9E,GAAO,CAAEj5F,MAAO,UAAY,qBAAuBsa,EAAauB,WAAa,MAC7Eo9E,GAAO,CAAEj5F,MAAO,WAAa,mBAC7Bi5F,GAAO,CAAEj5F,MAAO,YAAc,oBAC9Bi5F,GAAO,CAAEj5F,MAAO,cAAgB,sBAChCi5F,GAAO,CAAEj5F,MAAO,cAAgB,yBAChCi5F,GAAO,CAAEj5F,MAAO,aAAe,0BAC/Bi5F,GAAO,CAAEj5F,MAAO,gBAAkB,6BAErBtD,KAAA+rJ,GAA+BzvD,GAAO,CAAEh3E,MAAO,gBAC5Di3E,GAAO,CAAE02C,UAAU,EAAM73B,UAAU,EAAMqU,QAAQ,GAAS,QAC1DlzB,GAAO,CAAEj5F,MAAO,QAAU,YAC1Bi5F,GAAO,CAAEj5F,MAAO,QAAU,YAC1Bi5F,GAAO,CAAEj5F,MAAO,QAAU,oBAC1Bi5F,GAAO,CAAEj5F,MAAO,cAAgB,2BAChCi5F,GAAO,CAAEj5F,MAAO,gBAAkB,0BAA4Bsa,EAAauB,WAAa,OACxFo9E,GAAO,CAAEj5F,MAAO,cAAgB,kBAChCi5F,GAAO,CAAEj5F,MAAO,cAAgB,4BAChCi5F,GAAO,CAAEj5F,MAAO,iBAAmB,mBAAqBsa,EAAauB,WAAa,MAClFo9E,GAAO,CAAEj5F,MAAO,iBAAmB,6BAA+Bsa,EAAauB,WAAa,MAC5Fo9E,GAAO,CAAEj5F,MAAO,iBAAmB,uBACnCi5F,GAAO,CAAEj5F,MAAO,aAAe,kBAC/Bi5F,GAAO,CAAEj5F,MAAO,qBAAuB,iCACvCi5F,GAAO,CAAEj5F,MAAO,eAAiB,2BACjCi5F,GAAO,CAAEj5F,MAAO,iBAAmB,6BACnCi5F,GAAO,CAAEj5F,MAAO,qBAAuB,kCAC9Ci5F,GAAO,CAAEj5F,MAAO,2BAA6B,oCACtCi5F,GAAO,CAAEj5F,MAAO,eAAiB,+BACjCi5F,GAAO,CAAEj5F,MAAO,YAAc,6BAC9Bi5F,GAAO,CAAEj5F,MAAO,mBAAqB,2BACrCi5F,GAAO,CAAEj5F,MAAO,mBAAqB,4BAC5Ci5F,GAAO,CAAEj5F,MAAO,eAAiB,+BAEbtD,KAAYgsJ,GAAsB1vD,GAAO,CAAEh3E,MAAO,gBAC/Di3E,GAAO,CAAE02C,UAAU,EAAM73B,UAAU,EAAMqU,QAAQ,GAAS,eAC1DlzB,GAAO,CAAEj5F,MAAO,YAAc,qBAC9Bi5F,GAAO,CAAEj5F,MAAO,cAAgB,iCAChCi5F,GAAO,CAAEj5F,MAAO,qBAAuB,+BACvCi5F,GAAO,CAAEj5F,MAAO,eAAiB,mBACjCi5F,GAAO,CAAEj5F,MAAO,aAAe,iCAC/Bi5F,GAAO,CAAEj5F,MAAO,qBAAuB,mCACvCi5F,GAAO,CAAEj5F,MAAO,mBAAqB,gCACrCi5F,GAAO,CAAEj5F,MAAO,gBAAkB,gCAClCi5F,GAAO,CAAEj5F,MAAO,iBAAmB,0BACnCi5F,GAAO,CAAEj5F,MAAO,qBAAuB,2BACvCi5F,GAAO,CAAEj5F,MAAO,uBAAyB,yBACzCi5F,GAAO,CAAEj5F,MAAO,qBAAuB,4BACvCi5F,GAAO,CAAEj5F,MAAO,oBAAsB,wBACtCi5F,GAAO,CAAEj5F,MAAO,oBAAsB,qBACtCi5F,GAAO,CAAEj5F,MAAO,2BAA6B,8BAC7Ci5F,GAAO,CAAEj5F,MAAO,UAAY,iBAC5Bi5F,GAAO,CAAEj5F,MAAO,cAAgB,gBACvCi5F,GAAO,CAAEj5F,MAAO,eAAiB,mBAC1Bi5F,GAAO,CAAEj5F,MAAO,kBAAoB,6BAEvBtD,KAAYisJ,GAAsBrE,GAAatrD,KAAUh7F,EAAO4O,OAAOiK,KAAImgC,GAASA,EAAM91C,QAC1FxE,KAAUksJ,GAAsBtE,GAAatrD,KAAUh7F,EAAO+O,KAAK8J,KAAI/W,GAAOA,EAAIoB,OAAMkgG,WACxF1kG,KAAcmsJ,GAAqB/vD,GAAM,CAAEnnF,KAAM,SAAU1H,IAAKjM,EAAOqP,UAAWmG,IAAKxV,EAAOsP,UAAWtN,MAAO,MAChHtD,KAAYosJ,GAAW,IAAIzoC,GAAOvnB,GAAM,CAAE92E,MAAO,qCAAsCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,MAAOxT,MAAO,MAAOo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIsP,GAAYt1F,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAC3PhmF,KAAAqsJ,GAAkCjwD,GAAM,CAAE92E,MAAO,0EAA2ErQ,KAAM,SAAUynF,KAAM,MAClJ18F,KAAAssJ,GAAwB,IAAI3oC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO8U,YAAc,EAAG9S,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIqR,GAAar3F,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACpPhmF,KAAAusJ,GAA6Bh6H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,WAAa,WAAYzsJ,KAAKssJ,GAAct4H,WAC1Jh0B,KAAA0sJ,GAAwB,IAAI/oC,GAAOvnB,GAAM,CAAE92E,MAAO,+BAAgCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO8P,YAAc,EAAG9N,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIsR,GAAat3F,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACtQhmF,KAAA2sJ,GAA6Bp6H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,WAAa,WAAYzsJ,KAAK0sJ,GAAc14H,WAC1Jh0B,KAAA4sJ,GAA6B,IAAIjpC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOyP,iBAAmB,EAAGzN,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIoR,GAAkBp3F,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACnQhmF,KAAA6sJ,GAAkCt6H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,gBAAkB,SAAUzsJ,KAAK4sJ,GAAmB54H,WACvKh0B,KAAA8sJ,GAA2B,IAAInpC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOuP,eAAiB,EAAGvN,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAImR,GAAgBn3F,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAC7PhmF,KAAA+sJ,GAAgCx6H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,eAAgBzsJ,KAAK8sJ,GAAiB94H,WACvKh0B,KAAagtJ,GAAsBpF,GAAatrD,KAAUh7F,EAAO2Q,QAAQkI,KAAI2rB,GAAUA,EAAOthC,QAC9FxE,KAAAitJ,GAA0CnF,IAAmB,EAAO,qBACpE9nJ,KAAAktJ,GAAuCpF,IAAmB,EAAM,oBAChE9nJ,KAAgBmtJ,GAAsBvF,GAAatrD,KAAUh7F,EAAOiW,WAAW4C,KAAIgG,GAAaA,EAAU3b,QAC1GxE,KAAmBotJ,GAAmB76H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,eAAgBl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAKmtJ,KAC9LntJ,KAAkBqtJ,GAAwB,GAC1CrtJ,KAAAstJ,GAA0CrxD,GAAO,CAAEhnF,KAAM,SAAUgf,MAAO,+BAC1Ej0B,KAAAutJ,GAA6CtxD,GAAO,CAAEhnF,KAAM,SAAUgf,MAAO,sBAC7Ej0B,KAAAwtJ,GAAwCj7H,GAAI,CAAE0B,MAAO,kBAAoBj0B,KAAKutJ,GAAyBvtJ,KAAKstJ,IAC5GttJ,KAAAytJ,GAAwCl7H,GAAI,CAAE0B,MAAO,YAAa3O,MAAO,kBAAoB42E,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,oBAAsB,eAAgBzsJ,KAAKwtJ,IAC7LxtJ,KAAA0tJ,GAAkC,IAAI/pC,GAAOvnB,GAAM,CAAE92E,MAAO,+BAAgCrQ,KAAM,QAAS1H,IAAKpC,KAAK0hB,OAAOvrB,EAAOyU,YAAc,GAAIe,IAAK3L,KAAK0hB,MAAMvrB,EAAOyU,YAAc,GAAIzS,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIuU,GAAav6F,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAC5ThmF,KAA+B2tJ,GAAqBvxD,GAAM,CAAE92E,MAAO,6BAA8BmtG,GAAI,uBAAwBx9G,KAAM,SAAUynF,KAAM,IAAKnvF,IAAKpC,KAAK0hB,OAAOvrB,EAAOyU,YAAc,GAAIe,IAAK3L,KAAK0hB,MAAMvrB,EAAOyU,YAAc,GAAIzS,MAAO,MAClPtD,KAAA4tJ,GAA6Cr7H,GAAI,CAAE0B,MAAO,YAAa3O,MAAO,eAAiB42E,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,sBAAuBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,qBAAuB,aACzMzsJ,KAAA6tJ,GAA6Ct7H,GAAI,CAAE0B,MAAO,aAAe1B,GAAI,GAC1FA,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,KAAOmsE,GAAK,CAAEjoE,MAAO,OAASj0B,KAAK4tJ,KACxFr7H,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,uBAAyB/vB,KAAK2tJ,KACpF3tJ,KAAK0tJ,GAAwB15H,WACfh0B,KAAA8tJ,GAAqB,IAAInqC,GAAOvnB,GAAM,CAAE92E,MAAO,+BAAgCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO4U,OAAQ5S,MAAOhC,EAAO2U,UAAWymF,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAI2U,GAAU36F,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACpQhmF,KAAY+tJ,GAAsB9xD,GAAO,CAAE32E,MAAO,4EAA6EknI,QAAS,IAAMxsJ,KAAKguJ,GAAmB,IAAoB,KAC1LhuJ,KAAAiuJ,GAAuC7xD,GAAM,CAAE92E,MAAO,+BAAgCmtG,GAAI,oBAAqBx9G,KAAM,SAAUynF,KAAM,IAAKnvF,IAAK,IAAKuJ,IAAK,MAAOxT,MAAO,MACvKtD,KAAAkuJ,GAAgC37H,GAAI,CAAE0B,MAAO,aAAe1B,GAAI,GAC7E2pE,GAAK,CAAEjoE,MAAO,MAAOk6H,SAAU,IAAK7oI,MAAO,kCAAmCknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,QAAU,SACxHl6H,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,uBAAyB/vB,KAAKiuJ,KACpFjuJ,KAAK+tJ,GAAc/tJ,KAAK8tJ,GAAW95H,WACrBh0B,KAAAouJ,GAA0B,IAAIzqC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOob,WAAW1X,WAAW,aAAa4X,UAAWtZ,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAI4U,GAAe56F,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACrRhmF,KAAAquJ,GAA4B97H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,aAAe,UAAWzsJ,KAAKouJ,GAAgBp6H,WACxLh0B,KAAAsuJ,GAAiC/7H,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,kBAAoBtlB,KAAKquJ,IACjGruJ,KAAeuuJ,GAAsB3G,GAAatrD,KAAUh7F,EAAOC,UAAU4Y,KAAIxP,GAAQA,EAAKnG,QAC9FxE,KAAgBwuJ,GAAsB5G,GAAatrD,KAAUh7F,EAAOqK,WAAWwO,KAAIxP,GAAQA,EAAKnG,QAGhGxE,KAAAyuJ,GAAsCryD,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,mEACvEtlB,KAAA0uJ,GAA0B9G,GAAatrD,KAAU,CAAC,OAAQ,YAAa,YAAa,mBACpFt8F,KAAyB2uJ,GAAGvyD,GAAM,CAAEnnF,KAAM,SAAU1H,IAAK,IAAKmvF,KAAM,IAAKp5F,MAAO,IAAKgiB,MAAO,4FAC5FtlB,KAAuB4uJ,GAAGxyD,GAAM,CAAEnnF,KAAM,SAAU1H,IAAK,IAAKmvF,KAAM,IAAKp5F,MAAO,IAAKgiB,MAAO,4FAC1FtlB,KAAA6uJ,GAAiC5yD,GAAO,CAAEhnF,KAAM,SAAUqQ,MAAO,gEAAkES,EAAIwN,IAAI,CAAEH,MAAO,KAAMC,OAAQ,KAAM8rE,QAAS,gBAAiB,iBAAkB,OAAQ75E,MAAO,8BAAgCS,EAAImN,KAAK,CAAEtc,EAAG,IAAKC,EAAG,KAAMuc,MAAO,IAAKC,OAAQ,KAAMF,KAAMrM,GAAYgJ,cAAgB/J,EAAI6N,KAAK,CAAEgzE,EAAG,yBAA0BzzE,KAAMrM,GAAYgJ,gBACrZ9vB,KAA2B8uJ,GAAG1yD,GAAM,CAAEnnF,KAAM,SAAU1H,IAAK,IAAKmvF,KAAM,IAAKp5F,MAAO,IAAKgiB,MAAO,4FAC9FtlB,KAAA+uJ,GAA4B3yD,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,mEAEhEtlB,KAAkBgvJ,GAAmBz8H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,aAAe,UAAWl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAKuuJ,KACpLvuJ,KAAmBivJ,GAAmB18H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,WAAYl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAKwuJ,KAC1LxuJ,KAAyBkvJ,GAAsBjzD,GAAO,CAAE32E,MAAO,yEAA0EknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,uBAAyB,KAClMzsJ,KAAAmvJ,GAAsD58H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,kBAAmBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,mBAAoBzsJ,KAAKyuJ,IAC7MzuJ,KAA0BovJ,GAAG78H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,sBAAuBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,aAAe,eAAgBl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAK0uJ,KAClN1uJ,KAAqBqvJ,GAAG98H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,sBAAuBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,gBAAiBzsJ,KAAKkvJ,GAA2BhzD,GAAK,CAAE52E,MAAO,kBAAoBtlB,KAAK2uJ,KAC/O3uJ,KAAmBsvJ,GAAG/8H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,sBAAuBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,YAAc,cAAevwD,GAAK,CAAE52E,MAAO,kBAAoBtlB,KAAK4uJ,GAAyB5uJ,KAAK6uJ,KACvO7uJ,KAAuBuvJ,GAAGh9H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,WAAa,YAAavwD,GAAK,CAAE52E,MAAO,kBAAoBtlB,KAAK8uJ,KAC5K9uJ,KAAAwvJ,GAA4Bj9H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,eAAgBzsJ,KAAK+uJ,IAClJ/uJ,KAAgByvJ,GAAoB,IAAIz/B,GAAgBhwH,KAAK6yB,GAC7D7yB,KAAA0vJ,GAA6Bn9H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,SAAUzsJ,KAAKyvJ,GAAiBz7H,WAC9Jh0B,KAAiB2vJ,GAAsB/H,GAAatrD,KAAUh7F,EAAOoT,YAAYyF,KAAIqF,GAAcA,EAAWhb,QAC9GxE,KAAmB4vJ,GAAsB3zD,GAAO,CAAE32E,MAAO,4EAA6EknI,QAAS,IAAMxsJ,KAAKguJ,GAAmB,IAA2B,KACxMhuJ,KAAc6vJ,GAAmBt9H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,eAAgBzsJ,KAAK4vJ,GAAqBr9H,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,iBAAmBtlB,KAAK2vJ,KAC5O3vJ,KAAA8vJ,GAA4C1zD,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,+CAC7EtlB,KAAA+vJ,GAAuCx9H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,wBAA0B,cAAezsJ,KAAK8vJ,IAClM9vJ,KAAAgwJ,GAAwCz9H,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,kBAAoBtlB,KAAK+vJ,IAExG/vJ,KAAciwJ,GAAsB3zD,GAAOC,GAAO,CAAE02C,UAAU,EAAM73B,UAAU,EAAMqU,QAAQ,KAC5FzvH,KAAqBkwJ,GAAsBj0D,GAAO,CAAE32E,MAAO,8CAA+C2O,MAAO,eAAgBu4H,QAAS,IAAMxsJ,KAAKmwJ,IAAoB,IAAS,UAClLnwJ,KAAuBowJ,GAAsBn0D,GAAO,CAAE32E,MAAO,8CAA+C2O,MAAO,2BAA4Bu4H,QAAS,IAAMxsJ,KAAKmwJ,IAAoB,IAAU,YACjMnwJ,KAAgBqwJ,GAAgB99H,GAAI,CAAE0B,MAAO,YAAa3O,MAAO,yCAA2C42E,GAAK,CAAE52E,MAAO,sBAAuB2O,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,iBAAkBl6H,GAAI,CAAE0B,MAAO,kBAAoBj0B,KAAKkwJ,GAAuBlwJ,KAAKowJ,KACpSpwJ,KAAeswJ,GAAiB,IAAIvvD,GAAa/gG,KAAK6yB,GACtD7yB,KAAauwJ,GAAsBt0D,GAAO,CAAE32E,MAAO,sEAAuEknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,2BAA6B,KACvLzsJ,KAAAwwJ,GAA4Bj+H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,aAAe,YAAazsJ,KAAKuwJ,GAAevwJ,KAAKswJ,GAAgBt8H,WAClLh0B,KAAAywJ,GAAmC,IAAI9sC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO8S,qBAAuB,EAAG9Q,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAI4G,GAAwB5sF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAC5RhmF,KAAA0wJ,GAAwCn+H,GAAI,CAAE0B,MAAO,YAAaymB,MAAO,oCAAsCwhD,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,eAAgBzsJ,KAAKywJ,GAAyBz8H,WAC5Nh0B,KAAA2wJ,GAAoC,IAAIhtC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO+S,sBAAwB,EAAG/Q,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAI6G,GAAyB7sF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAC/RhmF,KAAA4wJ,GAAyCr+H,GAAI,CAAE0B,MAAO,YAAaymB,MAAO,kCAAoCwhD,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,oBAAsB,gBAAiBzsJ,KAAK2wJ,GAA0B38H,WAEhOh0B,KAAuB6wJ,GAAsB50D,GAAO,CAAE32E,MAAO,8CAA+C2O,MAAO,eAAgBu4H,QAAS,IAAMxsJ,KAAK8wJ,IAAsB,IAAS,UACtL9wJ,KAAyB+wJ,GAAsB90D,GAAO,CAAE32E,MAAO,8CAA+C2O,MAAO,2BAA4Bu4H,QAAS,IAAMxsJ,KAAK8wJ,IAAsB,IAAU,YACrM9wJ,KAAkBgxJ,GAAgBz+H,GAAI,CAAE0B,MAAO,YAAa3O,MAAO,yCAA2C42E,GAAK,CAAE52E,MAAO,sBAAuB2O,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,mBAAoBl6H,GAAI,CAAE0B,MAAO,kBAAoBj0B,KAAK6wJ,GAAyB7wJ,KAAK+wJ,KAC1S/wJ,KAAiBixJ,GAAiB,IAAIlwD,GAAa/gG,KAAK6yB,GAAM,GAC9D7yB,KAAekxJ,GAAsBj1D,GAAO,CAAE32E,MAAO,sEAAuEknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,6BAA+B,KAC3LzsJ,KAAAmxJ,GAA8B5+H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,cAAezsJ,KAAKkxJ,GAAiBlxJ,KAAKixJ,GAAkBj9H,WAC5Lh0B,KAAAoxJ,GAAqC,IAAIztC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO8S,qBAAuB,EAAG9Q,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAI8G,GAA0B9sF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAChShmF,KAAAqxJ,GAA0C9+H,GAAI,CAAE0B,MAAO,YAAaymB,MAAO,oCAAsCwhD,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,eAAgBzsJ,KAAKoxJ,GAA2Bp9H,WAChOh0B,KAAAsxJ,GAAsC,IAAI3tC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO+S,sBAAwB,EAAG/Q,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAI+G,GAA2B/sF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACnShmF,KAAAuxJ,GAA2Ch/H,GAAI,CAAE0B,MAAO,YAAaymB,MAAO,kCAAoCwhD,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,oBAAsB,gBAAiBzsJ,KAAKsxJ,GAA4Bt9H,WAEpOh0B,KAAAwxJ,GAA4B,IAAI7tC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO6X,gBAAiB7V,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIkG,GAAiBlsF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAC5PhmF,KAAmByxJ,GAAsBx1D,GAAO,CAAE32E,MAAO,8EAA+EknI,QAAS,IAAMxsJ,KAAKguJ,GAAmB,IAA2B,KAC1MhuJ,KAAA0xJ,GAAiCn/H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,gBAAiBzsJ,KAAKyxJ,GAAqBzxJ,KAAKwxJ,GAAkBx9H,WACrMh0B,KAAoB2xJ,GAAW,IAAIhuC,GAAOvnB,GAAM,CAAE92E,MAAO,oCAAqCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAK,KAAMxT,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAImG,GAAoBnsF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACvQhmF,KAAA4xJ,GAAoCr/H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,kBAAoB,WAAYzsJ,KAAK2xJ,GAAqB39H,WAC3Mh0B,KAAA6xJ,GAAwCt/H,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,kBAAoBtlB,KAAK4xJ,IAExG5xJ,KAAA8xJ,GAA4B,IAAInuC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO8Y,gBAAkB,EAAG9W,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIoG,GAAiBpsF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAChQhmF,KAAA+xJ,GAA4C,CAACx/H,GAAI,CAAE0B,MAAO,mBAAoB3O,MAAO,CAAE4tF,MAAOpsF,GAAY0J,SAAY+B,GAAI,CAAE0B,MAAO,mBAAoB3O,MAAO,CAAE4tF,MAAOpsF,GAAY0J,MAAOgF,KAAM,SAAYjD,GAAI,CAAE0B,MAAO,mBAAoB3O,MAAO,CAAE4tF,MAAOpsF,GAAY0J,MAAOgF,KAAM,WACtRx1B,KAAAgyJ,GAA4C,CAACz/H,GAAI,CAAE0B,MAAO,mBAAoB3O,MAAO,CAAE4tF,MAAOpsF,GAAY2J,UAAW+E,KAAO,IAAU,GAAM,OAAUjD,GAAI,CAAE0B,MAAO,mBAAoB3O,MAAO,CAAE4tF,MAAOpsF,GAAY2J,UAAW+E,KAAO,KAAW,GAAM,QACtPx1B,KAAAiyJ,GAA6C1/H,GAAI,CAAEjN,MAAO,sCAAwCtlB,KAAK8xJ,GAAkB99H,UAAWzB,GAAI,CAAE0B,MAAO,6BAA+Bj0B,KAAK+xJ,GAAyB/xJ,KAAKgyJ,KACnNhyJ,KAAAkyJ,GAAiC3/H,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,gBAAiBzsJ,KAAKiyJ,IACzJjyJ,KAAAmyJ,GAAwB,IAAIxuC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAKjM,EAAOkZ,UAAYlZ,EAAOgZ,aAAcxD,IAAKxV,EAAOiZ,UAAYjZ,EAAOgZ,aAAchX,MAAO,EAAGo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIqG,GAAarsF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACrShmF,KAAqBoyJ,GAAqBh2D,GAAM,CAAE92E,MAAO,+BAAgCmtG,GAAI,uBAAwBx9G,KAAM,SAAUynF,KAAM,IAAKnvF,IAAKjM,EAAOkZ,UAAYlZ,EAAOgZ,aAAcxD,IAAKxV,EAAOiZ,UAAYjZ,EAAOgZ,aAAchX,MAAO,IACjPtD,KAAAqyJ,GAAmC9/H,GAAI,CAAE0B,MAAO,aAAe1B,GAAI,GAChF2pE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,kCAAmCknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,WAAa,YAC5Gl6H,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,uBAAyB/vB,KAAKoyJ,KACpFpyJ,KAAKmyJ,GAAcn+H,WACLh0B,KAAAsyJ,GAA4B,IAAI3uC,GAAOvnB,GAAM,CAAE92E,MAAO,+BAAgCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO4Z,gBAAkB,EAAG5X,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIsG,GAAiBtsF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAClRhmF,KAAAuyJ,GAAiChgI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,eAAgBzsJ,KAAKsyJ,GAAkBt+H,WAC1Kh0B,KAAAwyJ,GAAiCp2D,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,+CAClEtlB,KAAAyyJ,GAA4BlgI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,YAAc,aAAczsJ,KAAKwyJ,IAC1KxyJ,KAAA0yJ,GAAwC,IAAI/uC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOia,4BAA8B,EAAGjY,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIwG,GAA6BxsF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACpShmF,KAAA2yJ,GAA6CpgI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,2BAA6B,cAAezsJ,KAAK0yJ,GAA8B1+H,WAC7Mh0B,KAAA4yJ,GAAgC,IAAIjvC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO+Z,oBAAsB,EAAG/X,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIuG,GAAqBvsF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAC5QhmF,KAAA6yJ,GAAqCtgI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,mBAAqB,eAAgBzsJ,KAAK4yJ,GAAsB5+H,WACtLh0B,KAAA8yJ,GAA+B,IAAInvC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAO6Z,mBAAqB,EAAG7X,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIyG,GAAoBzsF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACzQhmF,KAAA+yJ,GAAoCxgI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,kBAAoB,YAAazsJ,KAAK8yJ,GAAqB9+H,WAEhLh0B,KAAegzJ,GAAuB/2D,GAAO,CAAE32E,MAAO,4EAA6EknI,QAAS,IAAMxsJ,KAAKguJ,GAAmB,IAAuB,KAEjMhuJ,KAAaizJ,GAAsBrL,GAAatrD,KAAUh7F,EAAOiU,QAAQ4E,KAAIwF,GAAUA,EAAOnb,QAC9FxE,KAAgBkzJ,GAAgB3gI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,WAAa,WAAYzsJ,KAAKgzJ,GAAiBzgI,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,iBAAmBtlB,KAAKizJ,KAG/NjzJ,KAAAmzJ,GAA0C/2D,GAAM,CAAE92E,MAAO,0FAA2FmtG,GAAI,uBAAwBx9G,KAAM,SAAUynF,KAAM,IAAKnvF,IAAK,EAAGuJ,IAAK,EAAGxT,MAAO,IAClOtD,KAAAozJ,GAAmC7gI,GAAI,CAAE0B,MAAO,aAAe1B,GAAI,GAChF2pE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,kCAAmCknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,YAClHl6H,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,uBAAyB/vB,KAAKmzJ,MAEtEnzJ,KAAAqzJ,GAA0Cj3D,GAAM,CAAE92E,MAAO,0FAA2FmtG,GAAI,uBAAwBx9G,KAAM,SAAUynF,KAAM,QAASnvF,KAAM,GAAIuJ,IAAK,GAAIxT,MAAO,IACzOtD,KAAAszJ,GAAmC/gI,GAAI,CAAE0B,MAAO,aAAe1B,GAAI,GAChF2pE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,kCAAmCknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,YAClHl6H,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,uBAAyB/vB,KAAKqzJ,MAGtErzJ,KAAAuzJ,GAA0Cn3D,GAAM,CAAE92E,MAAO,0FAA2FmtG,GAAI,uBAAwBx9G,KAAM,SAAUynF,KAAM,QAASnvF,KAAM,GAAIuJ,IAAK,GAAIxT,MAAO,IACzOtD,KAAAwzJ,GAAmCjhI,GAAI,CAAE0B,MAAO,aAAe1B,GAAI,GAChF2pE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,kCAAmCknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,YAClHl6H,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,uBAAyB/vB,KAAKuzJ,MAEtEvzJ,KAAAyzJ,GAA8Cr3D,GAAM,CAAE92E,MAAO,0FAA2FmtG,GAAI,2BAA4Bx9G,KAAM,SAAUynF,KAAM,QAASnvF,KAAM,EAAGuJ,IAAK,EAAGxT,MAAO,MAC/OtD,KAAA0zJ,GAAuCnhI,GAAI,CAAE0B,MAAO,aAAe1B,GAAI,GACpF2pE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,kCAAmCknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,qBAAuB,gBACtHl6H,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,uBAAyB/vB,KAAKyzJ,MAEtEzzJ,KAAA2zJ,GAAwCv3D,GAAM,CAAE92E,MAAO,0FAA2FmtG,GAAI,qBAAsBx9G,KAAM,SAAUynF,KAAM,QAASnvF,KAAM,EAAGuJ,IAAK,EAAGxT,MAAO,IACnOtD,KAAA4zJ,GAAiCrhI,GAAI,CAAE0B,MAAO,aAAe1B,GAAI,GAC9E2pE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,kCAAmCknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,UAChHl6H,GAAI,CAAEjN,MAAO,UAAYwB,GAAYiJ,cAAgB,uBAAyB/vB,KAAK2zJ,MAItE3zJ,KAAA6zJ,GAAoCthI,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,kBAAoBtlB,KAAKozJ,GAAkBpzJ,KAAKszJ,GAAkBtzJ,KAAKwzJ,GAAkBxzJ,KAAK0zJ,GAAsB1zJ,KAAK4zJ,IAEpM5zJ,KAAY8zJ,GAAsBlM,GAAatrD,KAAUh7F,EAAOyV,OAAOoD,KAAIuF,GAASA,EAAMlb,QAC1FxE,KAAc+zJ,GAAsB93D,GAAO,CAAE32E,MAAO,4EAA6EknI,QAAS,IAAMxsJ,KAAKguJ,GAAmB,IAAsB,KAE9LhuJ,KAAeg0J,GAAgBzhI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,WAAa,WAAYzsJ,KAAK+zJ,GAAgBxhI,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAK8zJ,KACrM9zJ,KAAAi0J,GAA+B,IAAItwC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOob,WAAW1X,WAAW,aAAa4X,UAAWtZ,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIwF,GAAoBxrF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GAC/RhmF,KAAAk0J,GAAiC3hI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,kBAAoB,UAAWzsJ,KAAKi0J,GAAqBjgI,WACvMh0B,KAAAm0J,GAAmC/3D,GAAM,CAAEnnF,KAAM,WAAYqQ,MAAO,+CACpEtlB,KAAAo0J,GAA8B7hI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,oBAAsB,kBAAmBzsJ,KAAKm0J,IACzLn0J,KAAmBq0J,GAAgB9hI,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,kBAAoBtlB,KAAKk0J,GAAmBl0J,KAAKo0J,IAE3Hp0J,KAAcs0J,GAAsB1M,GAAatrD,KAAUh7F,EAAO0T,SAASmF,KAAI2F,GAAWA,EAAQtb,QAClGxE,KAAgBu0J,GAAsBt4D,GAAO,CAAE32E,MAAO,4EAA6EknI,QAAS,IAAMxsJ,KAAKguJ,GAAmB,IAAwB,KAClMhuJ,KAAiBw0J,GAAgBjiI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,YAAc,YAAazsJ,KAAKu0J,GAAkBhiI,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,iBAAmBtlB,KAAKs0J,KACnOt0J,KAAAy0J,GAA8B,IAAI9wC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAWtZ,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIoF,GAAmBprF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACjShmF,KAAA00J,GAAgCniI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,UAAWzsJ,KAAKy0J,GAAoBzgI,WACpMh0B,KAAA20J,GAA8B,IAAIhxC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAWtZ,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIqF,GAAmBrrF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACjShmF,KAAA40J,GAAgCriI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,UAAWzsJ,KAAK20J,GAAoB3gI,WACpMh0B,KAAA60J,GAA8B,IAAIlxC,GAAOvnB,GAAM,CAAE92E,MAAO,aAAcrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOob,WAAW1X,WAAW,iBAAiB4X,UAAWtZ,MAAO,IAAKo5F,KAAM,MAAQ18F,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIsF,GAAmBtrF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACjShmF,KAAA80J,GAAgCviI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,UAAWzsJ,KAAK60J,GAAoB7gI,WACpMh0B,KAAkB+0J,GAAsBnN,GAAatrD,KAAUh7F,EAAO6T,aAAagF,KAAI2F,GAAWA,EAAQtb,QAC1GxE,KAAqBg1J,GAAgBziI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,oBAAqBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,gBAAkB,SAAUl6H,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,iBAAmBtlB,KAAK+0J,KAC7O/0J,KAAAi1J,GAAqC1iI,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,kBAAoBtlB,KAAK00J,GAAkB10J,KAAK40J,GAAkB50J,KAAK80J,GAAkB90J,KAAKg1J,IAC1Kh1J,KAAck1J,GAAgB3iI,GAAI,CAAE0B,MAAO,oBAC3Cj0B,KAAmBm1J,GAAsBvN,GAAatrD,KAAUh7F,EAAO8W,UAAU+B,KAAIujB,GAAYA,EAASl5B,QAC1GxE,KAAao1J,GAAmB7iI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,aAAcl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAKm1J,KACzLn1J,KAAeq1J,GAAmB,IAAI3kB,GAAe1wI,KAAK6yB,EAAM,MAChE7yB,KAAAs1J,GAA4B/iI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,aAAe,aAAczsJ,KAAKq1J,GAAgBrhI,WAC/Jh0B,KAAgBu1J,GAAoB,IAAInzC,GAAgBpiH,KAAK6yB,GAC7D7yB,KAAAw1J,GAA6BjjI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,cAAezsJ,KAAKu1J,GAAiBvhI,WACnKh0B,KAAey1J,GAAmB,IAAIpnC,GAAeruH,KAAK6yB,GAC1D7yB,KAAa01J,GAAgBnjI,GAAI,CAAE0B,MAAO,oBAC1Cj0B,KAAe21J,GAAgBpjI,GAAI,CAAE0B,MAAO,oBAU5Cj0B,KAAsB41J,GAAsBhO,GAAatrD,KAAUh7F,EAAOgX,aAAa6B,KAAIujB,GAAYA,EAASl5B,QAChHxE,KAAgB61J,GAAmBtjI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,iBAAmB,aAAcl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAK41J,KAE5L51J,KAAsB81J,GAAsB75D,GAAO,CAAE32E,MAAO,4EAA6EknI,QAAUjrH,GAAYvhC,KAAK+1J,GAAuBx0H,IAAM,KACjMvhC,KAAsBg2J,GAA0B,IAAIzM,GAAsBtT,GAAO,CAAE7iH,MAAO,IAAKC,OAAQ,IAAK/N,MAAO,oBAAsBwB,GAAYuJ,mBAAoBoiG,GAAI,0BAA4BzyH,KAAK6yB,GAAM,CAAC5f,EAAsB4yE,EAAeC,IAAiB,IAAIF,GAAgC5lF,KAAK6yB,EAAM5f,EAAU4yE,EAAOC,KAC3U9lF,KAAmBi2J,GAAsBrO,GAAatrD,KAAUh7F,EAAOqW,cAAcwC,KAAIgG,GAAaA,EAAU3b,QAChHxE,KAAAk2J,GAAyC3jI,GAAIA,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,eAAgBl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAKi2J,KAChN1jI,GAAI,CAAEjN,MAAO,gGAAkGiN,GAAI,CAACjN,MAAM,kDAAkDtlB,KAAK81J,IAAyBvjI,GAAI,CAACjN,MAAO,8BAA8BtlB,KAAKg2J,GAAuB/f,UAErQj2I,KAAAm2J,GAA2Cl6D,GAAO,CAAE32E,MAAO,+BAAgC2O,MAAO,cAAgB,CAC/H,OAEAlO,EAAIwN,IAAI,CAAEjO,MAAO,iGAAkG8N,MAAO,MAAOC,OAAQ,MAAO8rE,QAAS,gBAAkB,CACvKp5E,EAAI6N,KAAK,CAAEgzE,EAAG,mJAAoJzzE,KAAM,qBAG/JnzB,KAAAo2J,GAA4Cn6D,GAAO,CAAE32E,MAAO,kBAAmB2O,MAAO,eAAiB,CACpH,QAEAlO,EAAIwN,IAAI,CAAEjO,MAAO,iGAAkG8N,MAAO,MAAOC,OAAQ,MAAO8rE,QAAS,aAAe,CACpKp5E,EAAI6N,KAAK,CAAEgzE,EAAG,0EAA2ElzE,OAAQ,eAAgBP,KAAM,SACvHpN,EAAI6N,KAAK,CAAEgzE,EAAG,oEAAqEzzE,KAAM,qBAIjFnzB,KAAAq2J,GAAqC,IAAIrgB,GAAkBC,GAAO,CAAE7iH,MAAO,IAAKC,OAAQ,GAAI/N,MAAO,qBAAqBwB,GAAYuJ,wCAAyCoiG,GAAI,mBAAqB,GACrMzyH,KAAAs2J,GAA2C/jI,GAAI,CAAEjN,MAAO,wDACrEtlB,KAAKq2J,GAAgBpgB,QAERj2I,KAAqBu2J,GAAqB,IAAI3N,GAAiB3S,GAAO,CAAE7iH,MAAO,IAAKC,OAAQ,GAAI/N,MAAO,oBAAsBwB,GAAYuJ,mBAAoBoiG,GAAI,yBAA2BzyH,KAAK6yB,GAAO5f,GAA2B,IAAIuyE,GAAiBxlF,KAAK6yB,EAAM5f,KACnQjT,KAAAw2J,GAv7BrB,SAA8BC,EAAgBnnC,EAAyBu4B,GACnEv4B,EAAKrrH,YAAYs4F,GAAO,CAAE02C,UAAU,EAAM73B,UAAU,EAAM93G,MAAOmzJ,GAAUA,IAE3E,IAAK,MAAM/vE,KAAQmhE,EACfv4B,EAAKrrH,YAAYs4F,GAAO,CAAEj5F,MAAOojF,GAAQA,IAE7C,OAAO4oC,CACX,CAg7BgEonC,CAAqB,cAAep6D,GAAO,CAAEh3E,MAAO,2EAC5GhkB,EAAOC,UAAU4Y,KAAIxP,GAAQA,EAAKnG,QAErBxE,KAAe22J,GAAsB16D,GAAO,CAAE32E,MAAO,oDAAqDknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,uBAAyB,KAEnKzsJ,KAAe42J,GAAmBrkI,GAAI,CAAEjN,MAAO,mDAAqD,CACjHiN,GAAI,CAAEjN,MAAO,sDAAwD,CAACtlB,KAAKu2J,GAAsBtgB,SACjG1jH,GAAI,CAAEjN,MAAO,yDAA2D,CAACtlB,KAAKw2J,GAAuBx2J,KAAK22J,OAG7F32J,KAAkB62J,GAAa,IAAIzzC,GAAShnB,GAAM,CAAE92E,MAAO,oJAAqJ40F,UAAW,KAAMjlG,KAAM,OAAQ3R,MAAOsa,EAAamB,qBAAuB/e,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIwU,GAAgBx6F,KAAK6yB,EAAMo1D,EAAUjC,KAGtXhmF,KAAA82J,GAAmC,IAAInzC,GAAOvnB,GAAM,CAAEnnF,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOuW,qBAAsBvU,MAAO,IAAKo5F,KAAM,IAAKhiD,MAAO,uBAAyB16C,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAI2J,GAAwB3vF,KAAK6yB,EAAMo1D,EAAUjC,KAAW,GACvRhmF,KAAA+2J,GAAgCxkI,GAAI,CAAE0B,MAAO,aAAeioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,mBAAqB,eAAgBzsJ,KAAK82J,GAAyB9iI,WASpLh0B,KAAAg3J,GAAwC/6D,GAAO,CAAEhnF,KAAM,SAAUgf,MAAO,iBACxEj0B,KAAAi3J,GAAiD1kI,GAAI,CAAE0B,MAAO,mBAC3Ej0B,KAAKkuJ,GACLluJ,KAAKsuJ,GACLtuJ,KAAKgvJ,GACLhvJ,KAAKivJ,GACZjvJ,KAAKmvJ,GACLnvJ,KAAKovJ,GACLpvJ,KAAKqvJ,GACLrvJ,KAAKsvJ,GACLtvJ,KAAKuvJ,GACLvvJ,KAAKwvJ,GACExvJ,KAAK42J,GACL52J,KAAKqwJ,GACLrwJ,KAAKwwJ,GACLxwJ,KAAK0wJ,GACL1wJ,KAAK4wJ,GACL5wJ,KAAK0vJ,GACL1vJ,KAAKotJ,GACXptJ,KAAKk2J,GACCl2J,KAAKk1J,GACLl1J,KAAKo1J,GACXp1J,KAAK61J,GACC71J,KAAK+2J,GACL/2J,KAAKs1J,GACLt1J,KAAKw1J,GACLx1J,KAAK01J,GACL11J,KAAK0xJ,GAEL1xJ,KAAK6xJ,GACL7xJ,KAAK+yJ,GACL/yJ,KAAKkzJ,GACLlzJ,KAAK6zJ,GACLthI,GAAI,CAAEjN,MAAO,yEACT42E,GAAK,CAAE52E,MAAO,qCAAuC42E,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,YAAc,YACxHl6H,GAAI,CAAE0B,MAAO,gBAAkBj0B,KAAKiwJ,KAExCjwJ,KAAK6vJ,GACL7vJ,KAAKgwJ,GACLhwJ,KAAKg0J,GACLh0J,KAAKq0J,GACLr0J,KAAKkyJ,GACLlyJ,KAAKqyJ,GACLryJ,KAAKw0J,GACLx0J,KAAKi1J,GACLj1J,KAAKgxJ,GACLhxJ,KAAKmxJ,GACLnxJ,KAAKqxJ,GACLrxJ,KAAKuxJ,GACLvxJ,KAAKuyJ,GACLvyJ,KAAKyyJ,GACLzyJ,KAAK2yJ,GACL3yJ,KAAK6yJ,GACL7yJ,KAAKusJ,GACLvsJ,KAAK6sJ,GACL7sJ,KAAK+sJ,GACL/sJ,KAAK2sJ,GACLp6H,GAAI,CAAEjN,MAAO,yEACT42E,GAAK,CAAE52E,MAAO,qCAAuC42E,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,cAAgB,cAC1HzsJ,KAAKg3J,IAETh3J,KAAKy1J,GAAgBzhI,WAERh0B,KAAoBk3J,GAAmB3kI,GAAI,CAAE0B,MAAO,mBACjE1B,GAAI,CAAE0B,MAAO,aACTj0B,KAAKm2J,GACLn2J,KAAKo2J,KAGIp2J,KAAAm3J,GAA6C5kI,GAAI,CAAEkgG,GAAI,yBAA0BntG,MAAO,+DAA+DwB,GAAYiJ,kBAChL,uBAEa/vB,KAAAo3J,GAA2C7kI,GAAI,CAAE0B,MAAO,YAAaw+F,GAAI,iBACtFv2B,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,mBAAqB,SAC1El6H,GACIA,GAAI,CAAE0B,MAAO,eAAiBj0B,KAAKitJ,IACnC16H,GAAI,CAAE0B,MAAO,cAAgBj0B,KAAKktJ,MAGzBltJ,KAAAq3J,GAA2C9kI,GAAI,CAAE0B,MAAO,mBACrEj0B,KAAKm3J,GACLn3J,KAAKytJ,GACLztJ,KAAKo3J,GACLp3J,KAAK6tJ,GAEL7tJ,KAAKi3J,IAEQj3J,KAAqBs3J,GAAevxI,EAAI6N,KAAK,CAAEgzE,EAAG,8FAA+FzzE,KAAMrM,GAAY6K,mBAAoB,YAAa,YACpM3xB,KAAAu3J,GAAuCxxI,EAAI6N,KAAK,CAAEgzE,EAAG,uGAAwGzzE,KAAMrM,GAAY6K,qBAC/K3xB,KAAAw3J,GAAkCzxI,EAAIwN,IAAI,CAAEjO,MAAO,iEAAkE65E,QAAS,eAAiB,CAC5Jp5E,EAAI6N,KAAK,CAAEgzE,EAAG,sNACd7gF,EAAI6N,KAAK,CAAEgzE,EAAG,qGACd7gF,EAAI6N,KAAK,CAAEgzE,EAAG,yGACd7gF,EAAI6N,KAAK,CAAEgzE,EAAG,wGACd7gF,EAAI6N,KAAK,CAAEgzE,EAAG,+GAED5mG,KAAAy3J,GAAmCllI,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,mBAC1EtlB,KAAAk8I,GAAmCjgD,GAAO,CAAEhoE,MAAO,eAAgBhf,KAAM,SAAUylC,MAAO,YAC1F16C,KAAAm8I,GAAoClgD,GAAO,CAAEhoE,MAAO,gBAAiBhf,KAAM,SAAUylC,MAAO,aAC5F16C,KAAiB03J,GAAmBnlI,GAAI,CAAEjN,MAAO,oFAC9DtlB,KAAK8qJ,GAAmB92H,UACxBh0B,KAAK+qJ,GAAe/2H,UACpBh0B,KAAKgrJ,GAAmBh3H,WAEXh0B,KAAA23J,GAA+BplI,GAAI,CAAE0B,MAAO,gBACzDj0B,KAAK25H,GAAO3lG,UACZh0B,KAAK03J,GACL13J,KAAKorJ,GAAiBp3H,UACtBh0B,KAAKk8I,GACLl8I,KAAKm8I,IAEQn8I,KAAe8yB,EAAmBP,GAAI,CAAE0B,MAAO,kBAC5Dj0B,KAAKirJ,GAAaj3H,UAClBh0B,KAAKmrJ,GAAYn3H,WAEJh0B,KAAiB43J,GAAmBrlI,GAAI,CAAEjN,MAAO,yEACjDtlB,KAAsB63J,GAAmBtlI,GAAI,CAAE0B,MAAO,yBACnEj0B,KAAKkrJ,GAAYl3H,UACjBh0B,KAAK8yB,EACL9yB,KAAK43J,IAEO53J,KAAAw0I,GAA8B,IAAI5hH,GAAa5yB,KAAK6yB,EAAM7yB,KAAK63J,IAC9D73J,KAAA83J,GAA6BvlI,GAAI,CAAE0B,MAAO,cACvDj0B,KAAK63J,GACL73J,KAAKw0I,GAAcxgH,WAGNh0B,KAAS+3J,GAAmBxlI,GAAI,CAAE0B,MAAO,aACtD1B,GAAI,CAAE0B,MAAO,6BACTj0B,KAAK8rJ,IAETv5H,GAAI,CAAE0B,MAAO,6BACTj0B,KAAK+rJ,IAETx5H,GAAI,CAAE0B,MAAO,oCACTj0B,KAAKgsJ,KAIIhsJ,KAAAg4J,GAAoCzlI,GAAI,CAAEjN,MAAO,8CAA8CwB,GAAY4K,sBAC3G1xB,KAAAi4J,GAA6C1lI,GAAI,CAAEjN,MAAO,2IAA2IwB,GAAY6K,uBAAyB3xB,KAAKg4J,IAC/Oh4J,KAAAk4J,GAAgD3lI,GAAI,CAAEjN,MAAO,oBAC1EiN,GAAI,CAAEjN,MAAO,iDAAiDwB,GAAYiJ,kBAAoB,yBAC9FwC,GAAI,CAAE0B,MAAO,YAAa3O,MAAO,sCAC7BtlB,KAAKi4J,KAIIj4J,KAAiBm4J,GAAmB5lI,GAAI,CAAE0B,MAAO,sBAC9D1B,GAAI,CAAE0B,MAAO,mBACT1B,GAAI,CAAE0B,MAAO,wBACT1B,GAAI,CAAEjN,MAAO,+FACTiN,GAAI,CAAE0B,MAAO,MAAO3O,MAAO,gFAAiFknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,gBACxI1mI,EAAIwN,IAAI,CAAEjO,MAAO,6EAA8E8N,MAAO,OAAQC,OAAQ,OAAQ,eAAgB,QAAS8rE,QAAS,eAC5Jn/F,KAAKs3J,KAGb/kI,GAAI,CAAE0B,MAAO,MAAO3O,MAAO,oFAAqFknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,mBAC5I1mI,EAAIwN,IAAI,CAAEjO,MAAO,6EAA8E8N,MAAO,OAAQC,OAAQ,OAAQ,eAAgB,MAAO8rE,QAAS,eAC1Jn/F,KAAKu3J,KAGb,gBACAhlI,GAAI,CAAEjN,MAAO,wEAA0EtlB,KAAKw3J,MAGpGjlI,GAAI,CAAE0B,MAAO,aACTioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,UAAY,WACjEl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAKisJ,KAE3C15H,GAAI,CAAE0B,MAAO,aACTioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,QAAU,SAC/Dl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAKksJ,KAE3C35H,GAAI,CAAE0B,MAAO,aACTioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,YACtEzsJ,KAAKmsJ,IAET55H,GAAI,CAAE0B,MAAO,aACTioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,UAAY,WACjEvwD,GAAK,CAAE52E,MAAO,kBACVtlB,KAAKosJ,GAAap4H,UAClBh0B,KAAKqsJ,KAGb95H,GAAI,CAAE0B,MAAO,aACTioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,WAAa,YAClEl6H,GAAI,CAAE0B,MAAO,mBAAqBj0B,KAAKgtJ,KAE3ChtJ,KAAKk4J,KAGIl4J,KAAAo4J,GAA0C7lI,GAAI,CAAE0B,MAAO,4BACpEj0B,KAAKq3J,GACLr3J,KAAK21J,IACO31J,KAAaq4J,GAAmB9lI,GAAI,CAAE0B,MAAO,6BACzD1B,GAAI,CAAE0B,MAAO,gBACT1B,GAAI,CAAEjN,MAAO,6CAA6CwB,GAAYiJ,kBAClE/vB,KAAK62J,GAAmBz6D,QAGhC7pE,GAAI,CAAE0B,MAAO,mBACTj0B,KAAK6rJ,GACLt5H,GAAI,CAAE0B,MAAO,yBACTj0B,KAAKygG,GACLzgG,KAAKqrJ,GACLrrJ,KAAKsrJ,GACLtrJ,KAAKurJ,GACLvrJ,KAAKwrJ,GACLxrJ,KAAKyrJ,IAETl5H,GAAI,CAAE0B,MAAO,4BACTioE,GAAK,CAAEjoE,MAAO,mBACdj0B,KAAK0rJ,GAAc13H,WAEvBh0B,KAAKs2J,IAETt2J,KAAK+3J,GACL/3J,KAAKm4J,GACLn4J,KAAKo4J,IAGOp4J,KAAAs4J,UAA4B/lI,GAAI,CAAE0B,MAAO,gBAAiBskI,SAAU,KAChFv4J,KAAK23J,GACL33J,KAAK83J,GACL93J,KAAKq4J,GACLr4J,KAAKy3J,IAGDz3J,KAAWw4J,IAAY,EACvBx4J,KAAkBy4J,GAAkB,KACpCz4J,KAA2B04J,IAAY,EACvC14J,KAAwB24J,GAAW,EACnC34J,KAAkB44J,IAAY,EAC9B54J,KAAoB64J,IAAY,EAChC74J,KAAyB84J,IAAY,EACrC94J,KAAiB+4J,IAAY,EAC7B/4J,KAASg5J,IAAY,EACrBh5J,KAAuBi5J,IAAY,EAC1Bj5J,KAAak5J,GAAqB,GAClCl5J,KAAyBm5J,GAAa,GACtCn5J,KAAyBo5J,GAAwB,GACjDp5J,KAAkBq5J,GAAwB,GAC1Cr5J,KAAwBs5J,GAAwB,GAChDt5J,KAAsBu5J,GAAsB,GAC5Cv5J,KAAkCw5J,GAAa,GAC/Cx5J,KAAqBy5J,GAAkB,GACvCz5J,KAAuB05J,GAAqB,GAC5C15J,KAAuB25J,GAAqB,GAC5C35J,KAAuB45J,GAAwB,GACxD55J,KAAe65J,GAAc,GAC7B75J,KAAkB85J,GAAc,GAChC95J,KAAgB+5J,GAAa,GAC7B/5J,KAAoBg6J,IAAY,EAEhCh6J,KAAgBi6J,IAAY,EAC5Bj6J,KAAoBk6J,IAAY,EAChCl6J,KAAkBm6J,IAAY,EAC9Bn6J,KAAuBo6J,IAAY,EACnCp6J,KAAsBq6J,GAAc,GACpCr6J,KAAuBs6J,IAAY,EACnCt6J,KAAmBu6J,IAAY,EAE/Bv6J,KAAsBo0H,uBAAW,EACjCp0H,KAAoBq0H,qBAAW,EAC/Br0H,KAAgBw6J,iBAAW,EA6S3Bx6J,KAA+By6J,GAAG,KACtCz6J,KAAKysJ,GAAY,sBAAsB,EAmWpCzsJ,KAAY+4H,aAAG,KAClB/4H,KAAKs4J,UAAU56D,MAAM,CAAEgqD,eAAe,GAAO,EAGzC1nJ,KAAA06J,GAAcv2J,IACdnE,KAAK6yB,EAAK6B,MAAM0xC,WAAajiE,EAAMqc,QAAUxgB,KAAKs4J,WAAan0J,EAAMqc,QAAUxgB,KAAKurJ,IAAepnJ,EAAMqc,QAAUxgB,KAAK0rJ,GAActvD,OAGtIp8F,KAAK+4H,cACR,EAIG/4H,KAAuB26J,GAAG,KACzB36J,KAAK+qJ,GAAejsB,iBACrB9+H,KAAKs4J,UAAU56D,MAAM,CAAEgqD,eAAe,GAAO,EAO9C1nJ,KAAW46J,YAAG,KACjB,MAAMvkE,EAAqBr2F,KAAK6yB,EAAKwjE,MACrCr2F,KAAKkrJ,GAAYl3H,UAAU1O,MAAMq/E,QAAUtO,EAAM8iC,oBAAsB,GAAK,OAC5E,MAAM0hC,EAAuB76J,KAAK43J,GAAkBviI,wBACpDr1B,KAAK6yB,EAAK4C,iBAAmBtqB,KAAK0hB,OAAOguI,EAAYr7D,MAAQq7D,EAAYrlI,MAAQ6gE,EAAM8iC,oBAAsB,GAAK,IAAMn5H,KAAK6yB,EAAKiC,eAClI90B,KAAK6yB,EAAKoE,qBAAuB9rB,KAAK0hB,OAAOguI,EAAYj7D,OAASi7D,EAAYl7D,IAAM,IAAM3/F,KAAK6yB,EAAKuE,oBACpG,IAAK,IAAIvsB,EAAY7K,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBriB,EAAI7K,KAAK6yB,EAAK9F,KAAKurB,SAASz1C,OAAQgI,IAAK,CAC/H,MAAMsc,EAAmBnnB,KAAK6yB,EAAK9F,KAAKurB,SAASztC,GACjD,IAAK,IAAIovB,EAAY,EAAGA,EAAI9S,EAAQ6d,YAAYniC,OAAQo3B,IACpDj6B,KAAK6yB,EAAK6B,MAAMqxC,2BAA2B5+C,EAAQ6d,YAAY/K,GAEtE,CAiBD,GAhBAj6B,KAAKw0I,GAAc59G,SACnB52B,KAAKkrJ,GAAYt0H,SACjB52B,KAAKirJ,GAAar0H,SAEd/yB,SAASi3J,eAAiB96J,KAAK+qJ,GAAe1sB,mBAAqBr+H,KAAK+qJ,GAAejsB,iBACvF9+H,KAAK+qJ,GAAe9lB,qBAAoB,GAG5CjlI,KAAK25H,GAAO3lG,UAAU1O,MAAMq/E,QAAUtO,EAAMqzC,YAAc,GAAK,OAC/D1pI,KAAKorJ,GAAiBp3H,UAAU1O,MAAMq/E,QAAUtO,EAAM0kE,cAAgB,GAAK,OAC3E/6J,KAAKw0I,GAAcxgH,UAAU1O,MAAMq/E,QAAU3kG,KAAK6yB,EAAK9F,KAAKoJ,SAAWn2B,KAAK6yB,EAAK4C,iBAAmB,GAAK,OACzGz1B,KAAK6rJ,GAAcvmI,MAAMq/E,QAAU3kG,KAAK6yB,EAAKwjE,MAAM2kE,iBAAmB,GAAK,OAC3Eh7J,KAAKs2J,GAAyBhxI,MAAMq/E,QAAU3kG,KAAK6yB,EAAKwjE,MAAM4kE,iBAAmB,GAAK,OACtFj7J,KAAK6yB,EAAK6B,MAAMi0C,WAAa3oE,KAAK6yB,EAAKwjE,MAAM4kE,iBAC7Cj7J,KAAKk4J,GAA8B5yI,MAAMq/E,QAAU3kG,KAAK6yB,EAAKwjE,MAAM6kE,wBAA0B,GAAK,OAE9Fl7J,KAAK6yB,EAAKsoI,gBAAiB,CAC3B,MACMC,EAA2C,GADlBp7J,KAAK03J,GAAkB/wB,aAAe3mI,KAAK6yB,EAAK+zG,wBAEzEy0B,EAAuBr7J,KAAK03J,GAAkBllI,aAA4C,EAA7BxyB,KAAK6yB,EAAK9F,KAAK4Z,aAC5E20H,EAAuBt7J,KAAK03J,GAAkBllI,aAAexyB,KAAK6yB,EAAK9F,KAAK4Z,YAAc,GAE1F40H,EADoBpwJ,KAAK2L,IAAIukJ,EAAclwJ,KAAKoC,IAAI+tJ,EAAcF,IACzBp7J,KAAK6yB,EAAK9F,KAAK4Z,YAE9D3mC,KAAK8qJ,GAAmB92H,UAAU1O,MAAM8N,MAAQmoI,EAAqB,KACrEv7J,KAAK+qJ,GAAe/2H,UAAU1O,MAAM8N,MAAQmoI,EAAqB,KACjEv7J,KAAKgrJ,GAAmBh3H,UAAU1O,MAAM8N,MAAQmoI,EAAqB,KACrEv7J,KAAK8qJ,GAAmB92H,UAAU1O,MAAMk2I,WAAa,IACrDx7J,KAAK+qJ,GAAe/2H,UAAU1O,MAAMk2I,WAAa,IACjDx7J,KAAKgrJ,GAAmBh3H,UAAU1O,MAAMk2I,WAAa,IACrDx7J,KAAK8qJ,GAAmB92H,UAAU1O,MAAMq/E,QAAU,GAClD3kG,KAAKgrJ,GAAmBh3H,UAAU1O,MAAMq/E,QAAU,GAClD3kG,KAAK8qJ,GAAmBl0H,SACxB52B,KAAKgrJ,GAAmBp0H,SACxB52B,KAAKk8I,GAAc52H,MAAMq/E,QAAW3kG,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAqB,GAAK,OACjGjtB,KAAKm8I,GAAe72H,MAAMq/E,QAAW3kG,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAqB,GAAK,OAClGjtB,KAAKk8I,GAAc52H,MAAMk6E,MAAQnJ,EAAM0kE,cAAgB,OAAS,MAChE/6J,KAAKm8I,GAAe72H,MAAMk6E,MAAQnJ,EAAM0kE,cAAgB,OAAS,KACpE,MACG/6J,KAAK+qJ,GAAe/2H,UAAU1O,MAAM8N,MAAQ,GAC5CpzB,KAAK+qJ,GAAe/2H,UAAU1O,MAAMk2I,WAAa,GACjDx7J,KAAK8qJ,GAAmB92H,UAAU1O,MAAMq/E,QAAU,OAClD3kG,KAAKgrJ,GAAmBh3H,UAAU1O,MAAMq/E,QAAU,OAClD3kG,KAAKk8I,GAAc52H,MAAMq/E,QAAU,OACnC3kG,KAAKm8I,GAAe72H,MAAMq/E,QAAU,OAExC3kG,KAAK+qJ,GAAen0H,SAEpB,MAAM6kI,EAAwC,EACzCplE,EAAMqlE,SAAW,KAAO,KAAO,qBAC/BrlE,EAAMygC,WAAa,KAAO,KAAO,iCACjCzgC,EAAMksC,kBAAoB,KAAO,KAAO,+BACxClsC,EAAMqzC,YAAc,KAAO,KAAO,mBAClCrzC,EAAM8sB,UAAY,KAAO,KAAO,iCAChC9sB,EAAMiD,kBAAoB,KAAO,KAAO,mCACxCjD,EAAMC,cAAgBt2F,KAAK6yB,EAAK9F,KAAKutB,MAAQ,KAAO,KAAO,gCAC3D+7C,EAAM6wC,aAAe,KAAO,KAAO,gCACnC7wC,EAAM0kE,cAAgB,KAAO,KAAO,0BACpC1kE,EAAMmwC,kBAAoB,KAAO,KAAO,2BACxCnwC,EAAM8iC,oBAAsB,KAAO,KAAO,yBAC1C9iC,EAAMslE,kBAAoB,KAAO,KAAO,4BACxCtlE,EAAM2kE,iBAAmB,KAAO,KAAO,wBACvC3kE,EAAM4kE,iBAAmB,KAAO,KAAO,qBACvC5kE,EAAM6kE,wBAA0B,KAAO,KAAO,6BAC/C,iBACA,gBACP,mBACO,6BAEJ,IAAK,IAAIrwJ,EAAY,EAAGA,EAAI4wJ,EAAe54J,OAAQgI,IAAK,CACpD,MAAM0xF,EAA+Cv8F,KAAKgsJ,GAAa3rD,SAASx1F,EAAI,GAChF0xF,EAAO9uE,aAAeguI,EAAe5wJ,KAAI0xF,EAAO9uE,YAAcguI,EAAe5wJ,GACpF,CAED,MAAMsc,EAAmBnnB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SACrD80B,EAA0Bj8C,KAAK6yB,EAAK6yD,uBACpC9mE,EAAyBuI,EAAQ6d,YAAYiX,GAC7C2/G,EAAqB57J,KAAKs4J,UAAUuD,SAASh4J,SAASi3J,eACtDA,EAAgCj3J,SAASi3J,cACzCtzD,EAAwB1gF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAEpF,IAAK,IAAItc,EAAY7K,KAAKiwJ,GAAezgC,kBAAoB,EAAG3kH,EAAIvJ,EAAOuU,YAAYhT,OAAQgI,IAC3F7K,KAAKiwJ,GAAehsJ,YAAYs4F,GAAO,CAAEj5F,MAAOuH,KAEpD7K,KAAKiwJ,GAAe/gC,eAAiB,EACrC,IAAK,IAAIrkH,EAAY,EAAGA,EAAIvJ,EAAOuU,YAAYhT,OAAQgI,IAAK,CACxD,IAAIixJ,EAAqBx6J,EAAOuU,YAAYhL,GAC5C,MACMgzF,GADiE,IAA3Cj/E,EAAW3P,QAAW,GAAK6sJ,GACrB,KAAO,KAAOx6J,EAAOsU,YAAYkmJ,GAC7Dv/D,EAA+Cv8F,KAAKiwJ,GAAe5vD,SAASx1F,EAAI,GAClF0xF,EAAO9uE,aAAeowE,IAAOtB,EAAO9uE,YAAcowE,EACzD,CA+BD,GA7BA2qD,GAAiBxoJ,KAAKisJ,GAAcjsJ,KAAK6yB,EAAK9F,KAAKutB,OACnDt6C,KAAKisJ,GAAavxG,MAAQp5C,EAAO4O,OAAOlQ,KAAK6yB,EAAK9F,KAAKutB,OAAOnqC,SAC9Dq4I,GAAiBxoJ,KAAKksJ,GAAY5qJ,EAAO+O,KAAKxN,OAAS,EAAI7C,KAAK6yB,EAAK9F,KAAK3pB,KAC1EpD,KAAKmsJ,GAAe7oJ,MAAQ6H,KAAKe,MAAMlM,KAAK6yB,EAAK9F,KAAKiV,QAAQ84F,WAC9D96H,KAAKosJ,GAAa1oC,YAAYv4G,KAAK2L,IAAI,EAAG3L,KAAKe,MAAMlM,KAAK6yB,EAAK9F,KAAKusB,SACpEt5C,KAAKqsJ,GAAc/oJ,MAAQ6H,KAAKe,MAAMlM,KAAK6yB,EAAK9F,KAAKusB,OAAOwhF,WAC5D96H,KAAK62J,GAAmBnzC,YAAY1jH,KAAK6yB,EAAK9F,KAAK2tB,OAEnD16C,KAAKqwJ,GAAiB/qI,MAAMC,YAAY,mBAAoBiiF,EAAOr/E,aACnEnoB,KAAKqwJ,GAAiB/qI,MAAMC,YAAY,mBAAoBiiF,EAAOt/E,eACnEloB,KAAKqwJ,GAAiB/qI,MAAMC,YAAY,yBAA0BiiF,EAAOv/E,gBACzEjoB,KAAKqwJ,GAAiB/qI,MAAMC,YAAY,yBAA0BiiF,EAAOz/E,kBAErEnJ,EAAWgD,cACX5hB,KAAKkwJ,GAAsBz9H,UAAUyI,OAAO,eAC5Cl7B,KAAKowJ,GAAwB39H,UAAUC,IAAI,eAC3C1yB,KAAKwwJ,GAAalrI,MAAMq/E,QAAU,OAClC3kG,KAAK0wJ,GAAsBprI,MAAMq/E,QAAU,GAC3C3kG,KAAK4wJ,GAAuBtrI,MAAMq/E,QAAU,KAE5C3kG,KAAKkwJ,GAAsBz9H,UAAUC,IAAI,eACzC1yB,KAAKowJ,GAAwB39H,UAAUyI,OAAO,eAC9Cl7B,KAAKwwJ,GAAalrI,MAAMq/E,QAAU,GAClC3kG,KAAK0wJ,GAAsBprI,MAAMq/E,QAAU,OAC3C3kG,KAAK4wJ,GAAuBtrI,MAAMq/E,QAAU,QAGhD6jD,GAAiBxoJ,KAAKgtJ,GAAehtJ,KAAK6yB,EAAK9F,KAAK+Y,QAE/C9lC,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBp6C,KAAK6yB,EAAK1L,SA0dzC,CACDnnB,KAAK+7J,GAAY/7J,KAAK6yB,EAAK1L,QAAS80B,GAEpCj8C,KAAKitJ,GAAqB3nI,MAAMq/E,QAAU,OAC1C3kG,KAAKktJ,GAAkB5nI,MAAMq/E,QAAU,OACvC+jD,EAAE,sBAAsBH,SAASyT,OACjCtT,EAAE,qBAAqBH,SAASyT,OAChCh8J,KAAK21J,GAAgB1xJ,YAAYjE,KAAKk3J,IAEtCl3J,KAAK21J,GAAgBluD,aAAaznG,KAAKytJ,GAAuBztJ,KAAK21J,GAAgBrvI,YACnFtmB,KAAK21J,GAAgBluD,aAAaznG,KAAKm3J,GAA4Bn3J,KAAK21J,GAAgBrvI,YACjC,IAAnDtmB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS3iB,KAC3CxE,KAAKm3J,GAA2B1pI,YAAc,qBAG9CztB,KAAKm3J,GAA2B1pI,YAAcztB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS3iB,KAG7FxE,KAAKivJ,GAAoB3pI,MAAMq/E,QAAU,OACzC3kG,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,OAEvD3kG,KAAKs1J,GAAahwI,MAAMq/E,QAAU,OAClC3kG,KAAKw1J,GAAclwI,MAAMq/E,QAAU,OACnC3kG,KAAK6vJ,GAAevqI,MAAMq/E,QAAU,OACpC3kG,KAAKg0J,GAAgB1uI,MAAMq/E,QAAU,OACrC3kG,KAAKq0J,GAAoB/uI,MAAMq/E,QAAU,OAIzC3kG,KAAK01J,GAAcpwI,MAAMq/E,QAAU,OACnC3kG,KAAK42J,GAAgBtxI,MAAMq/E,QAAU,OACrC3kG,KAAKotJ,GAAoB9nI,MAAMq/E,QAAU,OACzC3kG,KAAKk1J,GAAe5vI,MAAMq/E,QAAU,OACpC3kG,KAAKo1J,GAAc9vI,MAAMq/E,QAAU,OACnC3kG,KAAK+2J,GAAczxI,MAAMq/E,QAAU,OAEnC3kG,KAAK0xJ,GAAepsI,MAAMq/E,QAAU,OAEpC3kG,KAAKw0J,GAAkBlvI,MAAMq/E,QAAU,OACvC3kG,KAAKi1J,GAAsB3vI,MAAMq/E,QAAU,OAE3C3kG,KAAKqyJ,GAAiB/sI,MAAMq/E,QAAU,OACtC3kG,KAAKkuJ,GAAc5oI,MAAMq/E,QAAU,OACnC3kG,KAAKsuJ,GAAkBhpI,MAAMq/E,QAAU,OACvC3kG,KAAK6xJ,GAAyBvsI,MAAMq/E,QAAU,OAC9C3kG,KAAK6zJ,GAAqBvuI,MAAMq/E,QAAU,OAE1C3kG,KAAK21J,GAAgBrwI,MAAMq/E,QAAU,GACrC3kG,KAAK21J,GAAgBrwI,MAAM4tF,MAAQpsF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YAElG,IAAK,IAAIod,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAAO,CAEpD,IAAI3mB,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1FxsC,EAAqB/tC,KAAK2L,IAAI,EAAG8H,EAAWgJ,YAAY2d,IACxD4T,EAAwBv6B,EAAW8wB,eAAenK,GActD,IAXI4T,GAAiBn5C,KAAK6yB,EAAK9F,KAAKurB,SAASY,GAAYlU,YAAYniC,OAAS,GAAMs2C,EAAgB,GAAKn5C,KAAK6yB,EAAK9F,KAAKurB,SAASY,GAAYlU,YAAYniC,QAAU,KAC/Js2C,EAAgB,EAChBv6B,EAAW8wB,eAAenK,GAAO,EACjC3mB,EAAWlC,WAAW6oB,GAAO,GAE7B2T,GAAcl5C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,oBAChEtO,EAAW8wB,eAAenK,GAAO,EACjC3mB,EAAWlC,WAAW6oB,GAAO,GAI7BvlC,KAAK6yB,EAAKm3D,oBAAuBhqF,KAAKi8J,GAAiB12H,GAAK86D,SAASx9F,QAAU,EAAI7C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoB,CACzJ,KAAOltB,KAAKi8J,GAAiB12H,GAAKjf,YAAYtmB,KAAKi8J,GAAiB12H,GAAKrK,OAAO,GAChF,MAAMghI,EAAwB,GAC9BA,EAAYnxJ,KAAK,QACjBmxJ,EAAYnxJ,KAAK,QACjB,IAAK,IAAIF,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK9F,KAAKE,kBAAmBpiB,IACnB,IAAnC7K,KAAK6yB,EAAK9F,KAAKurB,SAASztC,GAAGrG,KAC3B03J,EAAYnxJ,KAAK,UAAYF,EAAI,IAGjCqxJ,EAAYnxJ,KAAK/K,KAAK6yB,EAAK9F,KAAKurB,SAASztC,GAAGrG,MAGpD,IAAK,IAAIqG,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK9F,KAAKG,kBAAmBriB,IACgB,IAAtE7K,KAAK6yB,EAAK9F,KAAKurB,SAASztC,EAAI7K,KAAK6yB,EAAK9F,KAAKE,mBAAmBzoB,KAC9D03J,EAAYnxJ,KAAK,UAAYF,EAAI,IAGjCqxJ,EAAYnxJ,KAAK/K,KAAK6yB,EAAK9F,KAAKurB,SAASztC,EAAI7K,KAAK6yB,EAAK9F,KAAKE,mBAAmBzoB,MAGvFojJ,GAAa5nJ,KAAKi8J,GAAiB12H,GAAM22H,EAC5C,CAIDl8J,KAAKi8J,GAAiB12H,GAAK2pF,cAAgBtwG,EAAWgJ,YAAY2d,GAAO,EAEzE,IAAIpe,EAAmBnnB,KAAK6yB,EAAK9F,KAAKurB,SAASY,GAG/C,GAAIl5C,KAAKm8J,GAAoB52H,GAAK86D,SAASx9F,QAAUskB,EAAQ6d,YAAYniC,OAAS,EAAG,CACjF,KAAO7C,KAAKm8J,GAAoB52H,GAAKjf,YAAYtmB,KAAKm8J,GAAoB52H,GAAKrK,OAAO,GACtF,MAAMkhI,EAA2B,GACjC,IAAK,IAAIvxJ,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IACpDuxJ,EAAerxJ,KAAK,GAAKF,EAAI,GAEjCuxJ,EAAerxJ,KAAK,OACpBqxJ,EAAerxJ,KAAK,UACpB68I,GAAa5nJ,KAAKm8J,GAAoB52H,GAAM62H,EAC/C,CAGD,GAAIj1I,EAAQ8wB,KAAKj4C,KAAK6yB,EAAK+nB,KAAO,EAAG,CAEjC,IAAI6qB,EAA4Bt+C,EAAQ6wB,SAAS7wB,EAAQ8wB,KAAKj4C,KAAK6yB,EAAK+nB,KAAO,GAAG5V,YAElF,IAAK,IAAIn6B,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IAEhD46D,EAAgBld,SAAS19C,GACzB7K,KAAKm8J,GAAoB52H,GAAKozF,QAAQ9tH,GAAGgzF,MAAQ,MAAQhzF,EAAI,GAG7D7K,KAAKm8J,GAAoB52H,GAAKozF,QAAQ9tH,GAAGgzF,MAAQ,IAAMhzF,EAAI,EAGtE,MAEG,IAAK,IAAIA,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IACpD7K,KAAKm8J,GAAoB52H,GAAKozF,QAAQ9tH,GAAGgzF,MAAQ,IAAMhzF,EAAI,GASnE,GAJA7K,KAAKm8J,GAAoB52H,GAAK2pF,cAAgBtwG,EAAW8wB,eAAenK,IAIpC,GAAhC3mB,EAAWgJ,YAAY2d,GAAY,CACnC,KAAOvlC,KAAKq8J,GAAa92H,GAAKjf,YAAYtmB,KAAKq8J,GAAa92H,GAAKrK,OAAO,GACxE,MAAMohI,EAAwB,GACxBC,EAA8B,GAOpC,GAHAD,EAAYvxJ,KAAK,SAGmB,GAAhC6T,EAAWgJ,YAAY2d,GACvB+2H,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,SACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,YACjBuxJ,EAAYvxJ,KAAK,mBAGhB,CAEDuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,cAIjB,IAAIyxJ,EAAuC,GACvCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EAErCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,GAAqC,EACrCC,EAAiC,GACrC,GAAI9kH,GAAiBhyB,EAAQ6d,YAAYniC,OACrC,IAAK,IAAIgI,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IACpDozJ,EAAqBlzJ,KAAKF,QAG9BozJ,EAAqBlzJ,KAAKouC,GAE9B,IAAK,IAAItuC,EAAY,EAAGA,EAAIozJ,EAAqBp7J,OAAQgI,IAAK,CAC1D,IAAIoxC,EAAkBgiH,EAAqBpzJ,GAEtC2xJ,EAAmBj0G,SAASphC,EAAQ6d,YAAYiX,GAAiBhnC,OAClEunJ,EAAmBzxJ,KAAKoc,EAAQ6d,YAAYiX,GAAiBhnC,MAC7DkS,EAAQ6d,YAAYiX,GAAiBr6B,aACrC86I,GAAwB,EAExBD,GAA0B,EAC1BvtJ,EAAoBiY,EAAQ6d,YAAYiX,GAAiBhtC,UAAYkY,EAAQ6d,YAAYiX,GAAiBrL,WAAW35B,cACrH4lJ,GAAoB,GAEpB1tJ,EAAyBgY,EAAQ6d,YAAYiX,GAAiBhtC,WAC9D6tJ,GAA2B,GAE3B1tJ,EAAqB+X,EAAQ6d,YAAYiX,GAAiBhtC,SAC1D8tJ,GAAuB,EAGvBU,GAAuB,EAEvBpuJ,EAAsB8X,EAAQ6d,YAAYiX,GAAiBhtC,SAC3D+tJ,GAAwB,EAGxBU,GAAwB,EAExBpuJ,EAAyB6X,EAAQ6d,YAAYiX,GAAiBhtC,UAC9DguJ,GAA2B,EACvB91I,EAAQ6d,YAAYiX,GAAiBr5B,eACrCg6I,GAA0B,EAE1BD,GAA4B,GAGhCa,GAA2B,EAE3BjuJ,EAAyB4X,EAAQ6d,YAAYiX,GAAiBhtC,SAC9DiuJ,GAAwB,EAGxBS,GAAwB,EAExBnuJ,EAAyB2X,EAAQ6d,YAAYiX,GAAiBhtC,SAC9DkuJ,GAA0B,EAG1BS,GAA0B,EAE1BnuJ,EAAsB0X,EAAQ6d,YAAYiX,GAAiBhtC,SAC3DmuJ,GAAoB,EAGpBS,GAAoB,EAEpBnuJ,EAAqByX,EAAQ6d,YAAYiX,GAAiBhtC,SAC1DouJ,GAAsB,EAGtBS,GAAsB,EAEtBnuJ,EAAmBwX,EAAQ6d,YAAYiX,GAAiBhtC,SACxDquJ,GAAsB,EAGtBS,GAAsB,EAEtBnuJ,EAAqBuX,EAAQ6d,YAAYiX,GAAiBhtC,SAC1DsuJ,GAAuB,EAGvBS,GAAuB,CAG9B,CACGvB,GACAH,EAAYvxJ,KAAK,aAEjB2xJ,IACAJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,iBAEjByxJ,EAAmBj0G,SAAQ,KAC3B+zG,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,gBAEjByxJ,EAAmBj0G,SAAQ,MAC3B+zG,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,gBAEjByxJ,EAAmBj0G,SAAQ,KAC3B+zG,EAAYvxJ,KAAK,eACjBuxJ,EAAYvxJ,KAAK,mBAEjByxJ,EAAmBj0G,SAAQ,IAC3B+zG,EAAYvxJ,KAAK,WAEjB8xJ,IACAP,EAAYvxJ,KAAK,aACjBuxJ,EAAYvxJ,KAAK,cAEjB+xJ,GACAR,EAAYvxJ,KAAK,eAKjBgyJ,GACAT,EAAYvxJ,KAAK,UAEhB0yJ,GACDlB,EAAkBxxJ,KAAK,YAEvBiyJ,IACAV,EAAYvxJ,KAAK,iBACjBuxJ,EAAYvxJ,KAAK,iBACjBuxJ,EAAYvxJ,KAAK,kBAEhB2yJ,IACDnB,EAAkBxxJ,KAAK,mBACvBwxJ,EAAkBxxJ,KAAK,mBACvBwxJ,EAAkBxxJ,KAAK,oBAEvBkyJ,IACIN,GACAL,EAAYvxJ,KAAK,eAEjB6xJ,IACAN,EAAYvxJ,KAAK,iBACjBuxJ,EAAYvxJ,KAAK,oBAGpByyJ,GACDjB,EAAkBxxJ,KAAK,iBAEvBmyJ,GACAZ,EAAYvxJ,KAAK,cAEhB4yJ,GACDpB,EAAkBxxJ,KAAK,gBAEvBoyJ,IACAb,EAAYvxJ,KAAK,aACjBuxJ,EAAYvxJ,KAAK,eAEhB6yJ,IACDrB,EAAkBxxJ,KAAK,eACvBwxJ,EAAkBxxJ,KAAK,iBAEvBqyJ,IACAd,EAAYvxJ,KAAK,OACjBuxJ,EAAYvxJ,KAAK,cAEhB8yJ,IACDtB,EAAkBxxJ,KAAK,SACvBwxJ,EAAkBxxJ,KAAK,gBAEvBsyJ,GACAf,EAAYvxJ,KAAK,UAEhB+yJ,GACDvB,EAAkBxxJ,KAAK,YAEvBuyJ,GACAhB,EAAYvxJ,KAAK,QAIhBgzJ,GACDxB,EAAkBxxJ,KAAK,UAGvBwyJ,GACAjB,EAAYvxJ,KAAK,UAEhBizJ,GACDzB,EAAkBxxJ,KAAK,WAG9B,CAED68I,GAAa5nJ,KAAKq8J,GAAa92H,GAAM+2H,GACjCC,EAAkB15J,OAAS,IAC3B7C,KAAKq8J,GAAa92H,GAAKthC,YAAYs4F,GAAO,CAAE02C,UAAU,EAAO73B,UAAU,EAAM93G,MAAO,cAAgB,eACpGskJ,GAAa5nJ,KAAKq8J,GAAa92H,GAAMg3H,IAGzC,IAAIxpB,EAAmBupB,EAAYrgI,QAAQ36B,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAM/gC,OAGxE,GAAbuuI,GACA/yI,KAAKq8J,GAAa92H,GAAKkiE,aAAalL,GAAO,CAAEj5F,MAAOhC,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAM/gC,KAAM8gB,MAAO,eAAiBhkB,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAM/gC,MAAOxE,KAAKq8J,GAAa92H,GAAK86D,SAAS,IACrNrgG,KAAKq8J,GAAa92H,GAAK2pF,cAAgB,EAGvClvH,KAAKk+J,GAAmB34H,GAAK,KAG7BvlC,KAAKq8J,GAAa92H,GAAK2pF,cAAgB6jB,EACvC/yI,KAAKq8J,GAAa92H,GAAK9S,UAAUyI,OAAO,kBACxCtc,EAAW+wB,kBAAkBpK,IAAO,EAG3C,MAAUvlC,KAAKq8J,GAAa92H,GAAK2pF,cAAgB,IAC9ClvH,KAAKq8J,GAAa92H,GAAK2pF,cAAgB,EACvClvH,KAAKk+J,GAAmB34H,IAIxB3mB,EAAWgJ,YAAY2d,GAAO,GAC5BvlC,KAAKm8J,GAAoB52H,GAAkB,cAAqBjgB,MAAMq/E,QAAU,OAClF+jD,EAAE,qBAAuBnjH,GAAKnY,IAAI,GAAG9H,MAAMq/E,QAAU,OACrD+jD,EAAE,kBAAoBnjH,GAAKnY,IAAI,GAAG0zE,UAAY,YAGV,GAAhCliF,EAAWgJ,YAAY2d,IACvBmjH,EAAE,kBAAoBnjH,GAAKnY,IAAI,GAAG9H,MAAMq/E,QAAU,OAChD3kG,KAAKq8J,GAAa92H,GAAkB,cAAqBjgB,MAAMq/E,QAAU,SAG3E+jD,EAAE,kBAAoBnjH,GAAKnY,IAAI,GAAG9H,MAAMq/E,QAAU,GAChD3kG,KAAKq8J,GAAa92H,GAAkB,cAAqBjgB,MAAMq/E,QAAU,IAG/E3kG,KAAKm+J,GAAqB54H,GAAKjgB,MAAMC,YAAY,OAAQuB,GAAYwJ,eACrEtwB,KAAKm+J,GAAqB54H,GAAK9S,UAAUyI,OAAO,eAI9Cl7B,KAAKm8J,GAAoB52H,GAAkB,cAAqBjgB,MAAMq/E,QAAWx9E,EAAQ6d,YAAYniC,OAAS,EAAK,GAAK,OAC1H6lJ,EAAE,qBAAuBnjH,GAAKnY,IAAI,GAAG9H,MAAMq/E,QAAWx9E,EAAQ6d,YAAYniC,OAAS,EAAK,GAAK,OAC7F6lJ,EAAE,kBAAoBnjH,GAAKnY,IAAI,GAAG0zE,UAAa35E,EAAQ6d,YAAYniC,OAAS,EAAK,MAAQ,WACzF6lJ,EAAE,kBAAoBnjH,GAAKnY,IAAI,GAAG9H,MAAMq/E,QAAU,GAChD3kG,KAAKq8J,GAAa92H,GAAkB,cAAqBjgB,MAAMq/E,QAAU,GAE3E3kG,KAAKm+J,GAAqB54H,GAAKjgB,MAAMC,YAAY,OAAQuB,GAAY4K,kBACrE1xB,KAAKm+J,GAAqB54H,GAAK9S,UAAUC,IAAI,cAGjD,IAAIinB,EAAqBr4C,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAM/gC,KACvE,GAAkB,aAAdm1C,GAA2C,eAAdA,EAA6B,CAC1D+uG,EAAE,iBAAmBnjH,GAAKnY,IAAI,GAAG9H,MAAMq/E,QAAU,GACjD+jD,EAAE,kBAAoBnjH,GAAKnY,IAAI,GAAG9H,MAAMC,YAAY,gBAAiB,OAErE,IAAIyiE,EAAwBppE,EAAW8wB,eAAenK,GAClD2T,EAAsBl5C,KAAK6yB,EAAK9F,KAAKurB,SAASntC,KAAK2L,IAAI,EAAG8H,EAAWgJ,YAAY2d,KACjF64H,GAAoB,EACxB,GAAIp2E,GAAiB9uC,EAAWlU,YAAYniC,OAExC,IAAK,IAAIgI,EAAY,EAAGA,EAAIquC,EAAWlU,YAAYniC,OAAQgI,IACrC,aAAd8uC,EACIT,EAAWlU,YAAYn6B,GAAG0U,SAASyrB,kBAAoBozH,IACvDA,EAAWllH,EAAWlU,YAAYn6B,GAAG0U,SAASyrB,kBAC9Cg9C,EAAgBn9E,GAGhBquC,EAAWlU,YAAYn6B,GAAG+V,WAAWoqB,kBAAoBozH,IACzDA,EAAWllH,EAAWlU,YAAYn6B,GAAG+V,WAAWoqB,kBAChDg9C,EAAgBn9E,GAOhC,IAAIwzJ,EAAkC,aAAd1kH,EAClBxyB,EAAQ6d,YAAYgjD,GAAezoE,SAASyrB,kBAC5C7jB,EAAQ6d,YAAYgjD,GAAepnE,WAAWoqB,kBAEpD,MAAMszH,EAAmC,aAAd3kH,EAA4BxyB,EAAQ6d,YAAYgjD,GAAepmE,aAAeuF,EAAQ6d,YAAYgjD,GAAeplE,eAI5I,GAHI07I,IACAD,EAAW,GAEXC,GAAYt+J,KAAKu+J,GAAgBh5H,GAAK86D,SAASx9F,QAAU,EAAe,EAAXw7J,EAAc,CAC3E,KAAOr+J,KAAKu+J,GAAgBh5H,GAAKjf,YAAYtmB,KAAKu+J,GAAgBh5H,GAAKrK,OAAO,GAC9E,MAAMsjI,EAAoB,GACrBF,GACDE,EAAQzzJ,KAAK,SACjB,IAAK,IAAIF,EAAY,EAAGA,EAAIwzJ,EAAUxzJ,IAClC2zJ,EAAQzzJ,KAAK,QAAUF,EAAI,GAAK,MAChC2zJ,EAAQzzJ,KAAK,QAAUF,EAAI,GAAK,MAEpC+8I,GAAa5nJ,KAAKu+J,GAAgBh5H,GAAMi5H,EAC3C,CAED,GAAIF,GAAY1/I,EAAW8mB,eAAeH,IAAQvlC,KAAKu+J,GAAgBh5H,GAAK1iC,OAAQ,CAChF7C,KAAKu+J,GAAgBh5H,GAAK9S,UAAUC,IAAI,kBACxC9T,EAAW+wB,kBAAkBpK,IAAO,EACpC,IAAIk5H,GAAoB7/I,EAAW8mB,eAAeH,GAAO,GAAK,GAAK,EAC/D,QAAUp6B,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,GAAK,GAAK,KACpE,QAAUp6B,KAAK0hB,OAAOjO,EAAW8mB,eAAeH,GAAO,GAAK,GAAK,GAAK,KACtC,GAAlC3mB,EAAW8mB,eAAeH,KAC1Bk5H,EAAU,SACdz+J,KAAKu+J,GAAgBh5H,GAAKkiE,aAAalL,GAAO,CAAEj5F,MAAOm7J,EAASn5I,MAAO,eAAiBm5I,GAAUz+J,KAAKu+J,GAAgBh5H,GAAK86D,SAAS,IACrIrgG,KAAKu+J,GAAgBh5H,GAAK2pF,cAAgB,CAE7C,MAEGlvH,KAAKu+J,GAAgBh5H,GAAK9S,UAAUyI,OAAO,kBAC3Ctc,EAAW+wB,kBAAkBpK,IAAO,EACpCvlC,KAAKu+J,GAAgBh5H,GAAK2pF,cAAgBtwG,EAAW8mB,eAAeH,EAK3E,MACGmjH,EAAE,iBAAmBnjH,GAAKnY,IAAI,GAAG9H,MAAMq/E,QAAU,OACjD+jD,EAAE,kBAAoBnjH,GAAKnY,IAAI,GAAG9H,MAAMC,YAAY,gBAAiB,QAG5E,CAEDvlB,KAAK6yB,EAAKm3D,oBAAqB,EAE/B,IAAK,IAAI00E,EAAqB,EAAGA,EAAap9J,EAAOyV,OAAOlU,OAAQ67J,IAAc,CAC9E,MAAMniE,EAAkBv8F,KAAK8zJ,GAAazzD,SAASq+D,GAC9CniE,EAAOoiE,aAAa,WACrBpiE,EAAOz3E,aAAa,SAAU,GAGrC,CAID9kB,KAAKi3J,GAA+B3xI,MAAMq/E,QAAU,OACpD3kG,KAAKkuJ,GAAc5oI,MAAMq/E,QAAU,OACnC3kG,KAAKsuJ,GAAkBhpI,MAAMq/E,QAAU,OACvC3kG,KAAK6tJ,GAA2BvoI,MAAMq/E,QAAU,OAChD3kG,KAAKo3J,GAAyB9xI,MAAMC,YAAY,UAAW,QAE3DvlB,KAAKq3J,GAAyB/xI,MAAM4tF,MAAQpsF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YAGvGnoB,KAAK6yB,EAAK1L,SAAWnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBACvEltB,KAAK25H,GAAOgB,cAGhB36H,KAAK4+J,GAAqBz3I,EAAS80B,EAAiBurD,EAEvD,KA//BuD,CAyGpD,GAvGAxnG,KAAKi3J,GAA+B3xI,MAAMq/E,QAAU,GACpD3kG,KAAKkuJ,GAAc5oI,MAAMq/E,QAAU,GACnC3kG,KAAKsuJ,GAAkBhpI,MAAMq/E,QAAW3kG,KAAKi6J,GAAmB,GAAK,OACrEj6J,KAAKqyJ,GAAiB/sI,MAAMq/E,QAAU,GACtC3kG,KAAK6tJ,GAA2BvoI,MAAMq/E,QAAU,GAChD3kG,KAAKo3J,GAAyB9xI,MAAMC,YAAY,UAAW,IAC3DvlB,KAAKq3J,GAAyBpzJ,YAAYjE,KAAKk3J,IAC/Cl3J,KAAKq3J,GAAyB5vD,aAAaznG,KAAKytJ,GAAuBztJ,KAAKq3J,GAAyB/wI,YACrGtmB,KAAKq3J,GAAyB5vD,aAAaznG,KAAKm3J,GAA4Bn3J,KAAKq3J,GAAyB/wI,YAEnD,IAAnDtmB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS3iB,KAC3CxE,KAAKm3J,GAA2B1pI,YAAc,sBAG9CztB,KAAKm3J,GAA2B1pI,YAAcztB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS3iB,KAG7FxE,KAAK21J,GAAgBrwI,MAAMq/E,QAAU,OAKrC3kG,KAAK+7J,GAAY/7J,KAAK6yB,EAAK1L,QAAS80B,GAEhCj8C,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,UAC3CnnB,KAAKitJ,GAAqB3nI,MAAMq/E,QAAU,OAC1C3kG,KAAKktJ,GAAkB5nI,MAAMq/E,QAAU,GAEvC+jD,EAAE,sBAAsBH,SAASyT,OACjCtT,EAAE,qBAAqBH,SAASsW,OAEhCrW,GAAiBxoJ,KAAKktJ,GAAmBtuI,EAAWN,UAEpDte,KAAKitJ,GAAqB3nI,MAAMq/E,QAAU,GAC1C3kG,KAAKktJ,GAAkB5nI,MAAMq/E,QAAU,OAGvC+jD,EAAE,sBAAsBH,SAASsW,OACjCnW,EAAE,qBAAqBH,SAASyT,OAEhCxT,GAAiBxoJ,KAAKitJ,GAAsBruI,EAAWN,SAGxC,GAAfM,EAAW3J,MACXjV,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,OAEvD3kG,KAAKivJ,GAAoB3pI,MAAMq/E,QAAU,GACzC6jD,GAAiBxoJ,KAAKwuJ,GAAkB5vI,EAAW+uB,YAEnD3tC,KAAKivJ,GAAoB3pI,MAAMq/E,QAAU,OAE1B,GAAf/lF,EAAW3J,MACXjV,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,OAEvD3kG,KAAKs1J,GAAahwI,MAAMq/E,QAAU,GAClC3kG,KAAKq1J,GAAgBz+H,UAErB52B,KAAKs1J,GAAahwI,MAAMq/E,QAAU,OAEnB,GAAf/lF,EAAW3J,MAAmD,GAAf2J,EAAW3J,MAC1DjV,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,OAEvD3kG,KAAKw1J,GAAclwI,MAAMq/E,QAAU,GACnC3kG,KAAKu1J,GAAiB3+H,UAEtB52B,KAAKw1J,GAAclwI,MAAMq/E,QAAU,OAEpB,GAAf/lF,EAAW3J,MACXjV,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,OAEvD3kG,KAAK+yJ,GAAkBztI,MAAMq/E,QAAU,GACvC3kG,KAAK8yJ,GAAqBpvC,YAAY9kG,EAAWmC,gBAEjD/gB,KAAK+yJ,GAAkBztI,MAAMq/E,QAAU,OAExB,GAAf/lF,EAAW3J,KAAgC,CAC3CjV,KAAK01J,GAAcpwI,MAAMq/E,QAAU,GACnC3kG,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,OAEvD3kG,KAAK0vJ,GAAcpqI,MAAMq/E,QAAU,OACnC,IAAK,IAAI95F,EAAY,EAAGA,EAAIvJ,EAAOuY,UAAWhP,IAC1C29I,GAAiBxoJ,KAAK45J,GAAwB/uJ,GAAI+T,EAAW4wB,iBAAiB3kC,IAC9E7K,KAAK25J,GAAwB9uJ,GAAG+rB,QAEvC,MACG52B,KAAK01J,GAAcpwI,MAAMq/E,QAAU,OACnC3kG,KAAK0vJ,GAAcpqI,MAAMq/E,QAAU,GACnC3kG,KAAKyvJ,GAAiB74H,SA8E1B,GA3EmB,GAAfhY,EAAW3J,OACXjV,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,GAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,GACrD/lF,EAAWyE,6BACXrjB,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,GAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,GAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,GACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,GAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,KAE/C3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,QAG3D6jD,GAAiBxoJ,KAAKuuJ,GAAiB3vI,EAAWvd,UAE1CrB,KAAKyuJ,GAAoCnwD,UAAU1/E,EAAWyE,4BAC9DmlI,GAAiBxoJ,KAAK0uJ,GAAyB9vI,EAAW4E,kBAC1DxjB,KAAK2uJ,GAA0BrrJ,MAAQsb,EAAW0E,kBAAoB,GAEtEtjB,KAAK4uJ,GAAwBtrJ,MAAQsb,EAAW2E,gBAAkB,GAElEvjB,KAAK8uJ,GAA4BxrJ,MAAQsb,EAAW8E,oBAAsB,GAE1E1jB,KAAK+uJ,GAA0BzwD,UAAU1/E,EAAW6E,uBAI7C,GAAf7E,EAAW3J,MACXjV,KAAK42J,GAAgBtxI,MAAMq/E,QAAU,GACrC3kG,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,QAIvD3kG,KAAK42J,GAAgBtxI,MAAMq/E,QAAU,OAGtB,GAAf/lF,EAAW3J,MACXjV,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,OAEvD3kG,KAAK0xJ,GAAepsI,MAAMq/E,QAAU,GACpC3kG,KAAKwxJ,GAAkBp1D,MAAM1hD,MAAQj9B,EAAamB,EAAWyC,YAAc,IAC3ErhB,KAAKwxJ,GAAkB9tC,YAAY9kG,EAAWyC,YAG9CrhB,KAAK2xJ,GAAqBv1D,MAAM1hD,MAAS/yB,OAAOlK,EAAamB,EAAWiwB,gBAAkB,KAAQ,EAAI,OAAS,IAAOlnB,OAAOlK,EAAamB,EAAWiwB,gBAAkB,IAAO,IAC9K7uC,KAAK2xJ,GAAqBjuC,YAAY9kG,EAAWiwB,eAGjD7uC,KAAK6xJ,GAAyBvsI,MAAMq/E,QAAW3kG,KAAKs6J,GAA0B,GAAK,SAEnFt6J,KAAK0xJ,GAAepsI,MAAMq/E,QAAU,OAEpC3kG,KAAK6xJ,GAAyBvsI,MAAMq/E,QAAU,QAI/B,GAAf/lF,EAAW3J,MAA4C,IAAf2J,EAAW3J,KAA8B,CACjFjV,KAAKk1J,GAAe5vI,MAAMq/E,QAAU,GACpC3kG,KAAK+2J,GAAczxI,MAAMq/E,QAAU,GACnC3kG,KAAKgvJ,GAAmB1pI,MAAMq/E,QAAU,OAEhC3kG,KAAKmvJ,GAAoC7pI,MAAMq/E,QAAU,OACzD3kG,KAAKovJ,GAA2B9pI,MAAMq/E,QAAU,OAChD3kG,KAAKqvJ,GAAsB/pI,MAAMq/E,QAAU,OAC3C3kG,KAAKsvJ,GAAoBhqI,MAAMq/E,QAAU,OACzC3kG,KAAKuvJ,GAAwBjqI,MAAMq/E,QAAU,OAC7C3kG,KAAKwvJ,GAA0BlqI,MAAMq/E,QAAU,OAEvD6jD,GAAiBxoJ,KAAKmtJ,GAAkBvuI,EAAWuB,WACnDqoI,GAAiBxoJ,KAAKm1J,GAAqBv2I,EAAWwB,cACtDpgB,KAAK82J,GAAyBpzC,YAAY9kG,EAAWyB,mBACrD,IAAK,IAAIxV,EAAY,EAAGA,EAAIvJ,EAAO+V,eAAgC,IAAfuH,EAAW3J,KAA8B,EAAI,GAAIpK,IAAK,CACtG,MAAMi0J,EAAyD,GAApClgJ,EAAW3J,KAA6BpK,EAAIvJ,EAAOiW,WAAWqH,EAAWuB,WAAW3I,aAAgB3M,EAAI+T,EAAWswB,gBAAgB13B,aAC9JxX,KAAKk5J,GAAcruJ,GAAGya,MAAM4tF,MAAQ4rD,EAAYh4I,GAAYgJ,YAAc,GAC1E04H,GAAiBxoJ,KAAKo5J,GAA0BvuJ,GAAI+T,EAAW0B,UAAUzV,GAAG0V,WAC5EvgB,KAAKm5J,GAA0BtuJ,GAAG64G,YAAY9kG,EAAW0B,UAAUzV,GAAG+C,WACtE46I,GAAiBxoJ,KAAKs5J,GAAyBzuJ,GAAI+T,EAAW0B,UAAUzV,GAAGqY,UAC3EljB,KAAKw5J,GAAmC3uJ,GAAG64G,YAAY9kG,EAAW0B,UAAUzV,GAAGwW,YAC/ErhB,KAAKw5J,GAAmC3uJ,GAAGuxF,MAAM1hD,MAAQ,GAAKp5C,EAAOkb,iBAAiBoC,EAAW0B,UAAUzV,GAAGwW,YAAY7c,KAC1HxE,KAAK05J,GAAwB7uJ,GAAGya,MAAM4tF,MAAQ4rD,EAAYh4I,GAAYgJ,YAAc,GACpF,MAAMivI,GAAwBD,EAAY,SAAW,eAAiBj0J,EAAI,GAC1E7K,KAAKo5J,GAA0BvuJ,GAAG6vC,MAAQqkH,EAAe,aACzD/+J,KAAKm5J,GAA0BtuJ,GAAGuxF,MAAM1hD,MAAQqkH,GAAgBD,EAAY,UAAY,cACxF9+J,KAAK05J,GAAwB7uJ,GAAGya,MAAMq/E,QAAW3kG,KAAKq6J,GAAuBxvJ,GAAK,GAAK,OAC/C,GAApC+T,EAAW0B,UAAUzV,GAAGqY,UACxBljB,KAAKw5J,GAAmC3uJ,GAAGmpB,UAAU1O,MAAMq/E,QAAU,GACrE3kG,KAAKu5J,GAAuB1uJ,GAAGya,MAAMq/E,QAAU,SAE/C3kG,KAAKw5J,GAAmC3uJ,GAAGmpB,UAAU1O,MAAMq/E,QAAU,OACrE3kG,KAAKu5J,GAAuB1uJ,GAAGya,MAAMq/E,QAAU,GAEtD,CACkB,IAAf/lF,EAAW3J,MACXuzI,GAAiBxoJ,KAAKi2J,GAAqBr3I,EAAWowB,cACtDw5G,GAAiBxoJ,KAAK41J,GAAwBh3I,EAAWqwB,iBACzDjvC,KAAKg2J,GAAuB1M,eAC5BtpJ,KAAKk2J,GAAuB5wI,MAAMq/E,QAAU,GAC5C3kG,KAAK61J,GAAiBvwI,MAAMq/E,QAAU,GACtC3kG,KAAKk5J,GAAc,GAAG5zI,MAAMq/E,QAAU,GACtC3kG,KAAKk5J,GAAc,GAAG5zI,MAAMq/E,QAAU,GACtC3kG,KAAK05J,GAAwB,GAAGp0I,MAAMq/E,QAAW3kG,KAAKq6J,GAAuB,GAAK,GAAK,OACvFr6J,KAAK05J,GAAwB,GAAGp0I,MAAMq/E,QAAW3kG,KAAKq6J,GAAuB,GAAK,GAAK,OACvFr6J,KAAKotJ,GAAoB9nI,MAAMq/E,QAAU,OACzC3kG,KAAKo1J,GAAc9vI,MAAMq/E,QAAU,SAEnC3kG,KAAKk2J,GAAuB5wI,MAAMq/E,QAAU,OAC5C3kG,KAAK61J,GAAiBvwI,MAAMq/E,QAAU,OACtC3kG,KAAKk5J,GAAc,GAAG5zI,MAAMq/E,QAAU,OACtC3kG,KAAKk5J,GAAc,GAAG5zI,MAAMq/E,QAAU,OACtC3kG,KAAK05J,GAAwB,GAAGp0I,MAAMq/E,QAAU,OAChD3kG,KAAK05J,GAAwB,GAAGp0I,MAAMq/E,QAAU,OAChD3kG,KAAKo1J,GAAc9vI,MAAMq/E,QAAU,GACnC3kG,KAAKotJ,GAAoB9nI,MAAMq/E,QAAU,GAEhD,MAEG3kG,KAAKk2J,GAAuB5wI,MAAMq/E,QAAU,OAC5C3kG,KAAK61J,GAAiBvwI,MAAMq/E,QAAU,OACtC3kG,KAAKotJ,GAAoB9nI,MAAMq/E,QAAU,OACzC3kG,KAAKk1J,GAAe5vI,MAAMq/E,QAAU,OACpC3kG,KAAKo1J,GAAc9vI,MAAMq/E,QAAU,OACnC3kG,KAAK+2J,GAAczxI,MAAMq/E,QAAU,OA0BvC,GAxBA3kG,KAAKwxJ,GAAkBp1D,MAAM1hD,MAAQj9B,EAAamB,EAAWyC,YAAc,IAGvErS,EAAyB4P,EAAW3P,UACpCjP,KAAK6vJ,GAAevqI,MAAMq/E,QAAU,GAChC3kG,KAAKo6J,KACLp6J,KAAKgwJ,GAAyB1qI,MAAMq/E,QAAU,IAClD6jD,GAAiBxoJ,KAAK2vJ,GAAmB/wI,EAAWY,cAEpDxf,KAAKgwJ,GAAyB1qI,MAAMq/E,QAAU,OAC9C3kG,KAAK6vJ,GAAevqI,MAAMq/E,QAAU,QAGpCz1F,EAAoB0P,EAAW3P,UAC/BjP,KAAKg0J,GAAgB1uI,MAAMq/E,QAAU,GACrC3kG,KAAK+zJ,GAAezuI,MAAMq/E,QAAW/lF,EAAWc,OAASpe,EAAOyV,OAAO/R,WAAqB,SAAEF,MAAS,GAAK,OAC5G9E,KAAKq0J,GAAoB/uI,MAAMq/E,QAAW/lF,EAAWc,OAASpe,EAAOyV,OAAO/R,WAAqB,SAAEF,OAAS9E,KAAKm6J,GAAsB,GAAK,OAC5I3R,GAAiBxoJ,KAAK8zJ,GAAcl1I,EAAWc,SAE/C1f,KAAKg0J,GAAgB1uI,MAAMq/E,QAAU,OACrC3kG,KAAK+zJ,GAAezuI,MAAMq/E,QAAU,OACpC3kG,KAAKq0J,GAAoB/uI,MAAMq/E,QAAU,QAGzCx1F,EAAyByP,EAAW3P,SAAU,CAC9CjP,KAAKkyJ,GAAe5sI,MAAMq/E,QAAU,GACpC3kG,KAAK8xJ,GAAkBpuC,YAAY9kG,EAAWyvB,YAC9CruC,KAAK8xJ,GAAkB11D,MAAM1hD,MAAS97B,EAAWyvB,WAAa/sC,EAAO+Y,iBAAoB,eACzF,IAAK,MAAM2kJ,KAAUh/J,KAAKgyJ,GACtBgN,EAAO15I,MAAMq/E,QAAUtO,EAAM8sB,UAAY,GAAK,MAErD,MACGnjH,KAAKkyJ,GAAe5sI,MAAMq/E,QAAU,OAGpCv1F,EAAqBwP,EAAW3P,UAChCjP,KAAKqyJ,GAAiB/sI,MAAMq/E,QAAU,GACtC3kG,KAAKmyJ,GAAczuC,YAAY9kG,EAAW0vB,OAAShtC,EAAOgZ,cAC1Dta,KAAKmyJ,GAAc/1D,MAAM1hD,MAAS5S,GAAM+I,cAAcjyB,EAAW0vB,QAAW,YAE5EtuC,KAAKqyJ,GAAiB/sI,MAAMq/E,QAAU,OAGtCt1F,EAAsBuP,EAAW3P,UACjCjP,KAAKw0J,GAAkBlvI,MAAMq/E,QAAU,GACnC3kG,KAAKk6J,KACLl6J,KAAKi1J,GAAsB3vI,MAAMq/E,QAAU,IAC/C6jD,GAAiBxoJ,KAAKs0J,GAAgB11I,EAAWkB,WAEjD9f,KAAKi1J,GAAsB3vI,MAAMq/E,QAAU,OAC3C3kG,KAAKw0J,GAAkBlvI,MAAMq/E,QAAU,QAGvCr1F,EAAyBsP,EAAW3P,UAEpCjP,KAAKgxJ,GAAmB1rI,MAAMC,YAAY,mBAAoBiiF,EAAOr/E,aACrEnoB,KAAKgxJ,GAAmB1rI,MAAMC,YAAY,mBAAoBiiF,EAAOt/E,eACrEloB,KAAKgxJ,GAAmB1rI,MAAMC,YAAY,yBAA0BiiF,EAAOv/E,gBAC3EjoB,KAAKgxJ,GAAmB1rI,MAAMC,YAAY,yBAA0BiiF,EAAOz/E,kBAC3E/nB,KAAKgxJ,GAAmB1rI,MAAMq/E,QAAU,GAExC3kG,KAAKixJ,GAAkBr6H,SAEnBhY,EAAWgE,gBACX5iB,KAAK6wJ,GAAwBp+H,UAAUyI,OAAO,eAC9Cl7B,KAAK+wJ,GAA0Bt+H,UAAUC,IAAI,eAC7C1yB,KAAKmxJ,GAAe7rI,MAAMq/E,QAAU,OACpC3kG,KAAKqxJ,GAAwB/rI,MAAMq/E,QAAU,GAC7C3kG,KAAKuxJ,GAAyBjsI,MAAMq/E,QAAU,KAE9C3kG,KAAK6wJ,GAAwBp+H,UAAUC,IAAI,eAC3C1yB,KAAK+wJ,GAA0Bt+H,UAAUyI,OAAO,eAChDl7B,KAAKmxJ,GAAe7rI,MAAMq/E,QAAU,GACpC3kG,KAAKqxJ,GAAwB/rI,MAAMq/E,QAAU,OAC7C3kG,KAAKuxJ,GAAyBjsI,MAAMq/E,QAAU,UAGlD3kG,KAAKmxJ,GAAe7rI,MAAMq/E,QAAU,OACpC3kG,KAAKqxJ,GAAwB/rI,MAAMq/E,QAAU,OAC7C3kG,KAAKuxJ,GAAyBjsI,MAAMq/E,QAAU,OAC9C3kG,KAAKgxJ,GAAmB1rI,MAAMq/E,QAAU,QAGxCp1F,EAAyBqP,EAAW3P,UACpCjP,KAAKuyJ,GAAejtI,MAAMq/E,QAAU,GACjB,GAAf/lF,EAAW3J,MAA+E,GAAhD2J,EAAW3J,MAA8E,GAArC2J,EAAW3J,KACzGjV,KAAKyyJ,GAAantI,MAAMq/E,QAAU,GAElC3kG,KAAKyyJ,GAAantI,MAAMq/E,QAAU,OACtC3kG,KAAKsyJ,GAAkB5uC,YAAY9kG,EAAWwC,cAE9CphB,KAAKuyJ,GAAejtI,MAAMq/E,QAAU,OACpC3kG,KAAKyyJ,GAAantI,MAAMq/E,QAAU,QAGlCn1F,EAAyBoP,EAAW3P,UACpCjP,KAAK2yJ,GAA2BrtI,MAAMq/E,QAAU,GAChD3kG,KAAK6yJ,GAAmBvtI,MAAMq/E,QAAU,GACxC3kG,KAAK0yJ,GAA8BhvC,YAAY9kG,EAAWuC,wBAC1DnhB,KAAK4yJ,GAAsBlvC,YAAY9kG,EAAWkwB,kBAElD9uC,KAAK2yJ,GAA2BrtI,MAAMq/E,QAAU,OAChD3kG,KAAK6yJ,GAAmBvtI,MAAMq/E,QAAU,QAGxCl1F,EAAsBmP,EAAW3P,UACjCjP,KAAKkuJ,GAAc5oI,MAAMq/E,QAAU,GAC/B3kG,KAAKi6J,KACLj6J,KAAKsuJ,GAAkBhpI,MAAMq/E,QAAU,IAC3C3kG,KAAK8tJ,GAAWpqC,YAAY9kG,EAAW4D,OAEvCxiB,KAAKkuJ,GAAc5oI,MAAMq/E,QAAU,OACnC3kG,KAAKsuJ,GAAkBhpI,MAAMq/E,QAAU,QAGvCj1F,EAAqBkP,EAAW3P,UAChCjP,KAAKusJ,GAAWjnI,MAAMq/E,QAAU,GAChC3kG,KAAKssJ,GAAc5oC,YAAY9kG,EAAW0C,SAE1CthB,KAAKusJ,GAAWjnI,MAAMq/E,QAAU,OAGhCh1F,EAAmBiP,EAAW3P,UAC9BjP,KAAK6sJ,GAAgBvnI,MAAMq/E,QAAU,GACrC3kG,KAAK4sJ,GAAmBlpC,YAAY9kG,EAAWoE,aAC/ChjB,KAAK+sJ,GAAcznI,MAAMq/E,QAAU,GACnC3kG,KAAK8sJ,GAAiBppC,YAAY9kG,EAAWmwB,WAC7C/uC,KAAK8sJ,GAAiB1wD,MAAM1hD,MAASvvC,KAAKe,OAAO0S,EAAWmwB,UAAY,GAAKztC,EAAOwP,oBAAsBxP,EAAOyQ,aAAezQ,EAAOwQ,cAAgB,KAAQ,IAAQ,aAEvK9R,KAAK6sJ,GAAgBvnI,MAAMq/E,QAAU,OACrC3kG,KAAK+sJ,GAAcznI,MAAMq/E,QAAU,QAGnC/0F,EAAqBgP,EAAW3P,UAChCjP,KAAK2sJ,GAAWrnI,MAAMq/E,QAAU,GAChC3kG,KAAK0sJ,GAAchpC,YAAY9kG,EAAWiC,SAE1C7gB,KAAK2sJ,GAAWrnI,MAAMq/E,QAAU,OAGjB,GAAf/lF,EAAW3J,MAA8C,GAAf2J,EAAW3J,MAAoF,GAA3C2J,EAAW3J,MAAmD,GAAf2J,EAAW3J,MACxJjV,KAAKkzJ,GAAiB5tI,MAAMq/E,QAAU,GACtC6jD,GAAiBxoJ,KAAKizJ,GAAer0I,EAAWe,QAChD3f,KAAKmzJ,GAAsB7vJ,MAAQsb,EAAW2vB,aAAe,GAC7DvuC,KAAKqzJ,GAAsB/vJ,MAAQsb,EAAW4vB,aAAe,GAC7DxuC,KAAKuzJ,GAAsBjwJ,MAAQsb,EAAW6vB,aAAe,GAC7DzuC,KAAKyzJ,GAA0BnwJ,MAAQsb,EAAW8vB,iBAAmB,GACrE1uC,KAAK2zJ,GAAoBrwJ,MAAQsb,EAAW+vB,WAAa,GACzD3uC,KAAK6zJ,GAAqBvuI,MAAMq/E,QAAW3kG,KAAKu6J,GAAsB,GAAK,SAE3Ev6J,KAAKkzJ,GAAiB5tI,MAAMq/E,QAAU,OACtC3kG,KAAK6zJ,GAAqBvuI,MAAMq/E,QAAU,QAG9C3kG,KAAKy1J,GAAgB7+H,SAErB,IAAK,IAAI8nI,EAAqB,EAAGA,EAAap9J,EAAOyV,OAAOlU,OAAQ67J,IAAc,CAC9E,IAAIjvC,GAAoBnuH,EAAO+Q,iCAAiCuM,EAAW3J,OAAS3T,EAAOyV,OAAO2nJ,GAAY1nJ,eAC9G,MAAMulF,EAAkBv8F,KAAK8zJ,GAAazzD,SAASq+D,GAC/CjvC,EACKlzB,EAAOoiE,aAAa,WACrBpiE,EAAOz3E,aAAa,SAAU,IAGlCy3E,EAAO/2E,gBAAgB,SAE9B,CAEDxlB,KAAKq3J,GAAyB/xI,MAAM4tF,MAAQpsF,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAASgB,YAE3GqgI,GAAiBxoJ,KAAK2vJ,GAAmB/wI,EAAWY,YACpDgpI,GAAiBxoJ,KAAKs0J,GAAgB11I,EAAWkB,SACjD0oI,GAAiBxoJ,KAAK+0J,GAAoBn2I,EAAW2D,aACrDimI,GAAiBxoJ,KAAK8zJ,GAAcl1I,EAAWc,OAC/C1f,KAAKiuJ,GAAmB3qJ,MAAQsb,EAAW4D,IAAM,GACjDxiB,KAAKoyJ,GAAsB9uJ,MAASsb,EAAW0vB,OAAShtC,EAAOgZ,aAAgB,GAC/Eta,KAAK0tJ,GAAwBhqC,YAAY9kG,EAAW+C,QACpD3hB,KAAK2tJ,GAAgCrqJ,MAAQ,GAAMsb,EAAiB,OACpE5e,KAAKy0J,GAAoB/wC,YAAYv4G,KAAKe,MAAgC,GAA1B0S,EAAWwD,eAC3DpiB,KAAK60J,GAAoBnxC,YAAYv4G,KAAKe,MAAM0S,EAAWyD,eAC3DriB,KAAK20J,GAAoBjxC,YAAY9kG,EAAW0D,cAChDkmI,GAAiBxoJ,KAAK+0J,GAAoBn2I,EAAW2D,aACrDviB,KAAKi0J,GAAqBvwC,YAAY9kG,EAAWsD,eACjDliB,KAAKouJ,GAAgB1qC,YAAY9kG,EAAW6D,UAC5CziB,KAAK60J,GAAoBz4D,MAAM1hD,MAAQ,GAAKvvC,KAAKe,MAAM0S,EAAWyD,cAClEriB,KAAKy0J,GAAoBr4D,MAAM1hD,MAAQ,GAAK97B,EAAWwD,aACvDpiB,KAAK20J,GAAoBv4D,MAAM1hD,MAAQ,GAAK97B,EAAW0D,aACvDtiB,KAAKouJ,GAAgBhyD,MAAM1hD,MAAQ,GAAK97B,EAAW6D,SACnDziB,KAAKi0J,GAAqB73D,MAAM1hD,MAAQ,IAAMj9B,EAAanc,EAAOgU,cAAcsJ,EAAWsD,gBAC3FliB,KAAKywJ,GAAyB/sC,YAAY9kG,EAAWgvB,mBACrD5tC,KAAK2wJ,GAA0BjtC,YAAY9kG,EAAWivB,oBACtD7tC,KAAKoxJ,GAA2B1tC,YAAY9kG,EAAWkvB,qBACvD9tC,KAAKsxJ,GAA4B5tC,YAAY9kG,EAAWmvB,sBAErC,GAAfnvB,EAAW3J,OACXjV,KAAKu2J,GAAsBjN,eAEvBtpJ,KAAKu9F,kBAAkB+C,IACvBtgG,KAAKu9F,OAAOiD,iBAAiB5pE,UAIrC52B,KAAK4+J,GAAqBz3I,EAAS80B,EAAiBurD,EACvD,CAmkBD,GA1BAxnG,KAAKq3J,GAAyB/xI,MAAM4tF,MAAQ1L,EAAOr/E,YAEnDnoB,KAAKswJ,GAAgB15H,SACrB52B,KAAK0tJ,GAAwBhqC,YAAY9kG,EAAW+C,QACpD3hB,KAAKmyJ,GAAczuC,YAAY9kG,EAAW0vB,OAAShtC,EAAOgZ,cAC1Dta,KAAKm0J,GAAe71D,UAAU1/E,EAAWqD,eACzCjiB,KAAK8vJ,GAAwBxxD,UAAU1/E,EAAWoD,oBAClDhiB,KAAKwyJ,GAAal0D,UAAU1/E,EAAWwE,QACvCpjB,KAAKg3J,GAAmB57C,SAAYx8F,EAAWwvB,eAAiB9sC,EAAOka,iBAEvExb,KAAK0rJ,GAAchoC,YAAYrtB,EAAM10E,QAIjCi6I,GAA8B,MAAjBd,GAAsD,GAA7BA,EAActoI,aACpDxyB,KAAK+4H,eAGT/4H,KAAKi/J,GAAWj/J,KAAK6yB,EAAK0qE,QAEtBlH,EAAMygC,aAAe92H,KAAK6yB,EAAK6B,MAAMyxC,SACrCnmE,KAAK6yB,EAAK6B,MAAM+3C,QAAQzsE,KAAK6yB,EAAK+nB,KAKlC56C,KAAK6yB,EAAKqsI,YAAa,CACvB,MAAMC,EAAyBn/J,KAAKg3J,GAAmB3hI,wBACjD+pI,EAA4Bp/J,KAAKo4J,GAAwB/iI,wBACzDgqI,EAAwBr/J,KAAKq4J,GAAchjI,wBACjDr1B,KAAKo4J,GAAwBjhI,WAAahsB,KAAK2L,IAAI,EAAGqoJ,EAAcx/D,KAAOy/D,EAAiBz/D,IAAMy/D,EAAiB/rI,SACnHrzB,KAAKq4J,GAAclhI,WAAahsB,KAAK2L,IAAI,EAAGqoJ,EAAcx/D,KAAO0/D,EAAa1/D,IAAM0/D,EAAahsI,SACjGrzB,KAAK6yB,EAAKqsI,aAAc,CAC3B,CACGl/J,KAAK6yB,EAAKysI,gBACVt/J,KAAKo4J,GAAwBjhI,UAAYn3B,KAAKo4J,GAAwBmH,aACtEv/J,KAAKq4J,GAAclhI,UAAYn3B,KAAKq4J,GAAckH,aAClDv/J,KAAK6yB,EAAKysI,eAAgB,EAC7B,EAkFEt/J,KAAgB4gG,iBAAG,KAClB5gG,KAAK44J,IAAsB54J,KAAK6yB,EAAK6B,MAAMyxC,SAAWnmE,KAAK64J,IAAwB74J,KAAK6yB,EAAK6B,MAAM0xC,WAAapmE,KAAK84J,IAA6B94J,KAAK6yB,EAAKwjE,MAAMy5C,kBAAoB9vI,KAAK+4J,IAAqB/4J,KAAKg5J,KACrNh5J,KAAK44J,GAAqB54J,KAAK6yB,EAAK6B,MAAMyxC,QAC1CnmE,KAAK64J,GAAuB74J,KAAK6yB,EAAK6B,MAAM0xC,UAC5CpmE,KAAK84J,GAA4B94J,KAAK6yB,EAAKwjE,MAAMy5C,iBACjD9vI,KAAK+4J,GAAoB/4J,KAAKg5J,GAE1Bn1J,SAASi3J,eAAiB96J,KAAKygG,IAAe58F,SAASi3J,eAAiB96J,KAAKqrJ,IAAgBxnJ,SAASi3J,eAAiB96J,KAAKsrJ,IAAiBznJ,SAASi3J,eAAiB96J,KAAKurJ,IAE5KvrJ,KAAK+4H,eAGT/4H,KAAKygG,GAAYn7E,MAAMq/E,QAAU,OACjC3kG,KAAKqrJ,GAAa/lI,MAAMq/E,QAAU,OAClC3kG,KAAKsrJ,GAAchmI,MAAMq/E,QAAU,OACnC3kG,KAAKurJ,GAAYjmI,MAAMq/E,QAAU,OACjC3kG,KAAKwrJ,GAAelmI,MAAMq/E,QAAU,GACpC3kG,KAAKyrJ,GAAenmI,MAAMq/E,QAAU,GACpC3kG,KAAKygG,GAAYhuE,UAAUyI,OAAO,UAClCl7B,KAAKsrJ,GAAc74H,UAAUyI,OAAO,UACpCl7B,KAAK03J,GAAkBpyI,MAAMk6I,cAAgB,GAC7Cx/J,KAAKorJ,GAAiBp3H,UAAU1O,MAAMk6I,cAAgB,GACtDx/J,KAAKorJ,GAAiBp3H,UAAU1O,MAAMm6I,QAAU,GAChDz/J,KAAK8yB,EAAgBxN,MAAMk6I,cAAgB,GAC3Cx/J,KAAKmrJ,GAAYn3H,UAAU1O,MAAMm6I,QAAU,GAC3Cz/J,KAAKo4J,GAAwB9yI,MAAMk6I,cAAgB,GACnDx/J,KAAKo4J,GAAwB9yI,MAAMm6I,QAAU,GAC7Cz/J,KAAK+3J,GAAUzyI,MAAMk6I,cAAgB,GACrCx/J,KAAK+3J,GAAUzyI,MAAMm6I,QAAU,GAC/Bz/J,KAAKm4J,GAAkB7yI,MAAMk6I,cAAgB,GAC7Cx/J,KAAKm4J,GAAkB7yI,MAAMm6I,QAAU,GAEnCz/J,KAAK6yB,EAAK6B,MAAM0xC,WAChBpmE,KAAKurJ,GAAYjmI,MAAMq/E,QAAU,GACjC3kG,KAAKwrJ,GAAelmI,MAAMq/E,QAAU,OACpC3kG,KAAKyrJ,GAAenmI,MAAMq/E,QAAU,OACpC3kG,KAAK03J,GAAkBpyI,MAAMk6I,cAAgB,OAC7Cx/J,KAAKorJ,GAAiBp3H,UAAU1O,MAAMk6I,cAAgB,OACtDx/J,KAAKorJ,GAAiBp3H,UAAU1O,MAAMm6I,QAAU,MAChDz/J,KAAK8yB,EAAgBxN,MAAMk6I,cAAgB,OAC3Cx/J,KAAKmrJ,GAAYn3H,UAAU1O,MAAMm6I,QAAU,MAC3Cz/J,KAAKo4J,GAAwB9yI,MAAMk6I,cAAgB,OACnDx/J,KAAKo4J,GAAwB9yI,MAAMm6I,QAAU,MAC7Cz/J,KAAK+3J,GAAUzyI,MAAMk6I,cAAgB,OACrCx/J,KAAK+3J,GAAUzyI,MAAMm6I,QAAU,MAC/Bz/J,KAAKm4J,GAAkB7yI,MAAMk6I,cAAgB,OAC7Cx/J,KAAKm4J,GAAkB7yI,MAAMm6I,QAAU,OAChCz/J,KAAK6yB,EAAK6B,MAAMyxC,QACvBnmE,KAAKqrJ,GAAa/lI,MAAMq/E,QAAU,GAC3B3kG,KAAK6yB,EAAKwjE,MAAMy5C,kBACvB9vI,KAAKygG,GAAYn7E,MAAMq/E,QAAU,GACjC3kG,KAAKsrJ,GAAchmI,MAAMq/E,QAAU,GACnC3kG,KAAKygG,GAAYhuE,UAAUC,IAAI,UAC/B1yB,KAAKsrJ,GAAc74H,UAAUC,IAAI,WAC1B1yB,KAAKg5J,GACZh5J,KAAKsrJ,GAAchmI,MAAMq/E,QAAU,GAEnC3kG,KAAKygG,GAAYn7E,MAAMq/E,QAAU,IAGzC9/C,OAAO2vE,sBAAsBx0H,KAAK4gG,iBAAiB,EAG/C5gG,KAAA0/J,GAA2Bv7J,IAI3BA,EAAMg+H,UACNh+H,EAAMgxB,kBACC,GAoFPn1B,KAAA2/J,GAAkCx7J,IAGtC,OAAQA,EAAMk5F,SACV,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACDl5F,EAAMo7F,kBAEb,EAGGv/F,KAAAo9F,GAAmBj5F,IAGvB,GAFAnE,KAAKg5J,GAAY70J,EAAMg+H,QAEnBniI,KAAKu9F,OAQL,OAPIv9F,KAAKu9F,kBAAkB+C,IAAoBtgG,KAAKu9F,kBAAkBs2B,IAAiB7zH,KAAKu9F,kBAAkB43B,IAAqBn1H,KAAKu9F,kBAAkB6I,KACtJpmG,KAAKu9F,OAAOsD,eAAe18F,QAEV,IAAjBA,EAAMk5F,SAENr9F,KAAK6yB,EAAKsuD,QAMlB,GAAIt9E,SAASi3J,eAAiB96J,KAAK62J,GAAmBz6D,OAASp8F,KAAK+qJ,GAAejsB,iBAAmBj7H,SAASi3J,eAAiB96J,KAAKkrJ,GAAYvzB,GAAkBv7B,MAO/J,YALqB,IAAjBj4F,EAAMk5F,SAAkC,IAAjBl5F,EAAMk5F,UAC7Br9F,KAAKs4J,UAAU56D,QACf19F,KAAK+qJ,GAAe9lB,oBAAqC,IAAjB9gI,EAAMk5F,WAOtD,GACWx5F,SAASi3J,eAAiB96J,KAAKiuJ,IAC3BpqJ,SAASi3J,eAAiB96J,KAAKoyJ,IAC/BvuJ,SAASi3J,eAAiB96J,KAAK2tJ,IAE/B9pJ,SAASi3J,eAAiB96J,KAAK2uJ,IAC/B9qJ,SAASi3J,eAAiB96J,KAAK4uJ,IAC/B/qJ,SAASi3J,eAAiB96J,KAAK8uJ,IAE/BjrJ,SAASi3J,eAAiB96J,KAAKmsJ,IAC/BtoJ,SAASi3J,eAAiB96J,KAAKmzJ,IAC/BtvJ,SAASi3J,eAAiB96J,KAAKqzJ,IAC/BxvJ,SAASi3J,eAAiB96J,KAAKuzJ,IAC/B1vJ,SAASi3J,eAAiB96J,KAAKyzJ,IAC/B5vJ,SAASi3J,eAAiB96J,KAAK2zJ,GAQ1C,YAJqB,IAAjBxvJ,EAAMk5F,SAAkC,IAAjBl5F,EAAMk5F,SAC7Br9F,KAAKs4J,UAAU56D,SAMvB,GAAI19F,KAAK6yB,EAAK6B,MAAM0xC,UAchB,OAZKjiE,EAAMg+H,SAAYh+H,EAAMy7J,SACzB5/J,KAAKqvI,GAAgBxS,eAAe14H,GAAO,SAE1B,IAAjBA,EAAMk5F,SAIkB,IAAjBl5F,EAAMk5F,UAAkBl5F,EAAMg+H,SAAWh+H,EAAMy7J,YAHtD5/J,KAAK6/J,KACL17J,EAAMgxB,iBACNn1B,KAAK+4H,iBASb,MAAM+mC,EAAoC9/J,KAAK6yB,EAAKwjE,MAAMw5C,0BAA4B1rI,EAAM47J,iBAAiB,YACvGC,GAA0B77J,EAAMg+H,UAAYh+H,EAAMy7J,SAAWE,EAInE,OAHIE,GAAchgK,KAAKqvI,GAAgBxS,eAAe14H,GAAO,GAGrDA,EAAMk5F,SACV,KAAK,GACIl5F,EAAMg+H,SAAYh+H,EAAMy7J,UACzB,IAAIzpE,GAAuBn2F,KAAK6yB,EAAM,EAAG,GACzC7yB,KAAK6yB,EAAK43D,UAAU2L,qBAExB,MACJ,KAAK,GACDp2F,KAAK+qJ,GAAeptB,WAAY,EAChC,MACJ,KAAK,GACD39H,KAAK+qJ,GAAertB,aAAc,EAClC,MACJ,KAAK,GACGv5H,EAAMg+H,QACNniI,KAAK6/J,KACE17J,EAAMojG,UAETvnG,KAAKirJ,GAAajmB,uBAAyBhlI,KAAK+qJ,GAAe/lB,yBAC1DhlI,KAAK6yB,EAAK6B,MAAMyxC,SAASnmE,KAAK6yB,EAAKw3C,YAAYqB,QAGxD1rE,KAAK2gG,aAETx8F,EAAMgxB,iBACNn1B,KAAK+4H,eACL,MACJ,KAAK,GACD,GAAIinC,EAAc,MAClB,GAAI77J,EAAMg+H,SAAWh+H,EAAMy7J,QACvB5/J,KAAK6/J,KACL17J,EAAMgxB,iBACNn1B,KAAK+4H,oBACF,GAAIinC,EAAc,MACrBF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,UAAYz7J,EAAMojG,WACrEziD,SAAS80D,KAAO,gBAAkB55G,KAAK6yB,EAAK9F,KAAK8tB,iBACjD12C,EAAMgxB,kBAEV,MACJ,KAAK,IACD,GAAI6qI,EAAc,MAClB,GAAI77J,EAAMojG,SAAU,CAChBvnG,KAAK6yB,EAAK4yF,gBACVzlH,KAAK6yB,EAAK9F,KAAKy1B,yBACf,IAAK,MAAMr7B,KAAWnnB,KAAK6yB,EAAK9F,KAAKurB,SACjCnxB,EAAQ+wB,OAAQ,EAChB/wB,EAAQ3iB,KAAO,GAEnBxE,KAAK6yB,EAAKi/D,OAAO,IAAImE,GAAWj2F,KAAK6yB,EAAM,KAAK,GAAO,EAC1D,MACOitI,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,UACnD5/J,KAAKysJ,GAAY,gBAGzBtoJ,EAAMgxB,iBACN,MACJ,KAAK,GACD,GAAI6qI,EAAc,MACd77J,EAAMojG,SACNvnG,KAAK6yB,EAAKyuD,OAEVthF,KAAK6yB,EAAKsuD,OAEdh9E,EAAMgxB,iBACN,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAUw1E,WACpB97J,EAAMgxB,iBACN,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAKyuD,OACVn9E,EAAMgxB,iBACN,MACJ,KAAK,GACD,GAAI6qI,EAAc,MACd77J,EAAMojG,SACNvnG,KAAKkgK,MAELlgK,KAAK6yB,EAAK43D,UAAUvjD,OACpBlnC,KAAK6yB,EAAK43D,UAAU2L,oBACpBp2F,KAAK6yB,EAAK43D,UAAU0qD,oBAExBhxI,EAAMgxB,iBACN,MACJ,KAAK,GACGhxB,EAAMg+H,SAAWh+H,EAAMy7J,QACvB5/J,KAAK6yB,EAAK43D,UAAUquC,gBAEpB94H,KAAK6yB,EAAK43D,UAAU8pD,aAExBpwI,EAAMgxB,iBACN,MACJ,KAAK,EACGhxB,EAAMg+H,SAAWh+H,EAAMy7J,QACvB5/J,KAAK6yB,EAAK43D,UAAU01E,gBAEpBngK,KAAK6yB,EAAK43D,UAAUgqD,aAExBz0I,KAAKw0I,GAAchgH,kBACnBrwB,EAAMgxB,iBACN,MACJ,KAAK,GACD,GAAI6qI,EAAc,MACd77J,EAAMojG,SACNvnG,KAAK6yB,EAAK43D,UAAU21E,gBAEpBpgK,KAAK6yB,EAAK43D,UAAU41E,YAExBl8J,EAAMgxB,iBACN,MACJ,KAAK,GACD,GAAI6qI,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,WACnD5/J,KAAK6yB,EAAK43D,UAAU61E,oBACpBn8J,EAAMgxB,kBAEV,MACJ,KAAK,GACD,GAAIhxB,EAAMojG,SAAU,EACevnG,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAChF9jE,cAAgB5hB,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBAClGltB,KAAKysJ,GAAY,yBACxB,MACT,GAAIqT,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,SAAU,CACrE5/J,KAAKysJ,GAAY,2BACjB,KAEA,CACY,MACJ,KAAK,GACD,GAAIuT,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,WACnD5/J,KAAK6yB,EAAK6B,MAAM63C,cAChBvsE,KAAK6yB,EAAK6B,MAAM4vC,yBACZtkE,KAAK6yB,EAAKwjE,MAAMygC,YAChB92H,KAAK6yB,EAAK43D,UAAU2qD,cAAcp1I,KAAK6yB,EAAK1L,QAAShc,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,WAEpF1rB,EAAMgxB,kBAEV,MACJ,KAAK,GACD,GAAI6qI,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,WACnD5/J,KAAK6yB,EAAK6B,MAAM+3C,QAAQzsE,KAAK6yB,EAAK+nB,KAClC56C,KAAK6yB,EAAK6B,MAAM83C,YAChBxsE,KAAK6yB,EAAK6B,MAAM4vC,yBACZtkE,KAAK6yB,EAAKwjE,MAAMygC,YAChB92H,KAAK6yB,EAAK43D,UAAU2qD,cAAcp1I,KAAK6yB,EAAK1L,QAAShc,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,WAEpF1rB,EAAMgxB,kBAEV,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAEd77J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMo8J,SACzCvgK,KAAK6yB,EAAKwjE,MAAMqlE,UAAW,EAC3B17J,KAAK6yB,EAAKwjE,MAAMygC,YAAa,EAC7B92H,KAAK6yB,EAAKwjE,MAAMksC,mBAAoB,EACpCviI,KAAK6yB,EAAKwjE,MAAM8sB,WAAY,EAC5BnjH,KAAK6yB,EAAKwjE,MAAMiD,mBAAoB,EACpCt5F,KAAK6yB,EAAKwjE,MAAMC,aAAe,EAC/Bt2F,KAAK6yB,EAAKwjE,MAAMqzC,aAAc,EAC9B1pI,KAAK6yB,EAAKwjE,MAAM6wC,cAAe,EAC/BlnI,KAAK6yB,EAAKwjE,MAAM0kE,eAAgB,EAChC/6J,KAAK6yB,EAAKwjE,MAAMmwC,mBAAoB,EACpCxmI,KAAK6yB,EAAKwjE,MAAM8iC,qBAAsB,EACtCn5H,KAAK6yB,EAAKwjE,MAAMslE,mBAAoB,EACpC37J,KAAK6yB,EAAKwjE,MAAM2kE,kBAAmB,EACnCh7J,KAAK6yB,EAAKwjE,MAAMwrB,OAAS,OACzB7hH,KAAK6yB,EAAKwjE,MAAMmqE,eAAiB,EACjCxgK,KAAK6yB,EAAKwjE,MAAMgjB,OAChBl1G,EAAMgxB,iBACN2vB,SAASE,UAEb,MACJ,KAAK,GACD,GAAIg7G,EAAc,MACd77J,EAAMojG,SACNvnG,KAAKysJ,GAAY,mBAGjBzsJ,KAAKysJ,GAAY,YAErB,MACJ,KAAK,GACD,GAAIuT,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,UAC/C5/J,KAAK6yB,EAAKwjE,MAAM8iC,sBAChBn5H,KAAK6yB,EAAK43D,UAAUg2E,aAAat8J,EAAMojG,UACvCpjG,EAAMgxB,kBAGd,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAKlB,MAAM3hE,EAAqB,IAAI7c,GAE/B,GAAIr9E,EAAMojG,SAAU,CAChB,MAAM3oF,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC5Fp2E,EAAyBsP,EAAW3P,WAAa2P,EAAWgE,gBAAkB5iB,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBACpJltB,KAAKysJ,GAAY,4BACrB,KACH,CACI,GAAItoJ,EAAMg+H,QAAS,CACpB,IAAIu+B,EAAoB,EACxB,KAAOA,EAAY1gK,KAAK6yB,EAAK9F,KAAK0tB,oBAAsBz6C,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6wB,SAAS0oH,GAAW37H,MAAMliC,OAAS,GAClI69J,IAEJA,IAGIA,GAAap/J,EAAOoQ,cAEhBgvJ,EAAY1gK,KAAK6yB,EAAK9F,KAAK0tB,oBAG3B4jD,EAAM5c,OAAO,IAAIuQ,GAAyBhyF,KAAK6yB,EAAM6tI,IAIzDriE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM6tI,EAAW1gK,KAAK6yB,EAAK+nB,IAAK56C,KAAK6yB,EAAK1L,QAAS,EAAG,IAIxG,KACI,CACD,IAAIw5I,EAAqB,EACzB,MAA+E,GAAxE3gK,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS8wB,KAAKhc,QAAQ0kI,IACxDA,GAAc3gK,KAAK6yB,EAAK9F,KAAK0tB,oBAChCkmH,IAGAA,GAAcr/J,EAAOoQ,cAEjBivJ,EAAa3gK,KAAK6yB,EAAK9F,KAAK0tB,oBAG5B4jD,EAAM5c,OAAO,IAAIuQ,GAAyBhyF,KAAK6yB,EAAM8tI,IAIzDtiE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM8tI,EAAY3gK,KAAK6yB,EAAK+nB,IAAK56C,KAAK6yB,EAAK1L,QAAS,EAAG,IAGzG,CAEDnnB,KAAK6yB,EAAKi/D,OAAOuM,GAEjBl6F,EAAMgxB,iBACN,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClB,GAAIF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,SAAU,CAC9E,GAAIz7J,EAAMojG,SAAU,CACnBvnG,KAAKysJ,GAAY,eACjBtoJ,EAAMgxB,iBACN,KACA,CAEAn1B,KAAKysJ,GAAY,mBACjBtoJ,EAAMgxB,iBACN,KAEa,CACD,MACJ,KAAK,GACD,GAAI6qI,EAAc,MACd77J,EAAMg+H,SAAWh+H,EAAMy7J,SACvB5/J,KAAKysJ,GAAY,UACjBtoJ,EAAMgxB,kBAEFn1B,KAAK6yB,EAAKwjE,MAAM8iC,sBAIZh1H,EAAMojG,SACNvnG,KAAK6yB,EAAK43D,UAAUg2E,cAAa,GAEjCzgK,KAAK6yB,EAAK43D,UAAUm2E,cAAa,GAErCz8J,EAAMgxB,kBAGd,MACJ,KAAK,GACD,GAAI6qI,EAAc,OACd77J,EAAMg+H,SAAWh+H,EAAMy7J,WACvB5/J,KAAKysJ,GAAY,UACjBtoJ,EAAMgxB,kBAEV,MACJ,KAAK,GACD,GAAI6qI,EAAc,OACb77J,EAAMg+H,SAAWh+H,EAAMy7J,UAAYz7J,EAAMojG,WAAau4D,EACvD9/J,KAAK6yB,EAAK43D,UAAUo2E,eACb18J,EAAMojG,SACbvnG,KAAK8gK,KAEL9gK,KAAK6yB,EAAK43D,UAAUs2E,aAExB58J,EAAMgxB,iBACN,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAKysJ,GAAY,qBACjB,MACJ,KAAK,GACD,GAAIuT,EAAc,MAClB,GAAIF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,UAAYz7J,EAAMojG,SAAU,CAE/E,MACM52D,EADyB3wC,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACvDtgD,sBAClCuL,EAAyB,cAEzBA,EAAyB,cACzBA,EAAsB,IAC7B,MAAMqwH,EAA6BrwH,EAA0B,QAAE1U,QAAQ36B,EAAOsU,YAAW,KAC9D,GAAvBorJ,GAA0BrwH,EAA0B,QAAEzU,OAAO8kI,EAAoB,GACrF,IAAK,IAAIn2J,EAAY,EAAGA,EAAI8lC,EAA4B,UAAE9tC,OAAQgI,IAAK,CACnE,MAAM4V,EAAgBkwB,EAA4B,UAAE9lC,GAE1B,WAAtB4V,EAAiB,QAAwC,QAAtBA,EAAiB,QAAuC,QAAxBA,EAAmB,WACtFkwB,EAA4B,UAAEzU,OAAOrxB,EAAG,GACxCA,IAEP,CACD7K,KAAKykJ,GAAqB1mG,KAAKklD,UAAUtyD,IACzCxsC,EAAMgxB,gBACT,CACD,MACJ,KAAK,GACD,GAAI6qI,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,WAC/Cz7J,EAAMojG,SACNvnG,KAAKihK,KAELjhK,KAAKkhK,KAET/8J,EAAMgxB,kBAEV,MACJ,KAAK,IACD,GAAI6qI,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,WACnD5/J,KAAK6yB,EAAK6B,MAAMm4C,cACZ7sE,KAAK6yB,EAAKwjE,MAAMygC,YAChB92H,KAAK6yB,EAAK43D,UAAU2qD,cAAcp1I,KAAK6yB,EAAK1L,QAAShc,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,WAEpF1rB,EAAMgxB,kBAEV,MACJ,KAAK,IACD,GAAI6qI,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,WACnD5/J,KAAK6yB,EAAK6B,MAAMk4C,cACZ5sE,KAAK6yB,EAAKwjE,MAAMygC,YAChB92H,KAAK6yB,EAAK43D,UAAU2qD,cAAcp1I,KAAK6yB,EAAK1L,QAAShc,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,WAEpF1rB,EAAMgxB,kBAEV,MACJ,KAAK,IACL,KAAK,IACD,GAAI6qI,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,WACnD5/J,KAAK6yB,EAAK43D,UAAU0O,WAAU,EAAOh1F,EAAMojG,UAC3CpjG,EAAMgxB,kBAEV,MACJ,KAAK,IACL,KAAK,GACL,KAAK,IACD,GAAI6qI,EAAc,MACdF,IAA4B37J,EAAMg+H,SAAWh+H,EAAMy7J,WACnD5/J,KAAK6yB,EAAK43D,UAAU0O,WAAU,EAAMh1F,EAAMojG,UAC1CpjG,EAAMgxB,kBAEV,MACJ,KAAK,GACGhxB,EAAMg+H,SAAWh+H,EAAMy7J,QACvB5/J,KAAK6yB,EAAK43D,UAAU02E,cAAc,GAC3Bh9J,EAAMojG,UACbvnG,KAAK6yB,EAAK43D,UAAUoO,eAAiB1tF,KAAK2L,IAAI,EAAG9W,KAAK6yB,EAAK43D,UAAUoO,eAAiB,GACtF74F,KAAK6yB,EAAK43D,UAAU22E,yBACpBphK,KAAK6yB,EAAK43D,UAAU0qD,qBAEpBn1I,KAAK6yB,EAAK43D,UAAU2qD,eAAep1I,KAAK6yB,EAAK1L,QAAU,EAAInnB,KAAK6yB,EAAK9F,KAAKiK,mBAAqBh3B,KAAK6yB,EAAK9F,KAAKiK,kBAAmBh3B,KAAK6yB,EAAK+nB,KAC3I56C,KAAK6yB,EAAK43D,UAAU2L,qBAExBjyF,EAAMgxB,iBACN,MACJ,KAAK,GACGhxB,EAAMg+H,SAAWh+H,EAAMy7J,QACvB5/J,KAAK6yB,EAAK43D,UAAU02E,aAAa,GAC1Bh9J,EAAMojG,UACbvnG,KAAK6yB,EAAK43D,UAAUoO,eAAiB1tF,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAKiK,kBAAoB,EAAGh3B,KAAK6yB,EAAK43D,UAAUoO,eAAiB,GACzH74F,KAAK6yB,EAAK43D,UAAU22E,yBACpBphK,KAAK6yB,EAAK43D,UAAU0qD,qBAEpBn1I,KAAK6yB,EAAK43D,UAAU2qD,eAAep1I,KAAK6yB,EAAK1L,QAAU,GAAKnnB,KAAK6yB,EAAK9F,KAAKiK,kBAAmBh3B,KAAK6yB,EAAK+nB,KACxG56C,KAAK6yB,EAAK43D,UAAU2L,qBAExBjyF,EAAMgxB,iBACN,MACJ,KAAK,GACGhxB,EAAMojG,UACNvnG,KAAK6yB,EAAK43D,UAAUkO,eAAiBxtF,KAAK2L,IAAI,EAAG9W,KAAK6yB,EAAK43D,UAAUkO,eAAiB,GACtF34F,KAAK6yB,EAAK43D,UAAU22E,yBACpBphK,KAAK6yB,EAAK43D,UAAU0qD,qBAEpBn1I,KAAK6yB,EAAK43D,UAAU2qD,cAAcp1I,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK+nB,IAAM56C,KAAK6yB,EAAK9F,KAAKoJ,SAAW,GAAKn2B,KAAK6yB,EAAK9F,KAAKoJ,UACpHn2B,KAAK6yB,EAAK43D,UAAU2L,qBAExBjyF,EAAMgxB,iBACN,MACJ,KAAK,GACGhxB,EAAMojG,UACNvnG,KAAK6yB,EAAK43D,UAAUkO,eAAiBxtF,KAAKoC,IAAIvN,KAAK6yB,EAAK9F,KAAKoJ,SAAW,EAAGn2B,KAAK6yB,EAAK43D,UAAUkO,eAAiB,GAChH34F,KAAK6yB,EAAK43D,UAAU22E,yBACpBphK,KAAK6yB,EAAK43D,UAAU0qD,qBAEpBn1I,KAAK6yB,EAAK43D,UAAU2qD,cAAcp1I,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK+nB,IAAM,GAAK56C,KAAK6yB,EAAK9F,KAAKoJ,UAC1Fn2B,KAAK6yB,EAAK43D,UAAU2L,qBAExBjyF,EAAMgxB,iBACN,MACJ,KAAK,GACDn1B,KAAK6yB,EAAK43D,UAAUntC,OAAS,GAC7Bt9C,KAAK6yB,EAAK43D,UAAU42E,UAAU,KAAK,GAAO,GAC1C,MACJ,KAAK,GACD,GAAIrB,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACxHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC3KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACxHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC3KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACxHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC3KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACzHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC1KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACxHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC3KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACzHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC1KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACzHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC1KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACzHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC1KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACxHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC3KhjB,EAAMgxB,iBACO,MACJ,KAAK,GACD,GAAI6qI,EAAc,MAClBhgK,KAAK6yB,EAAK43D,UAAU42E,UAAU,IAAKvB,IAA4B37J,EAAMojG,UAAYpjG,EAAMg+H,SAAWh+H,EAAMy7J,SAAUz7J,EAAMo8J,QACxHvgK,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUnnB,KAAK6yB,EAAK6yD,uBAAwB5+D,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,UAC3KhjB,EAAMgxB,iBACO,MACf,KAAK,GACU,GAAI6qI,EAAc,MAClBhgK,KAAKysJ,GAAY,eACjB,MACJ,QACIzsJ,KAAK6yB,EAAK43D,UAAUntC,OAAS,GAC7Bt9C,KAAK6yB,EAAK43D,UAAU62E,iBAAmB,GAI3CtB,IACAhgK,KAAK6yB,EAAK43D,UAAUntC,OAAS,GAC7Bt9C,KAAK6yB,EAAK43D,UAAU62E,iBAAmB,GAC1C,EAIGthK,KAAAuhK,GAAoBp9J,IACxBnE,KAAKkrJ,GAAYhyB,QAAQ/0H,GACpBA,EAAMg+H,UACPniI,KAAK+qJ,GAAertB,aAAc,GAEjCv5H,EAAMojG,WACPvnG,KAAK+qJ,GAAeptB,WAAY,GAGpC39H,KAAKg5J,GAAY70J,EAAMg+H,QAEvBniI,KAAKqvI,GAAgBxS,eAAe14H,GAAO,EAAM,EAwB7CnE,KAAmBwhK,GAAG,KAC1BxhK,KAAK6yB,EAAK6B,MAAMm4C,cAChB7sE,KAAKw0I,GAAchgH,iBAAiB,EAGhCx0B,KAAmByhK,GAAG,KAC1BzhK,KAAK6yB,EAAK6B,MAAMk4C,cAChB5sE,KAAKw0I,GAAchgH,iBAAiB,EAGjCx0B,KAAU2gG,WAAG,KACZ3gG,KAAK6yB,EAAK6B,MAAMyxC,SAChBnmE,KAAK6yB,EAAKw3C,YAAYsB,QACtB3rE,KAAKq0H,qBAAuB,IAE5Br0H,KAAK6yB,EAAK6B,MAAM83C,YAChBxsE,KAAK6yB,EAAKw3C,YAAYqB,OACzB,EAGG1rE,KAAa6/J,GAAG,KAChB7/J,KAAK6yB,EAAK6B,MAAMyxC,QAChBnmE,KAAK6yB,EAAKw3C,YAAYsB,QAEtB3rE,KAAK6yB,EAAKw3C,YAAYynB,QACzB,EAGE9xF,KAAQ0hK,GAAG,KAEd1hK,KAAK2hK,KAED3hK,KAAK6yB,EAAKwjE,MAAM2kE,kBAChBh7J,KAAKu0H,KAGTv0H,KAAKw0I,GAAchgH,kBAEfx0B,KAAK6yB,EAAK6B,MAAM23C,mBAAkB,EAAOrsE,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK6yD,yBACtE1lF,KAAKswJ,GAAgB15H,QAAO,GAE5B52B,KAAK6yB,EAAK6B,MAAM23C,mBAAkB,EAAMrsE,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK6yD,yBACrE1lF,KAAKixJ,GAAkBr6H,QAAO,GAIlCiuB,OAAO2vE,sBAAsBx0H,KAAK0hK,GAAS,EAGxC1hK,KAAau0H,GAAG,KACnBv0H,KAAKo0H,yBACDp0H,KAAKo0H,wBAA0B,IAC/Bp0H,KAAKq0H,sBAAwB,KAE7Br0H,KAAK6yB,EAAK9F,KAAKgsB,aAAe/4C,KAAKq0H,uBACnCr0H,KAAKq0H,qBAAuBr0H,KAAK6yB,EAAK9F,KAAKgsB,aAC3C/4C,KAAKo0H,uBAAyB,IAG9Bp0H,KAAK6yB,EAAK9F,KAAKgsB,cAAgB/4C,KAAKw6J,mBACpCx6J,KAAKw6J,iBAAmBx6J,KAAK6yB,EAAK9F,KAAKgsB,aACvC/4C,KAAK4hK,GAAe5hK,KAAK6yB,EAAK9F,KAAKgsB,aAAc/4C,KAAKq0H,sBACzD,EAQGr0H,KAAgB6hK,GAAG,KACvB7hK,KAAK6yB,EAAKivI,UAAUn6I,OAAO3nB,KAAK0rJ,GAActvD,MAAM94F,OAAO,EAGvDtD,KAAekgK,GAAG,KACtB,MAEM5uE,EAFmBtxF,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SACpB6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACtBtgD,eACvCksD,EAAuB,OAAItxF,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SACtE09B,OAAOthD,aAAa+5F,QAAQ,iBAAkBv/C,KAAKklD,UAAU3R,IAC7DtxF,KAAK+4H,cAAc,EAGf/4H,KAAgB8gK,GAAG,KACvB,MACMliJ,EADmB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SACpB6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACvD4L,EAAsBvzC,KAAKC,MAAM9mB,OAAO2tB,OAAOthD,aAAaC,QAAQ,oBACpD,MAAlB8tF,GAA0BA,EAAuB,QAAKtxF,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,UACjGnnB,KAAK6yB,EAAKi/D,OAAO,IAAIT,GAAsBrxF,KAAK6yB,EAAMjU,EAAY0yE,IAEtEtxF,KAAK+4H,cAAc,EA6Bf/4H,KAAa+hK,GAAG,KACpB/hK,KAAK6yB,EAAKi/D,OAAO,IAAIwD,GAAYt1F,KAAK6yB,GAAO,EAAwC,EAArC8N,SAAS3gC,KAAKqsJ,GAAc/oJ,QAAY,EAGpFtD,KAAcgiK,GAAG,KACrBhiK,KAAK6yB,EAAKi/D,OAAO,IAAIoF,GAAgBl3F,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKiV,OAA8C,EAAtCrB,SAAS3gC,KAAKmsJ,GAAe7oJ,SACpGtD,KAAK25H,GAAOgB,aAAa,EAGrB36H,KAAaiiK,GAAG,KACpB,GAAIxhI,MAAuBzgC,KAAKisJ,GAAa3oJ,OAAQ,CACjD,OAAQtD,KAAKisJ,GAAa3oJ,OACtB,IAAK,aACDtD,KAAK6yB,EAAK43D,UAAUy3E,aACpB,MACJ,IAAK,YACDliK,KAAKysJ,GAAY,eAGzBzsJ,KAAK6yB,EAAKoD,SAASC,SACtB,MACGl2B,KAAK6yB,EAAKi/D,OAAO,IAAIyD,GAAYv1F,KAAK6yB,EAAM7yB,KAAKisJ,GAAa/8B,eACjE,EAGGlvH,KAAWmiK,GAAG,KAClB,GAAI1hI,MAAuBzgC,KAAKksJ,GAAW5oJ,OAAQ,CAC/C,GACS,cADDtD,KAAKksJ,GAAW5oJ,MAEhBtD,KAAK6yB,EAAKi/D,OAAO,IAAI0D,GAAgBx1F,KAAK6yB,IAGlD7yB,KAAK6yB,EAAKoD,SAASC,SACtB,MACGl2B,KAAK6yB,EAAKi/D,OAAO,IAAIzB,GAAUrwF,KAAK6yB,EAAMvxB,EAAO+O,KAAKxN,OAAS,EAAI7C,KAAKksJ,GAAWh9B,eACtF,EAGGlvH,KAAcoiK,GAAG,KACrB,GAAI3hI,MAAuBzgC,KAAKgtJ,GAAc1pJ,OAAQ,CAClD,GACS,gBADDtD,KAAKgtJ,GAAc1pJ,MAEnBtD,KAAK6yB,EAAK43D,UAAU43E,cAG5BriK,KAAK6yB,EAAKoD,SAASC,SACtB,MACGl2B,KAAK6yB,EAAKi/D,OAAO,IAAInB,GAAa3wF,KAAK6yB,EAAM7yB,KAAKgtJ,GAAc99B,eACnE,EAGElvH,KAAQsiK,GAAG,KAEd,IAAIC,EAAUviK,KACd+kD,YAAW,WAAcw9G,EAAQjK,UAAU56D,OAAQ,GAAI,GAAG,EAGvD19F,KAAqBwiK,GAAG,KAC3BxiK,KAAKyiK,GAAW/Z,EAAE,sBAAsBroH,MAAQ,GAAG,EAGhDrgC,KAAkB0iK,GAAG,KACxB1iK,KAAKyiK,GAAW/Z,EAAE,qBAAqBroH,MAAQ,GAAG,EAyB9CrgC,KAAoB2iK,GAAG,KAC3B3iK,KAAK6yB,EAAKi/D,OAAO,IAAI3C,GAAmBnvF,KAAK6yB,EAAM7yB,KAAKm1J,GAAoBjmC,eAAe,EAIvFlvH,KAAiB4iK,GAAG,KACxB5iK,KAAK6yB,EAAKi/D,OAAO,IAAI5C,GAAgBlvF,KAAK6yB,EAAM7yB,KAAKmtJ,GAAiBj+B,eAAe,EAGjFlvH,KAAuB6iK,GAAG,KAC9B7iK,KAAK6yB,EAAKi/D,OAAO,IAAIzC,GAAsBrvF,KAAK6yB,EAAM7yB,KAAK41J,GAAuB1mC,gBAClFlvH,KAAKg2J,GAAuB7wH,OAAO,EAE/BnlC,KAAoB8iK,GAAG,KAC3B9iK,KAAK6yB,EAAKi/D,OAAO,IAAI1C,GAAmBpvF,KAAK6yB,EAAM7yB,KAAKi2J,GAAoB/mC,gBAC5ElvH,KAAKg2J,GAAuB7wH,OAAO,EAG/BnlC,KAAA+iK,GAAyB5+J,IAC7B,GAAIA,EAAMqc,QAAUxgB,KAAKstJ,GACrBttJ,KAAK6yB,EAAKi/D,OAAO,IAAIlC,GAA2B5vF,KAAK6yB,SAClD,GAAI1uB,EAAMqc,QAAUxgB,KAAKutJ,GAC5BvtJ,KAAK6yB,EAAKi/D,OAAO,IAAIjC,GAA8B7vF,KAAK6yB,QACrD,CACH,MAAM/tB,EAAgB9E,KAAKqtJ,GAAmBpxH,QAAa93B,EAAMqc,SACnD,GAAV1b,GACA9E,KAAK6yB,EAAK43D,UAAUu4E,iBAAiBl+J,GAGrC9E,KAAK6yB,EAAK1L,SAAWnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBACvEltB,KAAK25H,GAAOgB,cAE1B36H,KAAK4+J,GAAqB5+J,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAUriB,EAAOgiB,GAAYkG,gBAAgBhtB,KAAK6yB,EAAK9F,KAAM/sB,KAAK6yB,EAAK1L,SAC5H,CAEDnnB,KAAK+4H,cAAc,EAGf/4H,KAAAijK,GAAsB19H,IAE1B,IAAI3mB,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1Fw9E,EAA0D,GAA9BtkJ,EAAWlC,WAAW6oB,IAAajkC,EAAOob,WAAWkC,EAAWlC,WAAW6oB,IAAMzoB,QAEjH9c,KAAK6yB,EAAK43D,UAAU04E,cAAc59H,EAAKvlC,KAAKi8J,GAAiB12H,GAAK2pF,eAElE,MAAMh2E,EAAqB/tC,KAAK2L,IAAI,EAAG8H,EAAWgJ,YAAY2d,IAG1DvlC,KAAK6yB,EAAK9F,KAAKurB,SAASY,GAAYlU,YAAYniC,OAAS,GAAKqgK,GAAmBljK,KAAKi8J,GAAiB12H,GAAK2pF,eAAiB,GACzHlvH,KAAK6yB,EAAK9F,KAAKurB,SAASY,GAAYjB,KAAKj4C,KAAK6yB,EAAK+nB,KAAO,GAC1D56C,KAAK6yB,EAAK43D,UAAU24E,iBAAiB79H,EAAKvlC,KAAK6yB,EAAK9F,KAAKurB,SAASY,GAAYlB,SAASh4C,KAAK6yB,EAAK9F,KAAKurB,SAASY,GAAYjB,KAAKj4C,KAAK6yB,EAAK+nB,KAAO,GAAG5V,YAAY,IAKxKhlC,KAAK25H,GAAOgB,aAAa,EAGrB36H,KAAAqjK,GAAyB99H,IAC7BvlC,KAAK6yB,EAAK43D,UAAU24E,iBAAiB79H,EAAKvlC,KAAKm8J,GAAoB52H,GAAK2pF,eAGxElvH,KAAK25H,GAAOgB,aAAa,EAGrB36H,KAAAk+J,GAAqB,CAAC34H,EAAa+9H,GAAwB,KAC/D,IAAI5xE,EAAe,QAC0B,GAAzC1xF,KAAKq8J,GAAa92H,GAAK2pF,gBACvBx9B,EAAO1xF,KAAKq8J,GAAa92H,GAAK86D,SAASrgG,KAAKq8J,GAAa92H,GAAK2pF,eAAezhG,YAEzE61I,GAEAtjK,KAAKq8J,GAAa92H,GAAKg+H,gBAAgB78E,KAAK,GAAIphE,MAAMC,YAAY,QAAS,OAC3EvlB,KAAKq8J,GAAa92H,GAAK9S,UAAUC,IAAI,kBACrC1yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwB/1C,kBAAkBpK,IAAO,IAElHvlC,KAAKq8J,GAAa92H,GAAK9S,UAAUyI,OAAO,kBACxCl7B,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwB/1C,kBAAkBpK,IAAO,IAGrH+9H,GACDtjK,KAAK6yB,EAAK43D,UAAU+4E,cAAcj+H,EAAKmsD,GAG3C1xF,KAAK25H,GAAOgB,aAAa,EAIrB36H,KAAAyjK,GAAuBl+H,IACvBvlC,KAAKi8J,GAAiB12H,GAAK2pF,eAAiB,GAC5ClvH,KAAK6yB,EAAK43D,UAAU2qD,cAAcp1I,KAAKi8J,GAAiB12H,GAAK2pF,cAAgB,EAAGlvH,KAAK6yB,EAAK+nB,IAC7F,EAGG56C,KAAyB0jK,GAAG,KAChC,MAAMxpH,EAAuBl6C,KAAK6yB,EAAK1L,QACjC80B,EAA0Bj8C,KAAK6yB,EAAK6yD,uBAC1C,GAAIxrC,EAAel6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBACjE,IAAK,IAAIy2I,EAAwB3jK,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBy2I,EAAgB3jK,KAAK6yB,EAAK9F,KAAKurB,SAASz1C,OAAQ8gK,IAAiB,CACnK,MAAMzqH,EAAsBl5C,KAAK6yB,EAAK9F,KAAKurB,SAASqrH,GAC9CC,EAAa1qH,EAAWjB,KAAKj4C,KAAK6yB,EAAK+nB,KAC7C,GAAIgpH,EAAa,EAAG,CAChB,MAAMC,EAA2B3qH,EAAWlB,SAAS4rH,EAAa,GAAG5+H,YAAY,GAC3EmU,EAA4BD,EAAWlU,YAAY6+H,GACzD,IAAK,IAAIt+H,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAC7C,GAAI4T,EAAcvxB,YAAY2d,IAAQ2U,IAAiBf,EAAczJ,eAAenK,IAAQ0W,GAAmB9C,EAAczJ,eAAenK,IAAQvlC,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAclV,YAAYniC,QAElM,YADA7C,KAAK6yB,EAAK43D,UAAU2qD,cAAcuuB,EAAe3jK,KAAK6yB,EAAK+nB,IAItE,CACJ,CACJ,EAGG56C,KAAA8jK,GAAqBv+H,IACzBvlC,KAAK6yB,EAAK43D,UAAUs5E,aAAax+H,EAAKvlC,KAAKu+J,GAAgBh5H,GAAK2pF,cAAc,EAG1ElvH,KAAgBgkK,GAAG,KACvBhkK,KAAK6yB,EAAKi/D,OAAO,IAAIqJ,GAAen7F,KAAK6yB,EAAM7yB,KAAKuuJ,GAAgBr/B,eAAe,EAIvElvH,KAAuCikK,GAAG,KAC9CjkK,KAAK6yB,EAAKi/D,OAAO,IAAIsJ,GAAsCp7F,KAAK6yB,IAAM7yB,KAAKyuJ,GAAoCnwD,SAAwB,EAEnIt+F,KAAwBkkK,GAAG,KAC/BlkK,KAAK6yB,EAAKi/D,OAAO,IAAIuJ,GAAuBr7F,KAAK6yB,EAAM7yB,KAAK0uJ,GAAwBx/B,eAAe,EAEhGlvH,KAAyBmkK,GAAG,KAE/BnkK,KAAK6yB,EAAKi/D,OAAO,IAAIwJ,GAAwBt7F,KAAK6yB,EAAuD,EAAjD8N,SAAS3gC,KAAK2uJ,GAA0BrrJ,QAAY,EAExGtD,KAAuBokK,GAAG,KAE9BpkK,KAAK6yB,EAAKi/D,OAAO,IAAIyJ,GAAsBv7F,KAAK6yB,EAAqD,EAA/C8N,SAAS3gC,KAAK4uJ,GAAwBtrJ,QAAY,EAEpGtD,KAA4BqkK,GAAG,KACnC,MACMzlJ,EADU5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SACvB6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAE3CnS,EADWjyE,EAAOK,gBAAgBid,EAAWvd,UACnBiB,QAAQO,OACxC7C,KAAK6yB,EAAKi/D,OAAO,IAAIyJ,GAAsBv7F,KAAK6yB,EAAM0gD,EAAiB,GAAG,EAEtEvzE,KAA2BskK,GAAG,KAElCtkK,KAAK6yB,EAAKi/D,OAAO,IAAI0J,GAA0Bx7F,KAAK6yB,EAAyD,EAAnD8N,SAAS3gC,KAAK8uJ,GAA4BxrJ,QAAY,EAE5GtD,KAA6BukK,GAAG,KACpCvkK,KAAK6yB,EAAKi/D,OAAO,IAAI2J,GAA4Bz7F,KAAK6yB,EAAM7yB,KAAK+uJ,GAA0BzwD,SAAS,EAIxGt+F,KAAiBwkK,GAAG,KACxBxkK,KAAK6yB,EAAKi/D,OAAO,IAAI4J,GAAgB17F,KAAK6yB,EAAM7yB,KAAKwuJ,GAAiBt/B,eAAe,EAKjFlvH,KAAkBykK,GAAG,KACzBzkK,KAAK6yB,EAAKi/D,OAAO,IAAIjK,GAAiB7nF,KAAK6yB,EAAM7yB,KAAK2vJ,GAAkBzgC,eAAe,EAGnFlvH,KAAe0kK,GAAG,KACtB,MAAM9lJ,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC1FuC,EAAmBrpE,EAAW3P,QAC9B84E,EAAqBzmF,EAAOuU,YAAY7V,KAAKiwJ,GAAe/gC,cAAgB,GAClFlvH,KAAK6yB,EAAKi/D,OAAO,IAAIhK,GAAoB9nF,KAAK6yB,EAAMk1D,EAAY,OAChE/nF,KAAKiwJ,GAAe/gC,cAAgB,EAChCtwG,EAAW3P,QAAUg5E,IACrBjoF,KAAK6yB,EAAKqsI,aAAc,GAE5Bl/J,KAAK6yB,EAAKoD,SAASC,SAAS,EAGxBl2B,KAAe2kK,GAAG,KACtB3kK,KAAK6yB,EAAKi/D,OAAO,IAAI3G,GAAcnrF,KAAK6yB,EAAM7yB,KAAKs0J,GAAeplC,eAAe,EAG7ElvH,KAAmB4kK,GAAG,KAC1B5kK,KAAK6yB,EAAKi/D,OAAO,IAAIvG,GAAkBvrF,KAAK6yB,EAAM7yB,KAAK+0J,GAAmB7lC,eAAe,EAGrFlvH,KAAc6kK,GAAG,KACrB7kK,KAAK6yB,EAAKi/D,OAAO,IAAInH,GAAa3qF,KAAK6yB,EAAM7yB,KAAKizJ,GAAc/jC,eAAe,EAG3ElvH,KAAa8kK,GAAG,KACpB9kK,KAAK6yB,EAAKi/D,OAAO,IAAI5G,GAAYlrF,KAAK6yB,EAAM7yB,KAAK8zJ,GAAa5kC,eAAe,EAGzElvH,KAAe+kK,GAAG,KACtB/kK,KAAK6yB,EAAKi/D,OAAO,IAAI6J,GAAkB37F,KAAK6yB,IAC5C7yB,KAAK+4H,eACL/4H,KAAK6yB,EAAKysI,eAAgB,CAAI,EAG1Bt/J,KAAOglK,GAAG,KACdhlK,KAAK6yB,EAAKwjE,MAAMmqE,eAAiBr1J,KAAK2L,IAAI,EAAG9W,KAAK6yB,EAAKwjE,MAAMmqE,eAAiB,GAC9ExgK,KAAK6yB,EAAKwjE,MAAMgjB,OAChBr5G,KAAK6yB,EAAKoD,SAASC,UACnBl2B,KAAK+4H,cAAc,EAGf/4H,KAAQilK,GAAG,KACfjlK,KAAK6yB,EAAKwjE,MAAMmqE,eAAiBr1J,KAAKoC,IAAIjM,EAAOwY,aAAc9Z,KAAK6yB,EAAKwjE,MAAMmqE,eAAiB,GAChGxgK,KAAK6yB,EAAKwjE,MAAMgjB,OAChBr5G,KAAK6yB,EAAKoD,SAASC,UACnBl2B,KAAK+4H,cAAc,EAGf/4H,KAAAklK,GAAoB/gK,IACxB,OAAQnE,KAAK8rJ,GAAUxoJ,OACnB,IAAK,MACDtD,KAAK6yB,EAAK4yF,gBACVzlH,KAAK6yB,EAAK9F,KAAKy1B,yBACf,IAAK,MAAMr7B,KAAWnnB,KAAK6yB,EAAK9F,KAAKurB,SACjCnxB,EAAQ+wB,OAAQ,EAChB/wB,EAAQ3iB,KAAO,GAEnBxE,KAAK6yB,EAAKi/D,OAAO,IAAImE,GAAWj2F,KAAK6yB,EAAM,KAAK,GAAO,GACvD,MACJ,IAAK,SACD7yB,KAAKysJ,GAAY,UACjB,MACJ,IAAK,SACDzsJ,KAAKysJ,GAAY,UACjB,MACJ,IAAK,UACDzsJ,KAAKykJ,GAAqB,IAAItjG,IAAI,IAAMnhD,KAAK6yB,EAAK9F,KAAK8tB,iBAAkBiK,SAAS80D,MAAMA,MACxF,MACJ,IAAK,WACKr8F,UAAW4nJ,MAAM,CAAEvkK,IAAK,IAAIugD,IAAI,IAAMnhD,KAAK6yB,EAAK9F,KAAK8tB,iBAAkBiK,SAAS80D,MAAMA,OAC5F,MACJ,IAAK,aACD/0D,OAAOi1D,KAAK,0CAA4C5+D,mBAAmB,IAAIiG,IAAI,IAAMnhD,KAAK6yB,EAAK9F,KAAK8tB,iBAAkBiK,SAAS80D,MAAMA,OACzI,MACJ,IAAK,aACD90D,SAAS80D,KAAO,gBAAkB55G,KAAK6yB,EAAK9F,KAAK8tB,iBACjD,MACJ,IAAK,YACD76C,KAAKykJ,GAAqB,8DAA8D,IAAItjG,IAAI,gBAAkBnhD,KAAK6yB,EAAK9F,KAAK8tB,iBAAkBiK,SAAS80D,MAAMA,mBAClK,MACJ,IAAK,eACD55G,KAAKysJ,GAAY,gBAGzBzsJ,KAAK8rJ,GAAU58B,cAAgB,CAAC,EAG5BlvH,KAAAolK,GAAoBjhK,IACxB,OAAQnE,KAAK+rJ,GAAUzoJ,OACnB,IAAK,OACDtD,KAAK6yB,EAAKsuD,OACV,MACJ,IAAK,OACDnhF,KAAK6yB,EAAKyuD,OACV,MACJ,IAAK,OACDthF,KAAK6yB,EAAK43D,UAAUvjD,OACpB,MACJ,IAAK,aACDlnC,KAAK6yB,EAAK43D,UAAU8pD,aACpB,MACJ,IAAK,aACDv0I,KAAK6yB,EAAK43D,UAAUgqD,aACpB,MACJ,IAAK,gBACDz0I,KAAK6yB,EAAK43D,UAAUquC,gBACpB,MACJ,IAAK,gBACD94H,KAAK6yB,EAAK43D,UAAU01E,gBACpB,MACJ,IAAK,aACDngK,KAAK6yB,EAAK43D,UAAUs2E,aACpB,MACJ,IAAK,eACD/gK,KAAK6yB,EAAK43D,UAAUo2E,eACpB,MACJ,IAAK,cACD7gK,KAAK6yB,EAAK43D,UAAU0O,WAAU,GAAM,GACpC,MACJ,IAAK,gBACDn5F,KAAK6yB,EAAK43D,UAAU0O,WAAU,GAAO,GACrC,MACJ,IAAK,YACDn5F,KAAK6yB,EAAK43D,UAAU41E,YACpB,MACJ,IAAK,gBACDrgK,KAAK6yB,EAAK43D,UAAU21E,gBACpB,MACJ,IAAK,oBACDpgK,KAAK6yB,EAAK43D,UAAU61E,oBACpB,MACJ,IAAK,WACDtgK,KAAKysJ,GAAY,YACjB,MACJ,IAAK,cACDzsJ,KAAKysJ,GAAY,eACjB,MACJ,IAAK,oBACDzsJ,KAAKysJ,GAAY,qBACjB,MACJ,IAAK,kBACDzsJ,KAAKysJ,GAAY,mBACjB,MACJ,IAAK,kBACDzsJ,KAAKysJ,GAAY,mBACjB,MACJ,IAAK,0BACDzsJ,KAAKysJ,GAAY,2BACjB,MACJ,IAAK,cACDzsJ,KAAKysJ,GAAY,eAGzBzsJ,KAAK+rJ,GAAU78B,cAAgB,CAAC,EAG5BlvH,KAAAqlK,GAAuBlhK,IAC3B,OAAQnE,KAAKgsJ,GAAa1oJ,OACtB,IAAK,WACDtD,KAAK6yB,EAAKwjE,MAAMqlE,UAAY17J,KAAK6yB,EAAKwjE,MAAMqlE,SAC5C,MACJ,IAAK,aACD17J,KAAK6yB,EAAKwjE,MAAMygC,YAAc92H,KAAK6yB,EAAKwjE,MAAMygC,WAC9C,MACJ,IAAK,oBACD92H,KAAK6yB,EAAKwjE,MAAMksC,mBAAqBviI,KAAK6yB,EAAKwjE,MAAMksC,kBACrD,MACJ,IAAK,cACDviI,KAAK6yB,EAAKwjE,MAAMqzC,aAAe1pI,KAAK6yB,EAAKwjE,MAAMqzC,YAC/C,MACJ,IAAK,YACD1pI,KAAK6yB,EAAKwjE,MAAM8sB,WAAanjH,KAAK6yB,EAAKwjE,MAAM8sB,UAC7C,MACJ,IAAK,oBACDnjH,KAAK6yB,EAAKwjE,MAAMiD,mBAAqBt5F,KAAK6yB,EAAKwjE,MAAMiD,kBACrD,MACJ,IAAK,kBACDt5F,KAAK6yB,EAAKwjE,MAAMC,aAAet2F,KAAK6yB,EAAK9F,KAAKutB,MAC9C,MACJ,IAAK,eACDt6C,KAAK6yB,EAAKwjE,MAAM6wC,cAAgBlnI,KAAK6yB,EAAKwjE,MAAM6wC,aAChD,MACJ,IAAK,gBACDlnI,KAAK6yB,EAAKwjE,MAAM0kE,eAAiB/6J,KAAK6yB,EAAKwjE,MAAM0kE,cACjD,MACJ,IAAK,oBACD/6J,KAAK6yB,EAAKwjE,MAAMmwC,mBAAqBxmI,KAAK6yB,EAAKwjE,MAAMmwC,kBACrD,MACJ,IAAK,sBACDxmI,KAAK6yB,EAAKwjE,MAAM8iC,qBAAuBn5H,KAAK6yB,EAAKwjE,MAAM8iC,oBACvD,IAAK,MAAMhyG,KAAWnnB,KAAK6yB,EAAK9F,KAAKurB,SAAUnxB,EAAQ+wB,OAAQ,EAC/D,MACJ,IAAK,oBACDl4C,KAAK6yB,EAAKyyI,0BACV,MACJ,IAAK,mBACDtlK,KAAK6yB,EAAKwjE,MAAM2kE,kBAAoBh7J,KAAK6yB,EAAKwjE,MAAM2kE,iBACpD,MACJ,IAAK,SACDh7J,KAAKysJ,GAAY,UACjB,MACJ,IAAK,aACDzsJ,KAAKysJ,GAAY,SACjB,MACf,IAAK,cACJzsJ,KAAKysJ,GAAY,UACjB,MACU,IAAK,iBACDzsJ,KAAKysJ,GAAY,kBACjB,MACJ,IAAK,mBACDzsJ,KAAK6yB,EAAKwjE,MAAM4kE,kBAAoBj7J,KAAK6yB,EAAKwjE,MAAM4kE,iBACpD,MACJ,IAAK,0BACDj7J,KAAK6yB,EAAKwjE,MAAM6kE,yBAA2Bl7J,KAAK6yB,EAAKwjE,MAAM6kE,wBAGnEl7J,KAAKgsJ,GAAa98B,cAAgB,EAClClvH,KAAK6yB,EAAKoD,SAASC,UACnBl2B,KAAK6yB,EAAKwjE,MAAMgjB,MAAM,EAGlBr5G,KAAAulK,GAA4BphK,IAGhC,IAAIqhK,EAAgC,IAAIx6J,aAAa,IACjDlG,EAAgB9E,KAAKw2J,GAAsBtnC,cAAgB,EAC3DrlE,EAAmBliC,OAAO89I,UAC1BljI,EAAmB5a,OAAOy/F,UAC1Bs+C,EAAqB,EACrBC,GAAqBrkK,EAAOC,UAAUuD,GAAOxC,QAAQO,OAAS,GAAK,GAEvE,IAAK,IAAIgI,EAAY,EAAGA,EAAI,GAAIA,IAE5B26J,EAAgB36J,IAAMvJ,EAAOC,UAAUuD,GAAOxC,QAAQ6I,KAAK0hB,MAAM64I,IAAepkK,EAAOC,UAAUuD,GAAOxC,QAAS6I,KAAK0hB,MAAM64I,GAAc,IAAOC,EAE7IH,EAAgB36J,GAAK03B,IACrBA,EAAWijI,EAAgB36J,IAE3B26J,EAAgB36J,GAAKg/C,IACrBA,EAAW27G,EAAgB36J,IAG/B66J,GAAcC,EAGlB,IAAK,IAAI96J,EAAY,EAAGA,EAAI,GAAIA,IAE5B26J,EAAgB36J,IAAM03B,EAEtBijI,EAAgB36J,IAAOg/C,EAAWtnB,EAElCijI,EAAgB36J,IAAM,GAEtB26J,EAAgB36J,IAAM,GAEtB26J,EAAgB36J,GAAKM,KAAKgS,KAAKqoJ,EAAgB36J,IAG/C7K,KAAKu2J,GAAsBtjJ,SAASpI,GAAK26J,EAAgB36J,GAK7D7K,KAAK6yB,EAAKi/D,OAAO,IAAItM,GAAiBxlF,KAAK6yB,EAAM2yI,IACjDxlK,KAAK6yB,EAAKi/D,OAAO,IAAIyI,GAAav6F,KAAK6yB,GAAO7yB,KAAK0tJ,GAAwBtxD,MAAM94F,OAAQhC,EAAOyU,YAAc,EAAI5K,KAAKe,MAAMf,KAAKc,KAAK3K,EAAOC,UAAUuD,GAAOL,YAAcnD,EAAOyU,YAAc,KAElM/V,KAAKw2J,GAAsBtnC,cAAgB,EAC3ClvH,KAAK6yB,EAAKoD,SAASC,UACnBl2B,KAAK6yB,EAAKwjE,MAAMgjB,MAAM,EAj0GtBr5G,KAAK6yB,EAAKoD,SAASygG,MAAM12H,KAAK46J,aAC9B,IAAI7/B,GAAiB/6H,KAAK6yB,GAC1BgyB,OAAO3gD,iBAAiB,SAAUlE,KAAK46J,aACvC/1G,OAAO2vE,sBAAsBx0H,KAAK4gG,kBAClC/7C,OAAO2vE,sBAAsBx0H,KAAK0hK,IAE5B,UAAWnkJ,WACbvd,KAAK8rJ,GAAUn5H,YAAY3yB,KAAK8rJ,GAAUn+H,cAAc,uBAG5D3tB,KAAKisJ,GAAahoJ,YAAY0jJ,GAAS,CAAE9pD,MAAO,QAC5CtB,GAAO,CAAEj5F,MAAO,cAAgB,uBAChCi5F,GAAO,CAAEj5F,MAAO,aAAe,uBAEnCtD,KAAKksJ,GAAWjoJ,YAAY0jJ,GAAS,CAAE9pD,MAAO,QAC1CtB,GAAO,CAAEj5F,MAAO,aAAe,gBAEnCtD,KAAKgtJ,GAAc/oJ,YAAY0jJ,GAAS,CAAE9pD,MAAO,QAC7CtB,GAAO,CAAEj5F,MAAO,eAAiB,0BAGrCtD,KAAKs0J,GAAerwJ,YAAYs4F,GAAO,CAAEkzB,QAAQ,EAAMnsH,MAAO,GAAK,WAInEtD,KAAKizJ,GAAchvJ,YAAYs4F,GAAO,CAAEkzB,QAAQ,EAAMnsH,MAAOhC,EAAOiU,QAAQ1S,QAAU,WAEtF7C,KAAK65J,GAAkB,IAAIr3J,MAAelB,EAAOob,WAAW7Z,QAC5D7C,KAAK+5J,GAAmB,IAAIv3J,MAAclB,EAAOob,WAAW7Z,QAE5D7C,KAAKk1J,GAAejxJ,YAAYsuB,GAAI,CAAE0B,MAAO,YAAa3O,MAAO,UAAUwB,GAAYiJ,kDACnFwC,GAAI,CAAEjN,MAAO,2CAA6C,MAC1DiN,GAAI,CAAEjN,MAAO,kCAAmC2O,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,sBAAwB,SACtHl6H,GAAI,CAAE0B,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,mBAAqB,aAE7E,IAAK,IAAI5hJ,EAAY,EAAGA,EAAIvJ,EAAO+V,cAAc,EAAGxM,IAAK,CACrD,MAAM0kF,EAAwB1kF,EACxB+6J,EAAiCrzI,GAAI,CAAEjN,MAAO,6BAA+BwB,GAAYiJ,cAAgB,KAAOllB,EAAI,EAAI,IACxHg7J,EAAqCje,GAAatrD,GAAO,CAAEh3E,MAAO,eAAgBo1B,MAAO,cAAgBp5C,EAAOwW,oBAAoBqC,KAAImvB,GAAQA,EAAK9kC,QACrJshK,EAA0B,IAAIniD,GAAOvnB,GAAM,CAAEnnF,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOuW,qBAAsBvU,MAAO,IAAKo5F,KAAM,IAAKhiD,MAAO,WAAa16C,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAI0J,GAAwB1vF,KAAK6yB,EAAM08D,EAAetH,EAAUjC,KAAW,GACjR+/E,EAAoCne,GAAatrD,GAAO,CAAEh3E,MAAO,eAAgBo1B,MAAO,aAAep5C,EAAO4a,cAAc/B,KAAIxP,GAAQA,EAAKnG,QAC7IwhK,EAAsC/pE,GAAO,CAAE32E,MAAO,+GAAgHknI,QAAS,IAAMxsJ,KAAKguJ,GAAmC,EAAAnjJ,IAAM,KACnOo7J,EAAwC/pE,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,qBAAsBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,qBAAuB,SACjJyZ,EAAmC,IAAIviD,GAAOvnB,GAAM,CAAE92E,MAAO,iCAAkCrQ,KAAM,QAAS1H,IAAK,IAAKuJ,IAAKxV,EAAOkb,iBAAiB3Z,OAAS,EAAGS,MAAO,IAAKo5F,KAAM,IAAKhiD,MAAO,gBAAkB16C,KAAK6yB,GAAM,CAACo1D,EAAkBjC,IAAqB,IAAIwJ,GAAyBxvF,KAAK6yB,EAAM08D,EAAetH,EAAUjC,KAAW,GAChVmgF,EAAmC5zI,GAAI,CAAE0B,MAAO,aAAegyI,EAAsBC,EAAyBlyI,UAChHzB,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,kCAAoCygJ,IACzEK,EAAwC7zI,GAAI,CAAE0B,MAAO,eAAiBkyI,GACtEr2C,EAAsBv9F,GAAI,CAAE0B,MAAO,aACrC2xI,EACAI,EACAzzI,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,mCAAqCugJ,GAC5EC,EAAgB9xI,WAEpBh0B,KAAKk1J,GAAejxJ,YAAY6rH,GAChC9vH,KAAKk5J,GAAcruJ,GAAKilH,EACxB9vH,KAAKm5J,GAA0BtuJ,GAAKi7J,EACpC9lK,KAAKo5J,GAA0BvuJ,GAAKg7J,EACpC7lK,KAAKq5J,GAAmBxuJ,GAAKm7J,EAC7BhmK,KAAKu5J,GAAuB1uJ,GAAKo7J,EACjCjmK,KAAKs5J,GAAyBzuJ,GAAKk7J,EACnC/lK,KAAKw5J,GAAmC3uJ,GAAKq7J,EAC7ClmK,KAAKy5J,GAAsB5uJ,GAAKs7J,EAChCnmK,KAAKk1J,GAAejxJ,YAAYmiK,GAChCpmK,KAAK05J,GAAwB7uJ,GAAKu7J,EAClCpmK,KAAKq6J,GAAuBxvJ,IAAK,EAEjCk7J,EAAe7hK,iBAAiB,UAAU,KACtClE,KAAK6yB,EAAKi/D,OAAO,IAAIxC,GAAuBtvF,KAAK6yB,EAAM08D,EAAew2E,EAAe72C,eAAe,IAGxG22C,EAAgB3hK,iBAAiB,UAAU,KACvClE,KAAK6yB,EAAKi/D,OAAO,IAAIrC,GAAwBzvF,KAAK6yB,EAAM08D,EAAes2E,EAAgB32C,eAAe,GAE7G,CAEDlvH,KAAK01J,GAAczxJ,YACfsuB,GAAI,CAAE0B,MAAO,aACTioE,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,oBAAsB,aAC3EvwD,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,oBAAsB,eAGnF,IAAK,IAAI5hJ,EAAYvJ,EAAOuY,UAAY,EAAGhP,GAAK,EAAGA,IAAK,CACpD,MAAMkhF,EAAoBlhF,EACpBw7J,EAAiC,IAAI31B,GAAe1wI,KAAK6yB,EAAMk5D,GACrEs6E,EAAeryI,UAAU9vB,iBAAiB,YAAalE,KAAK+4H,cAC5D/4H,KAAK25J,GAAwB9uJ,GAAKw7J,EAElC,MAAMz2C,EAAoCg4B,GAAatrD,GAAO,CAAEh3E,MAAO,eAAgBo1B,MAAO,oBAAsBp5C,EAAO4W,UAAUiC,KAAIsG,GAAYA,EAASjc,QAC9JxE,KAAK45J,GAAwB/uJ,GAAK+kH,EAClCA,EAAe1rH,iBAAiB,UAAU,KACtClE,KAAK6yB,EAAKi/D,OAAO,IAAIhG,GAAsB9rF,KAAK6yB,EAAMk5D,EAAW6jC,EAAeV,eAAe,IAGnG,MAAMY,EAAsBv9F,GAAI,CAAE0B,MAAO,aACrC1B,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,mCAAqCsqG,GAC5E5vH,KAAK25J,GAAwB9uJ,GAAGmpB,WAEpCh0B,KAAK01J,GAAczxJ,YAAY6rH,EAClC,CAED9vH,KAAKsmK,GAAe,GACpBtmK,KAAKi8J,GAAmB,GACxBj8J,KAAKm8J,GAAsB,GAC3Bn8J,KAAKumK,GAAc,GACnBvmK,KAAKq8J,GAAe,GACpBr8J,KAAKwmK,GAAiB,GACtBxmK,KAAKu+J,GAAkB,GACvBv+J,KAAKm+J,GAAuB,GAC5B,IAAK,IAAI54H,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAAO,CAEpD,IAAIkhI,EAAmCnqE,GAAO,CAAEh3E,MAAO,8DACnDohJ,EAAsCpqE,GAAO,CAAEh3E,MAAO,sCAEtDqhJ,EAA6Bp0I,GAAI,CAAE0B,MAAO,cAAe3O,MAAO,uCAChEiN,GAAI,CAAE0B,MAAO,MAAO3O,MAAO,gCAAiCmtG,GAAI,iBAAmBltF,EAAKinH,QAAS,IAAMxsJ,KAAKysJ,GAAY,eAAiB,OACzIl6H,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,eAAiBmhJ,GACxDl0I,GAAI,CAAE0B,MAAO,MAAO3O,MAAO,oCAAqCmtG,GAAI,oBAAsBltF,EAAKinH,QAAS,IAAMxsJ,KAAKysJ,GAAY,kBAAoB,QACnJl6H,GAAI,CAAE0B,MAAO,kBAAmB3O,MAAO,eAAiBohJ,IAGxDE,EAA+BtqE,KAC/BuqE,EAAkCvqE,KAClCwqE,EAA4Bv0I,GAAI,CAAE0B,MAAO,YAAaw+F,GAAI,iBAAmBltF,EAAKjgB,MAAO,8CAAgD42E,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,WAAa,aAAcvwD,GAAK,CAAEjoE,MAAO,MAAO3O,MAAO,qBAAsBknI,QAAS,IAAMxsJ,KAAKysJ,GAAY,aAAelnH,IAAQ,KAAMhT,GAAI,CAAE0B,MAAO,mBAAqB2yI,IAC1WG,EAA+Bx0I,GAAI,CAAE0B,MAAO,YAAaw+F,GAAI,gBAAkBltF,EAAKjgB,MAAO,8CAAgD42E,GAAK,CAAEjoE,MAAO,MAAOu4H,QAAS,IAAMxsJ,KAAKysJ,GAAY,YAAclnH,IAAQ,YAAahT,GAAI,CAAE0B,MAAO,mBAAqB4yI,IAGrQG,EAAwBjhJ,EAAIwN,IAAI,CAAEjO,MAAO,kCAAmC8N,MAAO,QAASC,OAAQ,MAAO8rE,QAAS,eAAiB,CACrIp5E,EAAI6N,KAAK,CAAEgzE,EAAG,sNACd7gF,EAAI6N,KAAK,CAAEgzE,EAAG,qGACd7gF,EAAI6N,KAAK,CAAEgzE,EAAG,yGACd7gF,EAAI6N,KAAK,CAAEgzE,EAAG,wGACd7gF,EAAI6N,KAAK,CAAEgzE,EAAG,+GAElB5mG,KAAKsmK,GAAav7J,KAAK47J,GACvB3mK,KAAKi8J,GAAiBlxJ,KAAK07J,GAC3BzmK,KAAKm8J,GAAoBpxJ,KAAK27J,GAC9B1mK,KAAKumK,GAAYx7J,KAAK+7J,GACtB9mK,KAAKq8J,GAAatxJ,KAAK67J,GACvB5mK,KAAKwmK,GAAez7J,KAAKg8J,GACzB/mK,KAAKu+J,GAAgBxzJ,KAAK87J,GAC1B7mK,KAAKm+J,GAAqBpzJ,KAAKi8J,GAE/BhnK,KAAK21J,GAAgB1xJ,YAAYsuB,GAAI,CAAEjN,MAAO,sFAAwFwB,GAAYiJ,cAAgB,iBAAmBjJ,GAAYuJ,mBAAqB,KAAO,CAAC,cAAgBkV,EAAM,GAAIyhI,KACxPhnK,KAAK21J,GAAgB1xJ,YAAY0iK,GACjC3mK,KAAK21J,GAAgB1xJ,YAAY6iK,GACjC9mK,KAAK21J,GAAgB1xJ,YAAY8iK,EAEpC,CAGD/mK,KAAK8xJ,GAAkB99H,UAAU1O,MAAMC,YAAY,YAAa,uBAChEvlB,KAAK8xJ,GAAkB99H,UAAU1O,MAAMC,YAAY,QAAS,QAE5DvlB,KAAK8rJ,GAAU5nJ,iBAAiB,SAAUlE,KAAKklK,IAC/CllK,KAAK+rJ,GAAU7nJ,iBAAiB,SAAUlE,KAAKolK,IAC/CplK,KAAKgsJ,GAAa9nJ,iBAAiB,SAAUlE,KAAKqlK,IAClDrlK,KAAKw2J,GAAsBtyJ,iBAAiB,SAAUlE,KAAKulK,IAC3DvlK,KAAKqsJ,GAAcnoJ,iBAAiB,SAAUlE,KAAK+hK,IACnD/hK,KAAKisJ,GAAa/nJ,iBAAiB,SAAUlE,KAAKiiK,IAClDjiK,KAAKksJ,GAAWhoJ,iBAAiB,SAAUlE,KAAKmiK,IAChDniK,KAAKmsJ,GAAejoJ,iBAAiB,SAAUlE,KAAKgiK,IACpDhiK,KAAKgtJ,GAAc9oJ,iBAAiB,SAAUlE,KAAKoiK,IAGnDpiK,KAAKmtJ,GAAiBjpJ,iBAAiB,SAAUlE,KAAK4iK,IACtD5iK,KAAKwtJ,GAAsBtpJ,iBAAiB,QAASlE,KAAK+iK,IAE1D/iK,KAAKm1J,GAAoBjxJ,iBAAiB,SAAUlE,KAAK2iK,IACzD3iK,KAAKi2J,GAAoB/xJ,iBAAiB,SAAUlE,KAAK8iK,IACzD9iK,KAAK41J,GAAuB1xJ,iBAAiB,SAAUlE,KAAK6iK,IAC5D7iK,KAAKuuJ,GAAgBrqJ,iBAAiB,SAAUlE,KAAKgkK,IAEjDhkK,KAAKyuJ,GAAoCvqJ,iBAAiB,QAASlE,KAAKikK,IACxEjkK,KAAK0uJ,GAAwBxqJ,iBAAiB,SAAUlE,KAAKkkK,IAC7DlkK,KAAK2uJ,GAA0BzqJ,iBAAiB,SAAUlE,KAAKmkK,IAC/DnkK,KAAK4uJ,GAAwB1qJ,iBAAiB,SAAUlE,KAAKokK,IAC7DpkK,KAAK6uJ,GAA+B3qJ,iBAAiB,QAASlE,KAAKqkK,IACnErkK,KAAK8uJ,GAA4B5qJ,iBAAiB,SAAUlE,KAAKskK,IACjEtkK,KAAK+uJ,GAA0B7qJ,iBAAiB,QAASlE,KAAKukK,IAElEvkK,KAAKk4J,GAA8Bh0J,iBAAiB,QAASlE,KAAKy6J,IACrEz6J,KAAKwuJ,GAAiBtqJ,iBAAiB,SAAUlE,KAAKwkK,IACnDxkK,KAAK2vJ,GAAkBzrJ,iBAAiB,SAAUlE,KAAKykK,IACvDzkK,KAAKiwJ,GAAe/rJ,iBAAiB,SAAUlE,KAAK0kK,IACpD1kK,KAAKizJ,GAAc/uJ,iBAAiB,SAAUlE,KAAK6kK,IACnD7kK,KAAK8zJ,GAAa5vJ,iBAAiB,SAAUlE,KAAK8kK,IAClD9kK,KAAKs0J,GAAepwJ,iBAAiB,SAAUlE,KAAK2kK,IACpD3kK,KAAK+0J,GAAmB7wJ,iBAAiB,SAAUlE,KAAK4kK,IACxD5kK,KAAKygG,GAAYv8F,iBAAiB,QAASlE,KAAK2gG,YAChD3gG,KAAKqrJ,GAAannJ,iBAAiB,QAASlE,KAAK2gG,YACjD3gG,KAAKsrJ,GAAcpnJ,iBAAiB,QAASlE,KAAK6/J,IAClD7/J,KAAKurJ,GAAYrnJ,iBAAiB,QAASlE,KAAK6/J,IAEhD7/J,KAAKsrJ,GAAcpnJ,iBAAiB,eAAgBC,IAC5CA,EAAMg+H,UACNh+H,EAAMgxB,iBACNn1B,KAAK6/J,KACR,IAEL7/J,KAAKurJ,GAAYrnJ,iBAAiB,eAAgBC,IAC1CA,EAAMg+H,UACNh+H,EAAMgxB,iBACNn1B,KAAK6/J,KACR,IAEL7/J,KAAKwrJ,GAAetnJ,iBAAiB,QAASlE,KAAKwhK,IACnDxhK,KAAKyrJ,GAAevnJ,iBAAiB,QAASlE,KAAKyhK,IACnDzhK,KAAK0rJ,GAActvD,MAAMl4F,iBAAiB,QAASlE,KAAK6hK,IACxD7hK,KAAKk8I,GAAch4I,iBAAiB,QAASlE,KAAKglK,IAClDhlK,KAAKm8I,GAAej4I,iBAAiB,QAASlE,KAAKilK,IACnDjlK,KAAK23J,GAAazzJ,iBAAiB,YAAalE,KAAK26J,IACrD36J,KAAK83J,GAAW5zJ,iBAAiB,YAAalE,KAAK+4H,cAGnD/4H,KAAK0rJ,GAAc13H,UAAU1O,MAAMC,YAAY,YAAa,KAC5DvlB,KAAK0rJ,GAAc13H,UAAU1O,MAAMC,YAAY,UAAW,QAE1DvlB,KAAK4rJ,GAAoBtmI,MAAMC,YAAY,YAAa,KACxDvlB,KAAK4rJ,GAAoBtmI,MAAMC,YAAY,UAAW,QAGtDvlB,KAAK0rJ,GAAc13H,UAAU1O,MAAMC,YAAY,cAAeuB,GAAY0K,yBAC1ExxB,KAAK0rJ,GAAc13H,UAAU1O,MAAMC,YAAY,sBAAuB,OACtEvlB,KAAK0tJ,GAAwB15H,UAAU1O,MAAMC,YAAY,cAAeuB,GAAY0K,yBACpFxxB,KAAK0tJ,GAAwB15H,UAAU1O,MAAMC,YAAY,sBAAuB,OAChFvlB,KAAK82J,GAAyB9iI,UAAU1O,MAAMC,YAAY,cAAeuB,GAAY0K,yBACrFxxB,KAAK82J,GAAyB9iI,UAAU1O,MAAMC,YAAY,sBAAuB,OACjF,IAAK,IAAI1a,EAAY,EAAGA,EAAIvJ,EAAO+V,cAAc,EAAGxM,IAChD7K,KAAKm5J,GAA0BtuJ,GAAGmpB,UAAU1O,MAAMC,YAAY,cAAeuB,GAAY0K,yBACzFxxB,KAAKm5J,GAA0BtuJ,GAAGmpB,UAAU1O,MAAMC,YAAY,sBAAuB,OAGzF,IAAI0hJ,EAAsBjnK,KAC1B,IAAK,IAAIulC,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IAC7CvlC,KAAKi8J,GAAiB12H,GAAKrhC,iBAAiB,UAAU,WAAc+iK,EAAQhE,GAAmB19H,EAAK,IACpGvlC,KAAKm8J,GAAoB52H,GAAKrhC,iBAAiB,UAAU,WAAc+iK,EAAQ5D,GAAsB99H,EAAK,IAC1GvlC,KAAKq8J,GAAa92H,GAAKrhC,iBAAiB,UAAU,WAAc+iK,EAAQ/I,GAAmB34H,EAAK,IAChGvlC,KAAKu+J,GAAgBh5H,GAAKrhC,iBAAiB,UAAU,WAAc+iK,EAAQnD,GAAkBv+H,EAAK,IAClGvlC,KAAKm+J,GAAqB54H,GAAKrhC,iBAAiB,SAAS,WAAc+iK,EAAQxD,GAAoBl+H,EAAK,IA6C5G,GA1CAvlC,KAAKw3J,GAAoBtzJ,iBAAiB,SAAS,WAAc+iK,EAAQvD,IAA2B,IAEpG1jK,KAAK23J,GAAazzJ,iBAAiB,YAAalE,KAAK+4H,cACrD/4H,KAAKyvJ,GAAiBz7H,UAAU9vB,iBAAiB,YAAalE,KAAK+4H,cACnE/4H,KAAKq1J,GAAgBrhI,UAAU9vB,iBAAiB,YAAalE,KAAK+4H,cAClE/4H,KAAKswJ,GAAgBt8H,UAAU9vB,iBAAiB,YAAalE,KAAK+4H,cAClE/4H,KAAKixJ,GAAkBj9H,UAAU9vB,iBAAiB,YAAalE,KAAK+4H,cACpE/4H,KAAKu1J,GAAiBvhI,UAAU9vB,iBAAiB,YAAalE,KAAK+4H,cACnE/4H,KAAKqsJ,GAAcnoJ,iBAAiB,UAAWlE,KAAK2/J,IAAgC,GACpF3/J,KAAKg3J,GAAmB9yJ,iBAAiB,QAASlE,KAAK+kK,IACvD/kK,KAAK23J,GAAazzJ,iBAAiB,cAAelE,KAAK0/J,IACvD1/J,KAAK83J,GAAW5zJ,iBAAiB,cAAelE,KAAK0/J,IACrD1/J,KAAKs4J,UAAUp0J,iBAAiB,UAAWlE,KAAKo9F,IAChDp9F,KAAKs4J,UAAUp0J,iBAAiB,QAASlE,KAAKuhK,IAC9CvhK,KAAKs4J,UAAUp0J,iBAAiB,UAAWlE,KAAK06J,IAChD16J,KAAKm2J,GAAsBjyJ,iBAAiB,QAASlE,KAAKkgK,GAAgBgH,KAAKlnK,OAC/EA,KAAKo2J,GAAuBlyJ,iBAAiB,QAASlE,KAAK8gK,GAAiBoG,KAAKlnK,OAEjFU,EAAiBwD,iBAAiB,eAAgBlE,KAAKmnK,GAAwBD,KAAKlnK,OAEpFA,KAAK2tJ,GAAgCzpJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAIyI,GAAav6F,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwB/jE,OAAQxW,KAAKoC,IAAI,GAAMpC,KAAK2L,KAAK,GAAM3L,KAAKe,OAAOlM,KAAK2tJ,GAAgCrqJ,UAAU,IAC/StD,KAAKiuJ,GAAmB/pJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAI6I,GAAU36F,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBljE,IAAKrX,KAAKoC,IAAI,IAAOpC,KAAK2L,IAAI,EAAK3L,KAAKe,OAAOlM,KAAKiuJ,GAAmB3qJ,UAAU,IAC9QtD,KAAKoyJ,GAAsBluJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAIzF,GAAarsF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBp3C,OAAQnjC,KAAKoC,IAAIjM,EAAOiZ,UAAYjZ,EAAOgZ,aAAcnP,KAAK2L,IAAIxV,EAAOkZ,UAAYlZ,EAAOgZ,aAAcnP,KAAKe,OAAOlM,KAAKoyJ,GAAsB9uJ,UAAU,IAE9VtD,KAAKmzJ,GAAsBjvJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAIlH,GAAmB5qF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBn3C,aAAcpjC,KAAKoC,IAAI,EAAKpC,KAAK2L,IAAI,EAAK3L,KAAKe,OAAOlM,KAAKmzJ,GAAsB7vJ,UAAU,IACpStD,KAAKqzJ,GAAsBnvJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAIhH,GAAmB9qF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBl3C,aAAcrjC,KAAKoC,IAAI,GAAMpC,KAAK2L,KAAK,IAAO9W,KAAKqzJ,GAAsB/vJ,SAAS,IAC3RtD,KAAKuzJ,GAAsBrvJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAI/G,GAAmB/qF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBj3C,aAActjC,KAAKoC,IAAI,GAAMpC,KAAK2L,KAAK,IAAO9W,KAAKuzJ,GAAsBjwJ,SAAS,IAC3RtD,KAAKyzJ,GAA0BvvJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAI9G,GAAuBhrF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwBh3C,iBAAkBvjC,KAAKoC,IAAI,EAAKpC,KAAK2L,KAAK,GAAM9W,KAAKyzJ,GAA0BnwJ,SAAS,IACzStD,KAAK2zJ,GAAoBzvJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAI7G,GAAiBjrF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAAwB/2C,WAAYxjC,KAAKoC,IAAI,EAAKpC,KAAK2L,KAAK,GAAM9W,KAAK2zJ,GAAoBrwJ,SAAS,IAEjRtD,KAAK42J,GAAgB1yJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAItM,GAAiBxlF,KAAK6yB,EAAM7yB,KAAKu2J,GAAsBtjJ,UAAU,IAC7IjT,KAAKm0J,GAAejwJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAIrG,GAAqBzrF,KAAK6yB,EAAM7yB,KAAKm0J,GAAe71D,SAAS,IACxIt+F,KAAK8vJ,GAAwB5rJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAIpG,GAA0B1rF,KAAK6yB,EAAM7yB,KAAK8vJ,GAAwBxxD,SAAS,IAC/Jt+F,KAAKwyJ,GAAatuJ,iBAAiB,SAAS,KAAQlE,KAAK6yB,EAAKi/D,OAAO,IAAInG,GAAe3rF,KAAK6yB,EAAM7yB,KAAKwyJ,GAAal0D,SAAS,IAE9Ht+F,KAAKy3J,GAAiBvzJ,iBAAiB,SAAUC,IAC1B,MAAfnE,KAAKu9F,SAA6C,IAA3Bv9F,KAAKu9F,OAAO49C,YACnCh3I,EAAMqc,QAAUxgB,KAAKy3J,IACrBz3J,KAAK6yB,EAAKsuD,MACb,IAGD9jE,EAAU,CACV,MAAM+pJ,EAAuDpnK,KAAKgsJ,GAAar+H,cAAc,oBAC7Fy5I,EAAehsD,UAAW,EAC1BgsD,EAAetiJ,aAAa,SAAU,GACzC,CAGD,GAAI+/B,OAAOwiH,OAAOC,WAAa,IAA4C,CACvE,MAAMC,EAAqDvnK,KAAKgsJ,GAAar+H,cAAc,kBAC3F45I,EAAansD,UAAW,EACxBmsD,EAAaziJ,aAAa,SAAU,GACvC,C,CAOG,EAAAqiJ,CAAwBtiJ,GAE5B,MAAM0c,EAA0C1c,EAC1C2iJ,EACiB,IAAnBjmI,EAAEphC,aACA,EACAgL,KAAK0hB,MAAO0U,EAAEnhC,cAAgBmhC,EAAEphC,aAAgB,KAEtDH,KAAKg4J,GAAkB1yI,MAAM8N,MAAQ,GAAGo0I,I,CAGpC,EAAAzR,CAAuBx0H,GACa,YAApCvhC,KAAKg2J,GAAuBlwE,MAC5B9lF,KAAKg2J,GAAuBlwE,KAAO,WAClCvkD,EAAE/gB,OAAmBiN,YAAc,IACpCztB,KAAK81J,GAAuBxyJ,MAAQ,aAEpCtD,KAAKg2J,GAAuBlwE,KAAO,YAClCvkD,EAAE/gB,OAAmBiN,YAAc,KAExCztB,KAAKg2J,GAAuB1M,c,CAGxB,EAAA0E,CAAoByZ,EAAsBC,EAAkB,GAChE,IAAIlnJ,EAA4BxgB,KAAKu0J,GACjCl2D,EAAqBr+F,KAAKi1J,GAC9B,OAAQwS,GACJ,OACIjnJ,EAASxgB,KAAKu0J,GACdv0J,KAAKk6J,IAAuBl6J,KAAKk6J,GACjC77D,EAAQr+F,KAAKi1J,GACb,MACJ,OACIz0I,EAASxgB,KAAK+tJ,GACd/tJ,KAAKi6J,IAAmBj6J,KAAKi6J,GAC7B57D,EAAQr+F,KAAKsuJ,GACb,MACJ,OACI9tI,EAASxgB,KAAK+zJ,GACd/zJ,KAAKm6J,IAAqBn6J,KAAKm6J,GAC/B97D,EAAQr+F,KAAKq0J,GACb,MACJ,OACI7zI,EAASxgB,KAAK4vJ,GACd5vJ,KAAKo6J,IAA0Bp6J,KAAKo6J,GACpC/7D,EAAQr+F,KAAKgwJ,GACb,MACJ,OACIxvI,EAASxgB,KAAKq5J,GAAmBqO,GACjC1nK,KAAKq6J,GAAuBqN,IAAW1nK,KAAKq6J,GAAuBqN,GACnErpE,EAAQr+F,KAAK05J,GAAwBgO,GACrC,MACJ,OACIlnJ,EAASxgB,KAAKyxJ,GACdzxJ,KAAKs6J,IAA0Bt6J,KAAKs6J,GACpCj8D,EAAQr+F,KAAK6xJ,GACb,MACJ,OACIrxI,EAASxgB,KAAKgzJ,GACdhzJ,KAAKu6J,IAAsBv6J,KAAKu6J,GAChCl8D,EAAQr+F,KAAK6zJ,GAIrB,GAA0B,KAAtBrzI,EAAOiN,YAAoB,CAC3B,IAAI7O,EAAyB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYhlC,KAAK6yB,EAAK6yD,wBAC9FllE,EAAOiN,YAAc,KACjB4wE,GAASr+F,KAAKq0J,IAGTz1I,EAAWc,OAASpe,EAAOyV,OAAO/R,WAAqB,SAAEF,SAF9Du5F,EAAM/4E,MAAMq/E,QAAU,GAM7B,MAEGnkF,EAAOiN,YAAc,IACrB4wE,EAAM/4E,MAAMq/E,QAAU,M,CAItB,EAAAg9D,GAEJ,GAAK3hK,KAAK6yB,EAAK6B,MAAMyxC,QAgBhB,CAED,IAAIvnD,EAAqB5e,KAAK6yB,EAAK6yD,uBACnC,MAAMiiF,EAAwB3nK,KAAK6yB,EAAK6B,MAAMy3C,eAAensE,KAAK6yB,EAAK1L,QAASvI,GAGhF,GAAI+oJ,EAAc,CAEd,IAAI/oJ,EAAqB5e,KAAK6yB,EAAK6yD,uBAEnC,SAASkiF,EAAgBC,EAAoBC,EAAgB77F,EAAiB9kD,EAAiBvI,GAC3F,GAAIipJ,EAAOh1I,EAAK6B,MAAMwpC,YAAY+N,EAAS9kD,EAASvI,GAAa,CAC7D,IAAImpJ,GAAsBF,EAAOh1I,EAAK6B,MAAMypC,YAAY8N,EAAS9kD,EAASvI,GAAY,GAAStd,EAAOob,WAAWuvD,GAASlvD,mBAAqBzb,EAAOob,WAAWuvD,GAASrvD,UAK1K,OAJImrJ,GAAcF,EAAO9N,GAAiB9tF,KACtC47F,EAAO9N,GAAiB9tF,GAAW87F,EACnCD,EAAO9zI,UAAU1O,MAAMC,YAAY,iBAAgC,GAAbwiJ,EAAoB,EAAO,OAE9E,CACV,CACD,OAAO,C,CAIX,IAAK,IAAI97F,EAAkB,EAAGA,EAAU3qE,EAAOob,WAAW7Z,OAAQopE,IAAW,CAEzEjsE,KAAK85J,GAAmB7tF,GAAWjsE,KAAK65J,GAAgB5tF,GAGxD,IAAI67F,EAAwB9nK,KAAKgoK,GAAwB/7F,GAC3C,MAAV67F,IACA9nK,KAAK85J,GAAmB7tF,GAAW27F,EAAgB5nK,KAAM8nK,EAAQ77F,EAASjsE,KAAK6yB,EAAK1L,QAASvI,GAEpG,CAEJ,MACI,GAAI5e,KAAKg6J,GAEV,IAAK,IAAI/tF,EAAkB,EAAGA,EAAU3qE,EAAOob,WAAW7Z,OAAQopE,IAC9DjsE,KAAK85J,GAAmB7tF,IAAW,EAK3C,GAAI07F,GAAgB3nK,KAAKg6J,GAAsB,CAE3C,IAAIiO,GAA2B,EAE/B,IAAK,IAAIh8F,EAAkB,EAAGA,EAAU3qE,EAAOob,WAAW7Z,OAAQopE,IAAW,CACzE,GAAIjsE,KAAK85J,GAAmB7tF,IAAYjsE,KAAK65J,GAAgB5tF,GAAU,CACnEjsE,KAAK65J,GAAgB5tF,GAAWjsE,KAAK85J,GAAmB7tF,GACxD,IAAI67F,EAAwB9nK,KAAKgoK,GAAwB/7F,GAE3C,MAAV67F,IAEqC,GAAjC9nK,KAAK65J,GAAgB5tF,GACrB67F,EAAO9zI,UAAUvB,UAAUC,IAAI,aAG/Bo1I,EAAO9zI,UAAUvB,UAAUyI,OAAO,aAI7C,CAEuC,GAApCl7B,KAAK85J,GAAmB7tF,KACxBg8F,GAAkB,EACzB,CAEDjoK,KAAKg6J,GAAuBiO,CAE/B,CAEJ,KAxF6B,CAC1BjoK,KAAKg6J,IAAuB,EAE5B,IAAK,IAAI/tF,EAAkB,EAAGA,EAAU3qE,EAAOob,WAAW7Z,OAAQopE,IAC9D,GAAqC,GAAjCjsE,KAAK65J,GAAgB5tF,GAAkB,CACvCjsE,KAAK65J,GAAgB5tF,IAAW,EAChCjsE,KAAK85J,GAAmB7tF,IAAW,EACnC,IAAI67F,EAAwB9nK,KAAKgoK,GAAwB/7F,GAE3C,MAAV67F,GACAA,EAAO9zI,UAAUvB,UAAUyI,OAAO,YAGzC,CAER,C,CA6EG,EAAA8sI,CAAwB/7F,GAC5B,OAAQA,GACJ,KAAK3qE,EAAOob,WAAW1X,WAAgB,IAAEF,MACrC,OAAO9E,KAAK8tJ,GAChB,KAAKxsJ,EAAOob,WAAW1X,WAAmB,OAAEF,MACxC,OAAO9E,KAAKmyJ,GAChB,KAAK7wJ,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAKm5J,GAA0B,GAC1C,KAAK73J,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAKm5J,GAA0B,GAC1C,KAAK73J,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAKm5J,GAA0B,GAC1C,KAAK73J,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAKm5J,GAA0B,GAC1C,KAAK73J,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAK82J,GAChB,KAAKx1J,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAKwxJ,GAChB,KAAKlwJ,EAAOob,WAAW1X,WAAW,kBAAkBF,MAChD,OAAO9E,KAAK2xJ,GAChB,KAAKrwJ,EAAOob,WAAW1X,WAAmB,OAAEF,MACxC,OAAO9E,KAAK0sJ,GAChB,KAAKprJ,EAAOob,WAAW1X,WAAuB,WAAEF,MAC5C,OAAO9E,KAAKsyJ,GAChB,KAAKhxJ,EAAOob,WAAW1X,WAAW,eAAeF,MAG7C,OAAK9E,KAAK65J,GAAgBv4J,EAAOob,WAAW1X,WAAW,cAAcF,OAE9D,KADI9E,KAAK0tJ,GAEpB,KAAKpsJ,EAAOob,WAAW1X,WAAW,cAAcF,MAC5C,OAAO9E,KAAK0tJ,GAChB,KAAKpsJ,EAAOob,WAAW1X,WAAW,iBAAiBF,MAC/C,OAAO9E,KAAKy0J,GAChB,KAAKnzJ,EAAOob,WAAW1X,WAAW,iBAAiBF,MAC/C,OAAO9E,KAAK20J,GAChB,KAAKrzJ,EAAOob,WAAW1X,WAAW,iBAAiBF,MAC/C,OAAO9E,KAAK60J,GAChB,KAAKvzJ,EAAOob,WAAW1X,WAAW,aAAaF,MAC3C,OAAO9E,KAAKi0J,GAChB,KAAK3yJ,EAAOob,WAAW1X,WAAW,aAAaF,MAC3C,OAAO9E,KAAKouJ,GAChB,KAAK9sJ,EAAOob,WAAW1X,WAAkB,MAAEF,MACvC,OAAO9E,KAAKosJ,GAChB,KAAK9qJ,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAK0rJ,GAChB,KAAKpqJ,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAKywJ,GAChB,KAAKnvJ,EAAOob,WAAW1X,WAAW,gBAAgBF,MAC9C,OAAO9E,KAAK2wJ,GAChB,KAAKrvJ,EAAOob,WAAW1X,WAAW,iBAAiBF,MAC/C,OAAO9E,KAAKoxJ,GAChB,KAAK9vJ,EAAOob,WAAW1X,WAAW,kBAAkBF,MAChD,OAAO9E,KAAKsxJ,GAChB,KAAKhwJ,EAAOob,WAAW1X,WAAW,aAAaF,MAC3C,OAAO9E,KAAK0yJ,GAChB,KAAKpxJ,EAAOob,WAAW1X,WAAW,cAAcF,MAC5C,OAAO9E,KAAK4yJ,GAChB,KAAKtxJ,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAK8xJ,GAChB,KAAKxwJ,EAAOob,WAAW1X,WAAmB,OAAEF,MACxC,OAAO9E,KAAKssJ,GAChB,KAAKhrJ,EAAOob,WAAW1X,WAAiB,KAAEF,MACtC,OAAO9E,KAAK4sJ,GAChB,KAAKtrJ,EAAOob,WAAW1X,WAAW,cAAcF,MAC5C,OAAO9E,KAAK8sJ,GAChB,KAAKxrJ,EAAOob,WAAW1X,WAAoB,QAAEF,MACzC,OAAO9E,KAAK8yJ,GAChB,KAAKxxJ,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAKm5J,GAA0B,GAC1C,KAAK73J,EAAOob,WAAW1X,WAAW,eAAeF,MAC7C,OAAO9E,KAAKm5J,GAA0B,GAC1C,QACI,OAAO,K,CAKX,EAAA1M,CAAYxvI,GAChBjd,KAAK6yB,EAAKq1I,WAAWjrJ,GACrBjd,KAAKi/J,GAAWhiJ,E,CAGZ,EAAAgiJ,CAAWhiJ,GACf,GAAIjd,KAAKy4J,IAAsBx7I,IAC/Bjd,KAAKy4J,GAAqBx7I,EAEtBjd,KAAKu9F,SACDv9F,KAAKw4J,MAAiBx4J,KAAKu9F,kBAAkB00C,IAAajyI,KAAKu9F,kBAAkBs2B,IAAiB7zH,KAAKu9F,kBAAkB43B,IAAqBn1H,KAAKu9F,kBAAkB+C,IAAoBtgG,KAAKu9F,kBAAkB6I,IAAsBpmG,KAAKu9F,kBAAkB47C,KAC7Pn5I,KAAK6yB,EAAKw3C,YAAYqB,OAE1B1rE,KAAKw4J,IAAc,EACnBx4J,KAAKy3J,GAAiBnyI,MAAMq/E,QAAU,OACtC3kG,KAAKy3J,GAAiB9kI,YAAY3yB,KAAKu9F,OAAOvpE,WAC9Ch0B,KAAKu9F,OAAOR,UACZ/8F,KAAKu9F,OAAS,KACdv9F,KAAK+4H,gBAGL97G,GAAY,CACZ,OAAQA,GACJ,IAAK,SACDjd,KAAKu9F,OAAS,IAAIwc,GAAa/5G,KAAK6yB,GACpC,MACJ,IAAK,SACD7yB,KAAKu9F,OAAS,IAAIwnB,GAAa/kH,KAAK6yB,GACpC,MACJ,IAAK,eACD7yB,KAAKu9F,OAAS,IAAIsxC,GAAmB7uI,KAAK6yB,GAC1C,MACJ,IAAK,WACD7yB,KAAKu9F,OAAS,IAAI6uC,GAAmBpsI,KAAK6yB,GAC1C,MACJ,IAAK,cACD7yB,KAAKu9F,OAAS,IAAIf,GAAkBx8F,KAAK6yB,GACzC,MACJ,IAAK,oBACD7yB,KAAKu9F,OAAS,IAAI65B,GAAwBp3H,KAAK6yB,GAC/C,MACJ,IAAK,kBACD7yB,KAAKu9F,OAAS,IAAIO,GAAsB99F,KAAK6yB,GAC7C,MACJ,IAAK,kBACD7yB,KAAKu9F,OAAS,IAAIs2B,GAAc7zH,KAAK6yB,EAAM7yB,MAC3C,MACJ,IAAK,cACDA,KAAKu9F,OAAS,IAAI43B,GAAkBn1H,KAAK6yB,GACzC,MACJ,IAAK,qBACD7yB,KAAKu9F,OAAS,IAAI+C,GAAiBtgG,KAAK6yB,EAAM7yB,MAC9C,MACJ,IAAK,yBACDA,KAAKu9F,OAAS,IAAI6I,GAAmBpmG,KAAK6yB,EAAM7yB,MAAM,GACtD,MACJ,IAAK,2BACDA,KAAKu9F,OAAS,IAAI6I,GAAmBpmG,KAAK6yB,EAAM7yB,MAAM,GACtD,MACJ,IAAK,QACDA,KAAKu9F,OAAS,IAAIq0C,GAAY5xI,KAAK6yB,GACnC,MACJ,IAAK,SACD7yB,KAAKu9F,OAAS,IAAI0wB,GAAajuH,KAAK6yB,GACpC,MACJ,IAAK,iBACD7yB,KAAKu9F,OAAS,IAAI4xC,GAAqBnvI,KAAK6yB,GAC5C,MAClB,IAAK,cACiB7yB,KAAKu9F,OAAS,IAAIokD,GAAiB3hJ,KAAK6yB,GACxC,MACtB,IAAK,0BACiB7yB,KAAKu9F,OAAS,IAAI+K,GAAsBtoG,KAAK6yB,GAC7C,MACtB,IAAK,SACiB7yB,KAAKu9F,OAAS,IAAIuzC,GAAa9wI,KAAK6yB,EAAM7yB,KAAK+qJ,GAAgB/qJ,KAAK83J,GAAYj0J,SAASytI,eAAe,2BACxG,MACR,IAAK,qBACDtxI,KAAKu9F,OAAS,IAAI47C,GAAyBn5I,KAAK6yB,EAAM7yB,MACtD,MACJ,IAAK,sBACDA,KAAKu9F,OAAS,IAAI+iD,GAA0BtgJ,KAAK6yB,GACjD,MACJ,QACI7yB,KAAKu9F,OAAS,IAAI00C,GAAUjyI,KAAK6yB,EAAM5V,GAI3Cjd,KAAKu9F,SACCv9F,KAAKu9F,kBAAkB00C,IAAajyI,KAAKu9F,kBAAkBs2B,IAAiB7zH,KAAKu9F,kBAAkB+C,IAAoBtgG,KAAKu9F,kBAAkB6I,IAAsBpmG,KAAKu9F,kBAAkB47C,KAC7Ln5I,KAAKw4J,GAAcx4J,KAAK6yB,EAAK6B,MAAMyxC,QACnCnmE,KAAK6yB,EAAKw3C,YAAYsB,SAE1B3rE,KAAKy3J,GAAiBnyI,MAAMq/E,QAAU,GACtC3kG,KAAKy3J,GAAiBxzJ,YAAYjE,KAAKu9F,OAAOvpE,WAErD,C,CAqBE,kBAAAyhH,CAAmB//H,GACtB1V,KAAKw0I,GAAcj+G,UAAU7gB,E,CAmrCzB,EAAAkpJ,CAAqBz3I,EAAkB80B,EAAyBurD,GACpE,GAAIxnG,KAAK6yB,EAAK9F,KAAKitB,oBAAsBh6C,KAAK6yB,EAAK9F,KAAKqZ,mBAAoB,CACxEpmC,KAAKytJ,GAAsBnoI,MAAMq/E,QAAU,GAC3C3kG,KAAKwtJ,GAAsBloI,MAAMC,YAAY,mBAAoBiiF,EAAOr/E,aACxEnoB,KAAKwtJ,GAAsBloI,MAAMC,YAAY,mBAAoBiiF,EAAOt/E,eACxEloB,KAAKwtJ,GAAsBloI,MAAMC,YAAY,yBAA0BiiF,EAAOv/E,gBAC9EjoB,KAAKwtJ,GAAsBloI,MAAMC,YAAY,yBAA0BiiF,EAAOz/E,kBAE9E,MAAMogJ,EAA2BnoK,KAAK6yB,EAAK9F,KAAKgtB,8BAChD,KAAO/5C,KAAKqtJ,GAAmBxqJ,OAASskB,EAAQ6d,YAAYniC,QAAQ,CAChE,MAAMulK,EAAsCnsE,GAAO/kE,OAAOl3B,KAAKqtJ,GAAmBxqJ,OAAS,IAC3F7C,KAAKqtJ,GAAmBtiJ,KAAKq9J,GAC7BpoK,KAAKwtJ,GAAsB/lD,aAAa2gE,EAAkBpoK,KAAKutJ,GAClE,CACD,IAAK,IAAI1iJ,EAAY7K,KAAK24J,GAA0B9tJ,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IAChF7K,KAAKqtJ,GAAmBxiJ,GAAGya,MAAMq/E,QAAU,GAE/C,IAAK,IAAI95F,EAAYsc,EAAQ6d,YAAYniC,OAAQgI,EAAI7K,KAAK24J,GAA0B9tJ,IAChF7K,KAAKqtJ,GAAmBxiJ,GAAGya,MAAMq/E,QAAU,OAG/C,IADA3kG,KAAK24J,GAA2BxxI,EAAQ6d,YAAYniC,OAC7C7C,KAAKqtJ,GAAmBxqJ,OAASslK,GACpCnoK,KAAKwtJ,GAAsB76H,YAAY3yB,KAAKqtJ,GAAmBzxH,OAUnE,GAPA57B,KAAKutJ,GAAwBjoI,MAAMq/E,QAAWx9E,EAAQ6d,YAAYniC,OAASvB,EAAOqQ,mBAAsB,GAAK,OAC7G3R,KAAKstJ,GAAqBhoI,MAAMq/E,QAAWx9E,EAAQ6d,YAAYniC,OAASslK,EAA4B,GAAK,OACrGhhJ,EAAQ6d,YAAYniC,OAASslK,EAC7BnoK,KAAKutJ,GAAwB96H,UAAUyI,OAAO,eAE9Cl7B,KAAKutJ,GAAwB96H,UAAUC,IAAI,eAE3CvL,EAAQ6d,YAAYniC,OAAS,GAC7B,GAAI7C,KAAK04J,IAA+Bz8G,EAAiB,CACrD,MAAM03D,EAA+B3zG,KAAKqtJ,GAAmBrtJ,KAAK04J,IACjD,MAAb/kD,GAAmBA,EAAUlhF,UAAUyI,OAAO,uBACbl7B,KAAKqtJ,GAAmBpxG,GACnDxpB,UAAUC,IAAI,uBACxB1yB,KAAK04J,GAA8Bz8G,CACtC,MACE,CACH,MAAM03D,EAA+B3zG,KAAKqtJ,GAAmBrtJ,KAAK04J,IACjD,MAAb/kD,GAAmBA,EAAUlhF,UAAUyI,OAAO,uBAClDl7B,KAAK04J,IAA+B,CACvC,CAED,GAAI14J,KAAK6yB,EAAK9F,KAAKitB,oBAAsBh6C,KAAK6yB,EAAK9F,KAAKqZ,oBAAuBpmC,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoB,CAErK,IAAK,IAAIriB,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,KACqB,GAArE7K,KAAK6yB,EAAK8/D,yBAAyB3yF,KAAK6yB,EAAK1L,SAAS8U,QAAQpxB,GAC9D7K,KAAKqtJ,GAAmBxiJ,GAAG4nB,UAAUyI,OAAO,eAE5Cl7B,KAAKqtJ,GAAmBxiJ,GAAG4nB,UAAUC,IAAI,eAGjD1yB,KAAKi5J,IAA0B,CAClC,MAAM,GAAIj5J,KAAKi5J,IAA4Bj5J,KAAK6yB,EAAK1L,SAAWnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoB,CACnI,IAAK,IAAIriB,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IAEpD7K,KAAKqtJ,GAAmBxiJ,GAAG4nB,UAAUyI,OAAO,eAEhDl7B,KAAKi5J,IAA0B,CAClC,CAED,GAAKj5J,KAAK6yB,EAAK9F,KAAKitB,oBAAsBh6C,KAAK6yB,EAAK9F,KAAKqZ,oBAAuBjf,EAAQ6d,YAAYniC,OAAS,GAAM7C,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBACrL,IAAK,IAAIriB,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IACpD7K,KAAKqtJ,GAAmBxiJ,GAAG4nB,UAAUyI,OAAO,qBAIhD,IAAK,IAAIrwB,EAAY,EAAGA,EAAIsc,EAAQ6d,YAAYniC,OAAQgI,IACpD7K,KAAKqtJ,GAAmBxiJ,GAAG4nB,UAAUC,IAAI,eAGpD,MACG1yB,KAAKytJ,GAAsBnoI,MAAMq/E,QAAU,M,CA8E3C,EAAAo3D,CAAY7hH,EAAsB+B,GACtC,IAAIosH,GAAiB,EACjBC,GAAc,EACdC,GAAU,EACd,MAAMphJ,EAAmBnnB,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAEjD,GAAIA,EAAel6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBACjE,IAAK,IAAIy2I,EAAwB3jK,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBy2I,EAAgB3jK,KAAK6yB,EAAK9F,KAAKurB,SAASz1C,OAAQ8gK,IAAiB,CACnK,MAAMzqH,EAAsBl5C,KAAK6yB,EAAK9F,KAAKurB,SAASqrH,GAC9CC,EAAa1qH,EAAWjB,KAAKj4C,KAAK6yB,EAAK+nB,KAC7C,GAAIgpH,EAAa,EAAG,CAChB,MAAMC,EAA2B3qH,EAAWlB,SAAS4rH,EAAa,GAAG5+H,YAAY,GAC3EmU,EAA4BD,EAAWlU,YAAY6+H,GACzD,IAAK,IAAIt+H,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IACzC4T,EAAcvxB,YAAY2d,IAAQ2U,IAAiBf,EAAczJ,eAAenK,IAAQ0W,GAAmB9C,EAAczJ,eAAenK,IAAQpe,EAAQ6d,YAAYniC,UACpK0lK,GAAU,EAGrB,CACJ,CAGL,GAAmC,GAA/BphJ,EAAQ8wB,KAAKj4C,KAAK6yB,EAAK+nB,KAAW,CAElC,IAAI4tH,EAAqBr9J,KAAKoC,IAAIvN,KAAK6yB,EAAK43D,UAAUiO,eAAgB14F,KAAK6yB,EAAK43D,UAAUkO,gBACtF8vE,EAAsBt9J,KAAK2L,IAAI9W,KAAK6yB,EAAK43D,UAAUiO,eAAgB14F,KAAK6yB,EAAK43D,UAAUkO,gBACvF+vE,EAAqBv9J,KAAKoC,IAAIvN,KAAK6yB,EAAK43D,UAAUmO,eAAgB54F,KAAK6yB,EAAK43D,UAAUoO,gBACtF8vE,EAAsBx9J,KAAK2L,IAAI9W,KAAK6yB,EAAK43D,UAAUmO,eAAgB54F,KAAK6yB,EAAK43D,UAAUoO,gBAE3F,IAAK,IAAIhuF,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK9F,KAAKoJ,SAAUtrB,IAE7Csc,EAAQ8wB,KAAKptC,IAAMsc,EAAQ8wB,KAAKj4C,KAAK6yB,EAAK+nB,MAAQ/vC,GAAK7K,KAAK6yB,EAAK+nB,MAChE/vC,EAAI29J,GAAc39J,EAAI49J,GAAezoK,KAAK6yB,EAAK1L,QAAUuhJ,GAAc1oK,KAAK6yB,EAAK1L,QAAUwhJ,KAE5FL,GAAc,EACdz9J,EAAI7K,KAAK6yB,EAAK9F,KAAKoJ,UAI3B,IAAK,IAAItrB,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK9F,KAAKoJ,SAAUtrB,IAE1B,GAAnBsc,EAAQ8wB,KAAKptC,IAAWsc,EAAQ8wB,KAAKptC,IAAMsc,EAAQ8wB,KAAKj4C,KAAK6yB,EAAK+nB,MAClEzzB,EAAQ6wB,SAAS7wB,EAAQ8wB,KAAKptC,GAAK,GAAGm6B,YAAYujB,SAAStM,IAAoBpxC,GAAK7K,KAAK6yB,EAAK+nB,MAC7F/vC,EAAI29J,GAAc39J,EAAI49J,GAAezoK,KAAK6yB,EAAK1L,QAAUuhJ,GAAc1oK,KAAK6yB,EAAK1L,QAAUwhJ,KAE5FN,GAAiB,EACjBx9J,EAAI7K,KAAK6yB,EAAK9F,KAAKoJ,SAI9B,CAEGmyI,EACAtoK,KAAKs3J,GAAsBhyI,MAAMC,YAAY,OAAQuB,GAAY4K,kBAGjE1xB,KAAKs3J,GAAsBhyI,MAAMC,YAAY,OAAQuB,GAAY6K,oBAEjE02I,EACAroK,KAAKu3J,GAAyBjyI,MAAMC,YAAY,OAAQuB,GAAY4K,kBAGpE1xB,KAAKu3J,GAAyBjyI,MAAMC,YAAY,OAAQuB,GAAY6K,oBAEpE42I,GACAvoK,KAAKw3J,GAAoBlyI,MAAMC,YAAY,UAAW,IACtDvlB,KAAKw3J,GAAoBlyI,MAAMC,YAAY,OAAQuB,GAAY4K,kBAC/D1xB,KAAKw3J,GAAoB/kI,UAAUC,IAAI,cAElCwnB,EAAel6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBACtEltB,KAAKw3J,GAAoBlyI,MAAMC,YAAY,UAAW,IACtDvlB,KAAKw3J,GAAoBlyI,MAAMC,YAAY,OAAQuB,GAAY6K,oBAC/D3xB,KAAKw3J,GAAoB/kI,UAAUyI,OAAO,cAE1Cl7B,KAAKw3J,GAAoBlyI,MAAMC,YAAY,UAAW,O,CAunBtD,EAAAk/H,CAAqB/yD,GAEzB,IAAI01D,EAGJ,GAFAA,EAAM7pI,UAEF6pI,EAAIC,WAAaD,EAAIC,UAAUC,UAI/B,YAHAF,EAAIC,UAAUC,UAAU51D,GAAM1uF,OAAM,KAChC6hD,OAAO04C,OAAO,qBAAsB7L,EAAK,IAIjD,MAAM61D,EAAiC1jJ,SAASC,cAAc,YAC9DyjJ,EAAU95H,YAAcikE,EACxB7tF,SAASyuB,KAAKruB,YAAYsjJ,GAC1BA,EAAUjrD,SACV,MAAMkrD,EAAqB3jJ,SAAS4jJ,YAAY,QAChDF,EAAUrsH,SACVl7B,KAAK+4H,eACAyuB,GAAW3iG,OAAO04C,OAAO,aAAc7L,E,CAoExC,EAAAkwE,CAAe7oH,EAAsBi6E,GACzChzH,KAAKkyH,GAAcptG,aAAa,QAAS,GAAK3Z,KAAKoC,IAAI,IAAoB,IAAfwrC,IAC5D/4C,KAAKmyH,GAAcrtG,aAAa,IAAK,IAAM,EAAI3Z,KAAKoC,IAAI,IAAsB,IAAjBylH,I,CA0BzD,EAAAm9B,CAAoByY,GACxB,MACMhqJ,EADmB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SACpB6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACzD9mE,EAAWgD,cAAgBgnJ,GAC3B5oK,KAAK6yB,EAAKi/D,OAAO,IAAIpF,GAAmB1sF,KAAK6yB,EAAMjU,EAAYgqJ,G,CAI/D,EAAA9X,CAAsB8X,GAC1B,MACMhqJ,EADmB5e,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SACpB6d,YAAYhlC,KAAK6yB,EAAK6yD,wBACzD9mE,EAAWgE,gBAAkBgmJ,GAC7B5oK,KAAK6yB,EAAKi/D,OAAO,IAAInF,GAAqB3sF,KAAK6yB,EAAMjU,EAAYgqJ,G,CAIjE,EAAA1H,GACJ,MAAMnhJ,EAAmB/f,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SACpEnnB,KAAK6yB,EAAKi/D,OAAO,IAAI/L,GAAa/lF,KAAK6yB,EAAM+2D,GAAsB7pE,I,CAG/D,EAAAkhJ,GACJjhK,KAAK6yB,EAAKi/D,OAAO,IAAIzL,GAAgCrmF,KAAK6yB,G,CAqEtD,EAAA4vI,CAAWnkJ,GACf,GAAImiB,MAAuBniB,GAAS,CAChC,OAAQA,GACJ,IAAK,iBACDte,KAAKkgK,KACL,MACJ,IAAK,kBACDlgK,KAAK8gK,KACL,MACJ,IAAK,eACD9gK,KAAKkhK,KACL,MACJ,IAAK,kBACDlhK,KAAKihK,KAGbjhK,KAAK6yB,EAAKoD,SAASC,SACtB,MACGl2B,KAAK6yB,EAAKi/D,OAAO,IAAI/L,GAAa/lF,KAAK6yB,EAAM8N,SAASriB,I,QChqIrDuqJ,GAcZ,WAAA9oK,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAbZ7yB,KAAc8oK,IAAY,EAC1B9oK,KAAc+oK,IAAY,EAC1B/oK,KAAQgpK,IAAY,EACpBhpK,KAAoBipK,IAAY,EACvBjpK,KAAqBkpK,GAAa,GAE3ClpK,KAA+BmpK,IAAY,EAC3CnpK,KAAaopK,IAAY,EACzBppK,KAAgBqpK,GAAmB,KACnCrpK,KAAespK,IAAY,EAC3BtpK,KAASupK,GAAgB,KACzBvpK,KAAgBwpK,GAAuB,KAgGvCxpK,KAAiBspI,GAAG,KAE3B,GADAzkF,OAAO2vE,sBAAsBx0H,KAAKspI,IAC9BtpI,KAAK6yB,EAAK6B,MAAM0xC,UAAW,CAChBpmE,KAAKypK,MAGlBzpK,KAAK6yB,EAAKoD,SAAS6rG,gBAEpB,GAmKM9hI,KAAgBy2H,GAAG,KAC1B,MAAMiF,EAAkB17H,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK1L,SAC7D6a,EAAiBhiC,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6a,OAC9DhiC,KAAK6yB,EAAK6B,MAAM8zC,kBAAoBxoE,KAAK6yB,EAAK1L,SAAWnnB,KAAK8oK,IAAkBptC,GAAU17H,KAAK+oK,IAAkB/mI,GAAUhiC,KAAKgpK,IAAYhpK,KAAK6yB,EAAK9F,KAAK3pB,MAC9JpD,KAAK6yB,EAAK6B,MAAM8zC,iBAAmBxoE,KAAK6yB,EAAK1L,QAC7CnnB,KAAK8oK,GAAiBptC,EACtB17H,KAAK+oK,GAAiB/mI,EACtBhiC,KAAKgpK,GAAWhpK,KAAK6yB,EAAK9F,KAAK3pB,IAC/BpD,KAAKw7H,mBAENx7H,KAAK6yB,EAAK6B,MAAM+zC,qBAAuBzoE,KAAK6yB,EAAK8/D,yBAAyB3yF,KAAK6yB,EAAK1L,QAAQ,EAlR5FnnB,KAAK6yB,EAAKoD,SAASygG,MAAM12H,KAAKy2H,IAC9Bz2H,KAAKy2H,KACL5xE,OAAO2vE,sBAAsBx0H,KAAKspI,G,CAG5B,IAAA59D,GACN1rE,KAAK6yB,EAAK6B,MAAMg3C,OAChB1rE,KAAK6yB,EAAK6B,MAAMk0C,iBAAkB,EAClC5oE,KAAK6yB,EAAK6B,MAAMm0C,kBAAmB,EACnC7oE,KAAK6yB,EAAK6B,MAAM+2C,mB,CAGV,KAAAE,GACN3rE,KAAKw7H,kBACwB,MAAzBx7H,KAAKwpK,KACJxpK,KAAK6yB,EAAK9F,KAAKoJ,SAAWn2B,KAAKmpK,KAAoCnpK,KAAK0pK,OAE3E,IAAI9gF,GAAiB5oF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKoJ,SAAW,EAAG,GAC7D,IAAIm0D,GAAiBtqF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK9F,KAAKoJ,SAAW,IAEzEn2B,KAAKwpK,GAAiB3oF,WAC1B7gF,KAAK6yB,EAAKi/D,OAAO9xF,KAAKwpK,IACtBxpK,KAAKwpK,GAAmB,MAEzBxpK,KAAKupK,GAAY,MAElBvpK,KAAK6yB,EAAK6B,MAAMi3C,QAChB3rE,KAAK6yB,EAAK6B,MAAMm3C,eAChB7rE,KAAK6yB,EAAK6B,MAAMk0C,iBAAkB,EAClC5oE,KAAK6yB,EAAK6B,MAAMm0C,kBAAmB,EAC/B7oE,KAAK6yB,EAAKwjE,MAAMygC,YACnB92H,KAAK6yB,EAAK6B,MAAM+3C,QAAQzsE,KAAK6yB,EAAK+nB,KAEnC56C,KAAK6yB,EAAK6B,MAAM83C,W,CAGV,MAAAslB,GACN9xF,KAAK6yB,EAAK6B,MAAM83C,YAChB,MAAMu1D,EAAsB52H,KAAK0hB,MAAM7sB,KAAK6yB,EAAK6B,MAAM7E,UACnDkyG,GAAe/hI,KAAK6yB,EAAK+nB,KAC5B,IAAI0vC,GAAiBtqF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK1L,QAAS46G,GAEhD/hI,KAAKipK,KACRjpK,KAAKw7H,kBACLx7H,KAAKipK,IAAuB,GAE7BjpK,KAAK6yB,EAAK6B,MAAMk0C,gBAAkB5oE,KAAK6yB,EAAKwjE,MAAM65C,wBAClDlwI,KAAK6yB,EAAK6B,MAAMm0C,iBAAmB7oE,KAAK6yB,EAAKwjE,MAAM45C,iBACnDjwI,KAAK6yB,EAAK6B,MAAMk3C,iBAChB5rE,KAAK6yB,EAAK6B,MAAM+2C,oBAChBzrE,KAAKmpK,GAAkCnpK,KAAK6yB,EAAK9F,KAAKoJ,SACtDn2B,KAAKopK,GAAgBppK,KAAK2pK,KAC1B3pK,KAAKqpK,GAAmB,KACxBrpK,KAAKspK,IAAkB,EACvBtpK,KAAKupK,GAAY,KACjBvpK,KAAKkpK,GAAsBrmK,OAAS,EACpC7C,KAAKwpK,GAAmB,IAAIhoF,GAC5BxhF,KAAK6yB,EAAK2wE,qBAAqBxjG,KAAKwpK,G,CAG9B,cAAAI,GACN5pK,KAAKwpK,GAAmB,KACxBxpK,KAAK2rE,O,CAGC,mBAAA89D,GACN,OAAOzpI,KAAKipK,E,CAGL,EAAAtmC,GACP,OAAI3iI,KAAK6yB,EAAKwjE,MAAM05C,0BACZzuI,EAAOwQ,aAAexQ,EAAO2Q,QAAQjS,KAAK6yB,EAAK9F,KAAK+Y,QAAQ5zB,aAE5D,C,CAID,EAAAy3J,GACP,MAAMn4G,EAAsBxxD,KAAK6yB,EAAK6B,MAAM7E,SAAW7vB,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aAC3F,GAAI9R,KAAK6yB,EAAKwjE,MAAM05C,0BAA2B,CAC9C,MAAM37C,EAAsBp0F,KAAK2iI,KACjC,OAAOx3H,KAAKe,MAAMslD,EAAc4iC,GAAeA,CAC/C,CACD,OAAOjpF,KAAKe,MAAMslD,E,CAGX,EAAAk4G,GACP,IAAK,IAAIxvH,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKiK,kBAAmBkjB,IACnF,GAA+E,GAA3El6C,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAKj4C,KAAK6yB,EAAK9F,KAAKoJ,SAAW,GAAS,OAAO,EAE1F,OAAO,C,CAeA,EAAAszI,GACP,GAA6B,MAAzBzpK,KAAKwpK,GAA0B,OAAO,EAC1C,IAAKxpK,KAAK6yB,EAAKmwE,cAAchjG,KAAKwpK,IAEjC,OADAxpK,KAAK4pK,kBACE,EAER,GAAI5pK,KAAK6yB,EAAK6B,MAAMm0C,iBAInB,OAFA7oE,KAAKkpK,GAAsBrmK,OAAS,EACpC7C,KAAKspK,IAAkB,GAChB,EAGR,MAAM/3F,EAAsBvxE,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aAC1D+3J,EAAkB7pK,KAAKopK,GAAgB73F,EACvC5E,EAAiBxhE,KAAK0hB,MAAM7sB,KAAKopK,GAAgB73F,GACjDu4F,EAA0B9pK,KAAKopK,GACrCppK,KAAKopK,GAAgBppK,KAAK2pK,KAC1B,MAAMI,EAAkB/pK,KAAKopK,GAAgB73F,EACvCgZ,EAAiBp/E,KAAK0hB,MAAM7sB,KAAKopK,GAAgB73F,GACvD,GAAIs4F,GAAWE,GAAWp9F,GAAU4d,EAAQ,OAAO,EACnD,GAAIvqF,KAAKopK,GAAgBU,EAGxB,OAFA9pK,KAAKupK,GAAY,KACjBvpK,KAAKqpK,GAAmB,MACjB,EAGR,IAAIW,GAAQ,EACZ,IAAK,IAAIpvH,EAAc+xB,EAAQ/xB,GAAO2vC,EAAQ3vC,IAAO,CAChDA,GAAO+xB,IAAQ3sE,KAAKqpK,GAAmB,MAC3C,MAAMY,EAAqBrvH,GAAO+xB,EAAUk9F,EAAU,EAChDK,EAAmBtvH,GAAO2vC,EAAUw/E,EAAUx4F,EACpD,GAAI04F,GAAaC,EAAS,MAC1B,GAAsB,MAAlBlqK,KAAKupK,KAAsBvpK,KAAKspK,IAAmBW,EAAY,GAAKjqK,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB1lE,OAAS,EACjH7C,KAAKwpK,GAAiB/nF,OAAO,IAAIwR,GAAcjzF,KAAK6yB,EAAM7yB,KAAKupK,GAAW,EAAGW,EAASlqK,KAAKupK,GAAUxlI,uBAErG/jC,KAAK6yB,EAAKovG,uBAAwB,MAC5B,CACgB,MAAlBjiI,KAAKupK,KAERvpK,KAAKupK,GAAY,MAMlB,IAAI92G,EAAwBw3G,EACxBt3G,EAAsBu3G,EAC1B,KAAOz3G,EAAgBy3G,GAAS,CAC/B,IAAIC,GAAqC,EACzC,GAAInqK,KAAKkpK,GAAsBrmK,OAAS,GAAK7C,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB1lE,OAAS,EAAG,CAMzF,GAL6B,MAAzB7C,KAAKqpK,KACRrpK,KAAK6yB,EAAK43D,UAAU2/E,kBAAkBpqK,KAAKwpK,GAAkBxpK,KAAK6yB,EAAK6B,MAAM8zC,iBAAkB5tB,GAC/F56C,KAAKwpK,GAAiB/nF,OAAO,IAAI0Q,GAA0BnyF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK6B,MAAM8zC,iBAAkB5tB,IACxG56C,KAAKqpK,GAAmBrpK,KAAK6yB,EAAK9F,KAAK48B,WAAW3pD,KAAK6yB,EAAK6B,MAAM8zC,iBAAkB5tB,IAExD,MAAzB56C,KAAKqpK,GAA0B,MAAM,IAAIlnK,MAI7C,IAHAnC,KAAKupK,GAAY,IAAI7lI,IAAM,EAAG+uB,EAAeE,EAAarxD,EAAOwU,YAAa9V,KAAK6yB,EAAK9F,KAAKotB,kBAAkBn6C,KAAK6yB,EAAK6B,MAAM8zC,mBAC/HxoE,KAAKupK,GAAUxlI,qBAAyC,GAAjB0uB,IAAuBzyD,KAAKspK,GACnEtpK,KAAKupK,GAAU1lI,QAAQhhC,OAAS,EACzB7C,KAAKkpK,GAAsBrmK,OAAS,KACtC7C,KAAKupK,GAAU1lI,QAAQhhC,QAAUvB,EAAO8V,eADC,CAE7C,MAAMizJ,EAAsBrqK,KAAKkpK,GAAsBzpH,SACO,GAA1Dz/C,KAAK6yB,EAAK6B,MAAM6zC,iBAAiBtsC,QAAQouI,KAC5CrqK,KAAKupK,GAAU1lI,QAAQ94B,KAAKs/J,GAC5BF,GAA4B,EAE7B,CACD,IAAK,IAAIt/J,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB1lE,UACxD7C,KAAKupK,GAAU1lI,QAAQhhC,QAAUvB,EAAO8V,cADwBvM,IAEpE7K,KAAKupK,GAAU1lI,QAAQ94B,KAAK/K,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB19D,IAE9D7K,KAAKwpK,GAAiB/nF,OAAO,IAAIkT,GAAgB30F,KAAK6yB,EAAM7yB,KAAKqpK,GAAkBrpK,KAAKupK,GAAWvpK,KAAKqpK,GAAiBtkI,MAAMliC,SAC3HsnK,IAEHx3G,EAAcF,EAAgBzyD,KAAK2iI,KACnC,IAAIvxC,GAAiBpxF,KAAK6yB,EAAM7yB,KAAKupK,GAAWvpK,KAAKupK,GAAUvpI,MAAO2yB,GACtE3yD,KAAKupK,GAAY,MAElBS,GAAQ,CACR,CACDhqK,KAAKspK,GAAkBa,EACvB13G,EAAgBE,EAChBA,EAAcu3G,CACd,CACD,CAEGtvH,GAAO56C,KAAK6yB,EAAK9F,KAAKoJ,SAAW,GAChCn2B,KAAK0pK,OACR,IAAIhhF,GAAiB1oF,KAAK6yB,EAAM7yB,KAAK6yB,EAAK9F,KAAKoJ,SAAU,GACzDn2B,KAAK6yB,EAAK+nB,MACVovH,GAAQ,EAGV,CACD,OAAOA,C,CAGD,mBAAAxnC,CAAoB3+F,EAAmBS,GAC7CtkC,KAAKypK,KACL,IAAK,IAAI5+J,EAAY,EAAGA,EAAIg5B,EAAQhhC,OAAQgI,IAC3C7K,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB19D,GAAKg5B,EAAQh5B,GAE/C7K,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB1lE,OAASsI,KAAKoC,IAAIs2B,EAAQhhC,OAAQvB,EAAO8V,cAC1EpX,KAAK6yB,EAAK6B,MAAM2zC,kBAAoB/jC,EACpCtkC,KAAK6yB,EAAK6B,MAAM4zC,kBAAmB,EACnCtoE,KAAKipK,IAAuB,EAC5BjpK,KAAKspK,IAAkB,C,CAGjB,iBAAA3tC,CAAkBh4F,GAOxB,GANA3jC,KAAK6yB,EAAK6B,MAAM+2C,oBAChBzrE,KAAKypK,KACDzpK,KAAKipK,KACRjpK,KAAKw7H,kBACLx7H,KAAKipK,IAAuB,KAEzBjpK,KAAK6yB,EAAKwjE,MAAM25C,gCAAmC1uI,EAAO4O,OAAOlQ,KAAK6yB,EAAK9F,KAAKutB,OAAOlqC,MAAMuzB,EAAQriC,EAAOsY,qBAGxD,GAApD5Z,KAAK6yB,EAAK6B,MAAM6zC,iBAAiBtsC,QAAQ0H,GAAc,CAG1D,IAFA3jC,KAAK6yB,EAAK6B,MAAM6zC,iBAAiBx9D,KAAK44B,GACtC3jC,KAAKspK,IAAkB,EAChBtpK,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB1lE,OAASvB,EAAO8V,cACvDpX,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB9oB,QAIlC,GAFAz/C,KAAK6yB,EAAK6B,MAAM2zC,kBAAoB1gD,OAAOmhG,iBAEd,MAAzB9oH,KAAKwpK,GAA0B,CAClC,MAAMc,EAAsBtqK,KAAKkpK,GAAsBjtI,QAAQ0H,GAM/D,KALoB,GAAhB2mI,GAEHtqK,KAAKkpK,GAAsBhtI,OAAOouI,EAAa,GAEhDtqK,KAAKkpK,GAAsBn+J,KAAK44B,GACzB3jC,KAAKkpK,GAAsBrmK,OAA+B,EAAtBvB,EAAO8V,cACjDpX,KAAKkpK,GAAsBzpH,OAE5B,CACD,C,CAGK,oBAAAm8E,CAAqBj4F,GAC3B3jC,KAAKypK,KACL,IAAK,IAAI5+J,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB1lE,OAAQgI,IAChE7K,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB19D,IAAM84B,IAC1C3jC,KAAK6yB,EAAK6B,MAAM6zC,iBAAiBrsC,OAAOrxB,EAAG,GAC3C7K,KAAKspK,IAAkB,EACvBz+J,I,CAKI,eAAA2wH,GACNx7H,KAAKypK,KACLzpK,KAAK6yB,EAAK6B,MAAM6zC,iBAAiB1lE,OAAS,EAC1C7C,KAAKspK,IAAkB,C,QClQZiB,GAgBT,WAAAxqK,CAAoB8yB,GAAA7yB,KAAI6yB,EAAJA,EAfb7yB,KAAc04F,eAAW,EACzB14F,KAAc44F,eAAW,EACzB54F,KAAc24F,eAAW,EACzB34F,KAAc64F,eAAW,EACzB74F,KAAMs9C,OAAW,GACjBt9C,KAAgBshK,iBAAW,GAC3BthK,KAAqB83F,sBAAW,EAChC93F,KAAmB+3F,oBAAW,EAC9B/3F,KAAsBo4F,wBAAY,EAEjCp4F,KAAgBwqK,GAAuB,KACvCxqK,KAAYyqK,GAAuB,KACnCzqK,KAAiB0qK,GAAuB,KACxC1qK,KAAc2qK,GAAuB,I,CAItC,MAAAC,GACH,MAAO,CACHj2D,GAAM30G,KAAK04F,eACXmc,GAAM70G,KAAK24F,eACXic,GAAM50G,KAAK44F,eACXkc,GAAM90G,KAAK64F,eACX74D,MAAShgC,KAAK83F,sBACd73D,IAAOjgC,KAAK+3F,oB,CAIb,QAAA8yE,CAASC,GACA,MAARA,IACJ9qK,KAAK04F,gBAAkBoyE,EAAS,GAChC9qK,KAAK24F,gBAAkBmyE,EAAS,GAChC9qK,KAAK44F,gBAAkBkyE,EAAS,GAChC9qK,KAAK64F,gBAAkBiyE,EAAS,GAChC9qK,KAAK83F,uBAAyBgzE,EAAY,MAC1C9qK,KAAK+3F,qBAAuB+yE,EAAU,IACtC9qK,KAAKs9C,OAAS,GACdt9C,KAAKshK,iBAAmB,GACxBthK,KAAKo4F,uBAAyBp4F,KAAK83F,sBAAwB93F,KAAK+3F,oB,CAG7D,gBAAAo9C,GACHn1I,KAAK6yB,EAAKoD,SAASC,UACnBl2B,KAAKs9C,OAAS,GACdt9C,KAAKshK,iBAAmB,E,CAG5B,mBAAW1rD,GACP,OAAOzqG,KAAKoC,IAAIvN,KAAK04F,eAAgB14F,KAAK24F,e,CAE9C,uBAAWmd,GACP,OAAO3qG,KAAKoC,IAAIvN,KAAK44F,eAAgB54F,KAAK64F,e,CAE9C,qBAAWgd,GACP,OAAO1qG,KAAKC,IAAIpL,KAAK04F,eAAiB14F,KAAK24F,gBAAkB,C,CAEjE,sBAAWod,GACP,OAAO5qG,KAAKC,IAAIpL,KAAK44F,eAAiB54F,KAAK64F,gBAAkB,C,CAEjE,sBAAW8c,GACP,OAAO31G,KAAK61G,kBAAoB,GAAK71G,KAAK+1G,mBAAqB,C,CAE5D,uBAAArrB,GACH1qF,KAAK6yB,EAAK+B,aAAezpB,KAAKoC,IAAIvN,KAAK6yB,EAAK+nB,IAAKzvC,KAAK2L,IAAI9W,KAAK6yB,EAAK+nB,KAAO56C,KAAK6yB,EAAK4C,iBAAmB,GAAIz1B,KAAK6yB,EAAK+B,eACtH50B,KAAK6yB,EAAKkE,iBAAmB5rB,KAAKoC,IAAIvN,KAAK6yB,EAAK1L,QAAShc,KAAK2L,IAAI9W,KAAK6yB,EAAK1L,SAAWnnB,KAAK6yB,EAAKoE,qBAAuB,GAAIj3B,KAAK6yB,EAAKkE,kB,CAEnI,sBAAAqqI,GACHphK,KAAK6yB,EAAK+B,aAAezpB,KAAKoC,IAAIvN,KAAK24F,eAAgBxtF,KAAK2L,IAAI9W,KAAK24F,gBAAkB34F,KAAK6yB,EAAK4C,iBAAmB,GAAIz1B,KAAK6yB,EAAK+B,eAClI50B,KAAK6yB,EAAKkE,iBAAmB5rB,KAAKoC,IAAIvN,KAAK64F,eAAgB1tF,KAAK2L,IAAI9W,KAAK64F,gBAAkB74F,KAAK6yB,EAAKoE,qBAAuB,GAAIj3B,KAAK6yB,EAAKkE,kB,CAGvI,aAAAq+G,CAAcl7F,EAAsBU,GACvC,GAAIV,GAAgBl6C,KAAK6yB,EAAK1L,SAAWyzB,GAAO56C,KAAK6yB,EAAK+nB,IAAK,OAC/D,MAAM4/E,EAAgCx6H,KAAK6yB,EAAKmwE,cAAchjG,KAAKyqK,IACnEzqK,KAAKyqK,GAAe,IAAIjpF,GACxBxhF,KAAKyqK,GAAahpF,OAAO,IAAI6I,GAAiBtqF,KAAK6yB,EAAMqnB,EAAcU,IAEvE,MAAMD,EAA0B36C,KAAK6yB,EAAKw1D,kBAAkB,GAC7C,MAAX1tC,GACIA,EAAQ3V,YAAY/I,QAAQj8B,KAAK6yB,EAAKy1D,iBAAiBtoF,KAAK6yB,EAAK1L,UAAY,IAC7EnnB,KAAK6yB,EAAKy1D,iBAAiBtoF,KAAK6yB,EAAK1L,SAAWwzB,EAAQ3V,YAAY,IAIvEhlC,KAAK6yB,EAAKk4I,kBACX/qK,KAAK6yB,EAAKi/D,OAAO9xF,KAAKyqK,GAAcjwC,GAExCx6H,KAAKm1I,kB,CAIF,UAAAR,CAAWh6F,GACd36C,KAAK6yB,EAAKi/D,OAAO,IAAI3J,GAAqBnoF,KAAK6yB,EAAM8nB,EAAS36C,KAAK41G,gBAAiB51G,KAAK81G,oBAAqB91G,KAAK61G,kBAAmB71G,KAAK+1G,oB,CAGxI,SAAAsrD,CAAU2J,EAAeC,EAAwBC,GACpD,GAAIA,EACa,KAATF,EACAhrK,KAAK6yB,EAAKi/D,OAAO,IAAInB,GAAa3wF,KAAK6yB,EAAM,IAE/B,KAATm4I,EACLhrK,KAAK6yB,EAAKi/D,OAAO,IAAInB,GAAa3wF,KAAK6yB,EAAM,IAE/B,KAATm4I,EACLhrK,KAAK6yB,EAAKi/D,OAAO,IAAInB,GAAa3wF,KAAK6yB,EAAM,IAE/B,KAATm4I,EACLhrK,KAAK6yB,EAAKi/D,OAAO,IAAInB,GAAa3wF,KAAK6yB,EAAM,IAE/B,KAATm4I,GAAyB,KAATA,GACrBhrK,KAAK6yB,EAAKi/D,OAAO,IAAInB,GAAa3wF,KAAK6yB,EAAM,SAE9C,GAAIo4I,EAAe,CAET,KAATD,IAAcA,EAAQ,MAC1BhrK,KAAKshK,kBAAoB0J,EACzB,IAAI3nB,EAAS1iH,SAAS3gC,KAAKshK,kBAE5B,GAAc,GAAVje,GAAeA,GAAUrjJ,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYniC,OAE/E,YADA7C,KAAKgjK,iBAAiB3f,EAAS,GAKpC,GAFCrjJ,KAAKshK,iBAAmB0J,EAEX,IADb3nB,EAAS1iH,SAAS3gC,KAAKshK,oBACLje,GAAUrjJ,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK6yB,EAAK1L,SAAS6d,YAAYniC,OAE/E,YADA7C,KAAKgjK,iBAAiB3f,EAAS,GAGnCrjJ,KAAKshK,iBAAmB,EAC3B,KACI,CACDthK,KAAKs9C,QAAU0tH,EACf,IAAI3nB,EAAiB1iH,SAAS3gC,KAAKs9C,QACnC,GAAI+lG,GAAUrjJ,KAAK6yB,EAAK9F,KAAK0tB,mBAIzB,YAFAz6C,KAAK20I,WAAW0O,GAOpB,GAFArjJ,KAAKs9C,OAAS0tH,EACd3nB,EAAS1iH,SAAS3gC,KAAKs9C,QACnB+lG,GAAUrjJ,KAAK6yB,EAAK9F,KAAK0tB,mBAIzB,YAFAz6C,KAAK20I,WAAW0O,GAKpBrjJ,KAAKs9C,OAAS,EACjB,C,CAGE,aAAA6lH,CAAc59H,EAAazgC,GAC9B9E,KAAK6yB,EAAKi/D,OAAO,IAAIzH,GAAiBrqF,KAAK6yB,EAAM0S,EAAKzgC,G,CAGnD,gBAAAs+J,CAAiB79H,EAAa3mB,GACjC5e,KAAK6yB,EAAKi/D,OAAO,IAAIN,GAAoBxxF,KAAK6yB,EAAM0S,EAAK3mB,G,CAGtD,aAAA4kJ,CAAcj+H,EAAamsD,GAC9B1xF,KAAK6yB,EAAKi/D,OAAO,IAAIL,GAAiBzxF,KAAK6yB,EAAM0S,EAAKmsD,G,CAGnD,YAAAqyE,CAAax+H,EAAatwB,GAC7BjV,KAAK6yB,EAAKi/D,OAAO,IAAIC,GAAgB/xF,KAAK6yB,EAAM0S,EAAKtwB,G,CAGlD,UAAAs/H,GACHv0I,KAAK6yB,EAAKi/D,OAAO,IAAIpJ,GAAiB1oF,KAAK6yB,EAAM7yB,KAAK41G,gBAAkB51G,KAAK61G,kBAAmB71G,KAAK61G,oBACrG,MAAMziF,EAAgBpzB,KAAK61G,kBAC3B71G,KAAK04F,gBAAkBtlE,EACvBpzB,KAAK24F,gBAAkBvlE,C,CAGpB,aAAA0lG,GACH,MAAMz6B,EAAqB,IAAI7c,GACzB2pF,EAAsBnrK,KAAK81G,oBAAsB91G,KAAK+1G,mBACtDh2F,EAAmB/f,KAAK6yB,EAAK9F,KAAKotB,kBAAkBgxH,EAAc,GAClElyH,EAAiBj5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgB+wH,EAAc,GACpE9sE,EAAM5c,OAAO,IAAIqI,GAAiB9pF,KAAK6yB,EAAMs4I,EAAaprJ,EAASk5B,IAC9DolD,EAAMxd,WACP7gF,KAAK44F,eAAiB54F,KAAK64F,eAAiBsyE,EAC5C9sE,EAAM5c,OAAO,IAAI6I,GAAiBtqF,KAAK6yB,EAAMs4I,EAAanrK,KAAK6yB,EAAK+nB,MACpE56C,KAAK6yB,EAAKi/D,OAAOuM,G,CAIlB,UAAAo2C,GACH,MAAMp2C,EAAqB,IAAI7c,GAC/B,GAAIxhF,KAAK6yB,EAAK43D,UAAU2N,uBAAwB,CAExCp4F,KAAK21G,oBACLtX,EAAM5c,OAAO,IAAI8X,GAAsCv5F,KAAK6yB,EAAM7yB,KAAK41G,gBAAiB51G,KAAK61G,kBAAmB71G,KAAK81G,oBAAqB91G,KAAK+1G,qBAGnJ,IAAK,MAAM77D,KAAgBl6C,KAAKorK,KAC5B,IAAK,MAAMzwH,KAAW36C,KAAKqrK,GAAqBnxH,GAC5CmkD,EAAM5c,OAAO,IAAIuP,GAAmBhxF,KAAK6yB,EAAM8nB,EAAS36C,KAAK6yB,EAAK43D,UAAUqN,sBAAuB93F,KAAK6yB,EAAK43D,UAAUsN,sBAG/HsG,EAAM5c,OAAO,IAAI0U,GAAuBn2F,KAAK6yB,EAAM,EAAG,GACzD,KAAM,CACHwrE,EAAM5c,OAAO,IAAImH,GAAiB5oF,KAAK6yB,EAAM7yB,KAAK41G,gBAAiB51G,KAAK61G,oBACxE,MAAMziF,EAAgBpzB,KAAK61G,kBAC3B71G,KAAK04F,eAAiBvtF,KAAK2L,IAAI,EAAG9W,KAAK04F,eAAiBtlE,GACxDpzB,KAAK24F,eAAiBxtF,KAAK2L,IAAI,EAAG9W,KAAK24F,eAAiBvlE,EAC3D,CACDpzB,KAAK6yB,EAAKi/D,OAAOuM,E,CAGd,aAAA8hE,GACHngK,KAAK6yB,EAAKi/D,OAAO,IAAI7H,GAAoBjqF,KAAK6yB,EAAM7yB,KAAK81G,oBAAqB91G,KAAK81G,oBAAsB91G,KAAK+1G,mBAAqB,IACnI/1G,KAAK44F,eAAiB54F,KAAK64F,eAAiB74F,KAAK6yB,EAAK1L,QACtDL,GAAYC,a,CAGR,GAAEqkJ,GACN,IAAK,IAAIlxH,EAAuBl6C,KAAK81G,oBAAqB57D,EAAel6C,KAAK81G,oBAAsB91G,KAAK+1G,mBAAoB77D,UACnHA,C,CAIN,GAAEoxH,GACN,IAAK,IAAI1wH,EAAc56C,KAAK41G,gBAAiBh7D,EAAM56C,KAAK41G,gBAAkB51G,KAAK61G,kBAAmBj7D,UACxFA,C,CAIN,GAACywH,CAAqBnxH,GAC1B,MAAMqxH,EAAuC,GAC7C,IAAK,MAAM3wH,KAAO56C,KAAKsrK,KAAoB,CACvC,MAAMzxE,EAA8B75F,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAK2C,GAC/E,GAA2B,GAAvBi/C,EAA0B,SAC9B,GAAI0xE,EAAgBr0I,OAAO2iE,IAAuB,SAClD0xE,EAAgBr0I,OAAO2iE,KAAwB,EAC/C,MAAMl/C,EAA0B36C,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACxE,GAAe,MAAXD,EAAiB,MAAM,IAAIx4C,YACzBw4C,CACT,C,CAGG,EAAA6wH,CAA4BC,EAAkBvxH,GAClD,MAAMlV,EAAwBxiC,MAAMC,KAAKgpK,EAAyB,aAAGtxJ,KAAItP,GAAWA,IAAO,IAE3F,OADAu3E,GAAiCp9C,EAAahlC,KAAK6yB,EAAK9F,KAAMmtB,GACvDlV,C,CAGH,EAAA0mI,CAAsBxxH,EAAsBwK,GAChD,IAAK,IAAI75C,EAAY,EAAGA,EAAI7K,KAAK6yB,EAAK9F,KAAKoJ,SAAUtrB,IACjD,GAAI7K,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAKptC,IAAM65C,EACjD,OAAO,EAGf,OAAO,C,CAGJ,IAAAxd,GACH,MAAMoR,EAA0B,GAEhC,IAAK,MAAM4B,KAAgBl6C,KAAKorK,KAAwB,CACpD,MAAMpzH,EAAoC,GACpCC,EAAiB,GAEvB,IAAK,MAAM2C,KAAO56C,KAAKsrK,KAAoB,CACvC,MAAMK,EAAwB3rK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAK2C,GAEzE,GADA3C,EAAKltC,KAAK4gK,GAC6Bn+I,MAAnCwqB,EAAS9gB,OAAOy0I,IAA8B,CAC9C,MAAMhxH,EAA0B36C,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACxE,IAAI5V,EAAwBhlC,KAAK6yB,EAAK8/D,yBAAyBz4C,GAC3DnV,EAAgB,GACpB,GAAe,MAAX4V,EAGA,GAFA3V,EAAc2V,EAAQ3V,YAAYtuB,SAE9B1W,KAAKo4F,uBACL,IAAK,MAAMlzD,KAAQyV,EAAQ1V,aACnBC,EAAKjF,KAAOjgC,KAAK83F,uBACjB5yD,EAAKlF,OAAShgC,KAAK+3F,sBACvB7yD,EAAKlF,OAAShgC,KAAK83F,sBACnB5yD,EAAKjF,KAAOjgC,KAAK83F,uBACb5yD,EAAKlF,MAAQ,GAAKkF,EAAKjF,IAAMjgC,KAAK+3F,oBAAsB/3F,KAAK83F,wBAC7D,IAAI1G,GAAiB,KAAMlsD,EAAM/5B,KAAK2L,IAAIouB,EAAKlF,MAAO,GAAI70B,KAAKoC,IAAIvN,KAAK+3F,oBAAsB/3F,KAAK83F,sBAAuB5yD,EAAKjF,MAEnI8E,EAAMh6B,KAAKm6B,SAGfH,EAAQ4V,EAAQ5V,MAGxBiT,EAAS9gB,OAAOy0I,IAAkB,CAAE3mI,YAAeA,EAAaD,MAASA,EAC5E,CACJ,CAED,MAAM6mI,EAA2B,CAC7B7rJ,QAAW/f,KAAK6yB,EAAK9F,KAAKotB,kBAAkBD,GAC5CjB,MAASj5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBF,GACxClC,SAAYA,EACZC,KAAQA,GAEZK,EAASvtC,KAAK6gK,EACjB,CAED,MAAMC,EAA+B,CACjCC,aAAgB9rK,KAAKo4F,uBAAyBp4F,KAAK+3F,oBAAsB/3F,KAAK83F,sBAAwB93F,KAAK6yB,EAAK9F,KAAK4Z,YAAcrlC,EAAOwQ,aAC1IwmC,SAAYA,GAEhBuM,OAAOthD,aAAa+5F,QAAQ,gBAAiBv/C,KAAKklD,UAAU4oE,IAE5D,IAAI11E,GAAuBn2F,KAAK6yB,EAAM,EAAG,E,CAGvC,EAAAk5I,CAAqBC,GACrB,IAAI7xE,EAAuB6xE,EAAWruH,QAGpCw8C,EAAWzyB,MAAK,SAAUrrC,EAAWC,GAAqB,OAAOD,EAAIC,CAAE,IACvE,IAAIyK,EAAsBozD,EAAW,GAAK74F,EAAOuY,UAEjD,IAAImtB,EAAuBD,GADKozD,EAAWt3F,OACiB,GAC5D,KAAOmkC,GAAgB1lC,EAAOuY,WAC1BktB,IACAC,IAEJ,IAAK,IAAIilI,EAAyB,EAAGA,EAAiB9xE,EAAWt3F,OAAQopK,IACrE9xE,EAAW8xE,GAAkBA,EAAiBllI,EAEnD,OAAOozD,C,CAEF,EAAA+xE,CAAqC99D,GAGzC,IAAIrqD,EAAmB,GACvB,IAAK,IAAIsxC,EAAoB,EAAGA,EAAY+Y,EAASvrG,OAAQwyF,IAAa,CACtE,MAAM3S,EAAgB0rB,EAAS/Y,GACzB82E,EAA2BnsK,KAAK+rK,GAAqBrpF,EAAiB,QAAE/kC,SACxEyuH,EAAyB1pF,EAAQ5+C,KACvC,IAAIuoI,EAAyB,GAC7B,IAAK,IAAIC,EAAuB,EAAGA,EAAeF,EAAYvpK,OAAQypK,IAAgB,CAClF,MAAM/4E,EAAkB64E,EAAYE,GACrCD,EAAYthK,KAAK,CACbkW,SAAUsyE,EAAOtyE,SAChBwiB,KAAM8vD,EAAO9vD,KACbrI,KAAMm4D,EAAOn4D,MAEpB,CACD,MAAMmxI,EAAuB7pF,EAAe,MACtC8pF,EAAqB9pF,EAAa,IAClC+pF,EAAuC/pF,EAA8B,qBACrEh+C,EAAU,IAAIhB,GAAK,EAAG6oI,EAAcC,EAAY,GAAG,GACzD9nI,EAAQb,QAAUsoI,EAClBznI,EAAQZ,KAAOuoI,EACf3nI,EAAQX,qBAAuB0oI,EAC/B1oH,EAASh5C,KAAK25B,EACjB,CACD,OAAOqf,C,CAGJ,QAAAk8G,GACH,MAAM5hE,EAAqB,IAAI7c,GACzBtnC,EAAuBl6C,KAAK81G,oBAC5B/iB,EAAmB/yF,KAAK41G,gBACxB82D,EAAoB1sK,KAAK+1G,mBACzB42D,EAAmB3sK,KAAK61G,kBAC9B71G,KAAKknC,OACL,IAAK,IAAI/f,EAAU+yB,EAAc/yB,EAAU+yB,EAAewyH,EAAWvlJ,IACjE,IAAK,IAAIyzB,EAAMm4C,EAAUn4C,EAAMm4C,EAAW45E,EAAU/xH,IAAO,CACvD,MAAM+wH,EAAwB3rK,KAAK6yB,EAAK9F,KAAKurB,SAASnxB,GAAS8wB,KAAK2C,GACpE,GAAqB,GAAjB+wH,EAAoB,CACpB,MAAMhxH,EAAmB36C,KAAK6yB,EAAK9F,KAAKurB,SAASnxB,GAAS6wB,SAAS2zH,EAAgB,GACnFttE,EAAM5c,OAAO,IAAIuP,GAAmBhxF,KAAK6yB,EAAM8nB,EAAS,EAAGr5C,EAAOwQ,aAAe9R,KAAK6yB,EAAK9F,KAAK4Z,aACnG,CACJ,CAEL3mC,KAAK6yB,EAAKi/D,OAAOuM,E,CAQlB,UAAA0iE,GACH,MAAM8K,EAAsC9tH,KAAKC,MAAM9mB,OAAO2tB,OAAOthD,aAAaC,QAAQ,mBAC1F,GAAqB,MAAjBqoK,EAAuB,OAC3B,MAAMe,EAA+Bf,EAAwB,UAAK,GAC5DgB,EAA6BhB,EAA4B,eAAM,EAE/DxtE,EAAqB,IAAI7c,GACzBsrF,EAA0B9sK,KAAK61G,kBAAoB,GAAK71G,KAAK+1G,mBAAqB,EAElFg3D,EAAsBD,EAAgB9sK,KAAK+1G,mBAAqB5qG,KAAKoC,IAAIq/J,EAAc/pK,OAAQ7C,KAAK6yB,EAAK9F,KAAKiK,kBAAoBh3B,KAAK81G,qBAC7I,IAAK,IAAIk3D,EAAuB,EAAGA,EAAeD,EAAaC,IAAgB,CAC3E,MAAMpB,EAA2BgB,EAAcI,EAAeJ,EAAc/pK,QACtEq3C,EAAuBl6C,KAAK81G,oBAAsBk3D,EAC/CC,EAAiBjtK,KAAK6yB,EAAK9F,KAAKotB,kBAAkBD,GAErDn6B,IAAqB6rJ,EAAqB,QAC1C3yH,IAAmB2yH,EAAmB,MAChDsB,GAAWntJ,IAAYk5B,EACbk0H,EAAyCvB,EAAsB,UAAK,GACpEwB,EAAuBxB,EAAkB,MAAK,GACpD,GAAyB,GAArBwB,EAAWvqK,OAAa,SAE5B,GAAIkd,GAAW/f,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBF,GAAe,SAC7D,GAAIjB,GAASj5C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBF,GAAe,SAI3D,MAAMmzH,EAAqBP,EAAgB9sK,KAAK61G,kBAAoB1qG,KAAKoC,IAAI6/J,EAAWvqK,OAAQ7C,KAAK6yB,EAAK9F,KAAKoJ,SAAWn2B,KAAK41G,iBAC/H,GAAKk3D,GAAsC,GAArBM,EAAWvqK,QAAuC,GAAxB+pK,EAAc/pK,OAqCvD,GAAI7C,KAAKo4F,uBAAwB,CACpC,MAAMwB,EAAuC,GACvC0zE,EAAoC,GAE1CjvE,EAAM5c,OAAO,IAAI8X,GAAsCv5F,KAAK6yB,EAAM7yB,KAAK41G,gBAAiBy3D,EAAYrtK,KAAK81G,oBAAqBi3D,IAE9H,IAAK,IAAIQ,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CAC9D,MAAM3yH,EAAc56C,KAAK41G,gBAAkB23D,EACrCC,EAA6BJ,EAAWG,EAAWH,EAAWvqK,UAAY,EAC1Eg3F,EAA8B75F,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAK2C,GACzE6yH,EAAsB,CAACD,EAAoB3zE,GAAqB90E,KAAK,KAC3E,GAA0B,GAAtByoJ,GAAkD,GAAvB3zE,EAA0B,SACzD,GAAqCrsE,MAAjCosE,EAAiB6zE,GAA2B,CAC5CpvE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM+mE,EAAiB6zE,GAAc7yH,EAAKV,EAAc,EAAG,IACtG,QACH,CAED,GAA2B,GAAvB2/C,EAA0B,CAC1BwE,EAAM5c,OAAO,IAAI0Q,GAA0BnyF,KAAK6yB,EAAMqnB,EAAcU,IACpE,MAAM6wH,EAA2B0B,EAAcj2I,OAAOs2I,IAChDE,EAA4B1tK,KAAKwrK,GAA4BC,EAAavxH,GAC1ES,EAAmB36C,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACjEyjD,EAAM5c,OAAO,IAAI8P,GAA4BvxF,KAAK6yB,EAAMqnB,EAAcwzH,EAAiB/yH,GAC1F,KAAM,CACH,MAAMA,EAA0B36C,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACxE,GAAe,MAAXD,EAAiB,MAAM,IAAIx4C,MAE/B,GAAKmrK,EAAap2I,OAAO2iE,IAElB,CAGHwE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM,EAAG+nB,EAAKV,EAAc,EAAG,IAC1EmkD,EAAM5c,OAAO,IAAI0Q,GAA0BnyF,KAAK6yB,EAAMqnB,EAAcU,IACpE,MAAMkJ,EAA6B9jD,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GAC3E,GAAkB,MAAdkJ,EAAoB,MAAM,IAAI3hD,MAClC,IAAK,MAAM+iC,KAAQyV,EAAQ1V,aAChBioI,GAAWD,IACV/nI,EAAKrB,QAAU7jC,KAAK+rK,GAAqB7mI,EAAKrB,UAE9Ew6D,EAAM5c,OAAO,IAAIkT,GAAgB30F,KAAK6yB,EAAMixB,EAAY5e,EAAM4e,EAAW/e,MAAMliC,QAAQ,GAItE,MAhBGyqK,EAAap2I,OAAO2iE,KAAwB,CAiBnD,CAED,MAAMl/C,EAA0B36C,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACxE,GAAe,MAAXD,EAAiB,MAAM,IAAIx4C,MAC/B,GAA0B,GAAtBqrK,EACAnvE,EAAM5c,OAAO,IAAIuP,GAAmBhxF,KAAK6yB,EAAM8nB,EAAS36C,KAAK83F,sBAAuB93F,KAAK+3F,0BACtF,CAEH,IAAI41E,EAD6BR,EAAcj2I,OAAOs2I,IACT,MACzCN,GAAWD,IACXU,EAAc3tK,KAAKksK,GAAqCyB,IAE5DtvE,EAAM5c,OAAO,IAAImP,GAAY5wF,KAAK6yB,EAAM8nB,EAASgzH,EAAa3tK,KAAK83F,sBAAuB93F,KAAK+3F,oBAAqB80E,GACvH,CAEDjzE,EAAiB6zE,GAAeztK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAK2C,EAC9E,CACJ,KAAM,CACH,IAAK,IAAI2yH,EAAmB,EAAGA,EAAWF,EAAYE,IAGlDvtK,KAAKoqK,kBAAkB/rE,EAAOnkD,EAAcl6C,KAAK41G,gBAAkB23D,GAGvE,MAAM3zE,EAAuC,GAC7C,IAAK,IAAI2zE,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CAC9D,MAAM3yH,EAAc56C,KAAK41G,gBAAkB23D,EACrCC,EAA6BJ,EAAWG,EAAWH,EAAWvqK,UAAY,EAC1E4qK,EAAsBv2I,OAAOs2I,GACnC,GAA0B,GAAtBA,EAAyB,SAC7B,GAAqChgJ,MAAjCosE,EAAiB6zE,GAA2B,CAC5CpvE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM+mE,EAAiB6zE,GAAc7yH,EAAKV,EAAc,EAAG,IACtG,QACH,CACD,MAAMuxH,EAA2B0B,EAAcj2I,OAAOs2I,IAChDE,EAA4B1tK,KAAKwrK,GAA4BC,EAAavxH,GAC1E0zH,EAAuC5tK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAclC,SAASw1H,EAAqB,GAEpH,IAAIG,EAAsBlC,EAAmB,MAK5D,GAJ0ByB,GAAWD,IACXU,EAAc3tK,KAAKksK,GAAqCyB,IAG3DngJ,MAAnBogJ,GACkBf,GAAsBvrK,EAAOwQ,aAAe9R,KAAK6yB,EAAK9F,KAAK4Z,aAC3DmwD,GAAoB62E,EAAaC,EAAgB7oI,QACjD+8C,GAA+B4rF,EAAiBE,EAAgB5oI,aAChEq5D,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM26I,EAAoB5yH,EAAKV,EAAc,EAAG,QACxF,CACoB1sB,MAAnBogJ,GAAgC5tK,KAAK0rK,GAAsBxxH,EAAcszH,GACzEnvE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM26I,EAAoB5yH,EAAKV,EAAc,EAAG,IAE3FmkD,EAAM5c,OAAO,IAAI0Q,GAA0BnyF,KAAK6yB,EAAMqnB,EAAcU,IAExE,MAAMD,EAA0B36C,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACxE,GAAe,MAAXD,EAAiB,MAAM,IAAIx4C,MAC/Bk8F,EAAM5c,OAAO,IAAImP,GAAY5wF,KAAK6yB,EAAM8nB,EAASgzH,EAAa3tK,KAAKo4F,uBAAyBp4F,KAAK83F,sBAAwB,EAAG93F,KAAKo4F,uBAAyBp4F,KAAK+3F,oBAAsBz2F,EAAOwQ,aAAe9R,KAAK6yB,EAAK9F,KAAK4Z,YAAakmI,IACvOxuE,EAAM5c,OAAO,IAAI8P,GAA4BvxF,KAAK6yB,EAAMqnB,EAAcwzH,EAAiB/yH,GAC1F,CAEDi/C,EAAiB6zE,GAAeztK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAK2C,EAE9E,CACJ,KAjJ0E,CAGvE,MAAM4yH,EAA6BJ,EAAW,KAAO,EAC/CxyH,EAAc56C,KAAK41G,gBACnB/b,EAA8B75F,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAK2C,GAC/E,GAA0B,GAAtB4yH,GAAkD,GAAvB3zE,EAA0B,SAEzD,MAAM4xE,EAA2B0B,EAAcj2I,OAAOs2I,IAEhDE,EAA4B1tK,KAAKwrK,GAA4BC,EAAavxH,GAE/E,IAAIyzH,EAAsBlC,EAAmB,MAK9C,GAJOyB,GAAWD,IACXU,EAAc3tK,KAAKksK,GAAqCyB,IAGpC,GAAvB9zE,EAA0B,CAC1B,MAAM+zE,EAAuC5tK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAclC,SAASw1H,EAAqB,GAC1FhgJ,MAAnBogJ,IACC5tK,KAAKo4F,yBACJtB,GAAoB62E,EAAaC,EAAgB7oI,QAAU+8C,GAA+B4rF,EAAiBE,EAAgB5oI,cACzHhlC,KAAK0rK,GAAsBxxH,EAAcszH,IAC7CnvE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM26I,EAAoB5yH,EAAKV,EAAc,EAAG,IAE3FmkD,EAAM5c,OAAO,IAAI0Q,GAA0BnyF,KAAK6yB,EAAMqnB,EAAcU,GAE3E,CAED,MAAMD,EAA0B36C,KAAK6yB,EAAK9F,KAAK48B,WAAWzP,EAAcU,GACxE,GAAe,MAAXD,EAAiB,MAAM,IAAIx4C,MAC/Bk8F,EAAM5c,OAAO,IAAImP,GAAY5wF,KAAK6yB,EAAM8nB,EAASgzH,EAAa3tK,KAAKo4F,uBAAyBp4F,KAAK83F,sBAAwB,EAAG93F,KAAKo4F,uBAAyBp4F,KAAK+3F,oBAAsBz2F,EAAOwQ,aAAe9R,KAAK6yB,EAAK9F,KAAK4Z,YAAakmI,KAE5M,GAAvBhzE,GAAwD,GAA5B4xE,EAAY1mI,MAAMliC,QAAeq3C,GAAgBl6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,qBAC/HltB,KAAKgjK,iBAAiB0K,EAAgB,IACtCrvE,EAAM5c,OAAO,IAAI8P,GAA4BvxF,KAAK6yB,EAAMqnB,EAAcwzH,EAAiB/yH,IAE9F,CA6GJ,CAED36C,KAAK6yB,EAAKi/D,OAAOuM,E,CAKd,iBAAA+rE,CAAkB/rE,EAAoBnkD,EAAsBU,GAC/D,MAAMizH,EAAyB7tK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAcjC,KAAK2C,GACpD,GAAlBizH,IACAxvE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM,EAAG+nB,EAAKV,EAAc,EAAG,IACtEl6C,KAAK0rK,GAAsBxxH,EAAc2zH,KAGzC7tK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAclC,SAAS61H,EAAiB,GAAG9oI,MAAMliC,OAAS,G,CAKvF,YAAAg+J,GACH,MAAMgL,EAAsC9tH,KAAKC,MAAM9mB,OAAO2tB,OAAOthD,aAAaC,QAAQ,mBAC1F,GAAqB,MAAjBqoK,EAAuB,OAC3B,MAAMe,EAA+Bf,EAAwB,UAAK,GAE5DxtE,EAAqB,IAAI7c,GACzBsrF,EAAyB9sK,KAAK21G,mBAE9Bo3D,EAAsBD,EAAgB9sK,KAAK+1G,mBAAqB5qG,KAAKoC,IAAIq/J,EAAc/pK,OAAQ7C,KAAK6yB,EAAK9F,KAAKiK,kBAAoBh3B,KAAK81G,qBAC7I,IAAK,IAAIk3D,EAAuB,EAAGA,EAAeD,EAAaC,IAAgB,CAC3E,MAAMpB,EAA2BgB,EAAcI,EAAeJ,EAAc/pK,QACtEq3C,EAAuBl6C,KAAK81G,oBAAsBk3D,EAElDI,EAAuBxB,EAAkB,MAAK,GACpD,GAAyB,GAArBwB,EAAWvqK,OAAa,SAE5B,MAAMwqK,EAAqBP,EAAgB9sK,KAAK61G,kBAAoB1qG,KAAKoC,IAAI6/J,EAAWvqK,OAAQ7C,KAAK6yB,EAAK9F,KAAKoJ,SAAWn2B,KAAK41G,iBAC/H,IAAK,IAAI23D,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CAC9D,MAAMC,EAA6BJ,EAAWG,EAAWH,EAAWvqK,UAAY,EAC1E+3C,EAAc56C,KAAK41G,gBAAkB23D,EAEvCC,EAAqBxtK,KAAK6yB,EAAK9F,KAAK0tB,oBACpC4jD,EAAM5c,OAAO,IAAIuQ,GAAyBhyF,KAAK6yB,EAAM26I,IAGzDnvE,EAAM5c,OAAO,IAAI0G,GAAqBnoF,KAAK6yB,EAAM26I,EAAoB5yH,EAAKV,EAAc,EAAG,GAC9F,CACJ,CAEDl6C,KAAK6yB,EAAKi/D,OAAOuM,E,CAGd,SAAAgiE,GACH,IAAIlqE,GAAuBn2F,KAAK6yB,EAAM,EAAG,GACb,GAAxB7yB,KAAK41G,iBACuB,GAA5B51G,KAAK81G,qBACL91G,KAAK61G,mBAAqB71G,KAAK6yB,EAAK9F,KAAKoJ,UACzCn2B,KAAK+1G,oBAAsB/1G,KAAK6yB,EAAK9F,KAAKiK,kBAC1Ch3B,KAAKk1I,kBAAkBl1I,KAAK6yB,EAAK+nB,IAAK56C,KAAK6yB,EAAK+nB,IAAK56C,KAAK6yB,EAAK1L,QAASnnB,KAAK6yB,EAAK1L,SAElFnnB,KAAKk1I,kBAAkB,EAAGl1I,KAAK6yB,EAAK9F,KAAKoJ,SAAW,EAAG,EAAGn2B,KAAK6yB,EAAK9F,KAAKiK,kBAAoB,GAEjGh3B,KAAKm1I,kB,CAGF,aAAAirB,GACH,IAAIjqE,GAAuBn2F,KAAK6yB,EAAM,EAAG,GACb,GAAxB7yB,KAAK41G,iBAAwB51G,KAAK61G,mBAAqB71G,KAAK6yB,EAAK9F,KAAKoJ,SACtEn2B,KAAKk1I,kBAAkBl1I,KAAK6yB,EAAK+nB,IAAK56C,KAAK6yB,EAAK+nB,IAAK56C,KAAK44F,eAAgB54F,KAAK64F,gBAE/E74F,KAAKk1I,kBAAkB,EAAGl1I,KAAK6yB,EAAK9F,KAAKoJ,SAAW,EAAGn2B,KAAK44F,eAAgB54F,KAAK64F,gBAErF74F,KAAKm1I,kB,CAGF,iBAAAmrB,GACHtgK,KAAK6yB,EAAKi/D,OAAO,IAAIyH,GAAsCv5F,KAAK6yB,EAAM7yB,KAAK41G,gBAAiB51G,KAAK61G,kBAAmB71G,KAAK81G,oBAAqB91G,KAAK+1G,oB,CAGhJ,YAAA0qD,CAAaqN,GAChB,GAAIA,EAAa,CACb,IAAIC,GAAoB,EACxB,IAAK,IAAI7zH,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKurB,SAASz1C,OAAQq3C,IAC9E,GAAIl6C,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,MAAO,CAC7C61H,GAAW,EACX,KACH,CAEL,IAAK,IAAI7zH,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKurB,SAASz1C,OAAQq3C,IAC9El6C,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,OAAS61H,CAEtD,KAAM,CACH,IAAIC,GAAsB,EAC1B,IAAK,MAAM9zH,KAAgBl6C,KAAKorK,KAC5B,IAAKprK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,MAAO,CAC9C81H,GAAa,EACb,KACH,CAEL,IAAK,MAAM9zH,KAAgBl6C,KAAKorK,KAC5BprK,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,MAAQ81H,CAErD,CAEDhuK,KAAK6yB,EAAKoD,SAASC,S,CAGhB,YAAA0qI,CAAazzD,GAChB,IAAI8gE,GAAyB,EAG7B,GAAIjuK,KAAK81G,qBAAuB91G,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmB,CAEjG,MAAMghJ,EAAiBluK,KAAK6yB,EAAK9F,KAAKurB,SAASt4C,KAAK81G,qBAC9Cl7D,EAAcszH,EAAej2H,KAAKj4C,KAAK6yB,EAAK+nB,KAAO,EACnDzB,EAAiByB,GAAO,EAAKszH,EAAelpI,YAAYkpI,EAAel2H,SAAS4C,GAAK5V,YAAY,IAAMkpI,EAAelpI,YAAYhlC,KAAK6yB,EAAKy1D,iBAAiBtoF,KAAK81G,sBAClKq4D,EAAyB,GAC/B,IAAIC,GAA+BjhE,EAGnC,IAAK,IAAIjzD,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBgtB,IAAgB,CACnIi0H,EAAYj0H,IAAgB,EAC5B,IAAK,IAAI3U,EAAc,EAAGA,EAAMjkC,EAAOyY,SAAUwrB,IACzC4T,EAAcvxB,YAAY2d,IAAQ2U,IAClCi0H,EAAYj0H,IAAgB,EAGvC,CAGD,IAAK,IAAIA,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBgtB,IACnH,GAAIl6C,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,OAASi2H,EAAYj0H,GAAe,CAC1Ek0H,EAAqBjhE,EACrB,KACH,CAIL,IAAK,IAAIjzD,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBgtB,IAE/Gl6C,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,OADtCk2H,IAI+CD,EAAYj0H,EAItE,KACI,CAED,IAAK,IAAIA,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBgtB,IAAgB,CACnI,MAAMm0H,EAA0Bn0H,EAAel6C,KAAK81G,qBAAuB57D,GAAgBl6C,KAAK81G,oBAAsB91G,KAAK+1G,oBAAuB5I,EAASA,EAC3J,GAAIntG,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,OAASm2H,EAAe,CAC9DJ,GAAgB,EAChB,KACH,CACJ,CAED,GAAIA,EACA,IAAK,IAAI/zH,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKurB,SAASz1C,OAAQq3C,IAC9El6C,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,OAAQ,OAGlD,IAAK,IAAIgC,EAAuB,EAAGA,EAAel6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmBgtB,IACnHl6C,KAAK6yB,EAAK9F,KAAKurB,SAAS4B,GAAchC,MAASgC,EAAel6C,KAAK81G,qBAAuB57D,GAAgBl6C,KAAK81G,oBAAsB91G,KAAK+1G,oBAAuB5I,EAASA,CAIrL,CAEDntG,KAAK6yB,EAAKoD,SAASC,S,CAGhB,WAAAmsI,GACH,MAAMhkE,EAAqB,IAAI7c,GAE3BxhF,KAAK21G,oBACXtX,EAAM5c,OAAO,IAAI8X,GAAsCv5F,KAAK6yB,EAAM7yB,KAAK41G,gBAAiB51G,KAAK61G,kBAAmB71G,KAAK81G,oBAAqB91G,KAAK+1G,qBAG7I,IAAK,MAAM77D,KAAgBl6C,KAAKorK,KAC5B,IAAK,MAAMzwH,KAAW36C,KAAKqrK,GAAqBnxH,GAC5CmkD,EAAM5c,OAAO,IAAI0S,GAAoBn0F,KAAK6yB,EAAM8nB,IAIxD36C,KAAK6yB,EAAKi/D,OAAOuM,E,CAGd,UAAA6jE,GACH,MAAM7jE,EAAqB,IAAI7c,GAE3BxhF,KAAK21G,oBACXtX,EAAM5c,OAAO,IAAI8X,GAAsCv5F,KAAK6yB,EAAM7yB,KAAK41G,gBAAiB51G,KAAK61G,kBAAmB71G,KAAK81G,oBAAqB91G,KAAK+1G,qBAG7I,MAAMu4D,EAAwB,EAAC,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC3G,IAAK,MAAMp0H,KAAgBl6C,KAAKorK,KAC5B,IAAIprK,KAAK6yB,EAAK9F,KAAKotB,kBAAkBD,KAAiBl6C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBF,GACrF,IAAK,MAAMS,KAAW36C,KAAKqrK,GAAqBnxH,GAC5CqoC,GAAiB5nC,EAAS2zH,GAIlC,MAAMp0E,E,S3CpuBmBq0E,EAAuCC,EAAuBC,GAC3F,MAAMC,EAAwCF,GAAiBltK,EAAO4O,OAAmB,WAAU,OAAEpL,MAAQ2pK,EAAmBntK,EAAO4O,OAAOs+J,GAAep+J,MAC1Ju+J,EAAqB,GACrBC,EAAqB,GAC3B,IAAK,IAAI/jK,EAAY,EAAGA,EAAI,GAAIA,IAC3B0jK,EAAc1jK,IAAI8jK,EAAS5jK,KAAKF,GAChC6jK,EAAc7jK,IAAI+jK,EAAS7jK,KAAKF,GAErC,MAAMgkK,EAA2BF,EAAS9rK,OAAS+rK,EAAS/rK,OACtDisK,EAAyBD,EAAkBD,EAAWD,EACtDI,EAAwBF,EAAkBF,EAAWC,EAElDI,EAAkB,CAAC,OAAQ,SAAU,SAAU,QAAS,QAAS,SAAU,UAAW,QAAS,QAAS,QAAS,UAAW,UAAW,QAC7I,IAAIC,EAAoBtnJ,OAAOmhG,iBAC3BomD,EAAyB,GAC7B,MAAMC,EAAoB,CAAC,CAAC,IAE5B,KAAOA,EAAMtsK,OAAS,GAAG,CACrB,MAAMusK,EAAqBD,EAAMvzI,MAEjC,GAAIwzI,EAASvsK,QAAUisK,EAAajsK,OAAQ,CAExC,IAAIwsK,EAAgB,EACpB,IAAK,IAAIxkK,EAAY,EAAGA,EAAIukK,EAASvsK,OAAQgI,IACzCwkK,GAASlkK,KAAKC,IAAI0jK,EAAajkK,GAAKkkK,EAAYK,EAASvkK,KACrDmkK,EAAMF,EAAajkK,KAAOmkK,EAAMD,EAAYK,EAASvkK,OAErDwkK,GAAS,KAGbJ,EAAYI,IACZJ,EAAYI,EACZH,EAAeE,EAEtB,KAAM,CAEH,MAAM/hK,EAAmB+hK,EAASA,EAASvsK,OAAS,GAAK,EACnDyK,EAAoByhK,EAAYlsK,OAASisK,EAAajsK,OAASusK,EAASvsK,OAC9E,IAAK,IAAIgI,EAAYwC,EAAUxC,GAAKyC,EAAWzC,IAC3CskK,EAAMpkK,KAAKqkK,EAAS14J,OAAO7L,GAElC,CACJ,CAED,MAAMykK,EAA6B,GACnC,IAAK,IAAIzkK,EAAY,EAAGA,EAAIqkK,EAAarsK,OAAQgI,IAAK,CAClD,MAAM0kK,EAAoBT,EAAajkK,GACjC2kK,EAAmBT,EAAYG,EAAarkK,IAClDykK,EAAezkK,GAAKgkK,EACd,CAACW,EAAkBD,GACnB,CAACA,EAAmBC,EAC7B,CAGDF,EAAevkK,KAAK,CAAC,GAAI,KACzB6jK,EAAS7jK,KAAK,IAEd,IAAI0kK,EAAsB,EAC1B,MAAMC,EAAyB,GAC/B,IAAK,IAAI7kK,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACjC,MAAM8kK,EAAiBL,EAAeG,GAAa,GAC7CG,EAAiBN,EAAeG,GAAa,GAC7CI,EAAkBP,EAAeG,EAAc,GAAG,GAClDK,EAAkBR,EAAeG,EAAc,GAAG,GACpD5kK,GAAKglK,EAAU,GAAGJ,IAEtB,MAAMp1E,GAA4BxvF,EAAI8kK,IAAWG,EAAUF,IAAWC,EAAUF,GAAUC,EAE1F,IAAI7kD,EAAuB,EACvBglD,EAA+BpoJ,OAAOmhG,iBAC1C,IAAK,MAAMknD,KAAYpB,EAAU,CAC7B,IAAIlrE,EAAmBv4F,KAAKC,IAAI4kK,EAAW31E,GACvC20E,EAAMgB,IAAahB,EAAMnkK,KAEzB64F,GAAY,IAEZqsE,EAAuBrsE,IACvBqsE,EAAuBrsE,EACvBqnB,EAAeilD,EAEtB,CAEDN,EAAa7kK,GAAKkgH,CACrB,CAED,OAAO2kD,CACX,C2C8oBmCO,CAAiB3B,EAAYtuK,KAAK6yB,EAAK9F,KAAKutB,MAAOt6C,KAAK6yB,EAAK9F,KAAKsrB,aAE7F,IAAK,MAAM6B,KAAgBl6C,KAAKorK,KAC5B,IAAIprK,KAAK6yB,EAAK9F,KAAKotB,kBAAkBD,KAAiBl6C,KAAK6yB,EAAK9F,KAAKqtB,gBAAgBF,GACrF,IAAK,MAAMS,KAAW36C,KAAKqrK,GAAqBnxH,GAC5CmkD,EAAM5c,OAAO,IAAIwY,GAAmBj6F,KAAK6yB,EAAM8nB,EAASu/C,IAIhEl6F,KAAK6yB,EAAKi/D,OAAOuM,E,CAGd,iBAAA62C,CAAkB58C,EAAeC,EAAeC,EAAeC,GAElEz4F,KAAKyqK,GAAe,IAAIjpF,GACxBxhF,KAAKyqK,GAAahpF,OAAO,IAAI4W,GAAqBr4F,KAAK6yB,EAAMylE,EAAOC,EAAOC,EAAOC,IAClFz4F,KAAK6yB,EAAKi/D,OAAO9xF,KAAKyqK,IAHgB,E,CAMnC,SAAAtxE,CAAUlB,EAAiBj2D,GAC9B,MAAMw4F,EAAgCx6H,KAAK6yB,EAAKmwE,cAAchjG,KAAKwqK,IACnExqK,KAAKwqK,GAAmB,IAAIhpF,GAExBxhF,KAAK21G,oBACX31G,KAAKwqK,GAAiB/oF,OAAO,IAAI8X,GAAsCv5F,KAAK6yB,EAAM7yB,KAAK41G,gBAAiB51G,KAAK61G,kBAAmB71G,KAAK81G,oBAAqB91G,KAAK+1G,qBAG7J,IAAK,MAAM77D,KAAgBl6C,KAAKorK,KAElC,KAAIlxH,GAAgBl6C,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,mBAEhE,IAAK,MAAMytB,KAAW36C,KAAKqrK,GAAqBnxH,GAC5Cl6C,KAAKwqK,GAAiB/oF,OAAO,IAAIqU,GAAgB91F,KAAK6yB,EAAMqnB,EAAcS,EAASs9C,EAAQj4F,KAAK6yB,EAAKwjE,MAAMiD,kBAAmBt3D,IAItIhiC,KAAK6yB,EAAKi/D,OAAO9xF,KAAKwqK,GAAkBhwC,E,CAGrC,YAAA2mC,CAAazrJ,GAChB,MAAMw6J,EAAsC,CACxClwK,KAAK6yB,EAAK9F,KAAKE,kBACfjtB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAClDltB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAoBltB,KAAK6yB,EAAK9F,KAAK+sB,gBACrF95C,KAAK6yB,EAAK9F,KAAKiK,mBAEnB,IAAIm5I,EAA4B,EAC5BC,EAA4B,EAChC,IAAK,MAAMC,KAAgBH,EAA2B,CAClD,GAAKlwK,KAAK81G,oBAAsBu6D,GAAgB36J,EAAS,GAAO1V,KAAK81G,oBAAsB91G,KAAK+1G,oBAAsBs6D,EAAe,CACjID,EAAoBC,EAAe,EACnC,KACH,CACDF,EAAoBE,CACvB,CACD,MAAMC,EAA0BnlK,KAAK2L,IAAI9W,KAAK81G,oBAAqBq6D,GAC7DI,EAA0BplK,KAAKoC,IAAIvN,KAAK81G,oBAAsB91G,KAAK+1G,mBAAqB,EAAGq6D,GAIjG,GAHA16J,EAASvK,KAAK2L,IAAIpB,EAAQy6J,EAAoBG,GAGhC,IAFd56J,EAASvK,KAAKoC,IAAImI,EAAQ06J,EAAoBG,IAE7B,CACb,MAAM/1C,EAAgCx6H,KAAK6yB,EAAKmwE,cAAchjG,KAAK2qK,IACnE3qK,KAAK2qK,GAAiB,IAAInpF,GAC1BxhF,KAAK44F,eAAiB03E,EAAkB56J,EACxC1V,KAAK64F,eAAiB03E,EAAkB76J,EACxC1V,KAAK2qK,GAAelpF,OAAO,IAAIqH,GAAmB9oF,KAAK6yB,EAAMy9I,EAAiBC,EAAiB76J,IAC/F1V,KAAK2qK,GAAelpF,OAAO,IAAI6I,GAAiBtqF,KAAK6yB,EAAM1nB,KAAK2L,IAAI9W,KAAK44F,eAAgBztF,KAAKoC,IAAIvN,KAAK64F,eAAgB74F,KAAK6yB,EAAK1L,QAAUzR,IAAU1V,KAAK6yB,EAAK+nB,MAC/J56C,KAAKm1I,mBACLn1I,KAAK6yB,EAAKi/D,OAAO9xF,KAAK2qK,GAAgBnwC,EACzC,C,CAGE,gBAAAwoC,CAAiBpkJ,GACpB,GAAI5e,KAAK6yB,EAAKy1D,iBAAiBtoF,KAAK6yB,EAAK1L,UAAYvI,GAEjD,GAAI5e,KAAK6yB,EAAK9F,KAAKitB,oBAAsBh6C,KAAK6yB,EAAK9F,KAAKqZ,oBAAsBpmC,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,kBAAmB,CACnK,MAAMstG,EAAgCx6H,KAAK6yB,EAAKmwE,cAAchjG,KAAK0qK,IACnE1qK,KAAK0qK,GAAoB,IAAIlpF,GAC7B,MAAMx8C,EAAwBhlC,KAAK6yB,EAAK8/D,yBAAyB3yF,KAAK6yB,EAAK1L,SAC3E,IAAwC,GAApC6d,EAAY/I,QAAQrd,GAAmB,CACvComB,EAAYj6B,KAAK6T,GACjB,MAAM4xJ,EAAoBxwK,KAAK6yB,EAAK9F,KAAKktB,4BAA4Bj6C,KAAK6yB,EAAK1L,SAC3E6d,EAAYniC,OAAS2tK,GACrBxrI,EAAY9I,OAAO,EAAG8I,EAAYniC,OAAS2tK,EAElD,MACGxrI,EAAY9I,OAAO8I,EAAY/I,QAAQrd,GAAa,GAC1B,GAAtBomB,EAAYniC,SAAamiC,EAAY,GAAK,GAG9ChlC,KAAK21G,oBACL31G,KAAK0qK,GAAkBjpF,OAAO,IAAI8X,GAAsCv5F,KAAK6yB,EAAM7yB,KAAK41G,gBAAiB51G,KAAK61G,kBAAmB71G,KAAK81G,oBAAqB91G,KAAK+1G,qBAEpK,IAAK,MAAM77D,KAAgBl6C,KAAKorK,KAC5B,IAAK,MAAMzwH,KAAW36C,KAAKqrK,GAAqBnxH,GAC5Cl6C,KAAK0qK,GAAkBjpF,OAAO,IAAI8P,GAA4BvxF,KAAK6yB,EAAMqnB,EAAclV,EAAa2V,IAGvG36C,KAAK0qK,GAAkB7pF,UACtC7gF,KAAK6yB,EAAKi/D,OAAO9xF,KAAK0qK,GAAmBlwC,EAClC,MACE,CACH,MAAMA,EAAgCx6H,KAAK6yB,EAAKmwE,cAAchjG,KAAK0qK,IAInE,GAHA1qK,KAAK0qK,GAAoB,IAAIlpF,GAC7BxhF,KAAK0qK,GAAkBjpF,OAAO,IAAIsO,GAAqB/vF,KAAK6yB,EAAMjU,IAE5D5e,KAAK6yB,EAAK9F,KAAKitB,oBAAsBh6C,KAAK6yB,EAAK1L,QAAUnnB,KAAK6yB,EAAK9F,KAAKE,kBAAoBjtB,KAAK6yB,EAAK9F,KAAKG,oBAAsBltB,KAAK6yB,EAAK9F,KAAKqZ,mBAW1IpmC,KAAK6yB,EAAKk4I,kBAElB/qK,KAAK6yB,EAAKi/D,OAAO9xF,KAAK0qK,GAAmBlwC,OAb6H,CAClKx6H,KAAK21G,oBACL31G,KAAK0qK,GAAkBjpF,OAAO,IAAI8X,GAAsCv5F,KAAK6yB,EAAM7yB,KAAK41G,gBAAiB51G,KAAK61G,kBAAmB71G,KAAK81G,oBAAqB91G,KAAK+1G,qBAEpK,MAAM/wE,EAAwB,CAACpmB,GAC/B,IAAK,MAAMs7B,KAAgBl6C,KAAKorK,KAC5B,IAAK,MAAMzwH,KAAW36C,KAAKqrK,GAAqBnxH,GAC5Cl6C,KAAK0qK,GAAkBjpF,OAAO,IAAI8P,GAA4BvxF,KAAK6yB,EAAMqnB,EAAclV,EAAa2V,IAG5G36C,KAAK6yB,EAAKi/D,OAAO9xF,KAAK0qK,GAAmBlwC,EAC5C,CAIJ,C,CAGE,iBAAApkC,GACHp2F,KAAK04F,eAAiB14F,KAAK24F,eAAiB34F,KAAK6yB,EAAK+nB,IACtD56C,KAAK44F,eAAiB54F,KAAK64F,eAAiB74F,KAAK6yB,EAAK1L,O,QC54BjDspJ,GAkCZ,WAAA1wK,GAbOC,KAAM2hB,OAAW,GACjB3hB,KAAAwgK,eAAyBiQ,GAAYC,sBAa3C1wK,KAAKglD,Q,CAGC,MAAAA,GACNhlD,KAAK07J,SAAsD,QAA3C72G,OAAOthD,aAAaC,QAAQ,YAC5CxD,KAAK82H,WAA0D,SAA7CjyE,OAAOthD,aAAaC,QAAQ,cAC9CxD,KAAKuiI,kBAAwE,SAApD19E,OAAOthD,aAAaC,QAAQ,qBACrDxD,KAAKmjH,UAAwD,QAA5Ct+D,OAAOthD,aAAaC,QAAQ,aAC7CxD,KAAKs5F,kBAAwE,QAApDz0C,OAAOthD,aAAaC,QAAQ,qBACrDxD,KAAK0pI,YAA4D,QAA9C7kF,OAAOthD,aAAaC,QAAQ,eAC/CxD,KAAKknI,aAA8D,QAA/CriF,OAAOthD,aAAaC,QAAQ,gBAChDxD,KAAK+6J,cAAgE,QAAhDl2G,OAAOthD,aAAaC,QAAQ,iBACjDxD,KAAKwmI,kBAAwE,QAApD3hF,OAAOthD,aAAaC,QAAQ,qBACrDxD,KAAKg7J,iBAAsE,QAAnDn2G,OAAOthD,aAAaC,QAAQ,oBACpDxD,KAAK2wK,oBAA4E,QAAtD9rH,OAAOthD,aAAaC,QAAQ,uBACvDxD,KAAKm5H,oBAA4E,QAAtDt0E,OAAOthD,aAAaC,QAAQ,uBACvDxD,KAAK27J,kBAAwE,SAApD92G,OAAOthD,aAAaC,QAAQ,qBACrDxD,KAAK6vI,yBAAsF,QAA3DhrF,OAAOthD,aAAaC,QAAQ,4BAC5DxD,KAAKy7H,WAA0D,SAA7C52E,OAAOthD,aAAaC,QAAQ,cAC9CxD,KAAK8vI,iBAAsE,QAAnDjrF,OAAOthD,aAAaC,QAAQ,oBACpDxD,KAAK+vI,0BAAwF,QAA5DlrF,OAAOthD,aAAaC,QAAQ,6BAC7DxD,KAAKgwI,+BAAkG,QAAjEnrF,OAAOthD,aAAaC,QAAQ,kCAClExD,KAAKiwI,iBAAsE,SAAnDprF,OAAOthD,aAAaC,QAAQ,oBACpDxD,KAAKkwI,wBAAoF,SAA1DrrF,OAAOthD,aAAaC,QAAQ,2BAC3DxD,KAAKi7J,iBAAsE,SAAnDp2G,OAAOthD,aAAaC,QAAQ,oBACpDxD,KAAKk7J,wBAAoF,SAA1Dr2G,OAAOthD,aAAaC,QAAQ,2BAC3DxD,KAAKo8H,eAAiBv3E,OAAOthD,aAAaC,QAAQ,mBAAqB,cACvExD,KAAK6hH,OAASh9D,OAAOthD,aAAaC,QAAQ,WAAa,QACvDxD,KAAKwxI,WAAa3sF,OAAOthD,aAAaC,QAAQ,eAAiB,mBAC/DxD,KAAK4wK,YAAc/rH,OAAOthD,aAAaC,QAAQ,eACjCxD,KAAK6wK,aAAehsH,OAAOthD,aAAaC,QAAQ,gBAC9DxD,KAAKwgK,eAAwB37G,OAAOthD,aAAaC,QAAQ,oBAAuB,GAAMitK,GAAYC,sBAElG,MAAMp6E,EAAkCh1F,EAAO4O,OAAOlL,WAAW6/C,OAAOthD,aAAaC,QAAQ,iBAC7FxD,KAAKs2F,aAAgC9oE,MAAhB8oE,EAA6BA,EAAaxxF,MAAQ,EAE1B,MAAzC+/C,OAAOthD,aAAaC,QAAQ,YAC/BxD,KAAK2hB,OAASxW,KAAKoC,IAASs3C,OAAOthD,aAAaC,QAAQ,YAAc,EAAG,KAGzB,MAA7CqhD,OAAOthD,aAAaC,QAAQ,gBACkB,QAA7CqhD,OAAOthD,aAAaC,QAAQ,gBAAyBxD,KAAK6hH,OAAS,QACvEh9D,OAAOthD,aAAagrI,WAAW,c,CAI1B,IAAAl1B,GACNx0D,OAAOthD,aAAa+5F,QAAQ,WAAYt9F,KAAK07J,SAAW,OAAS,SACjE72G,OAAOthD,aAAa+5F,QAAQ,aAAct9F,KAAK82H,WAAa,OAAS,SACrEjyE,OAAOthD,aAAa+5F,QAAQ,oBAAqBt9F,KAAKuiI,kBAAoB,OAAS,SACnF19E,OAAOthD,aAAa+5F,QAAQ,YAAat9F,KAAKmjH,UAAY,OAAS,SACnEt+D,OAAOthD,aAAa+5F,QAAQ,oBAAqBt9F,KAAKs5F,kBAAoB,OAAS,SACnFz0C,OAAOthD,aAAa+5F,QAAQ,eAAgBh8F,EAAO4O,OAAOlQ,KAAKs2F,cAAc9xF,MAC7EqgD,OAAOthD,aAAa+5F,QAAQ,cAAet9F,KAAK0pI,YAAc,OAAS,SACvE7kF,OAAOthD,aAAa+5F,QAAQ,eAAgBt9F,KAAKknI,aAAe,OAAS,SACzEriF,OAAOthD,aAAa+5F,QAAQ,gBAAiBt9F,KAAK+6J,cAAgB,OAAS,SAC3El2G,OAAOthD,aAAa+5F,QAAQ,oBAAqBt9F,KAAKwmI,kBAAoB,OAAS,SACnF3hF,OAAOthD,aAAa+5F,QAAQ,mBAAoBt9F,KAAKg7J,iBAAmB,OAAS,SACjFn2G,OAAOthD,aAAa+5F,QAAQ,sBAAuBt9F,KAAKm5H,oBAAsB,OAAS,SACvFt0E,OAAOthD,aAAa+5F,QAAQ,sBAAuBt9F,KAAK2wK,oBAAsB,OAAS,SACvF9rH,OAAOthD,aAAa+5F,QAAQ,oBAAqBt9F,KAAK27J,kBAAoB,OAAS,SACnF92G,OAAOthD,aAAa+5F,QAAQ,2BAA4Bt9F,KAAK6vI,yBAA2B,OAAS,SACjGhrF,OAAOthD,aAAa+5F,QAAQ,aAAct9F,KAAKy7H,WAAa,OAAS,SACrE52E,OAAOthD,aAAa+5F,QAAQ,mBAAoBt9F,KAAK8vI,iBAAmB,OAAS,SACjFjrF,OAAOthD,aAAa+5F,QAAQ,4BAA6Bt9F,KAAK+vI,0BAA4B,OAAS,SACnGlrF,OAAOthD,aAAa+5F,QAAQ,iCAAkCt9F,KAAKgwI,+BAAiC,OAAS,SAC7GnrF,OAAOthD,aAAa+5F,QAAQ,mBAAoBt9F,KAAKiwI,iBAAmB,OAAS,SACjFprF,OAAOthD,aAAa+5F,QAAQ,0BAA2Bt9F,KAAKkwI,wBAA0B,OAAS,SAC/FrrF,OAAOthD,aAAa+5F,QAAQ,mBAAoBt9F,KAAKi7J,iBAAmB,OAAS,SACjFp2G,OAAOthD,aAAa+5F,QAAQ,0BAA2Bt9F,KAAKk7J,wBAA0B,OAAS,SAC/Fr2G,OAAOthD,aAAa+5F,QAAQ,iBAAkBt9F,KAAKo8H,gBACnDv3E,OAAOthD,aAAa+5F,QAAQ,SAAUt9F,KAAK6hH,QAC3Ch9D,OAAOthD,aAAa+5F,QAAQ,aAAct9F,KAAKwxI,YAC/C3sF,OAAOthD,aAAa+5F,QAAQ,cAAet9F,KAAK4wK,aAClC/rH,OAAOthD,aAAa+5F,QAAQ,eAAgBt9F,KAAK6wK,cAC/DhsH,OAAOthD,aAAa+5F,QAAQ,SAAUpmE,OAAOl3B,KAAK2hB,SAClDkjC,OAAOthD,aAAa+5F,QAAQ,iBAAkBpmE,OAAOl3B,KAAKwgK,gB,EA9GpCiQ,GAAqBC,sBAAW,E,MCH3CI,GAAb,WAAA/wK,GACSC,KAAS+wK,GAAmB,GAC5B/wK,KAAMgxK,IAAY,C,CAEnB,KAAAt6C,CAAMu6C,IAC4B,GAApCjxK,KAAK+wK,GAAU90I,QAAQg1I,IAC1BjxK,KAAK+wK,GAAUhmK,KAAKkmK,E,CAIf,OAAAC,CAAQD,GACd,MAAMnsK,EAAgB9E,KAAK+wK,GAAU90I,QAAQg1I,IAC/B,GAAVnsK,GACH9E,KAAK+wK,GAAU70I,OAAOp3B,EAAO,E,CAIxB,OAAAoxB,GACNl2B,KAAKgxK,IAAS,C,CAGR,cAAAlvC,GACN,GAAK9hI,KAAKgxK,GAAV,CACAhxK,KAAKgxK,IAAS,EACd,IAAK,MAAMC,KAAWjxK,KAAK+wK,GAAUr6J,SACpCu6J,GAHiB,C,QCEPE,GAmCZ,WAAApxK,GA9BgBC,KAAAi2B,SAA2B,IAAI66I,GAC/B9wK,KAAAyqF,UAAuB,IAAI8/E,GAAUvqK,MACrCA,KAAAq2F,MAAqB,IAAIo6E,GAClCzwK,KAAOmnB,QAAW,EAClBnnB,KAAiB06F,kBAAW,EAC5B16F,KAAG46C,IAAW,EAEd56C,KAAwB2yF,yBAAe,GACvC3yF,KAAgBsoF,iBAAa,GAE7BtoF,KAAgBy1B,iBAAW,GAC3Bz1B,KAAoBi3B,qBAAW,EAC/Bj3B,KAAY40B,aAAW,EACvB50B,KAAgB+2B,iBAAW,EAC3B/2B,KAAMu9F,OAAkB,KAExBv9F,KAAWk/J,aAAY,EACvBl/J,KAAas/J,eAAY,EACzBt/J,KAAqBiiI,uBAAY,EAGhCjiI,KAAAoxK,GAA0B,IAAIrkC,GAE9B/sI,KAAaqxK,GAAkB,KAC/BrxK,KAAesxK,GAAW,EAC1BtxK,KAAmBuxK,GAAW,EAC9BvxK,KAAoBwxK,IAAY,EAChCxxK,KAAgByxK,IAAY,EAC7BzxK,KAAqB0xK,IAAY,EA+IhC1xK,KAAwB2xK,GAAG,KAMlC,GALI3xK,KAAK00B,MAAM0xC,WAEdpmE,KAAKqqE,YAAYu/F,iBAGU,MAAxB/kH,OAAO+sH,QAAQz2C,OAAyC,IAAxBt2E,OAAOC,SAASpd,KAAY,CAE/D1nC,KAAKsxK,KACLtxK,KAAK6xK,KACL,MAAM12C,EAAsB,CAAC22C,SAAS,EAAMC,eAAgB/xK,KAAKsxK,GAAiB12H,IAAK56C,KAAK46C,IAAKzzB,QAASnnB,KAAKmnB,QAASvI,WAAY5e,KAAKsoF,iBAAiBtoF,KAAKmnB,SAAU6qJ,YAAahyK,KAAKiyK,GAAc10E,OAAQ,KAAM9S,UAAWzqF,KAAKyqF,UAAUmgF,UAajP,OAZA,IAAI30E,GAAWj2F,KAAM6kD,OAAOC,SAASpd,MACrC1nC,KAAKu9F,OAAS49B,EAAM59B,OAChBv9F,KAAKq2F,MAAMslE,kBACd37J,KAAKkyK,GAAc/2C,EAAOn7H,KAAK+sB,KAAK8tB,kBAEpC76C,KAAKmyK,GAAWh3C,EAAOn7H,KAAK+sB,KAAK8tB,kBAElC76C,KAAKoyK,mBACLpyK,KAAKi2B,SAAS6rG,iBAEd9hI,KAAK00B,MAAMi3C,aACX3rE,KAAK00B,MAAM+3C,QAAQ,EAEnB,CAED,MAAM0uD,EAA6Bn7H,KAAKqyK,KACxC,GAAa,MAATl3C,EAAe,MAAM,IAAIh5H,MAAM,0BAG/Bg5H,EAAM42C,gBAAkB/xK,KAAKsxK,KAEjCtxK,KAAK46C,IAAMugF,EAAMvgF,IACjB56C,KAAKmnB,QAAUg0G,EAAMh0G,QACrBnnB,KAAKsoF,iBAAiBtoF,KAAKmnB,SAAWg0G,EAAMv8G,WAC5C5e,KAAKsxK,GAAkBn2C,EAAM42C,eAC7B/xK,KAAKu9F,OAAS49B,EAAM59B,OACpB,IAAItH,GAAWj2F,KAAMA,KAAKsyK,MAE1BtyK,KAAKiyK,GAAe92C,EAAM62C,YAC1BhyK,KAAKyqF,UAAUogF,SAAS1vC,EAAM1wC,WAI9BzqF,KAAKoyK,mBACLpyK,KAAKi2B,SAAS6rG,iBAAgB,EAGvB9hI,KAAcuyK,GAAG,KACxBvyK,KAAKi2B,SAAS6rG,gBAAgB,EAGvB9hI,KAAiBwyK,GAAG,KAC3B,MAAM7xH,EAAuB3gD,KAAK+sB,KAAKiK,kBACvC,IAAK,IAAInsB,EAAY7K,KAAK2yF,yBAAyB9vF,OAAQgI,EAAI81C,EAAc91C,IAC5E7K,KAAK2yF,yBAAyB9nF,GAAK,CAAC,GAErC7K,KAAK2yF,yBAAyB9vF,OAAS89C,EACvC,IAAK,IAAI91C,EAAY,EAAGA,EAAI81C,EAAc91C,IAAK,CAC9C,GAAIA,GAAK7K,KAAKmnB,QACb,GAAInnB,KAAK+sB,KAAKqZ,mBAAoB,CACjC,MAAMuU,EAA0B36C,KAAK+sB,KAAK48B,WAAW3pD,KAAKmnB,QAASnnB,KAAK46C,KACzD,MAAXD,IACH36C,KAAK2yF,yBAAyB9nF,GAAK8vC,EAAQ3V,YAAYtuB,SAExD,KAAM,CACN,MAAMyQ,EAAmBnnB,KAAK+sB,KAAKurB,SAASt4C,KAAKmnB,SACjD,IAAK,IAAI8S,EAAY,EAAGA,EAAI9S,EAAQ6d,YAAYniC,OAAQo3B,IACvDj6B,KAAK2yF,yBAAyB9nF,GAAGovB,GAAKA,EAEvCj6B,KAAK2yF,yBAAyB9nF,GAAGhI,OAASskB,EAAQ6d,YAAYniC,MAC9D,CAEFu/E,GAAiCpiF,KAAK2yF,yBAAyB9nF,GAAI7K,KAAK+sB,KAAMliB,EAC9E,CAED,IAAK,IAAIA,EAAY7K,KAAKsoF,iBAAiBzlF,OAAQgI,EAAI81C,EAAc91C,IACpE7K,KAAKsoF,iBAAiBz9E,GAAK,EAE5B7K,KAAKsoF,iBAAiBzlF,OAAS89C,EAC/B,IAAK,IAAI91C,EAAY,EAAGA,EAAI81C,EAAc91C,IAAK,CAC9C,GAAI7K,KAAK+sB,KAAKqZ,qBAAuBpmC,KAAK+sB,KAAKitB,oBAAsBnvC,GAAK7K,KAAKmnB,QAAS,CACvF,MAAMwzB,EAA0B36C,KAAK+sB,KAAK48B,WAAW3pD,KAAKmnB,QAASnnB,KAAK46C,KACzD,MAAXD,IACH36C,KAAKsoF,iBAAiBz9E,GAAK8vC,EAAQ3V,YAAY,GAEhD,CACDhlC,KAAKsoF,iBAAiBz9E,GAAKM,KAAKoC,IAA+B,EAA3BvN,KAAKsoF,iBAAiBz9E,GAAQ7K,KAAK+sB,KAAKurB,SAASztC,GAAGm6B,YAAYniC,OAAS,EAC7G,CAED,MAAM4vK,EAAqCzyK,KAAKqoF,oBACtB,MAAtBoqF,GAA8BzyK,KAAK+sB,KAAKqZ,qBAC3CpmC,KAAK2yF,yBAAyB3yF,KAAKmnB,SAAWsrJ,EAAmBztI,YAAYtuB,YAOxE1W,KAAK00B,MAAMyxC,UAAYnmE,KAAK46C,IAAM56C,KAAKyqF,UAAUmrB,iBAAmB51G,KAAKyqF,UAAUmrB,gBAAkB51G,KAAKyqF,UAAUorB,mBAAqB71G,KAAK46C,MACnJ56C,KAAKmnB,QAAUnnB,KAAKyqF,UAAUqrB,qBAC9B91G,KAAKyqF,UAAUqrB,oBAAsB91G,KAAKyqF,UAAUsrB,oBAAsB/1G,KAAKmnB,SAC/EnnB,KAAK+sB,KAAKoJ,SAAWn2B,KAAKyqF,UAAUmrB,gBAAkB51G,KAAKyqF,UAAUorB,mBACrEl1D,EAAe3gD,KAAKyqF,UAAUqrB,oBAAsB91G,KAAKyqF,UAAUsrB,oBAC9B,GAApC/1G,KAAKyqF,UAAUorB,mBAA+D,GAArC71G,KAAKyqF,UAAUsrB,qBACzD/1G,KAAKyqF,UAAU2L,mBACf,EAGMp2F,KAAmB0yK,GAAG,KAE7B,IAAIhrI,EADJ1nC,KAAK0xK,IAAwB,EAE7B,IAEChqI,EAAO1nC,KAAK+sB,KAAK8tB,gBACjB,CAAC,MAAO53C,GAER,YADA4hD,OAAO3hD,MAAM,uLAEb,CACGlD,KAAKwxK,IAAsBxxK,KAAKsxK,KAChCtxK,KAAKyxK,GACRzxK,KAAK6xK,KAEL7xK,KAAKoxK,GAAU9jC,YAAYttI,KAAKiyK,GAAcjyK,KAAK+sB,KAAK2tB,MAAOhT,GAEhE,IAAIyzF,EAAsB,CAAC22C,SAAS,EAAMC,eAAgB/xK,KAAKsxK,GAAiB12H,IAAK56C,KAAK46C,IAAKzzB,QAASnnB,KAAKmnB,QAASvI,WAAY5e,KAAKsoF,iBAAiBtoF,KAAKmnB,SAAU6qJ,YAAahyK,KAAKiyK,GAAc10E,OAAQv9F,KAAKu9F,OAAQ9S,UAAWzqF,KAAKyqF,UAAUmgF,UAClP5qK,KAAKwxK,GACRxxK,KAAKmyK,GAAWh3C,EAAOzzF,GAEvB1nC,KAAKkyK,GAAc/2C,EAAOzzF,GAE3B1nC,KAAKwxK,IAAuB,EAC5BxxK,KAAKyxK,IAAmB,CAAK,EAhR7BzxK,KAAKi2B,SAASygG,MAAM12H,KAAKwyK,IAEzB1rJ,GAAYuG,SAASrtB,KAAKq2F,MAAMm7C,YAChC7vB,GAAOC,UAAU5hH,KAAKq2F,MAAMwrB,QAE6B,MAArDh9D,OAAO8tH,eAAenvK,QAAQ,sBACjCqhD,OAAO8tH,eAAer1E,QAAQ,mBAAoB,KAClDz4C,OAAO8tH,eAAer1E,QAAQ,kBAAmB,KACjDz4C,OAAO8tH,eAAer1E,QAAQ,kBAAmB,MAGlD,IAAIs1E,EAAqB/tH,OAAOC,SAASpd,KACvB,IAAdkrI,IACHA,EAAa5yK,KAAKsyK,MAEnBtyK,KAAK+sB,KAAO,IAAIorB,GAAKy6H,GACH,IAAdA,GAAkCplJ,MAAdolJ,IACvB58E,GAAsBh2F,KAAK+sB,MAC3B/sB,KAAK+sB,KAAKutB,MAAQt6C,KAAKq2F,MAAMC,cAE9Bs8E,EAAa5yK,KAAK+sB,KAAK8tB,iBACvB76C,KAAK00B,MAAQ,IAAIoT,GAAM9nC,KAAK+sB,MAC5B/sB,KAAK00B,MAAM/S,OAAS3hB,KAAK6yK,KACzB7yK,KAAK00B,MAAM0zC,0BAA4B/qD,EAEvC,IAAI89G,EAA6Bn7H,KAAKqyK,KACzB,MAATl3C,IAEHA,EAAQ,CAAC22C,SAAS,EAAOC,eAAgB,EAAGn3H,IAAK,EAAGzzB,QAAS,EAAGvI,WAAY,EAAGozJ,YAAarlC,KAAepvC,OAAQ,KAAM9S,UAAWzqF,KAAKyqF,UAAUmgF,WAE3Hp9I,MAArB2tG,EAAM62C,cAA0B72C,EAAM62C,YAAcrlC,MACxD3sI,KAAKkyK,GAAc/2C,EAAOy3C,GAC1B/tH,OAAO3gD,iBAAiB,aAAclE,KAAK2xK,IAC3C9sH,OAAO3gD,iBAAiB,WAAYlE,KAAK2xK,IAEzC3xK,KAAK46C,IAAkB,EAAZugF,EAAMvgF,IACjB56C,KAAKmnB,QAA0B,EAAhBg0G,EAAMh0G,QACrB,IAAK,IAAItc,EAAY,EAAGA,GAAK7K,KAAKmnB,QAAStc,IAAK7K,KAAKsoF,iBAAiBz9E,GAAK,EAC3E7K,KAAKsoF,iBAAiBtoF,KAAKmnB,SAA8B,EAAnBg0G,EAAMv8G,WAC5C5e,KAAKiyK,GAAe92C,EAAM62C,YAE1BhyK,KAAKu9F,OAAS49B,EAAM59B,OACpBv9F,KAAKyqF,UAAUogF,SAAS1vC,EAAM1wC,WAM9B,IAAK,MAAMqoF,IAAa,CAAC,QAAS,SAAU,QAAS,QAAS,UAAW,YAAa,YAAa,UAAW,aAAc,YAAa,WAAY,eACpJjuH,OAAO3gD,iBAAiB4uK,EAAW9yK,KAAKuyK,IAGzCvyK,KAAKwyK,KACLxyK,KAAKqqE,YAAc,IAAIw+F,GAAgB7oK,K,CAGjC,uBAAAslK,GACN,MAAMnqC,EAAsBn7H,KAAKqyK,KACjCryK,KAAKq2F,MAAMslE,mBAAqB37J,KAAKq2F,MAAMslE,kBAC3C37J,KAAKkyK,GAAc/2C,EAAOn7H,KAAK+sB,KAAK8tB,iB,CAG7B,EAAAw3H,GACP,GAAIryK,KAAKq2F,MAAMslE,kBACd,OAAO92G,OAAO+sH,QAAQz2C,MAChB,CACN,MAAM2vC,EAAY/sH,KAAKC,MAAM6G,OAAO8tH,eAAenvK,QAAQqhD,OAAO8tH,eAAenvK,QAAQ,sBACzF,OAAe,MAARsnK,EAAe,KAAOA,EAAK3vC,KAClC,C,CAGM,EAAAm3C,GACP,GAAItyK,KAAKq2F,MAAMslE,kBACd,OAAO92G,OAAOC,SAASpd,KACjB,CACN,MAAMojI,EAAY/sH,KAAKC,MAAM6G,OAAO8tH,eAAenvK,QAAQqhD,OAAO8tH,eAAenvK,QAAQ,sBACzF,OAAe,MAARsnK,EAAe,GAAKA,EAAKpjI,IAChC,C,CAGM,EAAAwqI,CAAc/2C,EAAqBzzF,GACtC1nC,KAAKq2F,MAAMslE,kBACd92G,OAAO+sH,QAAQmB,aAAa53C,EAAO,GAAI,IAAMzzF,IAE7Cmd,OAAO8tH,eAAer1E,QAAQz4C,OAAO8tH,eAAenvK,QAAQ,qBAAuB,IAAKu6C,KAAKklD,UAAU,CAACk4B,QAAOzzF,UAC/Gmd,OAAO+sH,QAAQmB,aAAa,KAAM,GAAIjuH,SAAS2B,U,CAIzC,EAAA0rH,CAAWh3C,EAAqBzzF,GACvC,GAAI1nC,KAAKq2F,MAAMslE,kBACd92G,OAAO+sH,QAAQoB,UAAU73C,EAAO,GAAI,IAAMzzF,OACpC,CACN,IAAIurI,EAAuBtrJ,OAAOk9B,OAAO8tH,eAAenvK,QAAQ,qBAC5D0vK,EAAsBvrJ,OAAOk9B,OAAO8tH,eAAenvK,QAAQ,oBAC/DyvK,GAAgBA,EAAe,GAAK9B,GAAagC,GACjDtuH,OAAO8tH,eAAer1E,QAAQ,mBAAoBpmE,OAAO+7I,IACzDpuH,OAAO8tH,eAAer1E,QAAQ,kBAAmBpmE,OAAO+7I,IACpDA,GAAgBC,IACnBA,GAAeA,EAAc,GAAK/B,GAAagC,GAC/CtuH,OAAO8tH,eAAer1E,QAAQ,kBAAmBpmE,OAAOg8I,KAExDruH,OAAO8tH,eAAer1E,QAAQpmE,OAAO+7I,GAAel1H,KAAKklD,UAAU,CAACk4B,QAAOzzF,UAC5Emd,OAAO+sH,QAAQmB,aAAa,KAAM,GAAIjuH,SAAS2B,SAC/C,CACDzmD,KAAKuxK,GAAsBp2C,EAAM42C,c,CAG3B,cAAAhH,GACN,OAAO/qK,KAAKuxK,GAAsBvxK,KAAKsxK,E,CAGhC,EAAA8B,GACP,GAAIpzK,KAAKq2F,MAAMslE,kBACd92G,OAAO+sH,QAAQyB,cACT,CACN,IAAIJ,EAAuBtrJ,OAAOk9B,OAAO8tH,eAAenvK,QAAQ,qBAE5DyvK,GADsBtrJ,OAAOk9B,OAAO8tH,eAAenvK,QAAQ,sBAE9DyvK,GAAgBA,EAAe,GAAK9B,GAAagC,GACjDtuH,OAAO8tH,eAAer1E,QAAQ,mBAAoBpmE,OAAO+7I,IACzDluH,WAAW/kD,KAAK2xK,IAEjB,C,CAGM,EAAA2B,GACP,GAAItzK,KAAKq2F,MAAMslE,kBACd92G,OAAO+sH,QAAQ2B,WACT,CACN,IAAIN,EAAuBtrJ,OAAOk9B,OAAO8tH,eAAenvK,QAAQ,qBAE5DyvK,GADsBtrJ,OAAOk9B,OAAO8tH,eAAenvK,QAAQ,sBAE9DyvK,GAAgBA,EAAe9B,GAAagC,GAAsB,GAAKhC,GAAagC,GACpFtuH,OAAO8tH,eAAer1E,QAAQ,mBAAoBpmE,OAAO+7I,IACzDluH,WAAW/kD,KAAK2xK,IAEjB,C,CA0IK,MAAA7/E,CAAOpQ,EAAgB/jE,GAAmB,EAAO61J,GAAmB,GACtE9xF,EAAOb,UACV7gF,KAAKqxK,GAAgB,KACjB1zJ,GAAS3d,KAAKszK,OAElB5xF,EAAOZ,SACP9gF,KAAKqxK,GAAgB3vF,EACrB1hF,KAAKwxK,GAAuBxxK,KAAKwxK,KAAyB7zJ,EAC1D3d,KAAKyxK,GAAmBzxK,KAAKyxK,IAAoB+B,EAC5CxzK,KAAK0xK,KAIT7sH,OAAO2vE,sBAAsBx0H,KAAK0yK,IAClC1yK,KAAK0xK,IAAwB,G,CAKxB,EAAAG,GACP7xK,KAAKiyK,GAAetlC,I,CAGd,UAAAu7B,CAAW3qE,GACjBv9F,KAAKu9F,OAASA,EACd,MAAM71D,EAAe1nC,KAAK+sB,KAAK8tB,iBAC/B76C,KAAKsxK,KACL,MAAMn2C,EAAQ,CAAC22C,SAAS,EAAMC,eAAgB/xK,KAAKsxK,GAAiB12H,IAAK56C,KAAK46C,IAAKzzB,QAASnnB,KAAKmnB,QAASvI,WAAY5e,KAAKsoF,iBAAiBtoF,KAAKmnB,SAAU6qJ,YAAahyK,KAAKiyK,GAAc10E,OAAQv9F,KAAKu9F,OAAQ9S,UAAWzqF,KAAKyqF,UAAUmgF,UAC1O5qK,KAAKmyK,GAAWh3C,EAAOzzF,E,CAGjB,IAAAy5C,GACsBnhF,KAAKqyK,KACvBP,SAAS9xK,KAAKszK,I,CAGlB,IAAAhyF,GACNthF,KAAKozK,I,CAGC,oBAAA5vE,CAAqB9hB,GAC3B1hF,KAAKqxK,GAAgB3vF,C,CAGf,gBAAA0wF,GACNpyK,KAAKqxK,GAAgB,I,CAGf,aAAAruE,CAActhB,GACpB,OAAiB,MAAVA,GAAkBA,GAAU1hF,KAAKqxK,E,CAGlC,aAAA5rD,GACNzlH,KAAK46C,IAAM,EACX56C,KAAKmnB,QAAU,EACfnnB,KAAK40B,aAAe,EACpB50B,KAAK+2B,iBAAmB,EACxB/2B,KAAK00B,MAAM63C,cACXvsE,KAAKi2B,SAASC,S,CAGR,SAAA4rI,CAAUzhI,GAChBrgC,KAAKq2F,MAAM10E,OAAS0e,EACpBrgC,KAAKq2F,MAAMgjB,OACXr5G,KAAK00B,MAAM/S,OAAS3hB,KAAK6yK,I,CAGlB,EAAAA,GACP,OAAO1nK,KAAKoC,IAAI,EAAKpC,KAAKiB,IAAIpM,KAAKq2F,MAAM10E,OAAS,GAAM,KAAQxW,KAAKiB,IAAI,GAAMpM,KAAKq2F,MAAM10E,OAAS,IAAQ,G,CAGrG,iBAAA0mE,CAAkBorF,EAAoB,GAC5C,OAAOzzK,KAAK+sB,KAAK48B,WAAW3pD,KAAKmnB,QAASnnB,KAAK46C,IAAM64H,E,CAG/C,oBAAA/tF,CAAqB+tF,EAAoB,GAC/C,GAAiB,GAAbA,EACH,OAAOzzK,KAAKsoF,iBAAiBtoF,KAAKmnB,SAC5B,CACN,MAAMwzB,EAA0B36C,KAAKqoF,kBAAkBorF,GACvD,OAAkB,MAAX94H,EAAkB,EAAIA,EAAQ3V,YAAY,EAC3C,C,CAGD,eAAA0uI,GACN,MAA6B,QAArB1zK,KAAKq2F,MAAMwrB,OAAoBh9D,OAAO8uH,YAAc,IAAO9uH,OAAO8uH,YAAc,G,CAGlF,WAAA7+I,GAEN,OAAS90B,KAAK0zK,oBAAqB1zK,KAAKq2F,MAAM8iC,qBAAyBn5H,KAAKm7J,iBAAwC,QAArBn7J,KAAKq2F,MAAMwrB,OAA0B,GAAL,E,CAGzH,gBAAAzqF,GACN,MAAMw8I,EAAoB5zK,KAAK0zK,mBAAqB1zK,KAAK+sB,KAAKiK,kBAAoB,GAAMh3B,KAAK+sB,KAAKoJ,SAAWn2B,KAAKy1B,kBAAoBz1B,KAAK+sB,KAAKiK,kBAAoB,EAGpK,OAD+Bh3B,KAAK0zK,oBAA6C,QAArB1zK,KAAKq2F,MAAMwrB,QAAqB7hH,KAAK+sB,KAAKiK,kBAAoB,IAAOh3B,KAAK+sB,KAAKiK,kBAAoB,IACzI,GAAM48I,EAAW,GAAK,E,CAGtC,aAAAzY,GACN,OAAQn7J,KAAK0zK,mBAA2C,SAArB1zK,KAAKq2F,MAAMwrB,M,CAGxC,qBAAAyY,GACN,OAAOt6H,KAAKm7J,gBAAkBn7J,KAAKq2F,MAAMmqE,eAAiBiQ,GAAYC,qB,CAGhE,oBAAA9pC,GACL,OAAO5mI,KAAKs6H,wBAA0Bh5H,EAAOsY,iBAAmB,C,CAG3D,oBAAA8gH,CAAqBvzG,GAC3B,MAAMkzG,EAA6Br6H,KAAKs6H,wBACxC,OAAOnvH,KAAK2L,IAAI,EAAG3L,KAAKoC,IAAIjM,EAAOwY,aAAeugH,EAAoBlvH,KAAKgS,KAAKnd,KAAK+sB,KAAKurB,SAASnxB,GAAS6a,OAA8B,GAArBq4F,I,EAhZ9F82C,GAAmBgC,GAAW,ICrCvD,MAAMxvF,GAAoB,IAAIwtF,GACxBtJ,GAAqB,IAAIhd,GAAWlnE,IA+E1C,GA5E4C9/E,SAASytI,eAAe,0BAC7CrtI,YAAY4jK,GAAOvP,WAC1CuP,GAAOjN,cAGPiN,GAAOvP,UAAUub,WAAa,QAC9BhM,GAAOvP,UAAUwb,uBAAuB,gBAAgB,GAAGD,WAAa,QACxEhM,GAAOvP,UAAUwb,uBAAuB,iBAAiB,GAAGD,WAAa,QACzEhM,GAAOvP,UAAUwb,uBAAuB,wBAAwB,GAAGD,WAAa,QAChFhM,GAAOvP,UAAUwb,uBAAuB,4BAA4B,GAAGD,WAAa,QACpFhM,GAAOvP,UAAUwb,uBAAuB,yBAAyB,GAAGD,WAAa,QACjFhM,GAAOvP,UAAUwb,uBAAuB,gBAAgB,GAAGD,WAAa,QAGxEnrB,EAAE,sBAAsBqrB,QAAQ,CAAEC,mBAAmB,IACrDtrB,EAAE,qBAAqBqrB,QAAQ,CAAEC,mBAAmB,IAGpDtrB,EAAE,QAAQx7C,GAAG,QAAS,oDAAoD,WACzEw7C,EAAE1oJ,MAAMi0K,WAAWC,QACpB,IAGAxrB,EAAE,sBAAsBx7C,GAAG,gBAAgB,WAC1Cw7C,EAAE,4BAA4ByrB,IAAI,UAAW,GAC7CzrB,EAAE,qBAAqByrB,IAAI,UAAW,GACtCzrB,EAAE,sBACF3jG,YAAW,KACV,IAAIqvH,EAAS1rB,EAAE,oDACX/vB,EAAU+vB,EAAE,qDAEhBA,EAAE2rB,KAAKD,GAAQ,CAACtvK,EAAOu8B,KACtBqnH,EAAErnH,GAAG4yI,WAAWjY,OAChBtT,EAAErnH,GAAG,GAAGvc,aAAa,QAAS,UAAYgC,GAAYkG,gBAAgB22D,GAAI52D,KAAM42D,GAAIx8D,SAASgB,YAAc,IAAI,IAEhHugI,EAAE2rB,KAAK17C,GAAS,CAAC7zH,EAAOu8B,KACvBqnH,EAAErnH,GAAG,GAAGvc,aAAa,QAAS,UAAYgC,GAAYkG,gBAAgB22D,GAAI52D,KAAM42D,GAAIx8D,SAASgB,YAAc,IAAI,IAGhHugI,EAAE,4BAA4ByrB,IAAI,UAAW,EAAE,GAC7C,EACJ,IAGAzrB,EAAE,qBAAqBx7C,GAAG,gBAAgB,WACzCw7C,EAAE,4BAA4ByrB,IAAI,UAAW,GAC7CzrB,EAAE,qBAAqByrB,IAAI,UAAW,GACtCzrB,EAAE,qBACF3jG,YAAW,KACV,IAAIqvH,EAAS1rB,EAAE,oDACX/vB,EAAU+vB,EAAE,qDAEhBA,EAAE2rB,KAAKD,GAAQ,CAACtvK,EAAOu8B,KACtBqnH,EAAErnH,GAAG4yI,WAAWjY,OAChBtT,EAAErnH,GAAG,GAAGvc,aAAa,QAAS,UAAYgC,GAAYkG,gBAAgB22D,GAAI52D,KAAM42D,GAAIx8D,SAASgB,YAAc,IAAI,IAEhHugI,EAAE2rB,KAAK17C,GAAS,CAAC7zH,EAAOu8B,KACvBqnH,EAAErnH,GAAG,GAAGvc,aAAa,QAAS,UAAYgC,GAAYkG,gBAAgB22D,GAAI52D,KAAM42D,GAAIx8D,SAASgB,YAAc,IAAI,IAGhHugI,EAAE,4BAA4ByrB,IAAI,UAAW,EAAE,GAC7C,EACJ,IAIAzrB,EAAE,sBAAsBx7C,GAAG,SAAU26D,GAAOrF,IAC5C9Z,EAAE,sBAAsBx7C,GAAG,gBAAiB26D,GAAOvF,IAEnD5Z,EAAE,qBAAqBx7C,GAAG,SAAU26D,GAAOnF,IAC3Cha,EAAE,qBAAqBx7C,GAAG,gBAAiB26D,GAAOvF,IAGlDuF,GAAOvP,UAAU56D,SAGZrgF,GAAYsmE,GAAI0S,MAAMqlE,SAAU,CACpC,SAAS4Y,KACHzwK,SAAS4rH,SACb9rC,GAAIjvD,MAAMg3C,OACVm8F,GAAOjnE,mBACP/7C,OAAOm4C,oBAAoB,mBAAoBs3E,I,CAG7CzwK,SAAS4rH,OAEZ5qE,OAAO3gD,iBAAiB,mBAAoBowK,IAG5CzvH,OAAOE,WAAWuvH,GAEnB,C,MAKG,sBAAuB1C,UAASA,QAAQ2C,kBAAoB,UAEhE1M,GAAOjnE,mBAEH,kBAAmBrjF,WACrBA,UAAUi3J,cAAcC,SAAS,qBAAsB,CAACC,eAAgB,MAAOC,MAAO,MAAM3xK,OAAM,S"}